[
    {
        "answer": "SELECT delegate FROM table_1825751_14 WHERE pageant = \"Elite Model Look\" AND year > 1993.0",
        "context": "CREATE TABLE table_1825751_14 (delegate VARCHAR, pageant VARCHAR, year VARCHAR)",
        "question": "where pageant is elite model look and year is bigger than 1993.0, who is the delegate?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_1825751_14 WHERE pageant = \"Miss Globe International\" AND delegate = \"Karen Loren Medrano Agustin\"",
        "context": "CREATE TABLE table_1825751_14 (year VARCHAR, pageant VARCHAR, delegate VARCHAR)",
        "question": "How many years was the pageant miss globe international and delegate was karen loren medrano agustin?"
    },
    {
        "answer": "SELECT COUNT(pageant) FROM table_1825751_14 WHERE delegate = \"Margaret Ann Awitan Bayot\"",
        "context": "CREATE TABLE table_1825751_14 (pageant VARCHAR, delegate VARCHAR)",
        "question": "How many pageants were margaret ann awitan bayot the delegate of?"
    },
    {
        "answer": "SELECT AVG(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15",
        "context": "CREATE TABLE department (num_employees INTEGER, ranking INTEGER)",
        "question": "What is the average number of employees of the departments whose rank is between 10 and 15?"
    },
    {
        "answer": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T3.born_state = 'Alabama'",
        "context": "CREATE TABLE department (creation VARCHAR, department_id VARCHAR); CREATE TABLE management (department_id VARCHAR, head_id VARCHAR); CREATE TABLE head (head_id VARCHAR, born_state VARCHAR)",
        "question": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?"
    },
    {
        "answer": "SELECT location FROM table_182499_1 WHERE substrate = \"Coproporphyrinogen III\"",
        "context": "CREATE TABLE table_182499_1 (location VARCHAR, substrate VARCHAR)",
        "question": "give the location of subtrate coproporphyrinogen iii"
    },
    {
        "answer": "SELECT T1.name, T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'",
        "context": "CREATE TABLE management (department_id VARCHAR, temporary_acting VARCHAR); CREATE TABLE department (name VARCHAR, num_employees VARCHAR, department_id VARCHAR)",
        "question": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?"
    },
    {
        "answer": "SELECT COUNT(*) FROM department WHERE NOT department_id IN (SELECT department_id FROM management)",
        "context": "CREATE TABLE management (department_id VARCHAR); CREATE TABLE department (department_id VARCHAR)",
        "question": "How many departments are led by heads who are not mentioned?"
    },
    {
        "answer": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'",
        "context": "CREATE TABLE management (department_id VARCHAR, head_id VARCHAR); CREATE TABLE head (born_state VARCHAR, head_id VARCHAR); CREATE TABLE department (department_id VARCHAR, name VARCHAR)",
        "question": "List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born."
    },
    {
        "answer": "SELECT T1.department_id, T1.name, COUNT(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING COUNT(*) > 1",
        "context": "CREATE TABLE management (department_id VARCHAR); CREATE TABLE department (department_id VARCHAR, name VARCHAR)",
        "question": "Which department has more than 1 head at a time? List the id, name and the number of heads."
    },
    {
        "answer": "SELECT COUNT(binibining_pilipinas_international) FROM table_1825751_4 WHERE binibining_pilipinas_world = \"Maria Karla Bautista\"",
        "context": "CREATE TABLE table_1825751_4 (binibining_pilipinas_international VARCHAR, binibining_pilipinas_world VARCHAR)",
        "question": "How many winners of binibining pilipinas-International when Maria Karla Bautista won binibining pilipinas-world?"
    },
    {
        "answer": "SELECT date FROM table_name_59 WHERE venue = \"punt road oval\"",
        "context": "CREATE TABLE table_name_59 (date VARCHAR, venue VARCHAR)",
        "question": "What day did the VFL play Punt Road Oval?"
    },
    {
        "answer": "SELECT COUNT(miss_universe_philippines) FROM table_1825751_4 WHERE binibining_pilipinas_international = \"Margaret Ann Bayot\"",
        "context": "CREATE TABLE table_1825751_4 (miss_universe_philippines VARCHAR, binibining_pilipinas_international VARCHAR)",
        "question": "When Margaret Ann Bayot won binibining pilipinas-international, how many winners of Miss Universe Philippines were there?"
    },
    {
        "answer": "SELECT binibining_pilipinas_international FROM table_1825751_4 WHERE miss_universe_philippines = \"Gionna Cabrera\"",
        "context": "CREATE TABLE table_1825751_4 (binibining_pilipinas_international VARCHAR, miss_universe_philippines VARCHAR)",
        "question": "Who was the winner of binibining pilipinas-International wheh Gionna Cabrera won Miss Universe Philippines?"
    },
    {
        "answer": "SELECT serial_no FROM table_name_71 WHERE colour = \"black\" AND pilot_car_no > 2 AND engine_no = 1008",
        "context": "CREATE TABLE table_name_71 (serial_no VARCHAR, engine_no VARCHAR, colour VARCHAR, pilot_car_no VARCHAR)",
        "question": "What is the serial number of the pilot car that is black, has a pilot car number larger than 2, and an engine number of 1008?"
    },
    {
        "answer": "SELECT T2.Year, T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID",
        "context": "CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR); CREATE TABLE farm_competition (Year VARCHAR, Host_city_ID VARCHAR)",
        "question": "Show the years and the official names of the host cities of competitions."
    },
    {
        "answer": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*) > 1",
        "context": "CREATE TABLE farm_competition (Host_city_ID VARCHAR); CREATE TABLE city (Official_Name VARCHAR, City_ID VARCHAR)",
        "question": "Show the official names of the cities that have hosted more than one competition."
    },
    {
        "answer": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000",
        "context": "CREATE TABLE city (City_ID VARCHAR, Population INTEGER); CREATE TABLE farm_competition (Theme VARCHAR, Host_city_ID VARCHAR)",
        "question": "Please show the themes of competitions with host cities having populations larger than 1000."
    },
    {
        "answer": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE student_course_registrations (course_Id VARCHAR)",
        "question": "which course has most number of registered students?"
    },
    {
        "answer": "SELECT COUNT(cover_date) FROM table_18305523_2 WHERE story_title = \"DEVASTATION DERBY! (Part 1)\"",
        "context": "CREATE TABLE table_18305523_2 (cover_date VARCHAR, story_title VARCHAR)",
        "question": "How many cover dates does the story \"Devastation Derby! (part 1)\" have?"
    },
    {
        "answer": "SELECT student_id FROM students WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance)",
        "context": "CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE students (student_id VARCHAR)",
        "question": "List the id of students who never attends courses?"
    },
    {
        "answer": "SELECT T1.student_id, T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id",
        "context": "CREATE TABLE courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR, course_id VARCHAR)",
        "question": "What are the ids of all students for courses and what are the names of those courses?"
    },
    {
        "answer": "SELECT COUNT(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"",
        "context": "CREATE TABLE student_course_attendance (course_id VARCHAR); CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR)",
        "question": "How many students attend course English?"
    },
    {
        "answer": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE students (student_details VARCHAR, student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR)",
        "question": "What is detail of the student who registered the most number of courses?"
    },
    {
        "answer": "SELECT SUM(platform) FROM table_name_98 WHERE frequency__per_hour_ = 4 AND destination = \"west croydon\"",
        "context": "CREATE TABLE table_name_98 (platform INTEGER, frequency__per_hour_ VARCHAR, destination VARCHAR)",
        "question": "what is the platform when the frequency (per hour) is 4 and the destination is west croydon?"
    },
    {
        "answer": "SELECT T3.course_name, COUNT(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id",
        "context": "CREATE TABLE students (student_id VARCHAR); CREATE TABLE courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR)",
        "question": "How many registed students do each course have? List course name and the number of their registered students?"
    },
    {
        "answer": "SELECT MAX(platform) FROM table_name_32 WHERE frequency__per_hour_ = 4 AND operator = \"london overground\" AND destination = \"west croydon\"",
        "context": "CREATE TABLE table_name_32 (platform INTEGER, destination VARCHAR, frequency__per_hour_ VARCHAR, operator VARCHAR)",
        "question": "what is the highest platform number when the frequency (per hour) is 4, the operator is london overground and the destination is west croydon?"
    },
    {
        "answer": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\"",
        "context": "CREATE TABLE candidates (candidate_id VARCHAR); CREATE TABLE people (cell_mobile_number VARCHAR, person_id VARCHAR); CREATE TABLE candidate_assessments (candidate_id VARCHAR, asessment_outcome_code VARCHAR)",
        "question": "Find the cell mobile number of the candidates whose assessment code is \"Fail\"?"
    },
    {
        "answer": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id",
        "context": "CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE people_addresses (address_id VARCHAR)",
        "question": "Find distinct cities of addresses of people?"
    },
    {
        "answer": "SELECT departure FROM table_18333678_2 WHERE going_to = \"Bourne\" AND arrival = \"11.45\"",
        "context": "CREATE TABLE table_18333678_2 (departure VARCHAR, going_to VARCHAR, arrival VARCHAR)",
        "question": "when does the train arriving at bourne at 11.45 departure "
    },
    {
        "answer": "SELECT monarch FROM table_name_67 WHERE heir = \"robert curthose\" AND reason = \"father became king\"",
        "context": "CREATE TABLE table_name_67 (monarch VARCHAR, heir VARCHAR, reason VARCHAR)",
        "question": "Who is the Monarch whose Heir is Robert Curthose when the Reason is that the father became king?"
    },
    {
        "answer": "SELECT departure FROM table_18333678_2 WHERE arrival = \"11.45\" AND going_to = \"Stamford East\"",
        "context": "CREATE TABLE table_18333678_2 (departure VARCHAR, arrival VARCHAR, going_to VARCHAR)",
        "question": "when does the train arriving at stamford east at 11.45 departure "
    },
    {
        "answer": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id",
        "context": "CREATE TABLE students (student_id VARCHAR); CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE people_addresses (address_id VARCHAR, person_id VARCHAR)",
        "question": "Find distinct cities of address of students?"
    },
    {
        "answer": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121",
        "context": "CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR); CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR)",
        "question": "Find the id of courses which are registered or attended by student whose id is 121?"
    },
    {
        "answer": "SELECT * FROM student_course_registrations WHERE NOT student_id IN (SELECT student_id FROM student_course_attendance)",
        "context": "CREATE TABLE student_course_attendance (student_id VARCHAR); CREATE TABLE student_course_registrations (student_id VARCHAR)",
        "question": "What are all info of students who registered courses but not attended courses?"
    },
    {
        "answer": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date",
        "context": "CREATE TABLE student_course_registrations (student_id VARCHAR, course_id VARCHAR, registration_date VARCHAR); CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR)",
        "question": "List the id of students who registered course statistics in the order of registration date."
    },
    {
        "answer": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance",
        "context": "CREATE TABLE student_course_attendance (student_id VARCHAR, course_id VARCHAR, date_of_attendance VARCHAR); CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR)",
        "question": "List the id of students who attended  statistics courses in the order of attendance date."
    },
    {
        "answer": "SELECT tottenham_hotspur_career FROM table_name_26 WHERE goals = \"10\" AND nationality = \"england\" AND position = \"df\" AND club_apps = \"118\"",
        "context": "CREATE TABLE table_name_26 (tottenham_hotspur_career VARCHAR, club_apps VARCHAR, position VARCHAR, goals VARCHAR, nationality VARCHAR)",
        "question": "What were the years of the Tottenham Hotspur career for the player with 10 goals, from England, played the df position, and had 118 club apps?"
    },
    {
        "answer": "SELECT zip_code, AVG(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code",
        "context": "CREATE TABLE weather (zip_code VARCHAR, mean_temperature_f INTEGER, date VARCHAR)",
        "question": "For each zip code, return the average mean temperature of August there."
    },
    {
        "answer": "SELECT name FROM table_name_27 WHERE authority = \"state\" AND roll = 318",
        "context": "CREATE TABLE table_name_27 (name VARCHAR, authority VARCHAR, roll VARCHAR)",
        "question": "Which school has a state authority and a roll of 318?"
    },
    {
        "answer": "SELECT mlb_team FROM table_18373863_2 WHERE years_played = \"2008\" AND fcsl_team = \"DeLand\"",
        "context": "CREATE TABLE table_18373863_2 (mlb_team VARCHAR, years_played VARCHAR, fcsl_team VARCHAR)",
        "question": "when deland is the fcsl team and 2008 is the year played who is the mlb team?"
    },
    {
        "answer": "SELECT Regular AS season FROM table_name_25 WHERE tournament < 2 AND total > 0 AND team = \"kansas\"",
        "context": "CREATE TABLE table_name_25 (Regular VARCHAR, team VARCHAR, tournament VARCHAR, total VARCHAR)",
        "question": "How many regular season titles did Kansas receive when they received fewer than 2 tournament titles and more than 0 total titles?"
    },
    {
        "answer": "SELECT start_station_name, start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE trip (start_station_name VARCHAR, start_station_id VARCHAR, start_date VARCHAR)",
        "question": "Which start station had the most trips starting from August? Give me the name and id of the station."
    },
    {
        "answer": "SELECT home_team FROM table_name_39 WHERE away_team = \"geelong\"",
        "context": "CREATE TABLE table_name_39 (home_team VARCHAR, away_team VARCHAR)",
        "question": "Which home team played against Geelong?"
    },
    {
        "answer": "SELECT id FROM station WHERE city = \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING AVG(bikes_available) > 10",
        "context": "CREATE TABLE status (id VARCHAR, station_id VARCHAR, city VARCHAR, bikes_available INTEGER); CREATE TABLE station (id VARCHAR, station_id VARCHAR, city VARCHAR, bikes_available INTEGER)",
        "question": "What are the ids of stations that are located in San Francisco and have average bike availability above 10."
    },
    {
        "answer": "SELECT T1.name, T1.id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING AVG(T2.bikes_available) > 14 UNION SELECT name, id FROM station WHERE installation_date LIKE \"12/%\"",
        "context": "CREATE TABLE station (name VARCHAR, id VARCHAR); CREATE TABLE station (name VARCHAR, id VARCHAR, installation_date VARCHAR); CREATE TABLE status (station_id VARCHAR, bikes_available INTEGER)",
        "question": "What are the names and ids of stations that had more than 14 bikes available on average or were installed in December?"
    },
    {
        "answer": "SELECT greek__modern_ FROM table_1841901_1 WHERE polish__extinct_ = \"s\u0142ysza\u0142e\u015b by\u0142 / s\u0142ysza\u0142a\u015b by\u0142a\"",
        "context": "CREATE TABLE table_1841901_1 (greek__modern_ VARCHAR, polish__extinct_ VARCHAR)",
        "question": "Name the greek modern for  s\u0142ysza\u0142e\u015b by\u0142 / s\u0142ysza\u0142a\u015b by\u0142a"
    },
    {
        "answer": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY AVG(mean_sea_level_pressure_inches) LIMIT 1",
        "context": "CREATE TABLE weather (zip_code VARCHAR, mean_sea_level_pressure_inches INTEGER)",
        "question": "What is the zip code in which the average mean sea level pressure is the lowest?"
    },
    {
        "answer": "SELECT us_air_date FROM table_18424435_4 WHERE canadian_viewers__million_ = \"1.452\"",
        "context": "CREATE TABLE table_18424435_4 (us_air_date VARCHAR, canadian_viewers__million_ VARCHAR)",
        "question": "What was the air date in the U.S. for the episode that had 1.452 million Canadian viewers?"
    },
    {
        "answer": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.zip_code HAVING AVG(T2.mean_temperature_f) > 60",
        "context": "CREATE TABLE trip (id VARCHAR, zip_code VARCHAR); CREATE TABLE weather (zip_code VARCHAR, mean_temperature_f INTEGER)",
        "question": "Give me ids for all the trip that took place in a zip code area with average mean temperature above 60."
    },
    {
        "answer": "SELECT date, zip_code FROM weather WHERE min_dew_point_f < (SELECT MIN(min_dew_point_f) FROM weather WHERE zip_code = 94107)",
        "context": "CREATE TABLE weather (date VARCHAR, zip_code VARCHAR, min_dew_point_f INTEGER)",
        "question": "On which day and in which zip code was the min dew point lower than any day in zip code 94107?"
    },
    {
        "answer": "SELECT T1.id, T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id",
        "context": "CREATE TABLE station (installation_date VARCHAR, id VARCHAR); CREATE TABLE trip (id VARCHAR, end_station_id VARCHAR)",
        "question": "For each trip, return its ending station's installation date."
    },
    {
        "answer": "SELECT MIN(ligue_1_titles) FROM table_name_80 WHERE position_in_2012_13 = \"010 12th\" AND number_of_seasons_in_ligue_1 > 56",
        "context": "CREATE TABLE table_name_80 (ligue_1_titles INTEGER, position_in_2012_13 VARCHAR, number_of_seasons_in_ligue_1 VARCHAR)",
        "question": "I want to know the lowest ligue 1 titles for position in 2012-13 of 010 12th and number of seasons in ligue 1 more than 56"
    },
    {
        "answer": "SELECT written_by FROM table_18424435_3 WHERE canadian_viewers__million_ = \"1.816\"",
        "context": "CREATE TABLE table_18424435_3 (written_by VARCHAR, canadian_viewers__million_ VARCHAR)",
        "question": "Who wrote the episodes watched by 1.816 million people in Canada?"
    },
    {
        "answer": "SELECT median_house__hold_income FROM table_1840495_2 WHERE place = \"Upper Arlington\"",
        "context": "CREATE TABLE table_1840495_2 (median_house__hold_income VARCHAR, place VARCHAR)",
        "question": "For upper Arlington, what was the median household income?"
    },
    {
        "answer": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING AVG(bikes_available) > 10 EXCEPT SELECT name FROM station WHERE city = \"San Jose\"",
        "context": "CREATE TABLE station (name VARCHAR, id VARCHAR); CREATE TABLE status (station_id VARCHAR); CREATE TABLE station (name VARCHAR, city VARCHAR, bikes_available INTEGER)",
        "question": "What are names of stations that have average bike availability above 10 and are not located in San Jose city?"
    },
    {
        "answer": "SELECT median_house__hold_income FROM table_1840495_2 WHERE population = 2188",
        "context": "CREATE TABLE table_1840495_2 (median_house__hold_income VARCHAR, population VARCHAR)",
        "question": "If the population is 2188, what was the median household income?"
    },
    {
        "answer": "SELECT date, mean_temperature_f, mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3",
        "context": "CREATE TABLE weather (date VARCHAR, mean_temperature_f VARCHAR, mean_humidity VARCHAR, max_gust_speed_mph VARCHAR)",
        "question": "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?"
    },
    {
        "answer": "SELECT per_capita_income FROM table_1840495_2 WHERE median_house__hold_income = \"$57,407\"",
        "context": "CREATE TABLE table_1840495_2 (per_capita_income VARCHAR, median_house__hold_income VARCHAR)",
        "question": "If the median income is $57,407, what is the per capita income?"
    },
    {
        "answer": "SELECT T1.name, T1.long, AVG(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id",
        "context": "CREATE TABLE station (name VARCHAR, long VARCHAR, id VARCHAR); CREATE TABLE trip (duration INTEGER, start_station_id VARCHAR)",
        "question": "For each station, return its longitude and the average duration of trips that started from the station."
    },
    {
        "answer": "SELECT original_air_date FROM table_18427769_1 WHERE directed_by = \"Di Drew\"",
        "context": "CREATE TABLE table_18427769_1 (original_air_date VARCHAR, directed_by VARCHAR)",
        "question": "If Di Drew is the director, what was the original air date for episode A Whole Lot to Lose?"
    },
    {
        "answer": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f >= 70",
        "context": "CREATE TABLE weather (zip_code VARCHAR, max_dew_point_f VARCHAR)",
        "question": "Find all the zip codes in which the max dew point have never reached 70."
    },
    {
        "answer": "SELECT COUNT(population__2010_census_) FROM table_184334_2 WHERE s_barangay = 51",
        "context": "CREATE TABLE table_184334_2 (population__2010_census_ VARCHAR, s_barangay VARCHAR)",
        "question": "What is the population (2010 census) if s barangay is 51?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_46 WHERE home_team = \"melbourne\"",
        "context": "CREATE TABLE table_name_46 (home_team VARCHAR)",
        "question": "When melbourne was the home team what was their score?"
    },
    {
        "answer": "SELECT date, max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1",
        "context": "CREATE TABLE weather (date VARCHAR, max_temperature_f VARCHAR, min_temperature_f VARCHAR)",
        "question": "Find the day in which the difference between the max temperature and min temperature was the smallest. Also report the difference."
    },
    {
        "answer": "SELECT zip_code FROM weather GROUP BY zip_code HAVING AVG(mean_humidity) < 70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING COUNT(*) >= 100",
        "context": "CREATE TABLE weather (zip_code VARCHAR, mean_humidity INTEGER); CREATE TABLE trip (zip_code VARCHAR, mean_humidity INTEGER)",
        "question": "Give me the zip code where the average mean humidity is below 70 and at least 100 trips took place."
    },
    {
        "answer": "SELECT COUNT(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id = T2.start_station_id AND T2.id = T4.id AND T3.id = T4.end_station_id WHERE T1.city = \"Mountain View\" AND T3.city = \"Palo Alto\"",
        "context": "CREATE TABLE station (city VARCHAR, id VARCHAR); CREATE TABLE trip (end_station_id VARCHAR, id VARCHAR); CREATE TABLE station (id VARCHAR, city VARCHAR); CREATE TABLE trip (start_station_id VARCHAR, id VARCHAR)",
        "question": "How many trips started from Mountain View city and ended at Palo Alto city?"
    },
    {
        "answer": "SELECT MIN(owned_since) FROM table_1847523_2 WHERE station = \"KERO-TV\"",
        "context": "CREATE TABLE table_1847523_2 (owned_since INTEGER, station VARCHAR)",
        "question": "What is the minimum stations owned since kero-tv?"
    },
    {
        "answer": "SELECT lyric_fm__mhz_ FROM table_18475946_2 WHERE rnag__mhz_ = \"93.2\"",
        "context": "CREATE TABLE table_18475946_2 (lyric_fm__mhz_ VARCHAR, rnag__mhz_ VARCHAR)",
        "question": "What is the lyric fm for rnag 93.2?"
    },
    {
        "answer": "SELECT world_ranking__1_ FROM table_name_54 WHERE ranking_la__2_ = \"5th\" AND year_of_publication = \"2008\"",
        "context": "CREATE TABLE table_name_54 (world_ranking__1_ VARCHAR, ranking_la__2_ VARCHAR, year_of_publication VARCHAR)",
        "question": "In 2008, what was the world ranking that ranked 5th in L.A.?"
    },
    {
        "answer": "SELECT COUNT(played) FROM table_name_24 WHERE goals_for > 34 AND goals_against > 63",
        "context": "CREATE TABLE table_name_24 (played VARCHAR, goals_for VARCHAR, goals_against VARCHAR)",
        "question": "what is the total number of played when the goals for is more than 34 and goals against is more than 63?"
    },
    {
        "answer": "SELECT SUM(goals_for) FROM table_name_50 WHERE position < 8 AND losses < 10 AND goals_against < 35 AND played < 38",
        "context": "CREATE TABLE table_name_50 (goals_for INTEGER, played VARCHAR, goals_against VARCHAR, position VARCHAR, losses VARCHAR)",
        "question": "what is the sum of goals for when the position is less than 8, the losses is less than 10 the goals against is less than 35 and played is less than 38?"
    },
    {
        "answer": "SELECT state__class_ FROM table_1847180_3 WHERE date_of_successors_formal_installation = \"May 11, 1966\"",
        "context": "CREATE TABLE table_1847180_3 (state__class_ VARCHAR, date_of_successors_formal_installation VARCHAR)",
        "question": "What was the state (class) where the new successor was formally installed on May 11, 1966?"
    },
    {
        "answer": "SELECT MAX(gold) FROM table_name_18 WHERE rank = \"12\" AND nation = \"vietnam\"",
        "context": "CREATE TABLE table_name_18 (gold INTEGER, rank VARCHAR, nation VARCHAR)",
        "question": "what is the highest gold when the rank is 12 for the nation vietnam?"
    },
    {
        "answer": "SELECT Publication_Date FROM publication ORDER BY Price LIMIT 3",
        "context": "CREATE TABLE publication (Publication_Date VARCHAR, Price VARCHAR)",
        "question": "List the publication dates of publications with 3 lowest prices."
    },
    {
        "answer": "SELECT T1.Title, T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID",
        "context": "CREATE TABLE book (Title VARCHAR, Book_ID VARCHAR); CREATE TABLE publication (Publication_Date VARCHAR, Book_ID VARCHAR)",
        "question": "Show the title and publication dates of books."
    },
    {
        "answer": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE publication (Publication_Date VARCHAR)",
        "question": "Please show the most common publication date."
    },
    {
        "answer": "SELECT date FROM table_name_73 WHERE attendance = \"9,535\"",
        "context": "CREATE TABLE table_name_73 (date VARCHAR, attendance VARCHAR)",
        "question": "Which Date has an Attendance of 9,535?"
    },
    {
        "answer": "SELECT COUNT(commentator) FROM table_184803_4 WHERE broadcaster = \"ORF\"",
        "context": "CREATE TABLE table_184803_4 (commentator VARCHAR, broadcaster VARCHAR)",
        "question": "how many people commentated where broadcaster is orf"
    },
    {
        "answer": "SELECT team FROM table_name_96 WHERE high_rebounds = \"smith (10)\"",
        "context": "CREATE TABLE table_name_96 (team VARCHAR, high_rebounds VARCHAR)",
        "question": "Name the team which has high rebounds of smith (10)"
    },
    {
        "answer": "SELECT broadcast_date FROM table_1849243_1 WHERE archive = \"16mm t/r\"",
        "context": "CREATE TABLE table_1849243_1 (broadcast_date VARCHAR, archive VARCHAR)",
        "question": "What is the broadcast date of the 16mm t/r episode?"
    },
    {
        "answer": "SELECT tyre FROM table_name_51 WHERE rounds = \"14-15\" AND engine = \"ford cosworth dfv 3.0 v8\" AND chassis = \"m23\"",
        "context": "CREATE TABLE table_name_51 (tyre VARCHAR, chassis VARCHAR, rounds VARCHAR, engine VARCHAR)",
        "question": "When the engine Ford Cosworth DFV 3.0 v8 has a chassis of m23 and in rounds 14-15, what is its Tyre?"
    },
    {
        "answer": "SELECT el_canal_de_las_estrellas FROM table_18498743_1 WHERE ma\u00f1ana_es_para_siempre = \"Impreuna pentru totdeauna\"",
        "context": "CREATE TABLE table_18498743_1 (el_canal_de_las_estrellas VARCHAR, ma\u00f1ana_es_para_siempre VARCHAR)",
        "question": "state el canal de las estrellas where ma\u00f1ana es para siempre is impreuna pentru totdeauna"
    },
    {
        "answer": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID ORDER BY T2.Year DESC",
        "context": "CREATE TABLE musical (Musical_ID VARCHAR, Year VARCHAR); CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR)",
        "question": "Show names of actors in descending order of the year their musical is awarded."
    },
    {
        "answer": "SELECT series FROM table_name_73 WHERE visitor = \"vancouver\" AND date = \"april 16\"",
        "context": "CREATE TABLE table_name_73 (series VARCHAR, visitor VARCHAR, date VARCHAR)",
        "question": "What is the series score of the game with Vancouver as the visiting team on April 16?"
    },
    {
        "answer": "SELECT other FROM table_1850282_7 WHERE species = \"Chironius multiventris septentrionalis\"",
        "context": "CREATE TABLE table_1850282_7 (other VARCHAR, species VARCHAR)",
        "question": "Name the other for chironius multiventris septentrionalis"
    },
    {
        "answer": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = \"The Phantom of the Opera\"",
        "context": "CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR); CREATE TABLE musical (Musical_ID VARCHAR, Name VARCHAR)",
        "question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\"."
    },
    {
        "answer": "SELECT mexico FROM table_18498743_1 WHERE ma\u00f1ana_es_para_siempre = \"Love Never Dies\"",
        "context": "CREATE TABLE table_18498743_1 (mexico VARCHAR, ma\u00f1ana_es_para_siempre VARCHAR)",
        "question": "what is the mexico stat where ma\u00f1ana es para siempre is love never dies"
    },
    {
        "answer": "SELECT COUNT(season) FROM table_1850339_2 WHERE army___navy_score = \"10 Dec. 2016 at Baltimore, MD (M&T Bank Stadium)\"",
        "context": "CREATE TABLE table_1850339_2 (season VARCHAR, army___navy_score VARCHAR)",
        "question": "How many different season have an Army - Navy score of 10 dec. 2016 at Baltimore, MD (M&T Bank Stadium)?"
    },
    {
        "answer": "SELECT MIN(crowd) FROM table_name_79 WHERE home_team = \"richmond\"",
        "context": "CREATE TABLE table_name_79 (crowd INTEGER, home_team VARCHAR)",
        "question": "What is the lowest crowd with home team richmond?"
    },
    {
        "answer": "SELECT COUNT(tourism_receipts__2003___as__percentage_of_exports_) FROM table_18524_6 WHERE tourism_competitiveness__2011___ttci_ = \"3.26\"",
        "context": "CREATE TABLE table_18524_6 (tourism_receipts__2003___as__percentage_of_exports_ VARCHAR, tourism_competitiveness__2011___ttci_ VARCHAR)",
        "question": "Name the tourism receipts 2003 for tourism competitiveness 3.26"
    },
    {
        "answer": "SELECT COUNT(tourism_receipts__2011___us) AS $_per_capita_ FROM table_18524_6 WHERE tourism_receipts__2003___as__percentage_of_gdp_ = \"13.5\"",
        "context": "CREATE TABLE table_18524_6 (tourism_receipts__2011___us VARCHAR, tourism_receipts__2003___as__percentage_of_gdp_ VARCHAR)",
        "question": "Name the total number of tourism receipts 2011 where tourism receipts 2003 13.5"
    },
    {
        "answer": "SELECT object_type FROM table_name_56 WHERE apparent_magnitude > 9.6 AND right_ascension___j2000__ = \"17h59m02.0s\"",
        "context": "CREATE TABLE table_name_56 (object_type VARCHAR, apparent_magnitude VARCHAR, right_ascension___j2000__ VARCHAR)",
        "question": "Which object has an Apparent magnitude larger than 9.6, and a Right ascension ( J2000 ) of 17h59m02.0s?"
    },
    {
        "answer": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'",
        "context": "CREATE TABLE user_profiles (name VARCHAR, email VARCHAR)",
        "question": "Find the names of users whose emails contain \u2018superstar\u2019 or \u2018edu\u2019."
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_18522916_5 WHERE outgoing_manager = \"Daniel Uberti\"",
        "context": "CREATE TABLE table_18522916_5 (date_of_vacancy VARCHAR, outgoing_manager VARCHAR)",
        "question": "Name the date of vacancy for daniel uberti"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_45 WHERE NOT percentage = \"56%\" AND loss < 4",
        "context": "CREATE TABLE table_name_45 (rank INTEGER, loss VARCHAR, percentage VARCHAR)",
        "question": "What's the rank for a team that has a percentage of 56% and a loss smaller than 4?"
    },
    {
        "answer": "SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING COUNT(*) > (SELECT COUNT(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 WHERE T1.name = 'Tyler Swift')",
        "context": "CREATE TABLE follows (f1 VARCHAR); CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR)",
        "question": "Find the names of the users whose number of followers is greater than that of the user named \"Tyler Swift\"."
    },
    {
        "answer": "SELECT T1.name, T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f1 GROUP BY T2.f1 HAVING COUNT(*) > 1",
        "context": "CREATE TABLE follows (f1 VARCHAR); CREATE TABLE user_profiles (name VARCHAR, email VARCHAR, uid VARCHAR)",
        "question": "Find the name and email for the users who have more than one follower."
    },
    {
        "answer": "SELECT team FROM table_name_8 WHERE make = \"buick regal\" AND driver = \"bobby hillin jr. (r)\"",
        "context": "CREATE TABLE table_name_8 (team VARCHAR, make VARCHAR, driver VARCHAR)",
        "question": "What team does bobby hillin jr. (r) drive a buick regal for?"
    },
    {
        "answer": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = \"Mary\" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = \"Susan\"",
        "context": "CREATE TABLE follows (f1 VARCHAR, f2 VARCHAR); CREATE TABLE user_profiles (uid VARCHAR, name VARCHAR)",
        "question": "Find the id of users who are followed by Mary and Susan."
    },
    {
        "answer": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = \"Mary\" OR T1.name = \"Susan\"",
        "context": "CREATE TABLE follows (f1 VARCHAR, f2 VARCHAR); CREATE TABLE user_profiles (uid VARCHAR, name VARCHAR)",
        "question": "Find the id of users who are followed by Mary or Susan."
    },
    {
        "answer": "SELECT votes_given FROM table_1855841_1 WHERE running_with__in_team_ = \"Michael Russo, Genevy Dimitrion , Manny Ortega\"",
        "context": "CREATE TABLE table_1855841_1 (votes_given VARCHAR, running_with__in_team_ VARCHAR)",
        "question": "Name the votes given for michael russo, genevy dimitrion , manny ortega"
    },
    {
        "answer": "SELECT MAX(grid) FROM table_name_99 WHERE constructor = \"mclaren - mercedes\" AND driver = \"david coulthard\" AND laps < 66",
        "context": "CREATE TABLE table_name_99 (grid INTEGER, laps VARCHAR, constructor VARCHAR, driver VARCHAR)",
        "question": "What is the highest grid value with constructor Mclaren - Mercedes, driver David Coulthard, and has fewer than 66 laps?"
    },
    {
        "answer": "SELECT T1.name, COUNT(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING COUNT(*) > 1",
        "context": "CREATE TABLE tweets (uid VARCHAR); CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR)",
        "question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them."
    },
    {
        "answer": "SELECT new_entries_this_round FROM table_1859269_1 WHERE round = \"Semi-finals\"",
        "context": "CREATE TABLE table_1859269_1 (new_entries_this_round VARCHAR, round VARCHAR)",
        "question": "If the round is the semi-finals, what are the new entries this round?"
    },
    {
        "answer": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING COUNT(*) > 3",
        "context": "CREATE TABLE Attribute_Definitions (attribute_data_type VARCHAR)",
        "question": "Find the list of attribute data types possessed by more than 3 attribute definitions."
    },
    {
        "answer": "SELECT catalog_level_name, catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10",
        "context": "CREATE TABLE Catalog_Structure (catalog_level_name VARCHAR, catalog_level_number INTEGER)",
        "question": "Find the name and level of catalog structure with level between 5 and 10."
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_42 WHERE venue = \"corio oval\"",
        "context": "CREATE TABLE table_name_42 (away_team VARCHAR, venue VARCHAR)",
        "question": "What was the away team score at Corio Oval?"
    },
    {
        "answer": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE catalogs (catalog_publisher VARCHAR)",
        "question": "Which catalog publisher has published the most catalogs?"
    },
    {
        "answer": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.attribute_value = (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY COUNT(*) DESC LIMIT 1)",
        "context": "CREATE TABLE Catalog_Contents_Additional_Attributes (catalog_entry_id VARCHAR, attribute_value VARCHAR); CREATE TABLE Catalog_Contents (catalog_entry_name VARCHAR, catalog_entry_id VARCHAR); CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_value VARCHAR)",
        "question": "What are the entry names of catalog with the attribute possessed by most entries."
    },
    {
        "answer": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = \"8\"",
        "context": "CREATE TABLE Catalog_Contents_Additional_Attributes (catalog_entry_id VARCHAR, catalog_level_number VARCHAR); CREATE TABLE Catalog_Contents (catalog_entry_name VARCHAR, catalog_entry_id VARCHAR)",
        "question": "Find the names of catalog entries with level number 8."
    },
    {
        "answer": "SELECT t1.attribute_name, t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id = t2.attribute_id WHERE t2.attribute_value = 0",
        "context": "CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_id VARCHAR, attribute_value VARCHAR); CREATE TABLE Attribute_Definitions (attribute_name VARCHAR, attribute_id VARCHAR)",
        "question": "Find the name and attribute ID of the attribute definitions with attribute value 0."
    },
    {
        "answer": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING COUNT(*) > 1",
        "context": "CREATE TABLE Catalogs (date_of_latest_revision VARCHAR)",
        "question": "Find the dates on which more than one revisions were made."
    },
    {
        "answer": "SELECT township FROM table_18600760_12 WHERE longitude = \"-98.741656\"",
        "context": "CREATE TABLE table_18600760_12 (township VARCHAR, longitude VARCHAR)",
        "question": "Which township has a longitude of -98.741656?"
    },
    {
        "answer": "SELECT COUNT(ansi_code) FROM table_18600760_13 WHERE latitude = \"48.247662\"",
        "context": "CREATE TABLE table_18600760_13 (ansi_code VARCHAR, latitude VARCHAR)",
        "question": "How many places associated with latitude 48.247662?"
    },
    {
        "answer": "SELECT end_date FROM table_name_8 WHERE governor = \"richard j. oglesby\" AND term = \"1885\u20131889\"",
        "context": "CREATE TABLE table_name_8 (end_date VARCHAR, governor VARCHAR, term VARCHAR)",
        "question": "What is the end date of the term for Governor of richard j. oglesby, and a Term of 1885\u20131889?"
    },
    {
        "answer": "SELECT site FROM table_name_5 WHERE orbit = \"leo\" AND decay___utc__ = \"still in orbit\" AND function = \"magnetosphere research\"",
        "context": "CREATE TABLE table_name_5 (site VARCHAR, function VARCHAR, orbit VARCHAR, decay___utc__ VARCHAR)",
        "question": "What site has an orbit of Leo, a decay (UTC) of still in orbit, and a magnetosphere research?"
    },
    {
        "answer": "SELECT date_and_time___utc__ FROM table_name_23 WHERE orbit = \"sub-orbital\" AND function = \"aeronomy research\" AND rocket = \"nike orion\" AND site = \"poker flat\"",
        "context": "CREATE TABLE table_name_23 (date_and_time___utc__ VARCHAR, site VARCHAR, rocket VARCHAR, orbit VARCHAR, function VARCHAR)",
        "question": "What date and time has a sub-orbital of orbit, a function of aeronomy research, and a Nike Orion rocket, as well as a Poker Flat site?"
    },
    {
        "answer": "SELECT runner_up FROM table_name_26 WHERE winning_score = \u221216(68 - 70 - 65 - 65 = 268)",
        "context": "CREATE TABLE table_name_26 (runner_up VARCHAR, winning_score VARCHAR)",
        "question": "who is the runner-up when the winning score is \u221216 (68-70-65-65=268)?"
    },
    {
        "answer": "SELECT departure_date, arrival_date FROM Flight WHERE origin = \"Los Angeles\" AND destination = \"Honolulu\"",
        "context": "CREATE TABLE Flight (departure_date VARCHAR, arrival_date VARCHAR, origin VARCHAR, destination VARCHAR)",
        "question": "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu."
    },
    {
        "answer": "SELECT final__bronze_medal_match FROM table_18602462_21 WHERE quarterfinals = \"Houdet ( FRA ) W 6-2, 6-1\"",
        "context": "CREATE TABLE table_18602462_21 (final__bronze_medal_match VARCHAR, quarterfinals VARCHAR)",
        "question": "When houdet ( fra ) w 6-2, 6-1 is the quarterfinals what is the final/bronze medal match?"
    },
    {
        "answer": "SELECT final__bronze_medal_match FROM table_18602462_21 WHERE event = \"Mixed Quad Singles\"",
        "context": "CREATE TABLE table_18602462_21 (final__bronze_medal_match VARCHAR, event VARCHAR)",
        "question": "When mixed quad singles is the event what is the final/bronze medal match?"
    },
    {
        "answer": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = \"Airbus A340-300\"",
        "context": "CREATE TABLE Flight (flno VARCHAR, aid VARCHAR); CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)",
        "question": "Show all flight numbers with aircraft Airbus A340-300."
    },
    {
        "answer": "SELECT COUNT(round_of_32) FROM table_18602462_22 WHERE round_of_16 = \"Polidori ( ITA ) W 6-1, 3-6, 6-3\"",
        "context": "CREATE TABLE table_18602462_22 (round_of_32 VARCHAR, round_of_16 VARCHAR)",
        "question": "How many round of 32 results are followed by Polidori ( Ita ) w 6-1, 3-6, 6-3 in the round of 16?"
    },
    {
        "answer": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid GROUP BY T1.aid HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Aircraft (name VARCHAR, aid VARCHAR); CREATE TABLE Flight (aid VARCHAR)",
        "question": "Show names for all aircraft with at least two flights."
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_59 WHERE country = \"united states\" AND wins < 3",
        "context": "CREATE TABLE table_name_59 (rank INTEGER, country VARCHAR, wins VARCHAR)",
        "question": "Who is the lowest ranked player from the United States that has less than 3 Wins?"
    },
    {
        "answer": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = \"John Williams\"",
        "context": "CREATE TABLE Aircraft (name VARCHAR, aid VARCHAR); CREATE TABLE Employee (eid VARCHAR, name VARCHAR); CREATE TABLE Certificate (eid VARCHAR, aid VARCHAR)",
        "question": "Show names for all aircrafts of which John Williams has certificates."
    },
    {
        "answer": "SELECT score FROM table_name_93 WHERE visitor = \"edmonton\"",
        "context": "CREATE TABLE table_name_93 (score VARCHAR, visitor VARCHAR)",
        "question": "What is the score of the game that had a visiting team of Edmonton?"
    },
    {
        "answer": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Airbus A340-300\"",
        "context": "CREATE TABLE Employee (name VARCHAR, eid VARCHAR); CREATE TABLE Certificate (eid VARCHAR, aid VARCHAR); CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)",
        "question": "Show names for all employees who have certificates on both Boeing 737-800 and Airbus A340-300."
    },
    {
        "answer": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = \"Boeing 737-800\"",
        "context": "CREATE TABLE Certificate (eid VARCHAR, aid VARCHAR); CREATE TABLE Employee (name VARCHAR, eid VARCHAR); CREATE TABLE Employee (name VARCHAR); CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)",
        "question": "Show names for all employees who do not have certificate of Boeing 737-800."
    },
    {
        "answer": "SELECT T1.name, T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Certificate (eid VARCHAR); CREATE TABLE Employee (name VARCHAR, salary VARCHAR, eid VARCHAR)",
        "question": "what is the salary and name of the employee who has the most number of aircraft certificates?"
    },
    {
        "answer": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.distance > 5000 GROUP BY T1.eid ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Aircraft (aid VARCHAR, distance INTEGER); CREATE TABLE Employee (name VARCHAR, eid VARCHAR); CREATE TABLE Certificate (eid VARCHAR, aid VARCHAR)",
        "question": "What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?"
    },
    {
        "answer": "SELECT score FROM table_name_17 WHERE venue = \"hampden park\" AND runners_up = \"rangers\" AND winners = \"hibernian\"",
        "context": "CREATE TABLE table_name_17 (score VARCHAR, winners VARCHAR, venue VARCHAR, runners_up VARCHAR)",
        "question": "What is the Score of the Rangers' Runner-ups and Hibernian Winners in Hampden Park?"
    },
    {
        "answer": "SELECT runners_up FROM table_name_75 WHERE venue = \"broadwood stadium\"",
        "context": "CREATE TABLE table_name_75 (runners_up VARCHAR, venue VARCHAR)",
        "question": "What Runners-up have a Venue in Broadwood Stadium?"
    },
    {
        "answer": "SELECT actor_actress FROM table_18638067_1 WHERE film_title_used_in_nomination = \"Mrs. Miniver\"",
        "context": "CREATE TABLE table_18638067_1 (actor_actress VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "In the film Mrs. Miniver, what is the actresses name?"
    },
    {
        "answer": "SELECT year__ceremony_ FROM table_18638067_1 WHERE actor_actress = \"Teresa Wright\" AND category = \"Best Supporting Actress\"",
        "context": "CREATE TABLE table_18638067_1 (year__ceremony_ VARCHAR, actor_actress VARCHAR, category VARCHAR)",
        "question": "What year was Teresa Wright nominated best supporting actress?"
    },
    {
        "answer": "SELECT actor_actress FROM table_18638067_1 WHERE film_title_used_in_nomination = \"Going My Way\" AND category = \"Best Supporting Actor\"",
        "context": "CREATE TABLE table_18638067_1 (actor_actress VARCHAR, film_title_used_in_nomination VARCHAR, category VARCHAR)",
        "question": "Who was nominated for best supporting actor in the movie Going My Way?"
    },
    {
        "answer": "SELECT SUM(ave__no) FROM table_name_98 WHERE name = \"albula alps\" AND height__m_ > 3418",
        "context": "CREATE TABLE table_name_98 (ave__no INTEGER, name VARCHAR, height__m_ VARCHAR)",
        "question": "Which sum of AVE-No has a Name of albula alps, and a Height (m) larger than 3418?"
    },
    {
        "answer": "SELECT MIN(height__m_) FROM table_name_97 WHERE name = \"plessur alps\" AND ave__no > 63",
        "context": "CREATE TABLE table_name_97 (height__m_ INTEGER, name VARCHAR, ave__no VARCHAR)",
        "question": "Which Height (m) has a Name of plessur alps, and a AVE-No larger than 63?"
    },
    {
        "answer": "SELECT winning_driver FROM table_name_13 WHERE fastest_lap = \"michael schumacher\" AND constructor = \"ferrari\" AND pole_position = \"jenson button\"",
        "context": "CREATE TABLE table_name_13 (winning_driver VARCHAR, pole_position VARCHAR, fastest_lap VARCHAR, constructor VARCHAR)",
        "question": "Who was the winning driver when pole position was jenson button, the fastest lap was michael schumacher and the car was ferrari?"
    },
    {
        "answer": "SELECT category FROM table_name_76 WHERE event_name = \"touchdown atlantic\"",
        "context": "CREATE TABLE table_name_76 (category VARCHAR, event_name VARCHAR)",
        "question": "What is the category of the touchdown atlantic?"
    },
    {
        "answer": "SELECT leagues FROM table_18686317_1 WHERE comp__percentage = \"54.0\"",
        "context": "CREATE TABLE table_18686317_1 (leagues VARCHAR, comp__percentage VARCHAR)",
        "question": "In which league would you find the player with a comp percentage of 54.0?"
    },
    {
        "answer": "SELECT total_team_penalties FROM table_18666752_3 WHERE cross_country_penalties = \"30.40\"",
        "context": "CREATE TABLE table_18666752_3 (total_team_penalties VARCHAR, cross_country_penalties VARCHAR)",
        "question": "How many total team penalties are there when cross country penalties is 30.40?"
    },
    {
        "answer": "SELECT AVG(age), sex FROM Student GROUP BY sex",
        "context": "CREATE TABLE Student (sex VARCHAR, age INTEGER)",
        "question": "Show the average age for male and female students."
    },
    {
        "answer": "SELECT MIN(laps) FROM table_name_65 WHERE grid < 4 AND driver = \"juan pablo montoya\"",
        "context": "CREATE TABLE table_name_65 (laps INTEGER, grid VARCHAR, driver VARCHAR)",
        "question": "What is the low lap total for the under 4 grid car driven by juan pablo montoya?"
    },
    {
        "answer": "SELECT COUNT(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.sex = \"F\" AND T1.allergy = \"Milk\" OR T1.allergy = \"Eggs\"",
        "context": "CREATE TABLE Student (StuID VARCHAR, sex VARCHAR); CREATE TABLE has_allergy (StuID VARCHAR, allergy VARCHAR)",
        "question": "How many female students have milk or egg allergies?"
    },
    {
        "answer": "SELECT batting_style FROM table_name_32 WHERE bowling_style = \"right arm medium\" AND player = \"stuart williams\"",
        "context": "CREATE TABLE table_name_32 (batting_style VARCHAR, bowling_style VARCHAR, player VARCHAR)",
        "question": "What batting style corresponds to a bowling style of right arm medium for Stuart Williams?"
    },
    {
        "answer": "SELECT T2.allergytype, COUNT(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy GROUP BY T2.allergytype",
        "context": "CREATE TABLE Has_allergy (allergy VARCHAR); CREATE TABLE Allergy_type (allergytype VARCHAR, allergy VARCHAR)",
        "question": "Show all allergy type with number of students affected."
    },
    {
        "answer": "SELECT lname, age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = \"Cat\")",
        "context": "CREATE TABLE Has_allergy (lname VARCHAR, age VARCHAR, StuID VARCHAR, Allergy VARCHAR); CREATE TABLE Student (lname VARCHAR, age VARCHAR, StuID VARCHAR, Allergy VARCHAR)",
        "question": "Find the last name and age of the student who has allergy to both milk and cat."
    },
    {
        "answer": "SELECT T1.Allergy, T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = \"Lisa\" ORDER BY T1.Allergy",
        "context": "CREATE TABLE Has_allergy (Allergy VARCHAR, StuID VARCHAR); CREATE TABLE Student (StuID VARCHAR, Fname VARCHAR); CREATE TABLE Allergy_type (Allergy VARCHAR, AllergyType VARCHAR)",
        "question": "What are the allergies and their types that the student with first name Lisa has? And order the result by name of allergies."
    },
    {
        "answer": "SELECT school_club_team FROM table_name_53 WHERE nationality = \"united states\" AND position = \"guard\"",
        "context": "CREATE TABLE table_name_53 (school_club_team VARCHAR, nationality VARCHAR, position VARCHAR)",
        "question": "Tell me the School/Club team of the player from the United States that play'de guard?"
    },
    {
        "answer": "SELECT AVG(age) FROM Student WHERE StuID IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = \"animal\")",
        "context": "CREATE TABLE Student (age INTEGER, StuID VARCHAR); CREATE TABLE Allergy_Type (Allergy VARCHAR, allergytype VARCHAR); CREATE TABLE Has_allergy (StuID VARCHAR, Allergy VARCHAR)",
        "question": "Find the average age of the students who have allergies with food and animal types."
    },
    {
        "answer": "SELECT fname, lname FROM Student WHERE NOT StuID IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = \"food\")",
        "context": "CREATE TABLE Student (fname VARCHAR, lname VARCHAR, StuID VARCHAR); CREATE TABLE Allergy_Type (Allergy VARCHAR, allergytype VARCHAR); CREATE TABLE Has_allergy (StuID VARCHAR, Allergy VARCHAR)",
        "question": "List the first and last name of the students who do not have any food type allergy."
    },
    {
        "answer": "SELECT COUNT(*) FROM Student WHERE sex = \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = \"food\")",
        "context": "CREATE TABLE Has_allergy (Allergy VARCHAR); CREATE TABLE Allergy_Type (Allergy VARCHAR, allergytype VARCHAR); CREATE TABLE Student (sex VARCHAR, StuID VARCHAR)",
        "question": "Find the number of male (sex is 'M') students who have some food type allery."
    },
    {
        "answer": "SELECT DISTINCT T1.fname, T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid WHERE T2.Allergy = \"Milk\" OR T2.Allergy = \"Cat\"",
        "context": "CREATE TABLE Has_Allergy (stuid VARCHAR, Allergy VARCHAR); CREATE TABLE Student (fname VARCHAR, city_code VARCHAR, stuid VARCHAR)",
        "question": "Find the different first names and cities of the students who have allergy to milk or cat."
    },
    {
        "answer": "SELECT COUNT(*) FROM Student WHERE age > 18 AND NOT StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = \"food\" OR T2.allergytype = \"animal\")",
        "context": "CREATE TABLE Allergy_Type (Allergy VARCHAR, allergytype VARCHAR); CREATE TABLE Has_allergy (Allergy VARCHAR); CREATE TABLE Student (age VARCHAR, StuID VARCHAR)",
        "question": "Find the number of students who are older than 18 and do not have allergy to either food or animal."
    },
    {
        "answer": "SELECT level FROM table_name_21 WHERE season > 2003 AND division = \"kakkonen (second division)\" AND position = \"12th\"",
        "context": "CREATE TABLE table_name_21 (level VARCHAR, position VARCHAR, season VARCHAR, division VARCHAR)",
        "question": "What level for seasons after 2003, a Division of kakkonen (second division), and a Position of 12th?"
    },
    {
        "answer": "SELECT billing_country, COUNT(*) FROM invoices GROUP BY billing_country ORDER BY COUNT(*) DESC LIMIT 5",
        "context": "CREATE TABLE invoices (billing_country VARCHAR)",
        "question": "A list of the top 5 countries by number of invoices. List country name and number of invoices."
    },
    {
        "answer": "SELECT directed_by FROM table_18712423_3 WHERE written_by = \"Matt Ford\"",
        "context": "CREATE TABLE table_18712423_3 (directed_by VARCHAR, written_by VARCHAR)",
        "question": "Who directed the episode written by Matt Ford?"
    },
    {
        "answer": "SELECT SUM(pl_gp) FROM table_name_44 WHERE pick__number < 122 AND player = \"rob flockhart\" AND rd__number < 3",
        "context": "CREATE TABLE table_name_44 (pl_gp INTEGER, rd__number VARCHAR, pick__number VARCHAR, player VARCHAR)",
        "question": "What is the PI GP of Rob Flockhart, who has a pick # less than 122 and a round # less than 3?"
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name, COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10",
        "context": "CREATE TABLE customers (first_name VARCHAR, last_name VARCHAR, id VARCHAR); CREATE TABLE invoices (customer_id VARCHAR)",
        "question": "Find out the top 10 customers by total number of orders. List customers' first and last name and the number of total orders."
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name, SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10",
        "context": "CREATE TABLE invoices (total INTEGER, customer_id VARCHAR); CREATE TABLE customers (first_name VARCHAR, last_name VARCHAR, id VARCHAR)",
        "question": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales."
    },
    {
        "answer": "SELECT T1.name, COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 5",
        "context": "CREATE TABLE tracks (genre_id VARCHAR); CREATE TABLE genres (name VARCHAR, id VARCHAR)",
        "question": "List the top 5 genres by number of tracks. List genres name and total tracks."
    },
    {
        "answer": "SELECT safari FROM table_1876262_10 WHERE internet_explorer = \"47.22%\"",
        "context": "CREATE TABLE table_1876262_10 (safari VARCHAR, internet_explorer VARCHAR)",
        "question": "If Internet Explorer is 47.22%, what is the Safari total?"
    },
    {
        "answer": "SELECT COUNT(no_in_series) FROM table_1876825_2 WHERE original_air_date = \"March 19, 2000\"",
        "context": "CREATE TABLE table_1876825_2 (no_in_series VARCHAR, original_air_date VARCHAR)",
        "question": "Name the total number of series for march 19, 2000"
    },
    {
        "answer": "SELECT result FROM table_name_47 WHERE score = \"1\u20130\" AND competition = \"2014 fifa world cup qualification\"",
        "context": "CREATE TABLE table_name_47 (result VARCHAR, score VARCHAR, competition VARCHAR)",
        "question": "What result has a Score of 1\u20130, and a Competition of 2014 fifa world cup qualification?"
    },
    {
        "answer": "SELECT date FROM table_name_26 WHERE competition = \"2014 fifa world cup qualification\" AND score = \"1\u20130\"",
        "context": "CREATE TABLE table_name_26 (date VARCHAR, competition VARCHAR, score VARCHAR)",
        "question": "What date was the Competition of 2014 fifa world cup qualification, with a Score of 1\u20130?"
    },
    {
        "answer": "SELECT production_code FROM table_1876825_3 WHERE no_in_season = 6",
        "context": "CREATE TABLE table_1876825_3 (production_code VARCHAR, no_in_season VARCHAR)",
        "question": "What is the production code for episode 6 in the season?"
    },
    {
        "answer": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\"",
        "context": "CREATE TABLE customers (company VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "Eduardo Martins is a customer at which company?"
    },
    {
        "answer": "SELECT email, phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\"",
        "context": "CREATE TABLE customers (email VARCHAR, phone VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "What is Astrid Gruber's email and phone number?"
    },
    {
        "answer": "SELECT constellation FROM table_name_24 WHERE object_type = \"spiral galaxy\" AND ngc_number < 3593 AND right_ascension___j2000__ = \"11h05m48.9s\"",
        "context": "CREATE TABLE table_name_24 (constellation VARCHAR, right_ascension___j2000__ VARCHAR, object_type VARCHAR, ngc_number VARCHAR)",
        "question": "what is the constellation when the object type is spiral galaxy, the ngc number is less than 3593 and the right ascension (j2000) is 11h05m48.9s?"
    },
    {
        "answer": "SELECT COUNT(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\"",
        "context": "CREATE TABLE employees (id VARCHAR, first_name VARCHAR, last_name VARCHAR); CREATE TABLE customers (support_rep_id VARCHAR)",
        "question": "How many customers does Steve Johnson support?"
    },
    {
        "answer": "SELECT T2.first_name, T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\"",
        "context": "CREATE TABLE employees (id VARCHAR, first_name VARCHAR, last_name VARCHAR); CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, reports_to VARCHAR)",
        "question": "find the full name of employees who report to Nancy Edwards?"
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, id VARCHAR); CREATE TABLE customers (support_rep_id VARCHAR)",
        "question": "Find the full name of employee who supported the most number of customers."
    },
    {
        "answer": "SELECT COUNT(*) FROM employees WHERE country = \"Canada\"",
        "context": "CREATE TABLE employees (country VARCHAR)",
        "question": "How many employees are living in Canada?"
    },
    {
        "answer": "SELECT first_name, last_name FROM employees ORDER BY birth_date DESC LIMIT 1",
        "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, birth_date VARCHAR)",
        "question": "Who is the youngest employee in the company? List employee's first and last name."
    },
    {
        "answer": "SELECT date FROM table_name_82 WHERE label = \"sony bmg, epic\" AND catalog = \"5187482\"",
        "context": "CREATE TABLE table_name_82 (date VARCHAR, label VARCHAR, catalog VARCHAR)",
        "question": "What is the date of the item with a label of Sony BMG, Epic and a Catalog number 5187482?"
    },
    {
        "answer": "SELECT T2.first_name, T2.last_name, COUNT(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY COUNT(T1.reports_to) DESC LIMIT 1",
        "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, id VARCHAR); CREATE TABLE employees (reports_to VARCHAR)",
        "question": "Which employee manage most number of peoples? List employee's first and last name, and number of people report to that employee."
    },
    {
        "answer": "SELECT COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\"",
        "context": "CREATE TABLE invoices (customer_id VARCHAR); CREATE TABLE customers (id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "How many orders does Lucas Mancini has?"
    },
    {
        "answer": "SELECT nationality FROM table_name_28 WHERE school_club_team = \"la salle\"",
        "context": "CREATE TABLE table_name_28 (nationality VARCHAR, school_club_team VARCHAR)",
        "question": "What nationality is the la salle team?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_18795125_6 WHERE position_in_table = \"23rd\"",
        "context": "CREATE TABLE table_18795125_6 (date_of_appointment VARCHAR, position_in_table VARCHAR)",
        "question": "What was the date of appointment for the manager of the 23rd team?"
    },
    {
        "answer": "SELECT country FROM table_18821196_1 WHERE tv_network_s_ = \"AXN India\"",
        "context": "CREATE TABLE table_18821196_1 (country VARCHAR, tv_network_s_ VARCHAR)",
        "question": "What is every country with a TV network of AXN India?"
    },
    {
        "answer": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING COUNT(T1.id) > 10",
        "context": "CREATE TABLE tracks (album_id VARCHAR); CREATE TABLE albums (title VARCHAR, id VARCHAR)",
        "question": "List title of albums have the number of tracks greater than 10."
    },
    {
        "answer": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" AND T3.name = \"MPEG audio file\"",
        "context": "CREATE TABLE genres (id VARCHAR, name VARCHAR); CREATE TABLE tracks (name VARCHAR, genre_id VARCHAR, media_type_id VARCHAR); CREATE TABLE media_types (id VARCHAR, name VARCHAR)",
        "question": "List the name of tracks belongs to genre Rock and whose media type is MPEG audio file."
    },
    {
        "answer": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\"",
        "context": "CREATE TABLE genres (id VARCHAR, name VARCHAR); CREATE TABLE tracks (name VARCHAR, genre_id VARCHAR, media_type_id VARCHAR); CREATE TABLE media_types (id VARCHAR, name VARCHAR)",
        "question": "List the name of tracks belongs to genre Rock or media type is MPEG audio file."
    },
    {
        "answer": "SELECT prize_fund FROM table_18828487_1 WHERE venue = \"RWE-Sporthalle, M\u00fclheim\"",
        "context": "CREATE TABLE table_18828487_1 (prize_fund VARCHAR, venue VARCHAR)",
        "question": "How much was the prize money for  rwe-sporthalle, m\u00fclheim ?"
    },
    {
        "answer": "SELECT status FROM table_18821196_1 WHERE weekly_schedule = \"Monday to Thursday @ 11:00 pm\"",
        "context": "CREATE TABLE table_18821196_1 (status VARCHAR, weekly_schedule VARCHAR)",
        "question": "What is every status with a weekly schedule of Monday to Thursday @ 11:00 pm?"
    },
    {
        "answer": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\"",
        "context": "CREATE TABLE playlists (id VARCHAR, name VARCHAR); CREATE TABLE playlist_tracks (track_id VARCHAR, playlist_id VARCHAR); CREATE TABLE tracks (name VARCHAR, id VARCHAR)",
        "question": "List the name of all tracks in the playlists of Movies."
    },
    {
        "answer": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\"",
        "context": "CREATE TABLE invoices (id VARCHAR, customer_id VARCHAR); CREATE TABLE invoice_lines (track_id VARCHAR, invoice_id VARCHAR); CREATE TABLE tracks (name VARCHAR, id VARCHAR); CREATE TABLE customers (id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "List all tracks bought by customer Daan Peeters."
    },
    {
        "answer": "SELECT l2_cache FROM table_18823880_10 WHERE release_date = \"September 2009\" AND part_number_s_ = \"BY80607002529AF\"",
        "context": "CREATE TABLE table_18823880_10 (l2_cache VARCHAR, release_date VARCHAR, part_number_s_ VARCHAR)",
        "question": "When by80607002529af is the part number and september 2009 is the release date what is the l2 cache?"
    },
    {
        "answer": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
        "context": "CREATE TABLE playlists (id VARCHAR, name VARCHAR); CREATE TABLE playlist_tracks (track_id VARCHAR, playlist_id VARCHAR); CREATE TABLE tracks (name VARCHAR, id VARCHAR)",
        "question": "Find the name of tracks which are in Movies playlist but not in music playlist."
    },
    {
        "answer": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'",
        "context": "CREATE TABLE playlists (id VARCHAR, name VARCHAR); CREATE TABLE playlist_tracks (track_id VARCHAR, playlist_id VARCHAR); CREATE TABLE tracks (name VARCHAR, id VARCHAR)",
        "question": "Find the name of tracks which are in both Movies and music playlists."
    },
    {
        "answer": "SELECT COUNT(*), T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name",
        "context": "CREATE TABLE tracks (genre_id VARCHAR); CREATE TABLE genres (name VARCHAR, id VARCHAR)",
        "question": "Find number of tracks in each genre?"
    },
    {
        "answer": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING COUNT(T1.track_id) > 100",
        "context": "CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR); CREATE TABLE playlists (name VARCHAR, id VARCHAR)",
        "question": "List the name of playlist which has number of tracks greater than 100."
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_2 WHERE home_team = \"essendon\"",
        "context": "CREATE TABLE table_name_2 (away_team VARCHAR, home_team VARCHAR)",
        "question": "what is the away team score when the home team is essendon?"
    },
    {
        "answer": "SELECT MIN(cr_no) FROM table_1886270_1",
        "context": "CREATE TABLE table_1886270_1 (cr_no INTEGER)",
        "question": "What is the lowest cr number?"
    },
    {
        "answer": "SELECT T2.Name, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID",
        "context": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR); CREATE TABLE editor (Name VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal (Theme VARCHAR, Journal_ID VARCHAR)",
        "question": "Show the names of editors and the theme of journals for which they serve on committees."
    },
    {
        "answer": "SELECT T2.Name, T2.age, T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID ORDER BY T3.Theme",
        "context": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR); CREATE TABLE editor (Name VARCHAR, age VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal (Theme VARCHAR, Journal_ID VARCHAR)",
        "question": "Show the names and ages of editors and the theme of journals for which they serve on committees, in ascending alphabetical order of theme."
    },
    {
        "answer": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000",
        "context": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR); CREATE TABLE editor (Name VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal (Journal_ID VARCHAR, Sales INTEGER)",
        "question": "Show the names of editors that are on the committee of journals with sales bigger than 3000."
    },
    {
        "answer": "SELECT T1.editor_id, T1.Name, COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.editor_id",
        "context": "CREATE TABLE editor (editor_id VARCHAR, Name VARCHAR, Editor_ID VARCHAR); CREATE TABLE journal_committee (Editor_ID VARCHAR)",
        "question": "Show the id, name of each editor and the number of journal committees they are on."
    },
    {
        "answer": "SELECT player FROM table_18862490_2 WHERE score = 64 - 70 - 67 - 69 = 270",
        "context": "CREATE TABLE table_18862490_2 (player VARCHAR, score VARCHAR)",
        "question": "What player(s) had the score of 64-70-67-69=270?"
    },
    {
        "answer": "SELECT date, theme, sales FROM journal EXCEPT SELECT T1.date, T1.theme, T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID",
        "context": "CREATE TABLE journal_committee (journal_ID VARCHAR); CREATE TABLE journal (date VARCHAR, theme VARCHAR, sales VARCHAR); CREATE TABLE journal (date VARCHAR, theme VARCHAR, sales VARCHAR, journal_ID VARCHAR)",
        "question": "List the date, theme and sales of the journal which did not have any of the listed editors serving on committee."
    },
    {
        "answer": "SELECT AVG(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo'",
        "context": "CREATE TABLE journal_committee (journal_ID VARCHAR, work_type VARCHAR); CREATE TABLE journal (sales INTEGER, journal_ID VARCHAR)",
        "question": "What is the average sales of the journals that have an editor whose work type is 'Photo'?"
    },
    {
        "answer": "SELECT MAX(ga) FROM table_1888157_1 WHERE gf = 39",
        "context": "CREATE TABLE table_1888157_1 (ga INTEGER, gf VARCHAR)",
        "question": "What is the highest GA when GF is 39?"
    },
    {
        "answer": "SELECT T2.customer_first_name, T2.customer_last_name, T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = \"162\"",
        "context": "CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR); CREATE TABLE Accounts (customer_id VARCHAR, account_name VARCHAR)",
        "question": "What is the first name, last name, and phone of the customer with account name 162?"
    },
    {
        "answer": "SELECT total_footage_remaining_from_missing_episodes__mm AS :ss_ FROM table_1889619_5 WHERE story_no = \"018\" AND source = \"Private individual\"",
        "context": "CREATE TABLE table_1889619_5 (total_footage_remaining_from_missing_episodes__mm VARCHAR, story_no VARCHAR, source VARCHAR)",
        "question": "When a private individual is the source and 018 is the story number what is the total footage remaining from missing episodes (mm:ss)?"
    },
    {
        "answer": "SELECT T2.customer_first_name, T2.customer_last_name, T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE Accounts (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR)",
        "question": "What is the customer first, last name and id with least number of accounts."
    },
    {
        "answer": "SELECT customer_first_name, customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name, T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
        "context": "CREATE TABLE Accounts (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR)",
        "question": "Show the first names and last names of customers without any account."
    },
    {
        "answer": "SELECT high_rebounds FROM table_18894744_6 WHERE record = \"19-6\"",
        "context": "CREATE TABLE table_18894744_6 (high_rebounds VARCHAR, record VARCHAR)",
        "question": "Who did the high rebounds in the game with a 19-6 record?"
    },
    {
        "answer": "SELECT T2.customer_first_name, T2.customer_last_name, T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.card_number = \"4560596484842\"",
        "context": "CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR); CREATE TABLE Customers_cards (customer_id VARCHAR, card_number VARCHAR)",
        "question": "What is the first name, last name, and phone of the customer with card 4560596484842."
    },
    {
        "answer": "SELECT COUNT(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = \"Art\" AND T2.customer_last_name = \"Turcotte\"",
        "context": "CREATE TABLE Customers_cards (customer_id VARCHAR); CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR, customer_last_name VARCHAR)",
        "question": "How many cards does customer Art Turcotte have?"
    },
    {
        "answer": "SELECT best FROM table_18914438_1 WHERE maidens = 547 AND overs = \"2755.1\"",
        "context": "CREATE TABLE table_18914438_1 (best VARCHAR, maidens VARCHAR, overs VARCHAR)",
        "question": "What is the Best score if the Maidens is 547 and Overs is 2755.1?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = \"Blanche\" AND T2.customer_last_name = \"Huels\" AND T1.card_type_code = \"Credit\"",
        "context": "CREATE TABLE Customers_cards (customer_id VARCHAR, card_type_code VARCHAR); CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR, customer_last_name VARCHAR)",
        "question": "How many credit cards does customer Blanche Huels have?"
    },
    {
        "answer": "SELECT customer_id, COUNT(*) FROM Customers_cards GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Customers_cards (customer_id VARCHAR)",
        "question": "What is the customer id with most number of cards, and how many does he have?"
    },
    {
        "answer": "SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Customers_cards (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR)",
        "question": "Show id, first and last names for all customers with at least two cards."
    },
    {
        "answer": "SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE Customers_cards (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR)",
        "question": "What is the customer id, first and last name with least number of accounts."
    },
    {
        "answer": "SELECT series FROM table_name_32 WHERE high_points = \"prince (23)\"",
        "context": "CREATE TABLE table_name_32 (series VARCHAR, high_points VARCHAR)",
        "question": "What series had a high points of Prince (23)?"
    },
    {
        "answer": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Customers_cards (card_type_code VARCHAR)",
        "question": "What is the card type code with most number of cards?"
    },
    {
        "answer": "SELECT customer_id, customer_first_name FROM Customers EXCEPT SELECT T1.customer_id, T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE card_type_code = \"Credit\"",
        "context": "CREATE TABLE Customers_cards (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_id VARCHAR); CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR, card_type_code VARCHAR)",
        "question": "Show the customer ids and firstname without a credit card."
    },
    {
        "answer": "SELECT MAX(col__m_) FROM table_18946749_2 WHERE peak = \"Barurumea Ridge\"",
        "context": "CREATE TABLE table_18946749_2 (col__m_ INTEGER, peak VARCHAR)",
        "question": "What is the col (m) of the Barurumea Ridge peak? "
    },
    {
        "answer": "SELECT 2012 FROM table_name_19 WHERE 2009 = \"1r\"",
        "context": "CREATE TABLE table_name_19 (Id VARCHAR)",
        "question": "Name the 2012 for 2009 of 1r"
    },
    {
        "answer": "SELECT MAX(prominence__m_) FROM table_18946749_1 WHERE peak = \"Mount Gauttier\"",
        "context": "CREATE TABLE table_18946749_1 (prominence__m_ INTEGER, peak VARCHAR)",
        "question": "When mount gauttier is the peak what is the highest prominence in meters?"
    },
    {
        "answer": "SELECT SUM(average) FROM table_name_70 WHERE swimsuit < 9.62 AND country = \"colorado\"",
        "context": "CREATE TABLE table_name_70 (average INTEGER, swimsuit VARCHAR, country VARCHAR)",
        "question": "What is the total average for swimsuits smaller than 9.62 in Colorado?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_17 WHERE country = \"switzerland\" AND gold < 7 AND silver < 3",
        "context": "CREATE TABLE table_name_17 (total VARCHAR, silver VARCHAR, country VARCHAR, gold VARCHAR)",
        "question": "How many times does Switzerland have under 7 golds and less than 3 silvers?"
    },
    {
        "answer": "SELECT athlete FROM table_name_87 WHERE gold < 7 AND total = 14",
        "context": "CREATE TABLE table_name_87 (athlete VARCHAR, gold VARCHAR, total VARCHAR)",
        "question": "What athlete has less than 7 gold and 14 total medals?"
    },
    {
        "answer": "SELECT name, seating FROM track WHERE year_opened > 2000 ORDER BY seating",
        "context": "CREATE TABLE track (name VARCHAR, seating VARCHAR, year_opened INTEGER)",
        "question": "Show names and seatings, ordered by seating for all tracks opened after 2000."
    },
    {
        "answer": "SELECT AVG(crowd) FROM table_name_13 WHERE home_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_13 (crowd INTEGER, home_team VARCHAR)",
        "question": "What is the average crowd size for the home team hawthorn?"
    },
    {
        "answer": "SELECT COUNT(chinese__traditional_) FROM table_1893815_1 WHERE album_number = \"6th\"",
        "context": "CREATE TABLE table_1893815_1 (chinese__traditional_ VARCHAR, album_number VARCHAR)",
        "question": "Name the number of traditional chinese for album number 6th"
    },
    {
        "answer": "SELECT name, LOCATION, year_opened FROM track WHERE seating > (SELECT AVG(seating) FROM track)",
        "context": "CREATE TABLE track (name VARCHAR, LOCATION VARCHAR, year_opened VARCHAR, seating INTEGER)",
        "question": "Show the name, location, open year for all tracks with a seating higher than the average."
    },
    {
        "answer": "SELECT live_births_per_year FROM table_18950570_2 WHERE life_expectancy_females = \"73.3\"",
        "context": "CREATE TABLE table_18950570_2 (live_births_per_year VARCHAR, life_expectancy_females VARCHAR)",
        "question": "How many live births per year are there in the period where the life expectancy for females is 73.3?"
    },
    {
        "answer": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id WHERE T1.class = 'GT'",
        "context": "CREATE TABLE race (track_id VARCHAR, class VARCHAR); CREATE TABLE track (name VARCHAR); CREATE TABLE track (name VARCHAR, track_id VARCHAR)",
        "question": "What are the names for tracks without a race in class 'GT'."
    },
    {
        "answer": "SELECT T2.name, T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id HAVING COUNT(*) = 1",
        "context": "CREATE TABLE race (track_id VARCHAR); CREATE TABLE track (name VARCHAR, location VARCHAR, track_id VARCHAR)",
        "question": "Show the name and location of track with 1 race."
    },
    {
        "answer": "SELECT name FROM member WHERE address = 'Harford' OR address = 'Waterbury'",
        "context": "CREATE TABLE member (name VARCHAR, address VARCHAR)",
        "question": "Give me the names of members whose address is in Harford or Waterbury."
    },
    {
        "answer": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING COUNT(*) > 5",
        "context": "CREATE TABLE member (Membership_card VARCHAR)",
        "question": "Which membership card has more than 5 members?"
    },
    {
        "answer": "SELECT membership_card FROM member WHERE address = 'Hartford' INTERSECT SELECT membership_card FROM member WHERE address = 'Waterbury'",
        "context": "CREATE TABLE member (membership_card VARCHAR, address VARCHAR)",
        "question": "What is the membership card held by both members living in Hartford and ones living in Waterbury address?"
    },
    {
        "answer": "SELECT MIN(obesity_rank) FROM table_18958648_1 WHERE state_and_district_of_columbia = \"Utah\"",
        "context": "CREATE TABLE table_18958648_1 (obesity_rank INTEGER, state_and_district_of_columbia VARCHAR)",
        "question": "What is the least obesity rank for the state of Utah?"
    },
    {
        "answer": "SELECT MIN(draws) FROM table_name_98 WHERE wins < 15 AND against = 1228",
        "context": "CREATE TABLE table_name_98 (draws INTEGER, wins VARCHAR, against VARCHAR)",
        "question": "What's the lowest number of draws when the wins are less than 15, and against is 1228?"
    },
    {
        "answer": "SELECT director_s_ FROM table_18994724_1 WHERE film_title_used_in_nomination = \"Nuits d'Arabie\"",
        "context": "CREATE TABLE table_18994724_1 (director_s_ VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "Who directed the film Nuits d'arabie?"
    },
    {
        "answer": "SELECT player FROM table_18974269_1 WHERE original_season = \"RW: Key West\" AND eliminated = \"Episode 8\"",
        "context": "CREATE TABLE table_18974269_1 (player VARCHAR, original_season VARCHAR, eliminated VARCHAR)",
        "question": "Who was the contestant eliminated on episode 8 of RW: Key West season?"
    },
    {
        "answer": "SELECT gender FROM table_18974269_1 WHERE original_season = \"RR: South Pacific\"",
        "context": "CREATE TABLE table_18974269_1 (gender VARCHAR, original_season VARCHAR)",
        "question": "What was the gender of the contestant on RR: South Pacific season?"
    },
    {
        "answer": "SELECT COUNT(original_australian_performer) FROM table_1901751_1 WHERE original_west_end_performer = \"Jordan Dunne\"",
        "context": "CREATE TABLE table_1901751_1 (original_australian_performer VARCHAR, original_west_end_performer VARCHAR)",
        "question": "How many original Australian performers are there when the Original West End Performer is Jordan Dunne?"
    },
    {
        "answer": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = \"Balls to the Wall\"",
        "context": "CREATE TABLE ALBUM (ArtistId VARCHAR, Title VARCHAR); CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)",
        "question": "Which artist does the album \"Balls to the Wall\" belong to?"
    },
    {
        "answer": "SELECT original_west_end_performer FROM table_1901751_1 WHERE character = \"Martha\"",
        "context": "CREATE TABLE table_1901751_1 (original_west_end_performer VARCHAR, character VARCHAR)",
        "question": "Who is the Original west end performer for the character Martha?"
    },
    {
        "answer": "SELECT original_west_end_performer FROM table_1901751_1 WHERE character = \"Neville Craven\"",
        "context": "CREATE TABLE table_1901751_1 (original_west_end_performer VARCHAR, character VARCHAR)",
        "question": "Who is the original west end performer for the character Neville Craven?"
    },
    {
        "answer": "SELECT polling_dates FROM table_name_41 WHERE alex_munter = \"25%\" AND polling_firm = \"decima\"",
        "context": "CREATE TABLE table_name_41 (polling_dates VARCHAR, alex_munter VARCHAR, polling_firm VARCHAR)",
        "question": "What dates does Alex Munter have 25% and the polling firm of Decima?"
    },
    {
        "answer": "SELECT terry_kilrea__dropped_out_ FROM table_name_63 WHERE polling_firm = \"holinshed\" AND bob_chiarelli = \"22.5%\"",
        "context": "CREATE TABLE table_name_63 (terry_kilrea__dropped_out_ VARCHAR, polling_firm VARCHAR, bob_chiarelli VARCHAR)",
        "question": "What are the polling dates for polling firm Holinshed when Terry Kilrea dropped out and Bob Chiarelli has 22.5%?"
    },
    {
        "answer": "SELECT T1.Title, T2.AlbumID, COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId GROUP BY T2.AlbumID",
        "context": "CREATE TABLE ALBUM (Title VARCHAR, AlbumId VARCHAR); CREATE TABLE TRACK (AlbumID VARCHAR, AlbumId VARCHAR)",
        "question": "Show the album names, ids and the number of tracks for each album."
    },
    {
        "answer": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE MEDIATYPE (Name VARCHAR, MediaTypeId VARCHAR); CREATE TABLE TRACK (MediaTypeId VARCHAR)",
        "question": "What is the least common media type in all tracks?"
    },
    {
        "answer": "SELECT points FROM table_19001175_1 WHERE name = \"Thierry Tassin Category:Articles with hCards\"",
        "context": "CREATE TABLE table_19001175_1 (points VARCHAR, name VARCHAR)",
        "question": "Name the points for thierry tassin category:articles with hcards"
    },
    {
        "answer": "SELECT COUNT(poles) FROM table_19001175_1 WHERE name = \"Stefano Livio Category:Articles with hCards\"",
        "context": "CREATE TABLE table_19001175_1 (poles VARCHAR, name VARCHAR)",
        "question": "Name the number of poles for stefano livio category:articles with hcards"
    },
    {
        "answer": "SELECT surface FROM table_name_87 WHERE tournament = \"saint joseph , united states\"",
        "context": "CREATE TABLE table_name_87 (surface VARCHAR, tournament VARCHAR)",
        "question": "What is Surface, when Tournament is \"Saint Joseph , United States\"?"
    },
    {
        "answer": "SELECT FirstName, LastName FROM CUSTOMER WHERE Email = \"luisg@embraer.com.br\"",
        "context": "CREATE TABLE CUSTOMER (FirstName VARCHAR, LastName VARCHAR, Email VARCHAR)",
        "question": "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?"
    },
    {
        "answer": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = \"Jazz\"",
        "context": "CREATE TABLE TRACK (GenreId VARCHAR); CREATE TABLE GENRE (GenreId VARCHAR, Name VARCHAR)",
        "question": "What is the average unit price of tracks that belong to Jazz genre?"
    },
    {
        "answer": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = \"Astrid\" AND LastName = \"Gruber\"",
        "context": "CREATE TABLE CUSTOMER (CustomerId VARCHAR, FirstName VARCHAR); CREATE TABLE INVOICE (InvoiceDate VARCHAR, CustomerId VARCHAR)",
        "question": "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber."
    },
    {
        "answer": "SELECT europe FROM table_19017269_5 WHERE northern_america = \"482 (4.7%)\"",
        "context": "CREATE TABLE table_19017269_5 (europe VARCHAR, northern_america VARCHAR)",
        "question": "what will be the population of Europe when  Northern America is 482 (4.7%)?"
    },
    {
        "answer": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = \"Brazil\"",
        "context": "CREATE TABLE CUSTOMER (FirstName VARCHAR, CustomerId VARCHAR, country VARCHAR); CREATE TABLE INVOICE (CustomerId VARCHAR)",
        "question": "Find the first names of all customers that live in Brazil and have an invoice."
    },
    {
        "answer": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = \"AAC audio file\"",
        "context": "CREATE TABLE MEDIATYPE (MediaTypeId VARCHAR, Name VARCHAR); CREATE TABLE TRACK (MediaTypeId VARCHAR)",
        "question": "How many tracks are in the AAC audio file media type?"
    },
    {
        "answer": "SELECT championship FROM table_19047_2 WHERE score_in_the_final = \"4\u20136, 7\u20135, 6\u20132\"",
        "context": "CREATE TABLE table_19047_2 (championship VARCHAR, score_in_the_final VARCHAR)",
        "question": "What tournament did she win with a final score of 4\u20136, 7\u20135, 6\u20132?"
    },
    {
        "answer": "SELECT T2.Name, T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*) >= 3 ORDER BY T2.Name",
        "context": "CREATE TABLE ARTIST (Name VARCHAR, ArtistID VARCHAR); CREATE TABLE ALBUM (ArtistId VARCHAR)",
        "question": "Please list the name and id of all artists that have at least 3 albums in alphabetical order."
    },
    {
        "answer": "SELECT COUNT(age) FROM table_19061741_3 WHERE edition = \"Clash 2010\" AND home_or_representative_town_or_province = \"Davao City\"",
        "context": "CREATE TABLE table_19061741_3 (age VARCHAR, edition VARCHAR, home_or_representative_town_or_province VARCHAR)",
        "question": "When davao city is the  home or representative town or province and clash 2010 is the edition how many ages are there?"
    },
    {
        "answer": "SELECT edition FROM table_19061741_3 WHERE total_days_in_pbb_house = 77 AND status = \"Winner\"",
        "context": "CREATE TABLE table_19061741_3 (edition VARCHAR, total_days_in_pbb_house VARCHAR, status VARCHAR)",
        "question": "When winner is the status and  77 is the total days in pbb house what is the edition?"
    },
    {
        "answer": "SELECT MAX(Milliseconds), MIN(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = \"Pop\"",
        "context": "CREATE TABLE TRACK (GenreId VARCHAR); CREATE TABLE GENRE (GenreId VARCHAR, Name VARCHAR)",
        "question": "What are the duration of the longest and shortest pop tracks in milliseconds?"
    },
    {
        "answer": "SELECT COUNT(season) FROM table_name_9 WHERE car__number > 17 AND sponsor = \"ups\"",
        "context": "CREATE TABLE table_name_9 (season VARCHAR, car__number VARCHAR, sponsor VARCHAR)",
        "question": "How many seasons has UPS sponsored a car with a number larger than 17?"
    },
    {
        "answer": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId",
        "context": "CREATE TABLE ARTIST (Name VARCHAR); CREATE TABLE ALBUM (ArtistId VARCHAR); CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)",
        "question": "Find the names of artists that do not have any albums."
    },
    {
        "answer": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock'",
        "context": "CREATE TABLE Genre (GenreID VARCHAR, Name VARCHAR); CREATE TABLE Track (AlbumId VARCHAR, GenreID VARCHAR); CREATE TABLE Album (Title VARCHAR, AlbumId VARCHAR)",
        "question": "What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?"
    },
    {
        "answer": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE available_policies (policy_type_code VARCHAR)",
        "question": "Which policy type has the most records in the database?"
    },
    {
        "answer": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING COUNT(*) > 4",
        "context": "CREATE TABLE available_policies (policy_type_code VARCHAR)",
        "question": "Find the policy type used by more than 4 customers."
    },
    {
        "answer": "SELECT launch_date FROM table_1906515_1 WHERE duration__days_ = \"174.14\"",
        "context": "CREATE TABLE table_1906515_1 (launch_date VARCHAR, duration__days_ VARCHAR)",
        "question": "Name the launch date for duration days 174.14"
    },
    {
        "answer": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id = t2.service_id GROUP BY t1.service_id HAVING COUNT(*) > 2",
        "context": "CREATE TABLE services (service_name VARCHAR, service_id VARCHAR); CREATE TABLE first_notification_of_loss (service_id VARCHAR)",
        "question": "Find the name of services that have been used for more than 2 times in first notification of loss."
    },
    {
        "answer": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id = t2.claim_id GROUP BY t1.claim_id ORDER BY SUM(t2.settlement_amount) DESC LIMIT 1",
        "context": "CREATE TABLE settlements (claim_id VARCHAR, settlement_amount INTEGER); CREATE TABLE claims (Effective_Date VARCHAR, claim_id VARCHAR)",
        "question": "What is the effective date of the claim that has the largest amount of total settlement?"
    },
    {
        "answer": "SELECT COUNT(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = \"Dayana Robel\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE customers_policies (customer_id VARCHAR)",
        "question": "How many policies are listed for the customer named \"Dayana Robel\"?"
    },
    {
        "answer": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customers_policies (customer_id VARCHAR)",
        "question": "What is the name of the customer who has the most policies listed?"
    },
    {
        "answer": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = \"Dayana Robel\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE available_policies (policy_type_code VARCHAR, policy_id VARCHAR); CREATE TABLE customers_policies (customer_id VARCHAR, policy_id VARCHAR)",
        "question": "What are all the policy types of the customer named \"Dayana Robel\"?"
    },
    {
        "answer": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY COUNT(*) DESC LIMIT 1)",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE available_policies (policy_type_code VARCHAR, policy_id VARCHAR); CREATE TABLE customers_policies (customer_id VARCHAR, policy_id VARCHAR)",
        "question": "What are all the policy types of the customer that has the most policies listed?"
    },
    {
        "answer": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = \"Close a policy\" OR t3.service_name = \"Upgrade a policy\"",
        "context": "CREATE TABLE first_notification_of_loss (customer_id VARCHAR, service_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE services (service_id VARCHAR, service_name VARCHAR)",
        "question": "Find the names of customers who have used either the service \"Close a policy\" or the service \"Upgrade a policy\"."
    },
    {
        "answer": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = \"New policy application\"",
        "context": "CREATE TABLE first_notification_of_loss (customer_id VARCHAR, service_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE services (service_id VARCHAR, service_name VARCHAR)",
        "question": "Find the names of customers who have used both the service \"Close a policy\" and the service \"New policy application\"."
    },
    {
        "answer": "SELECT SUM(place__posici\u00f3n_) FROM table_name_70 WHERE points__pts_ > 49 AND goals_scored__gf_ < 54",
        "context": "CREATE TABLE table_name_70 (place__posici\u00f3n_ INTEGER, points__pts_ VARCHAR, goals_scored__gf_ VARCHAR)",
        "question": "What is the sum of the places of the team with more than 49 points and less than 54 goals scored?"
    },
    {
        "answer": "SELECT t2.date_opened, t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE customers_policies (date_opened VARCHAR, date_closed VARCHAR, customer_id VARCHAR)",
        "question": "Retrieve the open and close dates of all the policies associated with the customer whose name contains \"Diana\""
    },
    {
        "answer": "SELECT SUM(number_of_households) FROM table_name_43 WHERE median_household_income = \"$44,718\"",
        "context": "CREATE TABLE table_name_43 (number_of_households INTEGER, median_household_income VARCHAR)",
        "question": "What is the sum of households that makes a median household income of $44,718?"
    },
    {
        "answer": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'",
        "context": "CREATE TABLE medicine (id VARCHAR, name VARCHAR); CREATE TABLE medicine_enzyme_interaction (enzyme_id VARCHAR, medicine_id VARCHAR, interaction_type VARCHAR); CREATE TABLE enzyme (name VARCHAR, id VARCHAR)",
        "question": "What are the names of enzymes in the medicine named 'Amisulpride' that can serve as an 'inhibitor'?"
    },
    {
        "answer": "SELECT date_s__of_original_removal FROM table_19114172_11 WHERE new_channel_s_ = \"Five\"",
        "context": "CREATE TABLE table_19114172_11 (date_s__of_original_removal VARCHAR, new_channel_s_ VARCHAR)",
        "question": "When five is the new channel what is the date of original removal?"
    },
    {
        "answer": "SELECT date_s__of_original_removal FROM table_19114172_11 WHERE original_channel = \"BBC Two\"",
        "context": "CREATE TABLE table_19114172_11 (date_s__of_original_removal VARCHAR, original_channel VARCHAR)",
        "question": "When bbc two is the original channel what is the date of original removal?"
    },
    {
        "answer": "SELECT general_classification FROM table_name_45 WHERE mountains_classification = \"david de la fuente\" AND points_classification = \"thor hushovd\"",
        "context": "CREATE TABLE table_name_45 (general_classification VARCHAR, mountains_classification VARCHAR, points_classification VARCHAR)",
        "question": "What general classification has david de la fuente as mountains classification, and thor hushovd as points classification?"
    },
    {
        "answer": "SELECT T1.id, T1.Name, T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC",
        "context": "CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR); CREATE TABLE medicine (id VARCHAR, Name VARCHAR, FDA_approved VARCHAR)",
        "question": "What are the ids, names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with."
    },
    {
        "answer": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole'",
        "context": "CREATE TABLE enzyme (id VARCHAR, name VARCHAR); CREATE TABLE medicine (id VARCHAR, name VARCHAR); CREATE TABLE medicine_enzyme_interaction (interaction_type VARCHAR, medicine_id VARCHAR, enzyme_id VARCHAR)",
        "question": "What is the interaction type of the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'?"
    },
    {
        "answer": "SELECT year FROM table_name_78 WHERE award = \"tv adicto golden awards\" AND category = \"female revelation\"",
        "context": "CREATE TABLE table_name_78 (year VARCHAR, award VARCHAR, category VARCHAR)",
        "question": "In what year was there an award for TV Adicto Golden Awards and the category Female Revelation?"
    },
    {
        "answer": "SELECT T1.id, T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING COUNT(*) >= 3",
        "context": "CREATE TABLE medicine (id VARCHAR, trade_name VARCHAR); CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)",
        "question": "What is the id and trade name of the medicines can interact with at least 3 enzymes?"
    },
    {
        "answer": "SELECT DISTINCT T1.name, T1.location, T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE T2.interaction_type = 'inhibitor'",
        "context": "CREATE TABLE enzyme (name VARCHAR, location VARCHAR, product VARCHAR, id VARCHAR); CREATE TABLE medicine_enzyme_interaction (enzyme_id VARCHAR, interaction_type VARCHAR)",
        "question": "What are the distinct name, location and products of the enzymes which has any 'inhibitor' interaction?"
    },
    {
        "answer": "SELECT T1.name, T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'inhibitor' INTERSECT SELECT T1.name, T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'activitor'",
        "context": "CREATE TABLE medicine (name VARCHAR, trade_name VARCHAR, id VARCHAR); CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)",
        "question": "List the medicine name and trade name which can both interact as 'inhibitor' and 'activitor' with enzymes."
    },
    {
        "answer": "SELECT name, trade_name FROM medicine EXCEPT SELECT T1.name, T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id JOIN enzyme AS T3 ON T3.id = T2.enzyme_id WHERE T3.product = 'Protoporphyrinogen IX'",
        "context": "CREATE TABLE medicine (name VARCHAR, trade_name VARCHAR); CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR, enzyme_id VARCHAR); CREATE TABLE medicine (name VARCHAR, trade_name VARCHAR, id VARCHAR); CREATE TABLE enzyme (id VARCHAR, product VARCHAR)",
        "question": "Show the medicine names and trade names that cannot interact with the enzyme with product 'Heme'."
    },
    {
        "answer": "SELECT miss_maja_pilipinas FROM table_name_30 WHERE binibining_pilipinas_tourism = \"not awarded\" AND binibining_pilipinas_universe = \"anjanette abayari\"",
        "context": "CREATE TABLE table_name_30 (miss_maja_pilipinas VARCHAR, binibining_pilipinas_tourism VARCHAR, binibining_pilipinas_universe VARCHAR)",
        "question": "What Miss Maja Pilipinas has a Binibining Pilipinas-Tourism of not awarded, and a Binibining Pilipinas-Universe of anjanette abayari?"
    },
    {
        "answer": "SELECT notes FROM table_191323_2 WHERE nssdc_id_no = \"1959-002A\"",
        "context": "CREATE TABLE table_191323_2 (notes VARCHAR, nssdc_id_no VARCHAR)",
        "question": "What are the notes of the satellite whose nssdc id number is 1959-002a?"
    },
    {
        "answer": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t2.acc_percent LIMIT 1",
        "context": "CREATE TABLE basketball_match (school_id VARCHAR, acc_percent VARCHAR); CREATE TABLE university (Primary_conference VARCHAR, school_id VARCHAR)",
        "question": "What is the primary conference of the school that has the lowest acc percent score in the competition?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_90 WHERE binibining_pilipinas_international = \"jessie alice salones dixson\"",
        "context": "CREATE TABLE table_name_90 (year INTEGER, binibining_pilipinas_international VARCHAR)",
        "question": "What is the smallest Year with a Binibining Pilipinas-International of jessie alice salones dixson?"
    },
    {
        "answer": "SELECT t2.All_Games, t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE team_name = 'Clemson'",
        "context": "CREATE TABLE basketball_match (All_Games VARCHAR, school_id VARCHAR); CREATE TABLE university (location VARCHAR, school_id VARCHAR)",
        "question": "Find the location and all games score of the school that has Clemson as its team name."
    },
    {
        "answer": "SELECT t2.team_name, t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t1.founded LIMIT 1",
        "context": "CREATE TABLE university (school_id VARCHAR, founded VARCHAR); CREATE TABLE basketball_match (team_name VARCHAR, ACC_Regular_Season VARCHAR, school_id VARCHAR)",
        "question": "What is the team name and acc regular season score of the school that was founded for the longest time?"
    },
    {
        "answer": "SELECT enrollment, primary_conference FROM university ORDER BY founded LIMIT 1",
        "context": "CREATE TABLE university (enrollment VARCHAR, primary_conference VARCHAR, founded VARCHAR)",
        "question": "Show the enrollment and primary_conference of the oldest college."
    },
    {
        "answer": "SELECT alt_name FROM table_191323_2 WHERE notes = \"Mission failed. Guidance system failed. No orbit.\"",
        "context": "CREATE TABLE table_191323_2 (alt_name VARCHAR, notes VARCHAR)",
        "question": "What are the alternative names of those satellites where the notes are: mission failed. guidance system failed. no orbit."
    },
    {
        "answer": "SELECT MIN(bangladeshi_population) FROM table_19149550_9 WHERE rank = 7",
        "context": "CREATE TABLE table_19149550_9 (bangladeshi_population INTEGER, rank VARCHAR)",
        "question": "How many Bangladeshi citizens are there in the borough ranked at number 7?"
    },
    {
        "answer": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE enrollment < (SELECT AVG(enrollment) FROM university)",
        "context": "CREATE TABLE university (school_id VARCHAR); CREATE TABLE basketball_match (team_name VARCHAR, school_id VARCHAR); CREATE TABLE university (enrollment INTEGER)",
        "question": "Find the team names of the universities whose enrollments are smaller than the average enrollment size."
    },
    {
        "answer": "SELECT notes FROM table_19161046_1 WHERE model = \"HIS HD4850 (512MB)\"",
        "context": "CREATE TABLE table_19161046_1 (notes VARCHAR, model VARCHAR)",
        "question": "What are the notes recorded for the model HIS HD4850 (512MB)?"
    },
    {
        "answer": "SELECT T2.Hardware_Model_name, T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB > 32",
        "context": "CREATE TABLE chip_model (Model_name VARCHAR, Launch_year VARCHAR, RAM_MiB VARCHAR); CREATE TABLE phone (Hardware_Model_name VARCHAR, Company_name VARCHAR, chip_model VARCHAR)",
        "question": "List the hardware model name and company name for all the phones that were launched in year 2002 or have RAM size greater than 32."
    },
    {
        "answer": "SELECT T1.Char_cells, T1.Pixels, T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = \"LG-P760\"",
        "context": "CREATE TABLE phone (screen_mode VARCHAR, Hardware_Model_name VARCHAR); CREATE TABLE screen_mode (Char_cells VARCHAR, Pixels VARCHAR, Hardware_colours VARCHAR, Graphics_mode VARCHAR)",
        "question": "Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is \"LG-P760\"."
    },
    {
        "answer": "SELECT T2.Hardware_Model_name, T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\"",
        "context": "CREATE TABLE phone (Hardware_Model_name VARCHAR, Company_name VARCHAR, screen_mode VARCHAR); CREATE TABLE screen_mode (Graphics_mode VARCHAR, Type VARCHAR)",
        "question": "List the hardware model name and company name for the phone whose screen mode type is \"Graphics.\""
    },
    {
        "answer": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1",
        "context": "CREATE TABLE chip_model (Model_name VARCHAR, Launch_year VARCHAR, RAM_MiB VARCHAR); CREATE TABLE phone (Hardware_Model_name VARCHAR, chip_model VARCHAR)",
        "question": "List the name of the phone model launched in year 2002 and with the highest RAM size."
    },
    {
        "answer": "SELECT T1.WiFi, T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = \"LG-P760\"",
        "context": "CREATE TABLE phone (chip_model VARCHAR, screen_mode VARCHAR, Hardware_Model_name VARCHAR); CREATE TABLE chip_model (WiFi VARCHAR, Model_name VARCHAR); CREATE TABLE screen_mode (Type VARCHAR, Graphics_mode VARCHAR)",
        "question": "What are the wifi and screen mode type of the hardware model named \"LG-P760\"?"
    },
    {
        "answer": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = \"Text\" OR T1.RAM_MiB > 32",
        "context": "CREATE TABLE chip_model (Model_name VARCHAR, RAM_MiB VARCHAR); CREATE TABLE phone (Hardware_Model_name VARCHAR, chip_model VARCHAR, screen_mode VARCHAR); CREATE TABLE screen_mode (Graphics_mode VARCHAR, Type VARCHAR)",
        "question": "List the hardware model name for the phones that have screen mode type \"Text\" or RAM size greater than 32."
    },
    {
        "answer": "SELECT party FROM table_name_10 WHERE results = \"re-elected\" AND first_elected > 1990 AND district = \"minnesota 4\"",
        "context": "CREATE TABLE table_name_10 (party VARCHAR, district VARCHAR, results VARCHAR, first_elected VARCHAR)",
        "question": "What is Party, when Results is \"Re-Elected\", when First Elected is greater than 1990, and when District is \"Minnesota 4\"?"
    },
    {
        "answer": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name = \"Nokia Corporation\" AND T1.Type <> \"Text\"",
        "context": "CREATE TABLE phone (Hardware_Model_name VARCHAR, screen_mode VARCHAR); CREATE TABLE screen_mode (Graphics_mode VARCHAR, Type VARCHAR)",
        "question": "List the hardware model name for the phons that were produced by \"Nokia Corporation\" but whose screen mode type is not Text."
    },
    {
        "answer": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = \"Graphics\" OR t2.Company_name = \"Nokia Corporation\"",
        "context": "CREATE TABLE phone (Hardware_Model_name VARCHAR, screen_mode VARCHAR); CREATE TABLE screen_mode (Graphics_mode VARCHAR, Type VARCHAR)",
        "question": "List the hardware model name for the phones that were produced by \"Nokia Corporation\" or whose screen mode type is \"Graphics.\""
    },
    {
        "answer": "SELECT COUNT(surface) FROM table_1918850_2 WHERE championship = \"Australian Open\" AND score_in_the_final = \"6\u20133, 4\u20136, 11\u20139\"",
        "context": "CREATE TABLE table_1918850_2 (surface VARCHAR, championship VARCHAR, score_in_the_final VARCHAR)",
        "question": "state the number of surface where championship is australian open and score in the final is 6\u20133, 4\u20136, 11\u20139"
    },
    {
        "answer": "SELECT incumbent FROM table_name_75 WHERE results = \"re-elected\" AND party = \"democratic\" AND district = \"minnesota 7\"",
        "context": "CREATE TABLE table_name_75 (incumbent VARCHAR, district VARCHAR, results VARCHAR, party VARCHAR)",
        "question": "What is Incumbent, when Results is \"Re-Elected\", when Party is \"Democratic\", and when District is \"Minnesota 7\"?"
    },
    {
        "answer": "SELECT DISTINCT T2.Hardware_Model_name, T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15",
        "context": "CREATE TABLE phone (Hardware_Model_name VARCHAR, Company_name VARCHAR, screen_mode VARCHAR); CREATE TABLE screen_mode (Graphics_mode VARCHAR, used_kb INTEGER)",
        "question": "List the phone hardware model and company name for the phones whose screen usage in kb is between 10 and 15."
    },
    {
        "answer": "SELECT year FROM table_1918850_2 WHERE opponents_in_the_final = \"Helena Sukov\u00e1 Todd Woodbridge\"",
        "context": "CREATE TABLE table_1918850_2 (year VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "when were helena sukov\u00e1 todd woodbridge the opponents in the final"
    },
    {
        "answer": "SELECT championship FROM table_1918850_2 WHERE outcome = \"Winner\" AND surface = \"Hard\" AND partner = \"Nicole Provis\" AND opponents_in_the_final = \"Helena Sukov\u00e1 Tom Nijssen\"",
        "context": "CREATE TABLE table_1918850_2 (championship VARCHAR, opponents_in_the_final VARCHAR, partner VARCHAR, outcome VARCHAR, surface VARCHAR)",
        "question": "which championship had helena sukov\u00e1 tom nijssen as opponents in the final and nicole provis as partner, the surface was hard and the outcome was winner"
    },
    {
        "answer": "SELECT AVG(RAM_MiB) FROM chip_model WHERE NOT model_name IN (SELECT chip_model FROM phone)",
        "context": "CREATE TABLE chip_model (RAM_MiB INTEGER, model_name VARCHAR, chip_model VARCHAR); CREATE TABLE phone (RAM_MiB INTEGER, model_name VARCHAR, chip_model VARCHAR)",
        "question": "Find the average ram mib size of the chip models that are never used by any phone."
    },
    {
        "answer": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING COUNT(*) > 3",
        "context": "CREATE TABLE phone (Accreditation_level VARCHAR)",
        "question": "Find the accreditation level that more than 3 phones use."
    },
    {
        "answer": "SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode = t2.screen_mode WHERE t2.Accreditation_type = 'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode = t2.screen_mode WHERE t2.Accreditation_type = 'Full'",
        "context": "CREATE TABLE phone (screen_mode VARCHAR, Accreditation_type VARCHAR); CREATE TABLE screen_mode (pixels VARCHAR, Graphics_mode VARCHAR)",
        "question": "Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with Provisional accreditation types."
    },
    {
        "answer": "SELECT last_performance FROM table_19189856_1 WHERE performer = \"Leon Varkas category:Articles with hCards\"",
        "context": "CREATE TABLE table_19189856_1 (last_performance VARCHAR, performer VARCHAR)",
        "question": "what is the last performance of leon varkas category:articles with hcards"
    },
    {
        "answer": "SELECT COUNT(finale) FROM table_19210674_1 WHERE english_title = \"Beyond the Realm of Conscience\"",
        "context": "CREATE TABLE table_19210674_1 (finale VARCHAR, english_title VARCHAR)",
        "question": "How many different finales had the English title \"Beyond the Realm of Conscience\"?"
    },
    {
        "answer": "SELECT DISTINCT POSITION FROM match_season WHERE College = \"UCLA\" OR College = \"Duke\"",
        "context": "CREATE TABLE match_season (POSITION VARCHAR, College VARCHAR)",
        "question": "Show the distinct position of players from college UCLA or Duke."
    },
    {
        "answer": "SELECT T2.Season, T2.Player, T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country",
        "context": "CREATE TABLE match_season (Season VARCHAR, Player VARCHAR, Country VARCHAR); CREATE TABLE country (Country_name VARCHAR, Country_id VARCHAR)",
        "question": "Show the season, the player, and the name of the country that player belongs to."
    },
    {
        "answer": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = \"Indonesia\"",
        "context": "CREATE TABLE country (Country_id VARCHAR, Country_name VARCHAR); CREATE TABLE match_season (Player VARCHAR, Country VARCHAR)",
        "question": "Which players are from Indonesia?"
    },
    {
        "answer": "SELECT AVG(money___) AS $__ FROM table_name_55 WHERE to_par = 15 AND country = \"united states\"",
        "context": "CREATE TABLE table_name_55 (money___ INTEGER, to_par VARCHAR, country VARCHAR)",
        "question": "What is the average money for a to par of 15, and is from the United States?"
    },
    {
        "answer": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = \"Dublin\"",
        "context": "CREATE TABLE country (Country_id VARCHAR, Capital VARCHAR); CREATE TABLE match_season (Position VARCHAR, Country VARCHAR)",
        "question": "What are the distinct positions of the players from a country whose capital is Dublin?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = \"Defender\"",
        "context": "CREATE TABLE country (Official_native_language VARCHAR, Country_id VARCHAR); CREATE TABLE match_season (Country VARCHAR, Position VARCHAR)",
        "question": "How many distinct official languages are there among countries of players whose positions are defenders."
    },
    {
        "answer": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.College = \"Maryland\" OR T2.College = \"Duke\"",
        "context": "CREATE TABLE country (Official_native_language VARCHAR, Country_id VARCHAR); CREATE TABLE match_season (Country VARCHAR, College VARCHAR)",
        "question": "What are the official languages of the countries of players from Maryland or Duke college?"
    },
    {
        "answer": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Ryley Goldner\"",
        "context": "CREATE TABLE match_season (Position VARCHAR, Team VARCHAR); CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)",
        "question": "Show the positions of the players from the team with name \"Ryley Goldner\"."
    },
    {
        "answer": "SELECT COUNT(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = \"Columbus Crew\"",
        "context": "CREATE TABLE match_season (College VARCHAR, Team VARCHAR); CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)",
        "question": "How many distinct colleges are associated with players from the team with name \"Columbus Crew\"."
    },
    {
        "answer": "SELECT grid FROM table_name_61 WHERE laps > 8 AND manufacturer = \"honda\" AND time_retired = \"retirement\"",
        "context": "CREATE TABLE table_name_61 (grid VARCHAR, time_retired VARCHAR, laps VARCHAR, manufacturer VARCHAR)",
        "question": "Which Grid has more than 8 Laps, and a Manufacturer of honda, and a Time/Retired of retirement?"
    },
    {
        "answer": "SELECT SUM(laps) FROM table_name_97 WHERE grid < 5 AND time_retired = \"retirement\"",
        "context": "CREATE TABLE table_name_97 (laps INTEGER, grid VARCHAR, time_retired VARCHAR)",
        "question": "How many Laps have a Grid smaller than 5, and a Time/Retired of retirement?"
    },
    {
        "answer": "SELECT College FROM match_season GROUP BY College HAVING COUNT(*) >= 2 ORDER BY College DESC",
        "context": "CREATE TABLE match_season (College VARCHAR)",
        "question": "Show the name of colleges that have at least two players in descending alphabetical order."
    },
    {
        "answer": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = \"Forward\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = \"Defender\"",
        "context": "CREATE TABLE country (Country_name VARCHAR, Country_id VARCHAR); CREATE TABLE match_season (Country VARCHAR, Position VARCHAR)",
        "question": "What are the names of countries that have both players with position forward and players with position defender?"
    },
    {
        "answer": "SELECT informational_cvbs_lines FROM table_1926240_1 WHERE max_characters__per_page_row_ = 32 AND standard = \"B (global)\"",
        "context": "CREATE TABLE table_1926240_1 (informational_cvbs_lines VARCHAR, max_characters__per_page_row_ VARCHAR, standard VARCHAR)",
        "question": "What was the informational CVBS Lines of the encoding with max character of 32 and has B (global) standard?"
    },
    {
        "answer": "SELECT MAX(Points) FROM climber WHERE Country = \"United Kingdom\"",
        "context": "CREATE TABLE climber (Points INTEGER, Country VARCHAR)",
        "question": "What is the maximum point for climbers whose country is United Kingdom?"
    },
    {
        "answer": "SELECT T1.Name, T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID",
        "context": "CREATE TABLE mountain (Height VARCHAR, Mountain_ID VARCHAR); CREATE TABLE climber (Name VARCHAR, Mountain_ID VARCHAR)",
        "question": "Show the names of climbers and the heights of mountains they climb."
    },
    {
        "answer": "SELECT MAX(tournaments) FROM table_name_13 WHERE pro_debut = \"july 2002\"",
        "context": "CREATE TABLE table_name_13 (tournaments INTEGER, pro_debut VARCHAR)",
        "question": "What is the highest Tournaments, when Pro Debut is \"July 2002\"?"
    },
    {
        "answer": "SELECT COUNT(league_cup_goals) FROM table_name_90 WHERE total_goals = 0 AND name = \"delroy facey\"",
        "context": "CREATE TABLE table_name_90 (league_cup_goals VARCHAR, total_goals VARCHAR, name VARCHAR)",
        "question": "How many League Cup Goals have 0 as the total goals, with delroy facey as the name?"
    },
    {
        "answer": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = \"Uganda\"",
        "context": "CREATE TABLE mountain (Mountain_ID VARCHAR, Country VARCHAR); CREATE TABLE climber (Time VARCHAR, Mountain_ID VARCHAR)",
        "question": "Show the times used by climbers to climb mountains in Country Uganda."
    },
    {
        "answer": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = \"West Germany\"",
        "context": "CREATE TABLE mountain (Name VARCHAR, Mountain_ID VARCHAR); CREATE TABLE climber (Mountain_ID VARCHAR, Country VARCHAR)",
        "question": "Show the distinct names of mountains climbed by climbers from country \"West Germany\"."
    },
    {
        "answer": "SELECT COUNT(total_goals) FROM table_name_80 WHERE total_apps = \"0 (3)\" AND league_goals < 0",
        "context": "CREATE TABLE table_name_80 (total_goals VARCHAR, total_apps VARCHAR, league_goals VARCHAR)",
        "question": "How many total goals have 0 (3) as total apps, with league goals less than 0?"
    },
    {
        "answer": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID",
        "context": "CREATE TABLE body_builder (People_ID VARCHAR); CREATE TABLE people (Name VARCHAR, People_ID VARCHAR)",
        "question": "What are the names of body builders?"
    },
    {
        "answer": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total > 300",
        "context": "CREATE TABLE people (Name VARCHAR, People_ID VARCHAR); CREATE TABLE body_builder (People_ID VARCHAR, Total INTEGER)",
        "question": "What are the names of body builders whose total score is higher than 300?"
    },
    {
        "answer": "SELECT T2.Birth_Date, T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC LIMIT 1",
        "context": "CREATE TABLE body_builder (People_ID VARCHAR, Total VARCHAR); CREATE TABLE people (Birth_Date VARCHAR, Birth_Place VARCHAR, People_ID VARCHAR)",
        "question": "What are the birth date and birth place of the body builder with the highest total points?"
    },
    {
        "answer": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total < 315",
        "context": "CREATE TABLE people (Height VARCHAR, People_ID VARCHAR); CREATE TABLE body_builder (People_ID VARCHAR, Total INTEGER)",
        "question": "What are the heights of body builders with total score smaller than 315?"
    },
    {
        "answer": "SELECT AVG(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Height > 200",
        "context": "CREATE TABLE people (People_ID VARCHAR, Height INTEGER); CREATE TABLE body_builder (Total INTEGER, People_ID VARCHAR)",
        "question": "What is the average total score of body builders with height bigger than 200?"
    },
    {
        "answer": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC",
        "context": "CREATE TABLE body_builder (People_ID VARCHAR, Total VARCHAR); CREATE TABLE people (Name VARCHAR, People_ID VARCHAR)",
        "question": "What are the names of body builders in descending order of total scores?"
    },
    {
        "answer": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE people (Birth_Place VARCHAR)",
        "question": "What is the most common birth place of people?"
    },
    {
        "answer": "SELECT year FROM table_1939202_2 WHERE league = \"USL Second division\" AND playoffs = \"Semifinals\" AND us_open_cup = \"Quarterfinals\"",
        "context": "CREATE TABLE table_1939202_2 (year VARCHAR, us_open_cup VARCHAR, league VARCHAR, playoffs VARCHAR)",
        "question": "What year at the US Open Cup quarterfinals, were the playoffs in the semifinals for the USL second division?"
    },
    {
        "answer": "SELECT Name, birth_place FROM people EXCEPT SELECT T1.Name, T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id = T2.people_id",
        "context": "CREATE TABLE people (Name VARCHAR, birth_place VARCHAR, people_id VARCHAR); CREATE TABLE body_builder (people_id VARCHAR); CREATE TABLE people (Name VARCHAR, birth_place VARCHAR)",
        "question": "List the names and origins of people who are not body builders."
    },
    {
        "answer": "SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id WHERE T1.snatch > 140 OR T2.height > 200",
        "context": "CREATE TABLE people (weight VARCHAR, people_id VARCHAR, height VARCHAR); CREATE TABLE body_builder (people_id VARCHAR, snatch VARCHAR)",
        "question": "List the weight of the body builders who have snatch score higher than 140 or have the height greater than 200."
    },
    {
        "answer": "SELECT MIN(no_in_series) FROM table_19401346_1 WHERE us_viewers__millions_ = \"9.35\"",
        "context": "CREATE TABLE table_19401346_1 (no_in_series INTEGER, us_viewers__millions_ VARCHAR)",
        "question": "What's the series number of the episode seen by 9.35 million people in the US?"
    },
    {
        "answer": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id WHERE T2.Birth_Date LIKE \"%January%\"",
        "context": "CREATE TABLE people (people_id VARCHAR, Birth_Date VARCHAR); CREATE TABLE body_builder (total VARCHAR, people_id VARCHAR)",
        "question": "What are the total scores of the body builders whose birthday contains the string \"January\" ?"
    },
    {
        "answer": "SELECT AVG(gold) FROM table_name_19 WHERE total < 4 AND nation = \"brazil\" AND bronze > 1",
        "context": "CREATE TABLE table_name_19 (gold INTEGER, bronze VARCHAR, total VARCHAR, nation VARCHAR)",
        "question": "What is the average number of gold medals won by Brazil for entries with more than 1 bronze medal but a total smaller than 4?"
    },
    {
        "answer": "SELECT COUNT(change_since_2006) FROM table_1940144_1 WHERE county = \"county Leitrim\"",
        "context": "CREATE TABLE table_1940144_1 (change_since_2006 VARCHAR, county VARCHAR)",
        "question": "How many places did the rank change since 22006 for County Leitrim? "
    },
    {
        "answer": "SELECT T2.Name, T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID",
        "context": "CREATE TABLE election (Date VARCHAR, Representative_ID VARCHAR); CREATE TABLE representative (Name VARCHAR, Representative_ID VARCHAR)",
        "question": "What are the names of representatives and the dates of elections they participated in."
    },
    {
        "answer": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes DESC",
        "context": "CREATE TABLE representative (Name VARCHAR, Representative_ID VARCHAR); CREATE TABLE election (Representative_ID VARCHAR)",
        "question": "What are the names of representatives in descending order of votes?"
    },
    {
        "answer": "SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes LIMIT 1",
        "context": "CREATE TABLE representative (Party VARCHAR, Representative_ID VARCHAR); CREATE TABLE election (Representative_ID VARCHAR)",
        "question": "What is the party of the representative that has the smallest number of votes."
    },
    {
        "answer": "SELECT COUNT(qb_rating) FROM table_19418696_3 WHERE completions = 1069",
        "context": "CREATE TABLE table_19418696_3 (qb_rating VARCHAR, completions VARCHAR)",
        "question": "How many QB ratings for the player with 1069 completions?"
    },
    {
        "answer": "SELECT AVG(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID WHERE T2.Party = \"Republican\"",
        "context": "CREATE TABLE election (Votes INTEGER, Representative_ID VARCHAR); CREATE TABLE representative (Representative_ID VARCHAR, Party VARCHAR)",
        "question": "What is the average number of votes of representatives from party \"Republican\"?"
    },
    {
        "answer": "SELECT Name FROM representative WHERE NOT Representative_ID IN (SELECT Representative_ID FROM election)",
        "context": "CREATE TABLE election (Name VARCHAR, Representative_ID VARCHAR); CREATE TABLE representative (Name VARCHAR, Representative_ID VARCHAR)",
        "question": "List the names of representatives that have not participated in elections listed here."
    },
    {
        "answer": "SELECT Party FROM representative WHERE State = \"New York\" INTERSECT SELECT Party FROM representative WHERE State = \"Pennsylvania\"",
        "context": "CREATE TABLE representative (Party VARCHAR, State VARCHAR)",
        "question": "Show the parties that have both representatives in New York state and representatives in Pennsylvania state."
    },
    {
        "answer": "SELECT clubs FROM table_19412902_1 WHERE group_stage = 4 AND member_association = \"Iran\"",
        "context": "CREATE TABLE table_19412902_1 (clubs VARCHAR, group_stage VARCHAR, member_association VARCHAR)",
        "question": "which club in group stage 4 had member association iran"
    },
    {
        "answer": "SELECT domestic_tournament FROM table_name_42 WHERE team = \"chennai super kings\"",
        "context": "CREATE TABLE table_name_42 (domestic_tournament VARCHAR, team VARCHAR)",
        "question": "What is the Domestic Tournament with Chennai Super Kings Team?"
    },
    {
        "answer": "SELECT money___$__ FROM table_name_30 WHERE player = \"lawson little\"",
        "context": "CREATE TABLE table_name_30 (money___$__ VARCHAR, player VARCHAR)",
        "question": "What is Lawson Little's Money ($) amount?"
    },
    {
        "answer": "SELECT division_titles FROM table_19451173_1 WHERE win_pct = \".558\"",
        "context": "CREATE TABLE table_19451173_1 (division_titles VARCHAR, win_pct VARCHAR)",
        "question": "How many division titles are there when the win pc is .558?"
    },
    {
        "answer": "SELECT T2.apt_number, T1.booking_start_date, T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id",
        "context": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, apt_id VARCHAR); CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)",
        "question": "Show the apartment numbers, start dates, and end dates of all the apartment bookings."
    },
    {
        "answer": "SELECT T1.booking_start_date, T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_type_code = \"Duplex\"",
        "context": "CREATE TABLE Apartments (apt_id VARCHAR, apt_type_code VARCHAR); CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, apt_id VARCHAR)",
        "question": "What are the booking start and end dates of the apartments with type code \"Duplex\"?"
    },
    {
        "answer": "SELECT MAX(town_ships) FROM table_19457_1 WHERE village_groups = 376",
        "context": "CREATE TABLE table_19457_1 (town_ships INTEGER, village_groups VARCHAR)",
        "question": "How many townships are there in the region with 376 village groups?"
    },
    {
        "answer": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = \"Suite 634\"",
        "context": "CREATE TABLE Apartments (apt_id VARCHAR, apt_number VARCHAR); CREATE TABLE Apartment_Bookings (booking_status_code VARCHAR, apt_id VARCHAR)",
        "question": "What is the booking status code of the apartment with apartment number \"Suite 634\"?"
    },
    {
        "answer": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = \"Confirmed\"",
        "context": "CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR); CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR)",
        "question": "Show the distinct apartment numbers of the apartments that have bookings with status code \"Confirmed\"."
    },
    {
        "answer": "SELECT name FROM table_19487922_1 WHERE country = \"France\" AND race_entries__starts_ = \"10\"",
        "context": "CREATE TABLE table_19487922_1 (name VARCHAR, country VARCHAR, race_entries__starts_ VARCHAR)",
        "question": "Who is the competitor from France with 10 starts?"
    },
    {
        "answer": "SELECT T2.guest_first_name, T1.booking_start_date, T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id",
        "context": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, guest_id VARCHAR); CREATE TABLE Guests (guest_first_name VARCHAR, guest_id VARCHAR)",
        "question": "Show the guest first names, start dates, and end dates of all the apartment bookings."
    },
    {
        "answer": "SELECT T1.booking_start_date, T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = \"Female\"",
        "context": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, guest_id VARCHAR); CREATE TABLE Guests (guest_id VARCHAR, gender_code VARCHAR)",
        "question": "Show the start dates and end dates of all the apartment bookings made by guests with gender code \"Female\"."
    },
    {
        "answer": "SELECT AVG(down__up_to_kbit_s_) FROM table_name_73 WHERE provider = \"willy.tel\" AND up__up_to_kbit_s_ > 1984",
        "context": "CREATE TABLE table_name_73 (down__up_to_kbit_s_ INTEGER, provider VARCHAR, up__up_to_kbit_s_ VARCHAR)",
        "question": "What is the average down (up to kbit/s) when the provider is willy.tel and the up (kbit/s) is more than 1984?"
    },
    {
        "answer": "SELECT AVG(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = \"Provisional\"",
        "context": "CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR); CREATE TABLE Apartments (apt_id VARCHAR)",
        "question": "Show the average room count of the apartments that have booking status code \"Provisional\"."
    },
    {
        "answer": "SELECT COUNT(championships) FROM table_19487922_2 WHERE country = \"Pakistan\"",
        "context": "CREATE TABLE table_19487922_2 (championships VARCHAR, country VARCHAR)",
        "question": "How many championships does Pakistan have?"
    },
    {
        "answer": "SELECT SUM(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = \"Columbus Square\"",
        "context": "CREATE TABLE Apartment_Buildings (building_id VARCHAR, building_short_name VARCHAR); CREATE TABLE Apartments (room_count INTEGER, building_id VARCHAR)",
        "question": "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\"."
    },
    {
        "answer": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4",
        "context": "CREATE TABLE Apartment_Facilities (facility_code VARCHAR, apt_id VARCHAR); CREATE TABLE Apartments (apt_id VARCHAR, bedroom_count INTEGER)",
        "question": "Show the facility codes of apartments with more than 4 bedrooms."
    },
    {
        "answer": "SELECT T2.apt_type_code, T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = \"Kyle\"",
        "context": "CREATE TABLE Apartment_Buildings (building_id VARCHAR, building_manager VARCHAR); CREATE TABLE Apartments (apt_type_code VARCHAR, apt_number VARCHAR, building_id VARCHAR)",
        "question": "Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\"."
    },
    {
        "answer": "SELECT show FROM table_name_77 WHERE award = \"indian television academy awards\"",
        "context": "CREATE TABLE table_name_77 (show VARCHAR, award VARCHAR)",
        "question": "Which Show has an Award of indian television academy awards?"
    },
    {
        "answer": "SELECT T2.guest_first_name, T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T1.booking_status_code = \"Confirmed\"",
        "context": "CREATE TABLE Apartment_Bookings (guest_id VARCHAR, booking_status_code VARCHAR); CREATE TABLE Guests (guest_first_name VARCHAR, guest_last_name VARCHAR, guest_id VARCHAR)",
        "question": "Show the first names and last names of all the guests that have apartment bookings with status code \"Confirmed\"."
    },
    {
        "answer": "SELECT format FROM table_1949994_7 WHERE end_date = \"June 25\"",
        "context": "CREATE TABLE table_1949994_7 (format VARCHAR, end_date VARCHAR)",
        "question": "What's the format of the season that ended on June 25?"
    },
    {
        "answer": "SELECT apt_type_code, COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*)",
        "context": "CREATE TABLE Apartments (apt_type_code VARCHAR)",
        "question": "Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order."
    },
    {
        "answer": "SELECT circuit FROM table_name_54 WHERE team = \"r.j.macarthur onslow\" AND city___state = \"sydney , new south wales\"",
        "context": "CREATE TABLE table_name_54 (circuit VARCHAR, team VARCHAR, city___state VARCHAR)",
        "question": "What is Circuit, when Team is \"R.J.MacArthur Onslow\", and when City / State is \"Sydney , New South Wales\"?"
    },
    {
        "answer": "SELECT us_viewers__millions_ FROM table_19501664_1 WHERE directed_by = \"Tony Phelan\"",
        "context": "CREATE TABLE table_19501664_1 (us_viewers__millions_ VARCHAR, directed_by VARCHAR)",
        "question": "Name the viewers for the episode directed by tony phelan"
    },
    {
        "answer": "SELECT apt_type_code FROM Apartments WHERE bathroom_count > 1 GROUP BY apt_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Apartments (apt_type_code VARCHAR, bathroom_count INTEGER)",
        "question": "Show the most common apartment type code among apartments with more than 1 bathroom."
    },
    {
        "answer": "SELECT year FROM table_name_80 WHERE film = \"bullets over broadway\" AND category = \"best supporting actress\" AND actor = \"jennifer tilly\"",
        "context": "CREATE TABLE table_name_80 (year VARCHAR, actor VARCHAR, film VARCHAR, category VARCHAR)",
        "question": "What year was Jennifer Tilly's Film of Bullets Over Broadway up in the best supporting actress category?"
    },
    {
        "answer": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = \"Provisional\"",
        "context": "CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR); CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR)",
        "question": "Show the apartment numbers of apartments with bookings that have status code both \"Provisional\" and \"Confirmed\""
    },
    {
        "answer": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id = T2.apt_id WHERE T2.available_yn = 1",
        "context": "CREATE TABLE View_Unit_Status (apt_id VARCHAR, available_yn VARCHAR); CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)",
        "question": "Show the apartment numbers of apartments with unit status availability of both 0 and 1."
    },
    {
        "answer": "SELECT result FROM table_name_78 WHERE year > 1989 AND category = \"best supporting actress\" AND actor = \"samantha morton\"",
        "context": "CREATE TABLE table_name_78 (result VARCHAR, actor VARCHAR, year VARCHAR, category VARCHAR)",
        "question": "What is the result of Samantha Morton being up for best supporting actress in a year later than 1989?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Apartments WHERE NOT apt_id IN (SELECT apt_id FROM Apartment_Facilities)",
        "context": "CREATE TABLE Apartment_Facilities (apt_id VARCHAR); CREATE TABLE Apartments (apt_id VARCHAR)",
        "question": "How many apartments do not have any facility?"
    },
    {
        "answer": "SELECT COUNT(wins) FROM table_name_93 WHERE glenelg_fl = \"bahgallah\" AND byes > 3",
        "context": "CREATE TABLE table_name_93 (wins VARCHAR, glenelg_fl VARCHAR, byes VARCHAR)",
        "question": "How many wins did Glenelg FL of bahgallah have when there were more than 3 byes?"
    },
    {
        "answer": "SELECT order__number FROM table_19508635_1 WHERE theme = \"1960s\"",
        "context": "CREATE TABLE table_19508635_1 (order__number VARCHAR, theme VARCHAR)",
        "question": "Name the order number for 1960s"
    },
    {
        "answer": "SELECT T1.season, T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.injury = 'Foot injury' OR T3.injury = 'Knee problem'",
        "context": "CREATE TABLE stadium (name VARCHAR, id VARCHAR); CREATE TABLE injury_accident (game_id VARCHAR, injury VARCHAR); CREATE TABLE game (season VARCHAR, stadium_id VARCHAR, id VARCHAR)",
        "question": "In which season and which stadium did any player have an injury of 'Foot injury' or 'Knee problem'?"
    },
    {
        "answer": "SELECT T1.id, T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id JOIN injury_accident AS T3 ON T2.id = T3.game_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE stadium (id VARCHAR, name VARCHAR); CREATE TABLE injury_accident (game_id VARCHAR); CREATE TABLE game (stadium_id VARCHAR, id VARCHAR)",
        "question": "What are the id and name of the stadium where the most injury accidents happened?"
    },
    {
        "answer": "SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.player = 'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.player = 'Thiago Motta'",
        "context": "CREATE TABLE stadium (name VARCHAR, id VARCHAR); CREATE TABLE game (stadium_id VARCHAR, id VARCHAR); CREATE TABLE injury_accident (game_id VARCHAR, player VARCHAR)",
        "question": "List the name of the stadium where both the player 'Walter Samuel' and the player 'Thiago Motta' got injured."
    },
    {
        "answer": "SELECT name, average_attendance, total_attendance FROM stadium EXCEPT SELECT T2.name, T2.average_attendance, T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id",
        "context": "CREATE TABLE stadium (name VARCHAR, average_attendance VARCHAR, total_attendance VARCHAR, id VARCHAR); CREATE TABLE stadium (name VARCHAR, average_attendance VARCHAR, total_attendance VARCHAR); CREATE TABLE game (stadium_id VARCHAR, id VARCHAR); CREATE TABLE injury_accident (game_id VARCHAR)",
        "question": "Show the name, average attendance, total attendance for stadiums where no accidents happened."
    },
    {
        "answer": "SELECT league FROM table_name_18 WHERE away = \"2-3\"",
        "context": "CREATE TABLE table_name_18 (league VARCHAR, away VARCHAR)",
        "question": "What league has 2-3 as the away?"
    },
    {
        "answer": "SELECT winner FROM table_name_96 WHERE circuit = \"lakeside international raceway\" AND series = \"amc round 4\"",
        "context": "CREATE TABLE table_name_96 (winner VARCHAR, circuit VARCHAR, series VARCHAR)",
        "question": "Who was the Winner in the AMC Round 4 at Lakeside International Raceway?"
    },
    {
        "answer": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes)",
        "context": "CREATE TABLE Player (player_name VARCHAR, player_api_id VARCHAR); CREATE TABLE Player_Attributes (overall_rating INTEGER); CREATE TABLE Player_Attributes (player_api_id VARCHAR, overall_rating INTEGER)",
        "question": "List all player names who have an overall rating higher than the average."
    },
    {
        "answer": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling = (SELECT MAX(overall_rating) FROM Player_Attributes)",
        "context": "CREATE TABLE Player (player_name VARCHAR, player_api_id VARCHAR); CREATE TABLE Player_Attributes (player_api_id VARCHAR, dribbling VARCHAR); CREATE TABLE Player_Attributes (overall_rating INTEGER)",
        "question": "What are the names of players who have the best dribbling?"
    },
    {
        "answer": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing > 90 AND T2.preferred_foot = \"right\"",
        "context": "CREATE TABLE Player (player_name VARCHAR, player_api_id VARCHAR); CREATE TABLE Player_Attributes (player_api_id VARCHAR, crossing VARCHAR, preferred_foot VARCHAR)",
        "question": "List the names of all players who have a crossing score higher than 90 and prefer their right foot."
    },
    {
        "answer": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = \"left\" AND T2.overall_rating >= 85 AND T2.overall_rating <= 90",
        "context": "CREATE TABLE Player (player_name VARCHAR, player_api_id VARCHAR); CREATE TABLE Player_Attributes (player_api_id VARCHAR, overall_rating VARCHAR, preferred_foot VARCHAR)",
        "question": "List the names of all left-footed players who have overall rating between 85 and 90."
    },
    {
        "answer": "SELECT player_api_id FROM Player WHERE height >= 180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 85",
        "context": "CREATE TABLE Player_Attributes (player_api_id VARCHAR, height VARCHAR, overall_rating INTEGER); CREATE TABLE Player (player_api_id VARCHAR, height VARCHAR, overall_rating INTEGER)",
        "question": "List all of the player ids with a height of at least 180cm and an overall rating higher than 85."
    },
    {
        "answer": "SELECT player_api_id FROM Player WHERE height >= 180 AND height <= 190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = \"left\"",
        "context": "CREATE TABLE Player_Attributes (player_api_id VARCHAR, preferred_foot VARCHAR, height VARCHAR); CREATE TABLE Player (player_api_id VARCHAR, preferred_foot VARCHAR, height VARCHAR)",
        "question": "List all of the ids for left-footed players with a height between 180cm and 190cm."
    },
    {
        "answer": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY overall_rating DESC LIMIT 3",
        "context": "CREATE TABLE Player (player_name VARCHAR, player_api_id VARCHAR); CREATE TABLE Player_Attributes (player_api_id VARCHAR)",
        "question": "Who are the top 3 players in terms of overall rating?"
    },
    {
        "answer": "SELECT DISTINCT T1.player_name, T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY potential DESC LIMIT 5",
        "context": "CREATE TABLE Player_Attributes (player_api_id VARCHAR); CREATE TABLE Player (player_name VARCHAR, birthday VARCHAR, player_api_id VARCHAR)",
        "question": "List the names and birthdays of the top five players in terms of potential."
    },
    {
        "answer": "SELECT COUNT(arena__capacity_) FROM table_19526911_1 WHERE head_coach = \"Yuriy Korotkevich\"",
        "context": "CREATE TABLE table_19526911_1 (arena__capacity_ VARCHAR, head_coach VARCHAR)",
        "question": "What is the arena capacity of the arena in the town whose head coach is Yuriy Korotkevich?"
    },
    {
        "answer": "SELECT Attendance FROM performance WHERE LOCATION = \"TD Garden\" OR LOCATION = \"Bell Centre\"",
        "context": "CREATE TABLE performance (Attendance VARCHAR, LOCATION VARCHAR)",
        "question": "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\""
    },
    {
        "answer": "SELECT winning_span FROM table_1953516_1 WHERE country = \"England\" AND name = \"Paul Casey\"",
        "context": "CREATE TABLE table_1953516_1 (winning_span VARCHAR, country VARCHAR, name VARCHAR)",
        "question": "What is the winning span in the country of England with the name of paul casey?"
    },
    {
        "answer": "SELECT LOCATION FROM performance WHERE Attendance > 2000 INTERSECT SELECT LOCATION FROM performance WHERE Attendance < 1000",
        "context": "CREATE TABLE performance (LOCATION VARCHAR, Attendance INTEGER)",
        "question": "Show the locations that have both performances with more than 2000 attendees and performances with less than 1000 attendees."
    },
    {
        "answer": "SELECT T2.Name, T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID",
        "context": "CREATE TABLE performance (Location VARCHAR, Performance_ID VARCHAR); CREATE TABLE member (Name VARCHAR, Member_ID VARCHAR); CREATE TABLE member_attendance (Member_ID VARCHAR, Performance_ID VARCHAR)",
        "question": "Show the names of members and the location of the performances they attended."
    },
    {
        "answer": "SELECT T2.Name, T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID ORDER BY T2.Name",
        "context": "CREATE TABLE performance (Location VARCHAR, Performance_ID VARCHAR); CREATE TABLE member (Name VARCHAR, Member_ID VARCHAR); CREATE TABLE member_attendance (Member_ID VARCHAR, Performance_ID VARCHAR)",
        "question": "Show the names of members and the location of performances they attended in ascending alphabetical order of their names."
    },
    {
        "answer": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = \"Violin\"",
        "context": "CREATE TABLE performance (Date VARCHAR, Performance_ID VARCHAR); CREATE TABLE member (Member_ID VARCHAR, Role VARCHAR); CREATE TABLE member_attendance (Member_ID VARCHAR, Performance_ID VARCHAR)",
        "question": "Show the dates of performances with attending members whose roles are \"Violin\"."
    },
    {
        "answer": "SELECT T2.Name, T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID ORDER BY T3.Attendance DESC",
        "context": "CREATE TABLE performance (Date VARCHAR, Performance_ID VARCHAR, Attendance VARCHAR); CREATE TABLE member (Name VARCHAR, Member_ID VARCHAR); CREATE TABLE member_attendance (Member_ID VARCHAR, Performance_ID VARCHAR)",
        "question": "Show the names of members and the dates of performances they attended in descending order of attendance of the performances."
    },
    {
        "answer": "SELECT AVG(hexadecimal) FROM table_name_62 WHERE decimal < 53 AND octal < 61 AND glyph > 0",
        "context": "CREATE TABLE table_name_62 (hexadecimal INTEGER, glyph VARCHAR, decimal VARCHAR, octal VARCHAR)",
        "question": "What is the average hexadecimal with a decimal less than 53, an octal less than 61, and a glyph greater than 0?"
    },
    {
        "answer": "SELECT lmp1_winning_team FROM table_19598014_2 WHERE rnd = 2 AND lmp2_winning_team = \"Adrian Fern\u00e1ndez Luis D\u00edaz\"",
        "context": "CREATE TABLE table_19598014_2 (lmp1_winning_team VARCHAR, rnd VARCHAR, lmp2_winning_team VARCHAR)",
        "question": "Name the lmp 1 winning team for rnd being 2 and adrian fern\u00e1ndez luis d\u00edaz"
    },
    {
        "answer": "SELECT MIN(octal) FROM table_name_82 WHERE hexadecimal = 30 AND glyph < 0",
        "context": "CREATE TABLE table_name_82 (octal INTEGER, hexadecimal VARCHAR, glyph VARCHAR)",
        "question": "What is the lowest octal with a 30 hexadecimal and less than 0 glyphs?"
    },
    {
        "answer": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING COUNT(*) = 2",
        "context": "CREATE TABLE prereq (course_id VARCHAR); CREATE TABLE course (title VARCHAR, course_id VARCHAR)",
        "question": "Find the title of courses that have two prerequisites?"
    },
    {
        "answer": "SELECT T1.title, T1.credits, T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING COUNT(*) > 1",
        "context": "CREATE TABLE prereq (course_id VARCHAR); CREATE TABLE course (title VARCHAR, credits VARCHAR, dept_name VARCHAR, course_id VARCHAR)",
        "question": "Find the title, credit, and department name of courses that have more than one prerequisites?"
    },
    {
        "answer": "SELECT title FROM course WHERE dept_name = 'Statistics' INTERSECT SELECT title FROM course WHERE dept_name = 'Psychology'",
        "context": "CREATE TABLE course (title VARCHAR, dept_name VARCHAR)",
        "question": "Find the title of course that is provided by both Statistics and Psychology departments."
    },
    {
        "answer": "SELECT title FROM course WHERE dept_name = 'Statistics' EXCEPT SELECT title FROM course WHERE dept_name = 'Psychology'",
        "context": "CREATE TABLE course (title VARCHAR, dept_name VARCHAR)",
        "question": "Find the title of course that is provided by Statistics but not Psychology departments."
    },
    {
        "answer": "SELECT to_par FROM table_19630743_2 WHERE winning_score = 69 - 66 - 68 = 203",
        "context": "CREATE TABLE table_19630743_2 (to_par VARCHAR, winning_score VARCHAR)",
        "question": "How many to par has the winning score of 69-66-68=203."
    },
    {
        "answer": "SELECT horse FROM table_19624708_1 WHERE owner = \"R. A. Scott\"",
        "context": "CREATE TABLE table_19624708_1 (horse VARCHAR, owner VARCHAR)",
        "question": "What horses does r. a. Scott own?"
    },
    {
        "answer": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE course (dept_name VARCHAR)",
        "question": "Find the names of the top 3 departments that provide the largest amount of courses?"
    },
    {
        "answer": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE YEAR = 2009 OR YEAR = 2010",
        "context": "CREATE TABLE student (name VARCHAR, id VARCHAR); CREATE TABLE takes (id VARCHAR)",
        "question": "Find the name of students who took any class in the years of 2009 and 2010."
    },
    {
        "answer": "SELECT scores_by_each_individual_judge FROM table_name_87 WHERE date_performed = \"august 7\" AND main_contestant = \"karanvir bohra\"",
        "context": "CREATE TABLE table_name_87 (scores_by_each_individual_judge VARCHAR, date_performed VARCHAR, main_contestant VARCHAR)",
        "question": "Which Scores by each individual judge has a Date performed of august 7, and a Main contestant of karanvir bohra?"
    },
    {
        "answer": "SELECT digital FROM table_name_24 WHERE provider = \"virgin [analogue]\"",
        "context": "CREATE TABLE table_name_24 (digital VARCHAR, provider VARCHAR)",
        "question": "What is the digital of Virgin [analogue]?"
    },
    {
        "answer": "SELECT fleet__number FROM table_19643196_1 WHERE length__ft_ = 30",
        "context": "CREATE TABLE table_19643196_1 (fleet__number VARCHAR, length__ft_ VARCHAR)",
        "question": "What is the fleet number when the length (ft) is 30?"
    },
    {
        "answer": "SELECT no_of_channels FROM table_name_87 WHERE transmission = \"analogue satellite\" AND provider = \"sky [analogue]\"",
        "context": "CREATE TABLE table_name_87 (no_of_channels VARCHAR, transmission VARCHAR, provider VARCHAR)",
        "question": "How many analogue satellite channels does Sky [Analogue] have?"
    },
    {
        "answer": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING COUNT(*) > 1",
        "context": "CREATE TABLE advisor (i_id VARCHAR); CREATE TABLE instructor (name VARCHAR, id VARCHAR)",
        "question": "Find the name of instructors who are advising more than one student."
    },
    {
        "answer": "SELECT T1.title, T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id JOIN instructor AS T3 ON T2.id = T3.id WHERE YEAR = 2008 ORDER BY T1.title",
        "context": "CREATE TABLE course (title VARCHAR, course_id VARCHAR); CREATE TABLE teaches (course_id VARCHAR, id VARCHAR); CREATE TABLE instructor (name VARCHAR, id VARCHAR)",
        "question": "list in alphabetic order all course names and their instructors' names in year 2008."
    },
    {
        "answer": "SELECT week_14_nov_27 FROM table_name_37 WHERE week_13_nov_20 = \"nebraska (8-2)\"",
        "context": "CREATE TABLE table_name_37 (week_14_nov_27 VARCHAR, week_13_nov_20 VARCHAR)",
        "question": "What was Week 14 when Week 13 was Nebraska (8-2)?"
    },
    {
        "answer": "SELECT MIN(salary), dept_name FROM instructor GROUP BY dept_name HAVING AVG(salary) > (SELECT AVG(salary) FROM instructor)",
        "context": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER)",
        "question": "Find the minimum salary for the departments whose average salary is above the average payment of all instructors."
    },
    {
        "answer": "SELECT championship FROM table_name_66 WHERE date = \"26 may 1986\"",
        "context": "CREATE TABLE table_name_66 (championship VARCHAR, date VARCHAR)",
        "question": "What Championship has a Date of 26 may 1986?"
    },
    {
        "answer": "SELECT nationality FROM table_1965650_4 WHERE college_junior_club_team = \"Edmonton Oil Kings (WCHL)\"",
        "context": "CREATE TABLE table_1965650_4 (nationality VARCHAR, college_junior_club_team VARCHAR)",
        "question": "What's the nationality of the player coming from Edmonton Oil Kings (WCHL)?"
    },
    {
        "answer": "SELECT semester, YEAR FROM takes GROUP BY semester, YEAR ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE takes (semester VARCHAR, YEAR VARCHAR)",
        "question": "Find the semester and year which has the least number of student taking any class."
    },
    {
        "answer": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'",
        "context": "CREATE TABLE advisor (s_id VARCHAR); CREATE TABLE student (id VARCHAR, dept_name VARCHAR)",
        "question": "What is the id of the instructor who advises of all students from History department?"
    },
    {
        "answer": "SELECT T2.name, T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'",
        "context": "CREATE TABLE instructor (name VARCHAR, salary VARCHAR, id VARCHAR); CREATE TABLE advisor (i_id VARCHAR, s_id VARCHAR); CREATE TABLE student (id VARCHAR, dept_name VARCHAR)",
        "question": "Find the name and salary of the instructors who are advisors of any student from History department?"
    },
    {
        "answer": "SELECT COUNT(nationality) FROM table_1965650_9 WHERE college_junior_club_team = \"Sault Ste. Marie Greyhounds (OHA)\"",
        "context": "CREATE TABLE table_1965650_9 (nationality VARCHAR, college_junior_club_team VARCHAR)",
        "question": "When  sault ste. marie greyhounds (oha) is the  college, junior, or club team how many nationalities are there?"
    },
    {
        "answer": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance')",
        "context": "CREATE TABLE course (title VARCHAR, course_id VARCHAR); CREATE TABLE prereq (prereq_id VARCHAR, course_id VARCHAR); CREATE TABLE course (course_id VARCHAR, title VARCHAR)",
        "question": "What is the title of the prerequisite class of International Finance course?"
    },
    {
        "answer": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id = T2.course_id WHERE T2.title = 'Differential Geometry')",
        "context": "CREATE TABLE prereq (course_id VARCHAR, prereq_id VARCHAR); CREATE TABLE course (title VARCHAR, course_id VARCHAR); CREATE TABLE course (course_id VARCHAR, title VARCHAR)",
        "question": "Find the title of course whose prerequisite is course Differential Geometry."
    },
    {
        "answer": "SELECT SUM(race_1) FROM table_name_45 WHERE race_3 = \"5\" AND points < 59",
        "context": "CREATE TABLE table_name_45 (race_1 INTEGER, race_3 VARCHAR, points VARCHAR)",
        "question": "How many race 1's have 5 as the race 3, with points less than 59?"
    },
    {
        "answer": "SELECT player FROM table_name_25 WHERE country = \"south africa\" AND score = 76 - 75 - 73 - 71 = 295",
        "context": "CREATE TABLE table_name_25 (player VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "Who is from south africa and has a score of 76-75-73-71=295?"
    },
    {
        "answer": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id = T2.id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.title = 'C Programming'",
        "context": "CREATE TABLE teaches (id VARCHAR, course_id VARCHAR); CREATE TABLE course (course_id VARCHAR, title VARCHAR); CREATE TABLE instructor (name VARCHAR, id VARCHAR)",
        "question": "Find the name of the instructors who taught C Programming course before."
    },
    {
        "answer": "SELECT COUNT(county) FROM table_19681738_1 WHERE starky__percentage = \"20.96%\"",
        "context": "CREATE TABLE table_19681738_1 (county VARCHAR, starky__percentage VARCHAR)",
        "question": "How many times was country considered when starky % was 20.96%"
    },
    {
        "answer": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'Mobile Computing')",
        "context": "CREATE TABLE course (title VARCHAR, course_id VARCHAR); CREATE TABLE prereq (prereq_id VARCHAR, course_id VARCHAR); CREATE TABLE course (course_id VARCHAR, title VARCHAR)",
        "question": "What is the course title of the prerequisite of course Mobile Computing?"
    },
    {
        "answer": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id ORDER BY T3.tot_cred DESC LIMIT 1",
        "context": "CREATE TABLE student (id VARCHAR, tot_cred VARCHAR); CREATE TABLE advisor (i_id VARCHAR, s_id VARCHAR); CREATE TABLE instructor (name VARCHAR, id VARCHAR)",
        "question": "Find the name of instructor who is the advisor of the student who has the highest number of total credits."
    },
    {
        "answer": "SELECT AVG(T1.salary), COUNT(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name = T2.dept_name ORDER BY T2.budget DESC LIMIT 1",
        "context": "CREATE TABLE department (dept_name VARCHAR, budget VARCHAR); CREATE TABLE instructor (salary INTEGER, dept_name VARCHAR)",
        "question": "Find the number and averaged salary of all instructors who are in the department with the highest budget."
    },
    {
        "answer": "SELECT T3.title, T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building = T2.building AND T1.room_number = T2.room_number JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.capacity = (SELECT MAX(capacity) FROM classroom)",
        "context": "CREATE TABLE SECTION (course_id VARCHAR, building VARCHAR, room_number VARCHAR); CREATE TABLE course (title VARCHAR, credits VARCHAR, course_id VARCHAR); CREATE TABLE classroom (capacity INTEGER, building VARCHAR, room_number VARCHAR); CREATE TABLE classroom (capacity INTEGER)",
        "question": "What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?"
    },
    {
        "answer": "SELECT name FROM student WHERE NOT id IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.dept_name = 'Biology')",
        "context": "CREATE TABLE student (name VARCHAR, id VARCHAR); CREATE TABLE course (course_id VARCHAR, dept_name VARCHAR); CREATE TABLE takes (id VARCHAR, course_id VARCHAR)",
        "question": "Find the name of students who didn't take any course from Biology department."
    },
    {
        "answer": "SELECT COUNT(DISTINCT T2.id), COUNT(DISTINCT T3.id), T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name GROUP BY T3.dept_name",
        "context": "CREATE TABLE department (dept_name VARCHAR); CREATE TABLE student (id VARCHAR, dept_name VARCHAR); CREATE TABLE instructor (dept_name VARCHAR, id VARCHAR)",
        "question": "Find the total number of students and total number of instructors for each department."
    },
    {
        "answer": "SELECT SUM(population) FROM table_name_98 WHERE per_capita_income = \"$18,884\" AND number_of_households < 14 OFFSET 485",
        "context": "CREATE TABLE table_name_98 (population INTEGER, per_capita_income VARCHAR, number_of_households VARCHAR)",
        "question": "What is the population when the  Per capita income of $18,884, and a Number of households smaller than 14,485?"
    },
    {
        "answer": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id = T4.course_id WHERE T3.title = 'International Finance')",
        "context": "CREATE TABLE student (name VARCHAR, id VARCHAR); CREATE TABLE course (course_id VARCHAR, title VARCHAR); CREATE TABLE prereq (prereq_id VARCHAR, course_id VARCHAR); CREATE TABLE takes (id VARCHAR, course_id VARCHAR)",
        "question": "Find the name of students who have taken the prerequisite course of the course with title International Finance."
    },
    {
        "answer": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id = T2.course_id JOIN student AS T3 ON T2.id = T3.id WHERE T1.dept_name = 'Statistics'",
        "context": "CREATE TABLE student (name VARCHAR, id VARCHAR); CREATE TABLE takes (course_id VARCHAR, id VARCHAR); CREATE TABLE course (course_id VARCHAR, dept_name VARCHAR)",
        "question": "Find the name of students who took some course offered by Statistics department."
    },
    {
        "answer": "SELECT name, salary FROM instructor WHERE salary < (SELECT AVG(salary) FROM instructor WHERE dept_name = 'Physics')",
        "context": "CREATE TABLE instructor (name VARCHAR, salary INTEGER, dept_name VARCHAR)",
        "question": "Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department."
    },
    {
        "answer": "SELECT MAX(kneel) FROM table_name_59 WHERE stand < 187 AND prone = 197 AND qual > 576",
        "context": "CREATE TABLE table_name_59 (kneel INTEGER, qual VARCHAR, stand VARCHAR, prone VARCHAR)",
        "question": "What is the highest kneel with a stand less than 187, and a 197 prone, and a qual more than 576?"
    },
    {
        "answer": "SELECT T2.building, T2.room_number, T2.semester, T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE T1.dept_name = 'Psychology' ORDER BY T1.title",
        "context": "CREATE TABLE SECTION (building VARCHAR, room_number VARCHAR, semester VARCHAR, year VARCHAR, course_id VARCHAR); CREATE TABLE course (course_id VARCHAR, dept_name VARCHAR, title VARCHAR)",
        "question": "Find the building, room number, semester and year of all courses offered by Psychology department sorted by course titles."
    },
    {
        "answer": "SELECT score FROM table_name_52 WHERE competition = \"friendly\" AND venue = \"dreisamstadion, freiburg\"",
        "context": "CREATE TABLE table_name_52 (score VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "What is the venue for the friendly competition at Dreisamstadion, Freiburg?"
    },
    {
        "answer": "SELECT name, course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID WHERE T1.dept_name = 'Art'",
        "context": "CREATE TABLE instructor (ID VARCHAR, dept_name VARCHAR); CREATE TABLE teaches (ID VARCHAR)",
        "question": "Find the names of all instructors in the Art department who have taught some course and the course_id."
    },
    {
        "answer": "SELECT COUNT(change__percentage_points_) FROM table_19698421_1 WHERE average_voters_per_candidate = 1423",
        "context": "CREATE TABLE table_19698421_1 (change__percentage_points_ VARCHAR, average_voters_per_candidate VARCHAR)",
        "question": "How many elections had 1423 average voters per candidate?"
    },
    {
        "answer": "SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 UNION SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010",
        "context": "CREATE TABLE SECTION (course_id VARCHAR, semester VARCHAR, YEAR VARCHAR)",
        "question": "Find courses that ran in Fall 2009 or in Spring 2010."
    },
    {
        "answer": "SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 INTERSECT SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010",
        "context": "CREATE TABLE SECTION (course_id VARCHAR, semester VARCHAR, YEAR VARCHAR)",
        "question": "Find courses that ran in Fall 2009 and in Spring 2010."
    },
    {
        "answer": "SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 EXCEPT SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010",
        "context": "CREATE TABLE SECTION (course_id VARCHAR, semester VARCHAR, YEAR VARCHAR)",
        "question": "Find courses that ran in Fall 2009 but not in Spring 2010."
    },
    {
        "answer": "SELECT MAX(modified_speed__6th_gear_) FROM table_19704392_1 WHERE standard_speed__6th_gear_ = \"98\"",
        "context": "CREATE TABLE table_19704392_1 (modified_speed__6th_gear_ INTEGER, standard_speed__6th_gear_ VARCHAR)",
        "question": "when the max speed for modified speed (6th gear) where standard speed (6th gear) is 98"
    },
    {
        "answer": "SELECT name FROM instructor WHERE salary > (SELECT MIN(salary) FROM instructor WHERE dept_name = 'Biology')",
        "context": "CREATE TABLE instructor (name VARCHAR, salary INTEGER, dept_name VARCHAR)",
        "question": "Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department."
    },
    {
        "answer": "SELECT mountains_classification FROM table_name_82 WHERE general_classification = \"kim kirchen\" AND stage = \"7\"",
        "context": "CREATE TABLE table_name_82 (mountains_classification VARCHAR, general_classification VARCHAR, stage VARCHAR)",
        "question": "What's the mountains classification of Stage 7 when Kim Kirchen was the general classification?"
    },
    {
        "answer": "SELECT prod__number FROM table_1971734_1 WHERE filmed = \"Aug/Sept 1968\"",
        "context": "CREATE TABLE table_1971734_1 (prod__number VARCHAR, filmed VARCHAR)",
        "question": "What was the production number of the episode filmed in aug/sept 1968?"
    },
    {
        "answer": "SELECT T3.Name, T2.Date, T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID",
        "context": "CREATE TABLE people (Name VARCHAR, People_ID VARCHAR); CREATE TABLE debate (Date VARCHAR, Venue VARCHAR, Debate_ID VARCHAR); CREATE TABLE debate_people (Debate_ID VARCHAR, Affirmative VARCHAR)",
        "question": "Show the names of people, and dates and venues of debates they are on the affirmative side."
    },
    {
        "answer": "SELECT T3.Name, T2.Date, T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Negative = T3.People_ID ORDER BY T3.Name",
        "context": "CREATE TABLE people (Name VARCHAR, People_ID VARCHAR); CREATE TABLE debate (Date VARCHAR, Venue VARCHAR, Debate_ID VARCHAR); CREATE TABLE debate_people (Debate_ID VARCHAR, Negative VARCHAR)",
        "question": "Show the names of people, and dates and venues of debates they are on the negative side, ordered in ascending alphabetical order of name."
    },
    {
        "answer": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID WHERE T2.Num_of_Audience > 200",
        "context": "CREATE TABLE people (Name VARCHAR, People_ID VARCHAR); CREATE TABLE debate (Debate_ID VARCHAR, Num_of_Audience INTEGER); CREATE TABLE debate_people (Debate_ID VARCHAR, Affirmative VARCHAR)",
        "question": "Show the names of people that are on affirmative side of debates with number of audience bigger than 200."
    },
    {
        "answer": "SELECT T2.Name, COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name",
        "context": "CREATE TABLE people (Name VARCHAR, People_ID VARCHAR); CREATE TABLE debate_people (Affirmative VARCHAR)",
        "question": "Show the names of people and the number of times they have been on the affirmative side of debates."
    },
    {
        "answer": "SELECT COUNT(isolation) FROM table_19716903_1 WHERE mountain_peak = \"Jack Mountain\"",
        "context": "CREATE TABLE table_19716903_1 (isolation VARCHAR, mountain_peak VARCHAR)",
        "question": "How many different isolation numbers does the Jack Mountain peak have?"
    },
    {
        "answer": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t2.customer_details = \"Dayana Robel\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_details VARCHAR); CREATE TABLE policies (customer_id VARCHAR)",
        "question": "Find all the policy type codes associated with the customer \"Dayana Robel\""
    },
    {
        "answer": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_claimed = (SELECT MAX(amount_claimed) FROM claim_headers)",
        "context": "CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR); CREATE TABLE claim_headers (amount_claimed INTEGER); CREATE TABLE policies (policy_id VARCHAR, customer_id VARCHAR); CREATE TABLE claim_headers (policy_id VARCHAR, amount_claimed INTEGER)",
        "question": "What is the name of the customer who has made the largest amount of claim in a single claim?"
    },
    {
        "answer": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_piad = (SELECT MIN(amount_piad) FROM claim_headers)",
        "context": "CREATE TABLE claim_headers (amount_piad INTEGER); CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR); CREATE TABLE policies (policy_id VARCHAR, customer_id VARCHAR); CREATE TABLE claim_headers (policy_id VARCHAR, amount_piad INTEGER)",
        "question": "What is the name of the customer who has made the minimum amount of payment in one claim?"
    },
    {
        "answer": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id",
        "context": "CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR); CREATE TABLE customers (customer_details VARCHAR); CREATE TABLE policies (customer_id VARCHAR)",
        "question": "Find the names of customers who have no policies associated."
    },
    {
        "answer": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id = t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE claims_processing (claim_stage_id VARCHAR); CREATE TABLE claims_processing_stages (claim_status_name VARCHAR, claim_stage_id VARCHAR)",
        "question": "What is the name of the claim processing stage that most of the claims are on?"
    },
    {
        "answer": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = \"Deputy\"",
        "context": "CREATE TABLE policies (customer_id VARCHAR, policy_type_code VARCHAR); CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)",
        "question": "Find the names of the customers who have an deputy policy."
    },
    {
        "answer": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = \"Deputy\" OR t1.policy_type_code = \"Uniform\"",
        "context": "CREATE TABLE policies (customer_id VARCHAR, policy_type_code VARCHAR); CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)",
        "question": "Find the names of customers who either have an deputy policy or uniformed policy."
    },
    {
        "answer": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR); CREATE TABLE policies (customer_id VARCHAR)",
        "question": "Find the name of the customer that has been involved in the most policies."
    },
    {
        "answer": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.start_date = (SELECT MAX(start_date) FROM policies)",
        "context": "CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR); CREATE TABLE policies (start_date INTEGER); CREATE TABLE policies (customer_id VARCHAR, start_date INTEGER)",
        "question": "Which customer is associated with the latest policy?"
    },
    {
        "answer": "SELECT T1.account_id, T1.date_account_opened, T1.account_name, T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'",
        "context": "CREATE TABLE Accounts (account_id VARCHAR, date_account_opened VARCHAR, account_name VARCHAR, other_account_details VARCHAR, customer_id VARCHAR); CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR)",
        "question": "Show the id, the account name, and other account details for all accounts by the customer with first name 'Meaghan'."
    },
    {
        "answer": "SELECT T1.account_name, T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = \"Meaghan\" AND T2.customer_last_name = \"Keeling\"",
        "context": "CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR, customer_last_name VARCHAR); CREATE TABLE Accounts (account_name VARCHAR, other_account_details VARCHAR, customer_id VARCHAR)",
        "question": "Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling."
    },
    {
        "answer": "SELECT DISTINCT T1.customer_first_name, T1.customer_last_name, T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id",
        "context": "CREATE TABLE Accounts (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, phone_number VARCHAR, customer_id VARCHAR)",
        "question": "Show the unique first names, last names, and phone numbers for all customers with any account."
    },
    {
        "answer": "SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Accounts (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR)",
        "question": "What is the customer id, first and last name with most number of accounts."
    },
    {
        "answer": "SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name, COUNT(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",
        "context": "CREATE TABLE Accounts (customer_id VARCHAR); CREATE TABLE Customers (customer_first_name VARCHAR, customer_last_name VARCHAR, customer_id VARCHAR)",
        "question": "Show id, first name and last name for all customers and the number of accounts."
    },
    {
        "answer": "SELECT T2.customer_first_name, T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Customers (customer_first_name VARCHAR, customer_id VARCHAR); CREATE TABLE Accounts (customer_id VARCHAR)",
        "question": "Show first name and id for all customers with at least 2 accounts."
    },
    {
        "answer": "SELECT COUNT(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = \"337\"",
        "context": "CREATE TABLE Accounts (account_id VARCHAR, account_name VARCHAR); CREATE TABLE Financial_transactions (account_id VARCHAR)",
        "question": "How many transaction does account with name 337 have?"
    },
    {
        "answer": "SELECT AVG(transaction_amount), MIN(transaction_amount), MAX(transaction_amount), SUM(transaction_amount) FROM Financial_transactions",
        "context": "CREATE TABLE Financial_transactions (transaction_amount INTEGER)",
        "question": "What is the average, minimum, maximum, and total transaction amount?"
    },
    {
        "answer": "SELECT T2.account_name, T1.account_id, COUNT(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id",
        "context": "CREATE TABLE Financial_transactions (account_id VARCHAR); CREATE TABLE Accounts (account_name VARCHAR, account_id VARCHAR)",
        "question": "Show the account name, id and the number of transactions for each account."
    },
    {
        "answer": "SELECT T1.account_id, T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id GROUP BY T1.account_id HAVING COUNT(*) >= 4",
        "context": "CREATE TABLE Financial_transactions (account_id VARCHAR); CREATE TABLE Accounts (account_name VARCHAR, account_id VARCHAR)",
        "question": "Show the account id and name with at least 4 transactions."
    },
    {
        "answer": "SELECT elected FROM table_197446_1 WHERE term_began = \"January 3, 1989\"",
        "context": "CREATE TABLE table_197446_1 (elected VARCHAR, term_began VARCHAR)",
        "question": "What year was the congressional service elected for a term beginning on January 3, 1989?"
    },
    {
        "answer": "SELECT T2.invoice_number, T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Invoices (invoice_number VARCHAR, invoice_date VARCHAR); CREATE TABLE Financial_transactions (invoice_number VARCHAR)",
        "question": "What is the invoice number and invoice date for the invoice with most number of transactions?"
    },
    {
        "answer": "SELECT T1.invoice_date, T1.order_id, T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id",
        "context": "CREATE TABLE Invoices (invoice_date VARCHAR, order_id VARCHAR); CREATE TABLE Orders (order_details VARCHAR, order_id VARCHAR)",
        "question": "Show invoice dates and order id and details for all invoices."
    },
    {
        "answer": "SELECT T2.customer_last_name, T1.customer_id, T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Orders (customer_id VARCHAR); CREATE TABLE Customers (customer_last_name VARCHAR, phone_number VARCHAR, customer_id VARCHAR)",
        "question": "What is the customer last name, id and phone number with most number of orders?"
    },
    {
        "answer": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id = T2.product_id",
        "context": "CREATE TABLE Products (product_name VARCHAR, product_id VARCHAR); CREATE TABLE Order_items (product_id VARCHAR); CREATE TABLE Products (product_name VARCHAR)",
        "question": "Show all product names without an order."
    },
    {
        "answer": "SELECT T2.product_name, SUM(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name",
        "context": "CREATE TABLE Products (product_name VARCHAR, product_id VARCHAR); CREATE TABLE Order_items (product_quantity INTEGER, product_id VARCHAR)",
        "question": "Show all product names and the total quantity ordered for each product name."
    },
    {
        "answer": "SELECT year_s__won FROM table_name_62 WHERE country = \"united states\" AND total > 152",
        "context": "CREATE TABLE table_name_62 (year_s__won VARCHAR, country VARCHAR, total VARCHAR)",
        "question": "Can you tell me the Year(s) Won that has the Country of united states, and the Total larger than 152?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_19744915_18 WHERE couple = \"Roxanne and Daniel\"",
        "context": "CREATE TABLE table_19744915_18 (rank INTEGER, couple VARCHAR)",
        "question": "When roxanne and daniel are the couple what is the highest rank?"
    },
    {
        "answer": "SELECT T2.product_name, COUNT(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T1.order_id GROUP BY T2.product_name",
        "context": "CREATE TABLE Order_items (product_id VARCHAR, order_id VARCHAR); CREATE TABLE Orders (order_id VARCHAR); CREATE TABLE Products (product_name VARCHAR, product_id VARCHAR)",
        "question": "Show all product names and the number of customers having an order on each product."
    },
    {
        "answer": "SELECT softball_stadium FROM table_1974545_3 WHERE baseball_stadium = \"Eastern Baseball Stadium\"",
        "context": "CREATE TABLE table_1974545_3 (softball_stadium VARCHAR, baseball_stadium VARCHAR)",
        "question": "What is the name of the softball stadium for the school that has Eastern Baseball Stadium?"
    },
    {
        "answer": "SELECT original_nfl_team FROM table_name_31 WHERE pos = \"s\" AND college = \"georgia tech\"",
        "context": "CREATE TABLE table_name_31 (original_nfl_team VARCHAR, pos VARCHAR, college VARCHAR)",
        "question": "What's the original NFL team when the POS is S and college is Georgia Tech?"
    },
    {
        "answer": "SELECT softball_stadium FROM table_1974545_3 WHERE school = \"UMass Boston\"",
        "context": "CREATE TABLE table_1974545_3 (softball_stadium VARCHAR, school VARCHAR)",
        "question": "What is the name of UMass Boston's softball stadium?"
    },
    {
        "answer": "SELECT baseball_stadium FROM table_1974545_3 WHERE basketball_arena = \"The Murray Center\"",
        "context": "CREATE TABLE table_1974545_3 (baseball_stadium VARCHAR, basketball_arena VARCHAR)",
        "question": "What is the name of the baseball stadium for the school with the Murray Center basketball arena?"
    },
    {
        "answer": "SELECT country FROM table_name_73 WHERE place = \"t6\" AND player = \"eduardo romero\"",
        "context": "CREATE TABLE table_name_73 (country VARCHAR, place VARCHAR, player VARCHAR)",
        "question": "What is the country that has a place of T6 that Eduardo Romero plays for?"
    },
    {
        "answer": "SELECT T2.name, T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id JOIN people AS T3 ON T1.female_id = T3.people_id WHERE T1.year > 2014",
        "context": "CREATE TABLE wedding (male_id VARCHAR, female_id VARCHAR, year INTEGER); CREATE TABLE people (name VARCHAR, people_id VARCHAR)",
        "question": "Show the pair of male and female names in all weddings after year 2014"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_43 WHERE benalla_dfl = \"tatong\"",
        "context": "CREATE TABLE table_name_43 (wins INTEGER, benalla_dfl VARCHAR)",
        "question": "What's the most wins of Tatong?"
    },
    {
        "answer": "SELECT COUNT(party) FROM table_19753079_36 WHERE district = \"North Carolina 7\"",
        "context": "CREATE TABLE table_19753079_36 (party VARCHAR, district VARCHAR)",
        "question": "Name the total party for north carolina 7"
    },
    {
        "answer": "SELECT incumbent FROM table_19753079_36 WHERE candidates = \"Sue Myrick (R) 69.0% Jeff Doctor (D) 31.0%\"",
        "context": "CREATE TABLE table_19753079_36 (incumbent VARCHAR, candidates VARCHAR)",
        "question": "Name the incumbent for sue myrick (r) 69.0% jeff doctor (d) 31.0%"
    },
    {
        "answer": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id = T2.people_id WHERE T1.year = 2016 AND T2.is_male = 'F' AND T2.country = 'Canada'",
        "context": "CREATE TABLE people (name VARCHAR, people_id VARCHAR, country VARCHAR, is_male VARCHAR); CREATE TABLE wedding (female_id VARCHAR, year VARCHAR)",
        "question": "Show the names for all females from Canada having a wedding in year 2016."
    },
    {
        "answer": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id JOIN people AS T3 ON T1.female_id = T3.people_id JOIN church AS T4 ON T4.church_id = T1.church_id WHERE T2.age > 30 OR T3.age > 30",
        "context": "CREATE TABLE church (name VARCHAR, church_id VARCHAR); CREATE TABLE people (people_id VARCHAR, age VARCHAR); CREATE TABLE wedding (male_id VARCHAR, female_id VARCHAR, church_id VARCHAR)",
        "question": "Show the church names for the weddings of all people older than 30."
    },
    {
        "answer": "SELECT COUNT(DISTINCT church_id) FROM wedding WHERE YEAR = 2016",
        "context": "CREATE TABLE wedding (church_id VARCHAR, YEAR VARCHAR)",
        "question": "How many churches have a wedding in year 2016?"
    },
    {
        "answer": "SELECT COUNT(*) FROM artist WHERE age > 46 AND year_join > 1990",
        "context": "CREATE TABLE artist (age VARCHAR, year_join VARCHAR)",
        "question": "How many artists are above age 46 and joined after 1990?"
    },
    {
        "answer": "SELECT COUNT(fastest_lap) FROM table_19751479_4 WHERE rnd = 10 AND pole_position = \"#99 GAINSCO/Bob Stallings Racing\"",
        "context": "CREATE TABLE table_19751479_4 (fastest_lap VARCHAR, rnd VARCHAR, pole_position VARCHAR)",
        "question": "How many races had #99 gainsco/bob stallings racing in round 10?"
    },
    {
        "answer": "SELECT incumbent FROM table_19753079_8 WHERE first_elected = 2009",
        "context": "CREATE TABLE table_19753079_8 (incumbent VARCHAR, first_elected VARCHAR)",
        "question": "What incumbent was first elected in 2009?"
    },
    {
        "answer": "SELECT week_5 FROM table_name_68 WHERE week_1 = \"mandy ashford\"",
        "context": "CREATE TABLE table_name_68 (week_5 VARCHAR, week_1 VARCHAR)",
        "question": "what kind of Week 5 that has a Week 1 of mandy ashford?"
    },
    {
        "answer": "SELECT T2.name, T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE exhibition (artist_id VARCHAR); CREATE TABLE artist (name VARCHAR, country VARCHAR, artist_id VARCHAR)",
        "question": "What is the name and country for the artist with most number of exhibitions?"
    },
    {
        "answer": "SELECT T1.theme, T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.ticket_price > (SELECT AVG(ticket_price) FROM exhibition)",
        "context": "CREATE TABLE exhibition (ticket_price INTEGER); CREATE TABLE exhibition (theme VARCHAR, artist_id VARCHAR, ticket_price INTEGER); CREATE TABLE artist (name VARCHAR, artist_id VARCHAR)",
        "question": "What is the theme and artist name for the exhibition with a ticket price higher than the average?"
    },
    {
        "answer": "SELECT AVG(ticket_price), MIN(ticket_price), MAX(ticket_price) FROM exhibition WHERE YEAR < 2009",
        "context": "CREATE TABLE exhibition (ticket_price INTEGER, YEAR INTEGER)",
        "question": "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009."
    },
    {
        "answer": "SELECT station_name FROM table_name_99 WHERE opening_year = \"2013\" AND park_and_ride_lot = \"no\"",
        "context": "CREATE TABLE table_name_99 (station_name VARCHAR, opening_year VARCHAR, park_and_ride_lot VARCHAR)",
        "question": "Which station was opened in 2013, with no park & ride lot?"
    },
    {
        "answer": "SELECT T2.theme, T1.date, T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.year = 2004",
        "context": "CREATE TABLE exhibition_record (date VARCHAR, attendance VARCHAR, exhibition_id VARCHAR); CREATE TABLE exhibition (theme VARCHAR, exhibition_id VARCHAR, year VARCHAR)",
        "question": "What is the theme, date, and attendance for the exhibition in year 2004?"
    },
    {
        "answer": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.year = 2004",
        "context": "CREATE TABLE exhibition (artist_id VARCHAR, year VARCHAR); CREATE TABLE artist (name VARCHAR); CREATE TABLE artist (name VARCHAR, artist_id VARCHAR)",
        "question": "Show all artist names who didn't have an exhibition in 2004."
    },
    {
        "answer": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance < 100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 500",
        "context": "CREATE TABLE exhibition (theme VARCHAR, exhibition_id VARCHAR); CREATE TABLE exhibition_record (exhibition_id VARCHAR, attendance INTEGER)",
        "question": "Show the theme for exhibitions with both records of an attendance below 100 and above 500."
    },
    {
        "answer": "SELECT COUNT(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 100 OR T2.ticket_price < 10",
        "context": "CREATE TABLE exhibition_record (exhibition_id VARCHAR, attendance VARCHAR); CREATE TABLE exhibition (exhibition_id VARCHAR, ticket_price VARCHAR)",
        "question": "How many exhibitions have a attendance more than 100 or have a ticket price below 10?"
    },
    {
        "answer": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id JOIN artist AS T3 ON T3.artist_id = T2.artist_id GROUP BY T3.artist_id HAVING AVG(T1.attendance) > 200",
        "context": "CREATE TABLE artist (name VARCHAR, artist_id VARCHAR); CREATE TABLE exhibition (exhibition_id VARCHAR, artist_id VARCHAR); CREATE TABLE exhibition_record (exhibition_id VARCHAR, attendance INTEGER)",
        "question": "Show all artist names with an average exhibition attendance over 200."
    },
    {
        "answer": "SELECT surface FROM table_name_86 WHERE score_in_the_final = \"5\u20137, 6\u20137 (2\u20137)\"",
        "context": "CREATE TABLE table_name_86 (surface VARCHAR, score_in_the_final VARCHAR)",
        "question": "What is the Surface of the match with a Score in the final of 5\u20137, 6\u20137 (2\u20137)?"
    },
    {
        "answer": "SELECT COUNT(club_world_cup) FROM table_19764939_1 WHERE player = \"Djibril Cisse\"",
        "context": "CREATE TABLE table_19764939_1 (club_world_cup VARCHAR, player VARCHAR)",
        "question": "Name the total number of club worl cup for djibril cisse"
    },
    {
        "answer": "SELECT COUNT(*) FROM item WHERE NOT i_id IN (SELECT i_id FROM review)",
        "context": "CREATE TABLE review (i_id VARCHAR); CREATE TABLE item (i_id VARCHAR)",
        "question": "Find the number of items that did not receive any review."
    },
    {
        "answer": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating > 8 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating < 5",
        "context": "CREATE TABLE item (title VARCHAR, i_id VARCHAR); CREATE TABLE review (i_id VARCHAR, rating INTEGER)",
        "question": "Find the titles of items that received both a rating higher than 8 and a rating below 5."
    },
    {
        "answer": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rank > 3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id HAVING AVG(T2.rating) > 5",
        "context": "CREATE TABLE item (title VARCHAR, i_id VARCHAR); CREATE TABLE review (i_id VARCHAR, rank INTEGER, rating INTEGER)",
        "question": "Find the names of items whose rank is higher than 3 and whose average rating is above 5."
    },
    {
        "answer": "SELECT COUNT(date) FROM table_19778010_5 WHERE opponent = \"Houston\"",
        "context": "CREATE TABLE table_19778010_5 (date VARCHAR, opponent VARCHAR)",
        "question": "On how many different dates was a game against Houston played?"
    },
    {
        "answer": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY AVG(T2.rating) LIMIT 1",
        "context": "CREATE TABLE item (title VARCHAR, i_id VARCHAR); CREATE TABLE review (i_id VARCHAR, rating INTEGER)",
        "question": "Find the name of the item with the lowest average rating."
    },
    {
        "answer": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR); CREATE TABLE review (u_id VARCHAR)",
        "question": "Find the name of the user who gives the most reviews."
    },
    {
        "answer": "SELECT T1.title, T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY AVG(T2.rating) DESC LIMIT 1",
        "context": "CREATE TABLE item (title VARCHAR, i_id VARCHAR); CREATE TABLE review (i_id VARCHAR, rating INTEGER)",
        "question": "Find the name and id of the item with the highest average rating."
    },
    {
        "answer": "SELECT T1.title, T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY AVG(T2.rank) DESC LIMIT 1",
        "context": "CREATE TABLE review (i_id VARCHAR, rank INTEGER); CREATE TABLE item (title VARCHAR, i_id VARCHAR)",
        "question": "Find the name and id of the good with the highest average rank."
    },
    {
        "answer": "SELECT nosotros___nosotras FROM table_1977630_2 WHERE \u00e9l___ella___usted = \"piense\"",
        "context": "CREATE TABLE table_1977630_2 (nosotros___nosotras VARCHAR, \u00e9l___ella___usted VARCHAR)",
        "question": "What are all  the conjugated forms of the verb where the el/ ella/usted verb is piense?"
    },
    {
        "answer": "SELECT T1.name, COUNT(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id",
        "context": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR); CREATE TABLE review (u_id VARCHAR)",
        "question": "For each user, find their name and the number of reviews written by them."
    },
    {
        "answer": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.source_u_id GROUP BY T2.source_u_id ORDER BY AVG(trust) DESC LIMIT 1",
        "context": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR); CREATE TABLE trust (source_u_id VARCHAR)",
        "question": "Find the name of the source user with the highest average trust score."
    },
    {
        "answer": "SELECT T1.name, AVG(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id GROUP BY T2.target_u_id",
        "context": "CREATE TABLE trust (target_u_id VARCHAR); CREATE TABLE useracct (name VARCHAR, u_id VARCHAR)",
        "question": "Find each target user's name and average trust score."
    },
    {
        "answer": "SELECT owner FROM table_1979203_1 WHERE callsign = \"WLIW\"",
        "context": "CREATE TABLE table_1979203_1 (owner VARCHAR, callsign VARCHAR)",
        "question": "what is the owner of the callsign wliw"
    },
    {
        "answer": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE player (Occupation VARCHAR)",
        "question": "Please show the most common occupation of players."
    },
    {
        "answer": "SELECT T3.Player_name, T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID",
        "context": "CREATE TABLE player (Player_name VARCHAR, Player_ID VARCHAR); CREATE TABLE coach (coach_name VARCHAR, Coach_ID VARCHAR); CREATE TABLE player_coach (Coach_ID VARCHAR, Player_ID VARCHAR)",
        "question": "Show the names of players and names of their coaches."
    },
    {
        "answer": "SELECT MIN(district) FROM table_1979619_3 WHERE residence = \"Newtown Square\"",
        "context": "CREATE TABLE table_1979619_3 (district INTEGER, residence VARCHAR)",
        "question": "Name the district for newtown square"
    },
    {
        "answer": "SELECT T3.Player_name, T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T1.Starting_year > 2011",
        "context": "CREATE TABLE player (Player_name VARCHAR, gender VARCHAR, Player_ID VARCHAR); CREATE TABLE player_coach (Coach_ID VARCHAR, Player_ID VARCHAR, Starting_year INTEGER); CREATE TABLE coach (Coach_ID VARCHAR)",
        "question": "Show the names and genders of players with a coach starting after 2011."
    },
    {
        "answer": "SELECT T3.Player_name, T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID ORDER BY T3.Votes DESC",
        "context": "CREATE TABLE coach (coach_name VARCHAR, Coach_ID VARCHAR); CREATE TABLE player_coach (Coach_ID VARCHAR, Player_ID VARCHAR); CREATE TABLE player (Player_name VARCHAR, Player_ID VARCHAR, Votes VARCHAR)",
        "question": "Show the names of players and names of their coaches in descending order of the votes of players."
    },
    {
        "answer": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T2.Rank = 1",
        "context": "CREATE TABLE player (Player_name VARCHAR, Player_ID VARCHAR); CREATE TABLE coach (Coach_ID VARCHAR, Rank VARCHAR); CREATE TABLE player_coach (Coach_ID VARCHAR, Player_ID VARCHAR)",
        "question": "Show the names of players coached by the rank 1 coach."
    },
    {
        "answer": "SELECT COUNT(district) FROM table_1979619_3 WHERE representative = \"Rob Teplitz\"",
        "context": "CREATE TABLE table_1979619_3 (district VARCHAR, representative VARCHAR)",
        "question": "Name the total number of districts for rob teplitz"
    },
    {
        "answer": "SELECT T1.club_id, T1.club_name, COUNT(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id",
        "context": "CREATE TABLE club (club_id VARCHAR, club_name VARCHAR); CREATE TABLE coach (club_id VARCHAR)",
        "question": "How many coaches does each club has? List the club id, name and the number of coaches."
    },
    {
        "answer": "SELECT T1.club_id, T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id = T2.club_id GROUP BY T1.club_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE match_result (club_id VARCHAR, gold VARCHAR); CREATE TABLE coach (club_id VARCHAR)",
        "question": "How many gold medals has the club with the most coaches won?"
    },
    {
        "answer": "SELECT Residence FROM player WHERE gender = \"M\" INTERSECT SELECT Residence FROM player WHERE gender = \"F\"",
        "context": "CREATE TABLE player (Residence VARCHAR, gender VARCHAR)",
        "question": "Show the residences that have both a player of gender \"M\" and a player of gender \"F\"."
    },
    {
        "answer": "SELECT result FROM table_19810459_1 WHERE background = \"Business major\"",
        "context": "CREATE TABLE table_19810459_1 (result VARCHAR, background VARCHAR)",
        "question": "What was the result for the contestant whose background was as a business major?"
    },
    {
        "answer": "SELECT hometown FROM table_19810459_1 WHERE background = \"Financial consultant\"",
        "context": "CREATE TABLE table_19810459_1 (hometown VARCHAR, background VARCHAR)",
        "question": "What is the hometown of the contestant whose background is as a financial consultant? "
    },
    {
        "answer": "SELECT rating FROM table_19805130_3 WHERE rating / SHARE(18 - 49) = 2.0 / 6 AND viewers__millions_ = \"5.14\"",
        "context": "CREATE TABLE table_19805130_3 (rating VARCHAR, viewers__millions_ VARCHAR)",
        "question": "If the amount of viewers is 5.14 million and the rating/share is 2.0/6, what is the ranking?"
    },
    {
        "answer": "SELECT COUNT(population) FROM table_name_62 WHERE county = \"stockholm county\" AND municipality = \"danderyd municipality\" AND code < 162",
        "context": "CREATE TABLE table_name_62 (population VARCHAR, code VARCHAR, county VARCHAR, municipality VARCHAR)",
        "question": "What is the population of Danderyd municipality in Stockholm County with a code lower than 162?"
    },
    {
        "answer": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Age LIMIT 1",
        "context": "CREATE TABLE people (People_ID VARCHAR, Age VARCHAR); CREATE TABLE gymnast (Total_Points VARCHAR, Gymnast_ID VARCHAR)",
        "question": "What is the total point count of the youngest gymnast?"
    },
    {
        "answer": "SELECT trailing_party % votes FROM table_name_74 WHERE party_won = \"bharatiya janta party\" AND trailing_party = \"indian national congress\"",
        "context": "CREATE TABLE table_name_74 (trailing_party VARCHAR, votes VARCHAR, party_won VARCHAR)",
        "question": "What is Trailing Party % Votes, when Party Won is \"Bharatiya Janta Party\", and when Trailing Party is \"Indian National Congress\"?"
    },
    {
        "answer": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE gymnast (Gymnast_ID VARCHAR); CREATE TABLE people (Hometown VARCHAR, People_ID VARCHAR)",
        "question": "What are the hometowns that are shared by at least two gymnasts?"
    },
    {
        "answer": "SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20",
        "context": "CREATE TABLE people (Hometown VARCHAR, Age INTEGER)",
        "question": "Show the hometowns shared by people older than 23 and younger than 20."
    },
    {
        "answer": "SELECT SUM(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name <> 'Brown'",
        "context": "CREATE TABLE accounts (custid VARCHAR, name VARCHAR); CREATE TABLE savings (balance INTEGER, custid VARCHAR)",
        "question": "Find the total savings balance of all accounts except the account with name \u2018Brown\u2019."
    },
    {
        "answer": "SELECT fastest_lap FROM table_19850806_3 WHERE race = \"Texas\" AND winning_driver = \"Dario Franchitti\"",
        "context": "CREATE TABLE table_19850806_3 (fastest_lap VARCHAR, race VARCHAR, winning_driver VARCHAR)",
        "question": "Who held the fastest lap in the race in texas and dario franchitti is the winning driver?"
    },
    {
        "answer": "SELECT rider FROM table_name_98 WHERE laps < 11 AND bike = \"kawasaki zx-10r\" AND grid = 8",
        "context": "CREATE TABLE table_name_98 (rider VARCHAR, grid VARCHAR, laps VARCHAR, bike VARCHAR)",
        "question": "Name the Rider which has Laps smaller than 11 and a Bike of kawasaki zx-10r, and a Grid of 8?"
    },
    {
        "answer": "SELECT T1.custid, T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance < (SELECT MAX(balance) FROM checking)",
        "context": "CREATE TABLE accounts (custid VARCHAR, name VARCHAR); CREATE TABLE checking (balance INTEGER); CREATE TABLE checking (custid VARCHAR, balance INTEGER)",
        "question": "Find the name and id of accounts whose checking balance is below the maximum checking balance."
    },
    {
        "answer": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name LIKE '%ee%'",
        "context": "CREATE TABLE checking (balance VARCHAR, custid VARCHAR); CREATE TABLE accounts (custid VARCHAR, name VARCHAR)",
        "question": "What is the checking balance of the account whose owner\u2019s name contains the substring \u2018ee\u2019?"
    },
    {
        "answer": "SELECT T2.balance, T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = 'Brown'",
        "context": "CREATE TABLE checking (balance VARCHAR, custid VARCHAR); CREATE TABLE accounts (custid VARCHAR, name VARCHAR); CREATE TABLE savings (balance VARCHAR, custid VARCHAR)",
        "question": "Find the checking balance and saving balance in the Brown\u2019s account."
    },
    {
        "answer": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance > (SELECT AVG(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance < (SELECT AVG(balance) FROM savings)",
        "context": "CREATE TABLE checking (custid VARCHAR, balance INTEGER); CREATE TABLE savings (custid VARCHAR, balance INTEGER); CREATE TABLE savings (balance INTEGER); CREATE TABLE checking (balance INTEGER); CREATE TABLE accounts (name VARCHAR, custid VARCHAR)",
        "question": "Find the names of accounts whose checking balance is above the average checking balance, but savings balance is below the average savings balance."
    },
    {
        "answer": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > (SELECT AVG(balance) FROM savings))",
        "context": "CREATE TABLE accounts (custid VARCHAR, name VARCHAR); CREATE TABLE checking (balance INTEGER, custid VARCHAR); CREATE TABLE savings (balance INTEGER, custid VARCHAR); CREATE TABLE savings (balance INTEGER)",
        "question": "Find the checking balance of the accounts whose savings balance is higher than the average savings balance."
    },
    {
        "answer": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance LIMIT 1",
        "context": "CREATE TABLE checking (custid VARCHAR, balance VARCHAR); CREATE TABLE savings (custid VARCHAR, balance VARCHAR); CREATE TABLE accounts (name VARCHAR, custid VARCHAR)",
        "question": "Find the name of account that has the lowest total checking and saving balance."
    },
    {
        "answer": "SELECT T1.name, T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance > (SELECT AVG(balance) FROM savings)",
        "context": "CREATE TABLE checking (balance INTEGER, custid VARCHAR); CREATE TABLE savings (balance INTEGER, custid VARCHAR); CREATE TABLE savings (balance INTEGER); CREATE TABLE accounts (name VARCHAR, custid VARCHAR)",
        "question": "Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance."
    },
    {
        "answer": "SELECT T1.name, T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T3.balance LIMIT 1",
        "context": "CREATE TABLE checking (balance VARCHAR, custid VARCHAR); CREATE TABLE savings (custid VARCHAR, balance VARCHAR); CREATE TABLE accounts (name VARCHAR, custid VARCHAR)",
        "question": "Find the name and checking balance of the account with the lowest savings balance."
    },
    {
        "answer": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance < (SELECT AVG(balance) FROM checking)",
        "context": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR); CREATE TABLE checking (balance INTEGER); CREATE TABLE checking (custid VARCHAR, balance INTEGER)",
        "question": "Find the name of accounts whose checking balance is below the average checking balance."
    },
    {
        "answer": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1",
        "context": "CREATE TABLE savings (balance VARCHAR, custid VARCHAR); CREATE TABLE checking (custid VARCHAR, balance VARCHAR); CREATE TABLE accounts (custid VARCHAR)",
        "question": "Find the saving balance of the account with the highest checking balance."
    },
    {
        "answer": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T1.balance + T2.balance",
        "context": "CREATE TABLE checking (balance VARCHAR, custid VARCHAR); CREATE TABLE savings (balance VARCHAR, custid VARCHAR)",
        "question": "Find the total checking and saving balance of all accounts sorted by the total balance in ascending order."
    },
    {
        "answer": "SELECT status FROM table_name_63 WHERE venue = \"stadio flaminio , rome\"",
        "context": "CREATE TABLE table_name_63 (status VARCHAR, venue VARCHAR)",
        "question": "What is the Statue, when Venue is \"Stadio Flaminio , Rome\"?"
    },
    {
        "answer": "SELECT T2.balance, T3.balance, T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid",
        "context": "CREATE TABLE checking (balance VARCHAR, custid VARCHAR); CREATE TABLE savings (balance VARCHAR, custid VARCHAR); CREATE TABLE accounts (name VARCHAR, custid VARCHAR)",
        "question": "Find the name, checking balance and saving balance of all accounts in the bank."
    },
    {
        "answer": "SELECT T2.balance, T3.balance, T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance DESC",
        "context": "CREATE TABLE checking (balance VARCHAR, custid VARCHAR); CREATE TABLE savings (balance VARCHAR, custid VARCHAR); CREATE TABLE accounts (name VARCHAR, custid VARCHAR)",
        "question": "Find the name, checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order."
    },
    {
        "answer": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T2.balance > T3.balance",
        "context": "CREATE TABLE savings (custid VARCHAR, balance INTEGER); CREATE TABLE accounts (name VARCHAR, custid VARCHAR); CREATE TABLE checking (custid VARCHAR, balance INTEGER)",
        "question": "Find the name of accounts whose checking balance is higher than corresponding saving balance."
    },
    {
        "answer": "SELECT T1.name, T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance < T2.balance",
        "context": "CREATE TABLE checking (balance INTEGER, custid VARCHAR); CREATE TABLE savings (balance INTEGER, custid VARCHAR); CREATE TABLE accounts (name VARCHAR, custid VARCHAR)",
        "question": "Find the name and total checking and savings balance of the accounts whose savings balance is lower than corresponding checking balance."
    },
    {
        "answer": "SELECT COUNT(no_in_season) FROM table_19897294_10 WHERE family_families = \"The Jeans Family\"",
        "context": "CREATE TABLE table_19897294_10 (no_in_season VARCHAR, family_families VARCHAR)",
        "question": "How many episodes with different season numbers had the Jeans family in them?"
    },
    {
        "answer": "SELECT T1.name, T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T2.balance DESC LIMIT 3",
        "context": "CREATE TABLE savings (balance VARCHAR, custid VARCHAR); CREATE TABLE accounts (name VARCHAR, custid VARCHAR)",
        "question": "Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order."
    },
    {
        "answer": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id = T3.id WHERE T3.name = 'CProxy' AND T2.compatible_since_year > 1998",
        "context": "CREATE TABLE accelerator_compatible_browser (browser_id VARCHAR, accelerator_id VARCHAR, compatible_since_year VARCHAR); CREATE TABLE web_client_accelerator (id VARCHAR, name VARCHAR); CREATE TABLE browser (name VARCHAR, id VARCHAR)",
        "question": "What is the name of the browser that became compatible with the accelerator 'CProxy' after year 1998 ?"
    },
    {
        "answer": "SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id WHERE T3.name = 'CACHEbox' AND T2.name = 'Internet Explorer'",
        "context": "CREATE TABLE accelerator_compatible_browser (compatible_since_year VARCHAR, browser_id VARCHAR, accelerator_id VARCHAR); CREATE TABLE browser (id VARCHAR, name VARCHAR); CREATE TABLE web_client_accelerator (id VARCHAR, name VARCHAR)",
        "question": "When did the web accelerator 'CACHEbox' and browser 'Internet Explorer' become compatible?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT client) FROM web_client_accelerator",
        "context": "CREATE TABLE web_client_accelerator (client VARCHAR)",
        "question": "How many different kinds of clients are supported by the web clients accelerators?"
    },
    {
        "answer": "SELECT COUNT(*) FROM web_client_accelerator WHERE NOT id IN (SELECT accelerator_id FROM accelerator_compatible_browser)",
        "context": "CREATE TABLE accelerator_compatible_browser (id VARCHAR, accelerator_id VARCHAR); CREATE TABLE web_client_accelerator (id VARCHAR, accelerator_id VARCHAR)",
        "question": "How many accelerators are not compatible with the browsers listed ?"
    },
    {
        "answer": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.market_share > 15",
        "context": "CREATE TABLE web_client_accelerator (name VARCHAR, id VARCHAR); CREATE TABLE accelerator_compatible_browser (accelerator_id VARCHAR, browser_id VARCHAR); CREATE TABLE browser (id VARCHAR, market_share INTEGER)",
        "question": "What distinct accelerator names are compatible with the browswers that have market share higher than 15?"
    },
    {
        "answer": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'",
        "context": "CREATE TABLE accelerator_compatible_browser (accelerator_id VARCHAR, browser_id VARCHAR); CREATE TABLE web_client_accelerator (id VARCHAR, name VARCHAR); CREATE TABLE browser (name VARCHAR, id VARCHAR)",
        "question": "List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'."
    },
    {
        "answer": "SELECT name, operating_system FROM web_client_accelerator EXCEPT SELECT T1.name, T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.name = 'Opera'",
        "context": "CREATE TABLE browser (id VARCHAR, name VARCHAR); CREATE TABLE web_client_accelerator (name VARCHAR, operating_system VARCHAR); CREATE TABLE accelerator_compatible_browser (accelerator_id VARCHAR, browser_id VARCHAR); CREATE TABLE web_client_accelerator (name VARCHAR, operating_system VARCHAR, id VARCHAR)",
        "question": "Show the accelerator names and supporting operating systems that are not compatible with the browser named 'Opera'."
    },
    {
        "answer": "SELECT COUNT(original_air_date) FROM table_19897294_9 WHERE family_families = \"The Ryder Family and The Schwartz Family\"",
        "context": "CREATE TABLE table_19897294_9 (original_air_date VARCHAR, family_families VARCHAR)",
        "question": "how many original air date where family/families is the ryder family and the schwartz family"
    },
    {
        "answer": "SELECT T2.name, T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id ORDER BY T1.compatible_since_year DESC",
        "context": "CREATE TABLE accelerator_compatible_browser (browser_id VARCHAR, accelerator_id VARCHAR, compatible_since_year VARCHAR); CREATE TABLE web_client_accelerator (name VARCHAR, id VARCHAR); CREATE TABLE browser (name VARCHAR, id VARCHAR)",
        "question": "give me names of all compatible browsers and accelerators in the descending order of compatible year"
    },
    {
        "answer": "SELECT Name FROM wrestler ORDER BY Days_held LIMIT 1",
        "context": "CREATE TABLE wrestler (Name VARCHAR, Days_held VARCHAR)",
        "question": "What is the name of the wrestler with the fewest days held?"
    },
    {
        "answer": "SELECT points FROM table_name_86 WHERE games = \"363\"",
        "context": "CREATE TABLE table_name_86 (points VARCHAR, games VARCHAR)",
        "question": "How many points were scored by the player who played 363 games?"
    },
    {
        "answer": "SELECT replaced_by FROM table_name_49 WHERE manner_of_departure = \"end of contract\" AND date_of_appointment = \"dec. 16, 2008\"",
        "context": "CREATE TABLE table_name_49 (replaced_by VARCHAR, manner_of_departure VARCHAR, date_of_appointment VARCHAR)",
        "question": "What kind of Replaced has a Manner of departure of end of contract on dec. 16, 2008?"
    },
    {
        "answer": "SELECT T2.Name, T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID",
        "context": "CREATE TABLE wrestler (Name VARCHAR, Wrestler_ID VARCHAR); CREATE TABLE elimination (Elimination_Move VARCHAR, Wrestler_ID VARCHAR)",
        "question": "What are the names of wrestlers and the elimination moves?"
    },
    {
        "answer": "SELECT replaced_by FROM table_name_71 WHERE team = \"gimnasia y esgrima (lp)\"",
        "context": "CREATE TABLE table_name_71 (replaced_by VARCHAR, team VARCHAR)",
        "question": "What kind of Replaced has a Team of gimnasia y esgrima (lp)?"
    },
    {
        "answer": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Days_held > 50",
        "context": "CREATE TABLE wrestler (Wrestler_ID VARCHAR, Days_held INTEGER); CREATE TABLE elimination (Time VARCHAR, Wrestler_ID VARCHAR)",
        "question": "Show times of elimination of wrestlers with days held more than 50."
    },
    {
        "answer": "SELECT location FROM table_name_18 WHERE event = \"ufc 154\"",
        "context": "CREATE TABLE table_name_18 (location VARCHAR, event VARCHAR)",
        "question": "Where was the UFC 154 match held?"
    },
    {
        "answer": "SELECT MIN(wins) FROM table_name_60 WHERE points < 25 AND goals_scored = 22 AND club = \"minija kretinga\" AND goals_conceded < 39",
        "context": "CREATE TABLE table_name_60 (wins INTEGER, goals_conceded VARCHAR, club VARCHAR, points VARCHAR, goals_scored VARCHAR)",
        "question": "For the club Minija Kretinga, what's the lowest number of wins with points smaller than 25, goals at 22 and goals conceded below 39?"
    },
    {
        "answer": "SELECT place FROM table_name_50 WHERE silver = \"valeri postoianov ( urs )\" AND year > 1969 AND bronze = \"alexander gazov ( urs )\"",
        "context": "CREATE TABLE table_name_50 (place VARCHAR, bronze VARCHAR, silver VARCHAR, year VARCHAR)",
        "question": "In which Place was the Silver won by valeri postoianov ( urs ) later than 1969 and the Bronze won by alexander gazov ( urs )?"
    },
    {
        "answer": "SELECT COUNT(rufus_guest) FROM table_19930660_1 WHERE first_broadcast = \"15 December 2008\"",
        "context": "CREATE TABLE table_19930660_1 (rufus_guest VARCHAR, first_broadcast VARCHAR)",
        "question": "Name the rufus guest for 15 december 2008"
    },
    {
        "answer": "SELECT school_name FROM school WHERE NOT school_id IN (SELECT school_id FROM endowment)",
        "context": "CREATE TABLE endowment (school_name VARCHAR, school_id VARCHAR); CREATE TABLE school (school_name VARCHAR, school_id VARCHAR)",
        "question": "List the names of the schools without any endowment."
    },
    {
        "answer": "SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T1.school_id HAVING SUM(T1.amount) <= 10",
        "context": "CREATE TABLE school (school_name VARCHAR, school_id VARCHAR); CREATE TABLE endowment (school_id VARCHAR, amount INTEGER)",
        "question": "List all the names of schools with an endowment amount smaller than or equal to 10."
    },
    {
        "answer": "SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn' INTERSECT SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Triton'",
        "context": "CREATE TABLE school (school_id VARCHAR, school_name VARCHAR); CREATE TABLE endowment (donator_name VARCHAR, school_id VARCHAR)",
        "question": "Show the names of donors who donated to both school \"Glenn\" and \"Triton.\""
    },
    {
        "answer": "SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount < 9",
        "context": "CREATE TABLE endowment (donator_name VARCHAR, amount INTEGER)",
        "question": "Show the names of all the donors except those whose donation amount less than 9."
    },
    {
        "answer": "SELECT T2.school_name, T1.budgeted, T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T1.year >= 2002",
        "context": "CREATE TABLE budget (budgeted VARCHAR, invested VARCHAR, school_id VARCHAR, year VARCHAR); CREATE TABLE school (school_name VARCHAR, school_id VARCHAR)",
        "question": "Show each school name, its budgeted amount, and invested amount in year 2002 or after."
    },
    {
        "answer": "SELECT SUM(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = 'Glenn'",
        "context": "CREATE TABLE budget (budgeted INTEGER, school_id VARCHAR); CREATE TABLE school (school_id VARCHAR, school_name VARCHAR)",
        "question": "What is the total budget amount for school \"Glenn\" in all years?"
    },
    {
        "answer": "SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN endowment AS T3 ON T2.school_id = T3.school_id GROUP BY T2.school_name HAVING SUM(T1.budgeted) > 100 OR SUM(T3.amount) > 10",
        "context": "CREATE TABLE endowment (school_id VARCHAR, amount INTEGER); CREATE TABLE budget (school_id VARCHAR, budgeted INTEGER); CREATE TABLE school (school_name VARCHAR, school_id VARCHAR)",
        "question": "Show the names of schools with a total budget amount greater than 100 or a total endowment greater than 10."
    },
    {
        "answer": "SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T1.amount > 8.5 GROUP BY T1.school_id HAVING COUNT(*) > 1",
        "context": "CREATE TABLE school (School_name VARCHAR, school_id VARCHAR); CREATE TABLE endowment (school_id VARCHAR, amount INTEGER)",
        "question": "Find the names of schools that have more than one donator with donation amount above 8.5."
    },
    {
        "answer": "SELECT T1.School_name, T1.Mascot, T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id = T2.school_id WHERE Budgeted > 6000 OR YEAR < 2003 ORDER BY T2.total_budget_percent_invested, T2.total_budget_percent_budgeted",
        "context": "CREATE TABLE school (School_name VARCHAR, Mascot VARCHAR, IHSAA_Football_Class VARCHAR, school_id VARCHAR); CREATE TABLE budget (school_id VARCHAR, total_budget_percent_invested VARCHAR, total_budget_percent_budgeted VARCHAR)",
        "question": "List the name, IHSAA Football Class, and Mascot of the schools that have more than 6000 of budgeted amount or were founded before 2003, in the order of percent of total invested budget and total budgeted budget."
    },
    {
        "answer": "SELECT MAX(_percentage_hydropower) FROM table_name_80 WHERE _percentage_oil < 24.5 AND country = \"united arab emirates\" AND _percentage_nuclear_power < 0",
        "context": "CREATE TABLE table_name_80 (_percentage_hydropower INTEGER, _percentage_nuclear_power VARCHAR, _percentage_oil VARCHAR, country VARCHAR)",
        "question": "what is the highest % hydropower when the % oil is less than 24.5, country is united arab emirates and the % nuclear power is 0?"
    },
    {
        "answer": "SELECT MAX(electricity_production__kw_h), _billion_ FROM table_name_19 WHERE _percentage_other_renewable = 0.4 AND _percentage_coal = 0 AND _percentage_hydropower > 99",
        "context": "CREATE TABLE table_name_19 (_billion_ VARCHAR, electricity_production__kw_h INTEGER, _percentage_hydropower VARCHAR, _percentage_other_renewable VARCHAR, _percentage_coal VARCHAR)",
        "question": "what is the highest electricity production (kw/h, billion) when the % other renewable is 0.4, % coal is 0 and % hydropower is more than 99?"
    },
    {
        "answer": "SELECT COUNT(*) FROM building WHERE height_feet > (SELECT AVG(height_feet) FROM building) OR floors > (SELECT AVG(floors) FROM building)",
        "context": "CREATE TABLE building (height_feet INTEGER, floors INTEGER)",
        "question": "Show the number of buildings with a height above the average or a number of floors above the average."
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_66 WHERE player = \"louis leblanc\"",
        "context": "CREATE TABLE table_name_66 (college_junior_club_team__league_ VARCHAR, player VARCHAR)",
        "question": "What college did Louis LeBlanc attend?"
    },
    {
        "answer": "SELECT MIN(year_s_) FROM table_1998037_9 WHERE spokesperson = \"Ruslana\"",
        "context": "CREATE TABLE table_1998037_9 (year_s_ INTEGER, spokesperson VARCHAR)",
        "question": "What is the year when the spoksperson is Ruslana?"
    },
    {
        "answer": "SELECT SUM(losses) FROM table_name_75 WHERE portland_dfl = \"westerns\" AND draws > 1",
        "context": "CREATE TABLE table_name_75 (losses INTEGER, portland_dfl VARCHAR, draws VARCHAR)",
        "question": "What is the total number of losses that has draws larger than 1 and a Portland DFL of westerns?"
    },
    {
        "answer": "SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded = 2003",
        "context": "CREATE TABLE building (name VARCHAR, building_id VARCHAR); CREATE TABLE building (name VARCHAR); CREATE TABLE institution (building_id VARCHAR, founded VARCHAR)",
        "question": "Show the names of buildings except for those having an institution founded in 2003."
    },
    {
        "answer": "SELECT san_antonio_de_lomer\u00edo_municipality___percentage_ FROM table_19998428_3 WHERE san_javier_municipality___percentage_ = 31",
        "context": "CREATE TABLE table_19998428_3 (san_antonio_de_lomer\u00edo_municipality___percentage_ VARCHAR, san_javier_municipality___percentage_ VARCHAR)",
        "question": "What is the municipality percentage for San Antonio de Lomerio is San Javier municipality percentage is 31?"
    },
    {
        "answer": "SELECT T1.name, T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded > 1880 GROUP BY T1.building_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE building (name VARCHAR, height_feet VARCHAR, building_id VARCHAR); CREATE TABLE institution (building_id VARCHAR, founded INTEGER)",
        "question": "Show the names and heights of buildings with at least two institutions founded after 1880."
    },
    {
        "answer": "SELECT MIN(_number) FROM table_19982699_1 WHERE producer = \"Charles Salmon\" AND television_premiere = \"January 27, 2007\"",
        "context": "CREATE TABLE table_19982699_1 (_number INTEGER, producer VARCHAR, television_premiere VARCHAR)",
        "question": "How many numbers have Charles Salmon as the producer and January 27, 2007 was the television premiere?"
    },
    {
        "answer": "SELECT COUNT(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id WHERE T1.founded > 1880 OR T1.type = 'Private'",
        "context": "CREATE TABLE institution (institution_id VARCHAR, founded VARCHAR, type VARCHAR); CREATE TABLE protein (institution_id VARCHAR)",
        "question": "How many proteins are associated with an institution founded after 1880 or an institution with type \"Private\"?"
    },
    {
        "answer": "SELECT COUNT(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id JOIN building AS T3 ON T3.building_id = T1.building_id WHERE T3.floors >= 20",
        "context": "CREATE TABLE institution (institution_id VARCHAR, building_id VARCHAR); CREATE TABLE building (building_id VARCHAR, floors VARCHAR); CREATE TABLE protein (institution_id VARCHAR)",
        "question": "How many proteins are associated with an institution in a building with at least 20 floors?"
    },
    {
        "answer": "SELECT number_of_electorates__2009_ FROM table_name_21 WHERE reserved_for___sc___st__none_ = \"total:\"",
        "context": "CREATE TABLE table_name_21 (number_of_electorates__2009_ VARCHAR, reserved_for___sc___st__none_ VARCHAR)",
        "question": "Which Number of electorates (2009) has a Reserved for (SC / ST /None) of total:?"
    },
    {
        "answer": "SELECT current_code FROM table_name_20 WHERE type = \"club trophy\" AND years = \"1867 only\"",
        "context": "CREATE TABLE table_name_20 (current_code VARCHAR, type VARCHAR, years VARCHAR)",
        "question": "What is the current code for the club trophy, in 1867 only?"
    },
    {
        "answer": "SELECT surface FROM table_name_31 WHERE opponent = \"ji\u0159\u00ed van\u011bk\"",
        "context": "CREATE TABLE table_name_31 (surface VARCHAR, opponent VARCHAR)",
        "question": "What is Surface, when Opponent is \"Ji\u0159\u00ed Van\u011bk\"?"
    },
    {
        "answer": "SELECT name, openning_year FROM cinema ORDER BY openning_year DESC",
        "context": "CREATE TABLE cinema (name VARCHAR, openning_year VARCHAR)",
        "question": "Show all the cinema names and opening years in descending order of opening year."
    },
    {
        "answer": "SELECT tournament FROM table_name_50 WHERE moves = 37 AND result = \"\u00bd\u2013\u00bd\"",
        "context": "CREATE TABLE table_name_50 (tournament VARCHAR, moves VARCHAR, result VARCHAR)",
        "question": "What is Tournament, when Moves is \"37\", and when Result is \"\u00bd\u2013\u00bd\"?"
    },
    {
        "answer": "SELECT african_spoonbill FROM table_20042805_2 WHERE hadeda_ibis = \"Brown Snake Eagle\"",
        "context": "CREATE TABLE table_20042805_2 (african_spoonbill VARCHAR, hadeda_ibis VARCHAR)",
        "question": "What is the African Spoonbill when the Hadeda Ibis is the Brown Snake Eagle?"
    },
    {
        "answer": "SELECT event FROM table_name_46 WHERE opponent = \"jose carlos oliveira\"",
        "context": "CREATE TABLE table_name_46 (event VARCHAR, opponent VARCHAR)",
        "question": "Which event was the opponent jose carlos oliveira?"
    },
    {
        "answer": "SELECT T2.name, SUM(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id",
        "context": "CREATE TABLE schedule (show_times_per_day INTEGER, cinema_id VARCHAR); CREATE TABLE cinema (name VARCHAR, cinema_id VARCHAR)",
        "question": "What is total number of show times per dat for each cinema?"
    },
    {
        "answer": "SELECT T2.title, MAX(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id",
        "context": "CREATE TABLE film (title VARCHAR, film_id VARCHAR); CREATE TABLE schedule (price INTEGER, film_id VARCHAR)",
        "question": "What are the title and maximum price of each film?"
    },
    {
        "answer": "SELECT T3.name, T2.title, T1.date, T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id JOIN cinema AS T3 ON T1.cinema_id = T3.cinema_id",
        "context": "CREATE TABLE schedule (date VARCHAR, price VARCHAR, film_id VARCHAR, cinema_id VARCHAR); CREATE TABLE cinema (name VARCHAR, cinema_id VARCHAR); CREATE TABLE film (title VARCHAR, film_id VARCHAR)",
        "question": "Show cinema name, film title, date, and price for each record in schedule."
    },
    {
        "answer": "SELECT title, directed_by FROM film WHERE NOT film_id IN (SELECT film_id FROM schedule)",
        "context": "CREATE TABLE schedule (title VARCHAR, directed_by VARCHAR, film_id VARCHAR); CREATE TABLE film (title VARCHAR, directed_by VARCHAR, film_id VARCHAR)",
        "question": "What are the title and director of the films without any schedule?"
    },
    {
        "answer": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.coupon_amount = 500",
        "context": "CREATE TABLE discount_coupons (coupon_id VARCHAR, coupon_amount VARCHAR); CREATE TABLE customers (good_or_bad_customer VARCHAR, coupon_id VARCHAR)",
        "question": "Are the customers holding coupons with amount 500 bad or good?"
    },
    {
        "answer": "SELECT lost FROM table_name_32 WHERE losing_bonus = \"1\" AND points_for = \"148\"",
        "context": "CREATE TABLE table_name_32 (lost VARCHAR, losing_bonus VARCHAR, points_for VARCHAR)",
        "question": "WHAT IS THE LOST WITH 1 LOSING BONUS, 148 POINTS?"
    },
    {
        "answer": "SELECT T1.customer_id, T1.first_name, COUNT(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id",
        "context": "CREATE TABLE bookings (customer_id VARCHAR); CREATE TABLE Customers (customer_id VARCHAR, first_name VARCHAR)",
        "question": "How many bookings did each customer make? List the customer id, first name, and the count."
    },
    {
        "answer": "SELECT T1.booking_id, T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id = T2.booking_id GROUP BY T1.booking_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Payments (booking_id VARCHAR); CREATE TABLE Bookings (booking_id VARCHAR, amount_of_refund VARCHAR)",
        "question": "What are the id and the amount of refund of the booking that incurred the most times of payments?"
    },
    {
        "answer": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.booked_amount = 102.76",
        "context": "CREATE TABLE products_for_hire (product_description VARCHAR, product_id VARCHAR); CREATE TABLE products_booked (product_id VARCHAR, booked_amount VARCHAR)",
        "question": "What is the product description of the product booked with an amount of 102.76?"
    },
    {
        "answer": "SELECT T3.booking_start_date, T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id = T2.product_id JOIN bookings AS T3 ON T2.booking_id = T3.booking_id WHERE T1.product_name = 'Book collection A'",
        "context": "CREATE TABLE bookings (booking_start_date VARCHAR, booking_end_date VARCHAR, booking_id VARCHAR); CREATE TABLE products_booked (product_id VARCHAR, booking_id VARCHAR); CREATE TABLE Products_for_hire (product_id VARCHAR, product_name VARCHAR)",
        "question": "What are the start date and end date of the booking that has booked the product named 'Book collection A'?"
    },
    {
        "answer": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.available_yn = 1",
        "context": "CREATE TABLE view_product_availability (product_id VARCHAR, available_yn VARCHAR); CREATE TABLE products_for_hire (product_name VARCHAR, product_id VARCHAR)",
        "question": "What are the names of products whose availability equals to 1?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT product_type_code) FROM products_for_hire",
        "context": "CREATE TABLE products_for_hire (product_type_code VARCHAR)",
        "question": "How many different product types are there?"
    },
    {
        "answer": "SELECT first_name, last_name, gender_mf FROM customers WHERE good_or_bad_customer = 'good' ORDER BY last_name",
        "context": "CREATE TABLE customers (first_name VARCHAR, last_name VARCHAR, gender_mf VARCHAR, good_or_bad_customer VARCHAR)",
        "question": "What are the first name, last name, and gender of all the good customers? Order by their last name."
    },
    {
        "answer": "SELECT MAX(population__2000_) FROM table_2004733_2 WHERE area__in_km_2__ = \"1.2530\"",
        "context": "CREATE TABLE table_2004733_2 (population__2000_ INTEGER, area__in_km_2__ VARCHAR)",
        "question": "How many people lived in the city which has 1.2530 km\u00b2 in the year 2000?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Products_for_hire WHERE NOT product_id IN (SELECT product_id FROM products_booked WHERE booked_amount > 200)",
        "context": "CREATE TABLE products_booked (product_id VARCHAR, booked_amount INTEGER); CREATE TABLE Products_for_hire (product_id VARCHAR, booked_amount INTEGER)",
        "question": "How many products are never booked with amount higher than 200?"
    },
    {
        "answer": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'bad'",
        "context": "CREATE TABLE Discount_Coupons (coupon_amount VARCHAR, coupon_id VARCHAR); CREATE TABLE customers (coupon_id VARCHAR, good_or_bad_customer VARCHAR)",
        "question": "What are the coupon amount of the coupons owned by both good and bad customers?"
    },
    {
        "answer": "SELECT product_name, product_description FROM products_for_hire WHERE product_type_code = 'Cutlery' AND daily_hire_cost < 20",
        "context": "CREATE TABLE products_for_hire (product_name VARCHAR, product_description VARCHAR, product_type_code VARCHAR, daily_hire_cost VARCHAR)",
        "question": "What are the names and descriptions of the products that are of 'Cutlery' type and have daily hire cost lower than 20?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_20079931_4 WHERE circuit_location = \"Karlskoga Motorstadion\" AND pole_position = \"Roger Eriksson\"",
        "context": "CREATE TABLE table_20079931_4 (round VARCHAR, circuit_location VARCHAR, pole_position VARCHAR)",
        "question": "How many rounds were there in Karlskoga Motorstadion with Roger Eriksson at the pole position?"
    },
    {
        "answer": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1",
        "context": "CREATE TABLE phone (Carrier VARCHAR, Price VARCHAR)",
        "question": "What is the carrier of the most expensive phone?"
    },
    {
        "answer": "SELECT height_above_sea_level__m_ FROM table_name_2 WHERE opened < 1887 AND distance_from_wellington = \"175.67km\"",
        "context": "CREATE TABLE table_name_2 (height_above_sea_level__m_ VARCHAR, opened VARCHAR, distance_from_wellington VARCHAR)",
        "question": "What is the height above sea level for the station opened 175.67km from Wellington prior to 1887?"
    },
    {
        "answer": "SELECT Carrier FROM phone WHERE Memory_in_G < 32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G > 64",
        "context": "CREATE TABLE phone (Carrier VARCHAR, Memory_in_G INTEGER)",
        "question": "Show the carriers that have both phones with memory smaller than 32 and phones with memory bigger than 64."
    },
    {
        "answer": "SELECT T3.Name, T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID",
        "context": "CREATE TABLE phone (Name VARCHAR, Phone_ID VARCHAR); CREATE TABLE market (District VARCHAR, Market_ID VARCHAR); CREATE TABLE phone_market (Market_ID VARCHAR, Phone_ID VARCHAR)",
        "question": "Show the names of phones and the districts of markets they are on."
    },
    {
        "answer": "SELECT closed FROM table_name_6 WHERE opened < 1877 AND distance_from_wellington = \"2.44km\"",
        "context": "CREATE TABLE table_name_6 (closed VARCHAR, opened VARCHAR, distance_from_wellington VARCHAR)",
        "question": "Opened prior to 1877 only 2.44km from Wellington, when did this station close?"
    },
    {
        "answer": "SELECT T3.Name, T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID ORDER BY T2.Ranking",
        "context": "CREATE TABLE market (District VARCHAR, Market_ID VARCHAR, Ranking VARCHAR); CREATE TABLE phone (Name VARCHAR, Phone_ID VARCHAR); CREATE TABLE phone_market (Market_ID VARCHAR, Phone_ID VARCHAR)",
        "question": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market."
    },
    {
        "answer": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name HAVING SUM(T1.Num_of_stock) >= 2000 ORDER BY SUM(T1.Num_of_stock) DESC",
        "context": "CREATE TABLE phone_market (Phone_ID VARCHAR, Num_of_stock INTEGER); CREATE TABLE phone (Name VARCHAR, Phone_ID VARCHAR)",
        "question": "Show the names of phones that have total number of stocks bigger than 2000, in descending order of the total number of stocks."
    },
    {
        "answer": "SELECT Name FROM phone WHERE NOT Phone_id IN (SELECT Phone_ID FROM phone_market)",
        "context": "CREATE TABLE phone (Name VARCHAR, Phone_id VARCHAR, Phone_ID VARCHAR); CREATE TABLE phone_market (Name VARCHAR, Phone_id VARCHAR, Phone_ID VARCHAR)",
        "question": "List the names of phones that are not on any market."
    },
    {
        "answer": "SELECT week_7 FROM table_name_62 WHERE week_3 = \"35.90\"",
        "context": "CREATE TABLE table_name_62 (week_7 VARCHAR, week_3 VARCHAR)",
        "question": "What is week 7 when week 3 is 35.90?"
    },
    {
        "answer": "SELECT company, headquarters FROM company ORDER BY market_value DESC",
        "context": "CREATE TABLE company (company VARCHAR, headquarters VARCHAR, market_value VARCHAR)",
        "question": "Show all company names and headquarters in the descending order of market value."
    },
    {
        "answer": "SELECT main_industry, COUNT(*) FROM company GROUP BY main_industry ORDER BY SUM(market_value) DESC LIMIT 1",
        "context": "CREATE TABLE company (main_industry VARCHAR, market_value INTEGER)",
        "question": "List the main industry with highest total market value and its number of companies."
    },
    {
        "answer": "SELECT headquarters FROM company WHERE main_industry = 'Banking' GROUP BY headquarters HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE company (headquarters VARCHAR, main_industry VARCHAR)",
        "question": "Show headquarters with at least two companies in the banking industry."
    },
    {
        "answer": "SELECT headquarters FROM company WHERE main_industry = 'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry = 'Oil and gas'",
        "context": "CREATE TABLE company (headquarters VARCHAR, main_industry VARCHAR)",
        "question": "Show all headquarters with both a company in banking industry and a company in Oil and gas."
    },
    {
        "answer": "SELECT winnings FROM table_2012187_1 WHERE poles = 0 AND team_s_ = \"Yates Racing Front Row Motorsports\"",
        "context": "CREATE TABLE table_2012187_1 (winnings VARCHAR, poles VARCHAR, team_s_ VARCHAR)",
        "question": "state the winnings of yates racing front row motorsports where poles were 0"
    },
    {
        "answer": "SELECT T2.company, COUNT(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id",
        "context": "CREATE TABLE station_company (company_id VARCHAR); CREATE TABLE company (company VARCHAR, company_id VARCHAR)",
        "question": "Show the company name with the number of gas station."
    },
    {
        "answer": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.company = 'ExxonMobil'",
        "context": "CREATE TABLE gas_station (manager_name VARCHAR, station_id VARCHAR); CREATE TABLE station_company (company_id VARCHAR, station_id VARCHAR); CREATE TABLE company (company_id VARCHAR, company VARCHAR)",
        "question": "Show the manager name for gas stations belonging to the ExxonMobil company."
    },
    {
        "answer": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.market_value > 100",
        "context": "CREATE TABLE gas_station (location VARCHAR, station_id VARCHAR); CREATE TABLE company (company_id VARCHAR, market_value INTEGER); CREATE TABLE station_company (company_id VARCHAR, station_id VARCHAR)",
        "question": "Show all locations where a gas station for company with market value greater than 100 is located."
    },
    {
        "answer": "SELECT manager_name FROM gas_station WHERE open_year > 2000 GROUP BY manager_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE gas_station (manager_name VARCHAR, open_year INTEGER)",
        "question": "Show the manager name with most number of gas stations opened after 2000."
    },
    {
        "answer": "SELECT senior_status FROM table_name_18 WHERE chief_judge = \"\u2014\" AND reason_for_termination = \"death\" AND active_service = \"1967\u20131983\"",
        "context": "CREATE TABLE table_name_18 (senior_status VARCHAR, active_service VARCHAR, chief_judge VARCHAR, reason_for_termination VARCHAR)",
        "question": "Which Senior status has a Chief Judge of \u2014, a Reason for termination of death, and Active service of 1967\u20131983?"
    },
    {
        "answer": "SELECT senior_status FROM table_name_7 WHERE appointed_by = \"l. johnson category:articles with hcards\" AND born_died = \"1918\u20132009\"",
        "context": "CREATE TABLE table_name_7 (senior_status VARCHAR, appointed_by VARCHAR, born_died VARCHAR)",
        "question": "Which Senior status has Appointed by of l. johnson category:articles with hcards, and Born/Died of 1918\u20132009?"
    },
    {
        "answer": "SELECT T3.location, T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",
        "context": "CREATE TABLE gas_station (location VARCHAR, Representative_Name VARCHAR, station_id VARCHAR); CREATE TABLE station_company (company_id VARCHAR, station_id VARCHAR); CREATE TABLE company (company_id VARCHAR, Assets_billion VARCHAR)",
        "question": "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts."
    },
    {
        "answer": "SELECT rank, company, market_value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion, profits_billion",
        "context": "CREATE TABLE company (rank VARCHAR, company VARCHAR, market_value VARCHAR, main_industry VARCHAR, sales_billion VARCHAR, profits_billion VARCHAR)",
        "question": "find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion."
    },
    {
        "answer": "SELECT foochow FROM table_2013618_1 WHERE english_name = \"Pingnan County\"",
        "context": "CREATE TABLE table_2013618_1 (foochow VARCHAR, english_name VARCHAR)",
        "question": "Name the foochow for pingnan county"
    },
    {
        "answer": "SELECT year FROM table_name_57 WHERE silver = \"yuri omeltchenko\"",
        "context": "CREATE TABLE table_name_57 (year VARCHAR, silver VARCHAR)",
        "question": "What year did Yuri Omeltchenko win Silver?"
    },
    {
        "answer": "SELECT T2.party_name, COUNT(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id",
        "context": "CREATE TABLE party (party_name VARCHAR, party_id VARCHAR); CREATE TABLE Member (party_id VARCHAR)",
        "question": "Show all party names and the number of members in each party."
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_20170644_1 WHERE cfl_team = \"BC Lions (via Hamilton via Winnipeg )\"",
        "context": "CREATE TABLE table_20170644_1 (pick__number INTEGER, cfl_team VARCHAR)",
        "question": "What number pick did the CFL team bc lions (via hamilton via winnipeg ) have?"
    },
    {
        "answer": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE party (party_name VARCHAR, party_id VARCHAR); CREATE TABLE Member (party_id VARCHAR)",
        "question": "What is the name of party with most number of members?"
    },
    {
        "answer": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id WHERE T2.Party_name <> \"Progress Party\"",
        "context": "CREATE TABLE party (party_id VARCHAR, Party_name VARCHAR); CREATE TABLE Member (member_name VARCHAR, party_id VARCHAR)",
        "question": "Show member names that are not in the Progress Party."
    },
    {
        "answer": "SELECT reader FROM table_20174050_24 WHERE author = \"Cole, Stephen Stephen Cole\" AND release_date = \"2008-11-13 13 November 2008\"",
        "context": "CREATE TABLE table_20174050_24 (reader VARCHAR, author VARCHAR, release_date VARCHAR)",
        "question": "who is the reader of the audiobook authored by cole, stephen stephen cole and released on 2008-11-13 13 november 2008"
    },
    {
        "answer": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id",
        "context": "CREATE TABLE member (member_name VARCHAR); CREATE TABLE party_events (member_in_charge_id VARCHAR); CREATE TABLE member (member_name VARCHAR, member_id VARCHAR)",
        "question": "Show all member names who are not in charge of any event."
    },
    {
        "answer": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE party (party_name VARCHAR, party_id VARCHAR); CREATE TABLE party_events (party_id VARCHAR)",
        "question": "What are the names of parties with at least 2 events?"
    },
    {
        "answer": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE party_events (member_in_charge_id VARCHAR); CREATE TABLE member (member_name VARCHAR, member_id VARCHAR)",
        "question": "What is the name of member in charge of greatest number of events?"
    },
    {
        "answer": "SELECT COUNT(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id = t2.region_id JOIN party_events AS t3 ON t2.party_id = t3.party_id WHERE t1.region_name = \"United Kingdom\" AND t3.Event_Name = \"Annaual Meeting\"",
        "context": "CREATE TABLE party_events (party_id VARCHAR, Event_Name VARCHAR); CREATE TABLE region (region_id VARCHAR, region_name VARCHAR); CREATE TABLE party (region_id VARCHAR, party_id VARCHAR)",
        "question": "How many Annual Meeting events happened in the United Kingdom region?"
    },
    {
        "answer": "SELECT reader FROM table_20174050_23 WHERE format = \"Download/CD\" AND author = \"Lidster, Joseph Joseph Lidster\"",
        "context": "CREATE TABLE table_20174050_23 (reader VARCHAR, format VARCHAR, author VARCHAR)",
        "question": "who is the reader on the download/cd format of the title written by author lidster, joseph joseph lidster? "
    },
    {
        "answer": "SELECT landesliga_mitte FROM table_20181270_3 WHERE landesliga_s\u00fcd = \"FC Gundelfingen\" AND landesliga_nord = \"VfL Frohnlach\"",
        "context": "CREATE TABLE table_20181270_3 (landesliga_mitte VARCHAR, landesliga_s\u00fcd VARCHAR, landesliga_nord VARCHAR)",
        "question": "Name the landesliga mitte for fc gundelfingen and vfl frohnlach"
    },
    {
        "answer": "SELECT POSITION FROM pilot WHERE Join_Year < 2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year > 2005",
        "context": "CREATE TABLE pilot (POSITION VARCHAR, Join_Year INTEGER)",
        "question": "Show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000."
    },
    {
        "answer": "SELECT T3.Pilot_name, T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID",
        "context": "CREATE TABLE pilot_record (Aircraft_ID VARCHAR, Pilot_ID VARCHAR); CREATE TABLE pilot (Pilot_name VARCHAR, Pilot_ID VARCHAR); CREATE TABLE aircraft (Model VARCHAR, Aircraft_ID VARCHAR)",
        "question": "Show the names of pilots and models of aircrafts they have flied with."
    },
    {
        "answer": "SELECT T3.Pilot_name, T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank",
        "context": "CREATE TABLE pilot (Pilot_name VARCHAR, Pilot_ID VARCHAR, Rank VARCHAR); CREATE TABLE pilot_record (Aircraft_ID VARCHAR, Pilot_ID VARCHAR); CREATE TABLE aircraft (Fleet_Series VARCHAR, Aircraft_ID VARCHAR)",
        "question": "Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot."
    },
    {
        "answer": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34",
        "context": "CREATE TABLE pilot_record (Aircraft_ID VARCHAR, Pilot_ID VARCHAR); CREATE TABLE pilot (Pilot_ID VARCHAR, Age INTEGER); CREATE TABLE aircraft (Fleet_Series VARCHAR, Aircraft_ID VARCHAR)",
        "question": "Show the fleet series of the aircrafts flied by pilots younger than 34"
    },
    {
        "answer": "SELECT T2.Pilot_name, COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name",
        "context": "CREATE TABLE pilot (Pilot_name VARCHAR, pilot_ID VARCHAR); CREATE TABLE pilot_record (pilot_ID VARCHAR)",
        "question": "Show the names of pilots and the number of records they have."
    },
    {
        "answer": "SELECT release_date FROM table_20174050_7 WHERE reader = \"Syal, Meera Meera Syal\"",
        "context": "CREATE TABLE table_20174050_7 (release_date VARCHAR, reader VARCHAR)",
        "question": "If the reader is Syal, Meera Meera Syal, what was the release date?"
    },
    {
        "answer": "SELECT tournament FROM table_name_95 WHERE opponents_in_the_final = \"els callens nancy feber\"",
        "context": "CREATE TABLE table_name_95 (tournament VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "What tournament had an opponent of Els Callens Nancy Feber?"
    },
    {
        "answer": "SELECT publisher FROM table_20193855_2 WHERE book_title = \"Daughters of an Emerald Dusk\"",
        "context": "CREATE TABLE table_20193855_2 (publisher VARCHAR, book_title VARCHAR)",
        "question": "Who is the publisher of the book titled daughters of an emerald dusk?"
    },
    {
        "answer": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = \"Koby\"",
        "context": "CREATE TABLE ROLES (role_description VARCHAR, role_code VARCHAR); CREATE TABLE Employees (role_code VARCHAR, employee_name VARCHAR)",
        "question": "What is the role of the employee named Koby?"
    },
    {
        "answer": "SELECT COUNT(author_s__or_editor_s_) FROM table_20193855_2 WHERE book_title = \"Elf Child\"",
        "context": "CREATE TABLE table_20193855_2 (author_s__or_editor_s_ VARCHAR, book_title VARCHAR)",
        "question": "How many authors or editors are there for the book title elf child?"
    },
    {
        "answer": "SELECT report FROM table_name_77 WHERE name = \"tourist trophy\"",
        "context": "CREATE TABLE table_name_77 (report VARCHAR, name VARCHAR)",
        "question": "Name the Report of tourist trophy?"
    },
    {
        "answer": "SELECT Roles.role_description, COUNT(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING COUNT(Employees.employee_id) > 1",
        "context": "CREATE TABLE ROLES (Id VARCHAR); CREATE TABLE Employees (Id VARCHAR)",
        "question": "List roles that have more than one employee. List the role description and number of employees."
    },
    {
        "answer": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1",
        "context": "CREATE TABLE Documents (Id VARCHAR); CREATE TABLE Ref_Document_Status (Id VARCHAR)",
        "question": "What is the document status description of the document with id 1?"
    },
    {
        "answer": "SELECT coach FROM table_name_67 WHERE city = \"al farwaniyah\"",
        "context": "CREATE TABLE table_name_67 (coach VARCHAR, city VARCHAR)",
        "question": "Who coached for al farwaniyah?"
    },
    {
        "answer": "SELECT document_type_code FROM Documents WHERE document_id = 2",
        "context": "CREATE TABLE Documents (document_type_code VARCHAR, document_id VARCHAR)",
        "question": "List the document type code for the document with the id 2."
    },
    {
        "answer": "SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2",
        "context": "CREATE TABLE Documents (Id VARCHAR); CREATE TABLE Ref_Shipping_Agents (Id VARCHAR)",
        "question": "What is the name of the shipping agent of the document with id 2?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\"",
        "context": "CREATE TABLE Documents (Id VARCHAR); CREATE TABLE Ref_Shipping_Agents (Id VARCHAR)",
        "question": "How many documents were shipped by USPS?"
    },
    {
        "answer": "SELECT Ref_Shipping_Agents.shipping_agent_name, COUNT(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY COUNT(Documents.document_id) DESC LIMIT 1",
        "context": "CREATE TABLE Documents (Id VARCHAR); CREATE TABLE Ref_Shipping_Agents (Id VARCHAR)",
        "question": "Which shipping agent shipped the most documents? List the shipping agent name and the number of documents."
    },
    {
        "answer": "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4",
        "context": "CREATE TABLE Addresses (document_id VARCHAR); CREATE TABLE Documents_Mailed (document_id VARCHAR)",
        "question": "What address was the document with id 4 mailed to?"
    },
    {
        "answer": "SELECT document_id FROM Documents WHERE document_status_code = \"done\" AND document_type_code = \"Paper\" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\"",
        "context": "CREATE TABLE Ref_Shipping_Agents (document_id VARCHAR, document_status_code VARCHAR, document_type_code VARCHAR); CREATE TABLE Documents (document_id VARCHAR, document_status_code VARCHAR, document_type_code VARCHAR)",
        "question": "List the document ids of documents with the status done and type Paper, which not shipped by the shipping agent named USPS."
    },
    {
        "answer": "SELECT document_id FROM Documents WHERE document_status_code = \"done\" AND document_type_code = \"Paper\" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\"",
        "context": "CREATE TABLE Ref_Shipping_Agents (document_id VARCHAR, document_status_code VARCHAR, document_type_code VARCHAR); CREATE TABLE Documents (document_id VARCHAR, document_status_code VARCHAR, document_type_code VARCHAR)",
        "question": "List document id of documents status is done and document type is Paper and the document is shipped by shipping agent named USPS."
    },
    {
        "answer": "SELECT document_id, COUNT(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY COUNT(copy_number) DESC LIMIT 1",
        "context": "CREATE TABLE Draft_Copies (document_id VARCHAR, copy_number VARCHAR)",
        "question": "Which document has the most draft copies? List its document id and number of draft copies."
    },
    {
        "answer": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1",
        "context": "CREATE TABLE Circulation_History (Id VARCHAR); CREATE TABLE Employees (Id VARCHAR)",
        "question": "List all employees in the circulation history of the document with id 1. List the employee's name."
    },
    {
        "answer": "SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id",
        "context": "CREATE TABLE Circulation_History (employee_name VARCHAR); CREATE TABLE Employees (employee_name VARCHAR)",
        "question": "List the employees who have not showed up in any circulation history of documents. List the employee's name."
    },
    {
        "answer": "SELECT Employees.employee_name, COUNT(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id, Circulation_History.draft_number, Circulation_History.copy_number ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Circulation_History (Id VARCHAR); CREATE TABLE Employees (Id VARCHAR)",
        "question": "Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies."
    },
    {
        "answer": "SELECT document_id, COUNT(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id",
        "context": "CREATE TABLE Circulation_History (document_id VARCHAR, employee_id VARCHAR)",
        "question": "For each document, list the number of employees who have showed up in the circulation history of that document. List the document ids and number of employees."
    },
    {
        "answer": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber = t2.dnumber WHERE t2.dlocation = 'Houston'",
        "context": "CREATE TABLE dept_locations (dnumber VARCHAR, dlocation VARCHAR); CREATE TABLE department (dname VARCHAR, dnumber VARCHAR)",
        "question": "Find the names of departments that are located in Houston."
    },
    {
        "answer": "SELECT japanese_release_date FROM table_name_34 WHERE australia_release_date = \"2006-03-23\"",
        "context": "CREATE TABLE table_name_34 (japanese_release_date VARCHAR, australia_release_date VARCHAR)",
        "question": "What is Japanese Release Date, when Australia Release Date is \"2006-03-23\"?"
    },
    {
        "answer": "SELECT county FROM table_20278716_2 WHERE others__number = 915",
        "context": "CREATE TABLE table_20278716_2 (county VARCHAR, others__number VARCHAR)",
        "question": "What county had 915 third party voters?"
    },
    {
        "answer": "SELECT SUM(goal_difference) FROM table_name_3 WHERE draws = 8 AND goals_against = 32 AND wins < 12",
        "context": "CREATE TABLE table_name_3 (goal_difference INTEGER, wins VARCHAR, draws VARCHAR, goals_against VARCHAR)",
        "question": "What is the goal difference when there are fewer than 12 wins, 32 goals against and 8 draws?"
    },
    {
        "answer": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage'",
        "context": "CREATE TABLE EVENTS (event_details VARCHAR, Service_ID VARCHAR); CREATE TABLE Services (Service_ID VARCHAR, Service_Type_Code VARCHAR)",
        "question": "what are the event details of the services that have the type code 'Marriage'?"
    },
    {
        "answer": "SELECT T1.Participant_ID, T1.Participant_Type_Code, COUNT(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID GROUP BY T1.Participant_ID",
        "context": "CREATE TABLE Participants (Participant_ID VARCHAR, Participant_Type_Code VARCHAR); CREATE TABLE Participants_in_Events (Participant_ID VARCHAR)",
        "question": "How many events have each participants attended? List the participant id, type and the number."
    },
    {
        "answer": "SELECT MIN(goal_difference) FROM table_name_85 WHERE position > 16",
        "context": "CREATE TABLE table_name_85 (goal_difference INTEGER, position INTEGER)",
        "question": "What's the lowest goal difference when the position is higher than 16?"
    },
    {
        "answer": "SELECT T1.event_id, T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING COUNT(*) > 1",
        "context": "CREATE TABLE EVENTS (event_id VARCHAR, event_details VARCHAR, Event_ID VARCHAR); CREATE TABLE Participants_in_Events (Event_ID VARCHAR)",
        "question": "What are the ids and details of events that have more than one participants?"
    },
    {
        "answer": "SELECT standard_yarn_weight_system FROM table_20297668_1 WHERE wraps_per_inch__wpi_ = \"9 wpi\"",
        "context": "CREATE TABLE table_20297668_1 (standard_yarn_weight_system VARCHAR, wraps_per_inch__wpi_ VARCHAR)",
        "question": "Name the standard yarn weight system for 9 wpi"
    },
    {
        "answer": "SELECT AVG(league_goals) FROM table_name_98 WHERE fa_cup_goals = \"0\" AND position = \"mf\" AND league_cup_apps = \"0\" AND name = \"ben thornley\"",
        "context": "CREATE TABLE table_name_98 (league_goals INTEGER, name VARCHAR, league_cup_apps VARCHAR, fa_cup_goals VARCHAR, position VARCHAR)",
        "question": "What is the League Goals when the FA Cup Goals are 0, position is mf, League Cup Apps of 0, and name is Ben Thornley?"
    },
    {
        "answer": "SELECT COUNT(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'",
        "context": "CREATE TABLE participants (Participant_ID VARCHAR, participant_details VARCHAR); CREATE TABLE Participants_in_Events (Participant_ID VARCHAR)",
        "question": "How many events had participants whose details had the substring 'Dr.'"
    },
    {
        "answer": "SELECT 3 AS _dart_average FROM table_20301877_2 WHERE player = \"Raymond van Barneveld\"",
        "context": "CREATE TABLE table_20301877_2 (player VARCHAR)",
        "question": "what is the 3-dart average of raymond van barneveld"
    },
    {
        "answer": "SELECT T3.service_id, T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID = T3.Event_ID JOIN services AS T4 ON T3.service_id = T4.service_id GROUP BY T3.service_id ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE Participants_in_Events (Participant_ID VARCHAR, Event_ID VARCHAR); CREATE TABLE services (Service_Type_Code VARCHAR, service_id VARCHAR); CREATE TABLE EVENTS (service_id VARCHAR, Event_ID VARCHAR); CREATE TABLE participants (Participant_ID VARCHAR)",
        "question": "Which service id and type has the least number of participants?"
    },
    {
        "answer": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE participants (participant_type_code VARCHAR)",
        "question": "What is the most common participant type?"
    },
    {
        "answer": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE Participant_Details = 'Kenyatta Kuhn'",
        "context": "CREATE TABLE Participants (Participant_ID VARCHAR); CREATE TABLE EVENTS (event_id VARCHAR, Participant_Details VARCHAR); CREATE TABLE Participants_in_Events (event_id VARCHAR, Participant_ID VARCHAR)",
        "question": "Which events id does not have any participant with detail 'Kenyatta Kuhn'?"
    },
    {
        "answer": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'",
        "context": "CREATE TABLE EVENTS (service_id VARCHAR, event_details VARCHAR); CREATE TABLE services (service_type_code VARCHAR, service_id VARCHAR)",
        "question": "Which services type had both successful and failure event details?"
    },
    {
        "answer": "SELECT COUNT(*) FROM EVENTS WHERE NOT event_id IN (SELECT event_id FROM Participants_in_Events)",
        "context": "CREATE TABLE EVENTS (event_id VARCHAR); CREATE TABLE Participants_in_Events (event_id VARCHAR)",
        "question": "How many events did not have any participants?"
    },
    {
        "answer": "SELECT high_checkout FROM table_20351295_2 WHERE player = \"Trina Gulliver\"",
        "context": "CREATE TABLE table_20351295_2 (high_checkout VARCHAR, player VARCHAR)",
        "question": "What's Trina Gulliver's high checkout?"
    },
    {
        "answer": "SELECT DISTINCT T1.forename, T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000",
        "context": "CREATE TABLE drivers (forename VARCHAR, surname VARCHAR, driverid VARCHAR); CREATE TABLE laptimes (driverid VARCHAR, milliseconds INTEGER)",
        "question": "List the forename and surname of all distinct drivers who once had laptime less than 93000 milliseconds?"
    },
    {
        "answer": "SELECT DISTINCT T1.driverid, T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds > 100000",
        "context": "CREATE TABLE laptimes (driverid VARCHAR, milliseconds INTEGER); CREATE TABLE drivers (driverid VARCHAR, nationality VARCHAR)",
        "question": "Find all the distinct id and nationality of drivers who have had laptime more than 100000 milliseconds?"
    },
    {
        "answer": "SELECT sanskrit_word_and_meaning FROM table_20354_7 WHERE zodiac_sign = \"Aquarius\"",
        "context": "CREATE TABLE table_20354_7 (sanskrit_word_and_meaning VARCHAR, zodiac_sign VARCHAR)",
        "question": "Name the sanskrit word and meaning for aquarius"
    },
    {
        "answer": "SELECT T1.driverid, T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1",
        "context": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR); CREATE TABLE laptimes (driverid VARCHAR, milliseconds VARCHAR)",
        "question": "What is the id and family name of the driver who has the longest laptime?"
    },
    {
        "answer": "SELECT T1.driverid, T1.forename, T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION = '1' GROUP BY T1.driverid HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR, surname VARCHAR); CREATE TABLE laptimes (driverid VARCHAR)",
        "question": "What is the id, forname and surname of the driver who had the first position in terms of laptime at least twice?"
    },
    {
        "answer": "SELECT T2.name, T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"",
        "context": "CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR); CREATE TABLE races (name VARCHAR, year VARCHAR, raceid VARCHAR); CREATE TABLE results (raceid VARCHAR, driverid VARCHAR)",
        "question": "Give me a list of names and years of races that had any driver whose forename is Lewis?"
    },
    {
        "answer": "SELECT T2.driverid, T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid, T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"",
        "context": "CREATE TABLE races (raceid VARCHAR, name VARCHAR); CREATE TABLE results (driverid VARCHAR, raceid VARCHAR); CREATE TABLE drivers (forename VARCHAR, driverid VARCHAR)",
        "question": "Find the id and forenames of drivers who participated both the races with name Australian Grand Prix and the races with name Chinese Grand Prix?"
    },
    {
        "answer": "SELECT T3.forename, T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename, T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"",
        "context": "CREATE TABLE races (raceid VARCHAR, name VARCHAR); CREATE TABLE drivers (forename VARCHAR, surname VARCHAR, driverid VARCHAR); CREATE TABLE results (raceid VARCHAR, driverid VARCHAR)",
        "question": "What are the forenames and surnames of drivers who participated in the races named Australian Grand Prix but not the races named Chinese Grand Prix?"
    },
    {
        "answer": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1",
        "context": "CREATE TABLE driverstandings (driverid VARCHAR, position VARCHAR, wins VARCHAR); CREATE TABLE drivers (forename VARCHAR, driverid VARCHAR)",
        "question": "Find all the forenames of distinct drivers who was in position 1 as standing and won?"
    },
    {
        "answer": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20",
        "context": "CREATE TABLE drivers (forename VARCHAR, driverid VARCHAR); CREATE TABLE driverstandings (driverid VARCHAR, points VARCHAR, position VARCHAR, wins VARCHAR)",
        "question": "Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points?"
    },
    {
        "answer": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017",
        "context": "CREATE TABLE races (name VARCHAR, circuitid VARCHAR, year VARCHAR); CREATE TABLE circuits (circuitid VARCHAR, country VARCHAR)",
        "question": "What are the names of races that were held after 2017 and the circuits were in the country of Spain?"
    },
    {
        "answer": "SELECT incumbent FROM table_name_45 WHERE party = \"democratic\" AND results = \"re-elected\" AND first_elected > 1992 AND district = \"new york 1\"",
        "context": "CREATE TABLE table_name_45 (incumbent VARCHAR, district VARCHAR, first_elected VARCHAR, party VARCHAR, results VARCHAR)",
        "question": "Who is the Incumbent of the Democratic Party at an election after 1992 in the New York 1 District who was Re-elected?"
    },
    {
        "answer": "SELECT DISTINCT driverid, STOP FROM pitstops WHERE duration < (SELECT MAX(duration) FROM pitstops WHERE raceid = 841)",
        "context": "CREATE TABLE pitstops (driverid VARCHAR, STOP VARCHAR, duration INTEGER, raceid VARCHAR)",
        "question": "Find the distinct driver id and the stop number of all drivers that have a shorter pit stop duration than some drivers in the race with id 841."
    },
    {
        "answer": "SELECT 2013 AS _parliamentary_election FROM table_203802_2 WHERE english_party_name = \"Pensioners Party\"",
        "context": "CREATE TABLE table_203802_2 (english_party_name VARCHAR)",
        "question": "What percent of the parliamentary election did the pensioners party receive"
    },
    {
        "answer": "SELECT DISTINCT driverid, STOP FROM pitstops WHERE duration > (SELECT MIN(duration) FROM pitstops WHERE raceid = 841)",
        "context": "CREATE TABLE pitstops (driverid VARCHAR, STOP VARCHAR, duration INTEGER, raceid VARCHAR)",
        "question": "Find the distinct driver id of all drivers that have a longer stop duration than some drivers in the race whose id is 841?"
    },
    {
        "answer": "SELECT COUNT(*) FROM table_203802_2 WHERE english_party_name = \"Center Alliance\"",
        "context": "CREATE TABLE table_203802_2 (english_party_name VARCHAR)",
        "question": "How many parties are named the Center Alliance"
    },
    {
        "answer": "SELECT T1.forename, T1.surname, T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING COUNT(*) > 8 UNION SELECT T1.forename, T1.surname, T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING COUNT(*) > 5",
        "context": "CREATE TABLE drivers (forename VARCHAR, surname VARCHAR, driverid VARCHAR); CREATE TABLE results (driverid VARCHAR); CREATE TABLE pitstops (driverid VARCHAR)",
        "question": "What are the drivers' first, last names and id who had more than 8 pit stops or participated in more than 5 race results?"
    },
    {
        "answer": "SELECT T1.surname, T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING COUNT(*) = 11 INTERSECT SELECT T1.surname, T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING COUNT(*) > 5",
        "context": "CREATE TABLE drivers (surname VARCHAR, driverid VARCHAR); CREATE TABLE results (driverid VARCHAR); CREATE TABLE pitstops (driverid VARCHAR)",
        "question": "What are the drivers' last names and id who had 11 pit stops and participated in more than 5 race results?"
    },
    {
        "answer": "SELECT T1.driverid, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR); CREATE TABLE races (raceid VARCHAR, year INTEGER); CREATE TABLE results (driverid VARCHAR, raceid VARCHAR)",
        "question": "What is the id and last name of the driver who participated in the most races after 2010?"
    },
    {
        "answer": "SELECT event FROM table_name_92 WHERE opponent = \"toa naketoatama\"",
        "context": "CREATE TABLE table_name_92 (event VARCHAR, opponent VARCHAR)",
        "question": "Which event has Toa Naketoatama as an opponent?"
    },
    {
        "answer": "SELECT date FROM table_name_22 WHERE opposing_teams = \"south africa\" AND venue = \"vodacom park , bloemfontein\"",
        "context": "CREATE TABLE table_name_22 (date VARCHAR, opposing_teams VARCHAR, venue VARCHAR)",
        "question": "What is Date, when Opposing Teams is \"South Africa\", and when Venus is \"Vodacom Park , Bloemfontein\"?"
    },
    {
        "answer": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5",
        "context": "CREATE TABLE constructorstandings (constructorid VARCHAR, points VARCHAR); CREATE TABLE constructors (name VARCHAR, constructorid VARCHAR, nationality VARCHAR)",
        "question": "Find the names of Japanese constructors that have once earned more than 5 points?"
    },
    {
        "answer": "SELECT AVG(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"",
        "context": "CREATE TABLE results (fastestlapspeed INTEGER, raceid VARCHAR); CREATE TABLE races (raceid VARCHAR, year VARCHAR, name VARCHAR)",
        "question": "What is the average fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?"
    },
    {
        "answer": "SELECT MAX(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"",
        "context": "CREATE TABLE results (fastestlapspeed INTEGER, raceid VARCHAR); CREATE TABLE races (raceid VARCHAR, year VARCHAR, name VARCHAR)",
        "question": "What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?"
    },
    {
        "answer": "SELECT MAX(T2.fastestlapspeed), T1.name, T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year",
        "context": "CREATE TABLE results (fastestlapspeed INTEGER, raceid VARCHAR); CREATE TABLE races (name VARCHAR, year INTEGER, raceid VARCHAR)",
        "question": "What are the maximum fastest lap speed in races held after 2004 grouped by race name and ordered by year?"
    },
    {
        "answer": "SELECT AVG(T2.fastestlapspeed), T1.name, T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year",
        "context": "CREATE TABLE results (fastestlapspeed INTEGER, raceid VARCHAR); CREATE TABLE races (name VARCHAR, year INTEGER, raceid VARCHAR)",
        "question": "What are the average fastest lap speed in races held after 2004 grouped by race name and ordered by year?"
    },
    {
        "answer": "SELECT T1.driverid, T1.forename, COUNT(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR); CREATE TABLE races (raceid VARCHAR); CREATE TABLE results (driverid VARCHAR, raceid VARCHAR)",
        "question": "Find the id, forename and number of races of all drivers who have at least participated in two races?"
    },
    {
        "answer": "SELECT method FROM table_name_2 WHERE opponent = \"rafael cavalcante\"",
        "context": "CREATE TABLE table_name_2 (method VARCHAR, opponent VARCHAR)",
        "question": "Which method was used when Rafael Cavalcante was the opponent?"
    },
    {
        "answer": "SELECT T1.driverid, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR); CREATE TABLE races (raceid VARCHAR); CREATE TABLE results (driverid VARCHAR, raceid VARCHAR)",
        "question": "Find the id and surname of the driver who participated the most number of races?"
    },
    {
        "answer": "SELECT T1.driverid, COUNT(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING COUNT(*) <= 30",
        "context": "CREATE TABLE races (raceid VARCHAR); CREATE TABLE results (driverid VARCHAR, raceid VARCHAR); CREATE TABLE drivers (driverid VARCHAR)",
        "question": "Find the driver id and number of races of all drivers who have at most participated in 30 races?"
    },
    {
        "answer": "SELECT smoke_point FROM table_name_24 WHERE polyunsaturated_fat = \"69g (4g in high oleic variety)\"",
        "context": "CREATE TABLE table_name_24 (smoke_point VARCHAR, polyunsaturated_fat VARCHAR)",
        "question": "What is the smoke point when the polyunsaturated fat is 69g (4g in high oleic variety)?"
    },
    {
        "answer": "SELECT crop_damaged__in_lakh_inr__ FROM table_20403667_2 WHERE public_property_damaged__in_lakh_inr__ = \"1,03,049.60\"",
        "context": "CREATE TABLE table_20403667_2 (crop_damaged__in_lakh_inr__ VARCHAR, public_property_damaged__in_lakh_inr__ VARCHAR)",
        "question": "How many crops were damaged when the public property damage was 1,03,049.60?"
    },
    {
        "answer": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE technician (Team VARCHAR)",
        "question": "Please show the team that has the most number of technicians."
    },
    {
        "answer": "SELECT T3.Name, T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID",
        "context": "CREATE TABLE machine (Machine_series VARCHAR, machine_id VARCHAR); CREATE TABLE repair_assignment (machine_id VARCHAR, technician_ID VARCHAR); CREATE TABLE technician (Name VARCHAR, technician_ID VARCHAR)",
        "question": "Show names of technicians and series of machines they are assigned to repair."
    },
    {
        "answer": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID ORDER BY T2.quality_rank",
        "context": "CREATE TABLE repair_assignment (machine_id VARCHAR, technician_ID VARCHAR); CREATE TABLE machine (machine_id VARCHAR, quality_rank VARCHAR); CREATE TABLE technician (Name VARCHAR, technician_ID VARCHAR)",
        "question": "Show names of technicians in ascending order of quality rank of the machine they are assigned."
    },
    {
        "answer": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID WHERE T2.value_points > 70",
        "context": "CREATE TABLE machine (machine_id VARCHAR, value_points INTEGER); CREATE TABLE repair_assignment (machine_id VARCHAR, technician_ID VARCHAR); CREATE TABLE technician (Name VARCHAR, technician_ID VARCHAR)",
        "question": "Show names of technicians who are assigned to repair machines with value point more than 70."
    },
    {
        "answer": "SELECT T2.Name, COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name",
        "context": "CREATE TABLE repair_assignment (technician_ID VARCHAR); CREATE TABLE technician (Name VARCHAR, technician_ID VARCHAR)",
        "question": "Show names of technicians and the number of machines they are assigned to repair."
    },
    {
        "answer": "SELECT AVG(grid) FROM table_name_7 WHERE laps < 24 AND bike = \"honda cbr1000rr\" AND rider = \"jason pridmore\"",
        "context": "CREATE TABLE table_name_7 (grid INTEGER, rider VARCHAR, laps VARCHAR, bike VARCHAR)",
        "question": "What is the average Grid, when Laps is less than 24, when Bike is \"Honda CBR1000RR\", and when Rider is \"Jason Pridmore\"?"
    },
    {
        "answer": "SELECT Name FROM technician WHERE NOT technician_id IN (SELECT technician_id FROM repair_assignment)",
        "context": "CREATE TABLE technician (Name VARCHAR, technician_id VARCHAR); CREATE TABLE repair_assignment (Name VARCHAR, technician_id VARCHAR)",
        "question": "List the names of technicians who have not been assigned to repair machines."
    },
    {
        "answer": "SELECT 3 AS _dart_average FROM table_20463779_22 WHERE player = \"Phil Taylor\"",
        "context": "CREATE TABLE table_20463779_22 (player VARCHAR)",
        "question": "What is Phil Taylor's 3-dart average?"
    },
    {
        "answer": "SELECT share FROM table_name_12 WHERE weekly_rank = \"8\" AND date = \"15 june\"",
        "context": "CREATE TABLE table_name_12 (share VARCHAR, weekly_rank VARCHAR, date VARCHAR)",
        "question": "Which Share has a weekly Rank of 8 and is dated 15 June?"
    },
    {
        "answer": "SELECT MIN(against) FROM table_name_16 WHERE venue = \"twickenham, london\" AND status = \"five nations\" AND opposing_teams = \"ireland\"",
        "context": "CREATE TABLE table_name_16 (against INTEGER, opposing_teams VARCHAR, venue VARCHAR, status VARCHAR)",
        "question": "What is the lowest against score for Twickenham, London with the status of Five Nations against Ireland?"
    },
    {
        "answer": "SELECT COUNT(guest_2) FROM table_20466963_13 WHERE presenter = \"Colin Murray\" AND date = \"6 April\"",
        "context": "CREATE TABLE table_20466963_13 (guest_2 VARCHAR, presenter VARCHAR, date VARCHAR)",
        "question": "Name the guest 2 for colin murray 6 april"
    },
    {
        "answer": "SELECT T2.Name, T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Money_Requested",
        "context": "CREATE TABLE entrepreneur (Company VARCHAR, People_ID VARCHAR, Money_Requested VARCHAR); CREATE TABLE people (Name VARCHAR, People_ID VARCHAR)",
        "question": "List the names of entrepreneurs and their companies in descending order of money requested?"
    },
    {
        "answer": "SELECT SUM(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 1.84",
        "context": "CREATE TABLE people (People_ID VARCHAR, Height INTEGER); CREATE TABLE perpetrator (Killed INTEGER, People_ID VARCHAR)",
        "question": "What is the total kills of the perpetrators with height more than 1.84."
    },
    {
        "answer": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = \"China\" OR T2.Country = \"Japan\"",
        "context": "CREATE TABLE perpetrator (People_ID VARCHAR, Country VARCHAR); CREATE TABLE people (Name VARCHAR, People_ID VARCHAR)",
        "question": "What are the names of perpetrators in country \"China\" or \"Japan\"?"
    },
    {
        "answer": "SELECT platelet_count FROM table_20592988_1 WHERE prothrombin_time = \"Unaffected\" AND partial_thromboplastin_time = \"Unaffected\"",
        "context": "CREATE TABLE table_20592988_1 (platelet_count VARCHAR, prothrombin_time VARCHAR, partial_thromboplastin_time VARCHAR)",
        "question": "What are the statuses of the platelet counts for the conditions where the prothrombin time and partial thromboblastin time is unaffected? "
    },
    {
        "answer": "SELECT videoconferencing FROM table_name_24 WHERE synchronous_conferencing = \"no\" AND web_conferencing = \"no\" AND faxing = \"yes\"",
        "context": "CREATE TABLE table_name_24 (videoconferencing VARCHAR, faxing VARCHAR, synchronous_conferencing VARCHAR, web_conferencing VARCHAR)",
        "question": "What is Videoconferencing, when Synchronous Conferencing is \"No\", when Web Conferencing is \"No\", and when Faxing is \"Yes\"?"
    },
    {
        "answer": "SELECT platelet_count FROM table_20592988_1 WHERE bleeding_time = \"Prolonged\" AND partial_thromboplastin_time = \"Unaffected\"",
        "context": "CREATE TABLE table_20592988_1 (platelet_count VARCHAR, bleeding_time VARCHAR, partial_thromboplastin_time VARCHAR)",
        "question": "What is the status of platelet counts for conditions where bleeding time is prolonged and partial thromboplastin time is unaffected? "
    },
    {
        "answer": "SELECT campus FROM campuses WHERE LOCATION = \"Northridge\" AND county = \"Los Angeles\" UNION SELECT campus FROM campuses WHERE LOCATION = \"San Francisco\" AND county = \"San Francisco\"",
        "context": "CREATE TABLE campuses (campus VARCHAR, LOCATION VARCHAR, county VARCHAR)",
        "question": "Find the name of the campuses that is in Northridge, Los Angeles or in San Francisco, San Francisco."
    },
    {
        "answer": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t1.campus = \"San Jose State University\" AND T2.year = 1996",
        "context": "CREATE TABLE csu_fees (year VARCHAR); CREATE TABLE campuses (id VARCHAR)",
        "question": "What is the campus fee of \"San Jose State University\" in year 1996?"
    },
    {
        "answer": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t1.campus = \"San Francisco State University\" AND T2.year = 1996",
        "context": "CREATE TABLE csu_fees (year VARCHAR); CREATE TABLE campuses (id VARCHAR)",
        "question": "What is the campus fee of \"San Francisco State University\" in year 1996?"
    },
    {
        "answer": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY SUM(degrees) DESC LIMIT 1",
        "context": "CREATE TABLE degrees (YEAR VARCHAR, degrees INTEGER)",
        "question": "Which year has the most degrees conferred?"
    },
    {
        "answer": "SELECT jockey FROM table_20626467_1 WHERE class = \"Group 1\" AND venue = \"Randwick\" AND distance = \"1400m\"",
        "context": "CREATE TABLE table_20626467_1 (jockey VARCHAR, distance VARCHAR, class VARCHAR, venue VARCHAR)",
        "question": "Who was the jockey in group 1 at the 1400m distance at randwick?"
    },
    {
        "answer": "SELECT T1.campus, SUM(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T2.year >= 1998 AND T2.year <= 2002 GROUP BY T1.campus",
        "context": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR); CREATE TABLE degrees (degrees INTEGER, campus VARCHAR, year VARCHAR)",
        "question": "report the total number of degrees granted between 1998 and 2002."
    },
    {
        "answer": "SELECT T1.campus, SUM(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.county = \"Orange\" AND T2.year >= 2000 GROUP BY T1.campus",
        "context": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR, county VARCHAR); CREATE TABLE degrees (degrees INTEGER, campus VARCHAR, year VARCHAR)",
        "question": "For each Orange county campus, report the number of degrees granted after 2000."
    },
    {
        "answer": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2002 AND faculty > (SELECT MAX(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2002 AND T1.county = \"Orange\")",
        "context": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR, county VARCHAR); CREATE TABLE faculty (campus VARCHAR, year VARCHAR)",
        "question": "Find the names of the campus which has more faculties in 2002 than every campus in Orange county."
    },
    {
        "answer": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id = t2.campus WHERE t2.year = 1956 AND totalenrollment_ay > 400 AND FTE_AY > 200",
        "context": "CREATE TABLE enrollments (campus VARCHAR, year VARCHAR); CREATE TABLE campuses (id VARCHAR)",
        "question": "What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956?"
    },
    {
        "answer": "SELECT AVG(wickets) FROM table_name_24 WHERE overs > 44 AND player = \"danish kaneria\" AND average > 13.8",
        "context": "CREATE TABLE table_name_24 (wickets INTEGER, average VARCHAR, overs VARCHAR, player VARCHAR)",
        "question": "What is the average wickets that have overs greater than 44, danish kaneria as the player, with an average greater than 13.8?"
    },
    {
        "answer": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = \"San Jose State University\" AND t2.year = 2000",
        "context": "CREATE TABLE degrees (Id VARCHAR); CREATE TABLE campuses (Id VARCHAR)",
        "question": "How many degrees were conferred in \"San Jose State University\" in 2000?"
    },
    {
        "answer": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = \"San Francisco State University\" AND t2.year = 2001",
        "context": "CREATE TABLE degrees (Id VARCHAR); CREATE TABLE campuses (Id VARCHAR)",
        "question": "What are the degrees conferred in \"San Francisco State University\" in 2001."
    },
    {
        "answer": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id = t2.campus WHERE t2.faculty >= 600 AND t2.faculty <= 1000 AND T1.year = 2004",
        "context": "CREATE TABLE campuses (id VARCHAR); CREATE TABLE faculty (campus VARCHAR, faculty VARCHAR)",
        "question": "List the campus that have between 600 and 1000 faculty lines in year 2004."
    },
    {
        "answer": "SELECT winning_team FROM table_name_11 WHERE date = \"july 13\"",
        "context": "CREATE TABLE table_name_11 (winning_team VARCHAR, date VARCHAR)",
        "question": "Who was the winning team on July 13?"
    },
    {
        "answer": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2001 ORDER BY t3.degrees LIMIT 1",
        "context": "CREATE TABLE campuses (id VARCHAR); CREATE TABLE faculty (faculty VARCHAR); CREATE TABLE degrees (Id VARCHAR)",
        "question": "How many faculty lines are there in the university that conferred the least number of degrees in year 2001?"
    },
    {
        "answer": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2002 ORDER BY t3.degrees DESC LIMIT 1",
        "context": "CREATE TABLE campuses (id VARCHAR); CREATE TABLE faculty (faculty VARCHAR); CREATE TABLE degrees (Id VARCHAR)",
        "question": "How many faculty lines are there in the university that conferred the most number of degrees in year 2002?"
    },
    {
        "answer": "SELECT SUM(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t1.year = 2004 AND t2.campus = \"San Jose State University\"",
        "context": "CREATE TABLE discipline_enrollments (undergraduate INTEGER, campus VARCHAR, year VARCHAR); CREATE TABLE campuses (id VARCHAR, campus VARCHAR)",
        "question": "How many undergraduates are there in \"San Jose State University\" in year 2004?"
    },
    {
        "answer": "SELECT SUM(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t1.year = 2004 AND t2.campus = \"San Francisco State University\"",
        "context": "CREATE TABLE discipline_enrollments (graduate INTEGER, campus VARCHAR, year VARCHAR); CREATE TABLE campuses (id VARCHAR, campus VARCHAR)",
        "question": "What is the number of graduates in \"San Francisco State University\" in year 2004?"
    },
    {
        "answer": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = \"San Jose State University\" AND t1.year = 2000",
        "context": "CREATE TABLE campuses (id VARCHAR, campus VARCHAR); CREATE TABLE csu_fees (campusfee VARCHAR, campus VARCHAR, year VARCHAR)",
        "question": "Find the campus fee of \"San Jose State University\" in year 2000."
    },
    {
        "answer": "SELECT rounds FROM table_name_84 WHERE engine = \"opc-challenge\" AND driver = \"satrio hermanto\"",
        "context": "CREATE TABLE table_name_84 (rounds VARCHAR, engine VARCHAR, driver VARCHAR)",
        "question": "How many rounds did satrio hermanto go with an opc-challenge engine?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_80 WHERE competition = \"european indoor championships\" AND venue = \"budapest , hungary\"",
        "context": "CREATE TABLE table_name_80 (year INTEGER, competition VARCHAR, venue VARCHAR)",
        "question": "Which Year has a Competition of european indoor championships, and a Venue of budapest , hungary?"
    },
    {
        "answer": "SELECT COUNT(totals) FROM table_2066296_5 WHERE interior_roof = \"Parchment/black\"",
        "context": "CREATE TABLE table_2066296_5 (totals VARCHAR, interior_roof VARCHAR)",
        "question": "How many different total results are there for the model with parchment/black interior/roof?"
    },
    {
        "answer": "SELECT engine FROM table_name_2 WHERE class = \"c\" AND team = \"hs technik motorsport\" AND driver = \"philipp eng\"",
        "context": "CREATE TABLE table_name_2 (engine VARCHAR, driver VARCHAR, class VARCHAR, team VARCHAR)",
        "question": "What c class engine did philipp eng and team hs technik motorsport use?"
    },
    {
        "answer": "SELECT city_s_ FROM table_20630462_1 WHERE also_currently_known_as = \"Medibank International Sydney\"",
        "context": "CREATE TABLE table_20630462_1 (city_s_ VARCHAR, also_currently_known_as VARCHAR)",
        "question": "What is the city location of the tournament currently known as the Medibank International Sydney?"
    },
    {
        "answer": "SELECT Support_rate, Consider_rate, Oppose_rate FROM candidate ORDER BY unsure_rate",
        "context": "CREATE TABLE candidate (Support_rate VARCHAR, Consider_rate VARCHAR, Oppose_rate VARCHAR, unsure_rate VARCHAR)",
        "question": "Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate."
    },
    {
        "answer": "SELECT chassis FROM table_name_74 WHERE engine = \"volkswagen\" AND driver = \"rahel frey\"",
        "context": "CREATE TABLE table_name_74 (chassis VARCHAR, engine VARCHAR, driver VARCHAR)",
        "question": "What is the chassis of rahel frey's volkswagen engine?"
    },
    {
        "answer": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE candidate (poll_source VARCHAR)",
        "question": "Which poll resource provided the most number of candidate information?"
    },
    {
        "answer": "SELECT t1.name, t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id ORDER BY t2.support_rate DESC LIMIT 1",
        "context": "CREATE TABLE candidate (people_id VARCHAR, support_rate VARCHAR); CREATE TABLE people (name VARCHAR, sex VARCHAR, people_id VARCHAR)",
        "question": "Find the name and gender of the candidate who got the highest support rate."
    },
    {
        "answer": "SELECT company FROM table_20667854_1 WHERE index_weighting___percentage = \"1\" AND city = \"Dimitrovgrad\"",
        "context": "CREATE TABLE table_20667854_1 (company VARCHAR, index_weighting___percentage VARCHAR, city VARCHAR)",
        "question": "What is every company with an index weighting % of 1 and the city of Dimitrovgrad?"
    },
    {
        "answer": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id GROUP BY t1.sex ORDER BY AVG(t2.unsure_rate) DESC LIMIT 1",
        "context": "CREATE TABLE candidate (people_id VARCHAR, unsure_rate INTEGER); CREATE TABLE people (sex VARCHAR, people_id VARCHAR)",
        "question": "which gender got the highest average uncertain ratio."
    },
    {
        "answer": "SELECT SUM(ties) FROM table_name_75 WHERE years = \"1919\u20131925\" AND pct > 0.734",
        "context": "CREATE TABLE table_name_75 (ties INTEGER, years VARCHAR, pct VARCHAR)",
        "question": "How many Ties have Years of 1919\u20131925, and a Pct larger than 0.734?"
    },
    {
        "answer": "SELECT COUNT(*), sex FROM people WHERE weight > 85 GROUP BY sex",
        "context": "CREATE TABLE people (sex VARCHAR, weight INTEGER)",
        "question": "how many people are there whose weight is higher than 85 for each gender?"
    },
    {
        "answer": "SELECT name FROM people WHERE height < (SELECT AVG(height) FROM people)",
        "context": "CREATE TABLE people (name VARCHAR, height INTEGER)",
        "question": "find the name of people whose height is lower than the average."
    },
    {
        "answer": "SELECT party FROM table_name_77 WHERE years_in_assembly = \"2008\u2013present\" AND name = \"tom ammiano\"",
        "context": "CREATE TABLE table_name_77 (party VARCHAR, years_in_assembly VARCHAR, name VARCHAR)",
        "question": "Which Party has Years in Assembly of 2008\u2013present, and a Name of tom ammiano?"
    },
    {
        "answer": "SELECT to_par FROM table_name_61 WHERE total < 284 AND player = \"jeff sluman\"",
        "context": "CREATE TABLE table_name_61 (to_par VARCHAR, total VARCHAR, player VARCHAR)",
        "question": "What was Jeff Sluman's To par when his total was smaller than 284?"
    },
    {
        "answer": "SELECT T1.director, T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID WHERE T2.stars = 5",
        "context": "CREATE TABLE Movie (director VARCHAR, title VARCHAR, mID VARCHAR); CREATE TABLE Rating (mID VARCHAR, stars VARCHAR)",
        "question": "What are the names of directors who directed movies with 5 star rating? Also return the title of these movies."
    },
    {
        "answer": "SELECT series__number FROM table_20704243_5 WHERE written_by = \"M. Scott Veach & Rebecca Kirsch\"",
        "context": "CREATE TABLE table_20704243_5 (series__number VARCHAR, written_by VARCHAR)",
        "question": "Name the series number for  m. scott veach & rebecca kirsch"
    },
    {
        "answer": "SELECT title FROM Movie WHERE NOT mID IN (SELECT mID FROM Rating)",
        "context": "CREATE TABLE Rating (title VARCHAR, mID VARCHAR); CREATE TABLE Movie (title VARCHAR, mID VARCHAR)",
        "question": "Find the titles of all movies that have no ratings."
    },
    {
        "answer": "SELECT AVG(T1.stars), T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.year = (SELECT MIN(YEAR) FROM Movie)",
        "context": "CREATE TABLE Movie (title VARCHAR, mID VARCHAR, year VARCHAR); CREATE TABLE Rating (stars INTEGER, mID VARCHAR); CREATE TABLE Movie (YEAR INTEGER)",
        "question": "What is the average rating stars and title for the oldest movie?"
    },
    {
        "answer": "SELECT T2.title, T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars > (SELECT AVG(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.director = \"James Cameron\")",
        "context": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER); CREATE TABLE Movie (title VARCHAR, director VARCHAR, mID VARCHAR)",
        "question": "What are the titles and directors of the movies whose star is greater than the average stars of the movies directed by James Cameron?"
    },
    {
        "answer": "SELECT T3.name, T2.title, T1.stars, T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID ORDER BY T3.name, T2.title, T1.stars",
        "context": "CREATE TABLE Rating (stars VARCHAR, ratingDate VARCHAR, mID VARCHAR, rID VARCHAR); CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR); CREATE TABLE Movie (title VARCHAR, mID VARCHAR)",
        "question": "Return reviewer name, movie title, stars, and ratingDate. And sort the data first by reviewer name, then by movie title, and lastly by number of stars."
    },
    {
        "answer": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.title = 'Gone with the Wind'",
        "context": "CREATE TABLE Movie (mID VARCHAR, title VARCHAR); CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR); CREATE TABLE Rating (mID VARCHAR, rID VARCHAR)",
        "question": "Find the names of all reviewers who rated Gone with the Wind."
    },
    {
        "answer": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Sarah Martinez'",
        "context": "CREATE TABLE Reviewer (rID VARCHAR, name VARCHAR); CREATE TABLE Movie (director VARCHAR, mID VARCHAR); CREATE TABLE Rating (mID VARCHAR, rID VARCHAR)",
        "question": "Find the names of all directors whose movies are rated by Sarah Martinez."
    },
    {
        "answer": "SELECT DISTINCT T3.name, T2.title, T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.director = T3.name",
        "context": "CREATE TABLE Rating (stars VARCHAR, mID VARCHAR, rID VARCHAR); CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR); CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR)",
        "question": "For any rating where the name of reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars."
    },
    {
        "answer": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Chris Jackson'",
        "context": "CREATE TABLE Reviewer (rID VARCHAR, name VARCHAR); CREATE TABLE Movie (title VARCHAR, mID VARCHAR); CREATE TABLE Movie (title VARCHAR); CREATE TABLE Rating (mID VARCHAR, rID VARCHAR)",
        "question": "Find the titles of all movies not reviewed by Chris Jackson."
    },
    {
        "answer": "SELECT T1.title, T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title <> T2.title ORDER BY T1.director, T1.title",
        "context": "CREATE TABLE Movie (title VARCHAR, director VARCHAR); CREATE TABLE Movie (director VARCHAR, title VARCHAR)",
        "question": "For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title."
    },
    {
        "answer": "SELECT parish FROM table_20722805_1 WHERE mccain_percentage = \"45.37%\"",
        "context": "CREATE TABLE table_20722805_1 (parish VARCHAR, mccain_percentage VARCHAR)",
        "question": "What parish did McCain have 45.37% of the votes?"
    },
    {
        "answer": "SELECT T1.title, T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title <> T2.title",
        "context": "CREATE TABLE Movie (director VARCHAR, title VARCHAR); CREATE TABLE Movie (title VARCHAR, year VARCHAR, director VARCHAR)",
        "question": "For directors who had more than one movie, return the titles and produced years of all movies directed by them."
    },
    {
        "answer": "SELECT AVG(money___) AS $__ FROM table_name_94 WHERE country = \"united states\" AND player = \"lanny wadkins\"",
        "context": "CREATE TABLE table_name_94 (money___ INTEGER, country VARCHAR, player VARCHAR)",
        "question": "What was the average money for United States when Lanny Wadkins played?"
    },
    {
        "answer": "SELECT T2.title, AVG(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY AVG(T1.stars) DESC LIMIT 1",
        "context": "CREATE TABLE Rating (stars INTEGER, mID VARCHAR); CREATE TABLE Movie (title VARCHAR, mID VARCHAR)",
        "question": "Find the movies with the highest average rating. Return the movie titles and average rating."
    },
    {
        "answer": "SELECT T2.title, AVG(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY AVG(T1.stars) LIMIT 1",
        "context": "CREATE TABLE Rating (stars INTEGER, mID VARCHAR); CREATE TABLE Movie (title VARCHAR, mID VARCHAR)",
        "question": "What are the movie titles and average rating of the movies with the lowest average rating?"
    },
    {
        "answer": "SELECT second_party FROM table_name_31 WHERE second_member = \"charles robert colvile\" AND first_party = \"conservative\" AND first_member = \"william mundy\"",
        "context": "CREATE TABLE table_name_31 (second_party VARCHAR, first_member VARCHAR, second_member VARCHAR, first_party VARCHAR)",
        "question": "Which of the second parties has second member Charles Robert Colvile, a conservative first party, and first member William Mundy?"
    },
    {
        "answer": "SELECT T2.title, T1.stars, T2.director, MAX(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE director <> \"null\" GROUP BY director",
        "context": "CREATE TABLE Rating (stars INTEGER, mID VARCHAR); CREATE TABLE Movie (title VARCHAR, director VARCHAR, mID VARCHAR)",
        "question": "For each director, return the director's name together with the title of the movie they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL."
    },
    {
        "answer": "SELECT T2.title, T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3",
        "context": "CREATE TABLE Rating (mID VARCHAR, stars VARCHAR); CREATE TABLE Movie (title VARCHAR, year VARCHAR, mID VARCHAR)",
        "question": "What are the names and years of the movies that has the top 3 highest rating star?"
    },
    {
        "answer": "SELECT first_party FROM table_name_50 WHERE second_member = \"charles robert colvile\" AND second_party = \"liberal\"",
        "context": "CREATE TABLE table_name_50 (first_party VARCHAR, second_member VARCHAR, second_party VARCHAR)",
        "question": "Which of the first parties has second member as  Charles Robert Colvile, and a liberal second party?"
    },
    {
        "answer": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = \"Brittany Harris\"",
        "context": "CREATE TABLE Reviewer (rID VARCHAR, name VARCHAR); CREATE TABLE Rating (mID VARCHAR); CREATE TABLE Rating (mID VARCHAR, rID VARCHAR)",
        "question": "What are the ids of the movies that are not reviewed by Brittany Harris."
    },
    {
        "answer": "SELECT COUNT(seats_forfeited) FROM table_20728138_1 WHERE party = \"Revolutionary Socialist party\"",
        "context": "CREATE TABLE table_20728138_1 (seats_forfeited VARCHAR, party VARCHAR)",
        "question": "How many seats were forfeited in the revolutionary socialist party?"
    },
    {
        "answer": "SELECT status FROM table_name_2 WHERE opposing_team = \"gauteng falcons\"",
        "context": "CREATE TABLE table_name_2 (status VARCHAR, opposing_team VARCHAR)",
        "question": "What status has gauteng falcons as the opposing team?"
    },
    {
        "answer": "SELECT opposing_team FROM table_name_12 WHERE status = \"second test\"",
        "context": "CREATE TABLE table_name_12 (opposing_team VARCHAR, status VARCHAR)",
        "question": "What opposing team has second test as the status?"
    },
    {
        "answer": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Brittany Harris' OR T2.year > 2000",
        "context": "CREATE TABLE Reviewer (rID VARCHAR, name VARCHAR); CREATE TABLE Movie (title VARCHAR, mID VARCHAR, year VARCHAR); CREATE TABLE Rating (mID VARCHAR, rID VARCHAR)",
        "question": "What are names of the movies that are either made after 2000 or reviewed by Brittany Harris?"
    },
    {
        "answer": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars = 4",
        "context": "CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR); CREATE TABLE Rating (rID VARCHAR, stars VARCHAR)",
        "question": "What are the names of reviewers who had rated 3 star and 4 star?"
    },
    {
        "answer": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T1.stars = 4",
        "context": "CREATE TABLE Rating (mID VARCHAR, stars VARCHAR); CREATE TABLE Movie (title VARCHAR, mID VARCHAR)",
        "question": "What are the names of movies that get 3 star and 4 star?"
    },
    {
        "answer": "SELECT 17 AS th_c FROM table_name_76 WHERE initial_syllable_open_semi_open_unstressed_vowels = \"o /\u0275/\"",
        "context": "CREATE TABLE table_name_76 (initial_syllable_open_semi_open_unstressed_vowels VARCHAR)",
        "question": "What is 17th c., when Initial-Syllable Open/Semi-Open Unstressed Vowels is \"o /\u0275/\"?"
    },
    {
        "answer": "SELECT COUNT(opponents) FROM table_20745444_1 WHERE opponent = \"Duke\"",
        "context": "CREATE TABLE table_20745444_1 (opponents VARCHAR, opponent VARCHAR)",
        "question": "How many times were Duke the opponents?"
    },
    {
        "answer": "SELECT MAX(opponents) FROM table_20745444_1 WHERE record = \"4-0\"",
        "context": "CREATE TABLE table_20745444_1 (opponents INTEGER, record VARCHAR)",
        "question": "How many losses were there when the record was 4-0?"
    },
    {
        "answer": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION <> \"East\"",
        "context": "CREATE TABLE county_public_safety (Police_force VARCHAR, LOCATION VARCHAR)",
        "question": "List the distinct police forces of counties whose location is not on east side."
    },
    {
        "answer": "SELECT american FROM table_name_23 WHERE british = \"\u026a, \u0259\" AND initial_syllable_open_semi_open_unstressed_vowels = \"\u00e6 /\u0268/\"",
        "context": "CREATE TABLE table_name_23 (american VARCHAR, british VARCHAR, initial_syllable_open_semi_open_unstressed_vowels VARCHAR)",
        "question": "What is American, when British is \"\u026a, \u0259\", and when Initial-Syllable Open/Semi-Open Unstressed Vowels is \"\u00e6 /\u0268/\"?"
    },
    {
        "answer": "SELECT T1.White, T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID",
        "context": "CREATE TABLE city (White VARCHAR, County_ID VARCHAR); CREATE TABLE county_public_safety (Crime_rate VARCHAR, County_ID VARCHAR)",
        "question": "Show white percentages of cities and the crime rates of counties they are in."
    },
    {
        "answer": "SELECT MAX(game) FROM table_20760407_1 WHERE bruins_points = 56",
        "context": "CREATE TABLE table_20760407_1 (game INTEGER, bruins_points VARCHAR)",
        "question": "What game did the Bruins have 56 points?"
    },
    {
        "answer": "SELECT name FROM city WHERE county_ID = (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
        "context": "CREATE TABLE city (name VARCHAR, county_ID VARCHAR, Police_officers VARCHAR); CREATE TABLE county_public_safety (name VARCHAR, county_ID VARCHAR, Police_officers VARCHAR)",
        "question": "Show the name of cities in the county that has the largest number of police officers."
    },
    {
        "answer": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90",
        "context": "CREATE TABLE county_public_safety (Crime_rate VARCHAR, County_ID VARCHAR); CREATE TABLE city (County_ID VARCHAR, White INTEGER)",
        "question": "Show the crime rate of counties with a city having white percentage more than 90."
    },
    {
        "answer": "SELECT COUNT(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population > 20000)",
        "context": "CREATE TABLE county_public_safety (county_ID VARCHAR, population INTEGER); CREATE TABLE city (county_ID VARCHAR, population INTEGER)",
        "question": "Show the number of cities in counties that have a population more than 20000."
    },
    {
        "answer": "SELECT MAX(first_elected) FROM table_name_40 WHERE results = \"lost re-election democratic gain\" AND incumbent = \"john hostettler\"",
        "context": "CREATE TABLE table_name_40 (first_elected INTEGER, results VARCHAR, incumbent VARCHAR)",
        "question": "What is the latest year for first elected with john hostettler as incumbent and a result of lost re-election democratic gain?"
    },
    {
        "answer": "SELECT location_s_ FROM table_2076595_1 WHERE control = \"Public\" AND type = \"Master's university\"",
        "context": "CREATE TABLE table_2076595_1 (location_s_ VARCHAR, control VARCHAR, type VARCHAR)",
        "question": "What are the public schools with a master's university?"
    },
    {
        "answer": "SELECT maximum_diameter FROM table_name_57 WHERE name__year_commissioned_ = \"mid west gas pipeline (1999)\"",
        "context": "CREATE TABLE table_name_57 (maximum_diameter VARCHAR, name__year_commissioned_ VARCHAR)",
        "question": "What is the maximum diameter of the Mid West Gas Pipeline (1999)?"
    },
    {
        "answer": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate < 100)",
        "context": "CREATE TABLE county_public_safety (name VARCHAR, county_id VARCHAR, Crime_rate INTEGER); CREATE TABLE city (name VARCHAR, county_id VARCHAR, Crime_rate INTEGER)",
        "question": "Show the names of cities in counties that have a crime rate less than 100."
    },
    {
        "answer": "SELECT roomName, RoomId FROM Rooms WHERE basePrice > 160 AND maxOccupancy > 2",
        "context": "CREATE TABLE Rooms (roomName VARCHAR, RoomId VARCHAR, basePrice VARCHAR, maxOccupancy VARCHAR)",
        "question": "Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids."
    },
    {
        "answer": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Reservations (Room VARCHAR); CREATE TABLE Rooms (roomName VARCHAR, RoomId VARCHAR)",
        "question": "Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations."
    },
    {
        "answer": "SELECT COUNT(enrollment__spring_2012_) FROM table_2076557_2 WHERE school = \"Sioux Falls Seminary\"",
        "context": "CREATE TABLE table_2076557_2 (enrollment__spring_2012_ VARCHAR, school VARCHAR)",
        "question": "Name the number of spring enrollment for sioux falls seminary"
    },
    {
        "answer": "SELECT accreditation FROM table_2076557_2 WHERE school = \"Southeast Technical Institute\"",
        "context": "CREATE TABLE table_2076557_2 (accreditation VARCHAR, school VARCHAR)",
        "question": "Name the accrediatation for southeast technical institute"
    },
    {
        "answer": "SELECT T2.roomName, T1.Rate, T1.CheckIn, T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1",
        "context": "CREATE TABLE Rooms (roomName VARCHAR, RoomId VARCHAR); CREATE TABLE Reservations (Rate VARCHAR, CheckIn VARCHAR, CheckOut VARCHAR, Room VARCHAR)",
        "question": "Which room has the highest rate? List the room's full name, rate, check in and check out date."
    },
    {
        "answer": "SELECT AVG(average) FROM table_name_77 WHERE rank > 4 AND player = \"dean minors\"",
        "context": "CREATE TABLE table_name_77 (average INTEGER, rank VARCHAR, player VARCHAR)",
        "question": "Can you tell me the average Average that has the Rank larger than 4, and the Player of dean minors?"
    },
    {
        "answer": "SELECT r_epp FROM table_name_90 WHERE j_thiessen = \"tjoatj\"",
        "context": "CREATE TABLE table_name_90 (r_epp VARCHAR, j_thiessen VARCHAR)",
        "question": "Which of the R. Epp, has J Thiessen of Tjoatj?"
    },
    {
        "answer": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T2.decor ORDER BY COUNT(T2.decor) LIMIT 1",
        "context": "CREATE TABLE Reservations (Room VARCHAR); CREATE TABLE Rooms (decor VARCHAR, RoomId VARCHAR)",
        "question": "What kind of decor has the least number of reservations?"
    },
    {
        "answer": "SELECT SUM(against) FROM table_name_20 WHERE status = \"six nations\" AND date = \"30/03/2003\"",
        "context": "CREATE TABLE table_name_20 (against INTEGER, status VARCHAR, date VARCHAR)",
        "question": "What is the sum of Against, when Status is \"Six Nations\", and when Date is \"30/03/2003\"?"
    },
    {
        "answer": "SELECT school FROM table_2076608_3 WHERE location_s_ = \"Richmond\"",
        "context": "CREATE TABLE table_2076608_3 (school VARCHAR, location_s_ VARCHAR)",
        "question": "What school is in Richmond?"
    },
    {
        "answer": "SELECT date FROM table_name_87 WHERE against = 22",
        "context": "CREATE TABLE table_name_87 (date VARCHAR, against VARCHAR)",
        "question": "What is Date, when Against is \"22\"?"
    },
    {
        "answer": "SELECT tournament FROM table_name_55 WHERE date = \"july 6, 1987\"",
        "context": "CREATE TABLE table_name_55 (tournament VARCHAR, date VARCHAR)",
        "question": "What was the tournament that was on july 6, 1987?"
    },
    {
        "answer": "SELECT position FROM table_name_29 WHERE nfl_club = \"pittsburgh steelers\"",
        "context": "CREATE TABLE table_name_29 (position VARCHAR, nfl_club VARCHAR)",
        "question": "What is the position of the pittsburgh steelers?"
    },
    {
        "answer": "SELECT T2.roomName, COUNT(*), T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room",
        "context": "CREATE TABLE Reservations (Room VARCHAR); CREATE TABLE Rooms (roomName VARCHAR, RoomId VARCHAR)",
        "question": "Return the name and number of reservations made for each of the rooms."
    },
    {
        "answer": "SELECT country FROM table_name_45 WHERE previous_team__league_ = \"kingston frontenacs ( ohl )\" AND player = \"anthony stewart category:articles with hcards\"",
        "context": "CREATE TABLE table_name_45 (country VARCHAR, previous_team__league_ VARCHAR, player VARCHAR)",
        "question": "What is Country, when Previous Team (League) is \"Kingston Frontenacs ( OHL )\", and when Player is \"Anthony Stewart Category:Articles with hCards\"?"
    },
    {
        "answer": "SELECT position FROM table_name_81 WHERE year < 2000 AND player = \"radek dvorak category:articles with hcards\"",
        "context": "CREATE TABLE table_name_81 (position VARCHAR, year VARCHAR, player VARCHAR)",
        "question": "What is Position, when Year is less than 2000, and when Player is \"Radek Dvorak Category:Articles with hCards\"?"
    },
    {
        "answer": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T2.source_system_code = 'Tax'",
        "context": "CREATE TABLE CMI_Cross_References (master_customer_id VARCHAR, source_system_code VARCHAR); CREATE TABLE Customer_Master_Index (cmi_details VARCHAR, master_customer_id VARCHAR)",
        "question": "what are the details of the cmi masters that have the cross reference code 'Tax'?"
    },
    {
        "answer": "SELECT T1.cmi_cross_ref_id, T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING COUNT(*) >= 1",
        "context": "CREATE TABLE Council_Tax (cmi_cross_ref_id VARCHAR); CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, source_system_code VARCHAR)",
        "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code."
    },
    {
        "answer": "SELECT T2.cmi_cross_ref_id, T2.master_customer_id, COUNT(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id",
        "context": "CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, master_customer_id VARCHAR); CREATE TABLE Business_Rates (cmi_cross_ref_id VARCHAR)",
        "question": "How many business rates are related to each cmi cross reference? List cross reference id, master customer id and the n"
    },
    {
        "answer": "SELECT T1.source_system_code, T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id ORDER BY T2.council_tax_id",
        "context": "CREATE TABLE CMI_Cross_References (source_system_code VARCHAR, cmi_cross_ref_id VARCHAR); CREATE TABLE Benefits_Overpayments (council_tax_id VARCHAR, cmi_cross_ref_id VARCHAR)",
        "question": "What is the tax source system code related to the benefits and overpayments? List the code and the benifit id, order by benifit id."
    },
    {
        "answer": "SELECT T1.source_system_code, T1.master_customer_id, T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id",
        "context": "CREATE TABLE CMI_Cross_References (source_system_code VARCHAR, master_customer_id VARCHAR, cmi_cross_ref_id VARCHAR); CREATE TABLE Parking_Fines (council_tax_id VARCHAR, cmi_cross_ref_id VARCHAR)",
        "question": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?"
    },
    {
        "answer": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id WHERE T3.cmi_details <> 'Schmidt ,  Kertzmann and Lubowitz'",
        "context": "CREATE TABLE Rent_Arrears (council_tax_id VARCHAR, cmi_cross_ref_id VARCHAR); CREATE TABLE Customer_Master_Index (master_customer_id VARCHAR, cmi_details VARCHAR); CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, master_customer_id VARCHAR)",
        "question": "What are the renting arrears tax ids related to the customer master index whose detail is not 'Schmidt, Kertzmann and Lubowitz'?"
    },
    {
        "answer": "SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T2.source_system_code = 'Electoral' OR T2.source_system_code = 'Tax'",
        "context": "CREATE TABLE Electoral_Register (electoral_register_id VARCHAR, cmi_cross_ref_id VARCHAR); CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, source_system_code VARCHAR)",
        "question": "What are the register ids of electoral registries that have the cross reference source system code 'Electoral' or 'Tax'?"
    },
    {
        "answer": "SELECT country FROM table_name_93 WHERE year = 1994",
        "context": "CREATE TABLE table_name_93 (country VARCHAR, year VARCHAR)",
        "question": "What is Country, when Year is \"1994\"?"
    },
    {
        "answer": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC",
        "context": "CREATE TABLE customer_master_index (cmi_details VARCHAR)",
        "question": "List all information about customer master index, and sort them by details in descending order."
    },
    {
        "answer": "SELECT council_tax_id, cmi_cross_ref_id FROM parking_fines",
        "context": "CREATE TABLE parking_fines (council_tax_id VARCHAR, cmi_cross_ref_id VARCHAR)",
        "question": "List the council tax ids and their related cmi cross references of all the parking fines."
    },
    {
        "answer": "SELECT outgoing_manager FROM table_name_78 WHERE manner_of_departure = \"end of tenure as caretaker\" AND replaced_by = \"jesper hansen\"",
        "context": "CREATE TABLE table_name_78 (outgoing_manager VARCHAR, manner_of_departure VARCHAR, replaced_by VARCHAR)",
        "question": "What Outgoing manager left at his end of tenure as caretaker and was Replaced by Jesper Hansen?"
    },
    {
        "answer": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.cmi_details = 'Gottlieb ,  Becker and Wyman'",
        "context": "CREATE TABLE customer_master_index (master_customer_id VARCHAR, cmi_details VARCHAR); CREATE TABLE cmi_cross_references (source_system_code VARCHAR, master_customer_id VARCHAR)",
        "question": "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?"
    },
    {
        "answer": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'",
        "context": "CREATE TABLE cmi_cross_references (source_system_code VARCHAR)",
        "question": "Which distinct source system code includes the substring 'en'?"
    },
    {
        "answer": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts",
        "context": "CREATE TABLE party (Party_Theme VARCHAR, Number_of_hosts VARCHAR)",
        "question": "List the themes of parties in ascending order of number of hosts."
    },
    {
        "answer": "SELECT cash_fare FROM table_20803241_1 WHERE type_of_fare = \"Fort Irwin-Barstow/Victorville\"",
        "context": "CREATE TABLE table_20803241_1 (cash_fare VARCHAR, type_of_fare VARCHAR)",
        "question": "When  fort irwin-barstow/victorville is the type of fare what is the cash fare?"
    },
    {
        "answer": "SELECT sub_parish__sogn_ FROM table_name_66 WHERE year_built < 1883 AND parish__prestegjeld_ = \"jostedal parish\" AND location_of_the_church = \"gaupne\"",
        "context": "CREATE TABLE table_name_66 (sub_parish__sogn_ VARCHAR, location_of_the_church VARCHAR, year_built VARCHAR, parish__prestegjeld_ VARCHAR)",
        "question": "Which Sub-Parish (Sogn) was built before 1883 in the Parish (Prestegjeld) of jostedal parish and is located in the Church of Gaupne?"
    },
    {
        "answer": "SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35",
        "context": "CREATE TABLE HOST (Nationality VARCHAR, Age INTEGER)",
        "question": "Show the nations that have both hosts older than 45 and hosts younger than 35."
    },
    {
        "answer": "SELECT T3.Party_Theme, T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID",
        "context": "CREATE TABLE HOST (Name VARCHAR, Host_ID VARCHAR); CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR); CREATE TABLE party (Party_Theme VARCHAR, Party_ID VARCHAR)",
        "question": "Show the themes of parties and the names of the party hosts."
    },
    {
        "answer": "SELECT T3.Location, T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID ORDER BY T2.Age",
        "context": "CREATE TABLE party (Location VARCHAR, Party_ID VARCHAR); CREATE TABLE HOST (Name VARCHAR, Host_ID VARCHAR, Age VARCHAR); CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR)",
        "question": "Show the locations of parties and the names of the party hosts in ascending order of the age of the host."
    },
    {
        "answer": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T2.Age > 50",
        "context": "CREATE TABLE party (Location VARCHAR, Party_ID VARCHAR); CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR); CREATE TABLE HOST (Host_ID VARCHAR, Age INTEGER)",
        "question": "Show the locations of parties with hosts older than 50."
    },
    {
        "answer": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Number_of_hosts > 20",
        "context": "CREATE TABLE HOST (Name VARCHAR, Host_ID VARCHAR); CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR); CREATE TABLE party (Party_ID VARCHAR, Number_of_hosts INTEGER)",
        "question": "Show the host names for parties with number of hosts greater than 20."
    },
    {
        "answer": "SELECT race_number FROM table_20854943_2 WHERE sail_number = \"AUS 98888\"",
        "context": "CREATE TABLE table_20854943_2 (race_number VARCHAR, sail_number VARCHAR)",
        "question": "What race number had sail number AUS 98888?"
    },
    {
        "answer": "SELECT position FROM table_20861261_4 WHERE player = \"Curtis Painter\"",
        "context": "CREATE TABLE table_20861261_4 (position VARCHAR, player VARCHAR)",
        "question": "What's Curtis Painter's position?"
    },
    {
        "answer": "SELECT year_s__won FROM table_name_50 WHERE to_par < 12 AND player = \"john daly\"",
        "context": "CREATE TABLE table_name_50 (year_s__won VARCHAR, to_par VARCHAR, player VARCHAR)",
        "question": "Which Year(s) won has a To par smaller than 12, and a Player of john daly?"
    },
    {
        "answer": "SELECT player FROM table_name_21 WHERE to_par = 12 AND country = \"fiji\"",
        "context": "CREATE TABLE table_name_21 (player VARCHAR, to_par VARCHAR, country VARCHAR)",
        "question": "Which Player has a To par of 12, and a Country of fiji?"
    },
    {
        "answer": "SELECT T1.region_name, COUNT(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
        "context": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR); CREATE TABLE affected_region (region_id VARCHAR)",
        "question": "Show the name for regions and the number of storms for each region."
    },
    {
        "answer": "SELECT T1.name, COUNT(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id",
        "context": "CREATE TABLE affected_region (storm_id VARCHAR); CREATE TABLE storm (name VARCHAR, storm_id VARCHAR)",
        "question": "List the name for storms and the number of affected regions for each storm."
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_20 WHERE network = \"bbc one\" AND number_of_viewers = \"30.15million\"",
        "context": "CREATE TABLE table_name_20 (rank INTEGER, network VARCHAR, number_of_viewers VARCHAR)",
        "question": "Which Rank has a Network of bbc one, and a Number of Viewers of 30.15million? Question 2"
    },
    {
        "answer": "SELECT T1.name, T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE storm (name VARCHAR, max_speed VARCHAR, storm_id VARCHAR); CREATE TABLE affected_region (storm_id VARCHAR)",
        "question": "What is the storm name and max speed which affected the greatest number of regions?"
    },
    {
        "answer": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING COUNT(*) >= 2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING SUM(T2.number_city_affected) >= 10",
        "context": "CREATE TABLE affected_region (storm_id VARCHAR, number_city_affected INTEGER); CREATE TABLE storm (name VARCHAR, storm_id VARCHAR)",
        "question": "Show storm name with at least two regions and 10 cities affected."
    },
    {
        "answer": "SELECT electorate FROM table_name_16 WHERE term_of_office = \"1955\u20131972\" AND member = \"peter howson\"",
        "context": "CREATE TABLE table_name_16 (electorate VARCHAR, term_of_office VARCHAR, member VARCHAR)",
        "question": "What is the Electorate when the term of office was 1955\u20131972, for Peter Howson?"
    },
    {
        "answer": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T3.number_deaths >= 10",
        "context": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR); CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR); CREATE TABLE storm (storm_id VARCHAR, number_deaths VARCHAR)",
        "question": "What are the region names affected by the storm with a number of deaths of least 10?"
    },
    {
        "answer": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'",
        "context": "CREATE TABLE region (region_id VARCHAR, region_name VARCHAR); CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR); CREATE TABLE storm (name VARCHAR, storm_id VARCHAR)",
        "question": "Show all storm names affecting region \"Denmark\"."
    },
    {
        "answer": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR); CREATE TABLE affected_region (region_id VARCHAR)",
        "question": "Show the region name with at least two storms."
    },
    {
        "answer": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE storm (name VARCHAR); CREATE TABLE affected_region (storm_id VARCHAR); CREATE TABLE storm (name VARCHAR, storm_id VARCHAR)",
        "question": "Show all storm names except for those with at least two affected regions."
    },
    {
        "answer": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania'",
        "context": "CREATE TABLE storm (Name VARCHAR, storm_id VARCHAR); CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR); CREATE TABLE region (region_id VARCHAR, Region_name VARCHAR)",
        "question": "Find the name of the storm that affected both Afghanistan and Albania regions."
    },
    {
        "answer": "SELECT label FROM table_name_68 WHERE region = \"united states\" AND format = \"cassette\"",
        "context": "CREATE TABLE table_name_68 (label VARCHAR, region VARCHAR, format VARCHAR)",
        "question": "What Label has a Region of united states, and a Format of cassette?"
    },
    {
        "answer": "SELECT label FROM table_name_88 WHERE format = \"cd\" AND catalog = \"crgd 86136\"",
        "context": "CREATE TABLE table_name_88 (label VARCHAR, format VARCHAR, catalog VARCHAR)",
        "question": "What Label has a Format of cd, and a Catalog of crgd 86136?"
    },
    {
        "answer": "SELECT COUNT(player) FROM table_20898602_1 WHERE status = \"Made 53-man roster at start of 2009 season\" AND position = \"Running back\"",
        "context": "CREATE TABLE table_20898602_1 (player VARCHAR, status VARCHAR, position VARCHAR)",
        "question": "how many players played running back where status is made 53-man roster at start of 2009 season"
    },
    {
        "answer": "SELECT COUNT(position) FROM table_20898602_1 WHERE player = \"Wallace, Mike Mike Wallace\"",
        "context": "CREATE TABLE table_20898602_1 (position VARCHAR, player VARCHAR)",
        "question": "howe many positions did wallace, mike mike wallace play for "
    },
    {
        "answer": "SELECT T2.Delegate, T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District",
        "context": "CREATE TABLE election (Delegate VARCHAR, District VARCHAR); CREATE TABLE county (County_name VARCHAR, County_id VARCHAR)",
        "question": "Show the delegates and the names of county they belong to."
    },
    {
        "answer": "SELECT COUNT(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population > 50000",
        "context": "CREATE TABLE election (Delegate VARCHAR, District VARCHAR); CREATE TABLE county (County_id VARCHAR, Population INTEGER)",
        "question": "How many distinct delegates are from counties with population larger than 50000?"
    },
    {
        "answer": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = \"Appropriations\"",
        "context": "CREATE TABLE election (District VARCHAR, Committee VARCHAR); CREATE TABLE county (County_name VARCHAR, County_id VARCHAR)",
        "question": "What are the names of the county that the delegates on \"Appropriations\" committee belong to?"
    },
    {
        "answer": "SELECT COUNT(attempts) FROM table_20906175_3 WHERE name = \"Charley Johnson\"",
        "context": "CREATE TABLE table_20906175_3 (attempts VARCHAR, name VARCHAR)",
        "question": "How many attempts did Charley Johnson have?"
    },
    {
        "answer": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.District = 1 OR T1.District = 2",
        "context": "CREATE TABLE party (Comptroller VARCHAR, Party_ID VARCHAR); CREATE TABLE election (Party VARCHAR, District VARCHAR)",
        "question": "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?"
    },
    {
        "answer": "SELECT place FROM table_name_92 WHERE to_par = \"\u20134\"",
        "context": "CREATE TABLE table_name_92 (place VARCHAR, to_par VARCHAR)",
        "question": "What Place has a To par of \u20134?"
    },
    {
        "answer": "SELECT to_par FROM table_name_52 WHERE country = \"united states\" AND score = 67 - 66 - 78 - 77 = 288",
        "context": "CREATE TABLE table_name_52 (to_par VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "What To par has a Country of united states, and a Score of 67-66-78-77=288?"
    },
    {
        "answer": "SELECT T2.Party, COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party",
        "context": "CREATE TABLE election (Party VARCHAR); CREATE TABLE party (Party VARCHAR, Party_ID VARCHAR)",
        "question": "Show the name of each party and the corresponding number of delegates from that party."
    },
    {
        "answer": "SELECT County_name FROM county ORDER BY Population",
        "context": "CREATE TABLE county (County_name VARCHAR, Population VARCHAR)",
        "question": "Return the names of all counties sorted by population in ascending order."
    },
    {
        "answer": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE election (Party VARCHAR); CREATE TABLE party (Party VARCHAR, Party_ID VARCHAR)",
        "question": "Show the name of the party that has the most delegates."
    },
    {
        "answer": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = \"Economic Matters\"",
        "context": "CREATE TABLE election (Party VARCHAR, Committee VARCHAR); CREATE TABLE party (Party VARCHAR, Party_ID VARCHAR)",
        "question": "What are the names of parties that have both delegates on \"Appropriations\" committee and"
    },
    {
        "answer": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = \"Liberal\"",
        "context": "CREATE TABLE election (Committee VARCHAR, Party VARCHAR); CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)",
        "question": "Which committees have delegates from both democratic party and liberal party?"
    },
    {
        "answer": "SELECT Nationality FROM journalist WHERE Years_working > 10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working < 3",
        "context": "CREATE TABLE journalist (Nationality VARCHAR, Years_working INTEGER)",
        "question": "Show the nations that have both journalists with more than 10 years of working and journalists with less than 3 years of working."
    },
    {
        "answer": "SELECT MIN(ep) FROM table_20967430_2 WHERE original_air_date = \"November 29, 1985\"",
        "context": "CREATE TABLE table_20967430_2 (ep INTEGER, original_air_date VARCHAR)",
        "question": "Name the least episode for november 29, 1985"
    },
    {
        "answer": "SELECT T3.Name, T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID ORDER BY T2.Event_Attendance",
        "context": "CREATE TABLE journalist (Name VARCHAR, journalist_ID VARCHAR); CREATE TABLE news_report (Event_ID VARCHAR, journalist_ID VARCHAR); CREATE TABLE event (Name VARCHAR, Event_ID VARCHAR, Event_Attendance VARCHAR)",
        "question": "Show the names of journalists and the names of the events they reported in ascending order"
    },
    {
        "answer": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*) > 1",
        "context": "CREATE TABLE journalist (Name VARCHAR, journalist_ID VARCHAR); CREATE TABLE news_report (Event_ID VARCHAR, journalist_ID VARCHAR); CREATE TABLE event (Event_ID VARCHAR)",
        "question": "Show the names of journalists that have reported more than one event."
    },
    {
        "answer": "SELECT Name FROM journalist WHERE NOT journalist_ID IN (SELECT journalist_ID FROM news_report)",
        "context": "CREATE TABLE journalist (Name VARCHAR, journalist_ID VARCHAR); CREATE TABLE news_report (Name VARCHAR, journalist_ID VARCHAR)",
        "question": "List the names of journalists who have not reported any event."
    },
    {
        "answer": "SELECT AVG(t1.age), AVG(Years_working), t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type",
        "context": "CREATE TABLE news_report (work_type VARCHAR, journalist_id VARCHAR); CREATE TABLE journalist (age INTEGER, journalist_id VARCHAR)",
        "question": "Find the average age and experience working length of journalists working on different role type."
    },
    {
        "answer": "SELECT broadcast_date FROM table_2101431_1 WHERE archive = \"16mm t/r\" AND run_time = \"23:25\"",
        "context": "CREATE TABLE table_2101431_1 (broadcast_date VARCHAR, archive VARCHAR, run_time VARCHAR)",
        "question": "What is the broadcast date of the episode on 16mm t/r that ran 23:25?"
    },
    {
        "answer": "SELECT place FROM table_name_71 WHERE country = \"united states\" AND money___$__ > 216 AND score = 74 - 70 - 71 - 69 = 284",
        "context": "CREATE TABLE table_name_71 (place VARCHAR, country VARCHAR, money___$__ VARCHAR, score VARCHAR)",
        "question": "Where did the player place who is from the United States, who made more than $216, and whose score was 74-70-71-69=284?"
    },
    {
        "answer": "SELECT power FROM table_21021796_1 WHERE torque = \"N\u00b7m (lb\u00b7ft) @1600\u20132400 rpm\" AND applications = \"2000 W90x Sprinter\"",
        "context": "CREATE TABLE table_21021796_1 (power VARCHAR, torque VARCHAR, applications VARCHAR)",
        "question": "If torque is n\u00b7m (lb\u00b7ft) @1600\u20132400 rpm and applications is 2000 w90x sprinter, what is the power?"
    },
    {
        "answer": "SELECT Advisor, COUNT(*) FROM Student GROUP BY Advisor ORDER BY COUNT(Advisor) DESC LIMIT 1",
        "context": "CREATE TABLE Student (Advisor VARCHAR)",
        "question": "Which Advisor has most of students? List advisor and the number of students."
    },
    {
        "answer": "SELECT Major, COUNT(*) FROM Student GROUP BY Major ORDER BY COUNT(Major) LIMIT 1",
        "context": "CREATE TABLE Student (Major VARCHAR)",
        "question": "Which major has least number of students? List the major and the number of students."
    },
    {
        "answer": "SELECT date FROM table_name_29 WHERE competition = \"uefa cup\" AND opponent = \"panathinaikos\"",
        "context": "CREATE TABLE table_name_29 (date VARCHAR, competition VARCHAR, opponent VARCHAR)",
        "question": "What date was the UEFA Cup against Panathinaikos?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'",
        "context": "CREATE TABLE Type_Of_Restaurant (Id VARCHAR); CREATE TABLE Restaurant (Id VARCHAR); CREATE TABLE Restaurant_Type (Id VARCHAR)",
        "question": "How many restaurant is the Sandwich type restaurant?"
    },
    {
        "answer": "SELECT SUM(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\"",
        "context": "CREATE TABLE Visits_Restaurant (Spent INTEGER); CREATE TABLE Student (Spent INTEGER)",
        "question": "How long does student Linda Smith spend on the restaurant in total?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\"",
        "context": "CREATE TABLE Visits_Restaurant (Id VARCHAR); CREATE TABLE Student (Id VARCHAR); CREATE TABLE Restaurant (Id VARCHAR)",
        "question": "How many times has the student Linda Smith visited Subway?"
    },
    {
        "answer": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\"",
        "context": "CREATE TABLE Restaurant (TIME VARCHAR); CREATE TABLE Visits_Restaurant (TIME VARCHAR); CREATE TABLE Student (TIME VARCHAR)",
        "question": "When did Linda Smith visit Subway?"
    },
    {
        "answer": "SELECT Restaurant.ResName, SUM(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY SUM(Visits_Restaurant.Spent) LIMIT 1",
        "context": "CREATE TABLE Visits_Restaurant (Id VARCHAR); CREATE TABLE Restaurant (Id VARCHAR)",
        "question": "At which restaurant did the students spend the least amount of time? List restaurant and the time students spent on in total."
    },
    {
        "answer": "SELECT Student.Fname, Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Visits_Restaurant (Id VARCHAR); CREATE TABLE Student (Id VARCHAR)",
        "question": "Which student visited restaurant most often? List student's first name and last name."
    },
    {
        "answer": "SELECT archive FROM table_2102714_1 WHERE run_time = \"25:24\"",
        "context": "CREATE TABLE table_2102714_1 (archive VARCHAR, run_time VARCHAR)",
        "question": "What was the archive for the episode with a run time of 25:24?"
    },
    {
        "answer": "SELECT t1.product_name, t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id GROUP BY t2.product_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE products (product_name VARCHAR, product_price VARCHAR, product_id VARCHAR); CREATE TABLE regular_order_products (product_id VARCHAR)",
        "question": "Find the name and price of the product that has been ordered the greatest number of times."
    },
    {
        "answer": "SELECT MIN(league_goals) FROM table_name_84 WHERE fa_cup_goals = \"0\" AND fa_cup_apps = \"0\" AND position = \"df\" AND total_apps = \"3\"",
        "context": "CREATE TABLE table_name_84 (league_goals INTEGER, total_apps VARCHAR, position VARCHAR, fa_cup_goals VARCHAR, fa_cup_apps VARCHAR)",
        "question": "Who has the lowest league total goals with 0 FA cup goals and no FA cup appearances, plays the DF position and has appeared in total of 3 times?"
    },
    {
        "answer": "SELECT COUNT(opponent) FROM table_21034801_1 WHERE record = \"7-0\"",
        "context": "CREATE TABLE table_21034801_1 (opponent VARCHAR, record VARCHAR)",
        "question": "How many opponents led to an exactly 7-0 record?"
    },
    {
        "answer": "SELECT archive FROM table_2102714_1 WHERE run_time = \"24:05\"",
        "context": "CREATE TABLE table_2102714_1 (archive VARCHAR, run_time VARCHAR)",
        "question": "What is he archive for the episode with a run time of 24:05?"
    },
    {
        "answer": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = 'California'",
        "context": "CREATE TABLE customer_addresses (customer_id VARCHAR, address_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR); CREATE TABLE addresses (address_id VARCHAR, state_province_county VARCHAR)",
        "question": "Find the names of customers who are not living in the state of California."
    },
    {
        "answer": "SELECT score FROM table_name_37 WHERE home_team = \"sheffield united\"",
        "context": "CREATE TABLE table_name_37 (score VARCHAR, home_team VARCHAR)",
        "question": "What was the score when Sheffield United was the home team?"
    },
    {
        "answer": "SELECT t1.customer_name, t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = 'California'",
        "context": "CREATE TABLE customer_addresses (customer_id VARCHAR, address_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR); CREATE TABLE addresses (address_id VARCHAR, state_province_county VARCHAR)",
        "question": "Find the names and phone numbers of customers living in California state."
    },
    {
        "answer": "SELECT SUM(league_goals) FROM table_name_95 WHERE position = \"df\" AND league_cup_apps = \"0\" AND total_apps = \"7\" AND flt_goals < 0",
        "context": "CREATE TABLE table_name_95 (league_goals INTEGER, flt_goals VARCHAR, total_apps VARCHAR, position VARCHAR, league_cup_apps VARCHAR)",
        "question": "What is the sum of League Goals, when Position is \"DF\", when League Cup Apps is \"0\", when Total Apps is \"7\", and when FLT Goals is less than 0?"
    },
    {
        "answer": "SELECT state_province_county FROM addresses WHERE NOT address_id IN (SELECT employee_address_id FROM Employees)",
        "context": "CREATE TABLE Employees (state_province_county VARCHAR, address_id VARCHAR, employee_address_id VARCHAR); CREATE TABLE addresses (state_province_county VARCHAR, address_id VARCHAR, employee_address_id VARCHAR)",
        "question": "Find the states which do not have any employee in their record."
    },
    {
        "answer": "SELECT MIN(fa_cup_goals) FROM table_name_10 WHERE total_goals > 0 AND league_goals = 4 AND fa_cup_apps = \"1\" AND league_cup_goals > 0",
        "context": "CREATE TABLE table_name_10 (fa_cup_goals INTEGER, league_cup_goals VARCHAR, fa_cup_apps VARCHAR, total_goals VARCHAR, league_goals VARCHAR)",
        "question": "What is the lowest FA Cup Goals, when Total Goals is greater than 0, when League Goals is \"4\", when FA Cup Apps is \"1\", and when League Cup Goals is greater than 0?"
    },
    {
        "answer": "SELECT route_name FROM Delivery_Routes ORDER BY route_name",
        "context": "CREATE TABLE Delivery_Routes (route_name VARCHAR)",
        "question": "List the names of all routes in alphabetic order."
    },
    {
        "answer": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id = t2.route_id GROUP BY t1.route_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Delivery_Routes (route_name VARCHAR, route_id VARCHAR); CREATE TABLE Delivery_Route_Locations (route_id VARCHAR)",
        "question": "Find the name of route that has the highest number of deliveries."
    },
    {
        "answer": "SELECT t2.state_province_county, COUNT(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id = t2.address_id GROUP BY t2.state_province_county",
        "context": "CREATE TABLE customer_addresses (address_id VARCHAR); CREATE TABLE addresses (state_province_county VARCHAR, address_id VARCHAR)",
        "question": "List the state names and the number of customers living in each state."
    },
    {
        "answer": "SELECT air_force_cross FROM table_2104176_1 WHERE homeland_security_distinguished_service_medal = \"Aerial Achievement Medal\"",
        "context": "CREATE TABLE table_2104176_1 (air_force_cross VARCHAR, homeland_security_distinguished_service_medal VARCHAR)",
        "question": "What is the air force cross when you recieve the Aerial achievement medal?"
    },
    {
        "answer": "SELECT result FROM table_21058823_1 WHERE record = \"3-2-1\"",
        "context": "CREATE TABLE table_21058823_1 (result VARCHAR, record VARCHAR)",
        "question": "What did they do in the game when their record was 3-2-1?"
    },
    {
        "answer": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = \"Jeremy\" AND t1.lname = \"Gibbons\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR); CREATE TABLE papers (title VARCHAR, paperid VARCHAR); CREATE TABLE authors (authid VARCHAR, fname VARCHAR, lname VARCHAR)",
        "question": "What are the titles of papers published by \"Jeremy Gibbons\"?"
    },
    {
        "answer": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = \"Aaron\" AND t1.lname = \"Turon\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR); CREATE TABLE papers (title VARCHAR, paperid VARCHAR); CREATE TABLE authors (authid VARCHAR, fname VARCHAR, lname VARCHAR)",
        "question": "Find all the papers published by \"Aaron Turon\"."
    },
    {
        "answer": "SELECT COUNT(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = \"Atsushi\" AND t1.lname = \"Ohori\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR); CREATE TABLE authors (authid VARCHAR, fname VARCHAR, lname VARCHAR); CREATE TABLE papers (paperid VARCHAR)",
        "question": "How many papers have \"Atsushi Ohori\" published?"
    },
    {
        "answer": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = \"Matthias\" AND t1.lname = \"Blume\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, instid VARCHAR); CREATE TABLE authors (authid VARCHAR, fname VARCHAR, lname VARCHAR); CREATE TABLE inst (name VARCHAR, instid VARCHAR)",
        "question": "What is the name of the institution that \"Matthias Blume\" belongs to?"
    },
    {
        "answer": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = \"Katsuhiro\" AND t1.lname = \"Ueno\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, instid VARCHAR); CREATE TABLE authors (authid VARCHAR, fname VARCHAR, lname VARCHAR); CREATE TABLE inst (name VARCHAR, instid VARCHAR)",
        "question": "Which institution does \"Katsuhiro Ueno\" belong to?"
    },
    {
        "answer": "SELECT DISTINCT t1.fname, t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = \"University of Oxford\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, instid VARCHAR); CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR); CREATE TABLE inst (instid VARCHAR, name VARCHAR)",
        "question": "Who belong to the institution \"University of Oxford\"? Show the first names and last names."
    },
    {
        "answer": "SELECT white FROM table_name_20 WHERE black = \"anand\" AND result = \"\u00bd\u2013\u00bd\" AND moves = 39 AND opening = \"d37 queen's gambit declined\"",
        "context": "CREATE TABLE table_name_20 (white VARCHAR, opening VARCHAR, moves VARCHAR, black VARCHAR, result VARCHAR)",
        "question": "What's the white for a black of Anand, a result of  \u00bd\u2013\u00bd, 39 moves, and an opening of d37 queen's gambit declined?"
    },
    {
        "answer": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = \"Binders Unbound\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR); CREATE TABLE authors (lname VARCHAR, authid VARCHAR); CREATE TABLE papers (paperid VARCHAR, title VARCHAR)",
        "question": "What are the last names of the author of the paper titled \"Binders Unbound\"?"
    },
    {
        "answer": "SELECT black FROM table_name_56 WHERE moves = 24 AND tournament = \"dortmund\"",
        "context": "CREATE TABLE table_name_56 (black VARCHAR, moves VARCHAR, tournament VARCHAR)",
        "question": "What's the black with 24 moves in the dortmund tournament?"
    },
    {
        "answer": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = \"Indiana University\"",
        "context": "CREATE TABLE inst (instid VARCHAR, name VARCHAR); CREATE TABLE authorship (paperid VARCHAR, instid VARCHAR); CREATE TABLE papers (title VARCHAR, paperid VARCHAR)",
        "question": "What are the papers published under the institution \"Indiana University\"?"
    },
    {
        "answer": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = \"Google\"",
        "context": "CREATE TABLE inst (instid VARCHAR, name VARCHAR); CREATE TABLE authorship (paperid VARCHAR, instid VARCHAR); CREATE TABLE papers (title VARCHAR, paperid VARCHAR)",
        "question": "Find all the papers published by the institution \"Google\"."
    },
    {
        "answer": "SELECT game FROM table_21058836_1 WHERE opponent = \"Santa Clara\"",
        "context": "CREATE TABLE table_21058836_1 (game VARCHAR, opponent VARCHAR)",
        "question": "What game did the Bruins play Santa Clara?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = \"Tokohu University\"",
        "context": "CREATE TABLE inst (instid VARCHAR, name VARCHAR); CREATE TABLE authorship (paperid VARCHAR, instid VARCHAR); CREATE TABLE papers (title VARCHAR, paperid VARCHAR)",
        "question": "How many papers are published by the institution \"Tokohu University\"?"
    },
    {
        "answer": "SELECT t1.fname, t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = \"Nameless ,  Painless\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR); CREATE TABLE papers (paperid VARCHAR, title VARCHAR); CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR)",
        "question": "Find the first and last name of the author(s) who wrote the paper \"Nameless, Painless\"."
    },
    {
        "answer": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = \"Stephanie\" AND t1.lname = \"Weirich\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR); CREATE TABLE papers (title VARCHAR, paperid VARCHAR); CREATE TABLE authors (authid VARCHAR, fname VARCHAR, lname VARCHAR)",
        "question": "Which papers have \"Stephanie Weirich\" as an author?"
    },
    {
        "answer": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = \"USA\" AND t2.authorder = 2 AND t1.lname = \"Turon\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR, instid VARCHAR, authorder VARCHAR); CREATE TABLE authors (authid VARCHAR, lname VARCHAR); CREATE TABLE papers (title VARCHAR, paperid VARCHAR); CREATE TABLE inst (instid VARCHAR, country VARCHAR)",
        "question": "Which paper is published in an institution in \"USA\" and have \"Turon\" as its second author?"
    },
    {
        "answer": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = \"Japan\" AND t2.authorder = 1 AND t1.lname = \"Ohori\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR, instid VARCHAR, authorder VARCHAR); CREATE TABLE authors (authid VARCHAR, lname VARCHAR); CREATE TABLE papers (title VARCHAR, paperid VARCHAR); CREATE TABLE inst (instid VARCHAR, country VARCHAR)",
        "question": "Find the titles of papers whose first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"?"
    },
    {
        "answer": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.fname, t1.lname ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR); CREATE TABLE authors (lname VARCHAR, fname VARCHAR, authid VARCHAR); CREATE TABLE papers (paperid VARCHAR)",
        "question": "What is the last name of the author that has published the most papers?"
    },
    {
        "answer": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE inst (country VARCHAR, instid VARCHAR); CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR); CREATE TABLE papers (paperid VARCHAR)",
        "question": "Retrieve the country that has published the most papers."
    },
    {
        "answer": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE inst (name VARCHAR, instid VARCHAR); CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR); CREATE TABLE papers (paperid VARCHAR)",
        "question": "Find the name of the organization that has published the largest number of papers."
    },
    {
        "answer": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = \"Olin\" AND t1.lname = \"Shivers\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR); CREATE TABLE papers (title VARCHAR, paperid VARCHAR); CREATE TABLE authors (authid VARCHAR, fname VARCHAR, lname VARCHAR)",
        "question": "Find the papers which have \"Olin Shivers\" as an author."
    },
    {
        "answer": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title LIKE \"%Functional%\"",
        "context": "CREATE TABLE authors (fname VARCHAR, authid VARCHAR); CREATE TABLE papers (paperid VARCHAR, title VARCHAR); CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR)",
        "question": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\"."
    },
    {
        "answer": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title LIKE \"%Monadic%\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR); CREATE TABLE authors (lname VARCHAR, authid VARCHAR); CREATE TABLE papers (paperid VARCHAR, title VARCHAR)",
        "question": "Find the last names of all the authors that have written a paper with title containing the word \"Monadic\"."
    },
    {
        "answer": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid = t2.paperid WHERE t1.authorder = (SELECT MAX(authorder) FROM authorship)",
        "context": "CREATE TABLE authorship (authorder INTEGER); CREATE TABLE authorship (paperid VARCHAR, authorder INTEGER); CREATE TABLE papers (title VARCHAR, paperid VARCHAR)",
        "question": "Retrieve the title of the paper that has the largest number of authors."
    },
    {
        "answer": "SELECT run_time FROM table_2108684_1 WHERE viewers__in_millions_ = \"7.9\"",
        "context": "CREATE TABLE table_2108684_1 (run_time VARCHAR, viewers__in_millions_ VARCHAR)",
        "question": "What is the run time for the episode with 7.9 million viewers?"
    },
    {
        "answer": "SELECT T2.city, COUNT(*), T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE address (city_id VARCHAR); CREATE TABLE city (city VARCHAR, city_id VARCHAR)",
        "question": "Which city has the most addresses? List the city name, number of addresses, and city id."
    },
    {
        "answer": "SELECT opponents FROM table_21092444_1 WHERE record = \"2-1\"",
        "context": "CREATE TABLE table_21092444_1 (opponents VARCHAR, record VARCHAR)",
        "question": "Name the opponents for record of 2-1"
    },
    {
        "answer": "SELECT title, film_id FROM film WHERE rental_rate = 0.99 INTERSECT SELECT T1.title, T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id HAVING COUNT(*) < 3",
        "context": "CREATE TABLE film (title VARCHAR, film_id VARCHAR, rental_rate VARCHAR); CREATE TABLE inventory (film_id VARCHAR); CREATE TABLE film (title VARCHAR, film_id VARCHAR)",
        "question": "Which film is rented at a fee of 0.99 and has less than 3 in the inventory? List the film title and id."
    },
    {
        "answer": "SELECT COUNT(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = 'Australia'",
        "context": "CREATE TABLE country (country_id VARCHAR, country VARCHAR); CREATE TABLE city (country_id VARCHAR)",
        "question": "How many cities are in Australia?"
    },
    {
        "answer": "SELECT result FROM table_21094951_1 WHERE opponent = \"Ursinus College\"",
        "context": "CREATE TABLE table_21094951_1 (result VARCHAR, opponent VARCHAR)",
        "question": "Name the result for ursinus college"
    },
    {
        "answer": "SELECT payment_date FROM payment WHERE amount > 10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = 'Elsa'",
        "context": "CREATE TABLE payment (payment_date VARCHAR, staff_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR, first_name VARCHAR); CREATE TABLE payment (payment_date VARCHAR, amount INTEGER)",
        "question": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa."
    },
    {
        "answer": "SELECT score FROM table_name_10 WHERE date = \"29 january 1983\" AND away_team = \"chelsea\"",
        "context": "CREATE TABLE table_name_10 (score VARCHAR, date VARCHAR, away_team VARCHAR)",
        "question": "What was the score of the game with away team chelsea on 29 january 1983?"
    },
    {
        "answer": "SELECT T2.title, T2.film_id, T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE film_actor (film_id VARCHAR); CREATE TABLE film (title VARCHAR, film_id VARCHAR, description VARCHAR)",
        "question": "Which film has the most number of actors or actresses? List the film name, film id and description."
    },
    {
        "answer": "SELECT T2.first_name, T2.last_name, T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE film_actor (actor_id VARCHAR); CREATE TABLE actor (first_name VARCHAR, last_name VARCHAR, actor_id VARCHAR)",
        "question": "Which film actor (actress) starred the most films? List his or her first name, last name and actor id."
    },
    {
        "answer": "SELECT T2.first_name, T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING COUNT(*) > 30",
        "context": "CREATE TABLE film_actor (actor_id VARCHAR); CREATE TABLE actor (first_name VARCHAR, last_name VARCHAR, actor_id VARCHAR)",
        "question": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name."
    },
    {
        "answer": "SELECT date FROM table_name_76 WHERE home_team = \"torquay united\"",
        "context": "CREATE TABLE table_name_76 (date VARCHAR, home_team VARCHAR)",
        "question": "What date was the game that home team torquay united played?"
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name, T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY SUM(amount) LIMIT 1",
        "context": "CREATE TABLE payment (customer_id VARCHAR); CREATE TABLE customer (first_name VARCHAR, last_name VARCHAR, customer_id VARCHAR)",
        "question": "Which customer, who has made at least one payment, has spent the least money? List his or her first name, last name, and the id."
    },
    {
        "answer": "SELECT place FROM table_name_89 WHERE to_par = \"\u201310\" AND score = 67 - 67 - 66 = 200",
        "context": "CREATE TABLE table_name_89 (place VARCHAR, to_par VARCHAR, score VARCHAR)",
        "question": "What is the Place of the Player with a To par of \u201310 and a Score of 67-67-66=200?"
    },
    {
        "answer": "SELECT T2.name, T1.category_id, COUNT(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id = T2.category_id GROUP BY T1.category_id",
        "context": "CREATE TABLE film_category (category_id VARCHAR); CREATE TABLE category (name VARCHAR, category_id VARCHAR)",
        "question": "How many films are there in each category? List the genre name, genre id and the count."
    },
    {
        "answer": "SELECT T1.title, T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE film (title VARCHAR, film_id VARCHAR); CREATE TABLE inventory (film_id VARCHAR)",
        "question": "Which film has the most copies in the inventory? List both title and id."
    },
    {
        "answer": "SELECT T1.title, T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE film (title VARCHAR, film_id VARCHAR); CREATE TABLE inventory (inventory_id VARCHAR, film_id VARCHAR); CREATE TABLE rental (inventory_id VARCHAR)",
        "question": "What is the film title and inventory id of the item in the inventory which was rented most frequently?"
    },
    {
        "answer": "SELECT quantity_world_rank FROM table_21109892_1 WHERE value_world_rank = \"12\"",
        "context": "CREATE TABLE table_21109892_1 (quantity_world_rank VARCHAR, value_world_rank VARCHAR)",
        "question": "where value world rank is 12, what is the quantity world rank?"
    },
    {
        "answer": "SELECT craft FROM table_name_15 WHERE location = \"coniston water\"",
        "context": "CREATE TABLE table_name_15 (craft VARCHAR, location VARCHAR)",
        "question": "What is the Craft used at Coniston Water?"
    },
    {
        "answer": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'",
        "context": "CREATE TABLE film (title VARCHAR, special_features VARCHAR)",
        "question": "Which movies have 'Deleted Scenes' as a substring in the special feature?"
    },
    {
        "answer": "SELECT second_party FROM table_name_71 WHERE first_party = \"conservative\" AND election = \"1834\"",
        "context": "CREATE TABLE table_name_71 (second_party VARCHAR, first_party VARCHAR, election VARCHAR)",
        "question": "What is the second party that has a conservative first party in the 1834 election?"
    },
    {
        "answer": "SELECT second_member FROM table_name_3 WHERE first_member = \"sir rowland hill, bt\" AND second_party = \"conservative\"",
        "context": "CREATE TABLE table_name_3 (second_member VARCHAR, first_member VARCHAR, second_party VARCHAR)",
        "question": "Who is the second member with first member Sir Rowland Hill, BT, and a conservative second party?"
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.rental_date LIMIT 1",
        "context": "CREATE TABLE customer (first_name VARCHAR, last_name VARCHAR, customer_id VARCHAR); CREATE TABLE rental (customer_id VARCHAR, rental_date VARCHAR)",
        "question": "What is the first name and the last name of the customer who made the earliest rental?"
    },
    {
        "answer": "SELECT DISTINCT T1.first_name, T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id = T2.staff_id JOIN customer AS T3 ON T2.customer_id = T3.customer_id WHERE T3.first_name = 'APRIL' AND T3.last_name = 'BURNS'",
        "context": "CREATE TABLE customer (customer_id VARCHAR, first_name VARCHAR, last_name VARCHAR); CREATE TABLE rental (staff_id VARCHAR, customer_id VARCHAR); CREATE TABLE staff (first_name VARCHAR, last_name VARCHAR, staff_id VARCHAR)",
        "question": "What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns?"
    },
    {
        "answer": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'",
        "context": "CREATE TABLE staff (address_id VARCHAR, first_name VARCHAR); CREATE TABLE address (address VARCHAR, address_id VARCHAR)",
        "question": "Where does the staff member with the first name Elsa live?"
    },
    {
        "answer": "SELECT location FROM table_2112260_1 WHERE specialization = \"Textile engineering\"",
        "context": "CREATE TABLE table_2112260_1 (location VARCHAR, specialization VARCHAR)",
        "question": "Where is every location with specialization of textile engineering?"
    },
    {
        "answer": "SELECT website FROM table_2112260_1 WHERE specialization = \"Engineering\" AND division = \"Dhaka division\"",
        "context": "CREATE TABLE table_2112260_1 (website VARCHAR, specialization VARCHAR, division VARCHAR)",
        "question": "What is every website with specialization of engineering and division of dhaka division?"
    },
    {
        "answer": "SELECT SUM(no_of_customers) FROM bank WHERE city = 'New York City'",
        "context": "CREATE TABLE bank (no_of_customers INTEGER, city VARCHAR)",
        "question": "Find the number of customers in the banks at New York City."
    },
    {
        "answer": "SELECT to_par FROM table_name_74 WHERE place = \"t10\" AND score = 67 - 73 = 140",
        "context": "CREATE TABLE table_name_74 (to_par VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "What To par has a Place of t10, and a Score of 67-73=140?"
    },
    {
        "answer": "SELECT score FROM table_name_7 WHERE place = \"t6\" AND country = \"united states\" AND player = \"fred couples\"",
        "context": "CREATE TABLE table_name_7 (score VARCHAR, player VARCHAR, place VARCHAR, country VARCHAR)",
        "question": "What Score has a Place of t6, a Country of united states, and a Player of fred couples?"
    },
    {
        "answer": "SELECT location FROM table_2112260_1 WHERE nick = \"BRU\"",
        "context": "CREATE TABLE table_2112260_1 (location VARCHAR, nick VARCHAR)",
        "question": "Where is every location where Nick is Bru?"
    },
    {
        "answer": "SELECT provider FROM table_name_90 WHERE free_or_pay = \"pay\" AND years = \"2006\u2013\" AND transmission = \"iptv and digital terrestrial\"",
        "context": "CREATE TABLE table_name_90 (provider VARCHAR, transmission VARCHAR, free_or_pay VARCHAR, years VARCHAR)",
        "question": "Name the  Provider that has a pay in 2006\u2013, and a Transmission of iptv and digital terrestrial?"
    },
    {
        "answer": "SELECT years FROM table_name_16 WHERE transmission = \"digital satellite\" AND on_demand = \"no\" AND free_or_pay = \"free + ppv\"",
        "context": "CREATE TABLE table_name_16 (years VARCHAR, free_or_pay VARCHAR, transmission VARCHAR, on_demand VARCHAR)",
        "question": "Name the Years which have Transmission of digital satellite, an On demand of no, and a Free or pay of free + ppv?"
    },
    {
        "answer": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY SUM(T2.amount)",
        "context": "CREATE TABLE loan (cust_id VARCHAR, amount INTEGER); CREATE TABLE customer (cust_name VARCHAR, cust_id VARCHAR)",
        "question": "List the name of all different customers who have some loan sorted by their total loan amount."
    },
    {
        "answer": "SELECT free_or_pay FROM table_name_26 WHERE years = \"2006\u2013\" AND provider = \"bt tv (formerly bt vision)\"",
        "context": "CREATE TABLE table_name_26 (free_or_pay VARCHAR, years VARCHAR, provider VARCHAR)",
        "question": "What kind of Free or pay has Years of 2006\u2013 and a Provider of bt tv (formerly bt vision)?"
    },
    {
        "answer": "SELECT on_demand FROM table_name_25 WHERE free_or_pay = \"pay\" AND provider = \"virgin media (formerly ntl:telewest)\"",
        "context": "CREATE TABLE table_name_25 (on_demand VARCHAR, free_or_pay VARCHAR, provider VARCHAR)",
        "question": "Which On demand has a pay and a Provider of virgin media (formerly ntl:telewest)?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT acc_type) FROM customer",
        "context": "CREATE TABLE customer (acc_type VARCHAR)",
        "question": "How many distinct types of accounts are there?"
    },
    {
        "answer": "SELECT MAX(series__number) FROM table_21146729_6 WHERE original_airdate = \"October 23, 1967\"",
        "context": "CREATE TABLE table_21146729_6 (series__number INTEGER, original_airdate VARCHAR)",
        "question": "What was the series# with the original airdate of october 23, 1967?"
    },
    {
        "answer": "SELECT COUNT(series__number) FROM table_21146729_6 WHERE original_airdate = \"September 25, 1967\"",
        "context": "CREATE TABLE table_21146729_6 (series__number VARCHAR, original_airdate VARCHAR)",
        "question": "How  many of the  series # when the original airdate is september 25, 1967?"
    },
    {
        "answer": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type = 'saving'",
        "context": "CREATE TABLE customer (cust_name VARCHAR, acc_type VARCHAR)",
        "question": "Find the name of customers who do not have an saving account."
    },
    {
        "answer": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE T2.loan_type = 'Mortgages'",
        "context": "CREATE TABLE loan (cust_id VARCHAR, loan_type VARCHAR); CREATE TABLE customer (cust_name VARCHAR); CREATE TABLE customer (cust_name VARCHAR, cust_id VARCHAR)",
        "question": "Find the name of customers who do not have a loan with a type of Mortgages."
    },
    {
        "answer": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'",
        "context": "CREATE TABLE customer (cust_name VARCHAR, cust_id VARCHAR); CREATE TABLE loan (cust_id VARCHAR)",
        "question": "Find the name of customers who have loans of both Mortgages and Auto."
    },
    {
        "answer": "SELECT MAX(assets__usd__millions) FROM table_name_37 WHERE bank = \"equity bank\" AND number_of_branches < 44",
        "context": "CREATE TABLE table_name_37 (assets__usd__millions INTEGER, bank VARCHAR, number_of_branches VARCHAR)",
        "question": "What is the highest Assets (USD) Millions from Equity Bank and less than 44 branches?"
    },
    {
        "answer": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY SUM(T2.amount) DESC LIMIT 1",
        "context": "CREATE TABLE loan (cust_id VARCHAR, amount INTEGER); CREATE TABLE customer (cust_name VARCHAR, cust_id VARCHAR)",
        "question": "Find the name of customer who has the highest amount of loans."
    },
    {
        "answer": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING COUNT(*) > 1",
        "context": "CREATE TABLE customer (cust_name VARCHAR, cust_id VARCHAR); CREATE TABLE loan (cust_id VARCHAR)",
        "question": "Find the name of customers who have more than one loan."
    },
    {
        "answer": "SELECT T1.cust_name, T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING SUM(T2.amount) > 5000",
        "context": "CREATE TABLE loan (cust_id VARCHAR, amount INTEGER); CREATE TABLE customer (cust_name VARCHAR, acc_type VARCHAR, cust_id VARCHAR)",
        "question": "Find the name and account balance of the customers who have loans with a total amount of more than 5000."
    },
    {
        "answer": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname ORDER BY SUM(T2.amount) DESC LIMIT 1",
        "context": "CREATE TABLE loan (branch_id VARCHAR, amount INTEGER); CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR)",
        "question": "Find the name of bank branch that provided the greatest total amount of loans."
    },
    {
        "answer": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100 GROUP BY T2.bname ORDER BY SUM(T1.amount) DESC LIMIT 1",
        "context": "CREATE TABLE loan (branch_id VARCHAR, cust_id VARCHAR, amount INTEGER); CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR); CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER)",
        "question": "Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than 100."
    },
    {
        "answer": "SELECT 2 AS nd_member FROM table_name_34 WHERE elected = \"1555\"",
        "context": "CREATE TABLE table_name_34 (elected VARCHAR)",
        "question": "Who is the second member that was elected in 1555?"
    },
    {
        "answer": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE amount > 3000",
        "context": "CREATE TABLE customer (cust_name VARCHAR, cust_id VARCHAR); CREATE TABLE loan (cust_id VARCHAR)",
        "question": "Find the the name of the customers who have a loan with amount more than 3000."
    },
    {
        "answer": "SELECT T1.bname, T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T2.loan_type = 'Business'",
        "context": "CREATE TABLE bank (bname VARCHAR, city VARCHAR, branch_id VARCHAR); CREATE TABLE loan (branch_id VARCHAR, loan_type VARCHAR)",
        "question": "Find the city and name of bank branches that provide business loans."
    },
    {
        "answer": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100",
        "context": "CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR); CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER); CREATE TABLE loan (branch_id VARCHAR, cust_id VARCHAR)",
        "question": "Find the names of bank branches that have provided a loan to any customer whose credit score is below 100."
    },
    {
        "answer": "SELECT SUM(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T1.state = 'New York'",
        "context": "CREATE TABLE bank (branch_id VARCHAR, state VARCHAR); CREATE TABLE loan (amount INTEGER, branch_id VARCHAR)",
        "question": "Find the total amount of loans provided by bank branches in the state of New York."
    },
    {
        "answer": "SELECT AVG(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)",
        "context": "CREATE TABLE loan (credit_score INTEGER, cust_id VARCHAR); CREATE TABLE customer (credit_score INTEGER, cust_id VARCHAR)",
        "question": "Find the average credit score of the customers who have some loan."
    },
    {
        "answer": "SELECT player FROM table_name_16 WHERE round = \"7\" AND pick > 187 AND nationality = \"united states\" AND draft > 2000",
        "context": "CREATE TABLE table_name_16 (player VARCHAR, draft VARCHAR, nationality VARCHAR, round VARCHAR, pick VARCHAR)",
        "question": "Which Player has a Round of 7, a Pick larger than 187, a Nationality of united states, and a Draft larger than 2000?"
    },
    {
        "answer": "SELECT losses FROM table_name_13 WHERE team = \"japan\"",
        "context": "CREATE TABLE table_name_13 (losses VARCHAR, team VARCHAR)",
        "question": "What losses consist of the team of japan?"
    },
    {
        "answer": "SELECT COUNT(song) FROM table_21234111_6 WHERE scoreboard = \"3rd\"",
        "context": "CREATE TABLE table_21234111_6 (song VARCHAR, scoreboard VARCHAR)",
        "question": "Name the number of song for scoreboard being 3rd"
    },
    {
        "answer": "SELECT SUM(wins) FROM table_name_36 WHERE points > 19 AND position < 12 AND played < 30",
        "context": "CREATE TABLE table_name_36 (wins INTEGER, played VARCHAR, points VARCHAR, position VARCHAR)",
        "question": "How many wins when there are more than 19 points, place smaller than 12, and fewer than 30 played?"
    },
    {
        "answer": "SELECT T1.teacher_id, T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE Assessment_Notes (teacher_id VARCHAR); CREATE TABLE Teachers (first_name VARCHAR, teacher_id VARCHAR)",
        "question": "Find the ids and first names of the 3 teachers that have the most number of assessment notes?"
    },
    {
        "answer": "SELECT T1.student_id, T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Students (last_name VARCHAR, student_id VARCHAR); CREATE TABLE Behavior_Incident (student_id VARCHAR)",
        "question": "Find the id and last name of the student that has the most behavior incidents?"
    },
    {
        "answer": "SELECT T1.teacher_id, T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T1.detention_type_code = \"AFTER\" GROUP BY T1.teacher_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Detention (teacher_id VARCHAR, detention_type_code VARCHAR); CREATE TABLE Teachers (last_name VARCHAR, teacher_id VARCHAR)",
        "question": "Find the id and last name of the teacher that has the most detentions with detention type code \"AFTER\"?"
    },
    {
        "answer": "SELECT T1.student_id, T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1",
        "context": "CREATE TABLE Students (first_name VARCHAR, student_id VARCHAR); CREATE TABLE Student_Addresses (student_id VARCHAR)",
        "question": "What are the id and first name of the student whose addresses have the highest average monthly rental?"
    },
    {
        "answer": "SELECT T2.address_id, T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1",
        "context": "CREATE TABLE Student_Addresses (address_id VARCHAR); CREATE TABLE Addresses (city VARCHAR, address_id VARCHAR)",
        "question": "Find the id and city of the student address with the highest average monthly rental."
    },
    {
        "answer": "SELECT T1.incident_type_code, T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code = T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Ref_Incident_Type (incident_type_description VARCHAR, incident_type_code VARCHAR); CREATE TABLE Behavior_Incident (incident_type_code VARCHAR)",
        "question": "What are the code and description of the most frequent behavior incident type?"
    },
    {
        "answer": "SELECT team_1 FROM table_name_20 WHERE team_2 = \"cementarnica\"",
        "context": "CREATE TABLE table_name_20 (team_1 VARCHAR, team_2 VARCHAR)",
        "question": "What is the team 1 with cementarnica as team 2?"
    },
    {
        "answer": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = \"Fanny\"",
        "context": "CREATE TABLE Students (student_id VARCHAR, first_name VARCHAR); CREATE TABLE Assessment_Notes (date_of_notes VARCHAR, student_id VARCHAR)",
        "question": "Find the dates of assessment notes for students with first name \"Fanny\"."
    },
    {
        "answer": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.last_name = \"Schuster\"",
        "context": "CREATE TABLE Assessment_Notes (text_of_notes VARCHAR, teacher_id VARCHAR); CREATE TABLE Teachers (teacher_id VARCHAR, last_name VARCHAR)",
        "question": "Find the texts of assessment notes for teachers with last name \"Schuster\"."
    },
    {
        "answer": "SELECT T1.detention_type_code, T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE Ref_Detention_Type (detention_type_description VARCHAR, detention_type_code VARCHAR); CREATE TABLE Detention (detention_type_code VARCHAR)",
        "question": "What are the code and description of the least frequent detention type ?"
    },
    {
        "answer": "SELECT T1.datetime_detention_start, datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.last_name = \"Schultz\"",
        "context": "CREATE TABLE Detention (datetime_detention_start VARCHAR, teacher_id VARCHAR); CREATE TABLE Teachers (teacher_id VARCHAR, last_name VARCHAR)",
        "question": "Find the start and end dates of detentions of teachers with last name \"Schultz\"."
    },
    {
        "answer": "SELECT T2.address_id, T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id ORDER BY monthly_rental DESC LIMIT 1",
        "context": "CREATE TABLE Student_Addresses (address_id VARCHAR); CREATE TABLE Addresses (zip_postcode VARCHAR, address_id VARCHAR)",
        "question": "What are the id and zip code of the address with the highest monthly rental?"
    },
    {
        "answer": "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.monthly_rental LIMIT 1",
        "context": "CREATE TABLE Students (cell_mobile_number VARCHAR, student_id VARCHAR); CREATE TABLE Student_Addresses (student_id VARCHAR, monthly_rental VARCHAR)",
        "question": "What is the cell phone number of the student whose address has the lowest monthly rental?"
    },
    {
        "answer": "SELECT MIN(pick) FROM table_name_88 WHERE overall > 17 AND player_name = \"dave adams category:articles with hcards\" AND year > 1963",
        "context": "CREATE TABLE table_name_88 (pick INTEGER, year VARCHAR, overall VARCHAR, player_name VARCHAR)",
        "question": "What is the smallest Pick with Overall larger than 17, a Player name of dave adams category:articles with hcards, and a Year larger than 1963?"
    },
    {
        "answer": "SELECT T1.date_incident_start, date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.last_name = \"Fahey\"",
        "context": "CREATE TABLE Behavior_Incident (date_incident_start VARCHAR, student_id VARCHAR); CREATE TABLE Students (student_id VARCHAR, last_name VARCHAR)",
        "question": "Find the start and end dates of behavior incidents of students with last name \"Fahey\"."
    },
    {
        "answer": "SELECT T1.line_1, AVG(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id",
        "context": "CREATE TABLE Addresses (line_1 VARCHAR, address_id VARCHAR); CREATE TABLE Student_Addresses (monthly_rental INTEGER, address_id VARCHAR)",
        "question": "What are the line 1 and average monthly rentals of all student addresses?"
    },
    {
        "answer": "SELECT partner FROM table_2127933_3 WHERE opponents = \"Harry Johnson Hazel Hotchkiss Wightman\"",
        "context": "CREATE TABLE table_2127933_3 (partner VARCHAR, opponents VARCHAR)",
        "question": "Who were the partners during times that harry johnson hazel hotchkiss wightman was the opponent?"
    },
    {
        "answer": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T1.zip_postcode = \"918\"",
        "context": "CREATE TABLE Addresses (address_id VARCHAR, zip_postcode VARCHAR); CREATE TABLE Teachers (email_address VARCHAR, address_id VARCHAR)",
        "question": "What are the email addresses of teachers whose address has zip code \"918\"?"
    },
    {
        "answer": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id",
        "context": "CREATE TABLE Teachers (last_name VARCHAR); CREATE TABLE Teachers (last_name VARCHAR, teacher_id VARCHAR); CREATE TABLE Detention (teacher_id VARCHAR)",
        "question": "Find the last names of teachers who are not involved in any detention."
    },
    {
        "answer": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id",
        "context": "CREATE TABLE Teachers (address_id VARCHAR); CREATE TABLE Students (address_id VARCHAR); CREATE TABLE Addresses (line_1 VARCHAR, address_id VARCHAR)",
        "question": "What are the line 1 of addresses shared by some students and some teachers?"
    },
    {
        "answer": "SELECT T1.asset_id, T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING COUNT(*) = 2 INTERSECT SELECT T1.asset_id, T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING COUNT(*) < 2",
        "context": "CREATE TABLE Assets (asset_id VARCHAR, asset_details VARCHAR); CREATE TABLE Asset_Parts (asset_id VARCHAR); CREATE TABLE Fault_Log (asset_id VARCHAR)",
        "question": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail."
    },
    {
        "answer": "SELECT COUNT(*), T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id",
        "context": "CREATE TABLE Assets (maintenance_contract_id VARCHAR); CREATE TABLE Maintenance_Contracts (maintenance_contract_id VARCHAR)",
        "question": "How many assets does each maintenance contract contain? List the number and the contract id."
    },
    {
        "answer": "SELECT COUNT(*), T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id GROUP BY T1.company_id",
        "context": "CREATE TABLE Assets (supplier_company_id VARCHAR); CREATE TABLE Third_Party_Companies (company_id VARCHAR)",
        "question": "How many assets does each third party company supply? List the count and the company id."
    },
    {
        "answer": "SELECT location_chernobyl_1_chernobyl_2_chernobyl_3_chernobyl_4_chernobyl_5_ignalina_1_ignalina_2_ignalina_3_kursk_1_kursk_2_kursk_3_kursk_4_kursk_5_kursk_6_leningrad_1_leningrad_2_leningrad_3_leningrad_4_smolensk_1_smolensk_2_smolensk_3_smolensk_4_directorate_for_construction_of_kostoma_npp__for_kostroma_1_and_2__table_31_technology_and_soviet_energy_availability___november_1981___ntis_order__numberpb82_133455__for_ignalina_4_ FROM table_213088_1 WHERE net_capacity__mw_ = 950",
        "context": "CREATE TABLE table_213088_1 (location_chernobyl_1_chernobyl_2_chernobyl_3_chernobyl_4_chernobyl_5_ignalina_1_ignalina_2_ignalina_3_kursk_1_kursk_2_kursk_3_kursk_4_kursk_5_kursk_6_leningrad_1_leningrad_2_leningrad_3_leningrad_4_smolensk_1_smolensk_2_smolensk_3_smolensk_4_directorate_for_construction_of_kostoma_npp__for_kostroma_1_and_2__table_31_technology_and_soviet_energy_availability___november_1981___ntis_order__numberpb82_133455__for_ignalina_4_ VARCHAR, net_capacity__mw_ VARCHAR)",
        "question": "List all the locations where net capacity is 950?"
    },
    {
        "answer": "SELECT location_chernobyl_1_chernobyl_2_chernobyl_3_chernobyl_4_chernobyl_5_ignalina_1_ignalina_2_ignalina_3_kursk_1_kursk_2_kursk_3_kursk_4_kursk_5_kursk_6_leningrad_1_leningrad_2_leningrad_3_leningrad_4_smolensk_1_smolensk_2_smolensk_3_smolensk_4_directorate_for_construction_of_kostoma_npp__for_kostroma_1_and_2__table_31_technology_and_soviet_energy_availability___november_1981___ntis_order__numberpb82_133455__for_ignalina_4_ FROM table_213088_1 WHERE reactor_type = \"RBMK-1000\"",
        "context": "CREATE TABLE table_213088_1 (location_chernobyl_1_chernobyl_2_chernobyl_3_chernobyl_4_chernobyl_5_ignalina_1_ignalina_2_ignalina_3_kursk_1_kursk_2_kursk_3_kursk_4_kursk_5_kursk_6_leningrad_1_leningrad_2_leningrad_3_leningrad_4_smolensk_1_smolensk_2_smolensk_3_smolensk_4_directorate_for_construction_of_kostoma_npp__for_kostroma_1_and_2__table_31_technology_and_soviet_energy_availability___november_1981___ntis_order__numberpb82_133455__for_ignalina_4_ VARCHAR, reactor_type VARCHAR)",
        "question": "List all the locations with a RBMK-1000 reactor."
    },
    {
        "answer": "SELECT T1.company_id, T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id HAVING COUNT(*) >= 2 UNION SELECT T3.company_id, T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id = T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Maintenance_Contracts (maintenance_contract_company_id VARCHAR); CREATE TABLE Maintenance_Engineers (company_id VARCHAR); CREATE TABLE Third_Party_Companies (company_id VARCHAR, company_name VARCHAR)",
        "question": "Which third party companies have at least 2 maintenance engineers or have at least 2 maintenance contracts? List the company id and name."
    },
    {
        "answer": "SELECT result FROM table_name_37 WHERE round = \"1r\" AND surface = \"hard\" AND against = \"tunisia\"",
        "context": "CREATE TABLE table_name_37 (result VARCHAR, against VARCHAR, round VARCHAR, surface VARCHAR)",
        "question": "What is the result of the match in round 1r against tunisia and on a hard surface?"
    },
    {
        "answer": "SELECT T1.staff_name, T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id = T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name, T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id = T4.contact_staff_id",
        "context": "CREATE TABLE Engineer_Visits (contact_staff_id VARCHAR); CREATE TABLE Staff (staff_name VARCHAR, staff_id VARCHAR); CREATE TABLE Fault_Log (recorded_by_staff_id VARCHAR)",
        "question": "What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers?"
    },
    {
        "answer": "SELECT T1.part_name, T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING COUNT(*) > 2",
        "context": "CREATE TABLE Parts (part_name VARCHAR, part_id VARCHAR); CREATE TABLE Part_Faults (part_id VARCHAR)",
        "question": "Which parts have more than 2 faults? Show the part name and id."
    },
    {
        "answer": "SELECT T1.fault_short_name, T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id",
        "context": "CREATE TABLE Skills_Required_To_Fix (part_fault_id VARCHAR, skill_id VARCHAR); CREATE TABLE Part_Faults (fault_short_name VARCHAR, part_fault_id VARCHAR); CREATE TABLE Skills (skill_description VARCHAR, skill_id VARCHAR)",
        "question": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description."
    },
    {
        "answer": "SELECT T1.fault_description, T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id",
        "context": "CREATE TABLE Fault_Log (fault_description VARCHAR, fault_log_entry_id VARCHAR); CREATE TABLE Fault_Log_Parts (fault_status VARCHAR, fault_log_entry_id VARCHAR)",
        "question": "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?"
    },
    {
        "answer": "SELECT COUNT(*), T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Fault_Log (fault_log_entry_id VARCHAR); CREATE TABLE Engineer_Visits (fault_log_entry_id VARCHAR)",
        "question": "How many engineer visits are required at most for a single fault log? List the number and the log entry id."
    },
    {
        "answer": "SELECT T1.engineer_id, T1.first_name, T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Maintenance_Engineers (engineer_id VARCHAR, first_name VARCHAR, last_name VARCHAR); CREATE TABLE Engineer_Visits (Id VARCHAR)",
        "question": "Which engineer has visited the most times? Show the engineer id, first name and last name."
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name, T1.other_details, T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id",
        "context": "CREATE TABLE Maintenance_Engineers (first_name VARCHAR, last_name VARCHAR, other_details VARCHAR, engineer_id VARCHAR); CREATE TABLE Engineer_Skills (engineer_id VARCHAR, skill_id VARCHAR); CREATE TABLE Skills (skill_description VARCHAR, skill_id VARCHAR)",
        "question": "List all every engineer's first name, last name, details and coresponding skill description."
    },
    {
        "answer": "SELECT directed_by FROM table_21312845_1 WHERE production_code > 4301103.585233785 AND written_by = \"Curtis Kheel\"",
        "context": "CREATE TABLE table_21312845_1 (directed_by VARCHAR, production_code VARCHAR, written_by VARCHAR)",
        "question": "Who directed the episode with a production code greater than 4301103.585233785 that was written by Curtis Kheel?"
    },
    {
        "answer": "SELECT first_name, last_name FROM Maintenance_Engineers WHERE NOT engineer_id IN (SELECT engineer_id FROM Engineer_Visits)",
        "context": "CREATE TABLE Engineer_Visits (first_name VARCHAR, last_name VARCHAR, engineer_id VARCHAR); CREATE TABLE Maintenance_Engineers (first_name VARCHAR, last_name VARCHAR, engineer_id VARCHAR)",
        "question": "Which engineers have never visited to maintain the assets? List the engineer first name and last name."
    },
    {
        "answer": "SELECT week_5 FROM table_name_65 WHERE week_2 = \"brianne bailey\"",
        "context": "CREATE TABLE table_name_65 (week_5 VARCHAR, week_2 VARCHAR)",
        "question": "Who was the girl of the week 3 weeks after brianne bailey in the same month?"
    },
    {
        "answer": "SELECT T1.part_id, T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Part_Faults (part_id VARCHAR, part_fault_id VARCHAR); CREATE TABLE Skills_Required_To_Fix (part_fault_id VARCHAR); CREATE TABLE Parts (part_id VARCHAR, part_name VARCHAR)",
        "question": "Which part fault requires the most number of skills to fix? List part id and name."
    },
    {
        "answer": "SELECT T1.engineer_id, T1.first_name, T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE Engineer_Visits (engineer_id VARCHAR); CREATE TABLE Maintenance_Engineers (engineer_id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name."
    },
    {
        "answer": "SELECT T1.staff_name, T3.first_name, T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id",
        "context": "CREATE TABLE Engineer_Visits (contact_staff_id VARCHAR, engineer_id VARCHAR); CREATE TABLE Staff (staff_name VARCHAR, staff_id VARCHAR); CREATE TABLE Maintenance_Engineers (first_name VARCHAR, last_name VARCHAR, engineer_id VARCHAR)",
        "question": "Which staff have contacted which engineers? List the staff name and the engineer first name and last name."
    },
    {
        "answer": "SELECT T1.fault_log_entry_id, T1.fault_description, T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Fault_Log (fault_log_entry_id VARCHAR, fault_description VARCHAR, fault_log_entry_datetime VARCHAR); CREATE TABLE Fault_Log_Parts (fault_log_entry_id VARCHAR)",
        "question": "Which fault log included the most number of faulty parts? List the fault log id, description and record time."
    },
    {
        "answer": "SELECT position FROM table_21321804_5 WHERE cfl_team = \"Hamilton Tiger-Cats\"",
        "context": "CREATE TABLE table_21321804_5 (position VARCHAR, cfl_team VARCHAR)",
        "question": "What position was drafted by the Hamilton Tiger-Cats? "
    },
    {
        "answer": "SELECT T1.skill_id, T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Skills (skill_id VARCHAR, skill_description VARCHAR); CREATE TABLE Skills_Required_To_Fix (skill_id VARCHAR)",
        "question": "Which skill is used in fixing the most number of faults? List the skill id and description."
    },
    {
        "answer": "SELECT winning_driver FROM table_21321935_2 WHERE fastest_lap = \"Jamie Green\"",
        "context": "CREATE TABLE table_21321935_2 (winning_driver VARCHAR, fastest_lap VARCHAR)",
        "question": "Who won when Jamie Green had the best lap?"
    },
    {
        "answer": "SELECT format FROM table_name_70 WHERE country = \"united kingdom\" AND catalogue__number = \"886973273913 (gowow012)\"",
        "context": "CREATE TABLE table_name_70 (format VARCHAR, country VARCHAR, catalogue__number VARCHAR)",
        "question": "What is the format of catalog number 886973273913 (gowow012) in the United Kingdom?"
    },
    {
        "answer": "SELECT MIN(apps) FROM table_name_29 WHERE club = \"barcelona\" AND season = \"1996/97\" AND rank < 7",
        "context": "CREATE TABLE table_name_29 (apps INTEGER, rank VARCHAR, club VARCHAR, season VARCHAR)",
        "question": "Which Apps have a Club of barcelona, and a Season of 1996/97, and a Rank smaller than 7?"
    },
    {
        "answer": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code = T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1",
        "context": "CREATE TABLE Maintenance_Contracts (maintenance_contract_company_id VARCHAR, contract_end_date VARCHAR); CREATE TABLE Third_Party_Companies (company_name VARCHAR, company_id VARCHAR, company_type_code VARCHAR); CREATE TABLE Ref_Company_Types (company_type_code VARCHAR)",
        "question": "What is the description of the type of the company who concluded its contracts most recently?"
    },
    {
        "answer": "SELECT T1.staff_name, COUNT(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name",
        "context": "CREATE TABLE Engineer_Visits (contact_staff_id VARCHAR); CREATE TABLE Staff (staff_name VARCHAR, staff_id VARCHAR)",
        "question": "How many engineers did each staff contact? List both the contact staff name and number of engineers contacted."
    },
    {
        "answer": "SELECT player FROM table_21321804_3 WHERE cfl_team = \"Winnipeg Blue Bombers\"",
        "context": "CREATE TABLE table_21321804_3 (player VARCHAR, cfl_team VARCHAR)",
        "question": "Which player plays for the Winnipeg Blue Bombers? "
    },
    {
        "answer": "SELECT stage FROM table_21326205_2 WHERE rally_leader = \"S\u00e9bastien Loeb\" AND name = \"Tempo 2\"",
        "context": "CREATE TABLE table_21326205_2 (stage VARCHAR, rally_leader VARCHAR, name VARCHAR)",
        "question": "In which special stage named Tempo 2 was S\u00e9bastien Loeb the leader?"
    },
    {
        "answer": "SELECT COUNT(*), t1.network_name, t1.services FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id",
        "context": "CREATE TABLE route (station_id VARCHAR); CREATE TABLE station (network_name VARCHAR, services VARCHAR, id VARCHAR)",
        "question": "Find the number of trains for each station, as well as the station network name and services."
    },
    {
        "answer": "SELECT MAX(t1.low_temperature), AVG(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id WHERE t2.network_name = \"Amersham\"",
        "context": "CREATE TABLE weekly_weather (low_temperature INTEGER, precipitation INTEGER, station_id VARCHAR); CREATE TABLE station (id VARCHAR, network_name VARCHAR)",
        "question": "Give me the maximum low temperature and average precipitation at the Amersham station."
    },
    {
        "answer": "SELECT t3.name, t3.time FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = \"Chiltern\"",
        "context": "CREATE TABLE station (id VARCHAR, local_authority VARCHAR); CREATE TABLE route (station_id VARCHAR, train_id VARCHAR); CREATE TABLE train (name VARCHAR, time VARCHAR, id VARCHAR)",
        "question": "Find names and times of trains that run through stations for the local authority Chiltern."
    },
    {
        "answer": "SELECT t2.id, t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id ORDER BY AVG(high_temperature) DESC LIMIT 1",
        "context": "CREATE TABLE weekly_weather (station_id VARCHAR); CREATE TABLE station (id VARCHAR, local_authority VARCHAR)",
        "question": "Find the id and local authority of the station with has the highest average high temperature."
    },
    {
        "answer": "SELECT t2.id, t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id HAVING MAX(t1.precipitation) > 50",
        "context": "CREATE TABLE weekly_weather (station_id VARCHAR, precipitation INTEGER); CREATE TABLE station (id VARCHAR, local_authority VARCHAR)",
        "question": "Find the id and local authority of the station whose maximum precipitation is higher than 50."
    },
    {
        "answer": "SELECT COUNT(pop__2001_) FROM table_2134521_1 WHERE pop__1996_ = 880859",
        "context": "CREATE TABLE table_2134521_1 (pop__2001_ VARCHAR, pop__1996_ VARCHAR)",
        "question": "How many different results of the population count in 2001 are there for the census division whose population in 1996 is 880859?"
    },
    {
        "answer": "SELECT T3.EMP_FNAME, T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM = T3.EMP_NUM WHERE DEPT_NAME = \"Biology\"",
        "context": "CREATE TABLE professor (dept_code VARCHAR, EMP_NUM VARCHAR); CREATE TABLE department (dept_code VARCHAR); CREATE TABLE employee (EMP_FNAME VARCHAR, EMP_LNAME VARCHAR, EMP_NUM VARCHAR)",
        "question": "What is the first and last name of the professor in biology department?"
    },
    {
        "answer": "SELECT DISTINCT T1.EMP_FNAME, T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = \"ACCT-211\"",
        "context": "CREATE TABLE CLASS (PROF_NUM VARCHAR); CREATE TABLE employee (EMP_FNAME VARCHAR, EMP_DOB VARCHAR, EMP_NUM VARCHAR)",
        "question": "What are the first names and date of birth of professors teaching course ACCT-211?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT dept_address) FROM department WHERE school_code = 'BUS'",
        "context": "CREATE TABLE department (dept_address VARCHAR, school_code VARCHAR)",
        "question": "How many different locations does the school with code BUS has?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT dept_name), school_code FROM department GROUP BY school_code HAVING COUNT(DISTINCT dept_name) < 5",
        "context": "CREATE TABLE department (school_code VARCHAR, dept_name VARCHAR)",
        "question": "Find the number of different departments in each school whose number of different departments is less than 5."
    },
    {
        "answer": "SELECT COUNT(*), T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T2.dept_code = T3.dept_code GROUP BY T3.school_code",
        "context": "CREATE TABLE department (school_code VARCHAR, dept_code VARCHAR); CREATE TABLE CLASS (crs_code VARCHAR); CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR)",
        "question": "Find the number of classes in each school."
    },
    {
        "answer": "SELECT outcome FROM table_2139023_2 WHERE championship = \"Australian championships\"",
        "context": "CREATE TABLE table_2139023_2 (outcome VARCHAR, championship VARCHAR)",
        "question": "What was the result of the Australian Championships?"
    },
    {
        "answer": "SELECT bluetooth FROM table_name_31 WHERE model = \"s90i\"",
        "context": "CREATE TABLE table_name_31 (bluetooth VARCHAR, model VARCHAR)",
        "question": "Does the S90i model have bluetooth?"
    },
    {
        "answer": "SELECT T2.dept_name, AVG(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY AVG(T1.stu_gpa) DESC LIMIT 1",
        "context": "CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR); CREATE TABLE student (stu_gpa INTEGER, dept_code VARCHAR)",
        "question": "What is the name and the average gpa of department whose students have the highest average gpa?"
    },
    {
        "answer": "SELECT score_points FROM table_name_81 WHERE shooter = \"sandra kolly ( sui )\"",
        "context": "CREATE TABLE table_name_81 (score_points VARCHAR, shooter VARCHAR)",
        "question": "What is Score Points, when Shooter is \"Sandra Kolly ( SUI )\"?"
    },
    {
        "answer": "SELECT result_games FROM table_21436373_11 WHERE type_of_record = \"Total attendance-Regular season\"",
        "context": "CREATE TABLE table_21436373_11 (result_games VARCHAR, type_of_record VARCHAR)",
        "question": "Name the result for total attendance-regular season"
    },
    {
        "answer": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T1.dept_code = T3.dept_code GROUP BY T1.dept_code ORDER BY SUM(T1.crs_credit) DESC LIMIT 1",
        "context": "CREATE TABLE CLASS (crs_code VARCHAR); CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR); CREATE TABLE course (dept_code VARCHAR, crs_code VARCHAR, crs_credit INTEGER)",
        "question": "Find the name of the department that offers the largest number of credits of all classes."
    },
    {
        "answer": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211'",
        "context": "CREATE TABLE student (stu_fname VARCHAR, stu_num VARCHAR); CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR); CREATE TABLE enroll (class_code VARCHAR, stu_num VARCHAR)",
        "question": "What is the first name of each student enrolled in class ACCT-211?"
    },
    {
        "answer": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'",
        "context": "CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR); CREATE TABLE student (stu_fname VARCHAR, stu_num VARCHAR); CREATE TABLE enroll (class_code VARCHAR, stu_num VARCHAR, enroll_grade VARCHAR)",
        "question": "What is the first name of students enrolled in class ACCT-211 and got grade C?"
    },
    {
        "answer": "SELECT COUNT(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'",
        "context": "CREATE TABLE enroll (class_code VARCHAR); CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR)",
        "question": "How many students enrolled in class ACCT-211?"
    },
    {
        "answer": "SELECT artist FROM table_name_54 WHERE week = \"top 12\"",
        "context": "CREATE TABLE table_name_54 (artist VARCHAR, week VARCHAR)",
        "question": "Which Artist has a Week of Top 12?"
    },
    {
        "answer": "SELECT COUNT(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = 'Accounting'",
        "context": "CREATE TABLE enroll (class_code VARCHAR); CREATE TABLE department (dept_code VARCHAR, dept_name VARCHAR); CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR); CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR)",
        "question": "How many students are enrolled in the class taught by some professor from the accounting department?"
    },
    {
        "answer": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code GROUP BY T3.dept_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE enroll (class_code VARCHAR); CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR); CREATE TABLE course (dept_code VARCHAR, crs_code VARCHAR); CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)",
        "question": "What is the name of the department that has the largest number of students enrolled?"
    },
    {
        "answer": "SELECT rank_points FROM table_name_12 WHERE total = \"17\" AND shooter = \"lalita yauhleuskaya ( aus )\"",
        "context": "CREATE TABLE table_name_12 (rank_points VARCHAR, total VARCHAR, shooter VARCHAR)",
        "question": "What is Rank Points, when Total is \"17\", and when Shooter is \"Lalita Yauhleuskaya ( AUS )\"?"
    },
    {
        "answer": "SELECT attendance FROM table_21436373_12 WHERE date_year = \"2011\"",
        "context": "CREATE TABLE table_21436373_12 (attendance VARCHAR, date_year VARCHAR)",
        "question": "what is the attendance in 2011 records"
    },
    {
        "answer": "SELECT place FROM table_name_37 WHERE year > 2006 AND champion = \"asvel\"",
        "context": "CREATE TABLE table_name_37 (place VARCHAR, year VARCHAR, champion VARCHAR)",
        "question": "What is Place, when Year is greater than 2006, and when Champion is \"Asvel\"?"
    },
    {
        "answer": "SELECT stu_fname, stu_lname, stu_gpa FROM student WHERE stu_gpa > 3 ORDER BY stu_dob DESC LIMIT 1",
        "context": "CREATE TABLE student (stu_fname VARCHAR, stu_lname VARCHAR, stu_gpa INTEGER, stu_dob VARCHAR)",
        "question": "What is the first, last name, gpa of the youngest one among students whose GPA is above 3?"
    },
    {
        "answer": "SELECT COUNT(type_of_record) FROM table_21436373_12 WHERE result_games = \"10 games (29,606 avg.)\"",
        "context": "CREATE TABLE table_21436373_12 (type_of_record VARCHAR, result_games VARCHAR)",
        "question": "how many records had result/games: 10 games (29,606 avg.)"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_21436373_12 WHERE type_of_record = \"Total attendance-Regular season\"",
        "context": "CREATE TABLE table_21436373_12 (attendance INTEGER, type_of_record VARCHAR)",
        "question": "what is the highest attendance for a total attendance-regular season record"
    },
    {
        "answer": "SELECT T2.dept_name, T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.prof_high_degree = 'Ph.D.' GROUP BY T1.dept_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE professor (dept_code VARCHAR, prof_high_degree VARCHAR); CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)",
        "question": "What is the name of department where has the largest number of professors with a Ph.D. degree?"
    },
    {
        "answer": "SELECT emp_fname FROM employee WHERE emp_jobcode = 'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num",
        "context": "CREATE TABLE employee (emp_fname VARCHAR, emp_jobcode VARCHAR); CREATE TABLE CLASS (prof_num VARCHAR); CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR)",
        "question": "What are the first names of the professors who do not teach a class."
    },
    {
        "answer": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num = T5.prof_num",
        "context": "CREATE TABLE professor (emp_num VARCHAR, dept_code VARCHAR); CREATE TABLE department (dept_code VARCHAR, dept_name VARCHAR); CREATE TABLE CLASS (prof_num VARCHAR); CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR)",
        "question": "What is the first names of the professors from the history department who do not teach a class."
    },
    {
        "answer": "SELECT T1.emp_lname, T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History'",
        "context": "CREATE TABLE department (dept_code VARCHAR, dept_name VARCHAR); CREATE TABLE employee (emp_lname VARCHAR, emp_num VARCHAR); CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR, dept_code VARCHAR)",
        "question": "What is the last name and office of the professor from the history department?"
    },
    {
        "answer": "SELECT T3.dept_name, T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T1.emp_lname = 'Heffington'",
        "context": "CREATE TABLE employee (emp_num VARCHAR, emp_lname VARCHAR); CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR); CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR, dept_code VARCHAR)",
        "question": "What is department name and office for the professor whose last name is Heffington?"
    },
    {
        "answer": "SELECT MAX(total) FROM table_name_65 WHERE bronze < 1 AND gold > 0",
        "context": "CREATE TABLE table_name_65 (total INTEGER, bronze VARCHAR, gold VARCHAR)",
        "question": "What is the highest total when bronze is less than 1 and gold more than 0?"
    },
    {
        "answer": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num WHERE T3.stu_lname = 'Smithson'",
        "context": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR); CREATE TABLE enroll (class_code VARCHAR, stu_num VARCHAR); CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR)",
        "question": "What is the code of the course which the student whose last name is Smithson took?"
    },
    {
        "answer": "SELECT T4.crs_description, T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T3.stu_num = T2.stu_num JOIN course AS T4 ON T4.crs_code = T1.crs_code WHERE T3.stu_lname = 'Smithson'",
        "context": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR); CREATE TABLE course (crs_description VARCHAR, crs_credit VARCHAR, crs_code VARCHAR); CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR); CREATE TABLE enroll (class_code VARCHAR, stu_num VARCHAR)",
        "question": "What are the description and credit of the course which the student whose last name is Smithson took?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_4 WHERE nation = \"china\" AND bronze > 0",
        "context": "CREATE TABLE table_name_4 (rank VARCHAR, nation VARCHAR, bronze VARCHAR)",
        "question": "How many times is the nation china and bronze more than 0?"
    },
    {
        "answer": "SELECT COUNT(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T2.dept_name = 'Accounting' OR T2.dept_name = 'Biology'",
        "context": "CREATE TABLE department (dept_code VARCHAR, dept_name VARCHAR); CREATE TABLE professor (dept_code VARCHAR)",
        "question": "How many professors who are from either Accounting or Biology department?"
    },
    {
        "answer": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'",
        "context": "CREATE TABLE CLASS (prof_num VARCHAR); CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR)",
        "question": "Find the first name of the professor who is teaching two courses with code CIS-220 and QM-261."
    },
    {
        "answer": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'",
        "context": "CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR); CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR); CREATE TABLE department (dept_code VARCHAR, dept_name VARCHAR); CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR); CREATE TABLE student (stu_fname VARCHAR, stu_num VARCHAR)",
        "question": "Find the first name of student who is taking classes from accounting and Computer Info. Systems departments"
    },
    {
        "answer": "SELECT AVG(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211'",
        "context": "CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR); CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR); CREATE TABLE student (stu_gpa INTEGER, stu_num VARCHAR)",
        "question": "What is the average gpa of the students enrolled in the course with code ACCT-211?"
    },
    {
        "answer": "SELECT MAX(byes) FROM table_name_61 WHERE against < 1794 AND losses = 6 AND draws < 0",
        "context": "CREATE TABLE table_name_61 (byes INTEGER, draws VARCHAR, against VARCHAR, losses VARCHAR)",
        "question": "What is the highest value for Byes, when Against is less than 1794, when Losses is \"6\", and when Draws is less than 0?"
    },
    {
        "answer": "SELECT teams FROM table_name_89 WHERE season = \"1950-51\"",
        "context": "CREATE TABLE table_name_89 (teams VARCHAR, season VARCHAR)",
        "question": "what is the teams for season 1950-51?"
    },
    {
        "answer": "SELECT stu_fname, stu_gpa FROM student WHERE stu_gpa < (SELECT AVG(stu_gpa) FROM student)",
        "context": "CREATE TABLE student (stu_fname VARCHAR, stu_gpa INTEGER)",
        "question": "Find the first name and gpa of the students whose gpa is lower than the average gpa of all students."
    },
    {
        "answer": "SELECT T2.dept_name, T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE student (dept_code VARCHAR); CREATE TABLE department (dept_name VARCHAR, dept_address VARCHAR, dept_code VARCHAR)",
        "question": "Find the name and address of the department that has the highest number of students."
    },
    {
        "answer": "SELECT T2.dept_name, T2.dept_address, COUNT(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE student (dept_code VARCHAR); CREATE TABLE department (dept_name VARCHAR, dept_address VARCHAR, dept_code VARCHAR)",
        "question": "Find the name, address, number of students in the departments that have the top 3 highest number of students."
    },
    {
        "answer": "SELECT T1.emp_fname, T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T3.dept_code = T2.dept_code WHERE T3.dept_name = 'History' AND T2.prof_high_degree = 'Ph.D.'",
        "context": "CREATE TABLE department (dept_code VARCHAR, dept_name VARCHAR); CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR, dept_code VARCHAR, prof_high_degree VARCHAR); CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR)",
        "question": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree."
    },
    {
        "answer": "SELECT type_of_record FROM table_21436373_6 WHERE result_games = \"B.C. 16 @ Edmonton 22\"",
        "context": "CREATE TABLE table_21436373_6 (type_of_record VARCHAR, result_games VARCHAR)",
        "question": "Which type of record has result/games of b.c. 16 @ edmonton 22?"
    },
    {
        "answer": "SELECT T2.emp_fname, T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code",
        "context": "CREATE TABLE course (crs_description VARCHAR, crs_code VARCHAR); CREATE TABLE CLASS (prof_num VARCHAR, crs_code VARCHAR); CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR)",
        "question": "Find the first names of all instructors who have taught some course and the course description."
    },
    {
        "answer": "SELECT T2.emp_fname, T4.prof_office, T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num",
        "context": "CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR); CREATE TABLE course (crs_description VARCHAR, crs_code VARCHAR); CREATE TABLE CLASS (prof_num VARCHAR, crs_code VARCHAR); CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR)",
        "question": "Find the first names and offices of all instructors who have taught some course and also find the course description."
    },
    {
        "answer": "SELECT T2.emp_fname, T4.prof_office, T3.crs_description, T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num JOIN department AS T5 ON T4.dept_code = T5.dept_code",
        "context": "CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR); CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR); CREATE TABLE course (crs_description VARCHAR, crs_code VARCHAR); CREATE TABLE CLASS (prof_num VARCHAR, crs_code VARCHAR); CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR, dept_code VARCHAR)",
        "question": "Find the first names and offices of all instructors who have taught some course and the course description and the department name."
    },
    {
        "answer": "SELECT T1.stu_fname, T1.stu_lname, T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code",
        "context": "CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR); CREATE TABLE course (crs_description VARCHAR, crs_code VARCHAR); CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR); CREATE TABLE student (stu_fname VARCHAR, stu_lname VARCHAR, stu_num VARCHAR)",
        "question": "Find names of all students who took some course and the course description."
    },
    {
        "answer": "SELECT to_par FROM table_21469545_2 WHERE date = \"20 Feb 2005\"",
        "context": "CREATE TABLE table_21469545_2 (to_par VARCHAR, date VARCHAR)",
        "question": "Name the to par for 20 feb 2005"
    },
    {
        "answer": "SELECT T2.emp_fname, T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Accounting'",
        "context": "CREATE TABLE CLASS (class_room VARCHAR, prof_num VARCHAR); CREATE TABLE professor (emp_num VARCHAR, dept_code VARCHAR); CREATE TABLE department (dept_code VARCHAR, dept_name VARCHAR); CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR)",
        "question": "Find the first names of all professors in the Accounting department who is teaching some course and the class room."
    },
    {
        "answer": "SELECT DISTINCT T2.emp_fname, T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Computer Info. Systems'",
        "context": "CREATE TABLE professor (prof_high_degree VARCHAR, emp_num VARCHAR, dept_code VARCHAR); CREATE TABLE department (dept_code VARCHAR, dept_name VARCHAR); CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR); CREATE TABLE CLASS (prof_num VARCHAR)",
        "question": "Find the first names and degree of all professors who are teaching some class in Computer Info. Systems department."
    },
    {
        "answer": "SELECT T1.stu_fname, T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'",
        "context": "CREATE TABLE enroll (stu_num VARCHAR, enroll_grade VARCHAR); CREATE TABLE student (stu_fname VARCHAR, stu_lname VARCHAR, stu_num VARCHAR)",
        "question": "Find names of all students who took some course and got A or C."
    },
    {
        "answer": "SELECT T2.emp_fname, T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T1.dept_code = T3.dept_code WHERE T3.dept_name = 'History' AND T1.prof_high_degree <> 'Ph.D.'",
        "context": "CREATE TABLE department (dept_code VARCHAR, dept_name VARCHAR); CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR, dept_code VARCHAR, prof_high_degree VARCHAR); CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR)",
        "question": "Find the first name and office of history professor who did not get a Ph.D. degree."
    },
    {
        "answer": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num GROUP BY T1.prof_num HAVING COUNT(*) > 1",
        "context": "CREATE TABLE employee (emp_fname VARCHAR, emp_num VARCHAR); CREATE TABLE CLASS (prof_num VARCHAR)",
        "question": "Find the first names of professors who are teaching more than one class."
    },
    {
        "answer": "SELECT total_copies_sold FROM table_21458142_1 WHERE release_date = \"October 23, 2008\"",
        "context": "CREATE TABLE table_21458142_1 (total_copies_sold VARCHAR, release_date VARCHAR)",
        "question": "How many copies were sold of the game released on october 23, 2008?"
    },
    {
        "answer": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%'",
        "context": "CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR); CREATE TABLE CLASS (class_code VARCHAR, crs_code VARCHAR); CREATE TABLE student (stu_fname VARCHAR, stu_num VARCHAR, stu_lname VARCHAR)",
        "question": "What is the first name of the student whose last name starting with the letter S and is taking ACCT-211 class?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_name_28 WHERE party = \"democratic\" AND district = \"tennessee 5\"",
        "context": "CREATE TABLE table_name_28 (first_elected VARCHAR, party VARCHAR, district VARCHAR)",
        "question": "What is the total number of First Elected, when Party is \"Democratic\", and when District is \"Tennessee 5\"?"
    },
    {
        "answer": "SELECT reason_for_change FROM table_2147588_3 WHERE date_of_successors_formal_installation = \"March 9, 1865\"",
        "context": "CREATE TABLE table_2147588_3 (reason_for_change VARCHAR, date_of_successors_formal_installation VARCHAR)",
        "question": "What change caused a change of staff in March 9, 1865?"
    },
    {
        "answer": "SELECT district FROM table_2147588_4 WHERE successor = \"William B. Campbell (U)\"",
        "context": "CREATE TABLE table_2147588_4 (district VARCHAR, successor VARCHAR)",
        "question": "When william b. campbell (u) is the successor what is the district?"
    },
    {
        "answer": "SELECT date_successor_seated FROM table_2147588_4 WHERE vacator = \"James Brooks (D)\"",
        "context": "CREATE TABLE table_2147588_4 (date_successor_seated VARCHAR, vacator VARCHAR)",
        "question": "When james brooks (d) is the vacator what is the date the successor was seated?"
    },
    {
        "answer": "SELECT AVG(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = \"AIB\"",
        "context": "CREATE TABLE player (Points INTEGER, Club_ID VARCHAR); CREATE TABLE club (Club_ID VARCHAR, name VARCHAR)",
        "question": "What is the average points of players from club with name \"AIB\"."
    },
    {
        "answer": "SELECT season FROM table_name_92 WHERE division_two = \"fownhope reserves\"",
        "context": "CREATE TABLE table_name_92 (season VARCHAR, division_two VARCHAR)",
        "question": "Which Season was the Division Two Fownhope Reserves champions?"
    },
    {
        "answer": "SELECT launch_date__utc_ FROM table_2150068_1 WHERE usage = \"ado\" AND mass_kg_ = \"4\" AND diameter_m_ = \"3\"",
        "context": "CREATE TABLE table_2150068_1 (launch_date__utc_ VARCHAR, diameter_m_ VARCHAR, usage VARCHAR, mass_kg_ VARCHAR)",
        "question": "What was the launch date for the sattelite with ado that was 4 kg and 3 meters in diameter?"
    },
    {
        "answer": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type = 'Friendly'",
        "context": "CREATE TABLE competition (country VARCHAR, competition_type VARCHAR)",
        "question": "Find the countries that have never participated in any competition with Friendly type."
    },
    {
        "answer": "SELECT place FROM table_name_17 WHERE country = \"united states\" AND score = 67 - 71 = 138",
        "context": "CREATE TABLE table_name_17 (place VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "Name the Place which has a Score of 67-71=138, united states?"
    },
    {
        "answer": "SELECT song_title FROM table_21500850_1 WHERE genre = \"Rock\" AND original_game = \"Guitar Hero\" AND artist = \"Queens of the Stone Age\"",
        "context": "CREATE TABLE table_21500850_1 (song_title VARCHAR, artist VARCHAR, genre VARCHAR, original_game VARCHAR)",
        "question": "What is every song title for the rock genre and Guitar Hero as original game and the artist is Queens of the Stone Age?"
    },
    {
        "answer": "SELECT SUM(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2",
        "context": "CREATE TABLE furniture (market_rate INTEGER)",
        "question": "find the total market rate of the furnitures that have the top 2 market shares."
    },
    {
        "answer": "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID WHERE t2.Price_in_Dollar < (SELECT MAX(Price_in_Dollar) FROM furniture_manufacte)",
        "context": "CREATE TABLE furniture_manufacte (Furniture_ID VARCHAR, Price_in_Dollar INTEGER); CREATE TABLE furniture (name VARCHAR, Furniture_ID VARCHAR); CREATE TABLE furniture_manufacte (Price_in_Dollar INTEGER)",
        "question": "Find the names of furnitures whose prices are lower than the highest price."
    },
    {
        "answer": "SELECT winner FROM table_name_19 WHERE year = 2003",
        "context": "CREATE TABLE table_name_19 (winner VARCHAR, year VARCHAR)",
        "question": "Who won in 2003?"
    },
    {
        "answer": "SELECT week__number FROM table_21501564_1 WHERE original_artist = \"Sara Bareilles\"",
        "context": "CREATE TABLE table_21501564_1 (week__number VARCHAR, original_artist VARCHAR)",
        "question": "What week #(s featured sara bareilles as the original artist?"
    },
    {
        "answer": "SELECT t1.manufacturer_id, t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1",
        "context": "CREATE TABLE manufacturer (manufacturer_id VARCHAR, num_of_shops VARCHAR); CREATE TABLE furniture_manufacte (manufacturer_id VARCHAR, Price_in_Dollar VARCHAR)",
        "question": "Find the id and number of shops for the company that produces the most expensive furniture."
    },
    {
        "answer": "SELECT original_artist FROM table_21501565_1 WHERE order__number = \"7\" AND theme = \"Motown\"",
        "context": "CREATE TABLE table_21501565_1 (original_artist VARCHAR, order__number VARCHAR, theme VARCHAR)",
        "question": "With order number 7 and the theme is Motown, who were the original artists?"
    },
    {
        "answer": "SELECT COUNT(*), t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id GROUP BY t1.manufacturer_id",
        "context": "CREATE TABLE furniture_manufacte (manufacturer_id VARCHAR); CREATE TABLE manufacturer (name VARCHAR, manufacturer_id VARCHAR)",
        "question": "Find the number of funiture types produced by each manufacturer as well as the company names."
    },
    {
        "answer": "SELECT Market_Rate, name FROM furniture WHERE NOT Furniture_ID IN (SELECT Furniture_ID FROM furniture_manufacte)",
        "context": "CREATE TABLE furniture (Market_Rate VARCHAR, name VARCHAR, Furniture_ID VARCHAR); CREATE TABLE furniture_manufacte (Market_Rate VARCHAR, name VARCHAR, Furniture_ID VARCHAR)",
        "question": "Find the market shares and names of furnitures which no any company is producing in our records."
    },
    {
        "answer": "SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id WHERE t1.num_of_component < 6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id WHERE t1.num_of_component > 10",
        "context": "CREATE TABLE furniture_manufacte (Furniture_ID VARCHAR, manufacturer_id VARCHAR); CREATE TABLE manufacturer (name VARCHAR, manufacturer_id VARCHAR); CREATE TABLE furniture (Furniture_ID VARCHAR, num_of_component INTEGER)",
        "question": "Find the name of the company that produces both furnitures with less than 6 components and furnitures with more than 10 components."
    },
    {
        "answer": "SELECT year FROM table_name_25 WHERE type = \"grand prix\" AND engine = \"i8\" AND displacement_cc = \"1500\"",
        "context": "CREATE TABLE table_name_25 (year VARCHAR, displacement_cc VARCHAR, type VARCHAR, engine VARCHAR)",
        "question": "What year was the Grand Prix with an i8 engine and a cc displacement of 1500?"
    },
    {
        "answer": "SELECT T1.first_name, T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
        "context": "CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR); CREATE TABLE employees (first_name VARCHAR, department_id VARCHAR)",
        "question": "Display the first name and department name for each employee."
    },
    {
        "answer": "SELECT COUNT(year_s__won) FROM table_name_95 WHERE player = \"justin leonard\" AND to_par < 9",
        "context": "CREATE TABLE table_name_95 (year_s__won VARCHAR, player VARCHAR, to_par VARCHAR)",
        "question": "What is the total number of years won by Justin Leonard with a to par under 9?"
    },
    {
        "answer": "SELECT date__opening_ FROM table_name_47 WHERE opening_film = \"another myanmar, mae sot\"",
        "context": "CREATE TABLE table_name_47 (date__opening_ VARCHAR, opening_film VARCHAR)",
        "question": "What is Date (Opening), when Opening Film is \"Another Myanmar, Mae Sot\"?"
    },
    {
        "answer": "SELECT first_name, last_name, salary FROM employees WHERE commission_pct = \"null\"",
        "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, salary VARCHAR, commission_pct VARCHAR)",
        "question": "What are the full name (first and last name) and salary for all employees who does not have any value for commission?"
    },
    {
        "answer": "SELECT COUNT(earnings_per_share__) AS \u00a2_ FROM table_name_38 WHERE net_profit__us_$m_ > 66 AND year_to_april < 2010",
        "context": "CREATE TABLE table_name_38 (earnings_per_share__ VARCHAR, net_profit__us_$m_ VARCHAR, year_to_april VARCHAR)",
        "question": "Name the number of Earnings per share (\u00a2) which has a Net profit (US $m) larger than 66, and a Year to April smaller than 2010?"
    },
    {
        "answer": "SELECT COUNT(ebit__us_) AS $m_ FROM table_name_35 WHERE revenue__us_$million_ > 434.8 AND net_profit__us_$m_ > 96.4",
        "context": "CREATE TABLE table_name_35 (ebit__us_ VARCHAR, revenue__us_$million_ VARCHAR, net_profit__us_$m_ VARCHAR)",
        "question": "COunt the EBIT (US $m) which has a Revenue (US $million) larger than 434.8 and a Net profit (US $m) larger than 96.4?"
    },
    {
        "answer": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC",
        "context": "CREATE TABLE employees (salary VARCHAR, first_name VARCHAR)",
        "question": "display all the information for all employees who have the letters D or S in their first name and also arrange the result in descending order by salary."
    },
    {
        "answer": "SELECT job_title, max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000",
        "context": "CREATE TABLE jobs (job_title VARCHAR, max_salary INTEGER, min_salary VARCHAR)",
        "question": "display job Title, the difference between minimum and maximum salaries for those jobs which max salary within the range 12000 to 18000."
    },
    {
        "answer": "SELECT MIN(last_cf) FROM table_name_90 WHERE cf_appearances = 2 AND cup_wins = 0 AND cf_wins < 0",
        "context": "CREATE TABLE table_name_90 (last_cf INTEGER, cf_wins VARCHAR, cf_appearances VARCHAR, cup_wins VARCHAR)",
        "question": "What is the lowest number of last cfs of the team with 2 cf appearances, 0 cup wins, and less than 0 cf wins?"
    },
    {
        "answer": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10",
        "context": "CREATE TABLE employees (department_id VARCHAR, commission_pct VARCHAR)",
        "question": "display those departments where more than ten employees work who got a commission percentage."
    },
    {
        "answer": "SELECT population__millions, _2011_ FROM table_2155836_1 WHERE gdp__nominal___billions_usd_ = \"4\"",
        "context": "CREATE TABLE table_2155836_1 (population__millions VARCHAR, _2011_ VARCHAR, gdp__nominal___billions_usd_ VARCHAR)",
        "question": "What is the population in millions for 2011 where the GDP (nominal) (billions USD) is 4? "
    },
    {
        "answer": "SELECT T1.employee_id, T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id",
        "context": "CREATE TABLE countries (country_name VARCHAR, country_id VARCHAR); CREATE TABLE departments (department_id VARCHAR, location_id VARCHAR); CREATE TABLE locations (location_id VARCHAR, country_id VARCHAR); CREATE TABLE employees (employee_id VARCHAR, department_id VARCHAR)",
        "question": "Find employee with ID and name of the country presently where (s)he is working."
    },
    {
        "answer": "SELECT MIN(gdp__ppp___usd), _per_capita_ FROM table_2155836_1 WHERE country = \"Algeria\"",
        "context": "CREATE TABLE table_2155836_1 (_per_capita_ VARCHAR, gdp__ppp___usd INTEGER, country VARCHAR)",
        "question": "What is the GDP (PPP) (USD, per capita) for Algeria? "
    },
    {
        "answer": "SELECT T2.department_name, COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name",
        "context": "CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR); CREATE TABLE employees (department_id VARCHAR)",
        "question": "display the department name and number of employees in each of the department."
    },
    {
        "answer": "SELECT score_points FROM table_name_9 WHERE event = \"og beijing\" AND rank_points = \"olympic gold medalist\"",
        "context": "CREATE TABLE table_name_9 (score_points VARCHAR, event VARCHAR, rank_points VARCHAR)",
        "question": "Which Score points has an Event of og beijing, and Rank points of olympic gold medalist?"
    },
    {
        "answer": "SELECT rank_points FROM table_name_42 WHERE score_points = \"olympic silver medalist\"",
        "context": "CREATE TABLE table_name_42 (rank_points VARCHAR, score_points VARCHAR)",
        "question": "Which Rank points has a Score points of olympic silver medalist?"
    },
    {
        "answer": "SELECT first_name, last_name FROM employees WHERE salary > (SELECT salary FROM employees WHERE employee_id = 163)",
        "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, salary INTEGER, employee_id VARCHAR)",
        "question": "What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is 163?"
    },
    {
        "answer": "SELECT score_points FROM table_name_27 WHERE event = \"wc milan\" AND total = \"23\"",
        "context": "CREATE TABLE table_name_27 (score_points VARCHAR, event VARCHAR, total VARCHAR)",
        "question": "Name Event of wc milan and a Total of 23?"
    },
    {
        "answer": "SELECT employee_id, salary FROM employees WHERE manager_id = (SELECT employee_id FROM employees WHERE first_name = 'Payam')",
        "context": "CREATE TABLE employees (employee_id VARCHAR, salary VARCHAR, manager_id VARCHAR, first_name VARCHAR)",
        "question": "display the employee id and salary of all employees who report to Payam (first name)."
    },
    {
        "answer": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id",
        "context": "CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR); CREATE TABLE employees (department_id VARCHAR)",
        "question": "find the name of all departments that do actually have one or more employees assigned to them."
    },
    {
        "answer": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T1.employee_id = T2.manager_id",
        "context": "CREATE TABLE departments (department_id VARCHAR, manager_id VARCHAR); CREATE TABLE employees (department_id VARCHAR, employee_id VARCHAR)",
        "question": "get the details of employees who manage a department."
    },
    {
        "answer": "SELECT T1.employee_id, T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.department_id = 80",
        "context": "CREATE TABLE jobs (job_title VARCHAR, job_id VARCHAR); CREATE TABLE employees (employee_id VARCHAR, job_id VARCHAR, department_id VARCHAR)",
        "question": "display the employee ID and job name for all those jobs in department 80."
    },
    {
        "answer": "SELECT T1.first_name, T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance'",
        "context": "CREATE TABLE departments (department_id VARCHAR, department_name VARCHAR); CREATE TABLE employees (first_name VARCHAR, job_id VARCHAR, department_id VARCHAR)",
        "question": "What is the first name and job id for all employees in the Finance department?"
    },
    {
        "answer": "SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\")",
        "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, hire_date VARCHAR, department_id VARCHAR)",
        "question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara."
    },
    {
        "answer": "SELECT first_name, last_name, hire_date FROM employees WHERE department_id = (SELECT department_id FROM employees WHERE first_name = \"Clara\") AND first_name <> \"Clara\"",
        "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, hire_date VARCHAR, department_id VARCHAR)",
        "question": "display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara excluding Clara."
    },
    {
        "answer": "SELECT employee_id, first_name, last_name FROM employees WHERE department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%T%')",
        "context": "CREATE TABLE employees (employee_id VARCHAR, first_name VARCHAR, last_name VARCHAR, department_id VARCHAR)",
        "question": "display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a \u2019T\u2019."
    },
    {
        "answer": "SELECT employee_id, first_name, last_name, salary FROM employees WHERE salary > (SELECT AVG(salary) FROM employees) AND department_id IN (SELECT department_id FROM employees WHERE first_name LIKE '%J%')",
        "context": "CREATE TABLE employees (employee_id VARCHAR, first_name VARCHAR, last_name VARCHAR, salary INTEGER, department_id VARCHAR)",
        "question": "display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name."
    },
    {
        "answer": "SELECT employee_id, job_id FROM employees WHERE salary < (SELECT MIN(salary) FROM employees WHERE job_id = 'MK_MAN')",
        "context": "CREATE TABLE employees (employee_id VARCHAR, job_id VARCHAR, salary INTEGER)",
        "question": "display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN."
    },
    {
        "answer": "SELECT AVG(wins) FROM table_name_61 WHERE points > 32 AND goal_difference < 23 AND goals_against = 36 AND played < 30",
        "context": "CREATE TABLE table_name_61 (wins INTEGER, played VARCHAR, goals_against VARCHAR, points VARCHAR, goal_difference VARCHAR)",
        "question": "What is the average number of wins for entries with more than 32 points, a goal difference smaller than 23, and a Goals against of 36, and a Played smaller than 30?"
    },
    {
        "answer": "SELECT time FROM table_21578303_2 WHERE stage = \"SS12\"",
        "context": "CREATE TABLE table_21578303_2 (time VARCHAR, stage VARCHAR)",
        "question": "What is the time when ss12 is stage?"
    },
    {
        "answer": "SELECT state__class_ FROM table_2159506_3 WHERE reason_for_change = \"Resigned November 3, 1964\"",
        "context": "CREATE TABLE table_2159506_3 (state__class_ VARCHAR, reason_for_change VARCHAR)",
        "question": "Name the state class for resigned november 3, 1964"
    },
    {
        "answer": "SELECT employee_id, first_name, last_name, job_id FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'PU_MAN')",
        "context": "CREATE TABLE employees (employee_id VARCHAR, first_name VARCHAR, last_name VARCHAR, job_id VARCHAR, salary INTEGER)",
        "question": "display the employee number, name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is PU_MAN."
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name, T2.department_name, T3.city, T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id",
        "context": "CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR, location_id VARCHAR); CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, department_id VARCHAR); CREATE TABLE locations (city VARCHAR, state_province VARCHAR, location_id VARCHAR)",
        "question": "display the first and last name, department, city, and state province for each employee."
    },
    {
        "answer": "SELECT first_name, last_name, salary, department_id, MAX(salary) FROM employees GROUP BY department_id",
        "context": "CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, salary INTEGER, department_id VARCHAR)",
        "question": "display the department ID, full name (first and last name), salary for those employees who is highest salary in every department."
    },
    {
        "answer": "SELECT T1.department_name, T2.city, T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id = T1.location_id",
        "context": "CREATE TABLE locations (city VARCHAR, state_province VARCHAR, location_id VARCHAR); CREATE TABLE departments (department_name VARCHAR, location_id VARCHAR)",
        "question": "display the department name, city, and state province for each department."
    },
    {
        "answer": "SELECT champion FROM table_name_96 WHERE runner_up = \"florian mayer\" AND score = \"7\u20136(6), 4\u20136, 7\u20135\"",
        "context": "CREATE TABLE table_name_96 (champion VARCHAR, runner_up VARCHAR, score VARCHAR)",
        "question": "Which Champion has a Runner-up of florian mayer, and a Score of 7\u20136(6), 4\u20136, 7\u20135?"
    },
    {
        "answer": "SELECT department_name, COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name",
        "context": "CREATE TABLE employees (department_id VARCHAR); CREATE TABLE departments (department_id VARCHAR)",
        "question": "display the department name and number of employees in each of the department."
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name, T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T1.first_name LIKE '%z%'",
        "context": "CREATE TABLE locations (city VARCHAR, location_id VARCHAR); CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, department_id VARCHAR); CREATE TABLE departments (department_id VARCHAR, location_id VARCHAR)",
        "question": "display those employees who contain a letter z to their first name and also display their last name, city."
    },
    {
        "answer": "SELECT vacator FROM table_2159571_1 WHERE date_of_successors_formal_installation = \"August 8, 1960\"",
        "context": "CREATE TABLE table_2159571_1 (vacator VARCHAR, date_of_successors_formal_installation VARCHAR)",
        "question": "Who is every vacator if date of successors formal installation is August 8, 1960?"
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name, T1.employee_id, T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id JOIN countries AS T4 ON T3.country_id = T4.country_id",
        "context": "CREATE TABLE countries (country_name VARCHAR, country_id VARCHAR); CREATE TABLE departments (department_id VARCHAR, location_id VARCHAR); CREATE TABLE locations (location_id VARCHAR, country_id VARCHAR); CREATE TABLE employees (first_name VARCHAR, last_name VARCHAR, employee_id VARCHAR, department_id VARCHAR)",
        "question": "display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working."
    },
    {
        "answer": "SELECT MIN(games_played) FROM table_name_40 WHERE goals_conceded > 25 AND goals_scored > 17 AND position = 7",
        "context": "CREATE TABLE table_name_40 (games_played INTEGER, position VARCHAR, goals_conceded VARCHAR, goals_scored VARCHAR)",
        "question": "What is the lowest number of games played of the club with more than 25 goals conceded, more than 17 goals scored, and a position of 7?"
    },
    {
        "answer": "SELECT first_name, last_name, salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T3.city = 'London'",
        "context": "CREATE TABLE locations (location_id VARCHAR, city VARCHAR); CREATE TABLE employees (department_id VARCHAR); CREATE TABLE departments (department_id VARCHAR, location_id VARCHAR)",
        "question": "display the full name (first and last name), and salary of those employees who working in any department located in London."
    },
    {
        "answer": "SELECT DISTINCT T1.file_size, T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.resolution < 800",
        "context": "CREATE TABLE song (f_id VARCHAR, resolution INTEGER); CREATE TABLE files (file_size VARCHAR, formats VARCHAR, f_id VARCHAR)",
        "question": "List the file size and format for all songs that have resolution lower than 800."
    },
    {
        "answer": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id = T2.f_id ORDER BY T2.duration LIMIT 1",
        "context": "CREATE TABLE files (f_id VARCHAR, duration VARCHAR); CREATE TABLE song (artist_name VARCHAR, f_id VARCHAR)",
        "question": "What is the name of the artist who produced the shortest song?"
    },
    {
        "answer": "SELECT COUNT(vacator) FROM table_2159547_3 WHERE successor = \"Dave E. Satterfield, Jr. (D)\"",
        "context": "CREATE TABLE table_2159547_3 (vacator VARCHAR, successor VARCHAR)",
        "question": "How many people vacated to successor Dave E. Satterfield, Jr. (d)?"
    },
    {
        "answer": "SELECT bolton_wanderers_career FROM table_name_75 WHERE total > 404 AND position = \"fw\" AND apps < 492 AND goals = \"79\"",
        "context": "CREATE TABLE table_name_75 (bolton_wanderers_career VARCHAR, goals VARCHAR, apps VARCHAR, total VARCHAR, position VARCHAR)",
        "question": "Which Bolton Wanderers career has a Total larger than 404, and a Position of fw, and Apps less than 492, and 79 Goals?"
    },
    {
        "answer": "SELECT original_japanese FROM table_2160215_1 WHERE english___manga_uk__ = \"Sean Barrett\"",
        "context": "CREATE TABLE table_2160215_1 (original_japanese VARCHAR, english___manga_uk__ VARCHAR)",
        "question": "Who was the original Japanese cast if Sean Barrett acted on the English (Manga UK) version?"
    },
    {
        "answer": "SELECT f_id FROM files WHERE formats = \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution < 1000",
        "context": "CREATE TABLE song (f_id VARCHAR, formats VARCHAR, resolution INTEGER); CREATE TABLE files (f_id VARCHAR, formats VARCHAR, resolution INTEGER)",
        "question": "Find the id of songs that are available in mp4 format and have resolution lower than 1000."
    },
    {
        "answer": "SELECT AVG(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = \"mp3\" AND T2.resolution < 800",
        "context": "CREATE TABLE files (duration INTEGER, f_id VARCHAR, formats VARCHAR); CREATE TABLE song (f_id VARCHAR, resolution VARCHAR)",
        "question": "What is the average duration of songs that have mp3 format and resolution below 800?"
    },
    {
        "answer": "SELECT COUNT(*), gender FROM artist GROUP BY gender",
        "context": "CREATE TABLE artist (gender VARCHAR)",
        "question": "What is the number of artists for each gender?"
    },
    {
        "answer": "SELECT 1 AS st_leg FROM table_name_98 WHERE team_2 = \"lyon\"",
        "context": "CREATE TABLE table_name_98 (team_2 VARCHAR)",
        "question": "What is the 1st leg with Team 2 Lyon?"
    },
    {
        "answer": "SELECT DISTINCT song_name FROM song WHERE resolution > (SELECT MIN(resolution) FROM song WHERE languages = \"english\")",
        "context": "CREATE TABLE song (song_name VARCHAR, resolution INTEGER, languages VARCHAR)",
        "question": "Find the distinct names of all songs that have a higher resolution than some songs in English."
    },
    {
        "answer": "SELECT T1.artist_name, T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.song_name LIKE \"%love%\"",
        "context": "CREATE TABLE song (artist_name VARCHAR, song_name VARCHAR); CREATE TABLE artist (artist_name VARCHAR, country VARCHAR)",
        "question": "What is the name and country of origin of the artist who released a song that has \"love\" in its title?"
    },
    {
        "answer": "SELECT T1.artist_name, T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"",
        "context": "CREATE TABLE song (artist_name VARCHAR, releasedate VARCHAR); CREATE TABLE artist (artist_name VARCHAR, gender VARCHAR)",
        "question": "List the name and gender for all artists who released songs in March."
    },
    {
        "answer": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages = \"english\"",
        "context": "CREATE TABLE files (f_id VARCHAR, duration VARCHAR); CREATE TABLE song (song_name VARCHAR, f_id VARCHAR); CREATE TABLE song (song_name VARCHAR, languages VARCHAR)",
        "question": "List the names of all songs that have 4 minute duration or are in English."
    },
    {
        "answer": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution < 1000",
        "context": "CREATE TABLE song (song_name VARCHAR, resolution INTEGER); CREATE TABLE song (song_name VARCHAR, f_id VARCHAR); CREATE TABLE files (f_id VARCHAR, formats VARCHAR)",
        "question": "Return the names of songs for which format is mp3 and resolution is below 1000."
    },
    {
        "answer": "SELECT artist_name FROM artist WHERE country = \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = \"english\"",
        "context": "CREATE TABLE song (artist_name VARCHAR, languages VARCHAR); CREATE TABLE artist (artist_name VARCHAR); CREATE TABLE artist (artist_name VARCHAR, country VARCHAR)",
        "question": "Return the names of singers who are from UK and released an English song."
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_21655290_1 WHERE original_title = \"Vinterkyss\"",
        "context": "CREATE TABLE table_21655290_1 (film_title_used_in_nomination VARCHAR, original_title VARCHAR)",
        "question": "Which film title used in nomination has vinterkyss as the original title?"
    },
    {
        "answer": "SELECT MAX(T2.resolution), MIN(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration LIKE \"3:%\"",
        "context": "CREATE TABLE files (f_id VARCHAR, duration VARCHAR); CREATE TABLE song (resolution INTEGER, f_id VARCHAR)",
        "question": "What are the maximum and minimum resolution of songs whose duration is 3 minutes?"
    },
    {
        "answer": "SELECT MAX(T1.duration), MAX(T2.resolution), T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.languages ORDER BY T2.languages",
        "context": "CREATE TABLE song (languages VARCHAR, resolution INTEGER, f_id VARCHAR); CREATE TABLE files (duration INTEGER, f_id VARCHAR)",
        "question": "What are the maximum duration and resolution of songs grouped and ordered by languages?"
    },
    {
        "answer": "SELECT MIN(T1.duration), MIN(T2.rating), T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",
        "context": "CREATE TABLE song (genre_is VARCHAR, rating INTEGER, f_id VARCHAR); CREATE TABLE files (duration INTEGER, f_id VARCHAR)",
        "question": "What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre?"
    },
    {
        "answer": "SELECT T1.artist_name, COUNT(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = \"english\" GROUP BY T2.artist_name HAVING COUNT(*) >= 1",
        "context": "CREATE TABLE song (artist_name VARCHAR, languages VARCHAR); CREATE TABLE artist (artist_name VARCHAR)",
        "question": "Find the names and number of works of all artists who have at least one English songs."
    },
    {
        "answer": "SELECT T1.artist_name, T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.resolution > 900 GROUP BY T2.artist_name HAVING COUNT(*) >= 1",
        "context": "CREATE TABLE song (artist_name VARCHAR, resolution INTEGER); CREATE TABLE artist (artist_name VARCHAR, country VARCHAR)",
        "question": "Find the name and country of origin for all artists who have release at least one song of resolution above 900."
    },
    {
        "answer": "SELECT T1.artist_name, COUNT(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE song (artist_name VARCHAR); CREATE TABLE artist (artist_name VARCHAR)",
        "question": "Find the names and number of works of the three artists who have produced the most songs."
    },
    {
        "answer": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE song (artist_name VARCHAR); CREATE TABLE artist (country VARCHAR, artist_name VARCHAR)",
        "question": "Find the country of origin for the artist who made the least number of songs?"
    },
    {
        "answer": "SELECT song_name FROM song WHERE rating < (SELECT MIN(rating) FROM song WHERE languages = 'english')",
        "context": "CREATE TABLE song (song_name VARCHAR, rating INTEGER, languages VARCHAR)",
        "question": "What are the names of the songs whose rating is below the rating of all songs in English?"
    },
    {
        "answer": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = \"bangla\" GROUP BY T2.artist_name ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE song (artist_name VARCHAR, languages VARCHAR); CREATE TABLE artist (artist_name VARCHAR)",
        "question": "Find the top 3 artists who have the largest number of songs works whose language is Bangla."
    },
    {
        "answer": "SELECT T1.duration, T1.file_size, T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.genre_is = \"pop\" ORDER BY T2.song_name",
        "context": "CREATE TABLE song (f_id VARCHAR, genre_is VARCHAR, song_name VARCHAR); CREATE TABLE files (duration VARCHAR, file_size VARCHAR, formats VARCHAR, f_id VARCHAR)",
        "question": "List the duration, file size and format of songs whose genre is pop, ordered by title?"
    },
    {
        "answer": "SELECT DISTINCT artist_name FROM song WHERE languages = \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 8",
        "context": "CREATE TABLE song (artist_name VARCHAR, languages VARCHAR, rating INTEGER)",
        "question": "Find the names of the artists who have produced English songs but have never received rating higher than 8."
    },
    {
        "answer": "SELECT DISTINCT artist_name FROM artist WHERE country = \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 7",
        "context": "CREATE TABLE artist (artist_name VARCHAR, country VARCHAR, rating INTEGER); CREATE TABLE song (artist_name VARCHAR, country VARCHAR, rating INTEGER)",
        "question": "Find the names of the artists who are from Bangladesh and have never received rating higher than 7."
    },
    {
        "answer": "SELECT T1.name_full, T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE player_college (college_id VARCHAR); CREATE TABLE college (name_full VARCHAR, college_id VARCHAR)",
        "question": "what is the full name and id of the college with the largest number of baseball players?"
    },
    {
        "answer": "SELECT AVG(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'",
        "context": "CREATE TABLE salary (salary INTEGER, team_id VARCHAR); CREATE TABLE team (team_id_br VARCHAR, name VARCHAR)",
        "question": "What is average salary of the players in the team named 'Boston Red Stockings' ?"
    },
    {
        "answer": "SELECT name_first, name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998",
        "context": "CREATE TABLE all_star (player_id VARCHAR); CREATE TABLE player (player_id VARCHAR)",
        "question": "What are first and last names of players participating in all star game in 1998?"
    },
    {
        "answer": "SELECT T1.name_first, T1.name_last, T1.player_id, COUNT(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE player (name_first VARCHAR, name_last VARCHAR, player_id VARCHAR); CREATE TABLE all_star (player_id VARCHAR)",
        "question": "What are the first name, last name and id of the player with the most all star game experiences? Also list the count."
    },
    {
        "answer": "SELECT pop_density__per_km\u00b2_ FROM table_216776_2 WHERE municipal_mayor = \"Boy Quiat\"",
        "context": "CREATE TABLE table_216776_2 (pop_density__per_km\u00b2_ VARCHAR, municipal_mayor VARCHAR)",
        "question": "How many people per km2 are there in the municipality whose mayor is Boy Quiat?"
    },
    {
        "answer": "SELECT population__2011_ FROM table_2168295_1 WHERE headquarters = \"Chittorgarh\"",
        "context": "CREATE TABLE table_2168295_1 (population__2011_ VARCHAR, headquarters VARCHAR)",
        "question": "What is the 2011 population if the headquarters is Chittorgarh?"
    },
    {
        "answer": "SELECT T2.team_id, T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id WHERE T1.year = 2014 GROUP BY T1.team_id ORDER BY AVG(T1.attendance) DESC LIMIT 1",
        "context": "CREATE TABLE team (team_id VARCHAR, rank VARCHAR); CREATE TABLE home_game (team_id VARCHAR, year VARCHAR, attendance INTEGER)",
        "question": "In 2014, what are the id and rank of the team that has the largest average number of attendance?"
    },
    {
        "answer": "SELECT T1.name_first, T1.name_last, T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE player (name_first VARCHAR, name_last VARCHAR, player_id VARCHAR); CREATE TABLE manager_award (player_id VARCHAR)",
        "question": "What are the manager's first name, last name and id who won the most manager award?"
    },
    {
        "answer": "SELECT T1.name_first, T1.name_last, T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE player (name_first VARCHAR, name_last VARCHAR, player_id VARCHAR); CREATE TABLE player_award (player_id VARCHAR)",
        "question": "Which 3 players won the most player awards? List their full name and id."
    },
    {
        "answer": "SELECT _percentage_cut FROM table_21690339_1 WHERE alternative_fuel = \"Fuel oil stocks need only for industry\"",
        "context": "CREATE TABLE table_21690339_1 (_percentage_cut VARCHAR, alternative_fuel VARCHAR)",
        "question": "What was the percent cunt for the nation that had fuel oil stocks need only for industry as their fuel alternative?"
    },
    {
        "answer": "SELECT AVG(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University'",
        "context": "CREATE TABLE player_college (player_id VARCHAR, college_id VARCHAR); CREATE TABLE player (height INTEGER, player_id VARCHAR); CREATE TABLE college (college_id VARCHAR, name_full VARCHAR)",
        "question": "What is the average height of the players from the college named 'Yale University'?"
    },
    {
        "answer": "SELECT T1.name, T1.team_id, MAX(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id",
        "context": "CREATE TABLE salary (salary INTEGER, team_id VARCHAR); CREATE TABLE team (name VARCHAR, team_id VARCHAR)",
        "question": "What is the highest salary among each team? List the team name, id and maximum salary."
    },
    {
        "answer": "SELECT T1.name, T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY AVG(T2.salary) LIMIT 1",
        "context": "CREATE TABLE team (name VARCHAR, team_id VARCHAR); CREATE TABLE salary (team_id VARCHAR, salary INTEGER)",
        "question": "What are the name and id of the team offering the lowest average salary?"
    },
    {
        "answer": "SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year = 1960 INTERSECT SELECT T1.name_first, T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year = 1961",
        "context": "CREATE TABLE player (name_first VARCHAR, name_last VARCHAR); CREATE TABLE player_award (year VARCHAR)",
        "question": "Find the players' first name and last name who won award both in 1960 and in 1961."
    },
    {
        "answer": "SELECT game FROM table_name_77 WHERE road_team = \"syracuse\" AND result = \"109-82\"",
        "context": "CREATE TABLE table_name_77 (game VARCHAR, road_team VARCHAR, result VARCHAR)",
        "question": "What is Game, when Road Team is \"Syracuse\", and when Result is \"109-82\"?"
    },
    {
        "answer": "SELECT COUNT(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2009",
        "context": "CREATE TABLE postseason (team_id_loser VARCHAR, year VARCHAR); CREATE TABLE team (team_id_br VARCHAR, name VARCHAR)",
        "question": "How many times did Boston Red Stockings lose in 2009 postseason?"
    },
    {
        "answer": "SELECT T2.name, T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T1.year = 2008 GROUP BY T1.team_id_winner ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE postseason (team_id_winner VARCHAR, year VARCHAR); CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)",
        "question": "What are the name and id of the team with the most victories in 2008 postseason?"
    },
    {
        "answer": "SELECT COUNT(*), T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year",
        "context": "CREATE TABLE team (team_id_br VARCHAR, name VARCHAR); CREATE TABLE postseason (year VARCHAR, team_id_winner VARCHAR)",
        "question": "What is the number of wins the team Boston Red Stockings got in the postseasons each year in history?"
    },
    {
        "answer": "SELECT COUNT(*) FROM (SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser = T2.team_id_br WHERE T2.name = 'Boston Red Stockings')",
        "context": "CREATE TABLE postseason (team_id_winner VARCHAR, team_id_loser VARCHAR); CREATE TABLE team (team_id_br VARCHAR, name VARCHAR)",
        "question": "What is the total number of postseason games that team Boston Red Stockings participated in?"
    },
    {
        "answer": "SELECT COUNT(destination) FROM table_21716139_1 WHERE frequency = \"Weekly\" AND train_name = \"AC Express\"",
        "context": "CREATE TABLE table_21716139_1 (destination VARCHAR, frequency VARCHAR, train_name VARCHAR)",
        "question": "How many destinations have a weekly frequency and are named AC Express?"
    },
    {
        "answer": "SELECT nationality FROM table_21721351_18 WHERE college_junior_club_team = \"Kitchener Rangers (OHL)\"",
        "context": "CREATE TABLE table_21721351_18 (nationality VARCHAR, college_junior_club_team VARCHAR)",
        "question": "Which nationality is kitchener rangers (ohl) college/junior/club team?"
    },
    {
        "answer": "SELECT COUNT(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2000",
        "context": "CREATE TABLE salary (team_id VARCHAR, year VARCHAR); CREATE TABLE team (team_id_br VARCHAR, name VARCHAR)",
        "question": "How many players were in the team Boston Red Stockings in 2000?"
    },
    {
        "answer": "SELECT runners_up FROM table_name_80 WHERE champions = \"ivan lendl\" AND name_of_tournament = \"seiko super tennis\" AND year < 1990",
        "context": "CREATE TABLE table_name_80 (runners_up VARCHAR, year VARCHAR, champions VARCHAR, name_of_tournament VARCHAR)",
        "question": "What were the Runners-up prior to 1990 when Ivan Lendl was Champion in the Seiko Super Tennis Tournament?"
    },
    {
        "answer": "SELECT salary FROM salary WHERE YEAR = 2010 UNION SELECT salary FROM salary WHERE YEAR = 2001",
        "context": "CREATE TABLE salary (salary VARCHAR, YEAR VARCHAR)",
        "question": "What were all the salary values of players in 2010 and 2001?"
    },
    {
        "answer": "SELECT COUNT(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park'",
        "context": "CREATE TABLE park (park_id VARCHAR, park_name VARCHAR); CREATE TABLE home_game (park_id VARCHAR, year VARCHAR)",
        "question": "How many games were played in park \"Columbia Park\" in 1907?"
    },
    {
        "answer": "SELECT COUNT(maac) FROM table_21756039_1 WHERE ncaa_seed = \"14th\" AND overall = \"20-10\"",
        "context": "CREATE TABLE table_21756039_1 (maac VARCHAR, ncaa_seed VARCHAR, overall VARCHAR)",
        "question": "How many maac are there that have 14th as the ncaa and the overall is 20-10?"
    },
    {
        "answer": "SELECT SUM(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010",
        "context": "CREATE TABLE team (team_id_br VARCHAR, name VARCHAR); CREATE TABLE home_game (attendance INTEGER, team_id VARCHAR, year VARCHAR)",
        "question": "What is the total home game attendance of team Boston Red Stockings from 2000 to 2010?"
    },
    {
        "answer": "SELECT SUM(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first = 'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990",
        "context": "CREATE TABLE salary (salary INTEGER, player_id VARCHAR, year VARCHAR); CREATE TABLE player (player_id VARCHAR, name_first VARCHAR, name_last VARCHAR)",
        "question": "How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total?"
    },
    {
        "answer": "SELECT T2.name_first, T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first, T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'",
        "context": "CREATE TABLE player (name_first VARCHAR, name_last VARCHAR, player_id VARCHAR); CREATE TABLE team (team_id_br VARCHAR, name VARCHAR); CREATE TABLE salary (player_id VARCHAR, team_id VARCHAR, year VARCHAR)",
        "question": "List players' first name and last name who received salary from team Washington Nationals in both 2005 and 2007."
    },
    {
        "answer": "SELECT SUM(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000",
        "context": "CREATE TABLE team (team_id_br VARCHAR, name VARCHAR); CREATE TABLE home_game (games INTEGER, team_id VARCHAR, year VARCHAR)",
        "question": "How many home games did the team Boston Red Stockings play from 1990 to 2000 in total?"
    },
    {
        "answer": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance LIMIT 1",
        "context": "CREATE TABLE home_game (team_id VARCHAR, year VARCHAR, attendance VARCHAR); CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)",
        "question": "Which team had the least number of attendances in home games in 1980?"
    },
    {
        "answer": "SELECT COUNT(driver) FROM table_2175858_1 WHERE laps = \"300\" AND average_speed__mph_ = \"103.594\"",
        "context": "CREATE TABLE table_2175858_1 (driver VARCHAR, laps VARCHAR, average_speed__mph_ VARCHAR)",
        "question": "How many drivers drove 300 laps at average speed of 103.594?"
    },
    {
        "answer": "SELECT miles__km_ FROM table_2175858_1 WHERE average_speed__mph_ = \"116.81\"",
        "context": "CREATE TABLE table_2175858_1 (miles__km_ VARCHAR, average_speed__mph_ VARCHAR)",
        "question": "How many miles were driven with the average speed at 116.81?"
    },
    {
        "answer": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1",
        "context": "CREATE TABLE park (park_name VARCHAR, park_id VARCHAR); CREATE TABLE home_game (park_id VARCHAR, year VARCHAR, attendance VARCHAR)",
        "question": "Which park had most attendances in 2008?"
    },
    {
        "answer": "SELECT season_no FROM table_21781578_2 WHERE directed_by = \"John David Coles\"",
        "context": "CREATE TABLE table_21781578_2 (season_no VARCHAR, directed_by VARCHAR)",
        "question": "What was the season number episode directed by John David Coles?"
    },
    {
        "answer": "SELECT us_viewers__millions_ FROM table_21781578_2 WHERE directed_by = \"Steve Shill\" AND production_code = \"E2102\"",
        "context": "CREATE TABLE table_21781578_2 (us_viewers__millions_ VARCHAR, directed_by VARCHAR, production_code VARCHAR)",
        "question": "What was the number of US Viewers in the episode directed by Steve Shill and having a production code of E2102?"
    },
    {
        "answer": "SELECT COUNT(season_no) FROM table_21781578_2 WHERE us_viewers__millions_ = \"12.30\"",
        "context": "CREATE TABLE table_21781578_2 (season_no VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "What was the number of season number entries that had US Viewers of 12.30 million?"
    },
    {
        "answer": "SELECT T1.id, T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.height > 4000",
        "context": "CREATE TABLE photos (mountain_id VARCHAR); CREATE TABLE mountain (id VARCHAR, name VARCHAR, height INTEGER)",
        "question": "What are the id and name of the photos for mountains?"
    },
    {
        "answer": "SELECT T1.id, T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id GROUP BY T1.id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE mountain (id VARCHAR, name VARCHAR); CREATE TABLE photos (mountain_id VARCHAR)",
        "question": "What are the id and name of the mountains that have at least 2 photos?"
    },
    {
        "answer": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus'",
        "context": "CREATE TABLE photos (camera_lens_id VARCHAR); CREATE TABLE camera_lens (name VARCHAR, id VARCHAR, brand VARCHAR)",
        "question": "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus'?"
    },
    {
        "answer": "SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T1.range = 'Lasta Massif'",
        "context": "CREATE TABLE mountain (id VARCHAR, range VARCHAR); CREATE TABLE photos (mountain_id VARCHAR, camera_lens_id VARCHAR); CREATE TABLE camera_lens (brand VARCHAR, id VARCHAR)",
        "question": "List the brands of lenses that took both a picture of mountains with range 'Toubkal Atlas' and a picture of mountains with range 'Lasta Massif'"
    },
    {
        "answer": "SELECT delegate FROM table_name_96 WHERE placement_in_miss_universe = \"fourth runner-up\" AND hometown = \"makati , rizal\"",
        "context": "CREATE TABLE table_name_96 (delegate VARCHAR, placement_in_miss_universe VARCHAR, hometown VARCHAR)",
        "question": "Which Delegate has a Placement in Miss Universe of fourth runner-up, and a Hometown of makati , rizal?"
    },
    {
        "answer": "SELECT name, prominence FROM mountain EXCEPT SELECT T1.name, T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id = T3.id WHERE T3.brand = 'Sigma'",
        "context": "CREATE TABLE camera_lens (id VARCHAR, brand VARCHAR); CREATE TABLE mountain (name VARCHAR, prominence VARCHAR, id VARCHAR); CREATE TABLE photos (mountain_id VARCHAR, camera_lens_id VARCHAR); CREATE TABLE mountain (name VARCHAR, prominence VARCHAR)",
        "question": "Show the name and prominence of the mountains whose picture is not taken by a lens of brand 'Sigma'."
    },
    {
        "answer": "SELECT T1.name, COUNT(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY COUNT(*)",
        "context": "CREATE TABLE photos (camera_lens_id VARCHAR); CREATE TABLE camera_lens (name VARCHAR, id VARCHAR)",
        "question": "What is the name of each camera lens and the number of photos taken by it? Order the result by the count of photos."
    },
    {
        "answer": "SELECT pick FROM table_name_10 WHERE position = \"dt\" AND round > 1 AND overall < 155 AND year = \"1952\"",
        "context": "CREATE TABLE table_name_10 (pick VARCHAR, year VARCHAR, overall VARCHAR, position VARCHAR, round VARCHAR)",
        "question": "What number was the pick for the position of DT in 1952, after round 1, where the overall was less than 155?"
    },
    {
        "answer": "SELECT tournament FROM table_name_35 WHERE 2012 = \"grand slam tournaments\"",
        "context": "CREATE TABLE table_name_35 (tournament VARCHAR)",
        "question": "What is Tournament, when 2012 is \"Grand Slam Tournaments\"?"
    },
    {
        "answer": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning'",
        "context": "CREATE TABLE channel (name VARCHAR, channel_id VARCHAR); CREATE TABLE broadcast (channel_id VARCHAR, time_of_day VARCHAR)",
        "question": "Find the names of the channels that are broadcast in the morning."
    },
    {
        "answer": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Night'",
        "context": "CREATE TABLE channel (name VARCHAR, channel_id VARCHAR); CREATE TABLE broadcast (channel_id VARCHAR, time_of_day VARCHAR)",
        "question": "what are the names of the channels that broadcast in both morning and night?"
    },
    {
        "answer": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = \"Night\"",
        "context": "CREATE TABLE broadcast (program_id VARCHAR, Time_of_day VARCHAR); CREATE TABLE program (owner VARCHAR, program_id VARCHAR)",
        "question": "find the program owners that have some programs in both morning and night time."
    },
    {
        "answer": "SELECT COUNT(losses) FROM table_name_43 WHERE wins < 12 AND golden_rivers = \"ultima\" AND byes > 2",
        "context": "CREATE TABLE table_name_43 (losses VARCHAR, byes VARCHAR, wins VARCHAR, golden_rivers VARCHAR)",
        "question": "How many losses did the golden rivers of ultima have when wins were less than 12 and byes larger than 2?"
    },
    {
        "answer": "SELECT name FROM program WHERE origin <> 'Beijing'",
        "context": "CREATE TABLE program (name VARCHAR, origin VARCHAR)",
        "question": "find the names of programs whose origin is not in Beijing."
    },
    {
        "answer": "SELECT MIN(_number) FROM table_2182170_1 WHERE car_s_ = \"Chevrolet Monte Carlo\" AND listed_owner_s_ = \"Teresa Earnhardt\" AND driver_s_ = \"Paul Menard\"",
        "context": "CREATE TABLE table_2182170_1 (_number INTEGER, driver_s_ VARCHAR, car_s_ VARCHAR, listed_owner_s_ VARCHAR)",
        "question": "What is the car number for the Chevrolet Monte Carlo that Teresa Earnhardt owns and Paul Menard is her driver?"
    },
    {
        "answer": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id GROUP BY t2.program_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE program (name VARCHAR, program_id VARCHAR); CREATE TABLE broadcast (program_id VARCHAR)",
        "question": "Find the name of the program that is broadcast most frequently."
    },
    {
        "answer": "SELECT result_f___a FROM table_name_87 WHERE league_position = \"1st\" AND date = \"4 january 1994\"",
        "context": "CREATE TABLE table_name_87 (result_f___a VARCHAR, league_position VARCHAR, date VARCHAR)",
        "question": "Name the Result F \u2013 A that has a League position of 1st on  4 january 1994?"
    },
    {
        "answer": "SELECT transcription FROM table_name_11 WHERE english_name = \"march\"",
        "context": "CREATE TABLE table_name_11 (transcription VARCHAR, english_name VARCHAR)",
        "question": "What is the transcription for the English word March?"
    },
    {
        "answer": "SELECT abbr FROM table_name_22 WHERE zodiac_sign = \"capricorn\"",
        "context": "CREATE TABLE table_name_22 (abbr VARCHAR, zodiac_sign VARCHAR)",
        "question": "What is the abbreviation for the sign of Capricorn?"
    },
    {
        "answer": "SELECT COUNT(winnings) FROM table_2182562_2 WHERE avg_finish = \"17.4\"",
        "context": "CREATE TABLE table_2182562_2 (winnings VARCHAR, avg_finish VARCHAR)",
        "question": "How many different amounts of winnings were there for the year when the team had an average finish of 17.4?"
    },
    {
        "answer": "SELECT round FROM table_name_83 WHERE result = \"6\u20137 (6\u20138) , 1\u20136\"",
        "context": "CREATE TABLE table_name_83 (round VARCHAR, result VARCHAR)",
        "question": "What round had a result of 6\u20137 (6\u20138) , 1\u20136?"
    },
    {
        "answer": "SELECT date_of_latest_logon FROM Students WHERE family_name = \"Jaskolski\" OR family_name = \"Langosh\"",
        "context": "CREATE TABLE Students (date_of_latest_logon VARCHAR, family_name VARCHAR)",
        "question": "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?"
    },
    {
        "answer": "SELECT year FROM table_2182562_1 WHERE winnings = \"$281,945\"",
        "context": "CREATE TABLE table_2182562_1 (year VARCHAR, winnings VARCHAR)",
        "question": "What year did the winnings equal $281,945?"
    },
    {
        "answer": "SELECT country FROM table_name_98 WHERE place = \"t8\" AND score = 70 - 67 = 137",
        "context": "CREATE TABLE table_name_98 (country VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "What is Country, when Place is \"T8\", and when Score is \"70-67=137\"?"
    },
    {
        "answer": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = \"operating system\" OR T2.course_name = \"data structure\"",
        "context": "CREATE TABLE Courses (author_id VARCHAR, course_name VARCHAR); CREATE TABLE Course_Authors_and_Tutors (address_line_1 VARCHAR, author_id VARCHAR)",
        "question": "Find the addresses of the course authors who teach the course with name \"operating system\" or \"data structure\"."
    },
    {
        "answer": "SELECT T1.personal_name, T1.family_name, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Courses (author_id VARCHAR); CREATE TABLE Course_Authors_and_Tutors (personal_name VARCHAR, family_name VARCHAR, author_id VARCHAR)",
        "question": "Find the personal name, family name, and author ID of the course author that teaches the most courses."
    },
    {
        "answer": "SELECT T1.address_line_1, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Courses (author_id VARCHAR); CREATE TABLE Course_Authors_and_Tutors (address_line_1 VARCHAR, author_id VARCHAR)",
        "question": "Find the addresses and author IDs of the course authors that teach at least two courses."
    },
    {
        "answer": "SELECT to_par FROM table_name_64 WHERE player = \"philip parkin\"",
        "context": "CREATE TABLE table_name_64 (to_par VARCHAR, player VARCHAR)",
        "question": "What is the to par of Philip Parkin?"
    },
    {
        "answer": "SELECT T1.course_name, T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = \"Computer Science\"",
        "context": "CREATE TABLE Courses (course_name VARCHAR, course_description VARCHAR, subject_id VARCHAR); CREATE TABLE Subjects (subject_id VARCHAR, subject_name VARCHAR)",
        "question": "Find the names and descriptions of courses that belong to the subject named \"Computer Science\"."
    },
    {
        "answer": "SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id",
        "context": "CREATE TABLE Courses (subject_id VARCHAR); CREATE TABLE Subjects (subject_name VARCHAR, subject_id VARCHAR)",
        "question": "Find the subject ID, subject name, and the corresponding number of available courses for each subject."
    },
    {
        "answer": "SELECT T1.subject_id, T2.subject_name, COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*)",
        "context": "CREATE TABLE Courses (subject_id VARCHAR); CREATE TABLE Subjects (subject_name VARCHAR, subject_id VARCHAR)",
        "question": "Find the subject ID, name of subject and the corresponding number of courses for each subject, and sort by the course count in ascending order."
    },
    {
        "answer": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"Spanish\"",
        "context": "CREATE TABLE Student_Course_Enrolment (date_of_enrolment VARCHAR, course_id VARCHAR); CREATE TABLE Courses (course_id VARCHAR, course_name VARCHAR)",
        "question": "What is the date of enrollment of the course named \"Spanish\"?"
    },
    {
        "answer": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)",
        "question": "What is the name of the course that has the most student enrollment?"
    },
    {
        "answer": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) = 1",
        "context": "CREATE TABLE Courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)",
        "question": "What are the names of the courses that have exactly 1 student enrollment?"
    },
    {
        "answer": "SELECT T1.course_description, T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name HAVING COUNT(*) > 2",
        "context": "CREATE TABLE Student_Course_Enrolment (course_id VARCHAR); CREATE TABLE Courses (course_description VARCHAR, course_name VARCHAR, course_id VARCHAR)",
        "question": "What are the descriptions and names of the courses that have student enrollment bigger than 2?"
    },
    {
        "answer": "SELECT T1.course_name, COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name",
        "context": "CREATE TABLE Courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)",
        "question": "What is the name of each course and the corresponding number of student enrollment?"
    },
    {
        "answer": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Pass\"",
        "context": "CREATE TABLE Student_Tests_Taken (registration_id VARCHAR, test_result VARCHAR); CREATE TABLE Student_Course_Enrolment (date_of_enrolment VARCHAR, registration_id VARCHAR)",
        "question": "What are the enrollment dates of all the tests that have result \"Pass\"?"
    },
    {
        "answer": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = \"Fail\"",
        "context": "CREATE TABLE Student_Tests_Taken (registration_id VARCHAR, test_result VARCHAR); CREATE TABLE Student_Course_Enrolment (date_of_completion VARCHAR, registration_id VARCHAR)",
        "question": "What are the completion dates of all the tests that have result \"Fail\"?"
    },
    {
        "answer": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = \"Karson\"",
        "context": "CREATE TABLE Student_Course_Enrolment (date_of_enrolment VARCHAR, date_of_completion VARCHAR, student_id VARCHAR); CREATE TABLE Students (student_id VARCHAR, personal_name VARCHAR)",
        "question": "List the dates of enrollment and completion of the student with personal name \"Karson\"."
    },
    {
        "answer": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = \"Zieme\" AND T2.personal_name = \"Bernie\"",
        "context": "CREATE TABLE Student_Course_Enrolment (date_of_enrolment VARCHAR, date_of_completion VARCHAR, student_id VARCHAR); CREATE TABLE Students (student_id VARCHAR, family_name VARCHAR, personal_name VARCHAR)",
        "question": "List the dates of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\"."
    },
    {
        "answer": "SELECT headquarters_city FROM table_21926985_2 WHERE revenue__$billions__2012_estimate = \"33.3\"",
        "context": "CREATE TABLE table_21926985_2 (headquarters_city VARCHAR, revenue__$billions__2012_estimate VARCHAR)",
        "question": "Where is the company with estimated revenue of 33.3 billion headquartered?"
    },
    {
        "answer": "SELECT T1.student_id, T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR); CREATE TABLE Students (personal_name VARCHAR, student_id VARCHAR)",
        "question": "Find the student ID and personal name of the student with at least two enrollments."
    },
    {
        "answer": "SELECT T1.student_id, T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) <= 2",
        "context": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR); CREATE TABLE Students (middle_name VARCHAR, student_id VARCHAR)",
        "question": "Find the student ID and middle name for all the students with at most two enrollments."
    },
    {
        "answer": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id = T2.student_id",
        "context": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR); CREATE TABLE Students (personal_name VARCHAR); CREATE TABLE Students (personal_name VARCHAR, student_id VARCHAR)",
        "question": "Find the personal names of students not enrolled in any course."
    },
    {
        "answer": "SELECT money___\u00a3__ FROM table_name_54 WHERE score = 72 - 70 - 71 - 72 = 285",
        "context": "CREATE TABLE table_name_54 (money___\u00a3__ VARCHAR, score VARCHAR)",
        "question": "How much money does the player with a 72-70-71-72=285 score have?"
    },
    {
        "answer": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
        "context": "CREATE TABLE Course_Authors_and_Tutors (login_name VARCHAR); CREATE TABLE Students (login_name VARCHAR)",
        "question": "Find the common login name of course authors and students."
    },
    {
        "answer": "SELECT T1.student_id, T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR); CREATE TABLE Students (login_name VARCHAR, student_id VARCHAR)",
        "question": "Find the student ID and login name of the student with the most course enrollments"
    },
    {
        "answer": "SELECT T1.Date_Claim_Made, T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.Claim_id HAVING COUNT(*) > 2 UNION SELECT T1.Date_Claim_Made, T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id WHERE T1.Amount_Claimed = (SELECT MAX(Amount_Claimed) FROM Claims)",
        "context": "CREATE TABLE Settlements (Claim_id VARCHAR); CREATE TABLE Claims (Amount_Claimed INTEGER); CREATE TABLE Claims (Date_Claim_Made VARCHAR, Claim_id VARCHAR, Amount_Claimed INTEGER)",
        "question": "Which claims caused more than 2 settlements or have the maximum claim value? List the date the claim was made and the claim id."
    },
    {
        "answer": "SELECT T1.customer_details, T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.customer_id GROUP BY T1.customer_id HAVING COUNT(*) >= 2 EXCEPT SELECT T1.customer_details, T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.customer_id JOIN Claims AS T3 ON T2.policy_id = T3.policy_id",
        "context": "CREATE TABLE Customers (customer_details VARCHAR, customer_id VARCHAR, Customer_id VARCHAR); CREATE TABLE Customer_Policies (customer_id VARCHAR, policy_id VARCHAR); CREATE TABLE Claims (policy_id VARCHAR)",
        "question": "Which customer had at least 2 policies but did not file any claims? List the customer details and id."
    },
    {
        "answer": "SELECT MAX(no) FROM table_21977704_1 WHERE entrant = \"Autom\u00f3vil Club Argentino\" AND driver = \"Benedicto Campos\"",
        "context": "CREATE TABLE table_21977704_1 (no INTEGER, entrant VARCHAR, driver VARCHAR)",
        "question": "Name the most number for autom\u00f3vil club argentino for benedicto campos"
    },
    {
        "answer": "SELECT team FROM table_name_94 WHERE podiums = \"0\" AND position = \"nc\u2020\"",
        "context": "CREATE TABLE table_name_94 (team VARCHAR, podiums VARCHAR, position VARCHAR)",
        "question": "Which Team has Podiums of 0, and a Position of nc\u2020?"
    },
    {
        "answer": "SELECT wins FROM table_name_99 WHERE team = \"scuderia toro rosso\" AND poles = \"0\" AND races = \"16\"",
        "context": "CREATE TABLE table_name_99 (wins VARCHAR, races VARCHAR, team VARCHAR, poles VARCHAR)",
        "question": "Which Wins has a Team of scuderia toro rosso, Poles of 0, and Races of 16?"
    },
    {
        "answer": "SELECT Date_Claim_Made, Date_Claim_Settled FROM Claims WHERE Amount_Claimed > (SELECT AVG(Amount_Claimed) FROM Claims)",
        "context": "CREATE TABLE Claims (Date_Claim_Made VARCHAR, Date_Claim_Settled VARCHAR, Amount_Claimed INTEGER)",
        "question": "Among all the claims, which claims have a claimed amount larger than the average? List the date the claim was made and the date it was settled."
    },
    {
        "answer": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled <= (SELECT AVG(Amount_Settled) FROM Claims)",
        "context": "CREATE TABLE Claims (Date_Claim_Made VARCHAR, Amount_Settled INTEGER)",
        "question": "Among all the claims, which settlements have a claimed amount that is no more than the average? List the claim start date."
    },
    {
        "answer": "SELECT method FROM table_name_49 WHERE time = \"4:52\"",
        "context": "CREATE TABLE table_name_49 (method VARCHAR, time VARCHAR)",
        "question": "What was the method used when the time was 4:52?"
    },
    {
        "answer": "SELECT T1.claim_id, T1.date_claim_made, COUNT(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Claims (claim_id VARCHAR, date_claim_made VARCHAR); CREATE TABLE Settlements (claim_id VARCHAR)",
        "question": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number."
    },
    {
        "answer": "SELECT COUNT(*), T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1",
        "context": "CREATE TABLE Settlements (claim_id VARCHAR); CREATE TABLE Claims (claim_id VARCHAR, Date_Claim_Settled VARCHAR)",
        "question": "How many settlements were made on the claim with the most recent claim settlement date? List the number and the claim id."
    },
    {
        "answer": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made LIMIT 1",
        "context": "CREATE TABLE Claims (Date_Claim_Made VARCHAR)",
        "question": "Of all the claims, what was the earliest date when any claim was made?"
    },
    {
        "answer": "SELECT nationality FROM table_name_65 WHERE player = \"jani hakanpaa\"",
        "context": "CREATE TABLE table_name_65 (nationality VARCHAR, player VARCHAR)",
        "question": "What is the nationality of player Jani Hakanpaa?"
    },
    {
        "answer": "SELECT T1.customer_details, T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING COUNT(*) > 1",
        "context": "CREATE TABLE Customers (customer_details VARCHAR, customer_id VARCHAR, Customer_id VARCHAR); CREATE TABLE Customer_Policies (Customer_id VARCHAR)",
        "question": "Who are the customers that had more than 1 policy? List the customer details and id."
    },
    {
        "answer": "SELECT league_from FROM table_name_69 WHERE nhl_team = \"atlanta thrashers (from dallas) 6\"",
        "context": "CREATE TABLE table_name_69 (league_from VARCHAR, nhl_team VARCHAR)",
        "question": "From which league is the player chosen by the Atlanta Thrashers (from Dallas) 6?"
    },
    {
        "answer": "SELECT written_by FROM table_21979779_1 WHERE us_viewers__million_ = \"3.07\"",
        "context": "CREATE TABLE table_21979779_1 (written_by VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "who are the writers of the episode that had 3.07 millions of North American spectators?"
    },
    {
        "answer": "SELECT MIN(no) FROM table_21979779_1 WHERE production_code = \"2T7211\"",
        "context": "CREATE TABLE table_21979779_1 (no INTEGER, production_code VARCHAR)",
        "question": "what is the smallest series episode number whose production code is 2t7211?"
    },
    {
        "answer": "SELECT label FROM table_name_53 WHERE country = \"canada\" AND format = \"cd/digital download\"",
        "context": "CREATE TABLE table_name_53 (label VARCHAR, country VARCHAR, format VARCHAR)",
        "question": "Which Label has a Country of canada, and a Format of cd/digital download?"
    },
    {
        "answer": "SELECT original_air_date FROM table_21979779_1 WHERE us_viewers__million_ = \"1.76\"",
        "context": "CREATE TABLE table_21979779_1 (original_air_date VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "when was the premiere of the episode where the amount of North American spectators was 1.76 millions?"
    },
    {
        "answer": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id = T2.customer_id",
        "context": "CREATE TABLE Customer_Policies (customer_id VARCHAR); CREATE TABLE Customers (customer_details VARCHAR, customer_id VARCHAR); CREATE TABLE Customers (customer_details VARCHAR)",
        "question": "List the details of the customers who do not have any policies."
    },
    {
        "answer": "SELECT T1.claim_id, T1.date_claim_made, T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING COUNT(*) = 1",
        "context": "CREATE TABLE Claims (claim_id VARCHAR, date_claim_made VARCHAR, Date_Claim_Settled VARCHAR, Claim_id VARCHAR); CREATE TABLE Settlements (Claim_id VARCHAR)",
        "question": "List the date the claim was made, the date it was settled and the amount settled for all the claims which had exactly one settlement."
    },
    {
        "answer": "SELECT COUNT(title) FROM table_21994729_3 WHERE directed_by = \"Reginald Hudlin\"",
        "context": "CREATE TABLE table_21994729_3 (title VARCHAR, directed_by VARCHAR)",
        "question": "What are all the title directed by reginald hudlin"
    },
    {
        "answer": "SELECT country FROM table_name_94 WHERE catalogue_number_s_ = \"eredv711\"",
        "context": "CREATE TABLE table_name_94 (country VARCHAR, catalogue_number_s_ VARCHAR)",
        "question": "Which Country has a Catalogue number(s) of eredv711?"
    },
    {
        "answer": "SELECT format FROM table_name_23 WHERE label = \"eagle records\" AND catalogue_number_s_ = \"edgcd391\"",
        "context": "CREATE TABLE table_name_23 (format VARCHAR, label VARCHAR, catalogue_number_s_ VARCHAR)",
        "question": "Which Format has a Label of eagle records, and a Catalogue number(s) of edgcd391?"
    },
    {
        "answer": "SELECT T2.name, T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY COUNT(departmentID) LIMIT 1",
        "context": "CREATE TABLE department (head VARCHAR); CREATE TABLE physician (name VARCHAR, position VARCHAR, EmployeeID VARCHAR)",
        "question": "what is the name and position of the head whose department has least number of employees?"
    },
    {
        "answer": "SELECT format FROM table_name_33 WHERE label = \"eagle eye media\" AND catalogue_number_s_ = \"\u2014\" AND country = \"united states\"",
        "context": "CREATE TABLE table_name_33 (format VARCHAR, country VARCHAR, label VARCHAR, catalogue_number_s_ VARCHAR)",
        "question": "Which Format has a Label of eagle eye media, a Catalogue number(s) of \u2014, and a Country of united states?"
    },
    {
        "answer": "SELECT name, phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING COUNT(*) > 1",
        "context": "CREATE TABLE appointment (patient VARCHAR); CREATE TABLE patient (ssn VARCHAR)",
        "question": "what are name and phone number of patients who had more than one appointment?"
    },
    {
        "answer": "SELECT Payment_ID, Date_Payment_Made, Amount_Payment FROM Payments WHERE Payment_Method_Code = 'Visa'",
        "context": "CREATE TABLE Payments (Payment_ID VARCHAR, Date_Payment_Made VARCHAR, Amount_Payment VARCHAR, Payment_Method_Code VARCHAR)",
        "question": "Which Payments were processed with Visa? List the payment Id, the date and the amount."
    },
    {
        "answer": "SELECT label FROM table_name_61 WHERE country = \"united kingdom\" AND date = \"22 september 2008\" AND catalogue_number_s_ = \"eredv711\"",
        "context": "CREATE TABLE table_name_61 (label VARCHAR, catalogue_number_s_ VARCHAR, country VARCHAR, date VARCHAR)",
        "question": "Which Label has a Country of united kingdom, a Date of 22 september 2008, and a Catalogue number(s) of eredv711?"
    },
    {
        "answer": "SELECT T1.name, T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1",
        "context": "CREATE TABLE department (name VARCHAR, DepartmentID VARCHAR); CREATE TABLE affiliated_with (physician VARCHAR, department VARCHAR, PrimaryAffiliation VARCHAR); CREATE TABLE physician (name VARCHAR, EmployeeID VARCHAR)",
        "question": "Find the names of all physicians and their primary affiliated departments' names."
    },
    {
        "answer": "SELECT COUNT(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN = T2.patient JOIN physician AS T3 ON T2.physician = T3.employeeid WHERE T3.name = \"John Dorian\"",
        "context": "CREATE TABLE patient (SSN VARCHAR); CREATE TABLE prescribes (patient VARCHAR, physician VARCHAR); CREATE TABLE physician (employeeid VARCHAR, name VARCHAR)",
        "question": "How many patients' prescriptions are made by physician John Dorian?"
    },
    {
        "answer": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE nurse (name VARCHAR, employeeid VARCHAR); CREATE TABLE appointment (prepnurse VARCHAR)",
        "question": "What is the name of the nurse has the most appointments?"
    },
    {
        "answer": "SELECT T1.name, COUNT(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid",
        "context": "CREATE TABLE patient (PCP VARCHAR); CREATE TABLE physician (name VARCHAR, employeeid VARCHAR)",
        "question": "How many patients do each physician take care of? List their names and number of patients they take care of."
    },
    {
        "answer": "SELECT COUNT(result) FROM table_22020724_1 WHERE title_in_the_original_language = \"Joki\"",
        "context": "CREATE TABLE table_22020724_1 (result VARCHAR, title_in_the_original_language VARCHAR)",
        "question": "What are the results for the film titled 'Joki'?"
    },
    {
        "answer": "SELECT score FROM table_name_13 WHERE champion = \"nacional\" AND venue = \"centenario\" AND runner_up = \"river plate\"",
        "context": "CREATE TABLE table_name_13 (score VARCHAR, runner_up VARCHAR, champion VARCHAR, venue VARCHAR)",
        "question": "What was the score when Nacional was the champion, River Plate was the runner-up, and the venue was Centenario?"
    },
    {
        "answer": "SELECT COUNT(*), T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockcode",
        "context": "CREATE TABLE room (blockfloor VARCHAR, blockcode VARCHAR); CREATE TABLE BLOCK (blockcode VARCHAR, blockfloor VARCHAR)",
        "question": "Find the number of rooms for different block code?"
    },
    {
        "answer": "SELECT outcome FROM table_name_92 WHERE opponent = \"paul-henri mathieu\"",
        "context": "CREATE TABLE table_name_92 (outcome VARCHAR, opponent VARCHAR)",
        "question": "The match against Paul-Henri Mathieu had what outcome?"
    },
    {
        "answer": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name = \"Thesisin\"",
        "context": "CREATE TABLE physician (name VARCHAR, employeeid VARCHAR); CREATE TABLE prescribes (physician VARCHAR, medication VARCHAR); CREATE TABLE medication (code VARCHAR, name VARCHAR)",
        "question": "What is the names of the physicians who prescribe medication Thesisin?"
    },
    {
        "answer": "SELECT DISTINCT T1.name, T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand = \"X\"",
        "context": "CREATE TABLE medication (code VARCHAR, Brand VARCHAR); CREATE TABLE prescribes (physician VARCHAR, medication VARCHAR); CREATE TABLE physician (name VARCHAR, position VARCHAR, employeeid VARCHAR)",
        "question": "Find the name and position of physicians who prescribe some medication whose brand is X?"
    },
    {
        "answer": "SELECT COUNT(*), T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand",
        "context": "CREATE TABLE medication (name VARCHAR, brand VARCHAR, code VARCHAR); CREATE TABLE prescribes (medication VARCHAR)",
        "question": "Find the number of medications prescribed for each brand."
    },
    {
        "answer": "SELECT AVG(pujehun) FROM table_name_10 WHERE measure = \"female enrollment\"",
        "context": "CREATE TABLE table_name_10 (pujehun INTEGER, measure VARCHAR)",
        "question": "What is the average pjehun measured by female enrollment?"
    },
    {
        "answer": "SELECT year__ceremony_ FROM table_22032599_1 WHERE director = \"Jaroslav Vojtek Category:Articles with hCards\"",
        "context": "CREATE TABLE table_22032599_1 (year__ceremony_ VARCHAR, director VARCHAR)",
        "question": "What year did jaroslav vojtek category:articles with hcards Direct?"
    },
    {
        "answer": "SELECT result FROM table_22032599_1 WHERE film_title_used_in_nomination = \"Gypsy\"",
        "context": "CREATE TABLE table_22032599_1 (result VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What was the result for Gypsy?"
    },
    {
        "answer": "SELECT COUNT(film_title_used_in_nomination) FROM table_22032599_1 WHERE director = \"Martin Repka Category:Articles with hCards\"",
        "context": "CREATE TABLE table_22032599_1 (film_title_used_in_nomination VARCHAR, director VARCHAR)",
        "question": "HOw many films did martin repka category:articles with hcards direct?"
    },
    {
        "answer": "SELECT language_s_ FROM table_22034853_1 WHERE film_title_used_in_nomination = \"Late Bloomers\"",
        "context": "CREATE TABLE table_22034853_1 (language_s_ VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What was the language for the movie \"Late Bloomers\"?"
    },
    {
        "answer": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation = 1",
        "context": "CREATE TABLE affiliated_with (department VARCHAR); CREATE TABLE department (name VARCHAR, departmentid VARCHAR)",
        "question": "List the names of departments where some physicians are primarily affiliated with."
    },
    {
        "answer": "SELECT COUNT(film_title_used_in_nomination) FROM table_22034853_1 WHERE original_title = \"Dans la ville blanche\"",
        "context": "CREATE TABLE table_22034853_1 (film_title_used_in_nomination VARCHAR, original_title VARCHAR)",
        "question": "How many films are titled \"Dans la Ville Blanche\"?"
    },
    {
        "answer": "SELECT year__ceremony_ FROM table_name_81 WHERE original_title = \"el tinte de la fama\"",
        "context": "CREATE TABLE table_name_81 (year__ceremony_ VARCHAR, original_title VARCHAR)",
        "question": "What year has a original title of \"el tinte de la fama\"?"
    },
    {
        "answer": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T3.cost > 5000",
        "context": "CREATE TABLE trained_in (physician VARCHAR, treatment VARCHAR); CREATE TABLE physician (name VARCHAR, employeeid VARCHAR); CREATE TABLE procedures (code VARCHAR, cost INTEGER)",
        "question": "Find the physicians who are trained in a procedure that costs more than 5000."
    },
    {
        "answer": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment ORDER BY T3.cost DESC LIMIT 1",
        "context": "CREATE TABLE trained_in (physician VARCHAR, treatment VARCHAR); CREATE TABLE physician (name VARCHAR, employeeid VARCHAR); CREATE TABLE procedures (code VARCHAR, cost VARCHAR)",
        "question": "Find the physician who was trained in the most expensive procedure?"
    },
    {
        "answer": "SELECT AVG(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = \"John Wen\"",
        "context": "CREATE TABLE trained_in (physician VARCHAR, treatment VARCHAR); CREATE TABLE procedures (cost INTEGER, code VARCHAR); CREATE TABLE physician (employeeid VARCHAR, name VARCHAR)",
        "question": "What is the average cost of procedures that physician John Wen was trained in?"
    },
    {
        "answer": "SELECT COUNT(written_by) FROM table_22053239_1 WHERE us_viewers__millions_ = \"5.35\"",
        "context": "CREATE TABLE table_22053239_1 (written_by VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "How many of the writers had 5.35 viewers?"
    },
    {
        "answer": "SELECT name FROM procedures WHERE cost > 1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = \"John Wen\"",
        "context": "CREATE TABLE trained_in (physician VARCHAR, treatment VARCHAR); CREATE TABLE procedures (name VARCHAR, cost INTEGER); CREATE TABLE physician (employeeid VARCHAR, name VARCHAR); CREATE TABLE procedures (name VARCHAR, code VARCHAR)",
        "question": "Find all procedures which cost more than 1000 or which physician John Wen was trained in."
    },
    {
        "answer": "SELECT name FROM procedures WHERE cost > 1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = \"John Wen\"",
        "context": "CREATE TABLE trained_in (physician VARCHAR, treatment VARCHAR); CREATE TABLE procedures (name VARCHAR, cost INTEGER); CREATE TABLE physician (employeeid VARCHAR, name VARCHAR); CREATE TABLE procedures (name VARCHAR, code VARCHAR)",
        "question": "Find the names of all procedures which cost more than 1000 but which physician John Wen was not trained in?"
    },
    {
        "answer": "SELECT name FROM procedures WHERE cost < 5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = \"John Wen\"",
        "context": "CREATE TABLE trained_in (physician VARCHAR, treatment VARCHAR); CREATE TABLE procedures (name VARCHAR, cost INTEGER); CREATE TABLE physician (employeeid VARCHAR, name VARCHAR); CREATE TABLE procedures (name VARCHAR, code VARCHAR)",
        "question": "Find the names of all procedures such that the cost is less than 5000 and physician John Wen was trained in."
    },
    {
        "answer": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Psychiatry'",
        "context": "CREATE TABLE affiliated_with (physician VARCHAR, department VARCHAR); CREATE TABLE department (DepartmentID VARCHAR, name VARCHAR); CREATE TABLE physician (name VARCHAR, EmployeeID VARCHAR)",
        "question": "Find the name of physicians who are affiliated with both Surgery and Psychiatry departments."
    },
    {
        "answer": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'",
        "context": "CREATE TABLE affiliated_with (physician VARCHAR, department VARCHAR); CREATE TABLE department (DepartmentID VARCHAR, name VARCHAR); CREATE TABLE physician (name VARCHAR, EmployeeID VARCHAR)",
        "question": "Find the name of physicians who are affiliated with Surgery or Psychiatry department."
    },
    {
        "answer": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient = T1.SSN JOIN Medication AS T3 ON T2.Medication = T3.Code WHERE T3.name = 'Procrastin-X'",
        "context": "CREATE TABLE Prescribes (Patient VARCHAR, Medication VARCHAR); CREATE TABLE Medication (Code VARCHAR, name VARCHAR); CREATE TABLE patient (name VARCHAR, SSN VARCHAR); CREATE TABLE patient (name VARCHAR)",
        "question": "Find the names of patients who are not using the medication of Procrastin-X."
    },
    {
        "answer": "SELECT director FROM table_22073745_1 WHERE original_title = \"Perl oder Pica\"",
        "context": "CREATE TABLE table_22073745_1 (director VARCHAR, original_title VARCHAR)",
        "question": "Who is the director of the original title perl oder pica?"
    },
    {
        "answer": "SELECT COUNT(*) FROM patient WHERE NOT SSN IN (SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication = T2.Code WHERE T2.name = 'Procrastin-X')",
        "context": "CREATE TABLE Prescribes (patient VARCHAR, Medication VARCHAR); CREATE TABLE patient (SSN VARCHAR); CREATE TABLE Medication (Code VARCHAR, name VARCHAR)",
        "question": "Find the number of patients who are not using the medication of Procrastin-X."
    },
    {
        "answer": "SELECT COUNT(languages) FROM table_22073745_1 WHERE film_title_used_in_nomination = \"Refractaire\"",
        "context": "CREATE TABLE table_22073745_1 (languages VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "How many languages is refractaire as the film title used in nomination?"
    },
    {
        "answer": "SELECT english_translation FROM table_name_23 WHERE lyricist_s_ = \"giorgos moukidis\" AND original_album = \"ena (new edition)\"",
        "context": "CREATE TABLE table_name_23 (english_translation VARCHAR, lyricist_s_ VARCHAR, original_album VARCHAR)",
        "question": "What is English Translation, when Lyricist(s) is \"Giorgos Moukidis\", and when Original Album is \"Ena (New Edition)\""
    },
    {
        "answer": "SELECT tickets_sold___available FROM table_22123920_4 WHERE gross_sales = \"$2,628,457\"",
        "context": "CREATE TABLE table_22123920_4 (tickets_sold___available VARCHAR, gross_sales VARCHAR)",
        "question": "During the period in which gross sales totals for \"The Show Girl Must Go On\" reached $2,628,457, what did the numbers show for tickets sold/ available at the box office? "
    },
    {
        "answer": "SELECT time FROM table_22098274_1 WHERE site = \"USF Softball Field \u2022 Tampa, FL\" AND result = \"W4-0\"",
        "context": "CREATE TABLE table_22098274_1 (time VARCHAR, site VARCHAR, result VARCHAR)",
        "question": "At what time is the site usf softball field \u2022 tampa, fl and w4-0 is the result?"
    },
    {
        "answer": "SELECT city___state FROM table_name_45 WHERE winner = \"darren hossack\" AND circuit = \"phillip island grand prix circuit\"",
        "context": "CREATE TABLE table_name_45 (city___state VARCHAR, winner VARCHAR, circuit VARCHAR)",
        "question": "What was the city for the winner Darren Hossack at the circuit of phillip island grand prix circuit?"
    },
    {
        "answer": "SELECT T1.firstname, T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = \"OTHA\" AND T2.lastname = \"MOYER\"",
        "context": "CREATE TABLE list (firstname VARCHAR, lastname VARCHAR, classroom VARCHAR); CREATE TABLE teachers (classroom VARCHAR, firstname VARCHAR, lastname VARCHAR)",
        "question": "Find all students taught by OTHA MOYER. Output the first and last names of the students."
    },
    {
        "answer": "SELECT COUNT(max_speed__mph_) FROM table_221315_3 WHERE usaf_space_flights = 1 AND total_flights = 34",
        "context": "CREATE TABLE table_221315_3 (max_speed__mph_ VARCHAR, usaf_space_flights VARCHAR, total_flights VARCHAR)",
        "question": "How many numbers were recorded under max speed for 1 USAF space flight and total flights 34?"
    },
    {
        "answer": "SELECT T2.firstname, T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = \"EVELINA\" AND T1.lastname = \"BROMLEY\"",
        "context": "CREATE TABLE teachers (firstname VARCHAR, lastname VARCHAR, classroom VARCHAR); CREATE TABLE list (classroom VARCHAR, firstname VARCHAR, lastname VARCHAR)",
        "question": "Find the first and last name of all the teachers that teach EVELINA BROMLEY."
    },
    {
        "answer": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = \"GELL\" AND T1.lastname = \"TAMI\"",
        "context": "CREATE TABLE teachers (lastname VARCHAR, classroom VARCHAR); CREATE TABLE list (classroom VARCHAR, firstname VARCHAR, lastname VARCHAR)",
        "question": "Find the last names of all the teachers that teach GELL TAMI."
    },
    {
        "answer": "SELECT COUNT(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = \"LORIA\" AND T2.lastname = \"ONDERSMA\"",
        "context": "CREATE TABLE list (classroom VARCHAR); CREATE TABLE teachers (classroom VARCHAR, firstname VARCHAR, lastname VARCHAR)",
        "question": "How many students does LORIA ONDERSMA teaches?"
    },
    {
        "answer": "SELECT COUNT(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = \"TARRING\" AND T2.lastname = \"LEIA\"",
        "context": "CREATE TABLE list (classroom VARCHAR); CREATE TABLE teachers (classroom VARCHAR, firstname VARCHAR, lastname VARCHAR)",
        "question": "Find the number of students taught by TARRING LEIA."
    },
    {
        "answer": "SELECT province_of_1936 FROM table_221375_1 WHERE district = \"Viana do Castelo\"",
        "context": "CREATE TABLE table_221375_1 (province_of_1936 VARCHAR, district VARCHAR)",
        "question": "Name province of 1936  viana do castelo"
    },
    {
        "answer": "SELECT COUNT(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = \"MADLOCK\" AND T1.lastname = \"RAY\"",
        "context": "CREATE TABLE teachers (classroom VARCHAR); CREATE TABLE list (classroom VARCHAR, firstname VARCHAR, lastname VARCHAR)",
        "question": "How many teachers does the student named MADLOCK RAY have?"
    },
    {
        "answer": "SELECT DISTINCT T1.firstname, T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 1 EXCEPT SELECT T1.firstname, T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = \"OTHA\" AND T2.lastname = \"MOYER\"",
        "context": "CREATE TABLE list (firstname VARCHAR, lastname VARCHAR, classroom VARCHAR, grade VARCHAR); CREATE TABLE teachers (classroom VARCHAR, firstname VARCHAR, lastname VARCHAR)",
        "question": "Find all first-grade students who are NOT taught by OTHA MOYER. Report their first and last names."
    },
    {
        "answer": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 3 AND T2.firstname <> \"COVIN\" AND T2.lastname <> \"JEROME\"",
        "context": "CREATE TABLE list (lastname VARCHAR, classroom VARCHAR, grade VARCHAR); CREATE TABLE teachers (classroom VARCHAR, lastname VARCHAR, firstname VARCHAR)",
        "question": "Find the last names of the students in third grade that are not taught by COVIN JEROME."
    },
    {
        "answer": "SELECT MIN(sheep_and_goats) FROM table_name_42 WHERE year > 1931 AND cows < 2518 AND total_horses > 2604.8",
        "context": "CREATE TABLE table_name_42 (sheep_and_goats INTEGER, total_horses VARCHAR, year VARCHAR, cows VARCHAR)",
        "question": "What is the lowest number of sheep and goats after 1931, with fewer than 2518 cows and more than 2604.8 horses?"
    },
    {
        "answer": "SELECT MIN(total_horses) FROM table_name_65 WHERE total_cattle < 6274.1 AND oxen < 156.5 AND bulls = \"40.0\" AND cows < 3377",
        "context": "CREATE TABLE table_name_65 (total_horses INTEGER, cows VARCHAR, bulls VARCHAR, total_cattle VARCHAR, oxen VARCHAR)",
        "question": "What was the lowest total number of horses that has a total cattle smaller than 6274.1, and a oxen smaller than 156.5, and a bulls of 40.0, and fewer than 3377 cows?"
    },
    {
        "answer": "SELECT T2.firstname, T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname, T2.lastname ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE list (classroom VARCHAR); CREATE TABLE teachers (firstname VARCHAR, lastname VARCHAR, classroom VARCHAR)",
        "question": "Find the name of the teacher who teaches the largest number of students."
    },
    {
        "answer": "SELECT partial_thromboplastin_time FROM table_221653_1 WHERE condition = \"Factor X deficiency as seen in amyloid purpura\"",
        "context": "CREATE TABLE table_221653_1 (partial_thromboplastin_time VARCHAR, condition VARCHAR)",
        "question": "What is the partial thromboplastin time when the condition  factor x deficiency as seen in amyloid purpura?"
    },
    {
        "answer": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE company (Headquarters VARCHAR)",
        "question": "Show the most common headquarter for companies."
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_93 WHERE player = \"wayne grady\"",
        "context": "CREATE TABLE table_name_93 (total INTEGER, player VARCHAR)",
        "question": "What is Wayne Grady's total?"
    },
    {
        "answer": "SELECT player FROM table_name_89 WHERE finish = \"t66\"",
        "context": "CREATE TABLE table_name_89 (player VARCHAR, finish VARCHAR)",
        "question": "Who has a finish of t66?"
    },
    {
        "answer": "SELECT T3.Name, T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID",
        "context": "CREATE TABLE company (Name VARCHAR, Company_ID VARCHAR); CREATE TABLE employment (People_ID VARCHAR, Company_ID VARCHAR); CREATE TABLE people (Name VARCHAR, People_ID VARCHAR)",
        "question": "Show the names of companies and of employees."
    },
    {
        "answer": "SELECT T3.Name, T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID ORDER BY T1.Year_working",
        "context": "CREATE TABLE people (Name VARCHAR, People_ID VARCHAR); CREATE TABLE company (Name VARCHAR, Company_ID VARCHAR); CREATE TABLE employment (People_ID VARCHAR, Company_ID VARCHAR, Year_working VARCHAR)",
        "question": "Show names of companies and that of employees in descending order of number of years working for that employee."
    },
    {
        "answer": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T3.Sales_in_Billion > 200",
        "context": "CREATE TABLE employment (People_ID VARCHAR, Company_ID VARCHAR); CREATE TABLE company (Company_ID VARCHAR, Sales_in_Billion INTEGER); CREATE TABLE people (Name VARCHAR, People_ID VARCHAR)",
        "question": "Show the names of employees that work for companies with sales bigger than 200."
    },
    {
        "answer": "SELECT T3.Name, COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID GROUP BY T3.Name",
        "context": "CREATE TABLE company (Name VARCHAR, Company_ID VARCHAR); CREATE TABLE people (People_ID VARCHAR); CREATE TABLE employment (People_ID VARCHAR, Company_ID VARCHAR)",
        "question": "Show the names of companies and the number of employees they have"
    },
    {
        "answer": "SELECT MIN(scripted_show_ranking) FROM table_22170495_7 WHERE title = \"Epiphany\"",
        "context": "CREATE TABLE table_22170495_7 (scripted_show_ranking INTEGER, title VARCHAR)",
        "question": "The episode titled \"Epiphany\" received what scripted show ranking?"
    },
    {
        "answer": "SELECT venue FROM table_name_16 WHERE against > 14 AND opposing_teams = \"scotland\" AND status = \"five nations\"",
        "context": "CREATE TABLE table_name_16 (venue VARCHAR, status VARCHAR, against VARCHAR, opposing_teams VARCHAR)",
        "question": "What venue has an against over 14, an opposing team of scotland, and a status of five nations?"
    },
    {
        "answer": "SELECT project_management FROM table_name_9 WHERE blogs = \"no\" AND xml_forms_management_and_workflow = \"no\" AND enterprise_search = \"no\" AND social_software = \"no\"",
        "context": "CREATE TABLE table_name_9 (project_management VARCHAR, social_software VARCHAR, enterprise_search VARCHAR, blogs VARCHAR, xml_forms_management_and_workflow VARCHAR)",
        "question": "WHAT IS THE PM THAT HAS NO BLOGS, NO XML Forms Management and workflow, NO SEARCH, AND NO SOCIAL SOFTWARE?"
    },
    {
        "answer": "SELECT bookmarking, _tagging, _rating_and_comments FROM table_name_1 WHERE list_management = \"no\" AND charting = \"no\" AND web_publishing = \"no\" AND name = \"microsoft exchange server\"",
        "context": "CREATE TABLE table_name_1 (bookmarking VARCHAR, _tagging VARCHAR, _rating_and_comments VARCHAR, name VARCHAR, web_publishing VARCHAR, list_management VARCHAR, charting VARCHAR)",
        "question": "WHAT IS THE BOOKMARKING, TAGGING, RATING AND COMMENTS WITH NO LIST MANAGEMENT, NO CHARTING, NO WEB PUBLISHING, OF MICROSOFT EXCHANGE SERVER?"
    },
    {
        "answer": "SELECT position_in_e4s_ratings_b FROM table_22170495_6 WHERE original_airing_on_channel_4 = \"June 30, 2010\"",
        "context": "CREATE TABLE table_22170495_6 (position_in_e4s_ratings_b VARCHAR, original_airing_on_channel_4 VARCHAR)",
        "question": "What is the position in e4s ratings b when June 30, 2010 is the original airing on channel 4?"
    },
    {
        "answer": "SELECT T1.Title, T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID",
        "context": "CREATE TABLE film (Title VARCHAR, Film_ID VARCHAR); CREATE TABLE film_market_estimation (Type VARCHAR, Film_ID VARCHAR)",
        "question": "Please show the titles of films and the types of market estimations."
    },
    {
        "answer": "SELECT COUNT(position_in_channel_4s_ratings_a) FROM table_22170495_6 WHERE original_airing_on_channel_4 = \"February 24, 2010\"",
        "context": "CREATE TABLE table_22170495_6 (position_in_channel_4s_ratings_a VARCHAR, original_airing_on_channel_4 VARCHAR)",
        "question": "How many position in channel 4s ratings a have February 24, 2010 as the original airing on channel 4?"
    },
    {
        "answer": "SELECT AVG(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T1.Low_Estimate > 10000",
        "context": "CREATE TABLE market (Number_cities INTEGER, Market_ID VARCHAR); CREATE TABLE film_market_estimation (Market_ID VARCHAR, Low_Estimate INTEGER)",
        "question": "What is the average number of cities of markets with low film market estimate bigger than 10000?"
    },
    {
        "answer": "SELECT T2.Country, T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID",
        "context": "CREATE TABLE film_market_estimation (Year VARCHAR, Market_ID VARCHAR); CREATE TABLE market (Country VARCHAR, Market_ID VARCHAR)",
        "question": "Please list the countries and years of film market estimations."
    },
    {
        "answer": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = \"Japan\" ORDER BY T1.Year DESC",
        "context": "CREATE TABLE film_market_estimation (Year VARCHAR, Market_ID VARCHAR); CREATE TABLE market (Market_ID VARCHAR, Country VARCHAR)",
        "question": "Please list the years of film market estimations when the market is in country \"Japan\" in descending order."
    },
    {
        "answer": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID ORDER BY high_estimate DESC LIMIT 1",
        "context": "CREATE TABLE film_market_estimation (Film_ID VARCHAR); CREATE TABLE film (Film_ID VARCHAR)",
        "question": "What is the title of the film that has the highest high market estimation."
    },
    {
        "answer": "SELECT title, director FROM film WHERE NOT film_id IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id = T2.Market_ID WHERE country = 'China')",
        "context": "CREATE TABLE film (title VARCHAR, director VARCHAR, film_id VARCHAR, country VARCHAR); CREATE TABLE market (Market_ID VARCHAR); CREATE TABLE film_market_estimation (market_id VARCHAR)",
        "question": "What are the titles and directors of the films were never presented in China?"
    },
    {
        "answer": "SELECT laps FROM table_2226343_1 WHERE race_time = \"3:31:24\"",
        "context": "CREATE TABLE table_2226343_1 (laps VARCHAR, race_time VARCHAR)",
        "question": "How many laps have a race time of 3:31:24?"
    },
    {
        "answer": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name = \"Paper\"",
        "context": "CREATE TABLE Ref_document_types (document_type_code VARCHAR, document_type_name VARCHAR)",
        "question": "What is the document type code for document type \"Paper\"?"
    },
    {
        "answer": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = \"How to read a book\"",
        "context": "CREATE TABLE Ref_document_types (document_type_name VARCHAR, document_type_code VARCHAR); CREATE TABLE All_documents (document_type_code VARCHAR, document_name VARCHAR)",
        "question": "What is the document type name for the document with name \"How to read a book\"?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_75 WHERE gold < 1 AND silver = 0 AND bronze = 1 AND total < 1",
        "context": "CREATE TABLE table_name_75 (rank INTEGER, total VARCHAR, bronze VARCHAR, gold VARCHAR, silver VARCHAR)",
        "question": "What is the lowest rank with less than 1 gold, 0 silver, 1 bronze, and a total less than 1?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_51 WHERE bronze < 8 AND nation = \"netherlands\" AND rank < 16",
        "context": "CREATE TABLE table_name_51 (total VARCHAR, rank VARCHAR, bronze VARCHAR, nation VARCHAR)",
        "question": "What is the total number for less than 8 bronze, the Netherlands nation, and is ranked less than 16?"
    },
    {
        "answer": "SELECT employee_name, role_code, date_of_birth FROM Employees WHERE employee_Name = 'Armani'",
        "context": "CREATE TABLE Employees (employee_name VARCHAR, role_code VARCHAR, date_of_birth VARCHAR, employee_Name VARCHAR)",
        "question": "Show the name, role code, and date of birth for the employee with name 'Armani'."
    },
    {
        "answer": "SELECT production_code FROM table_2226817_8 WHERE written_by = \"Michael G. Moye\"",
        "context": "CREATE TABLE table_2226817_8 (production_code VARCHAR, written_by VARCHAR)",
        "question": "What are all the production codes of episodes written by Michael G. Moye?"
    },
    {
        "answer": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Employees (role_code VARCHAR)",
        "question": "What is the role code with the largest number of employees?"
    },
    {
        "answer": "SELECT T2.role_name, T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T1.employee_name = \"Ebba\"",
        "context": "CREATE TABLE Employees (role_code VARCHAR, employee_name VARCHAR); CREATE TABLE ROLES (role_name VARCHAR, role_description VARCHAR, role_code VARCHAR)",
        "question": "What is the role name and role description for employee called Ebba?"
    },
    {
        "answer": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = \"Editor\"",
        "context": "CREATE TABLE ROLES (role_code VARCHAR, role_name VARCHAR); CREATE TABLE Employees (employee_name VARCHAR, role_code VARCHAR)",
        "question": "Show the names of employees with role name Editor."
    },
    {
        "answer": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = \"Human Resource\" OR T2.role_name = \"Manager\"",
        "context": "CREATE TABLE Employees (employee_id VARCHAR, role_code VARCHAR); CREATE TABLE ROLES (role_code VARCHAR, role_name VARCHAR)",
        "question": "Show the employee ids for all employees with role name \"Human Resource\" or \"Manager\"."
    },
    {
        "answer": "SELECT MIN(population) FROM table_name_80 WHERE per_capita_income = \"$16,330\"",
        "context": "CREATE TABLE table_name_80 (population INTEGER, per_capita_income VARCHAR)",
        "question": "What is the lowest Population, when Per Capita Income is \"$16,330\"?"
    },
    {
        "answer": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id = T2.document_id JOIN Ref_locations AS T3 ON T2.location_code = T3.location_code WHERE T1.document_name = \"Robin CV\"",
        "context": "CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR); CREATE TABLE All_documents (document_id VARCHAR, document_name VARCHAR); CREATE TABLE Document_locations (document_id VARCHAR, location_code VARCHAR)",
        "question": "Show the location name for document \"Robin CV\"."
    },
    {
        "answer": "SELECT MAX(population) FROM table_name_86 WHERE per_capita_income = \"$17,168\" AND number_of_households > 3 OFFSET 287",
        "context": "CREATE TABLE table_name_86 (population INTEGER, per_capita_income VARCHAR, number_of_households VARCHAR)",
        "question": "What is the highest Population, when Per Capita Income is \"$17,168\", and when Number of Households is greater than 3,287?"
    },
    {
        "answer": "SELECT T1.date_in_location_from, T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Robin CV\"",
        "context": "CREATE TABLE All_documents (document_id VARCHAR, document_name VARCHAR); CREATE TABLE Document_locations (date_in_location_from VARCHAR, date_in_locaton_to VARCHAR, document_id VARCHAR)",
        "question": "What is \"the date in location from\" and \"the date in location to\" for the document with name \"Robin CV\"?"
    },
    {
        "answer": "SELECT alpha_2_code FROM table_222771_1 WHERE alpha_3_code = \"NZL\"",
        "context": "CREATE TABLE table_222771_1 (alpha_2_code VARCHAR, alpha_3_code VARCHAR)",
        "question": "What is the alpha 2  code for the area also known as NZL?"
    },
    {
        "answer": "SELECT iso_3166_2_codes FROM table_222771_1 WHERE english_short_name__upper_lower_case_ = \"South Sudan\"",
        "context": "CREATE TABLE table_222771_1 (iso_3166_2_codes VARCHAR, english_short_name__upper_lower_case_ VARCHAR)",
        "question": "What is the ISO for South Sudan?"
    },
    {
        "answer": "SELECT T2.location_name, T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE Document_locations (location_code VARCHAR); CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR)",
        "question": "Show the location name and code with the least documents."
    },
    {
        "answer": "SELECT T2.employee_name, T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id",
        "context": "CREATE TABLE Employees (employee_name VARCHAR, employee_id VARCHAR); CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR, Destroyed_by_Employee_ID VARCHAR)",
        "question": "What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents?"
    },
    {
        "answer": "SELECT Destruction_Authorised_by_Employee_ID, COUNT(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID",
        "context": "CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR)",
        "question": "Show the id of each employee and the number of document destruction authorised by that employee."
    },
    {
        "answer": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
        "context": "CREATE TABLE Documents_to_be_destroyed (employee_id VARCHAR, Destruction_Authorised_by_Employee_ID VARCHAR); CREATE TABLE Employees (employee_id VARCHAR, Destruction_Authorised_by_Employee_ID VARCHAR)",
        "question": "Show the ids of the employees who don't authorize destruction for any document."
    },
    {
        "answer": "SELECT dates FROM table_22282917_26 WHERE control_site_condition_owner = \"machine shop on Martin Dr.\"",
        "context": "CREATE TABLE table_22282917_26 (dates VARCHAR, control_site_condition_owner VARCHAR)",
        "question": "When is every date that control site condition or owner is machine shop on Martin Dr.?"
    },
    {
        "answer": "SELECT missile_type FROM table_22282917_26 WHERE code_ & _location = \"M-20 Harbor Drive\"",
        "context": "CREATE TABLE table_22282917_26 (missile_type VARCHAR, code_ VARCHAR, _location VARCHAR)",
        "question": "What is every missile type with a code and location of M-20 Harbor Drive?"
    },
    {
        "answer": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
        "context": "CREATE TABLE Documents_to_be_destroyed (Destroyed_by_Employee_ID VARCHAR, Destruction_Authorised_by_Employee_ID VARCHAR)",
        "question": "Show the ids of all employees who have either destroyed a document or made an authorization to do this."
    },
    {
        "answer": "SELECT date FROM table_name_35 WHERE tournament = \"izmir cup\" AND opponent = \"somdev devvarman\"",
        "context": "CREATE TABLE table_name_35 (date VARCHAR, tournament VARCHAR, opponent VARCHAR)",
        "question": "What date was the Izmir Cup in which \u0130lhan played against Somdev Devvarman?"
    },
    {
        "answer": "SELECT code_ & _location FROM table_22282917_26 WHERE launch_site_condition_owner = \"Obliterated\"",
        "context": "CREATE TABLE table_22282917_26 (code_ VARCHAR, _location VARCHAR, launch_site_condition_owner VARCHAR)",
        "question": "What is every code and location where the launch site condition and owner is obliterated?"
    },
    {
        "answer": "SELECT control_site_condition_owner FROM table_22282917_26 WHERE launch_site_condition_owner = \"lakefront office buildings\"",
        "context": "CREATE TABLE table_22282917_26 (control_site_condition_owner VARCHAR, launch_site_condition_owner VARCHAR)",
        "question": "What is every control site condition and owner if launch site condition and owner is Lakefront Office Buildings?"
    },
    {
        "answer": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Bootup Baltimore\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (lname VARCHAR, stuid VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR)",
        "question": "Find the last names of the members of the club \"Bootup Baltimore\"."
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_96 WHERE event = \"100 m hurdles\" AND competition = \"world championships\" AND venue = \"osaka, japan\"",
        "context": "CREATE TABLE table_name_96 (year INTEGER, venue VARCHAR, event VARCHAR, competition VARCHAR)",
        "question": "How many years had a 100 m hurdles event at the world championships in Osaka, Japan?"
    },
    {
        "answer": "SELECT COUNT(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Tennis Club\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE student (stuid VARCHAR)",
        "question": "How many members does the club \"Tennis Club\" has?"
    },
    {
        "answer": "SELECT COUNT(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Pen and Paper Gaming\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE student (stuid VARCHAR)",
        "question": "Find the number of members of club \"Pen and Paper Gaming\"."
    },
    {
        "answer": "SELECT COUNT(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = \"Linda\" AND t3.lname = \"Smith\"",
        "context": "CREATE TABLE student (stuid VARCHAR, fname VARCHAR, lname VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE club (clubid VARCHAR)",
        "question": "How many clubs does \"Linda Smith\" belong to?"
    },
    {
        "answer": "SELECT COUNT(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = \"Tracy\" AND t3.lname = \"Kim\"",
        "context": "CREATE TABLE student (stuid VARCHAR, fname VARCHAR, lname VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE club (clubid VARCHAR)",
        "question": "Find the number of clubs where \"Tracy Kim\" is a member."
    },
    {
        "answer": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Hopkins Student Enterprises\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (lname VARCHAR, stuid VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR)",
        "question": "Who are the members of the club named \"Hopkins Student Enterprises\"? Show the last name."
    },
    {
        "answer": "SELECT t3.fname, t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Hopkins Student Enterprises\" AND t3.sex = \"M\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR, sex VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR)",
        "question": "Find all the male members of club \"Hopkins Student Enterprises\". Show the first name and last name."
    },
    {
        "answer": "SELECT t3.fname, t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Bootup Baltimore\" AND t3.major = \"600\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR, major VARCHAR)",
        "question": "Find all members of \"Bootup Baltimore\" whose major is \"600\". Show the first name and last name."
    },
    {
        "answer": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.major = \"600\" GROUP BY t1.clubname ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE student (stuid VARCHAR, major VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE club (clubname VARCHAR, clubid VARCHAR)",
        "question": "Which club has the most members majoring in \"600\"?"
    },
    {
        "answer": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.sex = \"F\" GROUP BY t1.clubname ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE student (stuid VARCHAR, sex VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE club (clubname VARCHAR, clubid VARCHAR)",
        "question": "Find the name of the club that has the most female students."
    },
    {
        "answer": "SELECT t3.fname, t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Bootup Baltimore\" AND t3.sex = \"F\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR, sex VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR)",
        "question": "Find all the female members of club \"Bootup Baltimore\". Show the first name and last name."
    },
    {
        "answer": "SELECT outcome FROM table_name_89 WHERE date = \"march 20, 1994\"",
        "context": "CREATE TABLE table_name_89 (outcome VARCHAR, date VARCHAR)",
        "question": "What is the outcome on March 20, 1994?"
    },
    {
        "answer": "SELECT t3.fname, t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Bootup Baltimore\" AND t2.position = \"President\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR, position VARCHAR)",
        "question": "What are the first and last name of the president of the club \"Bootup Baltimore\"?"
    },
    {
        "answer": "SELECT t3.fname, t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Hopkins Student Enterprises\" AND t2.position = \"CTO\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR, position VARCHAR)",
        "question": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the first name and last name."
    },
    {
        "answer": "SELECT COUNT(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid WHERE t1.clubname = \"Bootup Baltimore\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE member_of_club (position VARCHAR, clubid VARCHAR)",
        "question": "How many different roles are there in the club \"Bootup Baltimore\"?"
    },
    {
        "answer": "SELECT date FROM table_name_74 WHERE result = \"3-0\" AND competition = \"friendly match\"",
        "context": "CREATE TABLE table_name_74 (date VARCHAR, result VARCHAR, competition VARCHAR)",
        "question": "What date was a friendly match played that ended in a 3-0 score?"
    },
    {
        "answer": "SELECT COUNT(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Bootup Baltimore\" AND t3.age < 18",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (stuid VARCHAR, age VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR)",
        "question": "How many members of club \"Bootup Baltimore\" are younger than 18?"
    },
    {
        "answer": "SELECT COUNT(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Bootup Baltimore\" AND t3.age > 18",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (stuid VARCHAR, age VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR)",
        "question": "How many members of \"Bootup Baltimore\" are older than 18?"
    },
    {
        "answer": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.city_code = \"HOU\"",
        "context": "CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE club (clubname VARCHAR, clubid VARCHAR); CREATE TABLE student (stuid VARCHAR, city_code VARCHAR)",
        "question": "Find the names of the clubs that have at least a member from the city with city code \"HOU\"."
    },
    {
        "answer": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.city_code = \"BAL\"",
        "context": "CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE club (clubname VARCHAR, clubid VARCHAR); CREATE TABLE student (stuid VARCHAR, city_code VARCHAR)",
        "question": "Find the names of all the clubs that have at least a member from the city with city code \"BAL\"."
    },
    {
        "answer": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = \"Davis\" AND t3.lname = \"Steven\"",
        "context": "CREATE TABLE student (stuid VARCHAR, fname VARCHAR, lname VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE club (clubname VARCHAR, clubid VARCHAR)",
        "question": "List the clubs having \"Davis Steven\" as a member."
    },
    {
        "answer": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.advisor = 1121",
        "context": "CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE club (clubname VARCHAR, clubid VARCHAR); CREATE TABLE student (stuid VARCHAR, advisor VARCHAR)",
        "question": "List the clubs that have at least a member with advisor \"1121\"."
    },
    {
        "answer": "SELECT AVG(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Bootup Baltimore\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (age INTEGER, stuid VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR)",
        "question": "What is the average age of the members of the club \"Bootup Baltimore\"?"
    },
    {
        "answer": "SELECT AVG(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = \"Hopkins Student Enterprises\"",
        "context": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR); CREATE TABLE student (age INTEGER, stuid VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR)",
        "question": "Find the average age of members of the club \"Hopkins Student Enterprises\"."
    },
    {
        "answer": "SELECT COUNT(no_in_season) FROM table_22347090_5 WHERE no_in_series = 26",
        "context": "CREATE TABLE table_22347090_5 (no_in_season VARCHAR, no_in_series VARCHAR)",
        "question": "Name the number of number in season for 26"
    },
    {
        "answer": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id WHERE T2.sent_date < '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date > '1989-03-16 18:27:16'",
        "context": "CREATE TABLE grants (grant_amount VARCHAR, grant_end_date INTEGER); CREATE TABLE Grants (grant_amount VARCHAR, grant_id VARCHAR); CREATE TABLE Documents (grant_id VARCHAR, sent_date INTEGER)",
        "question": "What are the distinct grant amount for the grants where the documents were sent before '1986-08-26 20:49:27' and grant were ended after '1989-03-16 18:27:16'?"
    },
    {
        "answer": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id WHERE T2.outcome_code = 'Patent'",
        "context": "CREATE TABLE Project_outcomes (project_id VARCHAR, outcome_code VARCHAR); CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR)",
        "question": "List the project details of the project both producing patent and paper as outcomes."
    },
    {
        "answer": "SELECT SUM(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research'",
        "context": "CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR); CREATE TABLE Grants (organisation_id VARCHAR); CREATE TABLE Organisations (organisation_id VARCHAR, organisation_type VARCHAR)",
        "question": "What is the total grant amount of the organisations described as research?"
    },
    {
        "answer": "SELECT date_from, date_to FROM Project_Staff WHERE project_id IN (SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY COUNT(*) DESC LIMIT 1) UNION SELECT date_from, date_to FROM Project_Staff WHERE role_code = 'leader'",
        "context": "CREATE TABLE Project_Staff (date_from VARCHAR, date_to VARCHAR, project_id VARCHAR, role_code VARCHAR)",
        "question": "List from which date and to which date these staff work: project staff of the project which hires the most staffs"
    },
    {
        "answer": "SELECT T2.organisation_id, T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING SUM(T1.grant_amount) > 6000",
        "context": "CREATE TABLE Grants (organisation_id VARCHAR, grant_amount INTEGER); CREATE TABLE Organisations (organisation_id VARCHAR, organisation_details VARCHAR)",
        "question": "Find the organisation ids and details of the organisations which are involved in"
    },
    {
        "answer": "SELECT T1.organisation_type, T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Research_Staff (employer_organisation_id VARCHAR); CREATE TABLE Organisations (organisation_type VARCHAR, organisation_id VARCHAR)",
        "question": "What is the organisation type and id of the organisation which has the most number of research staff?"
    },
    {
        "answer": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Research_Staff (employer_organisation_id VARCHAR); CREATE TABLE Organisations (organisation_type VARCHAR, organisation_id VARCHAR)",
        "question": "Which organisation type hires most research staff?"
    },
    {
        "answer": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id = T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id = T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type = T4.organisation_type WHERE T2.grant_amount > 5000 AND T4.organisation_type_description = 'Research'",
        "context": "CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR); CREATE TABLE Grants (grant_id VARCHAR, organisation_id VARCHAR, grant_amount VARCHAR); CREATE TABLE Organisations (organisation_id VARCHAR, organisation_type VARCHAR); CREATE TABLE documents (sent_date VARCHAR, grant_id VARCHAR)",
        "question": "Find out the send dates of the documents with the grant amount of more than 5000 were granted by organisation type described"
    },
    {
        "answer": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular' OR T3.grant_amount > 100",
        "context": "CREATE TABLE Documents (response_received_date VARCHAR, document_type_code VARCHAR, grant_id VARCHAR); CREATE TABLE Document_Types (document_type_code VARCHAR, document_description VARCHAR); CREATE TABLE Grants (grant_id VARCHAR, grant_amount VARCHAR)",
        "question": "What are the response received dates for the documents described as 'Regular' or granted with more than 100?"
    },
    {
        "answer": "SELECT project_details FROM Projects WHERE NOT project_id IN (SELECT project_id FROM Project_Staff WHERE role_code = 'researcher')",
        "context": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR, role_code VARCHAR); CREATE TABLE Project_Staff (project_details VARCHAR, project_id VARCHAR, role_code VARCHAR)",
        "question": "List the project details of the projects which did not hire any staff for a researcher role."
    },
    {
        "answer": "SELECT T1.task_details, T1.task_id, T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'omnis' UNION SELECT T1.task_details, T1.task_id, T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.project_id HAVING COUNT(*) > 2",
        "context": "CREATE TABLE Projects (project_id VARCHAR, project_details VARCHAR); CREATE TABLE Project_outcomes (project_id VARCHAR); CREATE TABLE Tasks (task_details VARCHAR, task_id VARCHAR, project_id VARCHAR)",
        "question": "What are the task details, task id and project id for the projects which are detailed as 'omnis' or  have more than 2 outcomes?"
    },
    {
        "answer": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'",
        "context": "CREATE TABLE Research_outcomes (outcome_code VARCHAR, outcome_description VARCHAR); CREATE TABLE Project_outcomes (project_id VARCHAR, outcome_code VARCHAR); CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR)",
        "question": "List the project details of the projects with the research outcome described with the substring 'Published'."
    },
    {
        "answer": "SELECT T1.project_details, T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Project_outcomes (project_id VARCHAR); CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR)",
        "question": "Which project made the most number of outcomes? List the project details and the project id."
    },
    {
        "answer": "SELECT project_details FROM Projects WHERE NOT project_id IN (SELECT project_id FROM Project_outcomes)",
        "context": "CREATE TABLE Project_outcomes (project_details VARCHAR, project_id VARCHAR); CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR)",
        "question": "Which projects have no outcome? List the project details."
    },
    {
        "answer": "SELECT T1.organisation_id, T1.organisation_type, T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Organisations (organisation_id VARCHAR, organisation_type VARCHAR, organisation_details VARCHAR); CREATE TABLE Research_Staff (employer_organisation_id VARCHAR)",
        "question": "Which organisation hired the most number of research staff? List the organisation id, type and detail."
    },
    {
        "answer": "SELECT T1.role_description, T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Project_outcomes (project_id VARCHAR); CREATE TABLE Project_Staff (staff_id VARCHAR, role_code VARCHAR, project_id VARCHAR); CREATE TABLE Staff_Roles (role_description VARCHAR, role_code VARCHAR)",
        "question": "Show the role description and the id of the project staff involved in most number of project outcomes?"
    },
    {
        "answer": "SELECT byzantine_commander FROM table_name_44 WHERE result = \"bulgarian victory\" AND battle = \"siege of lovech\"",
        "context": "CREATE TABLE table_name_44 (byzantine_commander VARCHAR, result VARCHAR, battle VARCHAR)",
        "question": "What is the Byzantine Commander with a Bulgarian Victory at the Siege of Lovech?"
    },
    {
        "answer": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application'",
        "context": "CREATE TABLE Grants (grant_start_date VARCHAR, grant_id VARCHAR); CREATE TABLE Document_Types (document_type_code VARCHAR, document_description VARCHAR); CREATE TABLE Documents (grant_id VARCHAR, document_type_code VARCHAR)",
        "question": "For grants with both documents described as 'Regular' and documents described as 'Initial Application', list its start date."
    },
    {
        "answer": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
        "context": "CREATE TABLE Document_Types (document_type_code VARCHAR, document_description VARCHAR)",
        "question": "Which document type is described with the prefix 'Initial'?"
    },
    {
        "answer": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo'",
        "context": "CREATE TABLE Organisations (organisation_type VARCHAR, organisation_details VARCHAR); CREATE TABLE organisation_Types (organisation_type_description VARCHAR, organisation_type VARCHAR)",
        "question": "Find the organisation type description of the organisation detailed as 'quo'."
    },
    {
        "answer": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_type_description = 'Sponsor' ORDER BY organisation_details",
        "context": "CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR); CREATE TABLE Organisations (organisation_type VARCHAR)",
        "question": "What are all the details of the organisations described as 'Sponsor'? Sort the result in an ascending order."
    },
    {
        "answer": "SELECT bulgarian_commander FROM table_name_41 WHERE battle = \"battle of thessalonica\" AND date = \"autumn 1040\"",
        "context": "CREATE TABLE table_name_41 (bulgarian_commander VARCHAR, battle VARCHAR, date VARCHAR)",
        "question": "What is the Bulgarian Commander in Autumn 1040 at the Battle of Thessalonica?"
    },
    {
        "answer": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint'",
        "context": "CREATE TABLE Project_outcomes (outcome_code VARCHAR, project_id VARCHAR); CREATE TABLE Research_outcomes (outcome_description VARCHAR, outcome_code VARCHAR); CREATE TABLE Projects (project_id VARCHAR, project_details VARCHAR)",
        "question": "What are the result description of the project whose detail is 'sint'?"
    },
    {
        "answer": "SELECT T1.organisation_id, COUNT(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Project_outcomes (project_id VARCHAR); CREATE TABLE Projects (organisation_id VARCHAR, project_id VARCHAR)",
        "question": "List the organisation id with the maximum outcome count, and the count."
    },
    {
        "answer": "SELECT project_details FROM Projects WHERE organisation_id IN (SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "context": "CREATE TABLE Projects (project_details VARCHAR, organisation_id VARCHAR)",
        "question": "List the project details of the projects launched by the organisation"
    },
    {
        "answer": "SELECT written_by FROM table_22380270_1 WHERE us_viewers__millions_ = \"2.15\"",
        "context": "CREATE TABLE table_22380270_1 (written_by VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "Who was the writer for the episode with 2.15 million u.s.viewers?"
    },
    {
        "answer": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code",
        "context": "CREATE TABLE Research_outcomes (outcome_description VARCHAR, outcome_code VARCHAR); CREATE TABLE Project_outcomes (outcome_code VARCHAR)",
        "question": "What are the descriptions of all the project outcomes?"
    },
    {
        "answer": "SELECT player FROM table_22402438_7 WHERE pick__number = 80",
        "context": "CREATE TABLE table_22402438_7 (player VARCHAR, pick__number VARCHAR)",
        "question": "Who is the player with the pick# 80?"
    },
    {
        "answer": "SELECT COUNT(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'",
        "context": "CREATE TABLE PersonFriend (friend VARCHAR, name VARCHAR); CREATE TABLE Person (name VARCHAR)",
        "question": "How many friends does Dan have?"
    },
    {
        "answer": "SELECT COUNT(production_stagemanager) FROM table_22410780_1 WHERE secretary = \"Rachel Hartmann\"",
        "context": "CREATE TABLE table_22410780_1 (production_stagemanager VARCHAR, secretary VARCHAR)",
        "question": "How many production stage managers worked with secretary Rachel Hartmann?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT job) FROM Person",
        "context": "CREATE TABLE Person (job VARCHAR)",
        "question": "How many type of jobs do they have?"
    },
    {
        "answer": "SELECT MAX(points_1) FROM table_name_11 WHERE team = \"atherton collieries\" AND position < 8",
        "context": "CREATE TABLE table_name_11 (points_1 INTEGER, team VARCHAR, position VARCHAR)",
        "question": "Which Points 1 has a Team of atherton collieries, and a Position smaller than 8?"
    },
    {
        "answer": "SELECT province, _community FROM table_22447251_2 WHERE hometown = \"Villa Bison\u00f3\"",
        "context": "CREATE TABLE table_22447251_2 (province VARCHAR, _community VARCHAR, hometown VARCHAR)",
        "question": "Which province is Villa Bison\u00f3 in?"
    },
    {
        "answer": "SELECT T1.name, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' INTERSECT SELECT T1.name, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'",
        "context": "CREATE TABLE Person (name VARCHAR, age VARCHAR); CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)",
        "question": "Find the name and age of the person who is a friend of both Dan and Alice."
    },
    {
        "answer": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30)",
        "context": "CREATE TABLE Person (name VARCHAR, age INTEGER); CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR); CREATE TABLE Person (name VARCHAR)",
        "question": "Find the name of the person who has friends with age above 40 and under age 30?"
    },
    {
        "answer": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age > 40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age < 30)",
        "context": "CREATE TABLE Person (name VARCHAR, age INTEGER); CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR); CREATE TABLE Person (name VARCHAR)",
        "question": "Find the name of the person who has friends with age above 40 but not under age 30?"
    },
    {
        "answer": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.job = 'student'",
        "context": "CREATE TABLE Person (name VARCHAR, job VARCHAR); CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR); CREATE TABLE person (name VARCHAR)",
        "question": "Find the name of the person who has no student friends."
    },
    {
        "answer": "SELECT event FROM table_name_21 WHERE name = \"xu zhilin\"",
        "context": "CREATE TABLE table_name_21 (event VARCHAR, name VARCHAR)",
        "question": "What event had Xu Zhilin competing?"
    },
    {
        "answer": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'",
        "context": "CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR); CREATE TABLE Person (name VARCHAR)",
        "question": "Find the name of persons who are friends with Bob."
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_36 WHERE first = \"antonio pompa-baldi italy\"",
        "context": "CREATE TABLE table_name_36 (year VARCHAR, first VARCHAR)",
        "question": "How many years is Antonio Pompa-Baldi Italy first?"
    },
    {
        "answer": "SELECT SUM(wins) FROM table_name_47 WHERE club = \"abuls smiltene\" AND goals_for < 18",
        "context": "CREATE TABLE table_name_47 (wins INTEGER, club VARCHAR, goals_for VARCHAR)",
        "question": "Can you tell me the sum of Wins that has the Club of abuls smiltene, and the Goals smaller than 18?"
    },
    {
        "answer": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'male' AND T1.job = 'doctor'",
        "context": "CREATE TABLE PersonFriend (friend VARCHAR, name VARCHAR); CREATE TABLE Person (name VARCHAR, job VARCHAR, gender VARCHAR)",
        "question": "Find the male friend of Alice whose job is a doctor?"
    },
    {
        "answer": "SELECT DISTINCT T2.name, T2.friend, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age > (SELECT AVG(age) FROM person)",
        "context": "CREATE TABLE person (age INTEGER); CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR); CREATE TABLE Person (age INTEGER, name VARCHAR)",
        "question": "Who has friends that are older than the average age? Print their friends and their ages as well"
    },
    {
        "answer": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Zach' AND T2.year = (SELECT MAX(YEAR) FROM PersonFriend WHERE name = 'Zach')",
        "context": "CREATE TABLE PersonFriend (friend VARCHAR, name VARCHAR, year VARCHAR); CREATE TABLE PersonFriend (YEAR INTEGER, name VARCHAR); CREATE TABLE Person (age VARCHAR, name VARCHAR)",
        "question": "What is the age of the friend of Zach with longest year relationship?"
    },
    {
        "answer": "SELECT COUNT(date_of_successors_formal_installation) FROM table_224840_3 WHERE successor = \"Aaron Ogden (F)\"",
        "context": "CREATE TABLE table_224840_3 (date_of_successors_formal_installation VARCHAR, successor VARCHAR)",
        "question": "how many times has Aaron Ogden (f), been a successor and has had a formal installation? "
    },
    {
        "answer": "SELECT T1.name, T1.age, T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice' AND T2.year = (SELECT MAX(YEAR) FROM PersonFriend WHERE friend = 'Alice')",
        "context": "CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR, year VARCHAR); CREATE TABLE Person (name VARCHAR, age VARCHAR, job VARCHAR); CREATE TABLE PersonFriend (YEAR INTEGER, friend VARCHAR)",
        "question": "Find the name, age, and job title of persons who are friends with Alice for the longest years."
    },
    {
        "answer": "SELECT nominated_work FROM table_name_68 WHERE year > 2006 AND award = \"drama desk award\" AND category = \"outstanding featured actor in a musical\"",
        "context": "CREATE TABLE table_name_68 (nominated_work VARCHAR, category VARCHAR, year VARCHAR, award VARCHAR)",
        "question": "What was the nominated work after 2006, that was awarded the Drama Desk award and the Outstanding featured actor in a musical?"
    },
    {
        "answer": "SELECT T2.name, AVG(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend GROUP BY T2.name ORDER BY AVG(T1.age) DESC LIMIT 1",
        "context": "CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR); CREATE TABLE Person (age INTEGER, name VARCHAR)",
        "question": "Which person whose friends have the oldest average age?"
    },
    {
        "answer": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
        "context": "CREATE TABLE PersonFriend (name VARCHAR); CREATE TABLE person (name VARCHAR)",
        "question": "Who is the person that has no friend?"
    },
    {
        "answer": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name = T2.name JOIN PersonFriend AS T3 ON T1.friend = T3.name JOIN PersonFriend AS T4 ON T3.friend = T4.name WHERE T2.name = 'Alice' AND T4.name <> 'Alice'",
        "context": "CREATE TABLE PersonFriend (name VARCHAR); CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR); CREATE TABLE Person (name VARCHAR)",
        "question": "Find Alice's friends of friends."
    },
    {
        "answer": "SELECT nominated_work FROM table_name_29 WHERE result = \"nominated\" AND award = \"drama league award\" AND year < 2007",
        "context": "CREATE TABLE table_name_29 (nominated_work VARCHAR, year VARCHAR, result VARCHAR, award VARCHAR)",
        "question": "What was the nominated work, nominated for the drama league award before 2007?"
    },
    {
        "answer": "SELECT COUNT(losses) FROM table_name_51 WHERE south_west_dfl = \"coleraine\" AND against < 891",
        "context": "CREATE TABLE table_name_51 (losses VARCHAR, south_west_dfl VARCHAR, against VARCHAR)",
        "question": "How many Losses have South West DFL of coleraine, and an Against smaller than 891?"
    },
    {
        "answer": "SELECT color_commentator_s_ FROM table_22485543_1 WHERE ice_level_reporters = \"Brian Engblom\"",
        "context": "CREATE TABLE table_22485543_1 (color_commentator_s_ VARCHAR, ice_level_reporters VARCHAR)",
        "question": "Who is the color commentator when brian engblom is ice level reporters?"
    },
    {
        "answer": "SELECT population FROM table_name_8 WHERE area = \"4,575\"",
        "context": "CREATE TABLE table_name_8 (population VARCHAR, area VARCHAR)",
        "question": "What is the population when the area is 4,575?"
    },
    {
        "answer": "SELECT gdp_per_capita FROM table_2249029_1 WHERE gdp_world_rank = \"131\"",
        "context": "CREATE TABLE table_2249029_1 (gdp_per_capita VARCHAR, gdp_world_rank VARCHAR)",
        "question": "Name the gdp per capita for world rank being 131"
    },
    {
        "answer": "SELECT document_name, access_count FROM documents ORDER BY document_name",
        "context": "CREATE TABLE documents (document_name VARCHAR, access_count VARCHAR)",
        "question": "Find the name and access counts of all documents, in alphabetic order of the document name."
    },
    {
        "answer": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING COUNT(*) > 4",
        "context": "CREATE TABLE documents (document_type_code VARCHAR)",
        "question": "Find the types of documents with more than 4 documents."
    },
    {
        "answer": "SELECT AVG(access_count) FROM documents",
        "context": "CREATE TABLE documents (access_count INTEGER)",
        "question": "What is the average access count of documents?"
    },
    {
        "answer": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code = t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE document_structures (document_structure_description VARCHAR, document_structure_code VARCHAR); CREATE TABLE documents (document_structure_code VARCHAR)",
        "question": "What is the structure of the document with the least number of accesses?"
    },
    {
        "answer": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY COUNT(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE documents (document_name VARCHAR, document_type_code VARCHAR, document_structure_code VARCHAR)",
        "question": "Find the list of documents that are both in the most three popular type and have the most three popular structure."
    },
    {
        "answer": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code WHERE t1.document_name = \"David CV\"",
        "context": "CREATE TABLE documents (document_code VARCHAR, document_name VARCHAR); CREATE TABLE document_sections (section_title VARCHAR, document_code VARCHAR)",
        "question": "What are all the section titles of the document named \"David CV\"?"
    },
    {
        "answer": "SELECT AVG(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code = t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code = t3.functional_area_code WHERE t3.functional_area_description = \"Acknowledgement\"",
        "context": "CREATE TABLE document_functional_areas (document_code VARCHAR, functional_area_code VARCHAR); CREATE TABLE documents (access_count INTEGER, document_code VARCHAR); CREATE TABLE functional_areas (functional_area_code VARCHAR, functional_area_description VARCHAR)",
        "question": "Find the average access counts of documents with functional area \"Acknowledgement\"."
    },
    {
        "answer": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id",
        "context": "CREATE TABLE document_sections_images (section_id VARCHAR); CREATE TABLE documents (document_name VARCHAR); CREATE TABLE documents (document_name VARCHAR, document_code VARCHAR); CREATE TABLE document_sections (document_code VARCHAR, section_id VARCHAR)",
        "question": "Find names of the document without any images."
    },
    {
        "answer": "SELECT COUNT(weight) FROM table_22496374_1 WHERE home_town = \"San Francisco, CA\"",
        "context": "CREATE TABLE table_22496374_1 (weight VARCHAR, home_town VARCHAR)",
        "question": "How many weight stats are there for players from San Francisco, CA?"
    },
    {
        "answer": "SELECT to_par FROM table_name_7 WHERE total < 148 AND country = \"south africa\"",
        "context": "CREATE TABLE table_name_7 (to_par VARCHAR, total VARCHAR, country VARCHAR)",
        "question": "What is To par, when Total is less than 148, and when Country is \"South Africa\"?"
    },
    {
        "answer": "SELECT role_description FROM ROLES WHERE role_code = (SELECT role_code FROM users WHERE user_login = 1 GROUP BY role_code ORDER BY COUNT(*) DESC LIMIT 1)",
        "context": "CREATE TABLE users (role_description VARCHAR, role_code VARCHAR, user_login VARCHAR); CREATE TABLE ROLES (role_description VARCHAR, role_code VARCHAR, user_login VARCHAR)",
        "question": "Find the description of the most popular role among the users that have logged in."
    },
    {
        "answer": "SELECT COUNT(reason_for_change) FROM table_225095_4 WHERE successor = \"Edward Hempstead\"",
        "context": "CREATE TABLE table_225095_4 (reason_for_change VARCHAR, successor VARCHAR)",
        "question": "How many reasons for change were listed when Edward Hempstead was the successor?"
    },
    {
        "answer": "SELECT total FROM table_name_3 WHERE event = \"wc belgrade\" AND rank_points = \"10\"",
        "context": "CREATE TABLE table_name_3 (total VARCHAR, event VARCHAR, rank_points VARCHAR)",
        "question": "What's the total for the wc belgrade event with 10 rank points?"
    },
    {
        "answer": "SELECT successor FROM table_225099_3 WHERE state__class_ = \"Maine (2)\"",
        "context": "CREATE TABLE table_225099_3 (successor VARCHAR, state__class_ VARCHAR)",
        "question": "Who was the successor for the state of Maine (2) ?"
    },
    {
        "answer": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id HAVING COUNT(*) > 1",
        "context": "CREATE TABLE buildings (name VARCHAR, id VARCHAR); CREATE TABLE Companies (id VARCHAR); CREATE TABLE Office_locations (building_id VARCHAR, company_id VARCHAR)",
        "question": "Show the names of the buildings that have more than one company offices."
    },
    {
        "answer": "SELECT MIN(year) FROM table_22514845_4 WHERE reporters = \"Howard Cosell and Jack Whitaker\" AND s_analyst = \"Bill Hartack\"",
        "context": "CREATE TABLE table_22514845_4 (year INTEGER, reporters VARCHAR, s_analyst VARCHAR)",
        "question": "In which year were howard cosell and jack whitaker reporters and s analyst is bill hartack?"
    },
    {
        "answer": "SELECT race_caller FROM table_22514845_4 WHERE s_host = \"Jim McKay and Al Michaels\" AND year = 1987",
        "context": "CREATE TABLE table_22514845_4 (race_caller VARCHAR, s_host VARCHAR, year VARCHAR)",
        "question": "Who is the race caller when jim mckay and al michaels were s hosts in the year 1987?"
    },
    {
        "answer": "SELECT Industry, COUNT(*) FROM Companies GROUP BY Industry",
        "context": "CREATE TABLE Companies (Industry VARCHAR)",
        "question": "Please show each industry and the corresponding number of companies in that industry."
    },
    {
        "answer": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE buildings (name VARCHAR, id VARCHAR); CREATE TABLE Companies (id VARCHAR); CREATE TABLE Office_locations (building_id VARCHAR, company_id VARCHAR)",
        "question": "Show the name of the building that has the most company offices."
    },
    {
        "answer": "SELECT race_caller FROM table_22514845_5 WHERE trophy_presentation = \"Jim McKay and Howard Cosell\" AND reporters = \"Howard Cosell\" AND s_analyst = \"Eddie Arcaro\"",
        "context": "CREATE TABLE table_22514845_5 (race_caller VARCHAR, s_analyst VARCHAR, trophy_presentation VARCHAR, reporters VARCHAR)",
        "question": "Name the race caller for jim mckay and howard cosell and eddie arcaro"
    },
    {
        "answer": "SELECT power_output__kw_ FROM table_name_29 WHERE number_in_class = 5",
        "context": "CREATE TABLE table_name_29 (power_output__kw_ VARCHAR, number_in_class VARCHAR)",
        "question": "What is the power output for class 5?"
    },
    {
        "answer": "SELECT Product_Price FROM Products WHERE Product_Name = \"Dining\" OR Product_Name = \"Trading Policy\"",
        "context": "CREATE TABLE Products (Product_Price VARCHAR, Product_Name VARCHAR)",
        "question": "Show the prices of the products named \"Dining\" or \"Trading Policy\"."
    },
    {
        "answer": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Products (Product_Type_Code VARCHAR)",
        "question": "Show the product type codes that have at least two products."
    },
    {
        "answer": "SELECT Product_Type_Code FROM Products WHERE Product_Price > 4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price < 3000",
        "context": "CREATE TABLE Products (Product_Type_Code VARCHAR, Product_Price INTEGER)",
        "question": "Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000."
    },
    {
        "answer": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR); CREATE TABLE Products_in_Events (Product_ID VARCHAR)",
        "question": "Show the names of products that are in at least two events."
    },
    {
        "answer": "SELECT COUNT(reason_for_change) FROM table_225200_4 WHERE date_successor_seated = \"Not filled this congress\"",
        "context": "CREATE TABLE table_225200_4 (reason_for_change VARCHAR, date_successor_seated VARCHAR)",
        "question": "Name the total number of reason for change for not filled this congress"
    },
    {
        "answer": "SELECT Product_Name FROM Products WHERE NOT Product_ID IN (SELECT Product_ID FROM Products_in_Events)",
        "context": "CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR); CREATE TABLE Products_in_Events (Product_Name VARCHAR, Product_ID VARCHAR)",
        "question": "List the names of products that are not in any event."
    },
    {
        "answer": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*) >= 2 ORDER BY T1.Product_Name",
        "context": "CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR); CREATE TABLE Products_in_Events (Product_ID VARCHAR)",
        "question": "Show the names of products that are in at least two events in ascending alphabetical order of product name."
    },
    {
        "answer": "SELECT SUM(final) FROM table_name_26 WHERE place > 2 AND nation = \"finland\" AND all_around > 18.9",
        "context": "CREATE TABLE table_name_26 (final INTEGER, all_around VARCHAR, place VARCHAR, nation VARCHAR)",
        "question": "What is the sum of the final for finland, who placed greater than 2 and had an all around larger than 18.9?"
    },
    {
        "answer": "SELECT place FROM table_name_45 WHERE money___\u00a3__ = \"77,500\" AND player = \"sergio garc\u00eda\"",
        "context": "CREATE TABLE table_name_45 (place VARCHAR, money___\u00a3__ VARCHAR, player VARCHAR)",
        "question": "What is the place of player sergio garc\u00eda, who has \u00a377,500?"
    },
    {
        "answer": "SELECT pop__km\u00b2 FROM table_2252745_1 WHERE _number = 4",
        "context": "CREATE TABLE table_2252745_1 (pop__km\u00b2 VARCHAR, _number VARCHAR)",
        "question": "When the # is 4, what is the pop./ km\u00b2?"
    },
    {
        "answer": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T3.Year = 2007",
        "context": "CREATE TABLE nomination (Artwork_ID VARCHAR, Festival_ID VARCHAR); CREATE TABLE festival_detail (Festival_ID VARCHAR, Year VARCHAR); CREATE TABLE artwork (Type VARCHAR, Artwork_ID VARCHAR)",
        "question": "Show distinct types of artworks that are nominated in festivals in 2007."
    },
    {
        "answer": "SELECT T2.Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID ORDER BY T3.Year",
        "context": "CREATE TABLE artwork (Name VARCHAR, Artwork_ID VARCHAR); CREATE TABLE nomination (Artwork_ID VARCHAR, Festival_ID VARCHAR); CREATE TABLE festival_detail (Festival_ID VARCHAR, Year VARCHAR)",
        "question": "Show the names of artworks in ascending order of the year they are nominated in."
    },
    {
        "answer": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T2.Type = \"Program Talent Show\"",
        "context": "CREATE TABLE nomination (Artwork_ID VARCHAR, Festival_ID VARCHAR); CREATE TABLE artwork (Artwork_ID VARCHAR, Type VARCHAR); CREATE TABLE festival_detail (Festival_Name VARCHAR, Festival_ID VARCHAR)",
        "question": "Show the names of festivals that have nominated artworks of type \"Program Talent Show\"."
    },
    {
        "answer": "SELECT T1.Festival_ID, T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE nomination (Festival_ID VARCHAR, Artwork_ID VARCHAR); CREATE TABLE festival_detail (Festival_Name VARCHAR, Festival_ID VARCHAR); CREATE TABLE artwork (Artwork_ID VARCHAR)",
        "question": "Show the ids and names of festivals that have at least two nominations for artworks."
    },
    {
        "answer": "SELECT host_nation_s_ FROM table_22577693_1 WHERE winner = \"Hong Kong 207/6 (47.1 overs)\"",
        "context": "CREATE TABLE table_22577693_1 (host_nation_s_ VARCHAR, winner VARCHAR)",
        "question": "What is the name of the host nations if the winner was Hong Kong 207/6 (47.1 overs)?"
    },
    {
        "answer": "SELECT result FROM table_22577693_1 WHERE runner_up = \"[[|]] 151/8 (50.0 overs)\"",
        "context": "CREATE TABLE table_22577693_1 (result VARCHAR, runner_up VARCHAR)",
        "question": "If the runner-up is [[|]] 151/8 (50.0 overs), what were the results?"
    },
    {
        "answer": "SELECT T1.Festival_ID, T3.Festival_Name, COUNT(*) FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID GROUP BY T1.Festival_ID",
        "context": "CREATE TABLE nomination (Festival_ID VARCHAR, Artwork_ID VARCHAR); CREATE TABLE festival_detail (Festival_Name VARCHAR, Festival_ID VARCHAR); CREATE TABLE artwork (Artwork_ID VARCHAR)",
        "question": "Show the id, name of each festival and the number of artworks it has nominated."
    },
    {
        "answer": "SELECT event FROM table_name_41 WHERE meet = \"world championships\" AND time = \"20.51\"",
        "context": "CREATE TABLE table_name_41 (event VARCHAR, meet VARCHAR, time VARCHAR)",
        "question": "What is Event, when Meet is \"World Championships\", and when Time is \"20.51\"?"
    },
    {
        "answer": "SELECT T2.Name, T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID",
        "context": "CREATE TABLE artwork (Name VARCHAR, Artwork_ID VARCHAR); CREATE TABLE nomination (Artwork_ID VARCHAR, Festival_ID VARCHAR); CREATE TABLE festival_detail (Festival_Name VARCHAR, Festival_ID VARCHAR)",
        "question": "For each nomination, show the name of the artwork and name of the festival where it is nominated."
    },
    {
        "answer": "SELECT YEAR FROM festival_detail WHERE LOCATION = 'United States' INTERSECT SELECT YEAR FROM festival_detail WHERE LOCATION <> 'United States'",
        "context": "CREATE TABLE festival_detail (YEAR VARCHAR, LOCATION VARCHAR)",
        "question": "In which year are there festivals both inside the 'United States' and outside the 'United States'?"
    },
    {
        "answer": "SELECT written_by FROM table_22570439_1 WHERE directed_by = \"Mark Worthington\"",
        "context": "CREATE TABLE table_22570439_1 (written_by VARCHAR, directed_by VARCHAR)",
        "question": "Who is the written by when mark worthington is the director?"
    },
    {
        "answer": "SELECT release_date FROM table_name_36 WHERE version = \"1.0\" AND category = \"utilities\" AND developer = \"microsoft\" AND title = \"msn money\"",
        "context": "CREATE TABLE table_name_36 (release_date VARCHAR, title VARCHAR, developer VARCHAR, version VARCHAR, category VARCHAR)",
        "question": "What Release date has a Version of 1.0, a Category of utilities, a Developer of microsoft, and a Title of msn money?"
    },
    {
        "answer": "SELECT release_date FROM table_name_86 WHERE category = \"utilities\" AND developer = \"microsoft\" AND title = \"chord finder\"",
        "context": "CREATE TABLE table_name_86 (release_date VARCHAR, title VARCHAR, category VARCHAR, developer VARCHAR)",
        "question": "What Release date has a Category of utilities, a Developer of microsoft, and a Title of chord finder?"
    },
    {
        "answer": "SELECT race_caller FROM table_22583466_5 WHERE year = 1978",
        "context": "CREATE TABLE table_22583466_5 (race_caller VARCHAR, year VARCHAR)",
        "question": "Who called the race in 1978?"
    },
    {
        "answer": "SELECT T1.customer_name, T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.outcome_code = 'No Response'",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR); CREATE TABLE mailshot_customers (customer_id VARCHAR, outcome_code VARCHAR)",
        "question": "Show the name and phone for customers with a mailshot with outcome code 'No Response'."
    },
    {
        "answer": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE outcome_code = 'Order' GROUP BY T1.customer_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE mailshot_customers (customer_id VARCHAR)",
        "question": "Show the names of customers who have at least 2 mailshots with outcome code 'Order'."
    },
    {
        "answer": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE mailshot_customers (customer_id VARCHAR)",
        "question": "Show the names of customers who have the most mailshots."
    },
    {
        "answer": "SELECT T2.customer_name, T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'Order' INTERSECT SELECT T2.customer_name, T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'No Response'",
        "context": "CREATE TABLE customers (customer_name VARCHAR, payment_method VARCHAR, customer_id VARCHAR); CREATE TABLE mailshot_customers (customer_id VARCHAR, outcome_code VARCHAR)",
        "question": "What are the name and payment method of customers who have both mailshots in 'Order' outcome and mailshots in 'No Response' outcome."
    },
    {
        "answer": "SELECT MAX(year_signed) FROM table_name_79 WHERE reason_for_separation = \"\u2020\" AND year_separated = \"1997\"",
        "context": "CREATE TABLE table_name_79 (year_signed INTEGER, reason_for_separation VARCHAR, year_separated VARCHAR)",
        "question": "What is the most current year signed for separation of \u2020 and a separation year of 1997?"
    },
    {
        "answer": "SELECT winning_score FROM table_225880_1 WHERE championship = \"PGA championship\"",
        "context": "CREATE TABLE table_225880_1 (winning_score VARCHAR, championship VARCHAR)",
        "question": "Name the winning score for pga championship"
    },
    {
        "answer": "SELECT DISTINCT address_type_code FROM customer_addresses",
        "context": "CREATE TABLE customer_addresses (address_type_code VARCHAR)",
        "question": "What are the distinct address type codes for all customer addresses?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_22597626_17 WHERE score_in_the_final = \"6\u20134, 7\u20136 2\"",
        "context": "CREATE TABLE table_22597626_17 (opponents_in_the_final VARCHAR, score_in_the_final VARCHAR)",
        "question": "Who were the opponents in the final where the score in the final is 6\u20134, 7\u20136 2?"
    },
    {
        "answer": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE shipping_method_code = 'FedEx' AND order_status_code = 'Paid'",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR)",
        "question": "Show the names of customers having an order with shipping method FedEx and order status Paid."
    },
    {
        "answer": "SELECT T2.premises_type, T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id = T2.premise_id",
        "context": "CREATE TABLE premises (premises_type VARCHAR, premise_id VARCHAR); CREATE TABLE customer_addresses (address_type_code VARCHAR, premise_id VARCHAR)",
        "question": "Show the premise type and address type code for all customer addresses."
    },
    {
        "answer": "SELECT award_ceremony FROM table_name_87 WHERE nominee = \"sarah travis\" AND category = \"best orchestrations\"",
        "context": "CREATE TABLE table_name_87 (award_ceremony VARCHAR, nominee VARCHAR, category VARCHAR)",
        "question": "Which Award Ceremony has a Nominee of sarah travis, and a Category of the best orchestrations?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_22597626_17 WHERE opponents_in_the_final = \"Bahrami Leconte\" AND score_in_the_final = \"7\u20136 2 , 6\u20131\"",
        "context": "CREATE TABLE table_22597626_17 (year INTEGER, opponents_in_the_final VARCHAR, score_in_the_final VARCHAR)",
        "question": "What was the year date when one of the opponents in the final was bahrami leconte and score in the final is 7\u20136 2 , 6\u20131?"
    },
    {
        "answer": "SELECT COUNT(*) FROM DEPARTMENT WHERE Division = \"AS\"",
        "context": "CREATE TABLE DEPARTMENT (Division VARCHAR)",
        "question": "What is the number of departments in Division \"AS\"?"
    },
    {
        "answer": "SELECT date FROM table_name_26 WHERE opponent = \"indianapolis colts\"",
        "context": "CREATE TABLE table_name_26 (date VARCHAR, opponent VARCHAR)",
        "question": "On what day did the team play the Indianapolis Colts?"
    },
    {
        "answer": "SELECT average_speed__mph_ FROM table_2260452_1 WHERE race_time = \"2:00:33\"",
        "context": "CREATE TABLE table_2260452_1 (average_speed__mph_ VARCHAR, race_time VARCHAR)",
        "question": "If the race time is 2:00:33, what is the average speed?"
    },
    {
        "answer": "SELECT COUNT(height) FROM table_22603701_1 WHERE position = \"WR\" AND name = \"Jesse Holley\"",
        "context": "CREATE TABLE table_22603701_1 (height VARCHAR, position VARCHAR, name VARCHAR)",
        "question": "How many heights are listed for Jesse Holley in the WR position? "
    },
    {
        "answer": "SELECT europe FROM table_name_68 WHERE head_coach = \"vainauskas , sakalauskas\" AND regional_competitions = \"nebl finalist\"",
        "context": "CREATE TABLE table_name_68 (europe VARCHAR, head_coach VARCHAR, regional_competitions VARCHAR)",
        "question": "WHAT IS THE ERUPE WITH HEAD COACH vainauskas , sakalauskas AND WITH NEBL FINALIST?"
    },
    {
        "answer": "SELECT version FROM table_2263152_1 WHERE security_issues = \"98-004\" AND distribution_mechanism = \"Microsoft website\"",
        "context": "CREATE TABLE table_2263152_1 (version VARCHAR, security_issues VARCHAR, distribution_mechanism VARCHAR)",
        "question": "With the distribution mechanism of Microsoft website and the security issues of 98-004, what is the version?"
    },
    {
        "answer": "SELECT features FROM table_2263152_1 WHERE security_issues = \"98-004\" AND distribution_mechanism = \"Microsoft website\"",
        "context": "CREATE TABLE table_2263152_1 (features VARCHAR, security_issues VARCHAR, distribution_mechanism VARCHAR)",
        "question": "If the distribution mechanism is the Microsoft website and the security issues id 98-004, what are all of the features?"
    },
    {
        "answer": "SELECT version FROM table_2263152_1 WHERE features = \"Service release\" AND distribution_mechanism = \"Windows NT 4.0 Option Pack Microsoft Office 97\"",
        "context": "CREATE TABLE table_2263152_1 (version VARCHAR, features VARCHAR, distribution_mechanism VARCHAR)",
        "question": "If the distribution mechanism is windows nt 4.0 option pack Microsoft office 97 and the features is service release, what is the version?"
    },
    {
        "answer": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO",
        "context": "CREATE TABLE DEPARTMENT (DName VARCHAR, DNO VARCHAR); CREATE TABLE MINOR_IN (DNO VARCHAR); CREATE TABLE DEPARTMENT (DName VARCHAR)",
        "question": "Find the name of the department that has no students minored in?"
    },
    {
        "answer": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE MEMBER_OF (DNO VARCHAR); CREATE TABLE DEPARTMENT (DName VARCHAR, DNO VARCHAR)",
        "question": "Find the name of the department that has the fewest members."
    },
    {
        "answer": "SELECT T2.Fname, T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE COURSE (Instructor VARCHAR); CREATE TABLE FACULTY (Fname VARCHAR, Lname VARCHAR, FacID VARCHAR)",
        "question": "What are the first and last names of the instructors who teach the top 3 number of courses?"
    },
    {
        "answer": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE COURSE (Instructor VARCHAR); CREATE TABLE FACULTY (Building VARCHAR, FacID VARCHAR)",
        "question": "Which building does the instructor who teaches the most number of courses live in?"
    },
    {
        "answer": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT(*) >= 5",
        "context": "CREATE TABLE ENROLLED_IN (CID VARCHAR); CREATE TABLE COURSE (CName VARCHAR, CID VARCHAR)",
        "question": "What are the name of courses that have at least five enrollments?"
    },
    {
        "answer": "SELECT COUNT(2010) FROM table_name_9 WHERE 2007 > 4.6 AND 2006 = 8.2",
        "context": "CREATE TABLE table_name_9 (Id VARCHAR)",
        "question": "How many 2010s have a 2007 greater than 4.6, and 8.2 as a 2006?"
    },
    {
        "answer": "SELECT T2.Dname, T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = \"INTRODUCTION TO COMPUTER SCIENCE\"",
        "context": "CREATE TABLE COURSE (DNO VARCHAR, CName VARCHAR); CREATE TABLE DEPARTMENT (Dname VARCHAR, Room VARCHAR, DNO VARCHAR)",
        "question": "Find the department name and room of the course INTRODUCTION TO COMPUTER SCIENCE."
    },
    {
        "answer": "SELECT T3.Fname, T3.LName, T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID",
        "context": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR); CREATE TABLE STUDENT (Fname VARCHAR, LName VARCHAR, StuID VARCHAR); CREATE TABLE GRADECONVERSION (gradepoint VARCHAR, lettergrade VARCHAR)",
        "question": "Find the student first and last names and grade points of all enrollments."
    },
    {
        "answer": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T2.gradepoint >= 3.8",
        "context": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR); CREATE TABLE STUDENT (Fname VARCHAR, StuID VARCHAR); CREATE TABLE GRADECONVERSION (gradepoint VARCHAR, lettergrade VARCHAR)",
        "question": "Find the distinct student first names of all students that have grade point at least 3.8 in one course."
    },
    {
        "answer": "SELECT COUNT(game) FROM table_22654073_13 WHERE date = \"May 11\"",
        "context": "CREATE TABLE table_22654073_13 (game VARCHAR, date VARCHAR)",
        "question": "How many games were played on May 11?"
    },
    {
        "answer": "SELECT T2.Fname, T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140",
        "context": "CREATE TABLE STUDENT (Fname VARCHAR, Lname VARCHAR, StuID VARCHAR); CREATE TABLE MINOR_IN (StuID VARCHAR, DNO VARCHAR)",
        "question": "What are the first names and last names of the students that minor in the department with DNO 140."
    },
    {
        "answer": "SELECT AVG(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.LName = \"Smith\"",
        "context": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR); CREATE TABLE STUDENT (LName VARCHAR, StuID VARCHAR); CREATE TABLE GRADECONVERSION (gradepoint INTEGER, lettergrade VARCHAR)",
        "question": "Find the average grade point of student whose last name is Smith."
    },
    {
        "answer": "SELECT MAX(T2.gradepoint), MIN(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = \"NYC\"",
        "context": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR); CREATE TABLE STUDENT (city_code VARCHAR, StuID VARCHAR); CREATE TABLE GRADECONVERSION (gradepoint INTEGER, lettergrade VARCHAR)",
        "question": "What is the maximum and minimum grade point of students who live in NYC?"
    },
    {
        "answer": "SELECT COUNT(high_points) FROM table_22654073_7 WHERE high_rebounds = \"Mo Williams , LeBron James , J.J. Hickson (6)\"",
        "context": "CREATE TABLE table_22654073_7 (high_points VARCHAR, high_rebounds VARCHAR)",
        "question": "Name the high points for mo williams , lebron james , j.j. hickson (6)"
    },
    {
        "answer": "SELECT COUNT(score) FROM table_22654073_8 WHERE record = \"27-9\"",
        "context": "CREATE TABLE table_22654073_8 (score VARCHAR, record VARCHAR)",
        "question": "How many scores are associated with a record of 27-9?"
    },
    {
        "answer": "SELECT to_par FROM table_name_14 WHERE country = \"united states\" AND score = 71 - 70 = 141",
        "context": "CREATE TABLE table_name_14 (to_par VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "Which To par has a Country of united states, and a Score of 71-70=141?"
    },
    {
        "answer": "SELECT T1.staff_id, T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = \"Department Manager\"",
        "context": "CREATE TABLE staff_department_assignments (staff_id VARCHAR, job_title_code VARCHAR); CREATE TABLE staff (staff_id VARCHAR, staff_gender VARCHAR)",
        "question": "What are the staff ids and genders of all staffs whose job title is Department Manager?"
    },
    {
        "answer": "SELECT result FROM table_name_45 WHERE award = \"virgin media tv awards\"",
        "context": "CREATE TABLE table_name_45 (result VARCHAR, award VARCHAR)",
        "question": "Which Result has an Award of virgin media tv awards?"
    },
    {
        "answer": "SELECT T1.customer_name, T1.customer_phone, T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_phone VARCHAR, customer_email VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR)",
        "question": "What are the name, phone number and email address of the customer who made the largest number of orders?"
    },
    {
        "answer": "SELECT COUNT(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = \"South\"",
        "context": "CREATE TABLE department_stores (dept_store_chain_id VARCHAR); CREATE TABLE department_store_chain (dept_store_chain_id VARCHAR, dept_store_chain_name VARCHAR)",
        "question": "How many department stores does the store chain South have?"
    },
    {
        "answer": "SELECT round FROM table_22656187_9 WHERE w_l = \"Loss\" AND edition = \"2012 Fed Cup Europe/Africa Group I\"",
        "context": "CREATE TABLE table_22656187_9 (round VARCHAR, w_l VARCHAR, edition VARCHAR)",
        "question": "Which round has a win-loss result of loss and an edition of 2012 Fed Cup Europe/Africa Group I?"
    },
    {
        "answer": "SELECT T2.product_type_code, T2.product_name, T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3",
        "context": "CREATE TABLE products (product_type_code VARCHAR, product_name VARCHAR, product_price VARCHAR, product_id VARCHAR); CREATE TABLE product_suppliers (product_id VARCHAR, supplier_id VARCHAR)",
        "question": "Give me the product type, name and price for all the products supplied by supplier id 3."
    },
    {
        "answer": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = \"Pending\" ORDER BY T2.customer_id",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_status_code VARCHAR)",
        "question": "Return the distinct name of customers whose order status is Pending, in the order of customer id."
    },
    {
        "answer": "SELECT T1.customer_name, T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = \"New\" INTERSECT SELECT T1.customer_name, T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = \"Pending\"",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_address VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_status_code VARCHAR)",
        "question": "Find the name and address of the customers who have both New and Pending orders."
    },
    {
        "answer": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2 AND T2.product_price > (SELECT AVG(product_price) FROM products)",
        "context": "CREATE TABLE products (product_id VARCHAR, product_price INTEGER); CREATE TABLE product_suppliers (product_id VARCHAR, supplier_id VARCHAR); CREATE TABLE products (product_price INTEGER)",
        "question": "Return ids of all the products that are supplied by supplier id 2 and are more expensive than the average price of all products."
    },
    {
        "answer": "SELECT T2.dept_store_id, T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = \"marketing\" INTERSECT SELECT T2.dept_store_id, T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = \"managing\"",
        "context": "CREATE TABLE department_stores (dept_store_id VARCHAR, store_name VARCHAR); CREATE TABLE departments (dept_store_id VARCHAR, department_name VARCHAR)",
        "question": "What is the id and name of the department store that has both marketing and managing department?"
    },
    {
        "answer": "SELECT T1.staff_name, T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1",
        "context": "CREATE TABLE staff (staff_name VARCHAR, staff_id VARCHAR); CREATE TABLE staff_department_assignments (job_title_code VARCHAR, staff_id VARCHAR, date_assigned_to VARCHAR)",
        "question": "What is the name and job title of the staff who was assigned the latest?"
    },
    {
        "answer": "SELECT T1.staff_id, T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1",
        "context": "CREATE TABLE Staff_Department_Assignments (staff_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR, staff_name VARCHAR)",
        "question": "Find the id and name of the staff who has been assigned for the shortest period."
    },
    {
        "answer": "SELECT product_name, product_id FROM products WHERE product_price BETWEEN 600 AND 700",
        "context": "CREATE TABLE products (product_name VARCHAR, product_id VARCHAR, product_price INTEGER)",
        "question": "Return the names and ids of all products whose price is between 600 and 700."
    },
    {
        "answer": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to < (SELECT MAX(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code = 'Clerical Staff')",
        "context": "CREATE TABLE Staff_Department_Assignments (staff_id VARCHAR, date_assigned_to INTEGER, job_title_code VARCHAR)",
        "question": "What is id of the staff who had a Staff Department Assignment earlier than any Clerical Staff?"
    },
    {
        "answer": "SELECT \"inventor\" FROM table_name_2 WHERE habit = \"spur\" AND pattern = \"stripe\" AND mutated_from = \"redsport type 2\"",
        "context": "CREATE TABLE table_name_2 (mutated_from VARCHAR, habit VARCHAR, pattern VARCHAR)",
        "question": "Who's the inventor when it was mutated from Redsport Type 2, has a stripe pattern and a spur habit?"
    },
    {
        "answer": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT(*) > 1",
        "context": "CREATE TABLE staff (staff_name VARCHAR, staff_id VARCHAR); CREATE TABLE staff_department_assignments (staff_id VARCHAR)",
        "question": "List the name of staff who has been assigned multiple jobs."
    },
    {
        "answer": "SELECT T1.supplier_name, T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id JOIN addresses AS T3 ON T2.address_id = T3.address_id ORDER BY T3.address_details",
        "context": "CREATE TABLE addresses (address_id VARCHAR, address_details VARCHAR); CREATE TABLE supplier_addresses (supplier_id VARCHAR, address_id VARCHAR); CREATE TABLE Suppliers (supplier_name VARCHAR, supplier_phone VARCHAR, supplier_id VARCHAR)",
        "question": "List the name and phone number of all suppliers in the alphabetical order of their addresses."
    },
    {
        "answer": "SELECT T1.staff_name, T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\"",
        "context": "CREATE TABLE staff (staff_name VARCHAR, staff_gender VARCHAR, staff_id VARCHAR); CREATE TABLE staff_department_assignments (staff_id VARCHAR, date_assigned_from VARCHAR)",
        "question": "Return the name and gender of the staff who was assigned in 2016."
    },
    {
        "answer": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING COUNT(*) > 3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING SUM(total_amount_purchased) > 80000",
        "context": "CREATE TABLE Order_Items (product_id VARCHAR, total_amount_purchased INTEGER); CREATE TABLE Product_Suppliers (product_id VARCHAR, total_amount_purchased INTEGER)",
        "question": "Return the ids of all products that were ordered more than three times or supplied more than 80000."
    },
    {
        "answer": "SELECT 0 AS _100km_h__62mph_ FROM table_name_68 WHERE top_speed = \"208km/h (129mph)\"",
        "context": "CREATE TABLE table_name_68 (top_speed VARCHAR)",
        "question": "What is the 0\u2013100km/h (62mph) acceleration of the model with a top speed of 208km/h (129mph)?"
    },
    {
        "answer": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING AVG(total_amount_purchased) > 50000 OR AVG(total_amount_purchased) < 30000",
        "context": "CREATE TABLE Product_Suppliers (supplier_id VARCHAR, total_amount_purchased INTEGER)",
        "question": "Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000."
    },
    {
        "answer": "SELECT AVG(total_amount_purchased), AVG(total_value_purchased) FROM Product_Suppliers WHERE supplier_id = (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "context": "CREATE TABLE Product_Suppliers (total_amount_purchased INTEGER, total_value_purchased INTEGER, supplier_id VARCHAR)",
        "question": "What are the average amount purchased and value purchased for the supplier who supplies the most products."
    },
    {
        "answer": "SELECT COUNT(team_classification) FROM table_2267345_2 WHERE young_rider_classification = \"Salvatore Commesso\" AND combativity_award = \"Jacky Durand\"",
        "context": "CREATE TABLE table_2267345_2 (team_classification VARCHAR, young_rider_classification VARCHAR, combativity_award VARCHAR)",
        "question": "What is the total number of team classifications when the young rider classification leader was Salvatore Commesso and the combativity award winner was Jacky Durand?"
    },
    {
        "answer": "SELECT general_classification FROM table_2267345_2 WHERE young_rider_classification = \"Salvatore Commesso\" AND winner = \"Erik Dekker\"",
        "context": "CREATE TABLE table_2267345_2 (general_classification VARCHAR, young_rider_classification VARCHAR, winner VARCHAR)",
        "question": "Who was the general classification leader when the young rider classification leader was Salvatore Commesso and the winner was Erik Dekker?"
    },
    {
        "answer": "SELECT MIN(rnd) FROM table_22673872_1 WHERE winning_driver = \"Al Unser\" AND track = \"Wisconsin State Fair Park Speedway\"",
        "context": "CREATE TABLE table_22673872_1 (rnd INTEGER, winning_driver VARCHAR, track VARCHAR)",
        "question": "In what round did Al Unser win at Wisconsin State Fair Park Speedway? "
    },
    {
        "answer": "SELECT DISTINCT T1.supplier_name, T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id = T2.supplier_id JOIN products AS T3 ON T2.product_id = T3.product_id WHERE T3.product_name = \"red jeans\"",
        "context": "CREATE TABLE product_suppliers (supplier_id VARCHAR, product_id VARCHAR); CREATE TABLE suppliers (supplier_name VARCHAR, supplier_phone VARCHAR, supplier_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)",
        "question": "List the names and phone numbers of all the distinct suppliers who supply red jeans."
    },
    {
        "answer": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id JOIN products AS T4 ON T3.product_id = T4.product_id WHERE T4.product_name = \"keyboard\"",
        "context": "CREATE TABLE order_items (order_id VARCHAR, product_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR)",
        "question": "List the names of all the distinct customers who bought a keyboard."
    },
    {
        "answer": "SELECT order_id, customer_id FROM customer_orders WHERE order_status_code = \"Cancelled\" ORDER BY order_date",
        "context": "CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR, order_status_code VARCHAR, order_date VARCHAR)",
        "question": "List the order id, customer id for orders in Cancelled status, ordered by their order dates."
    },
    {
        "answer": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id JOIN products AS T3 ON T2.product_id = T3.product_id GROUP BY T3.product_id HAVING COUNT(DISTINCT T1.customer_id) >= 2",
        "context": "CREATE TABLE products (product_name VARCHAR, product_id VARCHAR); CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR); CREATE TABLE order_items (order_id VARCHAR, product_id VARCHAR)",
        "question": "Find the names of products that were bought by at least two distinct customers."
    },
    {
        "answer": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id GROUP BY T1.customer_id HAVING COUNT(DISTINCT T3.product_id) >= 3",
        "context": "CREATE TABLE order_items (order_id VARCHAR, product_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR)",
        "question": "Find the names of customers who have bought by at least three distinct products."
    },
    {
        "answer": "SELECT T1.staff_name, T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = \"Sales Person\" EXCEPT SELECT T1.staff_name, T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = \"Clerical Staff\"",
        "context": "CREATE TABLE staff (staff_name VARCHAR, staff_gender VARCHAR, staff_id VARCHAR); CREATE TABLE Staff_Department_Assignments (staff_id VARCHAR, job_title_code VARCHAR)",
        "question": "Find the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff."
    },
    {
        "answer": "SELECT MIN(burglary) FROM table_name_90 WHERE forcible_rape = \"39.1\" AND motor_vehicle_theft < 568.8",
        "context": "CREATE TABLE table_name_90 (burglary INTEGER, forcible_rape VARCHAR, motor_vehicle_theft VARCHAR)",
        "question": "What is the smallest rate of burglary when forcible rape is 39.1 and motor vehicle theft is less than 568.8?"
    },
    {
        "answer": "SELECT AVG(international) FROM table_name_78 WHERE domestic = 669 AND year < 2005",
        "context": "CREATE TABLE table_name_78 (international INTEGER, domestic VARCHAR, year VARCHAR)",
        "question": "What is the number for the international with 669 domestic earlier than 2005?"
    },
    {
        "answer": "SELECT MAX(issue_date) FROM table_name_6 WHERE highest_position = 3",
        "context": "CREATE TABLE table_name_6 (issue_date INTEGER, highest_position VARCHAR)",
        "question": "What is the largest issue date for an album that reached position of 3?"
    },
    {
        "answer": "SELECT SUM(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"",
        "context": "CREATE TABLE airport (Domestic_Passengers INTEGER, Airport_Name VARCHAR)",
        "question": "What are the total number of Domestic Passengers of airports that contain the word \"London\"."
    },
    {
        "answer": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = \"London Gatwick\"",
        "context": "CREATE TABLE airport (Airport_ID VARCHAR, Airport_Name VARCHAR); CREATE TABLE aircraft (Aircraft VARCHAR, Aircraft_ID VARCHAR); CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR)",
        "question": "Please show the names of aircrafts associated with airport with name \"London Gatwick\"."
    },
    {
        "answer": "SELECT T1.Aircraft, T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Total_Passengers > 10000000",
        "context": "CREATE TABLE airport (Airport_ID VARCHAR, Total_Passengers INTEGER); CREATE TABLE aircraft (Aircraft VARCHAR, Description VARCHAR, Aircraft_ID VARCHAR); CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR)",
        "question": "Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000."
    },
    {
        "answer": "SELECT AVG(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T1.Aircraft = \"Robinson R-22\"",
        "context": "CREATE TABLE airport (Total_Passengers INTEGER, Airport_ID VARCHAR); CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR); CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR)",
        "question": "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?"
    },
    {
        "answer": "SELECT sprint_classification FROM table_22713796_14 WHERE winner = \"Alejandro Valverde\"",
        "context": "CREATE TABLE table_22713796_14 (sprint_classification VARCHAR, winner VARCHAR)",
        "question": "Name the sprint classification being alejandro valverde"
    },
    {
        "answer": "SELECT MAX(stage) FROM table_22713796_14 WHERE general_classification = \"Alejandro Valverde\" AND team_classification = \"Astana\" AND winner = \"Greg Henderson\"",
        "context": "CREATE TABLE table_22713796_14 (stage INTEGER, winner VARCHAR, general_classification VARCHAR, team_classification VARCHAR)",
        "question": "Name the most stage for alejandro valverde and astana greg henderson"
    },
    {
        "answer": "SELECT T2.Location, T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft",
        "context": "CREATE TABLE MATCH (Location VARCHAR, Winning_Aircraft VARCHAR); CREATE TABLE aircraft (Aircraft VARCHAR, Aircraft_ID VARCHAR)",
        "question": "Please list the location and the winning aircraft name."
    },
    {
        "answer": "SELECT experience FROM table_22719663_3 WHERE name = \"Mel Daniels\"",
        "context": "CREATE TABLE table_22719663_3 (experience VARCHAR, name VARCHAR)",
        "question": "How long has Mel Daniels been playing?"
    },
    {
        "answer": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE MATCH (Winning_Aircraft VARCHAR); CREATE TABLE aircraft (Aircraft VARCHAR, Aircraft_ID VARCHAR)",
        "question": "List the names of aircrafts and that won matches at least twice."
    },
    {
        "answer": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = \"London Gatwick\"",
        "context": "CREATE TABLE airport (Airport_ID VARCHAR, Airport_Name VARCHAR); CREATE TABLE aircraft (Aircraft VARCHAR, Aircraft_ID VARCHAR); CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR)",
        "question": "Show the names of aircrafts that are associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\""
    },
    {
        "answer": "SELECT t1.name, t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot WHERE t1.age < 30 GROUP BY t2.winning_pilot ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE MATCH (winning_pilot VARCHAR); CREATE TABLE pilot (name VARCHAR, age INTEGER, pilot_id VARCHAR)",
        "question": "find the name and age of the pilot who has won the most number of times among the pilots who are younger than 30."
    },
    {
        "answer": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id = T2.organization_id WHERE T2.organization_details = 'Denesik and Sons Party'",
        "context": "CREATE TABLE services (service_type_code VARCHAR, organization_id VARCHAR); CREATE TABLE organizations (organization_id VARCHAR, organization_details VARCHAR)",
        "question": "What is the distinct service types that are provided by the organization which has detail 'Denesik and Sons Party'?"
    },
    {
        "answer": "SELECT T1.resident_id, T1.other_details, COUNT(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id ORDER BY COUNT(*) DESC",
        "context": "CREATE TABLE Residents_Services (resident_id VARCHAR); CREATE TABLE Residents (resident_id VARCHAR, other_details VARCHAR)",
        "question": "How many services has each resident requested? List the resident id, details, and the count in descending order of the count."
    },
    {
        "answer": "SELECT T1.service_id, T1.service_details, COUNT(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id = T2.service_id GROUP BY T1.service_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Services (service_id VARCHAR, service_details VARCHAR); CREATE TABLE Residents_Services (service_id VARCHAR)",
        "question": "What is the maximum number that a certain service is provided? List the service id, details and number."
    },
    {
        "answer": "SELECT T1.thing_id, T1.type_of_Thing_Code, T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id = T2.organization_id",
        "context": "CREATE TABLE Organizations (organization_details VARCHAR, organization_id VARCHAR); CREATE TABLE Things (thing_id VARCHAR, type_of_Thing_Code VARCHAR, organization_id VARCHAR)",
        "question": "List the id and type of each thing, and the details of the organization that owns it."
    },
    {
        "answer": "SELECT injured FROM table_name_98 WHERE date = \"09.15 sep. 15\"",
        "context": "CREATE TABLE table_name_98 (injured VARCHAR, date VARCHAR)",
        "question": "What is Injured, when Date is \"09.15 Sep. 15\"?"
    },
    {
        "answer": "SELECT T2.date_moved_in, T1.customer_id, T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id",
        "context": "CREATE TABLE Customer_Events (date_moved_in VARCHAR, customer_id VARCHAR); CREATE TABLE Customers (customer_id VARCHAR, customer_details VARCHAR)",
        "question": "What is each customer's move in date, and the corresponding customer id and details?"
    },
    {
        "answer": "SELECT T1.Customer_Event_ID, T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING COUNT(*) BETWEEN 1 AND 3",
        "context": "CREATE TABLE Customer_Events (Customer_Event_ID VARCHAR, property_id VARCHAR, customer_event_id VARCHAR); CREATE TABLE Customer_Event_Notes (Customer_Event_ID VARCHAR)",
        "question": "Which events have the number of notes between one and three? List the event id and the property id."
    },
    {
        "answer": "SELECT DISTINCT T2.thing_id, T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21'",
        "context": "CREATE TABLE Timed_Status_of_Things (thing_id VARCHAR, Status_of_Thing_Code VARCHAR, Date_and_Date VARCHAR); CREATE TABLE Things (thing_id VARCHAR, Type_of_Thing_Code VARCHAR)",
        "question": "What are the distinct id and type of the thing that has the status 'Close' or has a status record before the date '2017-06-19 02:59:21'"
    },
    {
        "answer": "SELECT COUNT(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.service_details = 'Unsatisfied'",
        "context": "CREATE TABLE Timed_Locations_of_Things (Location_Code VARCHAR, thing_id VARCHAR); CREATE TABLE Things (thing_id VARCHAR, service_details VARCHAR)",
        "question": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_90 WHERE award = \"drama desk award\" AND nominated_work = \"the mineola twins\"",
        "context": "CREATE TABLE table_name_90 (year INTEGER, award VARCHAR, nominated_work VARCHAR)",
        "question": "What is the earliest year with a Drama Desk award when the Mineola Twins was a nominated work?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_54 WHERE nominated_work = \"the mineola twins\" AND category = \"outstanding actress in a play\" AND award = \"drama desk award\"",
        "context": "CREATE TABLE table_name_54 (year INTEGER, award VARCHAR, nominated_work VARCHAR, category VARCHAR)",
        "question": "What is the most recent year that the Mineola Twins was nominated for outstanding actress in a play and a Drama Desk award?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_62 WHERE nominated_work = \"the house of blue leaves\" AND category = \"outstanding actress in a play\"",
        "context": "CREATE TABLE table_name_62 (year INTEGER, nominated_work VARCHAR, category VARCHAR)",
        "question": "In what year was The House of Blue Leaves nominated for outstanding actress in a play?"
    },
    {
        "answer": "SELECT COUNT(winner) FROM table_22753439_1 WHERE runner_up_a = \"A. Karthikeyan\"",
        "context": "CREATE TABLE table_22753439_1 (winner VARCHAR, runner_up_a VARCHAR)",
        "question": "How many winners have a runner-up of A. Karthikeyan?"
    },
    {
        "answer": "SELECT to_par FROM table_name_15 WHERE year_s__won = \"1983\"",
        "context": "CREATE TABLE table_name_15 (to_par VARCHAR, year_s__won VARCHAR)",
        "question": "Which To par  has a Year(s) won of 1983?"
    },
    {
        "answer": "SELECT COUNT(*) FROM customers WHERE NOT customer_id IN (SELECT customer_id FROM customer_events)",
        "context": "CREATE TABLE customers (customer_id VARCHAR); CREATE TABLE customer_events (customer_id VARCHAR)",
        "question": "How many customers did not have any event?"
    },
    {
        "answer": "SELECT COUNT(margin) FROM table_22753245_1 WHERE party = \"Indian National Congress\" AND winner = \"L. Adaikalaraj c\"",
        "context": "CREATE TABLE table_22753245_1 (margin VARCHAR, party VARCHAR, winner VARCHAR)",
        "question": "How many margin results are listed in the election that was won by L. Adaikalaraj C and the party was the Indian national congress? "
    },
    {
        "answer": "SELECT pole_position FROM table_22765887_1 WHERE date = \"August 15, 1981\"",
        "context": "CREATE TABLE table_22765887_1 (pole_position VARCHAR, date VARCHAR)",
        "question": "Who had the pole position in the August 15, 1981 race? "
    },
    {
        "answer": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*) > 1",
        "context": "CREATE TABLE player (School_ID VARCHAR); CREATE TABLE school (Location VARCHAR, School_ID VARCHAR)",
        "question": "Show the locations of schools that have more than 1 player."
    },
    {
        "answer": "SELECT extension FROM table_22771048_3 WHERE city_neighborhood = \"University of Washington\"",
        "context": "CREATE TABLE table_22771048_3 (extension VARCHAR, city_neighborhood VARCHAR)",
        "question": "Name the extension for university of washington"
    },
    {
        "answer": "SELECT LOCATION FROM school WHERE NOT School_ID IN (SELECT School_ID FROM Player)",
        "context": "CREATE TABLE school (LOCATION VARCHAR, School_ID VARCHAR); CREATE TABLE Player (LOCATION VARCHAR, School_ID VARCHAR)",
        "question": "List the locations of schools that do not have any player."
    },
    {
        "answer": "SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900",
        "context": "CREATE TABLE school (Denomination VARCHAR, Founded INTEGER)",
        "question": "Show the denomination shared by schools founded before 1890 and schools founded after 1900"
    },
    {
        "answer": "SELECT MIN(week) FROM table_name_71 WHERE game_site = \"oakland-alameda county coliseum\" AND attendance > 52 OFFSET 169",
        "context": "CREATE TABLE table_name_71 (week INTEGER, game_site VARCHAR, attendance VARCHAR)",
        "question": "Which Week has a Game site of oakland-alameda county coliseum, and an Attendance larger than 52,169?"
    },
    {
        "answer": "SELECT conversion_from_patent_application FROM table_2279413_1 WHERE maximum_term = \"10 years\" AND pct_route_available = \"Yes\"",
        "context": "CREATE TABLE table_2279413_1 (conversion_from_patent_application VARCHAR, maximum_term VARCHAR, pct_route_available VARCHAR)",
        "question": "When the PCT route available is yes and the maximum term is 10 years, what are the available conversions from patent applications?"
    },
    {
        "answer": "SELECT COUnT AS name FROM table_22810095_8 WHERE country = \"CIV\"",
        "context": "CREATE TABLE table_22810095_8 (COUnT VARCHAR, country VARCHAR)",
        "question": "How many names have a country of civ?"
    },
    {
        "answer": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_name = \"Khanewal District\"",
        "context": "CREATE TABLE district (district_id VARCHAR, district_name VARCHAR); CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR); CREATE TABLE store (store_name VARCHAR, store_id VARCHAR)",
        "question": "Find the names of all stores in Khanewal District."
    },
    {
        "answer": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id WHERE district_id = (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)",
        "context": "CREATE TABLE store_district (store_id VARCHAR); CREATE TABLE district (district_id VARCHAR, city_population VARCHAR); CREATE TABLE store (store_name VARCHAR, store_id VARCHAR)",
        "question": "Find all the stores in the district with the most population."
    },
    {
        "answer": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.store_name = \"Blackville\"",
        "context": "CREATE TABLE store (store_id VARCHAR, store_name VARCHAR); CREATE TABLE district (headquartered_city VARCHAR, district_id VARCHAR); CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR)",
        "question": "Which city is the headquarter of the store named \"Blackville\" in?"
    },
    {
        "answer": "SELECT t3.headquartered_city, COUNT(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city",
        "context": "CREATE TABLE district (headquartered_city VARCHAR, district_id VARCHAR); CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR); CREATE TABLE store (store_id VARCHAR)",
        "question": "Find the number of stores in each city."
    },
    {
        "answer": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE district (headquartered_city VARCHAR, district_id VARCHAR); CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR); CREATE TABLE store (store_id VARCHAR)",
        "question": "Find the city with the most number of stores."
    },
    {
        "answer": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id = t2.product_id JOIN store AS t3 ON t2.store_id = t3.store_id WHERE t3.store_name = \"Miramichi\"",
        "context": "CREATE TABLE store_product (product_id VARCHAR, store_id VARCHAR); CREATE TABLE store (store_id VARCHAR, store_name VARCHAR); CREATE TABLE product (product VARCHAR, product_id VARCHAR)",
        "question": "What products are available at store named \"Miramichi\"?"
    },
    {
        "answer": "SELECT product FROM product WHERE max_page_size = \"A4\" AND pages_per_minute_color < 5",
        "context": "CREATE TABLE product (product VARCHAR, max_page_size VARCHAR, pages_per_minute_color VARCHAR)",
        "question": "Find products with max page size as \"A4\" and pages per minute color smaller than 5."
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_75 WHERE winner = \"morgan brian\"",
        "context": "CREATE TABLE table_name_75 (year INTEGER, winner VARCHAR)",
        "question": "In what year did Morgan Brian win?"
    },
    {
        "answer": "SELECT winner FROM table_name_63 WHERE college = \"connecticut\" AND hometown = \"north syracuse, ny\"",
        "context": "CREATE TABLE table_name_63 (winner VARCHAR, college VARCHAR, hometown VARCHAR)",
        "question": "Who is the winner who attended college at Connecticut and is from North Syracuse, NY?"
    },
    {
        "answer": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = \"Village Store\"",
        "context": "CREATE TABLE district (District_name VARCHAR, district_id VARCHAR); CREATE TABLE store (store_id VARCHAR, Type VARCHAR); CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR)",
        "question": "Find the names of districts where have both city mall and village store type stores."
    },
    {
        "answer": "SELECT SUM(wins) FROM table_name_85 WHERE against < 1033 AND golden_rivers = \"nullawil\" AND byes < 2",
        "context": "CREATE TABLE table_name_85 (wins INTEGER, byes VARCHAR, against VARCHAR, golden_rivers VARCHAR)",
        "question": "What is the sum of Wins, when Against is less than 1033, when Golden Rivers is \"Nullawil\", and when Byes is less than 2?"
    },
    {
        "answer": "SELECT record FROM table_22815259_1 WHERE opponent = \"Arizona\"",
        "context": "CREATE TABLE table_22815259_1 (record VARCHAR, opponent VARCHAR)",
        "question": "Name the record for arizona"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_26 WHERE competition = \"european championships\" AND notes = \"66.81 m\"",
        "context": "CREATE TABLE table_name_26 (year INTEGER, competition VARCHAR, notes VARCHAR)",
        "question": "Which Year has a Competition of european championships, and Notes of 66.81 m?"
    },
    {
        "answer": "SELECT MIN(season) FROM table_name_43 WHERE households_viewers__in_millions_ < 25.4 AND viewer_rank___number_ = \"#6\"",
        "context": "CREATE TABLE table_name_43 (season INTEGER, households_viewers__in_millions_ VARCHAR, viewer_rank___number_ VARCHAR)",
        "question": "Which season had less than 25.4 viewers and had a viewer rank of #6?"
    },
    {
        "answer": "SELECT MIN(bronze) FROM table_name_3 WHERE total > 13 AND gold > 10 AND silver < 22",
        "context": "CREATE TABLE table_name_3 (bronze INTEGER, silver VARCHAR, total VARCHAR, gold VARCHAR)",
        "question": "What is the lowest number of bronze of the nation with more than 13 total medals, more than 10 gold medals, and less than 22 silvers?"
    },
    {
        "answer": "SELECT county FROM table_22815568_6 WHERE poverty_rate = \"12.9%\"",
        "context": "CREATE TABLE table_22815568_6 (county VARCHAR, poverty_rate VARCHAR)",
        "question": "If the poverty rate is 12.9%, what is the county?"
    },
    {
        "answer": "SELECT main_date FROM table_name_81 WHERE number_of_fixtures = 20",
        "context": "CREATE TABLE table_name_81 (main_date VARCHAR, number_of_fixtures VARCHAR)",
        "question": "What was the main date of the round with 20 fixtures?"
    },
    {
        "answer": "SELECT market_income_per_capita FROM table_22815568_6 WHERE poverty_rate = \"12.9%\"",
        "context": "CREATE TABLE table_22815568_6 (market_income_per_capita VARCHAR, poverty_rate VARCHAR)",
        "question": "If the poverty rate is 12.9%, what is the market income per capita?"
    },
    {
        "answer": "SELECT rating FROM table_22822468_2 WHERE viewers__millions_ = \"3.79\"",
        "context": "CREATE TABLE table_22822468_2 (rating VARCHAR, viewers__millions_ VARCHAR)",
        "question": "Name the rating for 3.79 viewers"
    },
    {
        "answer": "SELECT T1.pName, T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'",
        "context": "CREATE TABLE tryout (cName VARCHAR, pID VARCHAR, decision VARCHAR); CREATE TABLE player (pName VARCHAR, pID VARCHAR)",
        "question": "Find the name and college of students whose decisions are yes in the tryout."
    },
    {
        "answer": "SELECT score_in_final FROM table_name_97 WHERE tournament = \"$10,000 \u2013 tarakan , indonesia f2\"",
        "context": "CREATE TABLE table_name_97 (score_in_final VARCHAR, tournament VARCHAR)",
        "question": "What is the score of the final in $10,000 \u2013 tarakan , indonesia f2?"
    },
    {
        "answer": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes' AND T2.pPos = 'striker'",
        "context": "CREATE TABLE tryout (pID VARCHAR, decision VARCHAR, pPos VARCHAR); CREATE TABLE player (pName VARCHAR, pID VARCHAR)",
        "question": "Find the names of the students who are in the position of striker and got a yes tryout decision."
    },
    {
        "answer": "SELECT player FROM table_name_97 WHERE place = \"t9\" AND score = 73 - 69 - 74 = 216",
        "context": "CREATE TABLE table_name_97 (player VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "What was the player for t9 and a score of 73-69-74=216?"
    },
    {
        "answer": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'",
        "context": "CREATE TABLE tryout (cName VARCHAR, pID VARCHAR); CREATE TABLE player (pID VARCHAR, pName VARCHAR); CREATE TABLE college (state VARCHAR, cName VARCHAR)",
        "question": "Find the state of the college which player Charles is attending."
    },
    {
        "answer": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'",
        "context": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR); CREATE TABLE college (state VARCHAR, cName VARCHAR)",
        "question": "Find the states of the colleges that have students in the tryout who played in striker position."
    },
    {
        "answer": "SELECT MAX(T1.HS), pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS > 1000 GROUP BY T2.pPos",
        "context": "CREATE TABLE player (HS INTEGER, pID VARCHAR); CREATE TABLE tryout (pPos VARCHAR, pID VARCHAR)",
        "question": "What is the maximum training hours for the students whose training hours is greater than 1000 in different positions?"
    },
    {
        "answer": "SELECT T2.pName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T1.cName = (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)",
        "context": "CREATE TABLE college (cName VARCHAR, enr VARCHAR); CREATE TABLE tryout (pID VARCHAR, cName VARCHAR); CREATE TABLE player (pName VARCHAR, pID VARCHAR)",
        "question": "Find the name of the tryout players who are from the college with largest size."
    },
    {
        "answer": "SELECT DISTINCT T1.state, T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'",
        "context": "CREATE TABLE tryout (cName VARCHAR, decision VARCHAR); CREATE TABLE college (state VARCHAR, enr VARCHAR, cName VARCHAR)",
        "question": "What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision."
    },
    {
        "answer": "SELECT cName FROM College WHERE enr < 13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr > 15000 AND state = \"LA\"",
        "context": "CREATE TABLE College (cName VARCHAR, enr VARCHAR, state VARCHAR)",
        "question": "Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment."
    },
    {
        "answer": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid'",
        "context": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR); CREATE TABLE college (state VARCHAR, cName VARCHAR)",
        "question": "Find the names of states that have some college students playing in goalie and mid positions."
    },
    {
        "answer": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'",
        "context": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR); CREATE TABLE college (state VARCHAR, cName VARCHAR)",
        "question": "Find the names of states that have some college students playing in the mid position but not in the goalie position."
    },
    {
        "answer": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie')",
        "context": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR); CREATE TABLE college (state VARCHAR, cName VARCHAR)",
        "question": "How many states that have some college students playing in the mid position but not in the goalie position."
    },
    {
        "answer": "SELECT DISTINCT cName FROM college WHERE enr > (SELECT MIN(enr) FROM college WHERE state = 'FL')",
        "context": "CREATE TABLE college (cName VARCHAR, enr INTEGER, state VARCHAR)",
        "question": "Find names of colleges with enrollment greater than that of some (at least one) college in the FL state."
    },
    {
        "answer": "SELECT sec_wins FROM table_22825679_1 WHERE percentage = \".357\" AND home_record = \"4-3\"",
        "context": "CREATE TABLE table_22825679_1 (sec_wins VARCHAR, percentage VARCHAR, home_record VARCHAR)",
        "question": "Name the sec wins for .357 percentage and 4-3 home record"
    },
    {
        "answer": "SELECT score FROM table_name_63 WHERE team_1 = \"paris sg (d1)\"",
        "context": "CREATE TABLE table_name_63 (score VARCHAR, team_1 VARCHAR)",
        "question": "What was the score of the match where paris sg (d1) was team 1?"
    },
    {
        "answer": "SELECT T3.Shop_Name, T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID = T3.Shop_ID",
        "context": "CREATE TABLE shop (Shop_Name VARCHAR, Shop_ID VARCHAR); CREATE TABLE stock (Device_ID VARCHAR, Shop_ID VARCHAR); CREATE TABLE device (Carrier VARCHAR, Device_ID VARCHAR)",
        "question": "Show names of shops and the carriers of devices they have in stock."
    },
    {
        "answer": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*) > 1",
        "context": "CREATE TABLE shop (Shop_Name VARCHAR, Shop_ID VARCHAR); CREATE TABLE stock (Shop_ID VARCHAR)",
        "question": "Show names of shops that have more than one kind of device in stock."
    },
    {
        "answer": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE shop (Shop_Name VARCHAR, Shop_ID VARCHAR); CREATE TABLE stock (Shop_ID VARCHAR)",
        "question": "Show the name of the shop that has the most kind of devices in stock."
    },
    {
        "answer": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1",
        "context": "CREATE TABLE stock (Shop_ID VARCHAR, quantity INTEGER); CREATE TABLE shop (Shop_Name VARCHAR, Shop_ID VARCHAR)",
        "question": "Show the name of the shop that have the largest quantity of devices in stock."
    },
    {
        "answer": "SELECT surface FROM table_22834834_3 WHERE score_in_the_final = \"6\u20131, 6\u20137 (2\u20137) , 7\u20136 (7\u20135) , 7\u20136 (10\u20138)\"",
        "context": "CREATE TABLE table_22834834_3 (surface VARCHAR, score_in_the_final VARCHAR)",
        "question": "Which surfaces have the final score of 6\u20131, 6\u20137 (2\u20137) , 7\u20136 (7\u20135) , 7\u20136 (10\u20138)?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_22834834_3 WHERE opponent_in_the_final = \"Andre Agassi\"",
        "context": "CREATE TABLE table_22834834_3 (year INTEGER, opponent_in_the_final VARCHAR)",
        "question": "What is the last year that Andre Agassi was the final opponent?"
    },
    {
        "answer": "SELECT Shop_Name FROM shop WHERE NOT Shop_ID IN (SELECT Shop_ID FROM stock)",
        "context": "CREATE TABLE shop (Shop_Name VARCHAR, Shop_ID VARCHAR); CREATE TABLE stock (Shop_Name VARCHAR, Shop_ID VARCHAR)",
        "question": "List the names of shops that have no devices in stock."
    },
    {
        "answer": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID = T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*) > 1",
        "context": "CREATE TABLE stock (Device_ID VARCHAR); CREATE TABLE device (Carrier VARCHAR, Device_ID VARCHAR)",
        "question": "Show the carriers of devices in stock at more than one shop."
    },
    {
        "answer": "SELECT entrant FROM table_name_77 WHERE laps = 17",
        "context": "CREATE TABLE table_name_77 (entrant VARCHAR, laps VARCHAR)",
        "question": "Can you tell me the Entrant that has the Laps of 17?"
    },
    {
        "answer": "SELECT opponent_in_the_final FROM table_22834834_2 WHERE championship = \"Frankfurt\" AND year < 1993.0",
        "context": "CREATE TABLE table_22834834_2 (opponent_in_the_final VARCHAR, championship VARCHAR, year VARCHAR)",
        "question": "Who is the opponent in the final when frankfurt is championship and the year is less than 1993.0?"
    },
    {
        "answer": "SELECT MIN(Order_Quantity), AVG(Order_Quantity), MAX(Order_Quantity) FROM INVOICES",
        "context": "CREATE TABLE INVOICES (Order_Quantity INTEGER)",
        "question": "Show the minimum, average, maximum order quantity of all invoices."
    },
    {
        "answer": "SELECT MAX(year) FROM table_22839669_1 WHERE score_in_the_final = \"4\u20136, 3\u20136, 6\u20134, 5\u20137\"",
        "context": "CREATE TABLE table_22839669_1 (year INTEGER, score_in_the_final VARCHAR)",
        "question": "What is the most recent year where the final score is 4\u20136, 3\u20136, 6\u20134, 5\u20137?"
    },
    {
        "answer": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = \"FJA Filming\"",
        "context": "CREATE TABLE Addresses (City_Town VARCHAR, Address_ID VARCHAR); CREATE TABLE Stores (Address_ID VARCHAR, Store_Name VARCHAR)",
        "question": "Which city is the address of the store named \"FJA Filming\" located in?"
    },
    {
        "answer": "SELECT AVG(played) FROM table_name_72 WHERE points = \"0*\"",
        "context": "CREATE TABLE table_name_72 (played INTEGER, points VARCHAR)",
        "question": "Name the average Played with a Points of 0*?"
    },
    {
        "answer": "SELECT T1.Service_Type_Description, T2.Service_Type_Code, COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T2.Service_Type_Code",
        "context": "CREATE TABLE Services (Service_Type_Code VARCHAR); CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR)",
        "question": "What is the description, code and the corresponding count of each service type?"
    },
    {
        "answer": "SELECT T1.Service_Type_Description, T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Services (Service_Type_Code VARCHAR); CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR)",
        "question": "What is the description and code of the type of service that is performed the most often?"
    },
    {
        "answer": "SELECT T1.Store_Phone, T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID",
        "context": "CREATE TABLE Services (Workshop_Group_ID VARCHAR); CREATE TABLE Drama_Workshop_Groups (Store_Phone VARCHAR, Store_Email_Address VARCHAR, Workshop_Group_ID VARCHAR)",
        "question": "What are the phones and emails of workshop groups in which services are performed?"
    },
    {
        "answer": "SELECT T1.Store_Phone, T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T2.Product_Name = \"film\"",
        "context": "CREATE TABLE Services (Workshop_Group_ID VARCHAR, Product_Name VARCHAR); CREATE TABLE Drama_Workshop_Groups (Store_Phone VARCHAR, Store_Email_Address VARCHAR, Workshop_Group_ID VARCHAR)",
        "question": "What are the names of workshop groups in which services with product name \"film\" are performed?"
    },
    {
        "answer": "SELECT opponent FROM table_22853654_9 WHERE result = \"3\u20136, 4\u20136, 6\u20131, 6\u20137 (7\u20139)\"",
        "context": "CREATE TABLE table_22853654_9 (opponent VARCHAR, result VARCHAR)",
        "question": "Name the opponent for 3\u20136, 4\u20136, 6\u20131, 6\u20137 (7\u20139)"
    },
    {
        "answer": "SELECT MAX(population__2002_census_data_) FROM table_22854436_1",
        "context": "CREATE TABLE table_22854436_1 (population__2002_census_data_ INTEGER)",
        "question": "Name the most population 2002"
    },
    {
        "answer": "SELECT COUNT(per_capita_average_annual_renewable_water_resources_m_3) FROM table_22854436_1 WHERE average_annual_rainfall__mm_ = \"650\"",
        "context": "CREATE TABLE table_22854436_1 (per_capita_average_annual_renewable_water_resources_m_3 VARCHAR, average_annual_rainfall__mm_ VARCHAR)",
        "question": "Name the total water resources m3 for rainfall being 650"
    },
    {
        "answer": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID = T2.Product_ID WHERE T2.Product_price > 2000",
        "context": "CREATE TABLE Products (Product_ID VARCHAR, Product_price INTEGER); CREATE TABLE ORDER_ITEMS (Other_Item_Details VARCHAR, Product_ID VARCHAR)",
        "question": "What are the order details of the products with price higher than 2000?"
    },
    {
        "answer": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1",
        "context": "CREATE TABLE Customer_Orders (Actual_Delivery_Date VARCHAR, Order_ID VARCHAR); CREATE TABLE ORDER_ITEMS (Order_ID VARCHAR, Order_Quantity VARCHAR)",
        "question": "What are the actual delivery dates of orders with quantity 1?"
    },
    {
        "answer": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000",
        "context": "CREATE TABLE Products (Product_ID VARCHAR, Product_price INTEGER); CREATE TABLE ORDER_ITEMS (Order_ID VARCHAR, Product_ID VARCHAR); CREATE TABLE Customer_Orders (Order_Date VARCHAR, Order_ID VARCHAR)",
        "question": "What are the order dates of orders with price higher than 1000?"
    },
    {
        "answer": "SELECT championship FROM table_22858557_1 WHERE opponent_in_final = \"Steffi Graf\"",
        "context": "CREATE TABLE table_22858557_1 (championship VARCHAR, opponent_in_final VARCHAR)",
        "question": "How many championships have there been with Steffi Graf?"
    },
    {
        "answer": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = \"Feliciaberg\"",
        "context": "CREATE TABLE Addresses (Address_ID VARCHAR, City_Town VARCHAR); CREATE TABLE Drama_Workshop_Groups (Store_Name VARCHAR, Address_ID VARCHAR)",
        "question": "What are the names of the drama workshop groups with address in Feliciaberg city?"
    },
    {
        "answer": "SELECT COUNT(score_in_final) FROM table_22858557_1 WHERE championship = \"US Open\" AND outcome = \"Runner-up\"",
        "context": "CREATE TABLE table_22858557_1 (score_in_final VARCHAR, championship VARCHAR, outcome VARCHAR)",
        "question": "What is the amount of US open runner-up score?"
    },
    {
        "answer": "SELECT average_annual_rainfall__mm_ FROM table_22854436_1 WHERE population__2002_census_data_ = 493984",
        "context": "CREATE TABLE table_22854436_1 (average_annual_rainfall__mm_ VARCHAR, population__2002_census_data_ VARCHAR)",
        "question": "Name the annual rainfail for 2002 population being 493984"
    },
    {
        "answer": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Drama_Workshop_Groups (Marketing_Region_Code VARCHAR)",
        "question": "What is the marketing region code that has the most drama workshop groups?"
    },
    {
        "answer": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID = T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID = T2.Address_ID",
        "context": "CREATE TABLE Customers (Address_ID VARCHAR); CREATE TABLE Addresses (City_Town VARCHAR, Address_ID VARCHAR); CREATE TABLE Performers (Address_ID VARCHAR)",
        "question": "Show all cities where at least one customer lives in but no performer lives in."
    },
    {
        "answer": "SELECT AVG(played) FROM table_name_94 WHERE position < 4 AND wins > 16 AND points = 38 AND goals_against > 35",
        "context": "CREATE TABLE table_name_94 (played INTEGER, goals_against VARCHAR, points VARCHAR, position VARCHAR, wins VARCHAR)",
        "question": "Which Played has a Position smaller than 4, and Wins larger than 16, and Points of 38, and Goals against larger than 35?"
    },
    {
        "answer": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = \"stop\"",
        "context": "CREATE TABLE Bookings (Workshop_Group_ID VARCHAR, Status_Code VARCHAR); CREATE TABLE Drama_Workshop_Groups (Store_Name VARCHAR, Workshop_Group_ID VARCHAR)",
        "question": "What are the names of the workshop groups that have bookings with status code \"stop\"?"
    },
    {
        "answer": "SELECT to_par FROM table_name_38 WHERE score = 71 - 68 - 69 = 208",
        "context": "CREATE TABLE table_name_38 (to_par VARCHAR, score VARCHAR)",
        "question": "What is the To Par score for the player with an overall score of 71-68-69=208?"
    },
    {
        "answer": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.State_County = \"Alaska\"",
        "context": "CREATE TABLE Drama_Workshop_Groups (Store_Email_Address VARCHAR, Address_ID VARCHAR); CREATE TABLE Addresses (Address_ID VARCHAR, State_County VARCHAR)",
        "question": "What are the email addresses of the drama workshop groups with address in Alaska state?"
    },
    {
        "answer": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'photo' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code WHERE T2.Product_Name = 'film'",
        "context": "CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR); CREATE TABLE Services (Service_Type_Code VARCHAR, Product_Name VARCHAR)",
        "question": "What is the description of the service type which offers both the photo product and the film product?"
    },
    {
        "answer": "SELECT SUM(matches) FROM table_name_87 WHERE balls < 224 AND average > 38.25 AND s_rate > 139.09",
        "context": "CREATE TABLE table_name_87 (matches INTEGER, s_rate VARCHAR, balls VARCHAR, average VARCHAR)",
        "question": "How many Matches have Balls smaller than 224, and an Average larger than 38.25, and an S/Rate larger than 139.09?"
    },
    {
        "answer": "SELECT high_assists FROM table_22871239_8 WHERE location_attendance = \"American Airlines Center 19,585\"",
        "context": "CREATE TABLE table_22871239_8 (high_assists VARCHAR, location_attendance VARCHAR)",
        "question": "Name the high assists for american airlines center 19,585"
    },
    {
        "answer": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T2.firstname = \"Marianne\"",
        "context": "CREATE TABLE Songs (Title VARCHAR, SongId VARCHAR); CREATE TABLE Performance (bandmate VARCHAR, SongId VARCHAR); CREATE TABLE Band (id VARCHAR, firstname VARCHAR)",
        "question": "Find all the songs produced by artists with first name \"Marianne\"."
    },
    {
        "answer": "SELECT T2.firstname, T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = \"Badlands\"",
        "context": "CREATE TABLE Band (firstname VARCHAR, lastname VARCHAR, id VARCHAR); CREATE TABLE Performance (bandmate VARCHAR, SongId VARCHAR); CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)",
        "question": "Who performed the song named \"Badlands\"? Show the first name and the last name."
    },
    {
        "answer": "SELECT T2.firstname, T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = \"Badlands\" AND T1.StagePosition = \"back\"",
        "context": "CREATE TABLE Band (firstname VARCHAR, lastname VARCHAR, id VARCHAR); CREATE TABLE Performance (bandmate VARCHAR, SongId VARCHAR, StagePosition VARCHAR); CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)",
        "question": "Who is performing in the back stage position for the song \"Badlands\"? Show the first name and the last name."
    },
    {
        "answer": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY lastname ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Songs (SongId VARCHAR); CREATE TABLE Band (lastname VARCHAR, id VARCHAR); CREATE TABLE Performance (bandmate VARCHAR, SongId VARCHAR)",
        "question": "What is the last name of the musician that have produced the most number of songs?"
    },
    {
        "answer": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id WHERE stageposition = \"back\" GROUP BY lastname ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Band (lastname VARCHAR, id VARCHAR); CREATE TABLE Performance (bandmate VARCHAR)",
        "question": "What is the last name of the musician that has been at the back position the most?"
    },
    {
        "answer": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId JOIN Instruments AS T4 ON T4.songid = T3.songid AND T4.bandmateid = T2.id WHERE T2.lastname = \"Heilo\" AND T3.title = \"Le Pop\"",
        "context": "CREATE TABLE Songs (SongId VARCHAR, songid VARCHAR, title VARCHAR); CREATE TABLE Performance (bandmate VARCHAR, SongId VARCHAR); CREATE TABLE Band (id VARCHAR, lastname VARCHAR); CREATE TABLE Instruments (instrument VARCHAR, songid VARCHAR, bandmateid VARCHAR)",
        "question": "What instrument did the musician with last name \"Heilo\" use in the song \"Le Pop\"?"
    },
    {
        "answer": "SELECT MAX(assists) FROM table_22875514_3 WHERE points = \"129-3.9\"",
        "context": "CREATE TABLE table_22875514_3 (assists INTEGER, points VARCHAR)",
        "question": "What is the most assists for points 129-3.9?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = \"Le Pop\"",
        "context": "CREATE TABLE instruments (songid VARCHAR); CREATE TABLE songs (songid VARCHAR)",
        "question": "How many instruments does the song \"Le Pop\" use?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid = T2.id WHERE T2.lastname = \"Heilo\"",
        "context": "CREATE TABLE instruments (bandmateid VARCHAR); CREATE TABLE Band (id VARCHAR, lastname VARCHAR)",
        "question": "How many instrument does the musician with last name \"Heilo\" use?"
    },
    {
        "answer": "SELECT COUNT(high_rebounds) FROM table_22879262_14 WHERE score = \"L 92\u201396 (OT)\"",
        "context": "CREATE TABLE table_22879262_14 (high_rebounds VARCHAR, score VARCHAR)",
        "question": "Name the number of high rebounds for l 92\u201396 (ot)"
    },
    {
        "answer": "SELECT AVG(qualifying_goals) FROM table_name_3 WHERE player = \"jack froggatt\" AND finals_goals > 0",
        "context": "CREATE TABLE table_name_3 (qualifying_goals INTEGER, player VARCHAR, finals_goals VARCHAR)",
        "question": "What is the Average Qualifying Goals for Jack Froggatt where the Final Goals is greater than 0?"
    },
    {
        "answer": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE vocals (TYPE VARCHAR)",
        "question": "Which vocal type is the most frequently appearring type?"
    },
    {
        "answer": "SELECT COUNT(total_goals) FROM table_name_1 WHERE player = \"stan mortensen\" AND qualifying_goals > 3",
        "context": "CREATE TABLE table_name_1 (total_goals VARCHAR, player VARCHAR, qualifying_goals VARCHAR)",
        "question": "What is the total number of Total Goals scored by Stan Mortensen where the Qualifying Goals is greater than 3?"
    },
    {
        "answer": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.firstname = \"Solveig\" AND T2.title = \"A Bar In Amsterdam\"",
        "context": "CREATE TABLE vocals (songid VARCHAR, bandmate VARCHAR); CREATE TABLE band (id VARCHAR, firstname VARCHAR); CREATE TABLE songs (songid VARCHAR, title VARCHAR)",
        "question": "Which vocal type did the musician with first name \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?"
    },
    {
        "answer": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid WHERE TYPE = \"lead\"",
        "context": "CREATE TABLE songs (title VARCHAR, songid VARCHAR); CREATE TABLE vocals (songid VARCHAR)",
        "question": "Find all the songs that do not have a lead vocal."
    },
    {
        "answer": "SELECT T2.firstname, T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = \"Le Pop\"",
        "context": "CREATE TABLE Band (firstname VARCHAR, lastname VARCHAR, id VARCHAR); CREATE TABLE Performance (bandmate VARCHAR, SongId VARCHAR); CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)",
        "question": "Who performed the song named \"Le Pop\"?"
    },
    {
        "answer": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId JOIN Instruments AS T4 ON T4.songid = T3.songid AND T4.bandmateid = T2.id WHERE T2.lastname = \"Heilo\" AND T3.title = \"Badlands\"",
        "context": "CREATE TABLE Songs (SongId VARCHAR, songid VARCHAR, title VARCHAR); CREATE TABLE Performance (bandmate VARCHAR, SongId VARCHAR); CREATE TABLE Band (id VARCHAR, lastname VARCHAR); CREATE TABLE Instruments (instrument VARCHAR, songid VARCHAR, bandmateid VARCHAR)",
        "question": "What instrument did the musician with last name \"Heilo\" use in the song \"Badlands\"?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = \"Badlands\"",
        "context": "CREATE TABLE instruments (songid VARCHAR); CREATE TABLE songs (songid VARCHAR)",
        "question": "How many instruments does the song \"Badlands\" use?"
    },
    {
        "answer": "SELECT episode FROM table_name_35 WHERE rating = \"1.8\" AND viewers__m_ < 2.73",
        "context": "CREATE TABLE table_name_35 (episode VARCHAR, rating VARCHAR, viewers__m_ VARCHAR)",
        "question": "What Episode has a Rating of 1.8, and Viewers (m) smaller than 2.73?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = \"shared\"",
        "context": "CREATE TABLE vocals (songid VARCHAR); CREATE TABLE songs (songid VARCHAR)",
        "question": "How many songs have a shared vocal?"
    },
    {
        "answer": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid = t2.songid WHERE TYPE = \"back\"",
        "context": "CREATE TABLE songs (title VARCHAR, songid VARCHAR); CREATE TABLE vocals (songid VARCHAR)",
        "question": "Find all the songs that do not have a back vocal."
    },
    {
        "answer": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = \"Solveig\" GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE vocals (bandmate VARCHAR); CREATE TABLE band (id VARCHAR)",
        "question": "Which vocal type has the band mate with first name \"Solveig\" played the most?"
    },
    {
        "answer": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid JOIN band AS T3 ON T1.bandmate = T3.id WHERE T3.lastname = \"Heilo\" AND T2.title = \"Der Kapitan\"",
        "context": "CREATE TABLE band (id VARCHAR, lastname VARCHAR); CREATE TABLE vocals (songid VARCHAR, bandmate VARCHAR); CREATE TABLE songs (songid VARCHAR, title VARCHAR)",
        "question": "Which vocal type did the musician with last name \"Heilo\" played in the song with title \"Der Kapitan\"?"
    },
    {
        "answer": "SELECT surface FROM table_name_74 WHERE opponents_in_the_final = \"mark edmondson sherwood stewart\" AND tournament = \"dallas , u.s.\"",
        "context": "CREATE TABLE table_name_74 (surface VARCHAR, opponents_in_the_final VARCHAR, tournament VARCHAR)",
        "question": "which Surface has Opponents in the final of mark edmondson sherwood stewart, and a Tournament of dallas , u.s.?"
    },
    {
        "answer": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate = T2.id WHERE firstname = \"Marianne\" GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE vocals (bandmate VARCHAR); CREATE TABLE band (id VARCHAR)",
        "question": "Which vocal type has the band mate with first name \"Marianne\" played the most?"
    },
    {
        "answer": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate = t2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY firstname ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Songs (SongId VARCHAR); CREATE TABLE Band (firstname VARCHAR, id VARCHAR); CREATE TABLE Performance (bandmate VARCHAR)",
        "question": "Find the first name of the band mate that has performed in most songs."
    },
    {
        "answer": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE T1.title = \"A Kiss Before You Go: Live in Hamburg\"",
        "context": "CREATE TABLE songs (title VARCHAR, songid VARCHAR); CREATE TABLE albums (aid VARCHAR, title VARCHAR); CREATE TABLE tracklists (albumid VARCHAR, songid VARCHAR)",
        "question": "What are the songs in album \"A Kiss Before You Go: Live in Hamburg\"?"
    },
    {
        "answer": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE t1.label = \"Universal Music Group\"",
        "context": "CREATE TABLE songs (title VARCHAR, songid VARCHAR); CREATE TABLE albums (aid VARCHAR); CREATE TABLE tracklists (albumid VARCHAR, songid VARCHAR)",
        "question": "What are all the songs in albums under label \"Universal Music Group\"?"
    },
    {
        "answer": "SELECT total FROM table_name_91 WHERE coppa_italia = 0 AND champions_league = 1 AND serie_a < 2 AND name = \"mauro camoranesi\"",
        "context": "CREATE TABLE table_name_91 (total VARCHAR, name VARCHAR, serie_a VARCHAR, coppa_italia VARCHAR, champions_league VARCHAR)",
        "question": "What was the total of Mauro Camoranesi when coppa italia was 0, champions league was 1 and less than 2 serie A?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE t1.type = \"Studio\"",
        "context": "CREATE TABLE songs (title VARCHAR, songid VARCHAR); CREATE TABLE albums (aid VARCHAR); CREATE TABLE tracklists (albumid VARCHAR, songid VARCHAR)",
        "question": "Find the number of songs in all the studio albums."
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_62 WHERE champions_league = 0 AND serie_a > 1 AND coppa_italia < 0",
        "context": "CREATE TABLE table_name_62 (total INTEGER, coppa_italia VARCHAR, champions_league VARCHAR, serie_a VARCHAR)",
        "question": "What's the total when the champions league was 0, the coppa italia was less than 0, and the Serie A was more than 1?"
    },
    {
        "answer": "SELECT T2.firstname, T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId WHERE T3.Title = \"Der Kapitan\" AND T1.StagePosition = \"back\"",
        "context": "CREATE TABLE Band (firstname VARCHAR, lastname VARCHAR, id VARCHAR); CREATE TABLE Performance (bandmate VARCHAR, SongId VARCHAR, StagePosition VARCHAR); CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)",
        "question": "Who is performing in the back stage position for the song \"Der Kapitan\"? Show the first name and last name."
    },
    {
        "answer": "SELECT giant_slalom FROM table_name_14 WHERE combined = \"1\" AND country = \"united states\" AND victories > 11",
        "context": "CREATE TABLE table_name_14 (giant_slalom VARCHAR, victories VARCHAR, combined VARCHAR, country VARCHAR)",
        "question": "Can you tell me the Giant Slalom that has the Combined of 1, and the Country of united states, and the Victories larger than 11?"
    },
    {
        "answer": "SELECT SUM(revenue) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan'",
        "context": "CREATE TABLE manufacturers (revenue INTEGER, Headquarter VARCHAR)",
        "question": "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?"
    },
    {
        "answer": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony'",
        "context": "CREATE TABLE manufacturers (code VARCHAR, name VARCHAR); CREATE TABLE products (name VARCHAR, Manufacturer VARCHAR)",
        "question": "Find the name of product that is produced by both companies Creative Labs and Sony."
    },
    {
        "answer": "SELECT no_in_series FROM table_228973_11 WHERE directed_by = \"David James Elliott\"",
        "context": "CREATE TABLE table_228973_11 (no_in_series VARCHAR, directed_by VARCHAR)",
        "question": "David James Elliott directed which episode number within the series?"
    },
    {
        "answer": "SELECT 1 AS st_leg FROM table_name_57 WHERE home__2nd_leg_ = \"gimnasia de mendoza\"",
        "context": "CREATE TABLE table_name_57 (home__2nd_leg_ VARCHAR)",
        "question": "What was the score on the first leg when gimnasia de mendoza played at home for the second leg?"
    },
    {
        "answer": "SELECT MAX(prod__number) FROM table_2289806_1 WHERE episode__number = 1",
        "context": "CREATE TABLE table_2289806_1 (prod__number INTEGER, episode__number VARCHAR)",
        "question": "How many product # have episode 1?"
    },
    {
        "answer": "SELECT windows_builders FROM table_22903426_1 WHERE name = \"Apache Gump\"",
        "context": "CREATE TABLE table_22903426_1 (windows_builders VARCHAR, name VARCHAR)",
        "question": "Name the windows builders for apache gump"
    },
    {
        "answer": "SELECT SUM(revenue), name FROM manufacturers GROUP BY name",
        "context": "CREATE TABLE manufacturers (name VARCHAR, revenue INTEGER)",
        "question": "Find the total revenue for each manufacturer."
    },
    {
        "answer": "SELECT MAX(average) FROM table_name_62 WHERE place < 3 AND total_points < 433 AND rank_by_average < 2",
        "context": "CREATE TABLE table_name_62 (average INTEGER, rank_by_average VARCHAR, place VARCHAR, total_points VARCHAR)",
        "question": "What is the highest average with less than 3 places, less than 433 total points, and a rank less than 2?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT name) FROM products WHERE NOT name IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony')",
        "context": "CREATE TABLE manufacturers (code VARCHAR, name VARCHAR); CREATE TABLE products (name VARCHAR); CREATE TABLE products (name VARCHAR, Manufacturer VARCHAR)",
        "question": "Find number of products which Sony does not make."
    },
    {
        "answer": "SELECT COUNT(*), T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name",
        "context": "CREATE TABLE products (Manufacturer VARCHAR); CREATE TABLE manufacturers (name VARCHAR, code VARCHAR)",
        "question": "Find the number of products for each manufacturer, showing the name of each company."
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_44 WHERE surface = \"hard\" AND championship = \"washington, d.c. , u.s.\" AND opponent_in_the_final = \"ivan lendl\"",
        "context": "CREATE TABLE table_name_44 (score_in_the_final VARCHAR, opponent_in_the_final VARCHAR, surface VARCHAR, championship VARCHAR)",
        "question": "What Score in the final has a Surface of hard, a Championship of washington, d.c. , u.s., and an Opponent in the final of ivan lendl?"
    },
    {
        "answer": "SELECT MAX(number_of_seasons_in_liga_mx) FROM table_name_33 WHERE club = \"cruz azul\" AND number_of_seasons_in_top_division > 68",
        "context": "CREATE TABLE table_name_33 (number_of_seasons_in_liga_mx INTEGER, club VARCHAR, number_of_seasons_in_top_division VARCHAR)",
        "question": "What is the highest Number of seasons in Liga MX for Club cruz azul, when their season in the top division is higher than 68?"
    },
    {
        "answer": "SELECT COUNT(top_division_titles) FROM table_name_55 WHERE number_of_seasons_in_top_division > 40 AND first_season_of_current_spell_in_top_division = \"1943-44\" AND number_of_seasons_in_liga_mx > 89",
        "context": "CREATE TABLE table_name_55 (top_division_titles VARCHAR, number_of_seasons_in_liga_mx VARCHAR, number_of_seasons_in_top_division VARCHAR, first_season_of_current_spell_in_top_division VARCHAR)",
        "question": "What is the total number of Top division titles for the club that has more than 40 seasons in top division, a First season of current spell in top division of 1943-44, and more than 89 seasons in Liga MX?"
    },
    {
        "answer": "SELECT SUM(top_division_titles) FROM table_name_66 WHERE number_of_seasons_in_liga_mx > 42 AND club = \"guadalajara\"",
        "context": "CREATE TABLE table_name_66 (top_division_titles INTEGER, number_of_seasons_in_liga_mx VARCHAR, club VARCHAR)",
        "question": "How many top division titles does Club Guadalajara have, with more than 42 seasons in Liga MX?"
    },
    {
        "answer": "SELECT COUNT(race_3_winner) FROM table_22905641_2 WHERE race_2_winner = \"Mitch Evans\"",
        "context": "CREATE TABLE table_22905641_2 (race_3_winner VARCHAR, race_2_winner VARCHAR)",
        "question": "How many race 3 winners were there when Mitch Evans won race 2?"
    },
    {
        "answer": "SELECT date FROM table_22905641_2 WHERE circuit = \"Symmons Plains Raceway\"",
        "context": "CREATE TABLE table_22905641_2 (date VARCHAR, circuit VARCHAR)",
        "question": "What date was the race at the Symmons Plains Raceway?"
    },
    {
        "answer": "SELECT name, price FROM products WHERE price >= 180 ORDER BY price DESC, name",
        "context": "CREATE TABLE products (name VARCHAR, price VARCHAR)",
        "question": "Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order)."
    },
    {
        "answer": "SELECT MAX(_number) FROM table_22904752_1 WHERE written_by = \"David Hoselton\"",
        "context": "CREATE TABLE table_22904752_1 (_number INTEGER, written_by VARCHAR)",
        "question": "How many # were written by david hoselton?"
    },
    {
        "answer": "SELECT AVG(T1.Price), T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING AVG(T1.price) >= 150",
        "context": "CREATE TABLE Manufacturers (name VARCHAR, code VARCHAR); CREATE TABLE products (Price INTEGER, manufacturer VARCHAR, price INTEGER)",
        "question": "Select the names of manufacturer whose products have an average price higher than or equal to $150."
    },
    {
        "answer": "SELECT MIN(winners_share__) AS $_ FROM table_229059_2 WHERE champion = \"Se Ri Pak (2)\"",
        "context": "CREATE TABLE table_229059_2 (winners_share__ INTEGER, champion VARCHAR)",
        "question": "What was the winner share (in $) in the year when Se Ri Pak (2) was the champion?"
    },
    {
        "answer": "SELECT T1.Name, MAX(T1.Price), T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name",
        "context": "CREATE TABLE Manufacturers (name VARCHAR, code VARCHAR); CREATE TABLE products (Name VARCHAR, Price INTEGER, manufacturer VARCHAR)",
        "question": "Select the name of each manufacturer along with the name and price of its most expensive product."
    },
    {
        "answer": "SELECT competition FROM table_name_80 WHERE venue = \"serravalle, san marino\"",
        "context": "CREATE TABLE table_name_80 (competition VARCHAR, venue VARCHAR)",
        "question": "What is the competition that was at serravalle, san marino?"
    },
    {
        "answer": "SELECT problem_log_id, log_entry_date FROM problem_log WHERE problem_id = 10",
        "context": "CREATE TABLE problem_log (problem_log_id VARCHAR, log_entry_date VARCHAR, problem_id VARCHAR)",
        "question": "Find all the ids and dates of the logs for the problem whose id is 10."
    },
    {
        "answer": "SELECT DISTINCT staff_first_name, staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1",
        "context": "CREATE TABLE problem_log (assigned_to_staff_id VARCHAR, problem_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR)",
        "question": "List the first and last names of all distinct staff members who are assigned to the problem whose id is 1."
    },
    {
        "answer": "SELECT DISTINCT T2.problem_id, T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"",
        "context": "CREATE TABLE problem_log (problem_id VARCHAR, problem_log_id VARCHAR, assigned_to_staff_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR, staff_first_name VARCHAR, staff_last_name VARCHAR)",
        "question": "List the problem id and log id which are assigned to the staff named Rylan Homenick."
    },
    {
        "answer": "SELECT COUNT(*), T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE problems (product_id VARCHAR); CREATE TABLE product (product_name VARCHAR, product_id VARCHAR)",
        "question": "How many problems does the product with the most problems have? List the number of the problems and product name."
    },
    {
        "answer": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"",
        "context": "CREATE TABLE staff (staff_id VARCHAR, staff_first_name VARCHAR); CREATE TABLE problems (problem_description VARCHAR, reported_by_staff_id VARCHAR)",
        "question": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop."
    },
    {
        "answer": "SELECT COUNT(graphical) FROM table_22915134_2 WHERE ignition_timing = \"68-292-68-292\"",
        "context": "CREATE TABLE table_22915134_2 (graphical VARCHAR, ignition_timing VARCHAR)",
        "question": "When 68-292-68-292 is the ignition timing how many graphicals is it?"
    },
    {
        "answer": "SELECT COUNT(*), T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id",
        "context": "CREATE TABLE product (product_id VARCHAR); CREATE TABLE problems (product_id VARCHAR, date_problem_reported INTEGER)",
        "question": "For each product that has problems, find the number of problems reported after 1986-11-13 and the product id?"
    },
    {
        "answer": "SELECT COUNT(second) FROM table_name_5 WHERE first > 18 AND season = \"1992-93\" AND premier > 16",
        "context": "CREATE TABLE table_name_5 (second VARCHAR, premier VARCHAR, first VARCHAR, season VARCHAR)",
        "question": "What is the total number of Second, when First is greater than 18, when Season is 1992-93, and when Premier is greater than 16?"
    },
    {
        "answer": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\"",
        "context": "CREATE TABLE staff (staff_id VARCHAR, staff_first_name VARCHAR, staff_last_name VARCHAR); CREATE TABLE problems (reported_by_staff_id VARCHAR)",
        "question": "What are the id of problems reported by the staff named Dameon Frami or Jolie Weber?"
    },
    {
        "answer": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\"",
        "context": "CREATE TABLE problems (reported_by_staff_id VARCHAR, closure_authorised_by_staff_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR, staff_first_name VARCHAR, staff_last_name VARCHAR)",
        "question": "What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst?"
    },
    {
        "answer": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported < (SELECT MIN(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Lysanne\" AND T4.staff_last_name = \"Turcotte\")",
        "context": "CREATE TABLE problems (problem_id VARCHAR, reported_by_staff_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR, staff_first_name VARCHAR, staff_last_name VARCHAR); CREATE TABLE problems (reported_by_staff_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR)",
        "question": "What are the ids of the problems reported before the date of any problem reported by Lysanne Turcotte?"
    },
    {
        "answer": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported > (SELECT MAX(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\")",
        "context": "CREATE TABLE problems (problem_id VARCHAR, reported_by_staff_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR, staff_first_name VARCHAR, staff_last_name VARCHAR); CREATE TABLE problems (reported_by_staff_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR)",
        "question": "What are the ids of the problems reported after the date of any problems reported by Rylan Homenick?"
    },
    {
        "answer": "SELECT mountains_classification_klasyfikacja_g\u00f3rska FROM table_22917458_15 WHERE winner = \"Alessandro Ballan\"",
        "context": "CREATE TABLE table_22917458_15 (mountains_classification_klasyfikacja_g\u00f3rska VARCHAR, winner VARCHAR)",
        "question": "Who was the mountain classification winner in the stage won by Alessandro Ballan?"
    },
    {
        "answer": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"",
        "context": "CREATE TABLE problems (problem_id VARCHAR, product_id VARCHAR, date_problem_reported VARCHAR); CREATE TABLE product (product_id VARCHAR, product_name VARCHAR)",
        "question": "List the ids of the problems from the product \"voluptatem\" that are reported after 1995?"
    },
    {
        "answer": "SELECT T3.staff_first_name, T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name, T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"",
        "context": "CREATE TABLE product (product_name VARCHAR, product_id VARCHAR); CREATE TABLE staff (staff_first_name VARCHAR, staff_last_name VARCHAR, staff_id VARCHAR); CREATE TABLE problems (product_id VARCHAR, reported_by_staff_id VARCHAR)",
        "question": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"?"
    },
    {
        "answer": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Lacey\" AND T3.staff_last_name = \"Bosco\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"Kenton\" AND T3.staff_last_name = \"Champlin\"",
        "context": "CREATE TABLE product (product_name VARCHAR, product_id VARCHAR); CREATE TABLE staff (staff_id VARCHAR, staff_first_name VARCHAR, staff_last_name VARCHAR); CREATE TABLE problems (product_id VARCHAR, reported_by_staff_id VARCHAR)",
        "question": "Find the products which have problems reported by both Lacey Bosco and Kenton Champlin?"
    },
    {
        "answer": "SELECT COUNT(military_deaths) FROM table_name_41 WHERE military_and_or_civilian_wounded = \"78\" AND total_deaths > 27",
        "context": "CREATE TABLE table_name_41 (military_deaths VARCHAR, military_and_or_civilian_wounded VARCHAR, total_deaths VARCHAR)",
        "question": "What is the total number of military deaths when there are 78 military and/or civilian wounded and more than 27 total deaths?"
    },
    {
        "answer": "SELECT COUNT(*) FROM branch WHERE membership_amount > (SELECT AVG(membership_amount) FROM branch)",
        "context": "CREATE TABLE branch (membership_amount INTEGER)",
        "question": "How many branches where have more than average number of memberships are there?"
    },
    {
        "answer": "SELECT MIN(10), 000 + _places FROM table_22916979_5 WHERE principal_city = \"Louisville\"",
        "context": "CREATE TABLE table_22916979_5 (_places VARCHAR, principal_city VARCHAR)",
        "question": "Name the least 10,000+ places for louisville"
    },
    {
        "answer": "SELECT density FROM table_22916979_5 WHERE densest_incorporated_place = \"Pennsbury Village\"",
        "context": "CREATE TABLE table_22916979_5 (density VARCHAR, densest_incorporated_place VARCHAR)",
        "question": "Name the density for pennsbury village"
    },
    {
        "answer": "SELECT AVG(military_deaths) FROM table_name_22 WHERE civilian_deaths__including_foreigners_ < 38 AND military_and_or_civilian_wounded = \"33\"",
        "context": "CREATE TABLE table_name_22 (military_deaths INTEGER, civilian_deaths__including_foreigners_ VARCHAR, military_and_or_civilian_wounded VARCHAR)",
        "question": "What is the average number of military deaths when there are fewer than 38 civilian deaths (including foreigners) and 33 military and/or civilian wounded?"
    },
    {
        "answer": "SELECT T3.name, T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id ORDER BY T1.register_year",
        "context": "CREATE TABLE member (name VARCHAR, member_id VARCHAR); CREATE TABLE membership_register_branch (branch_id VARCHAR, member_id VARCHAR, register_year VARCHAR); CREATE TABLE branch (name VARCHAR, branch_id VARCHAR)",
        "question": "Show all member names and registered branch names sorted by register year."
    },
    {
        "answer": "SELECT american FROM table_name_65 WHERE australian = \"\u0259\u0289\"",
        "context": "CREATE TABLE table_name_65 (american VARCHAR, australian VARCHAR)",
        "question": "What does American have if Australia has \u0259\u0289?"
    },
    {
        "answer": "SELECT T2.name, COUNT(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id",
        "context": "CREATE TABLE branch (name VARCHAR, branch_id VARCHAR); CREATE TABLE membership_register_branch (branch_id VARCHAR, register_year INTEGER)",
        "question": "Show all branch names with the number of members in each branch registered after 2015."
    },
    {
        "answer": "SELECT name FROM member WHERE NOT member_id IN (SELECT member_id FROM membership_register_branch)",
        "context": "CREATE TABLE member (name VARCHAR, member_id VARCHAR); CREATE TABLE membership_register_branch (name VARCHAR, member_id VARCHAR)",
        "question": "Show member names without any registered branch."
    },
    {
        "answer": "SELECT T2.name, T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE membership_register_branch (branch_id VARCHAR, register_year VARCHAR); CREATE TABLE branch (name VARCHAR, open_year VARCHAR, branch_id VARCHAR)",
        "question": "What is the name and open year for the branch with most number of memberships registered in 2016?"
    },
    {
        "answer": "SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100",
        "context": "CREATE TABLE branch (city VARCHAR, open_year VARCHAR, membership_amount VARCHAR)",
        "question": "Show all city with a branch opened in 2001 and a branch with more than 100 membership."
    },
    {
        "answer": "SELECT COUNT(bowler) FROM table_22962745_35 WHERE batsmen = \"David Hussey Azhar Mahmood Gurkeerat Singh\"",
        "context": "CREATE TABLE table_22962745_35 (bowler VARCHAR, batsmen VARCHAR)",
        "question": "How many bowlers were there when david hussey azhar mahmood gurkeerat singh was the batsmen?"
    },
    {
        "answer": "SELECT season FROM table_22962745_35 WHERE batsmen = \"Herschelle Gibbs Andrew Symonds Venugopal Rao\"",
        "context": "CREATE TABLE table_22962745_35 (season VARCHAR, batsmen VARCHAR)",
        "question": "What season was herschelle gibbs andrew symonds venugopal rao batsmen?"
    },
    {
        "answer": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Hiram ,  Georgia'",
        "context": "CREATE TABLE member (member_id VARCHAR, Hometown VARCHAR); CREATE TABLE branch (name VARCHAR, branch_id VARCHAR); CREATE TABLE membership_register_branch (branch_id VARCHAR, member_id VARCHAR)",
        "question": "Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia."
    },
    {
        "answer": "SELECT years_as_tallest FROM table_name_10 WHERE floors < 24 AND street_address = \"05.0 210 north charles street\"",
        "context": "CREATE TABLE table_name_10 (years_as_tallest VARCHAR, floors VARCHAR, street_address VARCHAR)",
        "question": "WHAT IS THE YEAR'S TALLEST VALUE WITH FLOORS LESS THAN 24, AND 05.0 210 north charles street?"
    },
    {
        "answer": "SELECT COUNT(stellar_classification) FROM table_2296507_1 WHERE system = \"3 Neptune planets < 1 AU\"",
        "context": "CREATE TABLE table_2296507_1 (stellar_classification VARCHAR, system VARCHAR)",
        "question": "Name number of stellar classification for 3 neptune planets < 1 au"
    },
    {
        "answer": "SELECT COUNT(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6",
        "context": "CREATE TABLE member (member_id VARCHAR, level VARCHAR); CREATE TABLE purchase (member_id VARCHAR)",
        "question": "What is the total number of purchases for members with level 6?"
    },
    {
        "answer": "SELECT COUNT(name) FROM table_22977424_8 WHERE promoted_from_league = \"Exeter Chiefs\"",
        "context": "CREATE TABLE table_22977424_8 (name VARCHAR, promoted_from_league VARCHAR)",
        "question": "Name the number of names for exeter chiefs"
    },
    {
        "answer": "SELECT d_shulman FROM table_name_9 WHERE c_abate = \"728 (43%)\"",
        "context": "CREATE TABLE table_name_9 (d_shulman VARCHAR, c_abate VARCHAR)",
        "question": "What is the number for D. Shulman if C. Abate has 728 (43%)"
    },
    {
        "answer": "SELECT tail_number FROM table_229917_2 WHERE brief_description = \"Crashed\"",
        "context": "CREATE TABLE table_229917_2 (tail_number VARCHAR, brief_description VARCHAR)",
        "question": "What's the tail number of the airplane involved in the accident described as crashed?"
    },
    {
        "answer": "SELECT format FROM table_name_57 WHERE album = \"pacific ocean blue\" AND year = 1991",
        "context": "CREATE TABLE table_name_57 (format VARCHAR, album VARCHAR, year VARCHAR)",
        "question": "What is the format of the album Pacific Ocean Blue in 1991?"
    },
    {
        "answer": "SELECT fatalities FROM table_229917_2 WHERE brief_description = \"Crashed at take-off due to engine failure\"",
        "context": "CREATE TABLE table_229917_2 (fatalities VARCHAR, brief_description VARCHAR)",
        "question": "How many fatalities were there in the crash described as crashed at take-off due to engine failure?"
    },
    {
        "answer": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.Treasurer_Vote WHERE T2.Election_Cycle = \"Spring\"",
        "context": "CREATE TABLE STUDENT (Advisor VARCHAR, StuID VARCHAR); CREATE TABLE VOTING_RECORD (Treasurer_Vote VARCHAR, Election_Cycle VARCHAR)",
        "question": "Find the distinct Advisor of students who have treasurer votes in the spring election cycle."
    },
    {
        "answer": "SELECT MIN(goals) FROM table_name_40 WHERE matches < 29",
        "context": "CREATE TABLE table_name_40 (goals INTEGER, matches INTEGER)",
        "question": "What were the lowest goals when the matches were smaller than 29?"
    },
    {
        "answer": "SELECT DISTINCT T1.Fname, T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = \"F\"",
        "context": "CREATE TABLE STUDENT (Fname VARCHAR, LName VARCHAR, StuID VARCHAR, sex VARCHAR); CREATE TABLE VOTING_RECORD (President_VOTE VARCHAR)",
        "question": "Find the first and last names of all the female (sex is F) students who have president votes."
    },
    {
        "answer": "SELECT DISTINCT T1.Fname, T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_President_VOTE WHERE T1.age = 18",
        "context": "CREATE TABLE STUDENT (Fname VARCHAR, LName VARCHAR, StuID VARCHAR, age VARCHAR); CREATE TABLE VOTING_RECORD (VICE_President_VOTE VARCHAR)",
        "question": "Find the first and last name of all the students of age 18 who have vice president votes."
    },
    {
        "answer": "SELECT COUNT(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.Sex = \"M\" AND T2.Election_Cycle = \"Fall\"",
        "context": "CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR); CREATE TABLE STUDENT (StuID VARCHAR, Sex VARCHAR)",
        "question": "How many male (sex is M) students have class senator votes in the fall election cycle?"
    },
    {
        "answer": "SELECT COUNT(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.city_code = \"NYC\" AND T2.Election_Cycle = \"Spring\"",
        "context": "CREATE TABLE STUDENT (StuID VARCHAR, city_code VARCHAR); CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)",
        "question": "Find the number of students whose city code is NYC and who have class senator votes in the spring election cycle."
    },
    {
        "answer": "SELECT AVG(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = \"NYC\" AND T2.Election_Cycle = \"Spring\"",
        "context": "CREATE TABLE STUDENT (Age INTEGER, StuID VARCHAR, city_code VARCHAR); CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)",
        "question": "Find the average age of students who live in the city with code \"NYC\" and have secretary votes in the spring election cycle."
    },
    {
        "answer": "SELECT AVG(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.Sex = \"F\" AND T2.Election_Cycle = \"Spring\"",
        "context": "CREATE TABLE STUDENT (Age INTEGER, StuID VARCHAR, Sex VARCHAR); CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)",
        "question": "Find the average age of female (sex is F) students who have secretary votes in the spring election cycle."
    },
    {
        "answer": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code = \"PIT\"",
        "context": "CREATE TABLE STUDENT (Fname VARCHAR, city_code VARCHAR); CREATE TABLE STUDENT (Fname VARCHAR, StuID VARCHAR); CREATE TABLE VOTING_RECORD (VICE_PRESIDENT_Vote VARCHAR)",
        "question": "Find the distinct first names of all the students who have vice president votes and whose city code is not PIT."
    },
    {
        "answer": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor = \"2192\"",
        "context": "CREATE TABLE STUDENT (LName VARCHAR, PRESIDENT_Vote VARCHAR, Advisor VARCHAR); CREATE TABLE STUDENT (LName VARCHAR, StuID VARCHAR); CREATE TABLE VOTING_RECORD (Id VARCHAR)",
        "question": "Find the distinct last names of all the students who have president votes and whose advisor is not 2192."
    },
    {
        "answer": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor = \"8741\"",
        "context": "CREATE TABLE STUDENT (LName VARCHAR, PRESIDENT_Vote VARCHAR, Advisor VARCHAR); CREATE TABLE STUDENT (LName VARCHAR, StuID VARCHAR); CREATE TABLE VOTING_RECORD (Id VARCHAR)",
        "question": "Find the distinct last names of all the students who have president votes and whose advisor is 8741."
    },
    {
        "answer": "SELECT MIN(sno) FROM table_name_9 WHERE state = \"jammu & kashmir\" AND completion_schedule = \"2016\"",
        "context": "CREATE TABLE table_name_9 (sno INTEGER, state VARCHAR, completion_schedule VARCHAR)",
        "question": "When the completion schedule is 2016 for the state of jammu & kashmir, what is the smallest S.no.?"
    },
    {
        "answer": "SELECT 2009 FROM table_name_32 WHERE 2012 = \"a\" AND 2011 = \"1r\" AND tournament = \"shanghai masters\"",
        "context": "CREATE TABLE table_name_32 (tournament VARCHAR)",
        "question": "What is the 2009 value of the shanghai masters, which was A in 2012 and 1r in 2011?"
    },
    {
        "answer": "SELECT score FROM table_name_17 WHERE opponent_in_the_final = \"chris haggard robbie koenig\"",
        "context": "CREATE TABLE table_name_17 (score VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "Which Score has an Opponent in the final of chris haggard robbie koenig?"
    },
    {
        "answer": "SELECT result_f_a FROM table_name_55 WHERE league_position = \"1st\" AND date = \"21 february 2009\"",
        "context": "CREATE TABLE table_name_55 (result_f_a VARCHAR, league_position VARCHAR, date VARCHAR)",
        "question": "What was the Result F\u2013A on 21 February 2009, when the league position was 1st?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_99 WHERE player = \"john westin\"",
        "context": "CREATE TABLE table_name_99 (college_junior_club_team__league_ VARCHAR, player VARCHAR)",
        "question": "What club does John Westin play for?"
    },
    {
        "answer": "SELECT part_number_s_ FROM table_23028629_2 WHERE model_number = \"Core i5-670\"",
        "context": "CREATE TABLE table_23028629_2 (part_number_s_ VARCHAR, model_number VARCHAR)",
        "question": "What is every part number with model number core i5-670?"
    },
    {
        "answer": "SELECT T1.product_name, T2.color_description, T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = \"Herbs\"",
        "context": "CREATE TABLE Ref_colors (color_description VARCHAR, color_code VARCHAR); CREATE TABLE products (product_name VARCHAR, product_description VARCHAR, color_code VARCHAR)",
        "question": "List the names, color descriptions and product descriptions of products with category \"Herbs\"."
    },
    {
        "answer": "SELECT tie_no FROM table_name_52 WHERE home_team = \"scunthorpe united\"",
        "context": "CREATE TABLE table_name_52 (tie_no VARCHAR, home_team VARCHAR)",
        "question": "Scunthorpe United as the home team has what tie number?"
    },
    {
        "answer": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow'",
        "context": "CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR); CREATE TABLE products (product_name VARCHAR, color_code VARCHAR)",
        "question": "What is the name of the product with the color description 'yellow'?"
    },
    {
        "answer": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%'",
        "context": "CREATE TABLE ref_product_categories (product_category_description VARCHAR, product_category_code VARCHAR); CREATE TABLE products (product_category_code VARCHAR, product_description VARCHAR)",
        "question": "Find the category descriptions of the products whose descriptions include letter 't'."
    },
    {
        "answer": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = \"catnip\"",
        "context": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR); CREATE TABLE ref_colors (color_description VARCHAR, color_code VARCHAR)",
        "question": "What is the color description of the product with name \"catnip\"?"
    },
    {
        "answer": "SELECT original_air_date FROM table_23114705_7 WHERE nz_viewers__thousand_ = \"456.58\"",
        "context": "CREATE TABLE table_23114705_7 (original_air_date VARCHAR, nz_viewers__thousand_ VARCHAR)",
        "question": "What was the air date of the episod that had 456.58 thousand viewers?"
    },
    {
        "answer": "SELECT t1.product_id, t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code JOIN product_characteristics AS t3 ON t1.product_id = t3.product_id GROUP BY t1.product_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE product_characteristics (product_id VARCHAR); CREATE TABLE ref_colors (color_description VARCHAR, color_code VARCHAR); CREATE TABLE products (product_id VARCHAR, color_code VARCHAR)",
        "question": "Find the id and color description of the products with at least 2 characteristics."
    },
    {
        "answer": "SELECT t1.color_code, t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = \"chervil\"",
        "context": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR); CREATE TABLE ref_colors (color_description VARCHAR, color_code VARCHAR)",
        "question": "What is the color code and description of the product named \"chervil\"?"
    },
    {
        "answer": "SELECT t1.product_name, t1.typical_buying_price, t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = \"yellow\"",
        "context": "CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR); CREATE TABLE products (product_name VARCHAR, typical_buying_price VARCHAR, typical_selling_price VARCHAR, color_code VARCHAR)",
        "question": "What are the name and typical buying and selling prices of the products that have color described as \"yellow\"?"
    },
    {
        "answer": "SELECT MIN(no_in_series) FROM table_23117208_3 WHERE viewers__millions_ = \"5.28\"",
        "context": "CREATE TABLE table_23117208_3 (no_in_series INTEGER, viewers__millions_ VARCHAR)",
        "question": "when the number of spectator are 5.28 millions, which is the smallest number of the episode in series? "
    },
    {
        "answer": "SELECT COUNT(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = \"sesame\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "How many distinct characteristic names does the product \"cumin\" have?"
    },
    {
        "answer": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = \"sesame\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "What are all the characteristic names of product \"sesame\"?"
    },
    {
        "answer": "SELECT viewers__millions_ FROM table_23117208_3 WHERE prod_code = \"RP#213\"",
        "context": "CREATE TABLE table_23117208_3 (viewers__millions_ VARCHAR, prod_code VARCHAR)",
        "question": "how many millions of spectator did has the episode whose prod.code was rp#213?"
    },
    {
        "answer": "SELECT t3.characteristic_name, t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = \"cumin\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_data_type VARCHAR, characteristic_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "List all the characteristic names and data types of product \"cumin\"."
    },
    {
        "answer": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = \"sesame\" AND t3.characteristic_type_code = \"Grade\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR, characteristic_type_code VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "List all characteristics of product named \"sesame\" with type code \"Grade\"."
    },
    {
        "answer": "SELECT COUNT(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = \"laurel\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "How many characteristics does the product named \"laurel\" have?"
    },
    {
        "answer": "SELECT season_joined_league FROM table_name_28 WHERE settlements = \"\u00e9vora\"",
        "context": "CREATE TABLE table_name_28 (season_joined_league VARCHAR, settlements VARCHAR)",
        "question": "In which season did the \u00e9vora settlements join the league?"
    },
    {
        "answer": "SELECT prod_code FROM table_23117208_4 WHERE viewers__millions_ = \"4.92\"",
        "context": "CREATE TABLE table_23117208_4 (prod_code VARCHAR, viewers__millions_ VARCHAR)",
        "question": "Name the production code for 4.92 million viewers"
    },
    {
        "answer": "SELECT COUNT(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = \"flax\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "Find the number of characteristics that the product \"flax\" has."
    },
    {
        "answer": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = \"red\" AND t3.characteristic_name = \"fast\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR, characteristic_name VARCHAR); CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR); CREATE TABLE products (product_id VARCHAR, color_code VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "Find the name of the products that have the color description \"red\" and have the characteristic name \"fast\"."
    },
    {
        "answer": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = \"warm\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR, characteristic_name VARCHAR); CREATE TABLE products (product_name VARCHAR, product_id VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "List the all the distinct names of the products with the characteristic name 'warm'."
    },
    {
        "answer": "SELECT COUNT(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = \"red\" AND t3.characteristic_name = \"slow\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR, characteristic_name VARCHAR); CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR); CREATE TABLE products (product_id VARCHAR, color_code VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "Find the number of the products that have their color described as \"red\" and have a characteristic named \"slow\"."
    },
    {
        "answer": "SELECT COUNT(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = \"white\" OR t3.characteristic_name = \"hot\"",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR, characteristic_name VARCHAR); CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR); CREATE TABLE products (product_id VARCHAR, color_code VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "Count the products that have the color description \"white\" or have the characteristic name \"hot\"."
    },
    {
        "answer": "SELECT games_w_l FROM table_23133482_1 WHERE player = \"Arthur Ashe\"",
        "context": "CREATE TABLE table_23133482_1 (games_w_l VARCHAR, player VARCHAR)",
        "question": "What are Arthur Ashe's games w-l?"
    },
    {
        "answer": "SELECT COUNT(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = \"hot\"",
        "context": "CREATE TABLE products (product_id VARCHAR); CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR, characteristic_name VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "How many products have the characteristic named \"hot\"?"
    },
    {
        "answer": "SELECT youth_classification FROM table_23157997_13 WHERE mountains_classification = \"Kenneth Hanson\" AND winner = \"Lucas Sebastian Haedo\"",
        "context": "CREATE TABLE table_23157997_13 (youth_classification VARCHAR, mountains_classification VARCHAR, winner VARCHAR)",
        "question": "Who was the Youth Classification in the race with Kenneth Hanson as Mountains Classification and Lucas Sebastian Haedo as winner?"
    },
    {
        "answer": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name = \"cumin\"",
        "context": "CREATE TABLE ref_product_categories (unit_of_measure VARCHAR, product_category_code VARCHAR); CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR)",
        "question": "What is the unit of measurement of product named \"cumin\"?"
    },
    {
        "answer": "SELECT t2.unit_of_measure, t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name = \"chervil\"",
        "context": "CREATE TABLE ref_product_categories (unit_of_measure VARCHAR, product_category_code VARCHAR); CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR)",
        "question": "Find the unit of measurement and product category code of product named \"chervil\"."
    },
    {
        "answer": "SELECT winner FROM table_23157997_13 WHERE mountains_classification = \"Tom Zirbel\" AND points_classification = \"Thomas Soladay\"",
        "context": "CREATE TABLE table_23157997_13 (winner VARCHAR, mountains_classification VARCHAR, points_classification VARCHAR)",
        "question": "Who won the race with Tom Zirbel as Mountains Classification and Thomas Soladay as Points Classification?"
    },
    {
        "answer": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code = t3.color_code WHERE t3.color_description = \"white\" AND t2.unit_of_measure <> \"Handful\"",
        "context": "CREATE TABLE products (product_name VARCHAR, product_category_code VARCHAR, color_code VARCHAR); CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR); CREATE TABLE ref_product_categories (product_category_code VARCHAR, unit_of_measure VARCHAR)",
        "question": "Find the product names that are colored 'white' but do not have unit of measurement \"Handful\"."
    },
    {
        "answer": "SELECT mountains_classification FROM table_23157997_13 WHERE youth_classification = \"Nick Frey\" AND points_classification = \"Tom Zirbel\"",
        "context": "CREATE TABLE table_23157997_13 (mountains_classification VARCHAR, youth_classification VARCHAR, points_classification VARCHAR)",
        "question": "Who was Mountains Classification in the race with Nick Frey as Youth Classification and Tom Zirbel as Points Classification?"
    },
    {
        "answer": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE products (product_id VARCHAR); CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "What is the characteristic name used by most number of the products?"
    },
    {
        "answer": "SELECT characteristic_name, other_characteristic_details, characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name, t1.other_characteristic_details, t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id = t2.characteristic_id",
        "context": "CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, other_characteristic_details VARCHAR, characteristic_data_type VARCHAR, characteristic_id VARCHAR); CREATE TABLE product_characteristics (characteristic_id VARCHAR); CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, other_characteristic_details VARCHAR, characteristic_data_type VARCHAR)",
        "question": "What are the names, details and data types of the characteristics which are never used by any product?"
    },
    {
        "answer": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id GROUP BY t3.characteristic_name HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE products (product_id VARCHAR); CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR); CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR)",
        "question": "What are characteristic names used at least twice across all products?"
    },
    {
        "answer": "SELECT radio_stations FROM table_23143607_1 WHERE organization = \"Ente P\u00fablico Radio Televisi\u00f3n Madrid (EPRTVM)\"",
        "context": "CREATE TABLE table_23143607_1 (radio_stations VARCHAR, organization VARCHAR)",
        "question": "Which of the radio stations has the organization of ente p\u00fablico radio televisi\u00f3n madrid (eprtvm)?"
    },
    {
        "answer": "SELECT autonomous_community FROM table_23143607_1 WHERE television_channels = \"TPA TPA2 RTPA Internacional\"",
        "context": "CREATE TABLE table_23143607_1 (autonomous_community VARCHAR, television_channels VARCHAR)",
        "question": "What is the autonomous community with television channels  tpa tpa2 rtpa internacional?"
    },
    {
        "answer": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code GROUP BY t2.color_description ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE ref_colors (color_description VARCHAR, color_code VARCHAR); CREATE TABLE products (color_code VARCHAR)",
        "question": "What is the description of the color for most products?"
    },
    {
        "answer": "SELECT MIN(field_goals) FROM table_23183195_5 WHERE player = \"Chantel Hilliard\"",
        "context": "CREATE TABLE table_23183195_5 (field_goals INTEGER, player VARCHAR)",
        "question": "Name the least field goals for chantel hilliard"
    },
    {
        "answer": "SELECT COUNT(foundation) FROM table_23143607_1 WHERE television_channels = \"Canal Nou Canal Nou Dos Canal Nou 24 TVVi\"",
        "context": "CREATE TABLE table_23143607_1 (foundation VARCHAR, television_channels VARCHAR)",
        "question": "How many foundation dates were there when the  television channels is canal nou canal nou dos canal nou 24 tvvi?"
    },
    {
        "answer": "SELECT opponent FROM table_name_63 WHERE site = \"war memorial stadium \u2022 little rock, ar\" AND result = \"l6\u20137\"",
        "context": "CREATE TABLE table_name_63 (opponent VARCHAR, site VARCHAR, result VARCHAR)",
        "question": "What Opponent has a Site of war memorial stadium \u2022 little rock, ar, and a Result of l6\u20137?"
    },
    {
        "answer": "SELECT country FROM stadium WHERE capacity > 60000 INTERSECT SELECT country FROM stadium WHERE capacity < 50000",
        "context": "CREATE TABLE stadium (country VARCHAR, capacity INTEGER)",
        "question": "Which country has both stadiums with capacity greater than 60000 and stadiums with capacity less than 50000?"
    },
    {
        "answer": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year > 2006",
        "context": "CREATE TABLE stadium (country VARCHAR, opening_year INTEGER)",
        "question": "Which countries do not have a stadium that was opened after 2006?"
    },
    {
        "answer": "SELECT COUNT(assists) FROM table_23184448_4 WHERE minutes = 321",
        "context": "CREATE TABLE table_23184448_4 (assists VARCHAR, minutes VARCHAR)",
        "question": "Name the number of assists for 321 minutes "
    },
    {
        "answer": "SELECT COUNT(player) FROM table_23184448_4 WHERE field_goals = 25 AND blocks = 6",
        "context": "CREATE TABLE table_23184448_4 (player VARCHAR, field_goals VARCHAR, blocks VARCHAR)",
        "question": "Name the number of players for field goals being 25 and blocks is 6"
    },
    {
        "answer": "SELECT h_a_n FROM table_name_13 WHERE score = \"105*\u2660\"",
        "context": "CREATE TABLE table_name_13 (h_a_n VARCHAR, score VARCHAR)",
        "question": "Which H/A/N has a score of 105*\u2660?"
    },
    {
        "answer": "SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id = t2.stadium_id GROUP BY t2.stadium_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE stadium (name VARCHAR, id VARCHAR); CREATE TABLE event (stadium_id VARCHAR)",
        "question": "What is the name of the stadium which held the most events?"
    },
    {
        "answer": "SELECT AVG(wins) FROM table_name_53 WHERE percent > 0.4 AND teams = \"chargers~\"",
        "context": "CREATE TABLE table_name_53 (wins INTEGER, percent VARCHAR, teams VARCHAR)",
        "question": "what is the average wins when percent is more than 0.4 and teams is chargers~?"
    },
    {
        "answer": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE record (swimmer_id VARCHAR); CREATE TABLE swimmer (name VARCHAR, id VARCHAR)",
        "question": "Find the name of the swimmer who has the most records."
    },
    {
        "answer": "SELECT t1.name, t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY t2.swimmer_id HAVING COUNT(*) > 1",
        "context": "CREATE TABLE record (swimmer_id VARCHAR); CREATE TABLE swimmer (name VARCHAR, nationality VARCHAR, id VARCHAR)",
        "question": "Find the name and nationality of the swimmer who has won (i.e., has a result of \"win\") more than 1 time."
    },
    {
        "answer": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id GROUP BY t2.swimmer_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE record (swimmer_id VARCHAR); CREATE TABLE swimmer (name VARCHAR, id VARCHAR)",
        "question": "Find the name of the swimmer who has at least 2 records."
    },
    {
        "answer": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss'",
        "context": "CREATE TABLE record (swimmer_id VARCHAR); CREATE TABLE swimmer (name VARCHAR, id VARCHAR)",
        "question": "Find the names of the swimmers who have both \"win\" and \"loss\" results in the record."
    },
    {
        "answer": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia'",
        "context": "CREATE TABLE swimmer (id VARCHAR, nationality VARCHAR); CREATE TABLE record (swimmer_id VARCHAR, event_id VARCHAR); CREATE TABLE stadium (name VARCHAR, id VARCHAR); CREATE TABLE event (id VARCHAR, stadium_id VARCHAR)",
        "question": "Find the names of stadiums that some Australian swimmers have been to."
    },
    {
        "answer": "SELECT MAX(_3_bbl_d__2008_) FROM table_23195_5 WHERE present_share = \"1.7%\"",
        "context": "CREATE TABLE table_23195_5 (present_share VARCHAR)",
        "question": "Name the most 10 3 bbl/d (2008) for present share being 1.7%"
    },
    {
        "answer": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id = t2.id JOIN stadium AS t3 ON t3.id = t2.stadium_id GROUP BY t2.stadium_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE record (event_id VARCHAR); CREATE TABLE stadium (name VARCHAR, id VARCHAR); CREATE TABLE event (stadium_id VARCHAR, id VARCHAR)",
        "question": "Find the names of stadiums that the most swimmers have been to."
    },
    {
        "answer": "SELECT COUNT(score_in_final) FROM table_23197088_4 WHERE opponents_in_final = \"Alexandra Fusai Nathalie Tauziat\"",
        "context": "CREATE TABLE table_23197088_4 (score_in_final VARCHAR, opponents_in_final VARCHAR)",
        "question": "as is the quantity variety of score between ultimate the place opponents between remaining is alexandra fusai nathalie tauziat"
    },
    {
        "answer": "SELECT remarks FROM table_name_38 WHERE country_of_origin = \"norway\"",
        "context": "CREATE TABLE table_name_38 (remarks VARCHAR, country_of_origin VARCHAR)",
        "question": "What is the remark for Norway?"
    },
    {
        "answer": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID WHERE T2.Name = \"Andaman Exp\"",
        "context": "CREATE TABLE railway (Builder VARCHAR, Railway_ID VARCHAR); CREATE TABLE train (Railway_ID VARCHAR, Name VARCHAR)",
        "question": "Show the builder of railways associated with the trains named \"Andaman Exp\"."
    },
    {
        "answer": "SELECT position FROM table_name_30 WHERE round < 5 AND nationality = \"canada\" AND college_junior_club_team__league_ = \"saint john sea dogs ( qmjhl )\"",
        "context": "CREATE TABLE table_name_30 (position VARCHAR, college_junior_club_team__league_ VARCHAR, round VARCHAR, nationality VARCHAR)",
        "question": "What is Position, when Round is less than 5, when Nationality is \"Canada\", and when College/Junior/Club Team (League) is \"Saint John Sea Dogs ( QMJHL )\"?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_18 WHERE position = \"defence\" AND nationality = \"canada\" AND round < 5 AND player = \"josiah didier\"",
        "context": "CREATE TABLE table_name_18 (college_junior_club_team__league_ VARCHAR, player VARCHAR, round VARCHAR, position VARCHAR, nationality VARCHAR)",
        "question": "What is College/Junior/Club Team (League), when Position is \"Defence\", when Nationality is \"Canada\", when Round is less than 5, and when Player is \"Josiah Didier\"?"
    },
    {
        "answer": "SELECT ObjectNumber FROM railway WHERE NOT Railway_ID IN (SELECT Railway_ID FROM train)",
        "context": "CREATE TABLE train (ObjectNumber VARCHAR, Railway_ID VARCHAR); CREATE TABLE railway (ObjectNumber VARCHAR, Railway_ID VARCHAR)",
        "question": "List the object number of railways that do not have any trains."
    },
    {
        "answer": "SELECT 2012 AS _club FROM table_name_23 WHERE name = \"norbert hosny\u00e1nszky category:articles with hcards\"",
        "context": "CREATE TABLE table_name_23 (name VARCHAR)",
        "question": "Name the 012 club which has of norbert hosny\u00e1nszky category:articles with hcards?"
    },
    {
        "answer": "SELECT customer_name, customer_phone FROM customers WHERE NOT customer_id IN (SELECT customer_id FROM customer_address_history)",
        "context": "CREATE TABLE customer_address_history (customer_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR)",
        "question": "Show names and phones of customers who do not have address information."
    },
    {
        "answer": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR)",
        "question": "Show the name of the customer who has the most orders."
    },
    {
        "answer": "SELECT MIN(against) FROM table_name_78 WHERE venue = \"twickenham , london\" AND status = \"six nations\" AND opposing_teams = \"france\"",
        "context": "CREATE TABLE table_name_78 (against INTEGER, opposing_teams VARCHAR, venue VARCHAR, status VARCHAR)",
        "question": "What is the lowest Against, when Venue is \"Twickenham , London\", when Status is \"Six Nations\", and when Opposing Teams is \"France\"?"
    },
    {
        "answer": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = 'Part'",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_status_code VARCHAR)",
        "question": "Show the names of customers who have both an order in completed status and an order in part status."
    },
    {
        "answer": "SELECT customer_name, customer_phone, payment_method_code FROM customers ORDER BY customer_number DESC",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_phone VARCHAR, payment_method_code VARCHAR, customer_number VARCHAR)",
        "question": "Show the name, phone, and payment method code for all customers in descending order of customer number."
    },
    {
        "answer": "SELECT T1.product_name, SUM(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id",
        "context": "CREATE TABLE products (product_name VARCHAR, product_id VARCHAR); CREATE TABLE order_items (order_quantity INTEGER, product_id VARCHAR)",
        "question": "Show the product name and total order quantity for each product."
    },
    {
        "answer": "SELECT COUNT(*) FROM products WHERE product_price > (SELECT AVG(product_price) FROM products)",
        "context": "CREATE TABLE products (product_price INTEGER)",
        "question": "How many products have a price higher than the average?"
    },
    {
        "answer": "SELECT T2.customer_name, T3.city, T1.date_from, T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id",
        "context": "CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_address_history (date_from VARCHAR, date_to VARCHAR, customer_id VARCHAR, address_id VARCHAR)",
        "question": "Show the customer name, customer address city, date from, and date to for each customer address history."
    },
    {
        "answer": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.payment_method_code = 'Credit Card' GROUP BY T1.customer_id HAVING COUNT(*) > 2",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR, payment_method_code VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR)",
        "question": "Show the names of customers who use Credit Card payment method and have more than 2 orders."
    },
    {
        "answer": "SELECT T1.customer_name, T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T3.order_id = T2.order_id GROUP BY T1.customer_id ORDER BY SUM(T3.order_quantity) DESC LIMIT 1",
        "context": "CREATE TABLE order_items (order_id VARCHAR, order_quantity INTEGER); CREATE TABLE customers (customer_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR)",
        "question": "What are the name and phone of the customer with the most ordered product quantity?"
    },
    {
        "answer": "SELECT country FROM table_name_19 WHERE year_s__won = \"1988\"",
        "context": "CREATE TABLE table_name_19 (country VARCHAR, year_s__won VARCHAR)",
        "question": "Which country won in 1988?"
    },
    {
        "answer": "SELECT written_by FROM table_23242933_2 WHERE production_code = \"1AJN05\"",
        "context": "CREATE TABLE table_23242933_2 (written_by VARCHAR, production_code VARCHAR)",
        "question": "Who wrote the episode with production code 1AJN05?"
    },
    {
        "answer": "SELECT name_of_ship FROM table_name_96 WHERE fate = \"sunk at\" AND time = \"01:00\"",
        "context": "CREATE TABLE table_name_96 (name_of_ship VARCHAR, fate VARCHAR, time VARCHAR)",
        "question": "Which ship was sunk at 01:00?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_23248869_6 WHERE high_points = \"Larry Hughes (21)\"",
        "context": "CREATE TABLE table_23248869_6 (high_rebounds VARCHAR, high_points VARCHAR)",
        "question": "Who did the high rebounds in the game where Larry Hughes (21) did the high ponts?"
    },
    {
        "answer": "SELECT score FROM table_23248869_10 WHERE location_attendance = \"Madison Square Garden 19,763\" AND game < 80.0",
        "context": "CREATE TABLE table_23248869_10 (score VARCHAR, location_attendance VARCHAR, game VARCHAR)",
        "question": "What is every score for location attendance of Madison Square Garden 19,763 and game less than 80.0?"
    },
    {
        "answer": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
        "context": "CREATE TABLE dorm (dorm_name VARCHAR, dormid VARCHAR); CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR); CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)",
        "question": "Find the name of dorms which have both TV Lounge and Study Room as amenities."
    },
    {
        "answer": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'",
        "context": "CREATE TABLE dorm (dorm_name VARCHAR, dormid VARCHAR); CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR); CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)",
        "question": "Find the name of dorms which have TV Lounge but no Study Room as amenity."
    },
    {
        "answer": "SELECT to_par FROM table_name_43 WHERE country = \"australia\" AND score = 73 - 69 - 71 = 213",
        "context": "CREATE TABLE table_name_43 (to_par VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "What is the to par for Australia and a 73-69-71=213 score?"
    },
    {
        "answer": "SELECT high_assists FROM table_23248869_8 WHERE score = \"L 85\u2013118 (OT)\"",
        "context": "CREATE TABLE table_23248869_8 (high_assists VARCHAR, score VARCHAR)",
        "question": "Who had the high assists when the score was l 85\u2013118 (ot)"
    },
    {
        "answer": "SELECT record FROM table_23248869_8 WHERE high_rebounds = \"David Lee (8)\"",
        "context": "CREATE TABLE table_23248869_8 (record VARCHAR, high_rebounds VARCHAR)",
        "question": "What was the record when the high rebounds was david lee (8)"
    },
    {
        "answer": "SELECT lname FROM student WHERE sex = 'F' AND city_code = 'BAL' UNION SELECT lname FROM student WHERE sex = 'M' AND age < 20",
        "context": "CREATE TABLE student (lname VARCHAR, sex VARCHAR, city_code VARCHAR, age VARCHAR)",
        "question": "Find the last name of students who is either female (sex is F) and living in the city of code BAL or male (sex is M) and in age of below 20."
    },
    {
        "answer": "SELECT SUM(design_flow__lpm_) FROM table_name_6 WHERE partner = \"app\" AND construction_start = \"2008 january\" AND population_served > 3500",
        "context": "CREATE TABLE table_name_6 (design_flow__lpm_ INTEGER, population_served VARCHAR, partner VARCHAR, construction_start VARCHAR)",
        "question": "What is the total Design flow (LPM) with a Partner of app, a Construction Start of 2008 january, and a Population Served larger than 3500?"
    },
    {
        "answer": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid = T1.amenid JOIN dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.dorm_name = 'Anonymous Donor Hall' ORDER BY T1.amenity_name",
        "context": "CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR); CREATE TABLE dorm_amenity (amenity_name VARCHAR, amenid VARCHAR); CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)",
        "question": "List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order."
    },
    {
        "answer": "SELECT COUNT(*), SUM(student_capacity), gender FROM dorm GROUP BY gender",
        "context": "CREATE TABLE dorm (gender VARCHAR, student_capacity INTEGER)",
        "question": "Find the number of dorms and total capacity for each gender."
    },
    {
        "answer": "SELECT score FROM table_name_43 WHERE country = \"australia\" AND place = \"t1\"",
        "context": "CREATE TABLE table_name_43 (score VARCHAR, country VARCHAR, place VARCHAR)",
        "question": "What is Australia's score where they were in place t1?"
    },
    {
        "answer": "SELECT city___municipality FROM table_232458_1 WHERE pop_density__per_km\u00b2_ = \"1,388.88\"",
        "context": "CREATE TABLE table_232458_1 (city___municipality VARCHAR, pop_density__per_km\u00b2_ VARCHAR)",
        "question": "What is the name of the city/municipality if the population is 1,388.88?"
    },
    {
        "answer": "SELECT score FROM table_name_55 WHERE to_par = \"+1\" AND country = \"england\" AND player = \"howard clark\"",
        "context": "CREATE TABLE table_name_55 (score VARCHAR, player VARCHAR, to_par VARCHAR, country VARCHAR)",
        "question": "What is the score of Howard Clark from England with a To Par of +1?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_23248420_1 WHERE country = \"England\" AND county = \"Merseyside\" AND city_town = \"Birkenhead\"",
        "context": "CREATE TABLE table_23248420_1 (rank VARCHAR, city_town VARCHAR, country VARCHAR, county VARCHAR)",
        "question": "When birkenhead is the city/town and merseyside is the county and england is the country how many ranks are there?"
    },
    {
        "answer": "SELECT fname, lname FROM student WHERE major <> (SELECT major FROM student GROUP BY major ORDER BY COUNT(*) DESC LIMIT 1)",
        "context": "CREATE TABLE student (fname VARCHAR, lname VARCHAR, major VARCHAR)",
        "question": "Find the first and last name of students who are not in the largest major."
    },
    {
        "answer": "SELECT AVG(T1.age), T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name",
        "context": "CREATE TABLE dorm (dorm_name VARCHAR, dormid VARCHAR); CREATE TABLE student (age INTEGER, stuid VARCHAR); CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR)",
        "question": "Find the average age of students living in each dorm and the name of dorm."
    },
    {
        "answer": "SELECT COUNT(*), T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity > 100 GROUP BY T1.dormid",
        "context": "CREATE TABLE dorm (dormid VARCHAR, student_capacity INTEGER); CREATE TABLE has_amenity (dormid VARCHAR)",
        "question": "Find the number of amenities for each of the dorms that can accommodate more than 100 students."
    },
    {
        "answer": "SELECT COUNT(*), T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T1.age > 20 GROUP BY T3.dorm_name",
        "context": "CREATE TABLE dorm (dorm_name VARCHAR, dormid VARCHAR); CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR); CREATE TABLE student (stuid VARCHAR, age INTEGER)",
        "question": "Find the number of students who is older than 20 in each dorm."
    },
    {
        "answer": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall'",
        "context": "CREATE TABLE student (fname VARCHAR, stuid VARCHAR); CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR); CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)",
        "question": "Find the first name of students who are living in the Smith Hall."
    },
    {
        "answer": "SELECT location_attendance FROM table_23248910_6 WHERE team = \"Cavaliers\"",
        "context": "CREATE TABLE table_23248910_6 (location_attendance VARCHAR, team VARCHAR)",
        "question": "What location and it's attendance was the game against the cavaliers?"
    },
    {
        "answer": "SELECT AVG(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.student_capacity = (SELECT MAX(student_capacity) FROM dorm)",
        "context": "CREATE TABLE dorm (student_capacity INTEGER); CREATE TABLE student (age INTEGER, stuid VARCHAR); CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR); CREATE TABLE dorm (dormid VARCHAR, student_capacity INTEGER)",
        "question": "Find the average age of students who are living in the dorm with the largest capacity."
    },
    {
        "answer": "SELECT high_rebounds FROM table_23248910_5 WHERE record = \"5-2\"",
        "context": "CREATE TABLE table_23248910_5 (high_rebounds VARCHAR, record VARCHAR)",
        "question": "Who had the most rebounds in the game against the team with a 5-2 record against the Hawks?"
    },
    {
        "answer": "SELECT COUNT(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F'",
        "context": "CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR); CREATE TABLE student (stuid VARCHAR, sex VARCHAR); CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)",
        "question": "Find the number of female students (with F sex) living in Smith Hall"
    },
    {
        "answer": "SELECT COUNT(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.gender = 'M'",
        "context": "CREATE TABLE dorm (dormid VARCHAR, gender VARCHAR); CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR); CREATE TABLE student (stuid VARCHAR)",
        "question": "Find the total number of students living in the male dorm (with gender M)."
    },
    {
        "answer": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall'",
        "context": "CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR); CREATE TABLE dorm_amenity (amenity_name VARCHAR, amenid VARCHAR); CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)",
        "question": "Find the name of amenities Smith Hall dorm have."
    },
    {
        "answer": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name",
        "context": "CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR); CREATE TABLE dorm_amenity (amenity_name VARCHAR, amenid VARCHAR); CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)",
        "question": "Find the name of amenities Smith Hall dorm have. ordered the results by amenity names."
    },
    {
        "answer": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid = T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid = T5.amenid GROUP BY T3.dormid ORDER BY COUNT(*) DESC LIMIT 1)",
        "context": "CREATE TABLE dorm_amenity (amenid VARCHAR); CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR); CREATE TABLE dorm (dormid VARCHAR); CREATE TABLE student (fname VARCHAR, stuid VARCHAR); CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR)",
        "question": "Find the first name of students who are living in the dorm that has most number of amenities."
    },
    {
        "answer": "SELECT T1.dorm_name, T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR); CREATE TABLE dorm_amenity (amenid VARCHAR); CREATE TABLE dorm (dorm_name VARCHAR, student_capacity VARCHAR, dormid VARCHAR)",
        "question": "Find the name and capacity of the dorm with least number of amenities."
    },
    {
        "answer": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge'",
        "context": "CREATE TABLE dorm (dorm_name VARCHAR, dormid VARCHAR); CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR); CREATE TABLE dorm (dorm_name VARCHAR); CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)",
        "question": "Find the name of dorms that do not have amenity TV Lounge."
    },
    {
        "answer": "SELECT T1.fname, T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge')",
        "context": "CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR); CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR); CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR); CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)",
        "question": "Find the first and last name of students who are living in the dorms that have amenity TV Lounge."
    },
    {
        "answer": "SELECT T1.fname, T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE NOT T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge')",
        "context": "CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR); CREATE TABLE student (fname VARCHAR, age VARCHAR, stuid VARCHAR); CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR); CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)",
        "question": "Find the first name and age of students who are living in the dorms that do not have amenity TV Lounge."
    },
    {
        "answer": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.lname = 'Smith'",
        "context": "CREATE TABLE student (stuid VARCHAR, lname VARCHAR); CREATE TABLE dorm (dormid VARCHAR); CREATE TABLE lives_in (dormid VARCHAR, stuid VARCHAR); CREATE TABLE has_amenity (dormid VARCHAR, amenid VARCHAR); CREATE TABLE dorm_amenity (amenity_name VARCHAR, amenid VARCHAR)",
        "question": "Find the name of amenities of the dorm where the student with last name Smith is living in."
    },
    {
        "answer": "SELECT COUNT(high_assists) FROM table_23248940_10 WHERE game = 71",
        "context": "CREATE TABLE table_23248940_10 (high_assists VARCHAR, game VARCHAR)",
        "question": "How many people led in assists on game 71?"
    },
    {
        "answer": "SELECT t1.product_name, COUNT(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_name",
        "context": "CREATE TABLE products (product_name VARCHAR, product_id VARCHAR); CREATE TABLE complaints (product_id VARCHAR)",
        "question": "List the name of all products along with the number of complaints that they have received."
    },
    {
        "answer": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_id ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE customers (email_address VARCHAR, customer_id VARCHAR); CREATE TABLE complaints (customer_id VARCHAR)",
        "question": "Find the emails of customers who has filed a complaints of the product with the most complaints."
    },
    {
        "answer": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE customers (customer_id VARCHAR); CREATE TABLE products (product_name VARCHAR, product_id VARCHAR); CREATE TABLE complaints (product_id VARCHAR)",
        "question": "Which products has been complained by the customer who has filed least amount of complaints?"
    },
    {
        "answer": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1",
        "context": "CREATE TABLE customers (phone_number VARCHAR, customer_id VARCHAR); CREATE TABLE complaints (customer_id VARCHAR, date_complaint_raised VARCHAR)",
        "question": "What is the phone number of the customer who has filed the most recent complaint?"
    },
    {
        "answer": "SELECT email_address, phone_number FROM customers WHERE NOT customer_id IN (SELECT customer_id FROM complaints)",
        "context": "CREATE TABLE complaints (email_address VARCHAR, phone_number VARCHAR, customer_id VARCHAR); CREATE TABLE customers (email_address VARCHAR, phone_number VARCHAR, customer_id VARCHAR)",
        "question": "Find the email and phone number of the customers who have never filed a complaint before."
    },
    {
        "answer": "SELECT product_description FROM products WHERE product_name = \"Chocolate\"",
        "context": "CREATE TABLE products (product_description VARCHAR, product_name VARCHAR)",
        "question": "What is the description of the product named \"Chocolate\"?"
    },
    {
        "answer": "SELECT AVG(product_price), product_category_code FROM products GROUP BY product_category_code",
        "context": "CREATE TABLE products (product_category_code VARCHAR, product_price INTEGER)",
        "question": "What is the average price of the products for each category?"
    },
    {
        "answer": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id JOIN products AS t3 ON t2.product_id = t3.product_id ORDER BY t3.product_price LIMIT 1",
        "context": "CREATE TABLE products (product_id VARCHAR, product_price VARCHAR); CREATE TABLE complaints (staff_id VARCHAR, product_id VARCHAR); CREATE TABLE staff (last_name VARCHAR, staff_id VARCHAR)",
        "question": "Find the last name of the staff member who processed the complaint of the cheapest product."
    },
    {
        "answer": "SELECT MIN(year) FROM table_23259077_1 WHERE opponent_in_the_final = \"Clark Graebner\"",
        "context": "CREATE TABLE table_23259077_1 (year INTEGER, opponent_in_the_final VARCHAR)",
        "question": "On what year did Newcombe first face Clark Graebner in a final match?"
    },
    {
        "answer": "SELECT place FROM table_name_12 WHERE score = 70 - 69 - 74 = 213",
        "context": "CREATE TABLE table_name_12 (place VARCHAR, score VARCHAR)",
        "question": "What was the place when the score was 70-69-74=213?"
    },
    {
        "answer": "SELECT place FROM table_name_26 WHERE country = \"united states\" AND player = \"fred couples\"",
        "context": "CREATE TABLE table_name_26 (place VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "What was United States place when the player was Fred Couples?"
    },
    {
        "answer": "SELECT complaint_status_code, COUNT(*) FROM complaints WHERE complaint_type_code = \"Product Failure\" GROUP BY complaint_status_code",
        "context": "CREATE TABLE complaints (complaint_status_code VARCHAR, complaint_type_code VARCHAR)",
        "question": "Find the number of complaints with Product Failure type for each complaint status."
    },
    {
        "answer": "SELECT team FROM table_23274514_7 WHERE record = \"19-34\"",
        "context": "CREATE TABLE table_23274514_7 (team VARCHAR, record VARCHAR)",
        "question": "Name the team for 19-34"
    },
    {
        "answer": "SELECT metacritic FROM table_name_76 WHERE year_released > 2005 AND platform = \"playstation 3\" AND gamerankings = \"84.44%\"",
        "context": "CREATE TABLE table_name_76 (metacritic VARCHAR, gamerankings VARCHAR, year_released VARCHAR, platform VARCHAR)",
        "question": "What is the Metacritic released after 2005, with a Platform of playstation 3 and a GameRankings of 84.44%?"
    },
    {
        "answer": "SELECT to_par FROM table_name_18 WHERE score = 70 - 68 - 68 - 71 = 277",
        "context": "CREATE TABLE table_name_18 (to_par VARCHAR, score VARCHAR)",
        "question": "What is To par, when Score is \"70-68-68-71=277\"?"
    },
    {
        "answer": "SELECT COUNT(season__number) FROM table_23279434_1 WHERE production_code = \"AM10\"",
        "context": "CREATE TABLE table_23279434_1 (season__number VARCHAR, production_code VARCHAR)",
        "question": "Which season used production code \"am10\"?"
    },
    {
        "answer": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1",
        "context": "CREATE TABLE acceptance (Result VARCHAR, Submission_ID VARCHAR); CREATE TABLE submission (Submission_ID VARCHAR, Scores VARCHAR)",
        "question": "Show the result of the submission with the highest score."
    },
    {
        "answer": "SELECT T2.Author, COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author",
        "context": "CREATE TABLE submission (Author VARCHAR, Submission_ID VARCHAR); CREATE TABLE acceptance (workshop_id VARCHAR, Submission_ID VARCHAR)",
        "question": "Show each author and the number of workshops they submitted to."
    },
    {
        "answer": "SELECT location_attendance FROM table_23284271_11 WHERE high_points = \"Dirk Nowitzki , Caron Butler (17)\"",
        "context": "CREATE TABLE table_23284271_11 (location_attendance VARCHAR, high_points VARCHAR)",
        "question": "Name the location attendance for dirk nowitzki , caron butler (17)"
    },
    {
        "answer": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code = \"SALE\"",
        "context": "CREATE TABLE TRANSACTIONS (date_of_transaction VARCHAR, transaction_type_code VARCHAR)",
        "question": "Show all dates of transactions whose type code is \"SALE\"."
    },
    {
        "answer": "SELECT COUNT(high_points) FROM table_23284271_6 WHERE location_attendance = \"Pepsi Center 19,756\"",
        "context": "CREATE TABLE table_23284271_6 (high_points VARCHAR, location_attendance VARCHAR)",
        "question": "Name the total number of high points for pepsi center 19,756"
    },
    {
        "answer": "SELECT manufacturer FROM table_name_97 WHERE finish > 29 AND start < 23 AND year = 1973",
        "context": "CREATE TABLE table_name_97 (manufacturer VARCHAR, year VARCHAR, finish VARCHAR, start VARCHAR)",
        "question": "What is Manufacturer, when Finish is greater than 29, when Start is less than 23, and when Year is \"1973\"?"
    },
    {
        "answer": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code = \"PUR\"",
        "context": "CREATE TABLE Ref_Transaction_Types (transaction_type_description VARCHAR, transaction_type_code VARCHAR)",
        "question": "Show the description of transaction type with code \"PUR\"."
    },
    {
        "answer": "SELECT T1.transaction_type_description, T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10",
        "context": "CREATE TABLE Ref_Transaction_Types (transaction_type_description VARCHAR, transaction_type_code VARCHAR); CREATE TABLE TRANSACTIONS (date_of_transaction VARCHAR, transaction_type_code VARCHAR, share_count INTEGER)",
        "question": "Show the transaction type descriptions and dates if the share count is smaller than 10."
    },
    {
        "answer": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction > 10000",
        "context": "CREATE TABLE PURCHASES (purchase_details VARCHAR, purchase_transaction_id VARCHAR); CREATE TABLE TRANSACTIONS (transaction_id VARCHAR, amount_of_transaction INTEGER)",
        "question": "What are the purchase details of transactions with amount bigger than 10000?"
    },
    {
        "answer": "SELECT T1.sales_details, T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000",
        "context": "CREATE TABLE SALES (sales_details VARCHAR, sales_transaction_id VARCHAR); CREATE TABLE TRANSACTIONS (date_of_transaction VARCHAR, transaction_id VARCHAR, amount_of_transaction INTEGER)",
        "question": "What are the sale details and dates of transactions with amount smaller than 3000?"
    },
    {
        "answer": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count < 50",
        "context": "CREATE TABLE LOTS (lot_details VARCHAR, lot_id VARCHAR); CREATE TABLE TRANSACTIONS_LOTS (transaction_id VARCHAR); CREATE TABLE TRANSACTIONS (transaction_id VARCHAR, share_count INTEGER)",
        "question": "What are the lot details of lots associated with transactions with share count smaller than 50?"
    },
    {
        "answer": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count > 100 AND T3.transaction_type_code = \"PUR\"",
        "context": "CREATE TABLE LOTS (lot_details VARCHAR, lot_id VARCHAR); CREATE TABLE TRANSACTIONS_LOTS (transaction_id VARCHAR); CREATE TABLE TRANSACTIONS (transaction_id VARCHAR, share_count VARCHAR, transaction_type_code VARCHAR)",
        "question": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"?"
    },
    {
        "answer": "SELECT transaction_type_code, AVG(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code",
        "context": "CREATE TABLE TRANSACTIONS (transaction_type_code VARCHAR, amount_of_transaction INTEGER)",
        "question": "Show the average transaction amount for different transaction types."
    },
    {
        "answer": "SELECT COUNT(high_rebounds) FROM table_23285849_11 WHERE high_points = \"Carmelo Anthony (42)\"",
        "context": "CREATE TABLE table_23285849_11 (high_rebounds VARCHAR, high_points VARCHAR)",
        "question": "When carmelo anthony (42) has the highest amount of points how many measurements of highest rebounds are there?"
    },
    {
        "answer": "SELECT investor_id, AVG(share_count) FROM TRANSACTIONS GROUP BY investor_id",
        "context": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR, share_count INTEGER)",
        "question": "Show the average share count of transactions for different investors."
    },
    {
        "answer": "SELECT investor_id, AVG(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id",
        "context": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR, amount_of_transaction INTEGER)",
        "question": "Show the average amount of transactions for different investors."
    },
    {
        "answer": "SELECT T2.lot_id, AVG(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id",
        "context": "CREATE TABLE TRANSACTIONS (transaction_id VARCHAR); CREATE TABLE Transactions_Lots (lot_id VARCHAR, transaction_id VARCHAR)",
        "question": "Show the average amount of transactions for different lots."
    },
    {
        "answer": "SELECT COUNT(high_points) FROM table_23285849_6 WHERE team = \"Heat\"",
        "context": "CREATE TABLE table_23285849_6 (high_points VARCHAR, team VARCHAR)",
        "question": "How many players has the highest points in the game against the Heat?"
    },
    {
        "answer": "SELECT T2.lot_id, AVG(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY AVG(amount_of_transaction)",
        "context": "CREATE TABLE TRANSACTIONS (transaction_id VARCHAR); CREATE TABLE Transactions_Lots (lot_id VARCHAR, transaction_id VARCHAR)",
        "question": "Show the average amount of transactions for different lots, ordered by average amount of transactions."
    },
    {
        "answer": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE TRANSACTIONS (transaction_type_code VARCHAR); CREATE TABLE Ref_Transaction_Types (transaction_type_description VARCHAR, transaction_type_code VARCHAR)",
        "question": "Show the description of the transaction type that occurs most frequently."
    },
    {
        "answer": "SELECT T2.investor_id, T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR); CREATE TABLE INVESTORS (Investor_details VARCHAR, investor_id VARCHAR)",
        "question": "Show the id and details of the investor that has the largest number of transactions."
    },
    {
        "answer": "SELECT T2.investor_id, T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR); CREATE TABLE INVESTORS (Investor_details VARCHAR, investor_id VARCHAR)",
        "question": "Show the id and details for the investors who have the top 3 number of transactions."
    },
    {
        "answer": "SELECT position FROM table_name_7 WHERE fa_cup_apps = \"0\" AND name = \"gary barnett\"",
        "context": "CREATE TABLE table_name_7 (position VARCHAR, fa_cup_apps VARCHAR, name VARCHAR)",
        "question": "Gary Barnett who has been in 0 FA Cups plays what position?"
    },
    {
        "answer": "SELECT T2.investor_id, T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = \"SALE\" GROUP BY T2.investor_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR, transaction_type_code VARCHAR); CREATE TABLE INVESTORS (Investor_details VARCHAR, investor_id VARCHAR)",
        "question": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\"."
    },
    {
        "answer": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id",
        "context": "CREATE TABLE Lots (lot_details VARCHAR, lot_id VARCHAR); CREATE TABLE Lots (lot_details VARCHAR); CREATE TABLE transactions_lots (lot_id VARCHAR)",
        "question": "What are the details of the lots which are not used in any transactions?"
    },
    {
        "answer": "SELECT portfolio_attachment FROM table_name_47 WHERE age_at_appointment = 48 AND chinese_name = \"\u6881\u9cf3\u5100\"",
        "context": "CREATE TABLE table_name_47 (portfolio_attachment VARCHAR, age_at_appointment VARCHAR, chinese_name VARCHAR)",
        "question": "What is the portfolio attachment of the Undersecretary appointed at age 48 with a Chinese name of \u6881\u9cf3\u5100?"
    },
    {
        "answer": "SELECT transfer_fee FROM table_name_70 WHERE transfer_window = \"summer\" AND name = \"assoumani\"",
        "context": "CREATE TABLE table_name_70 (transfer_fee VARCHAR, transfer_window VARCHAR, name VARCHAR)",
        "question": "What is the transfer fee of assoumani, who has a summer transfer window?"
    },
    {
        "answer": "SELECT MIN(series__number) FROM table_23286722_1 WHERE written_by = \"David E. Kelley & Jill Goldsmith\"",
        "context": "CREATE TABLE table_23286722_1 (series__number INTEGER, written_by VARCHAR)",
        "question": "Name least series number for writers david e. kelley & jill goldsmith"
    },
    {
        "answer": "SELECT ends FROM table_name_5 WHERE transfer_fee = \"free\" AND moving_from = \"middlesbrough\"",
        "context": "CREATE TABLE table_name_5 (ends VARCHAR, transfer_fee VARCHAR, moving_from VARCHAR)",
        "question": "What is the ends with a free transfer fee and was moved from middlesbrough?"
    },
    {
        "answer": "SELECT location FROM table_name_97 WHERE method = \"decision\" AND opponent = \"nikos tsoukalas\"",
        "context": "CREATE TABLE table_name_97 (location VARCHAR, method VARCHAR, opponent VARCHAR)",
        "question": "Which location has a method of decision and Nikos Tsoukalas for an opponent?"
    },
    {
        "answer": "SELECT first_broadcast FROM table_23292220_3 WHERE daves_team = \"Dave Johns and Sally Lindsay\"",
        "context": "CREATE TABLE table_23292220_3 (first_broadcast VARCHAR, daves_team VARCHAR)",
        "question": "What is the first broadcast date of the episode in which Dave's team is made up of Dave Johns and Sally Lindsay?"
    },
    {
        "answer": "SELECT T1.Museum_Details, T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID = T2.Tourist_Attraction_ID",
        "context": "CREATE TABLE TOURIST_ATTRACTIONS (Opening_Hours VARCHAR, Tourist_Attraction_ID VARCHAR); CREATE TABLE MUSEUMS (Museum_Details VARCHAR, Museum_ID VARCHAR)",
        "question": "What are the details and opening hours of the museums?"
    },
    {
        "answer": "SELECT COUNT(episode) FROM table_23292220_3 WHERE daves_team = \"David Walliams and Louis Walsh\"",
        "context": "CREATE TABLE table_23292220_3 (episode VARCHAR, daves_team VARCHAR)",
        "question": "In how many episodes was Dave's team made up of David Walliams and Louis Walsh?"
    },
    {
        "answer": "SELECT T1.Name, T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = \"film festival\"",
        "context": "CREATE TABLE TOURIST_ATTRACTIONS (Tourist_Attraction_ID VARCHAR, Name VARCHAR); CREATE TABLE PHOTOS (Name VARCHAR, Description VARCHAR, Tourist_Attraction_ID VARCHAR)",
        "question": "What are the names and descriptions of the photos taken at the tourist attraction \"film festival\"?"
    },
    {
        "answer": "SELECT episode FROM table_23292220_4 WHERE daves_team = \"Boy George and Lee Mack\"",
        "context": "CREATE TABLE table_23292220_4 (episode VARCHAR, daves_team VARCHAR)",
        "question": "Which episode has boy george and lee mack on dave's team?"
    },
    {
        "answer": "SELECT T1.Royal_Family_Details, T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID = T2.Tourist_Attraction_ID",
        "context": "CREATE TABLE TOURIST_ATTRACTIONS (How_to_Get_There VARCHAR, Tourist_Attraction_ID VARCHAR); CREATE TABLE ROYAL_FAMILY (Royal_Family_Details VARCHAR, Royal_Family_ID VARCHAR)",
        "question": "What are the details and ways to get to tourist attractions related to royal family?"
    },
    {
        "answer": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = \"game1\"",
        "context": "CREATE TABLE TOURIST_ATTRACTIONS (Name VARCHAR, Tourist_Attraction_ID VARCHAR); CREATE TABLE PHOTOS (Tourist_Attraction_ID VARCHAR, Name VARCHAR)",
        "question": "What is the name of the tourist attraction that is associated with the photo \"game1\"?"
    },
    {
        "answer": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = \"walk\" OR T2.How_to_Get_There = \"bus\"",
        "context": "CREATE TABLE Street_Markets (Market_Details VARCHAR, Market_ID VARCHAR); CREATE TABLE TOURIST_ATTRACTIONS (Tourist_Attraction_ID VARCHAR, How_to_Get_There VARCHAR)",
        "question": "What are the details of the markets that can be accessed by walk or bus?"
    },
    {
        "answer": "SELECT scores FROM table_23292220_4 WHERE seans_team = \"John Barrowman and Vic Reeves\"",
        "context": "CREATE TABLE table_23292220_4 (scores VARCHAR, seans_team VARCHAR)",
        "question": "What was the score in the episode with john barrowman and vic reeves on sean's team?"
    },
    {
        "answer": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = \"Vincent\"",
        "context": "CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR, Tourist_ID VARCHAR); CREATE TABLE VISITORS (Tourist_ID VARCHAR, Tourist_Details VARCHAR); CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR)",
        "question": "Which tourist attractions does the visitor with detail 'Vincent' visit?"
    },
    {
        "answer": "SELECT T1.Name, T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Vincent\" OR T2.Tourist_Details = \"Vivian\"",
        "context": "CREATE TABLE VISITORS (Tourist_ID VARCHAR, Tourist_Details VARCHAR); CREATE TABLE VISITS (Visit_Date VARCHAR, Tourist_Attraction_ID VARCHAR, Tourist_ID VARCHAR); CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR)",
        "question": "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?"
    },
    {
        "answer": "SELECT first_broadcast FROM table_23292220_17 WHERE seans_team = \"Tina Malone and Joe Wilkinson\"",
        "context": "CREATE TABLE table_23292220_17 (first_broadcast VARCHAR, seans_team VARCHAR)",
        "question": "Name the first broadcast for tina malone and joe wilkinson"
    },
    {
        "answer": "SELECT fourth_place FROM table_name_26 WHERE runners_up = \"2 (1999, 2005)\"",
        "context": "CREATE TABLE table_name_26 (fourth_place VARCHAR, runners_up VARCHAR)",
        "question": "What fourth-place has 2 (1999, 2005) as the runner(s)-up?"
    },
    {
        "answer": "SELECT other_hotel_details, star_rating_code FROM HOTELS ORDER BY price_range LIMIT 3",
        "context": "CREATE TABLE HOTELS (other_hotel_details VARCHAR, star_rating_code VARCHAR, price_range VARCHAR)",
        "question": "Show the details and star ratings of the 3 least expensive hotels."
    },
    {
        "answer": "SELECT COUNT(episode) FROM table_23292220_6 WHERE seans_team = \"Vanessa Feltz and Lee Mack\"",
        "context": "CREATE TABLE table_23292220_6 (episode VARCHAR, seans_team VARCHAR)",
        "question": "In how many episodes were Vanessa Feltz and Lee Mack the team for Sean? "
    },
    {
        "answer": "SELECT T1.Attraction_Type_Description, T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Ref_Attraction_Types (Attraction_Type_Description VARCHAR, Attraction_Type_Code VARCHAR); CREATE TABLE Tourist_Attractions (Attraction_Type_Code VARCHAR)",
        "question": "Show the description and code of the attraction type most tourist attractions belong to."
    },
    {
        "answer": "SELECT How_to_Get_There, COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There",
        "context": "CREATE TABLE Tourist_Attractions (How_to_Get_There VARCHAR)",
        "question": "Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way."
    },
    {
        "answer": "SELECT T1.Name, T2.Tourist_Attraction_ID, COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID",
        "context": "CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR); CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR)",
        "question": "Show different tourist attractions' names, ids, and the corresponding number of visits."
    },
    {
        "answer": "SELECT T1.Name, T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR); CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR)",
        "question": "Show the names and ids of tourist attractions that are visited at least two times."
    },
    {
        "answer": "SELECT T1.Name, T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING COUNT(*) <= 1",
        "context": "CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR); CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR)",
        "question": "Show the names and ids of tourist attractions that are visited at most once."
    },
    {
        "answer": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = \"660 Shea Crescent\" OR T2.How_to_Get_There = \"walk\"",
        "context": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Location_ID VARCHAR, How_to_Get_There VARCHAR); CREATE TABLE Locations (Location_ID VARCHAR, Address VARCHAR)",
        "question": "What are the names of tourist attractions that can be reached by walk or is at address 660 Shea Crescent?"
    },
    {
        "answer": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id = T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID = T3.Feature_ID WHERE T3.feature_Details = 'shopping'",
        "context": "CREATE TABLE Tourist_Attraction_Features (tourist_attraction_id VARCHAR, Feature_ID VARCHAR); CREATE TABLE Features (Feature_ID VARCHAR, feature_Details VARCHAR); CREATE TABLE Tourist_Attractions (Name VARCHAR, tourist_attraction_id VARCHAR)",
        "question": "What are the names of the tourist attractions that have parking or shopping as their feature details?"
    },
    {
        "answer": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = \"254 Ottilie Junction\" OR T2.How_to_Get_There = \"bus\"",
        "context": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Location_ID VARCHAR, How_to_Get_There VARCHAR); CREATE TABLE Locations (Location_ID VARCHAR, Address VARCHAR)",
        "question": "What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?"
    },
    {
        "answer": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Marcelle\"",
        "context": "CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR, Tourist_ID VARCHAR); CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR); CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR)",
        "question": "What are the names of the tourist attractions Vincent and Marcelle visit?"
    },
    {
        "answer": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = \"Rosalind\"",
        "context": "CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR, Tourist_ID VARCHAR); CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR); CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR)",
        "question": "What are the names of tourist attraction that Alison visited but Rosalind did not visit?"
    },
    {
        "answer": "SELECT years FROM table_name_10 WHERE school = \"vaucluse public school\"",
        "context": "CREATE TABLE table_name_10 (years VARCHAR, school VARCHAR)",
        "question": "What school year is vaucluse public school?"
    },
    {
        "answer": "SELECT surface FROM table_name_75 WHERE date > 1979 AND championship = \"melbourne indoor, australia\" AND score = \"2\u20136, 6\u20132, 6\u20132\"",
        "context": "CREATE TABLE table_name_75 (surface VARCHAR, score VARCHAR, date VARCHAR, championship VARCHAR)",
        "question": "What was the surface later than 1979, for the Melbourne Indoor, Australia, and the score was 2\u20136, 6\u20132, 6\u20132?"
    },
    {
        "answer": "SELECT original_title FROM table_name_91 WHERE film_title_used_in_nomination = \"street days\"",
        "context": "CREATE TABLE table_name_91 (original_title VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What was the original title for the film used in nomination of street days?"
    },
    {
        "answer": "SELECT production FROM table_name_67 WHERE result = \"nominated\" AND year = 2009 AND award_ceremony = \"helpmann awards\"",
        "context": "CREATE TABLE table_name_67 (production VARCHAR, award_ceremony VARCHAR, result VARCHAR, year VARCHAR)",
        "question": "Which Production in 2009 had a Result of Nominated at the Helpmann awards Award Ceremony?"
    },
    {
        "answer": "SELECT rider FROM table_name_64 WHERE laps < 22 AND grid > 19 AND time = \"retirement\" AND bike = \"kawasaki zx-6r\"",
        "context": "CREATE TABLE table_name_64 (rider VARCHAR, bike VARCHAR, time VARCHAR, laps VARCHAR, grid VARCHAR)",
        "question": "Who was the rider riding the Kawasaki ZX-6r, that rode less than 22 laps, and the grid was greater than 19, and retirement was the time?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_23308178_4 WHERE date = \"October 27\"",
        "context": "CREATE TABLE table_23308178_4 (points INTEGER, date VARCHAR)",
        "question": "How many points were there scored on October 27?"
    },
    {
        "answer": "SELECT COUNT(score) FROM table_23308178_5 WHERE record = \"10-3-4\"",
        "context": "CREATE TABLE table_23308178_5 (score VARCHAR, record VARCHAR)",
        "question": "How many different scores are there for the game with 10-3-4 record?"
    },
    {
        "answer": "SELECT exaltation FROM table_name_21 WHERE fall = \"moon\"",
        "context": "CREATE TABLE table_name_21 (exaltation VARCHAR, fall VARCHAR)",
        "question": "Which exaltation has a fall of moon?"
    },
    {
        "answer": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'",
        "context": "CREATE TABLE Student (Lname VARCHAR, StuID VARCHAR); CREATE TABLE Sportsinfo (StuID VARCHAR, onscholarship VARCHAR)",
        "question": "Show last names for all student who are on scholarship."
    },
    {
        "answer": "SELECT nationality FROM table_name_30 WHERE previous_team = \"new york knicks\" AND years_of_nba_experience_[a_] > 3",
        "context": "CREATE TABLE table_name_30 (nationality VARCHAR, previous_team VARCHAR, years_of_nba_experience_ VARCHAR, a_ VARCHAR)",
        "question": "Which Nationality has a Previous team of new york knicks, and more than 3 Years of NBA experience?"
    },
    {
        "answer": "SELECT T2.Fname, T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Student (Fname VARCHAR, Lname VARCHAR, StuID VARCHAR); CREATE TABLE Sportsinfo (StuID VARCHAR)",
        "question": "What is the first name and last name of the student who have most number of sports?"
    },
    {
        "answer": "SELECT sportname FROM Sportsinfo WHERE onscholarship = 'Y' GROUP BY sportname ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Sportsinfo (sportname VARCHAR, onscholarship VARCHAR)",
        "question": "Which sport has most number of students on scholarship?"
    },
    {
        "answer": "SELECT champion FROM table_2331549_1 WHERE third_place = \"Michigan Technological University\"",
        "context": "CREATE TABLE table_2331549_1 (champion VARCHAR, third_place VARCHAR)",
        "question": "Who were the champions in years where michigan technological university was in third place?"
    },
    {
        "answer": "SELECT StuID FROM Student WHERE sex = 'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname = \"Football\"",
        "context": "CREATE TABLE Sportsinfo (StuID VARCHAR, sex VARCHAR, sportname VARCHAR); CREATE TABLE Student (StuID VARCHAR, sex VARCHAR, sportname VARCHAR)",
        "question": "Show all male student ids who don't play football."
    },
    {
        "answer": "SELECT SUM(hoursperweek), SUM(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Fname = \"David\" AND T2.Lname = \"Shieber\"",
        "context": "CREATE TABLE Student (StuID VARCHAR, Fname VARCHAR, Lname VARCHAR); CREATE TABLE Sportsinfo (StuID VARCHAR)",
        "question": "Show total hours per week and number of games played for student David Shieber."
    },
    {
        "answer": "SELECT 2011 FROM table_name_73 WHERE 2012 = \"1r\"",
        "context": "CREATE TABLE table_name_73 (Id VARCHAR)",
        "question": "What is 2011, when 2012 is \"1R\"?"
    },
    {
        "answer": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = \"Smith\" AND T3.Fname = \"Linda\"",
        "context": "CREATE TABLE Student (Stuid VARCHAR, Lname VARCHAR, Fname VARCHAR); CREATE TABLE Plays_games (gameid VARCHAR, Stuid VARCHAR); CREATE TABLE Video_games (gameid VARCHAR)",
        "question": "Show all game names played by Linda Smith"
    },
    {
        "answer": "SELECT T2.lname, T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = \"Football\" OR T1.SportName = \"Lacrosse\"",
        "context": "CREATE TABLE SportsInfo (StuID VARCHAR, SportName VARCHAR); CREATE TABLE Student (lname VARCHAR, fname VARCHAR, StuID VARCHAR)",
        "question": "Find the last and first name of students who are playing Football or Lacrosse."
    },
    {
        "answer": "SELECT fname, age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName = \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName = \"Lacrosse\")",
        "context": "CREATE TABLE Student (fname VARCHAR, age VARCHAR, StuID VARCHAR, SportName VARCHAR); CREATE TABLE Sportsinfo (fname VARCHAR, age VARCHAR, StuID VARCHAR, SportName VARCHAR)",
        "question": "Find the first name and age of the students who are playing both Football and Lacrosse."
    },
    {
        "answer": "SELECT lname, sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID = T2.GameID WHERE T2.Gname = \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID = T2.GameID WHERE T2.Gname = \"Works of Widenius\")",
        "context": "CREATE TABLE Plays_games (StuID VARCHAR, GameID VARCHAR); CREATE TABLE Student (lname VARCHAR, sex VARCHAR, StuID VARCHAR); CREATE TABLE Video_games (GameID VARCHAR, Gname VARCHAR)",
        "question": "Find the last name and gender of the students who are playing both Call of Destiny and Works of Widenius games."
    },
    {
        "answer": "SELECT COUNT(season) FROM table_23338693_1 WHERE team = \"Motopark\"",
        "context": "CREATE TABLE table_23338693_1 (season VARCHAR, team VARCHAR)",
        "question": "How many seasons have motopark team?"
    },
    {
        "answer": "SELECT customer_name FROM customers WHERE payment_method = (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY COUNT(*) DESC LIMIT 1)",
        "context": "CREATE TABLE customers (customer_name VARCHAR, payment_method VARCHAR)",
        "question": "What are the names of customers using the most popular payment method?"
    },
    {
        "answer": "SELECT colors FROM table_name_17 WHERE school = \"zeigler high school\"",
        "context": "CREATE TABLE table_name_17 (colors VARCHAR, school VARCHAR)",
        "question": "What Colors has a School of zeigler high school?"
    },
    {
        "answer": "SELECT MAX(games_played) FROM table_23346303_4 WHERE player = \"Janae Stokes\"",
        "context": "CREATE TABLE table_23346303_4 (games_played INTEGER, player VARCHAR)",
        "question": "How many games did janae stokes play?"
    },
    {
        "answer": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t1.customer_name = \"Maudie Kertzmann\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE customer_addresses (customer_id VARCHAR, address_id VARCHAR); CREATE TABLE addresses (address_content VARCHAR, address_id VARCHAR)",
        "question": "What is the address content of the customer named \"Maudie Kertzmann\"?"
    },
    {
        "answer": "SELECT COUNT(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.city = \"Lake Geovannyton\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR); CREATE TABLE addresses (address_id VARCHAR, city VARCHAR); CREATE TABLE customer_addresses (customer_id VARCHAR, address_id VARCHAR)",
        "question": "How many customers are living in city \"Lake Geovannyton\"?"
    },
    {
        "answer": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = \"Colorado\"",
        "context": "CREATE TABLE customer_addresses (customer_id VARCHAR, address_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE addresses (address_id VARCHAR, state_province_county VARCHAR)",
        "question": "Find the name of customers who are living in Colorado?"
    },
    {
        "answer": "SELECT city FROM addresses WHERE NOT city IN (SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id)",
        "context": "CREATE TABLE customers (customer_id VARCHAR); CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE customer_addresses (customer_id VARCHAR, address_id VARCHAR); CREATE TABLE addresses (city VARCHAR)",
        "question": "Find the list of cities that no customer is living in."
    },
    {
        "answer": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id GROUP BY t3.city ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE customers (customer_id VARCHAR); CREATE TABLE addresses (city VARCHAR, address_id VARCHAR); CREATE TABLE customer_addresses (customer_id VARCHAR, address_id VARCHAR)",
        "question": "Which city has the most customers living in?"
    },
    {
        "answer": "SELECT 18 AS _49 FROM table_name_45 WHERE weekly_winner = \"youth counselor justin meece\"",
        "context": "CREATE TABLE table_name_45 (weekly_winner VARCHAR)",
        "question": "What is 18-49, when Weekly Winner is \"Youth Counselor Justin Meece\"?"
    },
    {
        "answer": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = \"Tillman Ernser\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE customer_contact_channels (customer_id VARCHAR)",
        "question": "Which contact channel has been used by the customer with name \"Tillman Ernser\"?"
    },
    {
        "answer": "SELECT MAX(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = \"Tillman Ernser\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE customer_contact_channels (active_to_date INTEGER, customer_id VARCHAR)",
        "question": "What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?"
    },
    {
        "answer": "SELECT mahmoud_ahmadinejad FROM table_23390604_1 WHERE mir_hossein_mousavi = 218481",
        "context": "CREATE TABLE table_23390604_1 (mahmoud_ahmadinejad VARCHAR, mir_hossein_mousavi VARCHAR)",
        "question": "List all the results for mahmoud ahmadinejad when candidate mir-hossein mousavi obtained 218481 votes."
    },
    {
        "answer": "SELECT channel_code, contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date = (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)",
        "context": "CREATE TABLE customer_contact_channels (channel_code VARCHAR, contact_number VARCHAR, active_to_date VARCHAR, active_from_date VARCHAR)",
        "question": "What is the channel code and contact number of the customer contact channel that was active for the longest time?"
    },
    {
        "answer": "SELECT t1.customer_name, t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_contact_channels (active_from_date VARCHAR, customer_id VARCHAR, channel_code VARCHAR)",
        "question": "Find the name and active date of the customer that use email as the contact channel."
    },
    {
        "answer": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t3.order_quantity = (SELECT MAX(order_quantity) FROM order_items)",
        "context": "CREATE TABLE order_items (order_id VARCHAR, order_quantity INTEGER); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE order_items (order_quantity INTEGER); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR)",
        "question": "What is the name of the customer that made the order with the largest quantity?"
    },
    {
        "answer": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY SUM(t3.order_quantity) DESC LIMIT 1",
        "context": "CREATE TABLE order_items (order_id VARCHAR, order_quantity INTEGER); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR)",
        "question": "What is the name of the customer that has purchased the most items?"
    },
    {
        "answer": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY SUM(t3.order_quantity) LIMIT 1",
        "context": "CREATE TABLE order_items (order_id VARCHAR, order_quantity INTEGER); CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR)",
        "question": "What is the payment method of the customer that has purchased the least quantity of items?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.customer_name = \"Rodrick Heaney\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR)",
        "question": "How many types of products have Rodrick Heaney bought in total?"
    },
    {
        "answer": "SELECT SUM(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.customer_name = \"Rodrick Heaney\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR)",
        "question": "What is the total quantity of products purchased by \"Rodrick Heaney\"?"
    },
    {
        "answer": "SELECT MAX(mir_hossein_mousavi) FROM table_23390604_1 WHERE spoiled_ballots = 5683",
        "context": "CREATE TABLE table_23390604_1 (mir_hossein_mousavi INTEGER, spoiled_ballots VARCHAR)",
        "question": "What was the highest number of votes for mir-hossein mousavi when the number of invalid votes is 5683"
    },
    {
        "answer": "SELECT branding FROM table_23394920_1 WHERE power_kw = \"5kW\" AND station_type = \"Relay\"",
        "context": "CREATE TABLE table_23394920_1 (branding VARCHAR, power_kw VARCHAR, station_type VARCHAR)",
        "question": "When relay is the station type and 5kw is the power kw what is the branding?"
    },
    {
        "answer": "SELECT t1.customer_name, t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = \"Delivered\"",
        "context": "CREATE TABLE customer_orders (order_date VARCHAR, customer_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)",
        "question": "Find the customer name and date of the orders that have the status \"Delivered\"."
    },
    {
        "answer": "SELECT SUM(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_status = \"Cancelled\"",
        "context": "CREATE TABLE customer_orders (order_id VARCHAR, order_status VARCHAR); CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)",
        "question": "What is the total number of products that are in orders with status \"Cancelled\"?"
    },
    {
        "answer": "SELECT SUM(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_date < \"2018-03-17 07:13:53\"",
        "context": "CREATE TABLE customer_orders (order_id VARCHAR, order_date INTEGER); CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)",
        "question": "Find the total amount of products ordered before 2018-03-17 07:13:53."
    },
    {
        "answer": "SELECT score FROM table_name_91 WHERE attendance < 83 AND away_team = \"raunds town\"",
        "context": "CREATE TABLE table_name_91 (score VARCHAR, attendance VARCHAR, away_team VARCHAR)",
        "question": "What is the score when the attendance is less than 83 and Raunds Town is the away team?"
    },
    {
        "answer": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE products (product_details VARCHAR, product_id VARCHAR); CREATE TABLE order_items (product_id VARCHAR)",
        "question": "Which product has been ordered most number of times?"
    },
    {
        "answer": "SELECT t2.product_details, t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY SUM(t1.order_quantity) LIMIT 1",
        "context": "CREATE TABLE order_items (product_id VARCHAR, order_quantity INTEGER); CREATE TABLE products (product_details VARCHAR, product_id VARCHAR)",
        "question": "Find the name and ID of the product whose total order quantity is the largest."
    },
    {
        "answer": "SELECT address_content FROM addresses WHERE city = \"East Julianaside\" AND state_province_county = \"Texas\" UNION SELECT address_content FROM addresses WHERE city = \"Gleasonmouth\" AND state_province_county = \"Arizona\"",
        "context": "CREATE TABLE addresses (address_content VARCHAR, city VARCHAR, state_province_county VARCHAR)",
        "question": "Find all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona."
    },
    {
        "answer": "SELECT COUNT(original_airdate) FROM table_23392257_4 WHERE _number = 22",
        "context": "CREATE TABLE table_23392257_4 (original_airdate VARCHAR, _number VARCHAR)",
        "question": "What date did Episode 22 originally air?"
    },
    {
        "answer": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Latte'",
        "context": "CREATE TABLE order_items (order_id VARCHAR, product_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_details VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)",
        "question": "Find the names of customers who never ordered product Latte."
    },
    {
        "answer": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id",
        "context": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR)",
        "question": "Find the names of customers who never placed an order."
    },
    {
        "answer": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id JOIN products AS t4 ON t3.product_id = t4.product_id WHERE t4.product_details = 'Americano'",
        "context": "CREATE TABLE products (product_id VARCHAR, product_details VARCHAR); CREATE TABLE order_items (order_id VARCHAR, product_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE customer_orders (customer_id VARCHAR, order_id VARCHAR)",
        "question": "Find the names of customers who ordered both products Latte and Americano."
    },
    {
        "answer": "SELECT position FROM table_name_44 WHERE team = \"boston red sox\" AND player = \"corey jenkins\"",
        "context": "CREATE TABLE table_name_44 (position VARCHAR, team VARCHAR, player VARCHAR)",
        "question": "WHAT IS THE POSITION WITH BOSTON RED SOX FOR COREY JENKINS?"
    },
    {
        "answer": "SELECT COUNT(station_type) FROM table_23394920_1 WHERE callsign = \"DWHR-TV\"",
        "context": "CREATE TABLE table_23394920_1 (station_type VARCHAR, callsign VARCHAR)",
        "question": "When dwhr-tv is the call sign how many station types are there?"
    },
    {
        "answer": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T2.Weeks_on_Top > 2",
        "context": "CREATE TABLE music_festival (Date_of_ceremony VARCHAR, Volume VARCHAR); CREATE TABLE volume (Volume_ID VARCHAR, Weeks_on_Top INTEGER)",
        "question": "Please show the date of ceremony of the volumes that last more than 2 weeks on top."
    },
    {
        "answer": "SELECT COUNT(*) FROM table_23406517_2 WHERE bearing___degrees = \"67.6 - 82.5 82.6 - 97.5 97.6 - 112.5\"",
        "context": "CREATE TABLE table_23406517_2 (bearing___degrees VARCHAR)",
        "question": "How many values when the bearing or degrees is 67.6 - 82.5 82.6 - 97.5 97.6 - 112.5?"
    },
    {
        "answer": "SELECT trigram FROM table_23406517_2 WHERE direction = \"Northwest\"",
        "context": "CREATE TABLE table_23406517_2 (trigram VARCHAR, direction VARCHAR)",
        "question": "What is every trigram when direction is Northwest?"
    },
    {
        "answer": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age >= 32",
        "context": "CREATE TABLE volume (Song VARCHAR, Artist_ID VARCHAR); CREATE TABLE artist (Artist_ID VARCHAR, age VARCHAR)",
        "question": "What are the songs in volumes associated with the artist aged 32 or older?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_15 WHERE cause = \"gas explosion\" AND colliery = \"tylorstown colliery\" AND death_toll > 57",
        "context": "CREATE TABLE table_name_15 (year INTEGER, death_toll VARCHAR, cause VARCHAR, colliery VARCHAR)",
        "question": "Count the lowest Year which has gas explosion, Colliery of tylorstown colliery, and a Death toll larger than 57?"
    },
    {
        "answer": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2",
        "context": "CREATE TABLE artist (Famous_Title VARCHAR, Artist_ID VARCHAR); CREATE TABLE volume (Artist_ID VARCHAR, Weeks_on_Top INTEGER)",
        "question": "What are the famous title of the artists associated with volumes with more than 2 weeks on top?"
    },
    {
        "answer": "SELECT total_career_titles FROM table_23408094_14 WHERE player = \"Roy Emerson\"",
        "context": "CREATE TABLE table_23408094_14 (total_career_titles VARCHAR, player VARCHAR)",
        "question": "How many career titles does roy emerson have?"
    },
    {
        "answer": "SELECT date FROM table_name_60 WHERE cause = \"gas explosion\" AND death_toll < 63 AND location = \"penygraig\"",
        "context": "CREATE TABLE table_name_60 (date VARCHAR, location VARCHAR, cause VARCHAR, death_toll VARCHAR)",
        "question": "When has a cause of gas explosion, a Death toll smaller than 63, and a Location of penygraig?"
    },
    {
        "answer": "SELECT MAX(episode__number) FROM table_2342078_2 WHERE written_by = \"Paul West\"",
        "context": "CREATE TABLE table_2342078_2 (episode__number INTEGER, written_by VARCHAR)",
        "question": "What is the highest episode# with the writer Paul West?"
    },
    {
        "answer": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top < 2",
        "context": "CREATE TABLE artist (Famous_Title VARCHAR, Artist_ID VARCHAR); CREATE TABLE volume (Artist_ID VARCHAR, Weeks_on_Top INTEGER)",
        "question": "Show the famous titles of the artists with both volumes that lasted more than 2 weeks on top and volumes that lasted less than 2 weeks on top."
    },
    {
        "answer": "SELECT Date_of_ceremony FROM music_festival WHERE Category = \"Best Song\" AND RESULT = \"Awarded\"",
        "context": "CREATE TABLE music_festival (Date_of_ceremony VARCHAR, Category VARCHAR, RESULT VARCHAR)",
        "question": "What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?"
    },
    {
        "answer": "SELECT MAX(taijijian) FROM table_name_20 WHERE taijiquan = 9.87 AND total < 19.77",
        "context": "CREATE TABLE table_name_20 (taijijian INTEGER, taijiquan VARCHAR, total VARCHAR)",
        "question": "What is the highest taijijian with a 9.87 taijiquan and a total less than 19.77?"
    },
    {
        "answer": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age <= 23",
        "context": "CREATE TABLE volume (Artist_ID VARCHAR); CREATE TABLE artist (Artist_ID VARCHAR, age VARCHAR)",
        "question": "What are the issue dates of volumes associated with the artist aged 23 or younger?"
    },
    {
        "answer": "SELECT week_5 FROM table_name_95 WHERE week_3 = \"felicia taylor\"",
        "context": "CREATE TABLE table_name_95 (week_5 VARCHAR, week_3 VARCHAR)",
        "question": "Felicia Taylor was cyber girl in week 3, so who was the cyber girl in week 5?"
    },
    {
        "answer": "SELECT Name FROM country WHERE Languages <> \"German\"",
        "context": "CREATE TABLE country (Name VARCHAR, Languages VARCHAR)",
        "question": "List the names of countries whose language is not \"German\"."
    },
    {
        "answer": "SELECT date FROM table_name_72 WHERE result = \"3\u20132\" AND score = \"6\u20130, 6\u20134\"",
        "context": "CREATE TABLE table_name_72 (date VARCHAR, result VARCHAR, score VARCHAR)",
        "question": "When was the Result of 3\u20132, with a Score of 6\u20130, 6\u20134?"
    },
    {
        "answer": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT(*) > 1",
        "context": "CREATE TABLE roller_coaster (Country_ID VARCHAR); CREATE TABLE country (Name VARCHAR, Country_ID VARCHAR)",
        "question": "Show the names of countries that have more than one roller coaster."
    },
    {
        "answer": "SELECT T1.Name, T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID ORDER BY T2.Height DESC LIMIT 1",
        "context": "CREATE TABLE roller_coaster (Country_ID VARCHAR, Height VARCHAR); CREATE TABLE country (Name VARCHAR, population VARCHAR, Country_ID VARCHAR)",
        "question": "Show the name and population of the country that has the highest roller coaster."
    },
    {
        "answer": "SELECT T1.name, T1.area, T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.name, T1.area, T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed < 55",
        "context": "CREATE TABLE country (name VARCHAR, area VARCHAR, population VARCHAR, Country_ID VARCHAR); CREATE TABLE roller_coaster (Country_ID VARCHAR, speed INTEGER)",
        "question": "What are the country names, area and population which has both roller coasters with speed higher"
    },
    {
        "answer": "SELECT sat_29_aug FROM table_23465864_4 WHERE mon_24_aug = \"24' 17.26 93.208mph\"",
        "context": "CREATE TABLE table_23465864_4 (sat_29_aug VARCHAR, mon_24_aug VARCHAR)",
        "question": "What time was achieved on Saturday 29th August by the rider who recorded 24' 17.26 93.208mph on Monday 24th August?"
    },
    {
        "answer": "SELECT name FROM captain WHERE rank = 'Midshipman' OR rank = 'Lieutenant'",
        "context": "CREATE TABLE captain (name VARCHAR, rank VARCHAR)",
        "question": "Find the name of captains whose rank are either Midshipman or Lieutenant."
    },
    {
        "answer": "SELECT title FROM table_name_18 WHERE format = \"mono lp\" AND label = \"pye\"",
        "context": "CREATE TABLE table_name_18 (title VARCHAR, format VARCHAR, label VARCHAR)",
        "question": "What is the Title of the Pye Label mono LP release?"
    },
    {
        "answer": "SELECT COUNT(area_km_2) FROM table_name_60 WHERE census_ranking = \"3,129 of 5,008\" AND population < 460",
        "context": "CREATE TABLE table_name_60 (area_km_2 VARCHAR, census_ranking VARCHAR, population VARCHAR)",
        "question": "What is the total area with the census ranking of 3,129 of 5,008, and a Population smaller than 460?"
    },
    {
        "answer": "SELECT COUNT(area_km_2) FROM table_name_66 WHERE census_ranking = \"3,129 of 5,008\" AND population > 460",
        "context": "CREATE TABLE table_name_66 (area_km_2 VARCHAR, census_ranking VARCHAR, population VARCHAR)",
        "question": "What is the total area with the Census Ranking of 3,129 of 5,008, and a Population larger than 460?"
    },
    {
        "answer": "SELECT service FROM table_23477312_1 WHERE train_name = \"Pune Duronto\" AND departure = \"21:35\"",
        "context": "CREATE TABLE table_23477312_1 (service VARCHAR, train_name VARCHAR, departure VARCHAR)",
        "question": "What's the service number of the Pune Duronto train that departures at 21:35?"
    },
    {
        "answer": "SELECT train_name FROM table_23477312_1 WHERE destination = \"Bhubaneswar\"",
        "context": "CREATE TABLE table_23477312_1 (train_name VARCHAR, destination VARCHAR)",
        "question": "What's the name of the train that goes to Bhubaneswar?"
    },
    {
        "answer": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id GROUP BY t2.ship_id HAVING COUNT(*) > 1",
        "context": "CREATE TABLE captain (ship_id VARCHAR); CREATE TABLE ship (name VARCHAR, ship_id VARCHAR)",
        "question": "Find the name of the ships that have more than one captain."
    },
    {
        "answer": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id ORDER BY t2.age LIMIT 1",
        "context": "CREATE TABLE ship (name VARCHAR, ship_id VARCHAR); CREATE TABLE captain (ship_id VARCHAR, age VARCHAR)",
        "question": "Find the name of the ship that is steered by the youngest captain."
    },
    {
        "answer": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant'",
        "context": "CREATE TABLE ship (name VARCHAR, ship_id VARCHAR); CREATE TABLE captain (ship_id VARCHAR, rank VARCHAR)",
        "question": "Find the name of the ships that are steered by both a captain with Midshipman rank and a captain with Lieutenant rank."
    },
    {
        "answer": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2010",
        "context": "CREATE TABLE city (city VARCHAR, city_id VARCHAR); CREATE TABLE hosting_city (host_city VARCHAR, year INTEGER)",
        "question": "Find the cities which were once a host city after 2010?"
    },
    {
        "answer": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"",
        "context": "CREATE TABLE city (city_id VARCHAR, city VARCHAR); CREATE TABLE MATCH (venue VARCHAR, match_id VARCHAR, competition VARCHAR); CREATE TABLE hosting_city (host_city VARCHAR, match_id VARCHAR)",
        "question": "What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing ( Jiangsu )\"?"
    },
    {
        "answer": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\"",
        "context": "CREATE TABLE city (city_id VARCHAR, city VARCHAR); CREATE TABLE temperature (Jan VARCHAR, city_id VARCHAR)",
        "question": "Give me the temperature of Shanghai in January."
    },
    {
        "answer": "SELECT score FROM table_23486853_8 WHERE location = \"Verizon Center\" AND points = 68",
        "context": "CREATE TABLE table_23486853_8 (score VARCHAR, location VARCHAR, points VARCHAR)",
        "question": "What is every score at the location of Verizon Center and points of 68?"
    },
    {
        "answer": "SELECT thai_name FROM table_name_29 WHERE transcription = \"wan phruehatsabodi\"",
        "context": "CREATE TABLE table_name_29 (thai_name VARCHAR, transcription VARCHAR)",
        "question": "Show the Thai name of wan phruehatsabodi?"
    },
    {
        "answer": "SELECT MAX(officers_o_s) FROM table_23508196_2 WHERE total_usaaf = 2373882",
        "context": "CREATE TABLE table_23508196_2 (officers_o_s INTEGER, total_usaaf VARCHAR)",
        "question": "How many officers o/s were there on the day when the number of USAAF was 2373882?"
    },
    {
        "answer": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city",
        "context": "CREATE TABLE city (city VARCHAR, city_id VARCHAR); CREATE TABLE hosting_city (host_city VARCHAR); CREATE TABLE temperature (city_id VARCHAR, Mar INTEGER, Jul VARCHAR)",
        "question": "Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities?"
    },
    {
        "answer": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city",
        "context": "CREATE TABLE city (city VARCHAR, city_id VARCHAR); CREATE TABLE hosting_city (host_city VARCHAR); CREATE TABLE temperature (city_id VARCHAR, Mar INTEGER, Dec VARCHAR)",
        "question": "Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities."
    },
    {
        "answer": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Feb > T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city",
        "context": "CREATE TABLE city (city VARCHAR, city_id VARCHAR); CREATE TABLE hosting_city (host_city VARCHAR); CREATE TABLE temperature (city_id VARCHAR, Feb INTEGER, Jun VARCHAR)",
        "question": "Give me a list of cities whose temperature in Feb is higher than that in Jun or cities that were once host cities?"
    },
    {
        "answer": "SELECT city FROM city WHERE regional_population > 10000000 UNION SELECT city FROM city WHERE regional_population < 5000000",
        "context": "CREATE TABLE city (city VARCHAR, regional_population INTEGER)",
        "question": "Please give me a list of cities whose regional population is over 8000000 or under 5000000."
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_15 WHERE category = \"best actor in a musical\"",
        "context": "CREATE TABLE table_name_15 (year INTEGER, category VARCHAR)",
        "question": "What year had Best Actor in a Musical as a category?"
    },
    {
        "answer": "SELECT t1.gdp, t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY t2.Host_City HAVING COUNT(*) > 1",
        "context": "CREATE TABLE hosting_city (host_city VARCHAR); CREATE TABLE city (city_id VARCHAR)",
        "question": "What are the GDP and population of the city that already served as a host more than once?"
    },
    {
        "answer": "SELECT individual_first_name, individual_middle_name, individual_last_name FROM individuals ORDER BY individual_last_name",
        "context": "CREATE TABLE individuals (individual_first_name VARCHAR, individual_middle_name VARCHAR, individual_last_name VARCHAR)",
        "question": "List every individual's first name, middle name and last name in alphabetical order by last name."
    },
    {
        "answer": "SELECT MAX(election_year) FROM table_23512864_4 WHERE speaker = \"Munu Adhi (2) K. Rajaram\"",
        "context": "CREATE TABLE table_23512864_4 (election_year INTEGER, speaker VARCHAR)",
        "question": "If the speaker is Munu Adhi (2) K. Rajaram, what is the election year maximum?"
    },
    {
        "answer": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id = t2.form_id GROUP BY t2.form_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE party_forms (form_id VARCHAR); CREATE TABLE forms (form_name VARCHAR, form_id VARCHAR)",
        "question": "Find the name of the most popular party form."
    },
    {
        "answer": "SELECT country FROM table_name_3 WHERE to_par = \"+2\" AND player = \"bernhard langer\"",
        "context": "CREATE TABLE table_name_3 (country VARCHAR, to_par VARCHAR, player VARCHAR)",
        "question": "Which country has a to par of +2 for Bernhard Langer?"
    },
    {
        "answer": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id = t2.party_id WHERE t2.form_id = (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY COUNT(*) DESC LIMIT 1)",
        "context": "CREATE TABLE party_forms (form_id VARCHAR); CREATE TABLE parties (party_email VARCHAR, party_id VARCHAR); CREATE TABLE party_forms (party_id VARCHAR, form_id VARCHAR)",
        "question": "Find the emails of parties with the most popular party form."
    },
    {
        "answer": "SELECT social_ao FROM table_name_68 WHERE president = \"harm van leeuwen\"",
        "context": "CREATE TABLE table_name_68 (social_ao VARCHAR, president VARCHAR)",
        "question": "What Social AO has a President of harm van leeuwen?"
    },
    {
        "answer": "SELECT road_number FROM table_name_75 WHERE type = \"dead end\" AND rank = \"22\"",
        "context": "CREATE TABLE table_name_75 (road_number VARCHAR, type VARCHAR, rank VARCHAR)",
        "question": "What is the rad number for the dead end in rank 22?"
    },
    {
        "answer": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id JOIN individuals AS t3 ON t2.individual_id = t3.individual_id WHERE t1.organization_name = \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1",
        "context": "CREATE TABLE organizations (organization_id VARCHAR, organization_name VARCHAR); CREATE TABLE individuals (individual_last_name VARCHAR, individual_id VARCHAR); CREATE TABLE organization_contact_individuals (organization_id VARCHAR, individual_id VARCHAR, date_contact_to VARCHAR)",
        "question": "Find the last name of the latest contact individual of the organization \"Labour Party\"."
    },
    {
        "answer": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id JOIN individuals AS t3 ON t2.individual_id = t3.individual_id WHERE t1.uk_vat_number = (SELECT MAX(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to LIMIT 1",
        "context": "CREATE TABLE organizations (uk_vat_number INTEGER); CREATE TABLE individuals (individual_last_name VARCHAR, individual_id VARCHAR); CREATE TABLE organizations (organization_id VARCHAR, uk_vat_number INTEGER); CREATE TABLE organization_contact_individuals (organization_id VARCHAR, individual_id VARCHAR, date_contact_to VARCHAR)",
        "question": "Find the last name of the first ever contact person of the organization with the highest UK Vat number."
    },
    {
        "answer": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id = t2.service_id",
        "context": "CREATE TABLE services (service_name VARCHAR); CREATE TABLE party_services (service_id VARCHAR); CREATE TABLE services (service_name VARCHAR, service_id VARCHAR)",
        "question": "Find name of the services that has never been used."
    },
    {
        "answer": "SELECT SUM(wins) FROM table_name_62 WHERE against > 1136 AND losses < 15 AND golden_rivers = \"ultima\" AND byes < 2",
        "context": "CREATE TABLE table_name_62 (wins INTEGER, byes VARCHAR, golden_rivers VARCHAR, against VARCHAR, losses VARCHAR)",
        "question": "What was the total number of wins that had an against greater than 1136 but losses less than 15 with Ultima with less than 2 byes?"
    },
    {
        "answer": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id = t2.customer_id GROUP BY t1.party_email ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE parties (party_email VARCHAR, party_id VARCHAR); CREATE TABLE party_services (customer_id VARCHAR)",
        "question": "Which is the email of the party that has used the services the most number of times?"
    },
    {
        "answer": "SELECT copper_age FROM table_23537091_1 WHERE ubaid_period_in_mesopotamia = \"Middle Assyrian Empire\"",
        "context": "CREATE TABLE table_23537091_1 (copper_age VARCHAR, ubaid_period_in_mesopotamia VARCHAR)",
        "question": "When middle assyrian empire is the ubaid period in mesopotamia what is the copper age?"
    },
    {
        "answer": "SELECT copper_age FROM table_23537091_1 WHERE ubaid_period_in_mesopotamia = \"Hittite Old Kingdom , Minoan eruption\"",
        "context": "CREATE TABLE table_23537091_1 (copper_age VARCHAR, ubaid_period_in_mesopotamia VARCHAR)",
        "question": "When hittite old kingdom , minoan eruption is the  ubaid period in mesopotamia what is the copper age?"
    },
    {
        "answer": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id = t2.individual_id",
        "context": "CREATE TABLE individuals (individual_last_name VARCHAR, individual_id VARCHAR); CREATE TABLE organization_contact_individuals (individual_id VARCHAR)",
        "question": "Find the last name of the individuals that have been contact individuals of an organization."
    },
    {
        "answer": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id GROUP BY t1.organization_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE organization_contact_individuals (organization_id VARCHAR); CREATE TABLE organizations (organization_name VARCHAR, organization_id VARCHAR)",
        "question": "What is the name of organization that has the greatest number of contact individuals?"
    },
    {
        "answer": "SELECT COUNT(early_chalcolithic) FROM table_23537091_1 WHERE ubaid_period_in_mesopotamia = \"Second Intermediate Period of Egypt\"",
        "context": "CREATE TABLE table_23537091_1 (early_chalcolithic VARCHAR, ubaid_period_in_mesopotamia VARCHAR)",
        "question": "When the second intermediate period of egypt is the  ubaid period in mesopotamia how many early calcolithics are there?"
    },
    {
        "answer": "SELECT MAX(area_km_2) FROM table_name_92 WHERE status = \"village\" AND census_ranking = \"1,442 of 5,008\" AND population < 1 OFFSET 778",
        "context": "CREATE TABLE table_name_92 (area_km_2 INTEGER, population VARCHAR, status VARCHAR, census_ranking VARCHAR)",
        "question": "What is the area of the village with a census ranking of 1,442 of 5,008 and a population less than 1,778?"
    },
    {
        "answer": "SELECT first_broadcast FROM table_23575917_6 WHERE davids_team = \"David O'Doherty and Katherine Parkinson\"",
        "context": "CREATE TABLE table_23575917_6 (first_broadcast VARCHAR, davids_team VARCHAR)",
        "question": "When david o'doherty and katherine parkinson are both on the davids team when is the first broadcast?"
    },
    {
        "answer": "SELECT T2.school, T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN driver AS T3 ON T1.driver_id = T3.driver_id",
        "context": "CREATE TABLE school (school VARCHAR, school_id VARCHAR); CREATE TABLE school_bus (school_id VARCHAR, driver_id VARCHAR); CREATE TABLE driver (name VARCHAR, driver_id VARCHAR)",
        "question": "Show the school name and driver name for all school buses."
    },
    {
        "answer": "SELECT COUNT(episode) FROM table_23575917_8 WHERE davids_team = \"Vernon Kay and Dara \u00d3 Briain\"",
        "context": "CREATE TABLE table_23575917_8 (episode VARCHAR, davids_team VARCHAR)",
        "question": "How many shows did team David consist of vernon kay and dara \u00f3 briain"
    },
    {
        "answer": "SELECT T2.type, COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id GROUP BY T2.type",
        "context": "CREATE TABLE school (type VARCHAR, school_id VARCHAR); CREATE TABLE school_bus (school_id VARCHAR)",
        "question": "Show the type of school and the number of buses for each type."
    },
    {
        "answer": "SELECT COUNT(horse__power) FROM table_23614702_1 WHERE warship = \"Cochrane\"",
        "context": "CREATE TABLE table_23614702_1 (horse__power VARCHAR, warship VARCHAR)",
        "question": "How many different horse-powers does the Cochrane have?"
    },
    {
        "answer": "SELECT T1.name, T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id",
        "context": "CREATE TABLE operate_company (name VARCHAR, type VARCHAR, id VARCHAR); CREATE TABLE flight (Id VARCHAR)",
        "question": "What are the names and types of the companies that have ever operated a flight?"
    },
    {
        "answer": "SELECT T1.id, T1.name, T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE airport (id VARCHAR, name VARCHAR, IATA VARCHAR); CREATE TABLE flight (id VARCHAR, airport_id VARCHAR)",
        "question": "What is the id, name and IATA code of the airport that had most number of flights?"
    },
    {
        "answer": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.country = 'United States' OR T1.name = 'Billund Airport'",
        "context": "CREATE TABLE airport (id VARCHAR, country VARCHAR, name VARCHAR); CREATE TABLE flight (pilot VARCHAR, airport_id VARCHAR)",
        "question": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?"
    },
    {
        "answer": "SELECT main_artillery FROM table_23614702_2 WHERE tons___lton__ = \"1,051\"",
        "context": "CREATE TABLE table_23614702_2 (main_artillery VARCHAR, tons___lton__ VARCHAR)",
        "question": "What is the primary artillery for the  1,051 ships?"
    },
    {
        "answer": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services'",
        "context": "CREATE TABLE operate_company (id VARCHAR, principal_activities VARCHAR); CREATE TABLE flight (Id VARCHAR)",
        "question": "List the name of the pilots who have flied for both a company that mainly provide 'Cargo' services and a company that runs 'Catering services' activities."
    },
    {
        "answer": "SELECT T3.id, COUNT(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id JOIN airport AS T3 ON T2.airport_id = T3.id GROUP BY T3.id",
        "context": "CREATE TABLE airport (id VARCHAR); CREATE TABLE flight (Id VARCHAR); CREATE TABLE operate_company (id VARCHAR)",
        "question": "How many companies operates airlines in each airport?"
    },
    {
        "answer": "SELECT player FROM table_name_79 WHERE draft < 1975 AND round < 6",
        "context": "CREATE TABLE table_name_79 (player VARCHAR, draft VARCHAR, round VARCHAR)",
        "question": "Which player had a draft before 1975 and before round 6?"
    },
    {
        "answer": "SELECT T1.statement_id, T2.statement_details, T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id",
        "context": "CREATE TABLE Accounts (statement_id VARCHAR, account_details VARCHAR); CREATE TABLE Statements (statement_details VARCHAR, statement_id VARCHAR)",
        "question": "Show statement id, statement detail, account detail for accounts."
    },
    {
        "answer": "SELECT T1.statement_id, T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Accounts (statement_id VARCHAR); CREATE TABLE Statements (statement_details VARCHAR, statement_id VARCHAR)",
        "question": "Show the statement id and the statement detail for the statement with most number of accounts."
    },
    {
        "answer": "SELECT document_type_code, document_name, document_description FROM Documents WHERE document_name = 'Noel CV' OR document_name = 'King Book'",
        "context": "CREATE TABLE Documents (document_type_code VARCHAR, document_name VARCHAR, document_description VARCHAR)",
        "question": "List the document type code, document name, and document description for the document with name 'Noel CV' or name 'King Book'."
    },
    {
        "answer": "SELECT document_name, document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'",
        "context": "CREATE TABLE Documents (project_id VARCHAR); CREATE TABLE projects (project_id VARCHAR, project_details VARCHAR)",
        "question": "Show the document name and the document date for all documents on project with details 'Graph Database project'."
    },
    {
        "answer": "SELECT _percentage_of_all_immigrants_2007 FROM table_23619212_1 WHERE _percentage_of_all_immigrants_2008 = \"1.7%\"",
        "context": "CREATE TABLE table_23619212_1 (_percentage_of_all_immigrants_2007 VARCHAR, _percentage_of_all_immigrants_2008 VARCHAR)",
        "question": "What's the percentage of all immigrants in 2007 in the country with 1.7% of all immigrants in 2008?"
    },
    {
        "answer": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE Documents (project_id VARCHAR)",
        "question": "What is the id of the project with least number of documents?"
    },
    {
        "answer": "SELECT COUNT(_percentage_of_all_immigrants_2006) FROM table_23619212_1 WHERE country = \"Morocco\"",
        "context": "CREATE TABLE table_23619212_1 (_percentage_of_all_immigrants_2006 VARCHAR, country VARCHAR)",
        "question": "How many different percentages of immigrants in 2006 can there be for Morocco?"
    },
    {
        "answer": "SELECT COUNT(_percentage_of_all_immigrants_2007) FROM table_23619212_1 WHERE _percentage_of_all_immigrants_2005 = \"1.2%\"",
        "context": "CREATE TABLE table_23619212_1 (_percentage_of_all_immigrants_2007 VARCHAR, _percentage_of_all_immigrants_2005 VARCHAR)",
        "question": "How many different percentages of immigrants are there for the year of 2007 in the countries with 1.2% of the immigrants in the year of 2005?"
    },
    {
        "answer": "SELECT SUM(losses) FROM table_name_50 WHERE result = \"runner-up\" AND wins = 1 AND year < 2006",
        "context": "CREATE TABLE table_name_50 (losses INTEGER, year VARCHAR, result VARCHAR, wins VARCHAR)",
        "question": "What is the total of Losses with a Result of runner-up, Wins of 1, and a Year smaller than 2006?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_2362486_1 WHERE score_in_the_final = \"6\u20134, 2\u20136, 6\u20134, 7\u20136(3)\"",
        "context": "CREATE TABLE table_2362486_1 (opponents_in_the_final VARCHAR, score_in_the_final VARCHAR)",
        "question": "Who were the opponents in the final where the score was 6\u20134, 2\u20136, 6\u20134, 7\u20136(3)?"
    },
    {
        "answer": "SELECT T1.statement_details, T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'",
        "context": "CREATE TABLE Statements (statement_details VARCHAR, statement_id VARCHAR); CREATE TABLE Documents (document_name VARCHAR, document_id VARCHAR)",
        "question": "Show the statement detail and the corresponding document name for the statement with detail 'Private Project'."
    },
    {
        "answer": "SELECT T1.document_type_name, T1.document_type_description, T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code = T2.document_type_code",
        "context": "CREATE TABLE Ref_document_types (document_type_name VARCHAR, document_type_description VARCHAR, document_type_code VARCHAR); CREATE TABLE Documents (Document_date VARCHAR, document_type_code VARCHAR)",
        "question": "What is the document type name and the document type description and creation date for all the documents?"
    },
    {
        "answer": "SELECT COUNT(paula_radcliffe___gbr__) FROM table_23619492_3 WHERE world_record = \"African record\"",
        "context": "CREATE TABLE table_23619492_3 (paula_radcliffe___gbr__ VARCHAR, world_record VARCHAR)",
        "question": "Name the total number of african record"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_26 WHERE matches < 5 AND year = 1994",
        "context": "CREATE TABLE table_name_26 (wins INTEGER, matches VARCHAR, year VARCHAR)",
        "question": "What is the greatest Wins with Matches smaller than 5, and a Year of 1994?"
    },
    {
        "answer": "SELECT T1.project_id, T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING COUNT(*) > 2",
        "context": "CREATE TABLE Projects (project_id VARCHAR, project_details VARCHAR); CREATE TABLE Documents (project_id VARCHAR)",
        "question": "What is the project id and detail for the project with at least two documents?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_93 WHERE wins = 1 AND losses < 1",
        "context": "CREATE TABLE table_name_93 (year INTEGER, wins VARCHAR, losses VARCHAR)",
        "question": "What is the total number of Year with Wins of 1, and Losses smaller than 1?"
    },
    {
        "answer": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = \"King Book\"",
        "context": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR); CREATE TABLE Documents (project_id VARCHAR, document_name VARCHAR)",
        "question": "What is the project detail for the project with document \"King Book\"?"
    },
    {
        "answer": "SELECT COUNT(season) FROM table_23647668_2 WHERE champion = \"Melgar\"",
        "context": "CREATE TABLE table_23647668_2 (season VARCHAR, champion VARCHAR)",
        "question": "How many season had Melgar as a champion?"
    },
    {
        "answer": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code = \"ORG\"",
        "context": "CREATE TABLE Ref_budget_codes (budget_type_description VARCHAR, budget_type_code VARCHAR)",
        "question": "What is the description for the budget type with code ORG?"
    },
    {
        "answer": "SELECT competition FROM table_name_88 WHERE venue = \"away\" AND opponent = \"bracknell bees\"",
        "context": "CREATE TABLE table_name_88 (competition VARCHAR, venue VARCHAR, opponent VARCHAR)",
        "question": "When the venue is away and the opponents are the bracknell bees, what is the competition?"
    },
    {
        "answer": "SELECT T2.budget_type_code, T2.budget_type_description, T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code = T2.budget_type_code",
        "context": "CREATE TABLE Ref_budget_codes (budget_type_code VARCHAR, budget_type_description VARCHAR); CREATE TABLE Documents_with_expenses (document_id VARCHAR, budget_type_code VARCHAR)",
        "question": "Show the budget type code and description and the corresponding document id."
    },
    {
        "answer": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = \"Government\"",
        "context": "CREATE TABLE Documents_with_expenses (document_id VARCHAR, Budget_Type_code VARCHAR); CREATE TABLE Ref_Budget_Codes (Budget_Type_code VARCHAR, budget_type_Description VARCHAR)",
        "question": "Show ids for all documents with budget types described as 'Government'."
    },
    {
        "answer": "SELECT document_id FROM Documents WHERE document_type_code = \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses",
        "context": "CREATE TABLE Documents_with_expenses (document_id VARCHAR, document_type_code VARCHAR); CREATE TABLE Documents (document_id VARCHAR, document_type_code VARCHAR)",
        "question": "Show ids for all documents in type CV without expense budgets."
    },
    {
        "answer": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%'",
        "context": "CREATE TABLE Documents_with_expenses (document_id VARCHAR); CREATE TABLE Documents (document_id VARCHAR, document_name VARCHAR)",
        "question": "What are the ids of documents with letter 's' in the name with any expense budgets."
    },
    {
        "answer": "SELECT race FROM table_name_45 WHERE round < 8 AND date = \"6 july\"",
        "context": "CREATE TABLE table_name_45 (race VARCHAR, round VARCHAR, date VARCHAR)",
        "question": "What race was a round smaller than 8,  on 6 july?"
    },
    {
        "answer": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id = T2.document_id WHERE T2.budget_type_code = 'SF'",
        "context": "CREATE TABLE Documents_with_Expenses (document_id VARCHAR, budget_type_code VARCHAR); CREATE TABLE Documents (document_date VARCHAR, document_id VARCHAR)",
        "question": "What are the dates for the documents with both 'GV' type and 'SF' type expenses?"
    },
    {
        "answer": "SELECT COUNT(week) FROM table_name_29 WHERE attendance = 56 OFFSET 023",
        "context": "CREATE TABLE table_name_29 (week VARCHAR, attendance VARCHAR)",
        "question": "What week were there 56,023 people in attendance?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_45 WHERE week > 9 AND date = \"november 20, 1983\"",
        "context": "CREATE TABLE table_name_45 (attendance VARCHAR, week VARCHAR, date VARCHAR)",
        "question": "What is the attendance number later than week 9 on November 20, 1983?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_98 WHERE opponent_in_the_final = \"john mcenroe\" AND championship = \"los angeles , u.s.\"",
        "context": "CREATE TABLE table_name_98 (score_in_the_final VARCHAR, opponent_in_the_final VARCHAR, championship VARCHAR)",
        "question": "What is Score in The Final, when Opponent in The Final is \"John McEnroe\", and when Championship is \"Los Angeles , U.S.\"?"
    },
    {
        "answer": "SELECT album_s_ FROM table_23667534_1 WHERE song_s__title = \"It's Going So Badly\"",
        "context": "CREATE TABLE table_23667534_1 (album_s_ VARCHAR, song_s__title VARCHAR)",
        "question": "What album was the song It's going so badly on?"
    },
    {
        "answer": "SELECT name FROM projects WHERE hours > (SELECT AVG(hours) FROM projects)",
        "context": "CREATE TABLE projects (name VARCHAR, hours INTEGER)",
        "question": "List the name of all projects that are operated longer than the average working hours of all projects."
    },
    {
        "answer": "SELECT country FROM table_name_2 WHERE place = \"t10\" AND player = \"tony jacklin\"",
        "context": "CREATE TABLE table_name_2 (country VARCHAR, place VARCHAR, player VARCHAR)",
        "question": "Which Country has a Place of t10, and a Player of tony jacklin?"
    },
    {
        "answer": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%'",
        "context": "CREATE TABLE scientists (SSN VARCHAR, name VARCHAR); CREATE TABLE assignedto (project VARCHAR, scientist VARCHAR); CREATE TABLE projects (name VARCHAR, code VARCHAR)",
        "question": "Find the name of the project for which a scientist whose name contains \u2018Smith\u2019 is assigned to."
    },
    {
        "answer": "SELECT SUM(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers' OR T3.name = 'Carol Smith'",
        "context": "CREATE TABLE scientists (SSN VARCHAR, name VARCHAR); CREATE TABLE projects (hours INTEGER, code VARCHAR); CREATE TABLE assignedto (project VARCHAR, scientist VARCHAR)",
        "question": "Find the total hours of the projects that scientists named Michael Rogers or Carol Smith are assigned to."
    },
    {
        "answer": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'A Puzzling Parallax'",
        "context": "CREATE TABLE projects (code VARCHAR, name VARCHAR); CREATE TABLE scientists (name VARCHAR, SSN VARCHAR); CREATE TABLE assignedto (project VARCHAR, scientist VARCHAR)",
        "question": "Find the name of the scientist who worked on both a project named 'Matter of Time' and a project named 'A Puzzling Parallax'."
    },
    {
        "answer": "SELECT COUNT(*), T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name",
        "context": "CREATE TABLE assignedto (project VARCHAR); CREATE TABLE projects (name VARCHAR, code VARCHAR)",
        "question": "Find the number of scientists involved for each project name."
    },
    {
        "answer": "SELECT COUNT(*), T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn = T2.scientist GROUP BY T1.name",
        "context": "CREATE TABLE scientists (name VARCHAR, ssn VARCHAR); CREATE TABLE assignedto (scientist VARCHAR)",
        "question": "Find the number of projects which each scientist is working on and scientist's name."
    },
    {
        "answer": "SELECT T3.ssn, T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = (SELECT MAX(hours) FROM projects)",
        "context": "CREATE TABLE scientists (ssn VARCHAR, name VARCHAR, SSN VARCHAR); CREATE TABLE projects (code VARCHAR, hours INTEGER); CREATE TABLE assignedto (project VARCHAR, scientist VARCHAR); CREATE TABLE projects (hours INTEGER)",
        "question": "Find the SSN and name of scientists who are assigned to the project with the longest hours."
    },
    {
        "answer": "SELECT MAX(year_completed) FROM table_name_25 WHERE dam_type = \"earthfill embankment\" AND dam_constructed = \"khancoban dam\"",
        "context": "CREATE TABLE table_name_25 (year_completed INTEGER, dam_type VARCHAR, dam_constructed VARCHAR)",
        "question": "Which Year completed has a Dam type of earthfill embankment, and a Dam constructed of khancoban dam?"
    },
    {
        "answer": "SELECT reservoir_capacity FROM table_name_41 WHERE impounded_body_of_water = \"tumut two pondage\"",
        "context": "CREATE TABLE table_name_41 (reservoir_capacity VARCHAR, impounded_body_of_water VARCHAR)",
        "question": "Which Reservoir capacity has an Impounded body of water of tumut two pondage?"
    },
    {
        "answer": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = (SELECT MAX(hours) FROM projects)",
        "context": "CREATE TABLE scientists (name VARCHAR, SSN VARCHAR); CREATE TABLE assignedto (project VARCHAR, scientist VARCHAR); CREATE TABLE projects (code VARCHAR, hours INTEGER); CREATE TABLE scientists (name VARCHAR, hours INTEGER); CREATE TABLE projects (name VARCHAR, hours INTEGER)",
        "question": "Find the names of scientists who are not working on the project with the highest hours."
    },
    {
        "answer": "SELECT T1.Name, T3.Name, T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name, T1.Name",
        "context": "CREATE TABLE AssignedTo (Scientist VARCHAR, Project VARCHAR); CREATE TABLE Projects (Name VARCHAR, Hours VARCHAR, Code VARCHAR); CREATE TABLE Scientists (Name VARCHAR, SSN VARCHAR)",
        "question": "List all the scientists' names, their projects' names, and the hours worked by that scientist on each project, in alphabetical order of project name, and then scientist name."
    },
    {
        "answer": "SELECT T2.name, T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = (SELECT MIN(hours) FROM projects)",
        "context": "CREATE TABLE scientists (name VARCHAR, SSN VARCHAR); CREATE TABLE assignedto (project VARCHAR, scientist VARCHAR); CREATE TABLE projects (name VARCHAR, code VARCHAR, hours INTEGER); CREATE TABLE projects (hours INTEGER)",
        "question": "Find name of the project that needs the least amount of time to finish and the name of scientists who worked on it."
    },
    {
        "answer": "SELECT semimajor_axis___au__ FROM table_name_86 WHERE companion__in_order_from_star_ = \"g\"",
        "context": "CREATE TABLE table_name_86 (semimajor_axis___au__ VARCHAR, companion__in_order_from_star_ VARCHAR)",
        "question": "What Semimajor axis (AU) has a Companion (in order from star) of g?"
    },
    {
        "answer": "SELECT COUNT(week_36) FROM table_23680576_3 WHERE week_32 = \"13.2%\"",
        "context": "CREATE TABLE table_23680576_3 (week_36 VARCHAR, week_32 VARCHAR)",
        "question": "List the full amount of week 36 results when week 32 is 13.2%."
    },
    {
        "answer": "SELECT package_version FROM table_name_9 WHERE device = \"blackberry storm 9530\" AND applications = \"5.0.0.419\" AND carrier = \"mts mobility\"",
        "context": "CREATE TABLE table_name_9 (package_version VARCHAR, carrier VARCHAR, device VARCHAR, applications VARCHAR)",
        "question": "WHAT IS THE PACKAGE VERSION FOR blackberry storm 9530, APPLICATION 5.0.0.419, AND MTS MOBILITY?"
    },
    {
        "answer": "SELECT pop_2006 FROM table_23685890_2 WHERE major_town = \"Coober Pedy\"",
        "context": "CREATE TABLE table_23685890_2 (pop_2006 VARCHAR, major_town VARCHAR)",
        "question": "What was the 2006 population count of the local government area where Coober Pedy is located?"
    },
    {
        "answer": "SELECT MAX(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = \"Central Coast\" AND T2.year < 2005",
        "context": "CREATE TABLE APPELLATIONS (Appelation VARCHAR, Area VARCHAR); CREATE TABLE WINE (Price INTEGER, Appelation VARCHAR, year VARCHAR)",
        "question": "Find the maximum price of wins from the appelations in Central Coast area and produced before the year of 2005."
    },
    {
        "answer": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = \"Monterey\" AND T2.price < 50",
        "context": "CREATE TABLE APPELLATIONS (Appelation VARCHAR, County VARCHAR); CREATE TABLE WINE (Name VARCHAR, Appelation VARCHAR, price VARCHAR)",
        "question": "What are the wines that have prices lower than 50 and have appelations in Monterey county?"
    },
    {
        "answer": "SELECT MAX(high_10_profile) FROM table_237036_2 WHERE high_profile = 80",
        "context": "CREATE TABLE table_237036_2 (high_10_profile INTEGER, high_profile VARCHAR)",
        "question": "What is the high 10 profile number when the high profile is 80?"
    },
    {
        "answer": "SELECT luma_samples_s FROM table_237036_2 WHERE level = \"1.3\"",
        "context": "CREATE TABLE table_237036_2 (luma_samples_s VARCHAR, level VARCHAR)",
        "question": "What are the luma samples at level 1.3?"
    },
    {
        "answer": "SELECT local_location FROM table_name_68 WHERE resident_country = \"belgium\" AND mission = \"poland\"",
        "context": "CREATE TABLE table_name_68 (local_location VARCHAR, resident_country VARCHAR, mission VARCHAR)",
        "question": "What is Local Location, when Resident Country is \"Belgium\", and when Mission is \"Poland\"?"
    },
    {
        "answer": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
        "context": "CREATE TABLE GRAPES (Color VARCHAR, Grape VARCHAR); CREATE TABLE WINE (Grape VARCHAR)",
        "question": "What is the color of the grape whose wine products has the highest average price?"
    },
    {
        "answer": "SELECT AVG(Price), AVG(Cases) FROM WINE WHERE YEAR = 2009 AND Grape = \"Zinfandel\"",
        "context": "CREATE TABLE WINE (Price INTEGER, Cases INTEGER, YEAR VARCHAR, Grape VARCHAR)",
        "question": "What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?"
    },
    {
        "answer": "SELECT bowl_game FROM table_23718905_6 WHERE matchup_results = \"Oklahoma 31, Stanford 27\"",
        "context": "CREATE TABLE table_23718905_6 (bowl_game VARCHAR, matchup_results VARCHAR)",
        "question": "In what bowl game was the result Oklahoma 31, Stanford 27?"
    },
    {
        "answer": "SELECT television FROM table_23718905_6 WHERE date = \"December 28, 2009\"",
        "context": "CREATE TABLE table_23718905_6 (television VARCHAR, date VARCHAR)",
        "question": "What was the television that was dated December 28, 2009?"
    },
    {
        "answer": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE = T2.GRAPE WHERE T1.Color = \"White\" GROUP BY T2.Winery ORDER BY COUNT(*) DESC LIMIT 3",
        "context": "CREATE TABLE GRAPES (GRAPE VARCHAR, Color VARCHAR); CREATE TABLE WINE (Winery VARCHAR, GRAPE VARCHAR)",
        "question": "Find the top 3 wineries with the greatest number of wines made of white color grapes."
    },
    {
        "answer": "SELECT company_name FROM table_237199_1 WHERE world_headquarters = \"Nagaokakyo, Kyoto\"",
        "context": "CREATE TABLE table_237199_1 (company_name VARCHAR, world_headquarters VARCHAR)",
        "question": "Which company name has headquarters in nagaokakyo, kyoto?"
    },
    {
        "answer": "SELECT AVG(price) FROM wine WHERE NOT Appelation IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma')",
        "context": "CREATE TABLE wine (price INTEGER, Appelation VARCHAR); CREATE TABLE APPELLATIONS (Appelation VARCHAR, County VARCHAR); CREATE TABLE WINE (Appelation VARCHAR)",
        "question": "Find the average price of wines that are not produced from Sonoma county."
    },
    {
        "answer": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T2.Score > 90 GROUP BY T1.County ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE WINE (Appelation VARCHAR, Score INTEGER); CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR)",
        "question": "Find the county where produces the most number of wines with score higher than 90."
    },
    {
        "answer": "SELECT round FROM table_name_19 WHERE year < 1987",
        "context": "CREATE TABLE table_name_19 (round VARCHAR, year INTEGER)",
        "question": "What is the round for a year earlier than 1987?"
    },
    {
        "answer": "SELECT round FROM table_name_92 WHERE grand_slam = \"davis cup\"",
        "context": "CREATE TABLE table_name_92 (round VARCHAR, grand_slam VARCHAR)",
        "question": "What is the round when Grand Slam was the Davis Cup?"
    },
    {
        "answer": "SELECT COUNT(winning_coach) FROM table_237757_3 WHERE top_team_in_regular_season__points_ = \"Kansas City Spurs (110 points)\"",
        "context": "CREATE TABLE table_237757_3 (winning_coach VARCHAR, top_team_in_regular_season__points_ VARCHAR)",
        "question": "What is the winning coach total number if the top team in regular season (points) is the Kansas City Spurs (110 points)?"
    },
    {
        "answer": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms >= 15 AND total_passengers > 25",
        "context": "CREATE TABLE station (LOCATION VARCHAR, number_of_platforms VARCHAR, total_passengers VARCHAR)",
        "question": "Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers."
    },
    {
        "answer": "SELECT market_share FROM table_23801721_1 WHERE technology = \"CDMA EVDO GSM EDGE HSPA+\"",
        "context": "CREATE TABLE table_23801721_1 (market_share VARCHAR, technology VARCHAR)",
        "question": "What was the market share of the operator whose technology is CDMA EVDO GSM EDGE HSPA+?"
    },
    {
        "answer": "SELECT event FROM table_name_29 WHERE winning_driver = \"laurent aiello laurent aiello\" AND round > 1 AND circuit = \"wunstorf\"",
        "context": "CREATE TABLE table_name_29 (event VARCHAR, circuit VARCHAR, winning_driver VARCHAR, round VARCHAR)",
        "question": "What is Event, when Winning Driver is \"Laurent Aiello Laurent Aiello\", when Round is greater than 1, and when Circuit is \"Wunstorf\"?"
    },
    {
        "answer": "SELECT MIN(production_code) FROM table_23793770_1 WHERE directed_by = \"Michael Morris\"",
        "context": "CREATE TABLE table_23793770_1 (production_code INTEGER, directed_by VARCHAR)",
        "question": "What was the production code for the episode directed by Michael Morris?"
    },
    {
        "answer": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms >= 15",
        "context": "CREATE TABLE station (LOCATION VARCHAR, number_of_platforms VARCHAR)",
        "question": "Show all locations which don't have a train station with at least 15 platforms."
    },
    {
        "answer": "SELECT T2.name, COUNT(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id",
        "context": "CREATE TABLE station (name VARCHAR, station_id VARCHAR); CREATE TABLE train_station (station_id VARCHAR)",
        "question": "Show the station name and number of trains in each station."
    },
    {
        "answer": "SELECT T2.name, T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id",
        "context": "CREATE TABLE station (name VARCHAR, station_id VARCHAR); CREATE TABLE train (name VARCHAR, train_id VARCHAR); CREATE TABLE train_station (station_id VARCHAR, train_id VARCHAR)",
        "question": "show the train name and station name for each train."
    },
    {
        "answer": "SELECT T3.name, T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T2.location = 'London' ORDER BY T3.time DESC",
        "context": "CREATE TABLE train_station (station_id VARCHAR, train_id VARCHAR); CREATE TABLE station (station_id VARCHAR, location VARCHAR); CREATE TABLE train (name VARCHAR, time VARCHAR, train_id VARCHAR)",
        "question": "Show all train names and times in stations in London in descending order by train time."
    },
    {
        "answer": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE station (name VARCHAR, station_id VARCHAR); CREATE TABLE train_station (station_id VARCHAR)",
        "question": "Show the station name with greatest number of trains."
    },
    {
        "answer": "SELECT rating / SUM(rating) FROM table_23793770_2 WHERE total_viewers__in_millions_ = \"11.49\"",
        "context": "CREATE TABLE table_23793770_2 (rating VARCHAR, total_viewers__in_millions_ VARCHAR)",
        "question": "What was the rating share when the total viewers was 11.49 million?"
    },
    {
        "answer": "SELECT total_viewers__in_millions_ FROM table_23799417_2 WHERE rating = \"9.1\"",
        "context": "CREATE TABLE table_23799417_2 (total_viewers__in_millions_ VARCHAR, rating VARCHAR)",
        "question": "If the rating is 9.1, what was the total viewers?"
    },
    {
        "answer": "SELECT title FROM table_23799417_2 WHERE original_airing = \"September 30, 2007\"",
        "context": "CREATE TABLE table_23799417_2 (title VARCHAR, original_airing VARCHAR)",
        "question": "what is the episode title on original air date of September 30, 2007?"
    },
    {
        "answer": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = \"Guruvayur Express\"",
        "context": "CREATE TABLE station (name VARCHAR, station_id VARCHAR); CREATE TABLE train (train_id VARCHAR, Name VARCHAR); CREATE TABLE train_station (station_id VARCHAR, train_id VARCHAR)",
        "question": "What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" trains?"
    },
    {
        "answer": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id = T2.train_id WHERE NOT T1.station_id IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id = T4.station_id WHERE t4.location = \"London\")",
        "context": "CREATE TABLE station (station_id VARCHAR); CREATE TABLE train_station (station_id VARCHAR); CREATE TABLE train_station (train_id VARCHAR, station_id VARCHAR); CREATE TABLE train (name VARCHAR, train_id VARCHAR)",
        "question": "Find the names of the trains that do not pass any station located in London."
    },
    {
        "answer": "SELECT MAX(sales), _receipts, _or_shipments__$1, 000 AS _ FROM table_23802822_1 WHERE establishments = 49319",
        "context": "CREATE TABLE table_23802822_1 (_receipts VARCHAR, _or_shipments__$1 VARCHAR, sales INTEGER, establishments VARCHAR)",
        "question": "If the establishment is 49319, what is the sales, receipts or shipments maximum amount?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_2380212_1 WHERE avg_attendance = 789",
        "context": "CREATE TABLE table_2380212_1 (year INTEGER, avg_attendance VARCHAR)",
        "question": "When was the average attendance 789?"
    },
    {
        "answer": "SELECT team_from FROM table_name_59 WHERE pick__number = 148",
        "context": "CREATE TABLE table_name_59 (team_from VARCHAR, pick__number VARCHAR)",
        "question": "Which Team has a Pick # of 148?"
    },
    {
        "answer": "SELECT team__number2 FROM table_23812628_1 WHERE team__number1 = \"River Plate\"",
        "context": "CREATE TABLE table_23812628_1 (team__number2 VARCHAR, team__number1 VARCHAR)",
        "question": "Name the team #2 for river plate"
    },
    {
        "answer": "SELECT media_type FROM table_23829490_1 WHERE genre = \"Psychedelic Trance\"",
        "context": "CREATE TABLE table_23829490_1 (media_type VARCHAR, genre VARCHAR)",
        "question": "What is every media type for the Psychedelic Trance genre?"
    },
    {
        "answer": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\"",
        "context": "CREATE TABLE Staff (staff_address_id VARCHAR, first_name VARCHAR, last_name VARCHAR); CREATE TABLE Addresses (city VARCHAR, address_id VARCHAR)",
        "question": "Which city does staff with first name as Janessa and last name as Sawayn live?"
    },
    {
        "answer": "SELECT MIN(to_par) FROM table_name_42 WHERE country = \"australia\" AND year_s__won = \"1990\"",
        "context": "CREATE TABLE table_name_42 (to_par INTEGER, country VARCHAR, year_s__won VARCHAR)",
        "question": "Which To par has a Country of australia, and a Year(s) won of 1990?"
    },
    {
        "answer": "SELECT SUM(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\"",
        "context": "CREATE TABLE Lessons (lesson_time INTEGER, customer_id VARCHAR); CREATE TABLE Customers (customer_id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "How long is the total lesson time took by customer with first name as Rylan and last name as Goodwin?"
    },
    {
        "answer": "SELECT T1.country, T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\"",
        "context": "CREATE TABLE Addresses (country VARCHAR, state_province_county VARCHAR, address_id VARCHAR); CREATE TABLE Staff (staff_address_id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "Which country and state does staff with first name as Janessa and last name as Sawayn lived?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Addresses WHERE state_province_county = \"Georgia\"",
        "context": "CREATE TABLE Addresses (state_province_county VARCHAR)",
        "question": "How many staff live in state Georgia?"
    },
    {
        "answer": "SELECT T2.first_name, T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\"",
        "context": "CREATE TABLE Staff (first_name VARCHAR, last_name VARCHAR, staff_address_id VARCHAR); CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR)",
        "question": "Find out the first name and last name of staff lived in city Damianfort."
    },
    {
        "answer": "SELECT composition_name FROM table_23829490_1 WHERE music_library = \"Heart of Asia\" AND media_type = \"Album\" AND genre = \"Trance\"",
        "context": "CREATE TABLE table_23829490_1 (composition_name VARCHAR, genre VARCHAR, music_library VARCHAR, media_type VARCHAR)",
        "question": "What is every composition name when the music library is Heart of Asia and media type is album with the Trance genre?"
    },
    {
        "answer": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING COUNT(*) BETWEEN 2 AND 4",
        "context": "CREATE TABLE Addresses (state_province_county VARCHAR, address_id VARCHAR); CREATE TABLE Staff (staff_address_id VARCHAR)",
        "question": "List the states which have between 2 to 4 staffs living there."
    },
    {
        "answer": "SELECT first_name, last_name FROM Customers",
        "context": "CREATE TABLE Customers (first_name VARCHAR, last_name VARCHAR)",
        "question": "List the first name and last name of all customers."
    },
    {
        "answer": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\"",
        "context": "CREATE TABLE Addresses (zip_postcode VARCHAR, address_id VARCHAR); CREATE TABLE Staff (staff_address_id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "What is the zip code of staff with first name as Janessa and last name as Sawayn lived?"
    },
    {
        "answer": "SELECT COUNT(last_year_in_qld_cup) FROM table_2383498_4 WHERE qld_cup_premierships = \"1996, 2001\"",
        "context": "CREATE TABLE table_2383498_4 (last_year_in_qld_cup VARCHAR, qld_cup_premierships VARCHAR)",
        "question": "How many values of last year in QLD Cup if QLD Cup Premierships is 1996, 2001?"
    },
    {
        "answer": "SELECT province FROM table_name_31 WHERE party = \"partido socialista del pueblo extreme\u00f1o\"",
        "context": "CREATE TABLE table_name_31 (province VARCHAR, party VARCHAR)",
        "question": "Which province has the partido Socialista del Pueblo Extreme\u00f1o party?"
    },
    {
        "answer": "SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'",
        "context": "CREATE TABLE Customers (date_of_birth VARCHAR, customer_status_code VARCHAR)",
        "question": "When are the birthdays of customer who are classified as 'Good Customer' status?"
    },
    {
        "answer": "SELECT undisclosed FROM table_23835213_2 WHERE \"aldershot_town\" = \"aldershot_town\" AND wycombe_wanderers = \"Oxford United\"",
        "context": "CREATE TABLE table_23835213_2 (undisclosed VARCHAR, wycombe_wanderers VARCHAR)",
        "question": "What is the undisclosed when Aldertown is Aldershot Town and Wycombe Wanderers is Oxford United?"
    },
    {
        "answer": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE Customers (customer_status_code VARCHAR)",
        "question": "Which customer status code has least number of customers?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\"",
        "context": "CREATE TABLE Lessons (customer_id VARCHAR, lesson_status_code VARCHAR); CREATE TABLE Customers (customer_id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "How many lessons taken by customer with first name as Rylan and last name as Goodwin were completed?"
    },
    {
        "answer": "SELECT T1.first_name, T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\"",
        "context": "CREATE TABLE Customers (first_name VARCHAR, last_name VARCHAR, customer_address_id VARCHAR); CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR)",
        "question": "List first name and last name of customers lived in city Lockmanfurt."
    },
    {
        "answer": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"",
        "context": "CREATE TABLE Addresses (country VARCHAR, address_id VARCHAR); CREATE TABLE Customers (customer_address_id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "Which country does customer with first name as Carole and last name as Bernhard lived in?"
    },
    {
        "answer": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"",
        "context": "CREATE TABLE Addresses (zip_postcode VARCHAR, address_id VARCHAR); CREATE TABLE Customers (customer_address_id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "What is zip code of customer with first name as Carole and last name as Bernhard?"
    },
    {
        "answer": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Customers (customer_address_id VARCHAR); CREATE TABLE Addresses (city VARCHAR, address_id VARCHAR)",
        "question": "Which city does has most number of customers?"
    },
    {
        "answer": "SELECT SUM(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\"",
        "context": "CREATE TABLE Customers (customer_id VARCHAR, first_name VARCHAR, last_name VARCHAR); CREATE TABLE Customer_Payments (amount_payment INTEGER, customer_id VARCHAR)",
        "question": "How much in total does customer with first name as Carole and last name as Bernhard paid?"
    },
    {
        "answer": "SELECT T2.first_name, T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING COUNT(*) > 2",
        "context": "CREATE TABLE Customers (first_name VARCHAR, last_name VARCHAR, customer_id VARCHAR); CREATE TABLE Customer_Payments (customer_id VARCHAR)",
        "question": "List first name and last name of customers that have more than 2 payments."
    },
    {
        "answer": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\"",
        "context": "CREATE TABLE Lessons (lesson_id VARCHAR, staff_id VARCHAR); CREATE TABLE Staff (staff_id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "List lesson id of all lessons taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'."
    },
    {
        "answer": "SELECT AVG(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\"",
        "context": "CREATE TABLE Lessons (staff_id VARCHAR); CREATE TABLE Staff (staff_id VARCHAR, first_name VARCHAR, last_name VARCHAR)",
        "question": "What is average lesson price taught by staff with first name as Janessa and last name as Sawayn?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Ray\"",
        "context": "CREATE TABLE Customers (customer_id VARCHAR, first_name VARCHAR); CREATE TABLE Lessons (customer_id VARCHAR)",
        "question": "How many lesson does customer with first name Ray took?"
    },
    {
        "answer": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
        "context": "CREATE TABLE Customers (last_name VARCHAR); CREATE TABLE Staff (last_name VARCHAR)",
        "question": "Which last names are both used by customers and by staff?"
    },
    {
        "answer": "SELECT T1.vehicle_id, T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Lessons (vehicle_id VARCHAR); CREATE TABLE Vehicles (vehicle_id VARCHAR, vehicle_details VARCHAR)",
        "question": "What is the id and detail of the vehicle used in lessons for most of the times?"
    },
    {
        "answer": "SELECT building FROM Faculty WHERE rank = \"Professor\" GROUP BY building HAVING COUNT(*) >= 10",
        "context": "CREATE TABLE Faculty (building VARCHAR, rank VARCHAR)",
        "question": "Show all the buildings that have at least 10 professors."
    },
    {
        "answer": "SELECT original_air_date FROM table_23937219_2 WHERE written_by = \"Harry Hannigan\" AND directed_by = \"Adam Weissman\"",
        "context": "CREATE TABLE table_23937219_2 (original_air_date VARCHAR, written_by VARCHAR, directed_by VARCHAR)",
        "question": "Name the original air date for harry hannigan directed by adam weissman"
    },
    {
        "answer": "SELECT COUNT(directed_by) FROM table_23937219_3 WHERE season__number = 7",
        "context": "CREATE TABLE table_23937219_3 (directed_by VARCHAR, season__number VARCHAR)",
        "question": "How many people directed episode 7 In the season?"
    },
    {
        "answer": "SELECT COUNT(season) FROM table_23927423_4 WHERE relegated_from_league = \"Barking Birmingham & Solihull Stourbridge\"",
        "context": "CREATE TABLE table_23927423_4 (season VARCHAR, relegated_from_league VARCHAR)",
        "question": "How many seasons did Barking Birmingham & Solihull Stourbridge were relegated from league?"
    },
    {
        "answer": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.rank = \"Professor\"",
        "context": "CREATE TABLE Student (StuID VARCHAR, advisor VARCHAR); CREATE TABLE Faculty (FacID VARCHAR, rank VARCHAR)",
        "question": "Show the ids of students whose advisors are professors."
    },
    {
        "answer": "SELECT T2.fname, T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.fname = \"Michael\" AND T1.lname = \"Goodrich\"",
        "context": "CREATE TABLE Faculty (FacID VARCHAR, fname VARCHAR, lname VARCHAR); CREATE TABLE Student (fname VARCHAR, lname VARCHAR, advisor VARCHAR)",
        "question": "Show first name and last name for all the students advised by Michael Goodrich."
    },
    {
        "answer": "SELECT T1.rank, COUNT(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank",
        "context": "CREATE TABLE Student (advisor VARCHAR); CREATE TABLE Faculty (rank VARCHAR, FacID VARCHAR)",
        "question": "Show all the faculty ranks and the number of students advised by each rank."
    },
    {
        "answer": "SELECT T1.fname, T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Student (advisor VARCHAR); CREATE TABLE Faculty (fname VARCHAR, lname VARCHAR, FacID VARCHAR)",
        "question": "What are the first and last name of the faculty who has the most students?"
    },
    {
        "answer": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Faculty (FacID VARCHAR); CREATE TABLE Student (advisor VARCHAR)",
        "question": "Show the ids for all the faculty members who have at least 2 students."
    },
    {
        "answer": "SELECT home_team FROM table_name_68 WHERE tie_no = \"replay\" AND date = \"4 february 1987\" AND away_team = \"luton town\"",
        "context": "CREATE TABLE table_name_68 (home_team VARCHAR, away_team VARCHAR, tie_no VARCHAR, date VARCHAR)",
        "question": "Who was the home team on 4 February 1987 when Luton Town was away team and there was no replay?"
    },
    {
        "answer": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = \"Mark\" AND T1.lname = \"Giuliano\"",
        "context": "CREATE TABLE Activity (activity_name VARCHAR, actid VARCHAR); CREATE TABLE Faculty (facID VARCHAR, fname VARCHAR, lname VARCHAR); CREATE TABLE Faculty_participates_in (facID VARCHAR, actid VARCHAR)",
        "question": "Show the names of all the activities Mark Giuliano participates in."
    },
    {
        "answer": "SELECT T1.fname, T1.lname, COUNT(*), T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID",
        "context": "CREATE TABLE Faculty_participates_in (facID VARCHAR); CREATE TABLE Faculty (fname VARCHAR, lname VARCHAR, FacID VARCHAR, facID VARCHAR)",
        "question": "Show the first and last name of all the faculty members who participated in some activity, together with the number of activities they participated in."
    },
    {
        "answer": "SELECT youth_classification FROM table_23944514_15 WHERE aggressive_rider = \"Michael Barry\"",
        "context": "CREATE TABLE table_23944514_15 (youth_classification VARCHAR, aggressive_rider VARCHAR)",
        "question": "Name the youth classification for michael barry"
    },
    {
        "answer": "SELECT mountains_classification FROM table_23944514_15 WHERE aggressive_rider = \"Bradley White\"",
        "context": "CREATE TABLE table_23944514_15 (mountains_classification VARCHAR, aggressive_rider VARCHAR)",
        "question": "Name the mountains classification for bradley white"
    },
    {
        "answer": "SELECT sprint_classification FROM table_23944514_15 WHERE aggressive_rider = \"Michael Barry\"",
        "context": "CREATE TABLE table_23944514_15 (sprint_classification VARCHAR, aggressive_rider VARCHAR)",
        "question": "Name the sprint classification for michael barry"
    },
    {
        "answer": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Faculty_participates_in (actID VARCHAR); CREATE TABLE Activity (activity_name VARCHAR, actID VARCHAR)",
        "question": "What is the name of the activity that has the most faculty members involved in?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_23938357_6 WHERE name = \"Keauna McLaughlin / Rockne Brubaker\"",
        "context": "CREATE TABLE table_23938357_6 (rank VARCHAR, name VARCHAR)",
        "question": "How many times is  keauna mclaughlin / rockne brubaker ranked?"
    },
    {
        "answer": "SELECT T1.activity_name, COUNT(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID",
        "context": "CREATE TABLE Faculty_participates_in (actID VARCHAR); CREATE TABLE Activity (activity_name VARCHAR, actID VARCHAR)",
        "question": "Show all the activity names and the number of faculty involved in each activity."
    },
    {
        "answer": "SELECT T1.fname, T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Student (fname VARCHAR, lname VARCHAR, StuID VARCHAR); CREATE TABLE Participates_in (StuID VARCHAR)",
        "question": "What is the first and last name of the student participating in the most activities?"
    },
    {
        "answer": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'",
        "context": "CREATE TABLE activity (activity_name VARCHAR); CREATE TABLE Faculty_participates_in (facID VARCHAR, actid VARCHAR); CREATE TABLE Faculty (lname VARCHAR, facID VARCHAR)",
        "question": "Find the first names of the faculty members who are playing Canoeing or Kayaking."
    },
    {
        "answer": "SELECT lname FROM faculty WHERE rank = 'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'",
        "context": "CREATE TABLE faculty (lname VARCHAR, rank VARCHAR); CREATE TABLE activity (activity_name VARCHAR); CREATE TABLE Faculty_participates_in (facID VARCHAR, actid VARCHAR); CREATE TABLE Faculty (lname VARCHAR, facID VARCHAR)",
        "question": "Find the first names of professors who are not playing Canoeing or Kayaking."
    },
    {
        "answer": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'",
        "context": "CREATE TABLE activity (activity_name VARCHAR); CREATE TABLE Faculty_participates_in (facID VARCHAR, actid VARCHAR); CREATE TABLE Faculty (lname VARCHAR, facID VARCHAR)",
        "question": "Find the first names of the faculty members who participate in Canoeing and Kayaking."
    },
    {
        "answer": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'",
        "context": "CREATE TABLE activity (actid VARCHAR, activity_name VARCHAR); CREATE TABLE participates_in (stuid VARCHAR)",
        "question": "Find the ids of the students who participate in Canoeing and Kayaking."
    },
    {
        "answer": "SELECT date FROM table_name_22 WHERE h___a = \"a\" AND league_position = \"2nd\" AND opponents = \"manchester city\"",
        "context": "CREATE TABLE table_name_22 (date VARCHAR, opponents VARCHAR, h___a VARCHAR, league_position VARCHAR)",
        "question": "What date was the game against manchester city when they had a league position of 2nd?"
    },
    {
        "answer": "SELECT COUNT(written_by) FROM table_23958944_2 WHERE no_by_series = 8",
        "context": "CREATE TABLE table_23958944_2 (written_by VARCHAR, no_by_series VARCHAR)",
        "question": "How many different writers have written the episode with series number 8?"
    },
    {
        "answer": "SELECT tie_no FROM table_name_32 WHERE date = \"18 nov 1989\" AND home_team = \"doncaster rovers\"",
        "context": "CREATE TABLE table_name_32 (tie_no VARCHAR, date VARCHAR, home_team VARCHAR)",
        "question": "What is Tie no, when Date is \"18 Nov 1989\", and when Home Team is \"Doncaster Rovers\"?"
    },
    {
        "answer": "SELECT MAX(bronze) FROM table_name_92 WHERE silver = 0 AND total < 1",
        "context": "CREATE TABLE table_name_92 (bronze INTEGER, silver VARCHAR, total VARCHAR)",
        "question": "What is the highest bronze number when silver is 0, and the total is smaller than 1?"
    },
    {
        "answer": "SELECT special FROM table_23982399_12 WHERE challenger = \"Dominique Bouchet\"",
        "context": "CREATE TABLE table_23982399_12 (special VARCHAR, challenger VARCHAR)",
        "question": "What is the special when the challenger is dominique bouchet?"
    },
    {
        "answer": "SELECT COUNT(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
        "context": "CREATE TABLE routes (alid VARCHAR); CREATE TABLE airlines (alid VARCHAR, name VARCHAR)",
        "question": "Find the number of routes operated by American Airlines."
    },
    {
        "answer": "SELECT MAX(overall_episode__number) FROM table_23982399_1 WHERE original_airdate = \"November 21, 1993\"",
        "context": "CREATE TABLE table_23982399_1 (overall_episode__number INTEGER, original_airdate VARCHAR)",
        "question": "What episode number originally aired on November 21, 1993?"
    },
    {
        "answer": "SELECT T1.name, T1.city, T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE airports (name VARCHAR, city VARCHAR, apid VARCHAR); CREATE TABLE routes (dst_apid VARCHAR)",
        "question": "Find the name and city of the airport which is the destination of the most number of routes."
    },
    {
        "answer": "SELECT T1.name, T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY COUNT(*) DESC LIMIT 10",
        "context": "CREATE TABLE airlines (name VARCHAR, alid VARCHAR); CREATE TABLE routes (alid VARCHAR)",
        "question": "Find the names of the top 10 airlines that operate the most number of routes."
    },
    {
        "answer": "SELECT T1.name, T1.city, T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE airports (name VARCHAR, city VARCHAR, apid VARCHAR); CREATE TABLE routes (src_apid VARCHAR)",
        "question": "Find the name and city of the airport which is the source for the most number of flight routes."
    },
    {
        "answer": "SELECT COUNT(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'",
        "context": "CREATE TABLE routes (alid VARCHAR); CREATE TABLE airlines (alid VARCHAR, name VARCHAR)",
        "question": "Find the number of different airports which are the destinations of the American Airlines."
    },
    {
        "answer": "SELECT directed_by FROM table_2400842_1 WHERE prod__number = 109",
        "context": "CREATE TABLE table_2400842_1 (directed_by VARCHAR, prod__number VARCHAR)",
        "question": "Who directed the epsiode with production number 109?"
    },
    {
        "answer": "SELECT T1.country, T1.name, COUNT(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.country, T1.name",
        "context": "CREATE TABLE airlines (country VARCHAR, name VARCHAR, alid VARCHAR); CREATE TABLE routes (alid VARCHAR)",
        "question": "For each country and airline name, how many routes are there?"
    },
    {
        "answer": "SELECT COUNT(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'",
        "context": "CREATE TABLE routes (dst_apid VARCHAR); CREATE TABLE airports (apid VARCHAR, country VARCHAR)",
        "question": "Find the number of routes with destination airports in Italy."
    },
    {
        "answer": "SELECT category FROM table_name_95 WHERE result = \"nominated\" AND award = \"drama desk award\" AND nominee = \"nathan lane\"",
        "context": "CREATE TABLE table_name_95 (category VARCHAR, nominee VARCHAR, result VARCHAR, award VARCHAR)",
        "question": "What is Category, when Result is \"Nominated\", when Award is \"Drama Desk Award\", and when Nominee is \"Nathan Lane\"?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_68 WHERE result = \"nominated\" AND category = \"outstanding actor in a musical\" AND award = \"drama desk award\"",
        "context": "CREATE TABLE table_name_68 (year VARCHAR, award VARCHAR, result VARCHAR, category VARCHAR)",
        "question": "What is the total number of Year, when Result is \"Nominated\", when Category is \"Outstanding Actor in a Musical\", and when Award is \"Drama Desk Award\"?"
    },
    {
        "answer": "SELECT COUNT(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'",
        "context": "CREATE TABLE airports (apid VARCHAR, name VARCHAR); CREATE TABLE routes (dst_apid VARCHAR)",
        "question": "Find the number of routes that have destination John F Kennedy International Airport."
    },
    {
        "answer": "SELECT COUNT(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'",
        "context": "CREATE TABLE routes (dst_apid VARCHAR, alid VARCHAR); CREATE TABLE airports (apid VARCHAR, country VARCHAR); CREATE TABLE airlines (alid VARCHAR, name VARCHAR)",
        "question": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'."
    },
    {
        "answer": "SELECT COUNT(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country = 'United States')",
        "context": "CREATE TABLE airports (dst_apid VARCHAR, src_apid VARCHAR, apid VARCHAR, country VARCHAR); CREATE TABLE routes (dst_apid VARCHAR, src_apid VARCHAR, apid VARCHAR, country VARCHAR)",
        "question": "Find the number of routes from the United States to Canada."
    },
    {
        "answer": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE routes (src_apid VARCHAR); CREATE TABLE airports (name VARCHAR, apid VARCHAR, country VARCHAR)",
        "question": "Find the busiest source airport that runs most number of routes in China."
    },
    {
        "answer": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE routes (dst_apid VARCHAR); CREATE TABLE airports (name VARCHAR, apid VARCHAR, country VARCHAR)",
        "question": "Find the busiest destination airport that runs most number of routes in China."
    },
    {
        "answer": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country = 'United States') AND src_apid IN (SELECT apid FROM airports WHERE country = 'United States')",
        "context": "CREATE TABLE routes (rid VARCHAR, dst_apid VARCHAR, src_apid VARCHAR, apid VARCHAR, country VARCHAR); CREATE TABLE airports (rid VARCHAR, dst_apid VARCHAR, src_apid VARCHAR, apid VARCHAR, country VARCHAR)",
        "question": "Find the id of routes whose source and destination airports are in the United States."
    },
    {
        "answer": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"",
        "context": "CREATE TABLE orders (customer_id VARCHAR, order_status VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)",
        "question": "List the name of all the distinct customers who have orders with status \"Packing\"."
    },
    {
        "answer": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"",
        "context": "CREATE TABLE orders (customer_id VARCHAR, order_status VARCHAR); CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)",
        "question": "Find the details of all the distinct customers who have orders with status \"On Road\"."
    },
    {
        "answer": "SELECT COUNT(circuit) FROM table_24037660_2 WHERE lmp_winning_team = \"#1 Patr\u00f3n Highcroft Racing\" AND gtc_winning_team = \"#81 Alex Job Racing\"",
        "context": "CREATE TABLE table_24037660_2 (circuit VARCHAR, lmp_winning_team VARCHAR, gtc_winning_team VARCHAR)",
        "question": "How many circuits had a winning team of #1 patr\u00f3n highcroft racing ang gtc winning team #81 alex job racing ?"
    },
    {
        "answer": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE orders (customer_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)",
        "question": "What is the name of the customer who has the most orders?"
    },
    {
        "answer": "SELECT date FROM table_name_48 WHERE tie_no = \"11\"",
        "context": "CREATE TABLE table_name_48 (date VARCHAR, tie_no VARCHAR)",
        "question": "What date has 11 as the tie no.?"
    },
    {
        "answer": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR, customer_name VARCHAR); CREATE TABLE orders (date_order_placed VARCHAR, customer_id VARCHAR)",
        "question": "Find the dates of orders which belong to the customer named \"Jeramie\"."
    },
    {
        "answer": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"",
        "context": "CREATE TABLE orders (customer_id VARCHAR, date_order_placed VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)",
        "question": "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01."
    },
    {
        "answer": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"",
        "context": "CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR); CREATE TABLE orders (order_id VARCHAR, date_order_placed VARCHAR)",
        "question": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?"
    },
    {
        "answer": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"",
        "context": "CREATE TABLE orders (customer_id VARCHAR, order_status VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)",
        "question": "Find the names of the customers who have order status both \"On Road\" and \"Shipped\"."
    },
    {
        "answer": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"",
        "context": "CREATE TABLE customers (customer_id VARCHAR); CREATE TABLE orders (customer_id VARCHAR, order_status VARCHAR)",
        "question": "Find the id of the customers who have order status both \"On Road\" and \"Shipped\"."
    },
    {
        "answer": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",
        "context": "CREATE TABLE orders (date_order_placed VARCHAR, order_id VARCHAR); CREATE TABLE shipments (order_id VARCHAR, invoice_number VARCHAR)",
        "question": "What is the placement date of the order whose invoice number is 10?"
    },
    {
        "answer": "SELECT COUNT(*), T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
        "context": "CREATE TABLE orders (order_id VARCHAR); CREATE TABLE order_items (order_id VARCHAR, product_id VARCHAR); CREATE TABLE products (product_id VARCHAR)",
        "question": "List the count and id of each product in all the orders."
    },
    {
        "answer": "SELECT MAX(top_10) FROM table_name_89 WHERE events < 39 AND top_5 = 1 AND cuts_made > 5",
        "context": "CREATE TABLE table_name_89 (top_10 INTEGER, cuts_made VARCHAR, events VARCHAR, top_5 VARCHAR)",
        "question": "What is the best top-10 result when events are fewer than 39, top-5 is 1 and more than 5 cuts are made?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_2402864_1 WHERE regular_season = \"3rd, Southeast\" AND league = \"USL PDL\"",
        "context": "CREATE TABLE table_2402864_1 (year INTEGER, regular_season VARCHAR, league VARCHAR)",
        "question": "What was the earliest year where USL PDL played in 3rd, Southeast season?"
    },
    {
        "answer": "SELECT T3.product_name, COUNT(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
        "context": "CREATE TABLE orders (order_id VARCHAR); CREATE TABLE products (product_name VARCHAR, product_id VARCHAR); CREATE TABLE order_items (order_id VARCHAR, product_id VARCHAR)",
        "question": "List the name and count of each product in all orders."
    },
    {
        "answer": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE orders (order_id VARCHAR); CREATE TABLE order_items (order_id VARCHAR)",
        "question": "What is the id of the order which has the most items?"
    },
    {
        "answer": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
        "context": "CREATE TABLE invoices (invoice_details VARCHAR, invoice_date VARCHAR)",
        "question": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25."
    },
    {
        "answer": "SELECT T2.customer_name, COUNT(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE orders (customer_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)",
        "question": "For each customer who has at least two orders, find the customer name and number of orders made."
    },
    {
        "answer": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING COUNT(*) >= 1",
        "context": "CREATE TABLE products (product_name VARCHAR, product_id VARCHAR); CREATE TABLE orders (customer_id VARCHAR, order_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR)",
        "question": "List the names of the customers who have once bought product \"food\"."
    },
    {
        "answer": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING COUNT(*) >= 1",
        "context": "CREATE TABLE orders (customer_id VARCHAR, order_id VARCHAR); CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR); CREATE TABLE order_items (product_id VARCHAR, order_item_status VARCHAR, order_id VARCHAR)",
        "question": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\")."
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_3 WHERE award_ceremony = \"laurence olivier award\" AND result = \"won\" AND nominee = \"imelda staunton\"",
        "context": "CREATE TABLE table_name_3 (year VARCHAR, nominee VARCHAR, award_ceremony VARCHAR, result VARCHAR)",
        "question": "How many times is the award ceremony laurence olivier award, result is won and the nominee is imelda staunton?"
    },
    {
        "answer": "SELECT hometown_school FROM table_name_79 WHERE pick > 30 AND position = \"of\" AND team = \"cleveland indians\"",
        "context": "CREATE TABLE table_name_79 (hometown_school VARCHAR, team VARCHAR, pick VARCHAR, position VARCHAR)",
        "question": "What Hometown/School had a pick above 30, position of OF and team of Cleveland Indians?"
    },
    {
        "answer": "SELECT AVG(wins) FROM table_name_51 WHERE against < 1786 AND losses < 4 AND byes < 2",
        "context": "CREATE TABLE table_name_51 (wins INTEGER, byes VARCHAR, against VARCHAR, losses VARCHAR)",
        "question": "What is the average Wins, when Against is less than 1786, when Losses is less than 4, and when Byes is less than 2?"
    },
    {
        "answer": "SELECT COUNT(production_code) FROM table_2409041_3 WHERE no_in_series = 39",
        "context": "CREATE TABLE table_2409041_3 (production_code VARCHAR, no_in_series VARCHAR)",
        "question": "How many production codes were in series 39?"
    },
    {
        "answer": "SELECT builder FROM table_name_35 WHERE country = \"united kingdom\" AND location = \"chatham, kent\"",
        "context": "CREATE TABLE table_name_35 (builder VARCHAR, country VARCHAR, location VARCHAR)",
        "question": "What is Builder, when Country is \"United Kingdom\", and when Location is \"Chatham, Kent\"?"
    },
    {
        "answer": "SELECT T1.id, T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING COUNT(*) >= 3",
        "context": "CREATE TABLE architect (id VARCHAR, name VARCHAR); CREATE TABLE bridge (architect_id VARCHAR)",
        "question": "What are the ids and names of the architects who built at least 3 bridges ?"
    },
    {
        "answer": "SELECT T1.id, T1.name, T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE architect (id VARCHAR, name VARCHAR, nationality VARCHAR); CREATE TABLE mill (architect_id VARCHAR)",
        "question": "What is the id, name and nationality of the architect who built most mills?"
    },
    {
        "answer": "SELECT T1.id, T1.name, T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING COUNT(*) = 2 UNION SELECT T1.id, T1.name, T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING COUNT(*) = 1",
        "context": "CREATE TABLE mill (architect_id VARCHAR); CREATE TABLE architect (id VARCHAR, name VARCHAR, gender VARCHAR); CREATE TABLE bridge (architect_id VARCHAR)",
        "question": "What are the ids, names and genders of the architects who built two bridges or one mill?"
    },
    {
        "answer": "SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id = T2.id JOIN bridge AS T3 ON T3.architect_id = T2.id WHERE T3.length_meters > 80",
        "context": "CREATE TABLE architect (Id VARCHAR); CREATE TABLE mill (name VARCHAR, architect_id VARCHAR); CREATE TABLE bridge (architect_id VARCHAR, length_meters INTEGER)",
        "question": "What are the distinct name of the mills built by the architects who have also built a bridge longer than 80 meters?"
    },
    {
        "answer": "SELECT written_by FROM table_2409041_2 WHERE production_code = 446004",
        "context": "CREATE TABLE table_2409041_2 (written_by VARCHAR, production_code VARCHAR)",
        "question": "When 446004 is the production code who are the writers?"
    },
    {
        "answer": "SELECT COUNT(*) FROM architect WHERE NOT id IN (SELECT architect_id FROM mill WHERE built_year < 1850)",
        "context": "CREATE TABLE mill (id VARCHAR, architect_id VARCHAR, built_year INTEGER); CREATE TABLE architect (id VARCHAR, architect_id VARCHAR, built_year INTEGER)",
        "question": "How many architects haven't built a mill before year 1850?"
    },
    {
        "answer": "SELECT YEAR, book_title, publisher FROM book_club ORDER BY YEAR DESC",
        "context": "CREATE TABLE book_club (YEAR VARCHAR, book_title VARCHAR, publisher VARCHAR)",
        "question": "Show the years, book titles, and publishers for all books, in descending order by year."
    },
    {
        "answer": "SELECT region_1__can_ FROM table_240936_2 WHERE region_2__uk_ = \"May 18, 2009\"",
        "context": "CREATE TABLE table_240936_2 (region_1__can_ VARCHAR, region_2__uk_ VARCHAR)",
        "question": "What is the region 1 (Canada) date associated with a region 2 (UK) date of May 18, 2009?"
    },
    {
        "answer": "SELECT publisher FROM book_club WHERE YEAR = 1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR = 1990",
        "context": "CREATE TABLE book_club (publisher VARCHAR, YEAR VARCHAR)",
        "question": "Show publishers with a book published in 1989 and a book in 1990."
    },
    {
        "answer": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson'",
        "context": "CREATE TABLE culture_company (company_name VARCHAR, book_club_id VARCHAR); CREATE TABLE book_club (book_club_id VARCHAR, publisher VARCHAR)",
        "question": "List all company names with a book published by Alyson."
    },
    {
        "answer": "SELECT T1.title, T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id = T2.movie_id JOIN book_club AS T3 ON T3.book_club_id = T2.book_club_id WHERE T2.incorporated_in = 'China'",
        "context": "CREATE TABLE movie (title VARCHAR, movie_id VARCHAR); CREATE TABLE culture_company (movie_id VARCHAR, book_club_id VARCHAR, incorporated_in VARCHAR); CREATE TABLE book_club (book_title VARCHAR, book_club_id VARCHAR)",
        "question": "Show the movie titles and book titles for all companies in China."
    },
    {
        "answer": "SELECT points FROM table_name_32 WHERE goals = \"79\" AND games = \"38\"",
        "context": "CREATE TABLE table_name_32 (points VARCHAR, goals VARCHAR, games VARCHAR)",
        "question": "How many points were scored by the player with 79 goals and who played 38 games?"
    },
    {
        "answer": "SELECT T2.name, T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.year >= 2014 GROUP BY T2.stadium_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE stadium (name VARCHAR, capacity VARCHAR, stadium_id VARCHAR); CREATE TABLE concert (stadium_id VARCHAR, year VARCHAR)",
        "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after."
    },
    {
        "answer": "SELECT t2.name, t2.capacity FROM concert AS t1 JOIN stadium AS t2 ON t1.stadium_id = t2.stadium_id WHERE t1.year > 2013 GROUP BY t2.stadium_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE concert (stadium_id VARCHAR, year INTEGER); CREATE TABLE stadium (name VARCHAR, capacity VARCHAR, stadium_id VARCHAR)",
        "question": "What is the name and capacity of the stadium with the most concerts after 2013 ?"
    },
    {
        "answer": "SELECT T2.concert_name, T2.theme, COUNT(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id = T2.concert_id GROUP BY T2.concert_id",
        "context": "CREATE TABLE singer_in_concert (concert_id VARCHAR); CREATE TABLE concert (concert_name VARCHAR, theme VARCHAR, concert_id VARCHAR)",
        "question": "Show the name and theme for all concerts and the number of singers in each concert."
    },
    {
        "answer": "SELECT t2.concert_name, t2.theme, COUNT(*) FROM singer_in_concert AS t1 JOIN concert AS t2 ON t1.concert_id = t2.concert_id GROUP BY t2.concert_id",
        "context": "CREATE TABLE singer_in_concert (concert_id VARCHAR); CREATE TABLE concert (concert_name VARCHAR, theme VARCHAR, concert_id VARCHAR)",
        "question": "What are the names , themes , and number of singers for every concert ?"
    },
    {
        "answer": "SELECT T2.name, COUNT(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id GROUP BY T2.singer_id",
        "context": "CREATE TABLE singer_in_concert (singer_id VARCHAR); CREATE TABLE singer (name VARCHAR, singer_id VARCHAR)",
        "question": "List singer names and number of concerts for each singer."
    },
    {
        "answer": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id = T2.singer_id JOIN concert AS T3 ON T1.concert_id = T3.concert_id WHERE T3.year = 2014",
        "context": "CREATE TABLE singer_in_concert (singer_id VARCHAR, concert_id VARCHAR); CREATE TABLE concert (concert_id VARCHAR, year VARCHAR); CREATE TABLE singer (name VARCHAR, singer_id VARCHAR)",
        "question": "List all singer names in concerts in year 2014."
    },
    {
        "answer": "SELECT T2.name, T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2014 INTERSECT SELECT T2.name, T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.stadium_id WHERE T1.Year = 2015",
        "context": "CREATE TABLE stadium (name VARCHAR, location VARCHAR, stadium_id VARCHAR); CREATE TABLE concert (stadium_id VARCHAR, Year VARCHAR)",
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015."
    },
    {
        "answer": "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
        "context": "CREATE TABLE concert (stadium_id VARCHAR, capacity VARCHAR); CREATE TABLE stadium (stadium_id VARCHAR, capacity VARCHAR)",
        "question": "Find the number of concerts happened in the stadium with the highest capacity ."
    },
    {
        "answer": "SELECT MIN(no_in_series) FROM table_24132083_1 WHERE written_by = \"Lauren Gussis\"",
        "context": "CREATE TABLE table_24132083_1 (no_in_series INTEGER, written_by VARCHAR)",
        "question": "What in the series number of the episode written by Lauren Gussis?"
    },
    {
        "answer": "SELECT COUNT(original_air_date) FROM table_24132083_1 WHERE directed_by = \"Marcos Siega\" AND written_by = \"Scott Buck\"",
        "context": "CREATE TABLE table_24132083_1 (original_air_date VARCHAR, directed_by VARCHAR, written_by VARCHAR)",
        "question": "On how many different dates did the episode directed by Marcos Siega and written by Scott Buck air for the first time?"
    },
    {
        "answer": "SELECT COUNT(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T1.sex = 'F' AND T3.pettype = 'dog'",
        "context": "CREATE TABLE has_pet (stuid VARCHAR, petid VARCHAR); CREATE TABLE pets (petid VARCHAR, pettype VARCHAR); CREATE TABLE student (stuid VARCHAR, sex VARCHAR)",
        "question": "Find the number of dog pets that are raised by female students (with sex F)."
    },
    {
        "answer": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'",
        "context": "CREATE TABLE has_pet (stuid VARCHAR, petid VARCHAR); CREATE TABLE student (Fname VARCHAR, stuid VARCHAR); CREATE TABLE pets (petid VARCHAR, pettype VARCHAR)",
        "question": "Find the first name of students who have cat or dog pet."
    },
    {
        "answer": "SELECT t1.fname FROM student AS t1 JOIN has_pet AS t2 ON t1.stuid = t2.stuid JOIN pets AS t3 ON t3.petid = t2.petid WHERE t3.pettype = 'cat' INTERSECT SELECT t1.fname FROM student AS t1 JOIN has_pet AS t2 ON t1.stuid = t2.stuid JOIN pets AS t3 ON t3.petid = t2.petid WHERE t3.pettype = 'dog'",
        "context": "CREATE TABLE student (fname VARCHAR, stuid VARCHAR); CREATE TABLE has_pet (stuid VARCHAR, petid VARCHAR); CREATE TABLE pets (petid VARCHAR, pettype VARCHAR)",
        "question": "Find the first name of students who have both cat and dog pets ."
    },
    {
        "answer": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog'",
        "context": "CREATE TABLE has_pet (stuid VARCHAR, petid VARCHAR); CREATE TABLE student (Fname VARCHAR, stuid VARCHAR); CREATE TABLE pets (petid VARCHAR, pettype VARCHAR)",
        "question": "What are the students' first names who have both cats and dogs as pets?"
    },
    {
        "answer": "SELECT major, age FROM student WHERE NOT stuid IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')",
        "context": "CREATE TABLE student (stuid VARCHAR); CREATE TABLE has_pet (stuid VARCHAR, petid VARCHAR); CREATE TABLE pets (petid VARCHAR, pettype VARCHAR); CREATE TABLE student (major VARCHAR, age VARCHAR, stuid VARCHAR)",
        "question": "Find the major and age of students who do not have a cat pet."
    },
    {
        "answer": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat'",
        "context": "CREATE TABLE has_pet (stuid VARCHAR, petid VARCHAR); CREATE TABLE pets (petid VARCHAR, pettype VARCHAR); CREATE TABLE student (stuid VARCHAR)",
        "question": "Find the id of students who do not have a cat pet."
    },
    {
        "answer": "SELECT T1.fname, T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'dog' AND NOT T1.stuid IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pettype = 'cat')",
        "context": "CREATE TABLE has_pet (stuid VARCHAR, petid VARCHAR); CREATE TABLE student (fname VARCHAR, age VARCHAR, stuid VARCHAR); CREATE TABLE pets (petid VARCHAR, pettype VARCHAR)",
        "question": "Find the first name and age of students who have a dog but do not have a cat as a pet."
    },
    {
        "answer": "SELECT AVG(weight), pettype FROM pets GROUP BY pettype",
        "context": "CREATE TABLE pets (pettype VARCHAR, weight INTEGER)",
        "question": "Find the average weight for each pet type."
    },
    {
        "answer": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid WHERE T1.Lname = 'Smith'",
        "context": "CREATE TABLE has_pet (petid VARCHAR, stuid VARCHAR); CREATE TABLE student (stuid VARCHAR, Lname VARCHAR)",
        "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019."
    },
    {
        "answer": "SELECT T1.fname, T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid GROUP BY T1.stuid HAVING COUNT(*) > 1",
        "context": "CREATE TABLE student (fname VARCHAR, sex VARCHAR, stuid VARCHAR); CREATE TABLE has_pet (stuid VARCHAR)",
        "question": "Find the first name and gender of student who have more than one pet."
    },
    {
        "answer": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T3.petid = T2.petid WHERE T3.pet_age = 3 AND T3.pettype = 'cat'",
        "context": "CREATE TABLE student (lname VARCHAR, stuid VARCHAR); CREATE TABLE has_pet (stuid VARCHAR, petid VARCHAR); CREATE TABLE pets (petid VARCHAR, pet_age VARCHAR, pettype VARCHAR)",
        "question": "Find the last name of the student who has a cat that is age 3."
    },
    {
        "answer": "SELECT T1.ContId, T1.Continent, COUNT(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.Continent GROUP BY T1.ContId",
        "context": "CREATE TABLE COUNTRIES (Continent VARCHAR); CREATE TABLE CONTINENTS (ContId VARCHAR, Continent VARCHAR)",
        "question": "How many countries does each continent have? List the continent id, continent name and the number of countries."
    },
    {
        "answer": "SELECT children_together FROM table_24143253_5 WHERE name = \"Benjamin Harrison\"",
        "context": "CREATE TABLE table_24143253_5 (children_together VARCHAR, name VARCHAR)",
        "question": "Who were the children of Benjamin Harrison?"
    },
    {
        "answer": "SELECT T1.FullName, T1.Id, COUNT(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id",
        "context": "CREATE TABLE MODEL_LIST (Maker VARCHAR); CREATE TABLE CAR_MAKERS (FullName VARCHAR, Id VARCHAR)",
        "question": "How many models does each car maker produce? List maker full name, id and the number."
    },
    {
        "answer": "SELECT lessons_taught FROM table_24172078_2 WHERE episode__number = \"2/205\"",
        "context": "CREATE TABLE table_24172078_2 (lessons_taught VARCHAR, episode__number VARCHAR)",
        "question": "Name the lessons taught for episode # 2/205"
    },
    {
        "answer": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model JOIN CARS_DATA AS T4 ON T3.MakeId = T4.id WHERE T4.year = '1970'",
        "context": "CREATE TABLE MODEL_LIST (Maker VARCHAR, model VARCHAR); CREATE TABLE CAR_MAKERS (Maker VARCHAR, Id VARCHAR); CREATE TABLE CARS_DATA (id VARCHAR, year VARCHAR); CREATE TABLE CAR_NAMES (model VARCHAR, MakeId VARCHAR)",
        "question": "Find the name of the makers that produced some cars in the year of 1970?"
    },
    {
        "answer": "SELECT T2.Make, T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Year = (SELECT MIN(YEAR) FROM CARS_DATA)",
        "context": "CREATE TABLE CARS_DATA (YEAR INTEGER); CREATE TABLE CAR_NAMES (Make VARCHAR, MakeId VARCHAR); CREATE TABLE CARS_DATA (Year VARCHAR, Id VARCHAR)",
        "question": "Find the make and production time of the cars that were produced in the earliest year?"
    },
    {
        "answer": "SELECT COUNT(pick__number) FROM table_name_61 WHERE league_from = \"ontario hockey league\" AND nationality = \"united states\" AND team_from = \"brampton battalion\"",
        "context": "CREATE TABLE table_name_61 (pick__number VARCHAR, team_from VARCHAR, league_from VARCHAR, nationality VARCHAR)",
        "question": "Which Pick # has a League from of ontario hockey league, a Nationality of united states, and a Team from of brampton battalion?"
    },
    {
        "answer": "SELECT T1.Continent, COUNT(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId = T2.continent JOIN car_makers AS T3 ON T2.CountryId = T3.Country GROUP BY T1.Continent",
        "context": "CREATE TABLE COUNTRIES (continent VARCHAR, CountryId VARCHAR); CREATE TABLE CONTINENTS (Continent VARCHAR, ContId VARCHAR); CREATE TABLE car_makers (Country VARCHAR)",
        "question": "How many car makers are there in each continents? List the continent name and the count."
    },
    {
        "answer": "SELECT successor FROM table_2417330_4 WHERE reason_for_change = \"Vacant\" AND date_successor_seated = \"December 3, 1862\"",
        "context": "CREATE TABLE table_2417330_4 (successor VARCHAR, reason_for_change VARCHAR, date_successor_seated VARCHAR)",
        "question": "Name the successor for vacant and december 3, 1862"
    },
    {
        "answer": "SELECT successor FROM table_2417340_4 WHERE vacator = \"Vacant\" AND district = \"Louisiana 5th\"",
        "context": "CREATE TABLE table_2417340_4 (successor VARCHAR, vacator VARCHAR, district VARCHAR)",
        "question": "Who was the successor for vacant louisiana 5th"
    },
    {
        "answer": "SELECT COUNT(*), T2.FullName, T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker = T2.Id GROUP BY T2.id",
        "context": "CREATE TABLE CAR_MAKERS (FullName VARCHAR, id VARCHAR, Id VARCHAR); CREATE TABLE MODEL_LIST (Maker VARCHAR)",
        "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?"
    },
    {
        "answer": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model = T2.model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.id WHERE T3.year > 1980",
        "context": "CREATE TABLE CARS_DATA (id VARCHAR, year INTEGER); CREATE TABLE MODEL_LIST (model VARCHAR); CREATE TABLE CAR_NAMES (model VARCHAR, MakeId VARCHAR)",
        "question": "Which distinct car models are the produced after 1980?"
    },
    {
        "answer": "SELECT successor FROM table_2417345_3 WHERE date_of_successors_formal_installation = \"March 30, 1870\"",
        "context": "CREATE TABLE table_2417345_3 (successor VARCHAR, date_of_successors_formal_installation VARCHAR)",
        "question": "Who was the successor that was formally installed on March 30, 1870?"
    },
    {
        "answer": "SELECT miss_universe_philippines FROM table_name_82 WHERE first_runner_up = \"danielle casta\u00f1o\" AND binibining_pilipinas_world = \"janina san miguel\"",
        "context": "CREATE TABLE table_name_82 (miss_universe_philippines VARCHAR, first_runner_up VARCHAR, binibining_pilipinas_world VARCHAR)",
        "question": "Who won Miss Universe Philippines when the first runner-up was Danielle Casta\u00f1o and Janina San Miguel won Binibining Pilipinas-World?"
    },
    {
        "answer": "SELECT T1.CountryName, T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.CountryId HAVING COUNT(*) >= 1",
        "context": "CREATE TABLE CAR_MAKERS (Country VARCHAR); CREATE TABLE COUNTRIES (CountryName VARCHAR, CountryId VARCHAR)",
        "question": "What are the countries having at least one car maker? List name and id."
    },
    {
        "answer": "SELECT reason_for_vacancy FROM table_2417445_4 WHERE vacator = \"Frederick Remann (R)\"",
        "context": "CREATE TABLE table_2417445_4 (reason_for_vacancy VARCHAR, vacator VARCHAR)",
        "question": "When frederick remann (r) is the vacator what is the reason for vacancy?"
    },
    {
        "answer": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent = T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId = T3.Country WHERE T2.Continent = 'europe' GROUP BY T1.CountryName HAVING COUNT(*) >= 3",
        "context": "CREATE TABLE COUNTRIES (CountryName VARCHAR, Continent VARCHAR, CountryId VARCHAR); CREATE TABLE CONTINENTS (ContId VARCHAR, Continent VARCHAR); CREATE TABLE CAR_MAKERS (Country VARCHAR)",
        "question": "Which countries in europe have at least 3 car manufacturers?"
    },
    {
        "answer": "SELECT reason_for_vacancy FROM table_2417445_4 WHERE district = \"Massachusetts 6th\"",
        "context": "CREATE TABLE table_2417445_4 (reason_for_vacancy VARCHAR, district VARCHAR)",
        "question": "When massachusetts 6th is the district what is the reason for vacancy?"
    },
    {
        "answer": "SELECT reason_for_change FROM table_2417395_4 WHERE date_successor_seated = \"December 13, 1880\"",
        "context": "CREATE TABLE table_2417395_4 (reason_for_change VARCHAR, date_successor_seated VARCHAR)",
        "question": "What was the reason for change to the successor that was seated on December 13, 1880?"
    },
    {
        "answer": "SELECT T2.horsepower, T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.cylinders = 3 ORDER BY T2.horsepower DESC LIMIT 1",
        "context": "CREATE TABLE CAR_NAMES (Make VARCHAR, MakeId VARCHAR); CREATE TABLE CARS_DATA (horsepower VARCHAR, Id VARCHAR, cylinders VARCHAR)",
        "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?"
    },
    {
        "answer": "SELECT division FROM table_24193494_3 WHERE powertrain__engine_transmission_ = \"Detroit Diesel Series 50EGR Allison WB-400R\"",
        "context": "CREATE TABLE table_24193494_3 (division VARCHAR, powertrain__engine_transmission_ VARCHAR)",
        "question": "Name the division for  detroit diesel series 50egr allison wb-400r"
    },
    {
        "answer": "SELECT COUNT(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker WHERE T1.FullName = 'American Motor Company'",
        "context": "CREATE TABLE CAR_MAKERS (Id VARCHAR, FullName VARCHAR); CREATE TABLE MODEL_LIST (Maker VARCHAR)",
        "question": "How many car models were produced by the maker with full name American Motor Company?"
    },
    {
        "answer": "SELECT COUNT(location) FROM table_2419754_1 WHERE nickname = \"Billikens\"",
        "context": "CREATE TABLE table_2419754_1 (location VARCHAR, nickname VARCHAR)",
        "question": "List the number of locations for the team known as the billikens."
    },
    {
        "answer": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model = T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker = T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId = T4.Id WHERE T3.FullName = 'General Motors' OR T4.weight > 3500",
        "context": "CREATE TABLE MODEL_LIST (Model VARCHAR, Maker VARCHAR); CREATE TABLE CAR_MAKERS (Id VARCHAR, FullName VARCHAR); CREATE TABLE CAR_NAMES (Model VARCHAR, MakeId VARCHAR); CREATE TABLE CARS_DATA (Id VARCHAR, weight VARCHAR)",
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?"
    },
    {
        "answer": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T2.Model = 'volvo' ORDER BY T1.accelerate LIMIT 1",
        "context": "CREATE TABLE CARS_DATA (cylinders VARCHAR, Id VARCHAR, accelerate VARCHAR); CREATE TABLE CAR_NAMES (MakeId VARCHAR, Model VARCHAR)",
        "question": "For model volvo, how many cylinders does the car with the least accelerate have?"
    },
    {
        "answer": "SELECT number_s_ FROM table_name_50 WHERE quantity = \"24\"",
        "context": "CREATE TABLE table_name_50 (number_s_ VARCHAR, quantity VARCHAR)",
        "question": "What number corresponds to the quantity of 24?"
    },
    {
        "answer": "SELECT COUNT(*) FROM countries AS t1 JOIN car_makers AS t2 ON t1.countryid = t2.country GROUP BY t1.countryid HAVING COUNT(*) > 2",
        "context": "CREATE TABLE car_makers (country VARCHAR); CREATE TABLE countries (countryid VARCHAR)",
        "question": "How many countries has more than 2 car makers ?"
    },
    {
        "answer": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate > (SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1)",
        "context": "CREATE TABLE CARS_DATA (Accelerate INTEGER, Horsepower VARCHAR)",
        "question": "How many cars have a larger accelerate than the car with the largest horsepower?"
    },
    {
        "answer": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId = T2.Id WHERE T2.Cylinders = 4 ORDER BY T2.horsepower DESC LIMIT 1",
        "context": "CREATE TABLE CAR_NAMES (Model VARCHAR, MakeId VARCHAR); CREATE TABLE CARS_DATA (Id VARCHAR, Cylinders VARCHAR, horsepower VARCHAR)",
        "question": "For the cars with 4 cylinders, which model has the largest horsepower?"
    },
    {
        "answer": "SELECT T2.MakeId, T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id = T2.MakeId WHERE T1.Horsepower > (SELECT MIN(Horsepower) FROM CARS_DATA) AND T1.Cylinders <= 3",
        "context": "CREATE TABLE CARS_DATA (Id VARCHAR, Horsepower INTEGER, Cylinders VARCHAR); CREATE TABLE CAR_NAMES (MakeId VARCHAR, Make VARCHAR); CREATE TABLE CARS_DATA (Horsepower INTEGER)",
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name."
    },
    {
        "answer": "SELECT t2.makeid, t2.make FROM cars_data AS t1 JOIN car_names AS t2 ON t1.id = t2.makeid WHERE t1.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND t1.cylinders < 4",
        "context": "CREATE TABLE cars_data (horsepower INTEGER); CREATE TABLE car_names (makeid VARCHAR, make VARCHAR); CREATE TABLE cars_data (id VARCHAR, horsepower INTEGER, cylinders VARCHAR)",
        "question": "Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?"
    },
    {
        "answer": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model = T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId = T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker = T4.Id WHERE T3.weight < 3500 AND T4.FullName <> 'Ford Motor Company'",
        "context": "CREATE TABLE CAR_MAKERS (Id VARCHAR, FullName VARCHAR); CREATE TABLE MODEL_LIST (model VARCHAR, Model VARCHAR, Maker VARCHAR); CREATE TABLE CARS_DATA (Id VARCHAR, weight VARCHAR); CREATE TABLE CAR_NAMES (Model VARCHAR, MakeId VARCHAR)",
        "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?"
    },
    {
        "answer": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId = T2.Country",
        "context": "CREATE TABLE countries (CountryName VARCHAR, countryId VARCHAR); CREATE TABLE countries (CountryName VARCHAR); CREATE TABLE CAR_MAKERS (Country VARCHAR)",
        "question": "What are the name of the countries where there is not a single car maker?"
    },
    {
        "answer": "SELECT t1.id, t1.maker FROM car_makers AS t1 JOIN model_list AS t2 ON t1.id = t2.maker GROUP BY t1.id HAVING COUNT(*) >= 2 INTERSECT SELECT t1.id, t1.maker FROM car_makers AS t1 JOIN model_list AS t2 ON t1.id = t2.maker JOIN car_names AS t3 ON t2.model = t3.model GROUP BY t1.id HAVING COUNT(*) > 3",
        "context": "CREATE TABLE car_makers (id VARCHAR, maker VARCHAR); CREATE TABLE model_list (maker VARCHAR, model VARCHAR); CREATE TABLE car_names (model VARCHAR)",
        "question": "Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker ."
    },
    {
        "answer": "SELECT T1.Id, T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.Id HAVING COUNT(*) >= 2 INTERSECT SELECT T1.Id, T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker JOIN CAR_NAMES AS T3 ON T2.model = T3.model GROUP BY T1.Id HAVING COUNT(*) > 3",
        "context": "CREATE TABLE CAR_NAMES (model VARCHAR); CREATE TABLE MODEL_LIST (Maker VARCHAR, model VARCHAR); CREATE TABLE CAR_MAKERS (Id VARCHAR, Maker VARCHAR)",
        "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?"
    },
    {
        "answer": "SELECT T1.countryId, T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country GROUP BY T1.countryId HAVING COUNT(*) > 3 UNION SELECT T1.countryId, T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId = T2.Country JOIN MODEL_LIST AS T3 ON T2.Id = T3.Maker WHERE T3.Model = 'fiat'",
        "context": "CREATE TABLE Countries (countryId VARCHAR, CountryName VARCHAR, CountryId VARCHAR); CREATE TABLE CAR_MAKERS (Country VARCHAR, Id VARCHAR); CREATE TABLE MODEL_LIST (Maker VARCHAR, Model VARCHAR)",
        "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?"
    },
    {
        "answer": "SELECT t1.countryid, t1.countryname FROM countries AS t1 JOIN car_makers AS t2 ON t1.countryid = t2.country GROUP BY t1.countryid HAVING COUNT(*) > 3 UNION SELECT t1.countryid, t1.countryname FROM countries AS t1 JOIN car_makers AS t2 ON t1.countryid = t2.country JOIN model_list AS t3 ON t2.id = t3.maker WHERE t3.model = 'fiat'",
        "context": "CREATE TABLE model_list (maker VARCHAR, model VARCHAR); CREATE TABLE countries (countryid VARCHAR, countryname VARCHAR); CREATE TABLE car_makers (country VARCHAR, id VARCHAR)",
        "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?"
    },
    {
        "answer": "SELECT original_airdate FROM table_24222929_4 WHERE episode_number_production_number = \"7 1-07\"",
        "context": "CREATE TABLE table_24222929_4 (original_airdate VARCHAR, episode_number_production_number VARCHAR)",
        "question": "Name the original air date for 7 1-07"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_65 WHERE sideline_reporters = \"sara orlesky and farhan lalji\"",
        "context": "CREATE TABLE table_name_65 (year INTEGER, sideline_reporters VARCHAR)",
        "question": "What's the average year that sara orlesky and farhan lalji are the sideline reporters?"
    },
    {
        "answer": "SELECT COUNT(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport = T3.AirportCode WHERE T2.City = \"Ashley\" AND T3.City = \"Aberdeen\"",
        "context": "CREATE TABLE FLIGHTS (DestAirport VARCHAR, SourceAirport VARCHAR); CREATE TABLE AIRPORTS (AirportCode VARCHAR, City VARCHAR)",
        "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?"
    },
    {
        "answer": "SELECT COUNT(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline = T1.uid WHERE T1.Airline = \"United Airlines\" AND T2.DestAirport = \"ASY\"",
        "context": "CREATE TABLE FLIGHTS (Airline VARCHAR, DestAirport VARCHAR); CREATE TABLE AIRLINES (uid VARCHAR, Airline VARCHAR)",
        "question": "How many 'United Airlines' flights go to Airport 'ASY'?"
    },
    {
        "answer": "SELECT SUM(gold) FROM table_name_62 WHERE rank < 3 AND silver < 1",
        "context": "CREATE TABLE table_name_62 (gold INTEGER, rank VARCHAR, silver VARCHAR)",
        "question": "What shows for gold when the rank is less than 3, and silver less than 1?"
    },
    {
        "answer": "SELECT COUNT(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport = T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid = T1.Airline WHERE T2.City = \"Aberdeen\" AND T3.Airline = \"United Airlines\"",
        "context": "CREATE TABLE AIRPORTS (AirportCode VARCHAR, City VARCHAR); CREATE TABLE AIRLINES (uid VARCHAR, Airline VARCHAR); CREATE TABLE FLIGHTS (DestAirport VARCHAR, Airline VARCHAR)",
        "question": "How many United Airlines flights go to City 'Aberdeen'?"
    },
    {
        "answer": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE FLIGHTS (DestAirport VARCHAR); CREATE TABLE AIRPORTS (City VARCHAR, AirportCode VARCHAR)",
        "question": "Which city has most number of arriving flights?"
    },
    {
        "answer": "SELECT player FROM table_name_63 WHERE country = \"france\"",
        "context": "CREATE TABLE table_name_63 (player VARCHAR, country VARCHAR)",
        "question": "What player is from France?"
    },
    {
        "answer": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE FLIGHTS (DestAirport VARCHAR, SourceAirport VARCHAR); CREATE TABLE AIRPORTS (AirportCode VARCHAR)",
        "question": "What is the code of airport that has the highest number of flights?"
    },
    {
        "answer": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport GROUP BY T1.AirportCode ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE FLIGHTS (DestAirport VARCHAR, SourceAirport VARCHAR); CREATE TABLE AIRPORTS (AirportCode VARCHAR)",
        "question": "What is the code of airport that has fewest number of flights?"
    },
    {
        "answer": "SELECT player FROM table_name_90 WHERE score = 74 - 70 = 144 AND country = \"scotland\"",
        "context": "CREATE TABLE table_name_90 (player VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "What player is from Scotland and has a score of 74-70=144?"
    },
    {
        "answer": "SELECT date_founded__founder FROM table_242785_1 WHERE notes = \"prima Italica:raised for aborted Caucasus war\"",
        "context": "CREATE TABLE table_242785_1 (date_founded__founder VARCHAR, notes VARCHAR)",
        "question": "when notes are prima italica:raised for aborted caucasus war, when was that founded?"
    },
    {
        "answer": "SELECT T1.Abbreviation, T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline GROUP BY T1.Airline ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE FLIGHTS (Airline VARCHAR); CREATE TABLE AIRLINES (Abbreviation VARCHAR, Country VARCHAR, Airline VARCHAR, uid VARCHAR)",
        "question": "Find the abbreviation and country of the airline that has fewest number of flights?"
    },
    {
        "answer": "SELECT notes FROM table_242785_1 WHERE main_legionary_base = \"Svishtov , Bulgaria\"",
        "context": "CREATE TABLE table_242785_1 (notes VARCHAR, main_legionary_base VARCHAR)",
        "question": "What are the notes for svishtov , bulgaria?"
    },
    {
        "answer": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = \"CVO\"",
        "context": "CREATE TABLE AIRLINES (Airline VARCHAR, uid VARCHAR); CREATE TABLE FLIGHTS (Airline VARCHAR, SourceAirport VARCHAR)",
        "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'."
    },
    {
        "answer": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid = T2.Airline WHERE T2.SourceAirport = \"APG\"",
        "context": "CREATE TABLE AIRLINES (Airline VARCHAR, uid VARCHAR); CREATE TABLE FLIGHTS (Airline VARCHAR, SourceAirport VARCHAR)",
        "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'."
    },
    {
        "answer": "SELECT geelong_dfl FROM table_name_87 WHERE wins > 4 AND losses = 8",
        "context": "CREATE TABLE table_name_87 (geelong_dfl VARCHAR, wins VARCHAR, losses VARCHAR)",
        "question": "Which Geelong DFL has 8 losses and more than 4 wins?"
    },
    {
        "answer": "SELECT date_disband FROM table_242785_1 WHERE main_legionary_base = \"Svishtov , Bulgaria\"",
        "context": "CREATE TABLE table_242785_1 (date_disband VARCHAR, main_legionary_base VARCHAR)",
        "question": "When did svishtov , bulgaria disband?"
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_52 WHERE country = \"united states\" AND year_s__won = \"1986\"",
        "context": "CREATE TABLE table_name_52 (total INTEGER, country VARCHAR, year_s__won VARCHAR)",
        "question": "What is the total sum of the player from the United States who won in 1986?"
    },
    {
        "answer": "SELECT club FROM table_name_43 WHERE sport = \"football\" AND venue = \"mitchel athletic field\"",
        "context": "CREATE TABLE table_name_43 (club VARCHAR, sport VARCHAR, venue VARCHAR)",
        "question": "Which club had football at Mitchel Athletic Field?"
    },
    {
        "answer": "SELECT country_or_region FROM table_24285393_1 WHERE highest_point = \"Northwestern peak of Rysy\"",
        "context": "CREATE TABLE table_24285393_1 (country_or_region VARCHAR, highest_point VARCHAR)",
        "question": "What country has the most height in the northwestern peak of rysy?"
    },
    {
        "answer": "SELECT maximum_elevation FROM table_24285393_1 WHERE country_or_region = \"Netherlands\"",
        "context": "CREATE TABLE table_24285393_1 (maximum_elevation VARCHAR, country_or_region VARCHAR)",
        "question": "What is the maximum elevation in netherlands?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport = T2.AirportCode WHERE T2.city = \"Aberdeen\" OR T2.city = \"Abilene\"",
        "context": "CREATE TABLE Airports (AirportCode VARCHAR, city VARCHAR); CREATE TABLE Flights (DestAirport VARCHAR)",
        "question": "Find the number of flights landing in the city of Aberdeen or Abilene."
    },
    {
        "answer": "SELECT AirportName FROM Airports WHERE NOT AirportCode IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)",
        "context": "CREATE TABLE Flights (AirportName VARCHAR, AirportCode VARCHAR, SourceAirport VARCHAR, DestAirport VARCHAR); CREATE TABLE Airports (AirportName VARCHAR, AirportCode VARCHAR, SourceAirport VARCHAR, DestAirport VARCHAR)",
        "question": "Find the name of airports which do not have any flight in and out."
    },
    {
        "answer": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE evaluation (Employee_ID VARCHAR); CREATE TABLE employee (name VARCHAR, Employee_ID VARCHAR)",
        "question": "find the name of employee who was awarded the most times in the evaluation."
    },
    {
        "answer": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID = t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1",
        "context": "CREATE TABLE evaluation (Employee_ID VARCHAR, bonus VARCHAR); CREATE TABLE employee (name VARCHAR, Employee_ID VARCHAR)",
        "question": "Find the name of the employee who got the highest one time bonus."
    },
    {
        "answer": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t1.shop_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE shop (name VARCHAR, shop_id VARCHAR); CREATE TABLE hiring (shop_id VARCHAR)",
        "question": "What is the name of the shop that is hiring the largest number of employees?"
    },
    {
        "answer": "SELECT COUNT(*), t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id = t2.shop_id GROUP BY t2.name",
        "context": "CREATE TABLE shop (name VARCHAR, shop_id VARCHAR); CREATE TABLE hiring (shop_id VARCHAR)",
        "question": "Find the number of employees hired in each shop; show the shop name as well."
    },
    {
        "answer": "SELECT position FROM table_24302700_6 WHERE event_6_atlas_stones = \"6 (4 in 34.49s)\"",
        "context": "CREATE TABLE table_24302700_6 (position VARCHAR, event_6_atlas_stones VARCHAR)",
        "question": "What is the position of the player who got 6 (4 in 34.49s) in the 6 atlas stones event?"
    },
    {
        "answer": "SELECT COUNT(event_6_atlas_stones) FROM table_24302700_6 WHERE event_3_dead_lift = \"2 (6 in 30.89s)\"",
        "context": "CREATE TABLE table_24302700_6 (event_6_atlas_stones VARCHAR, event_3_dead_lift VARCHAR)",
        "question": "What is the score in the 6 atlas stones event of the player who got 2 (6 in 30.89s) in the 3 dead lift event?"
    },
    {
        "answer": "SELECT district FROM shop WHERE Number_products < 3000 INTERSECT SELECT district FROM shop WHERE Number_products > 10000",
        "context": "CREATE TABLE shop (district VARCHAR, Number_products INTEGER)",
        "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID = T2.Template_ID WHERE T2.Template_Type_Code = 'PPT'",
        "context": "CREATE TABLE Templates (Template_ID VARCHAR, Template_Type_Code VARCHAR); CREATE TABLE Documents (Template_ID VARCHAR)",
        "question": "How many documents are using the template with type code 'PPT'?"
    },
    {
        "answer": "SELECT T1.template_id, T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Documents (template_id VARCHAR); CREATE TABLE Templates (Template_Type_Code VARCHAR, template_id VARCHAR)",
        "question": "What is the id and type code for the template used by the most documents?"
    },
    {
        "answer": "SELECT COUNT(Winners) AS play_off_legs_won FROM table_24334163_1 WHERE total_money_won = \"\u00a310,300\"",
        "context": "CREATE TABLE table_24334163_1 (Winners VARCHAR, total_money_won VARCHAR)",
        "question": "How many play-off legs were won when the prize money was \u00a310,300?"
    },
    {
        "answer": "SELECT no_in_season FROM table_24319661_5 WHERE production_code = \"BCW410\"",
        "context": "CREATE TABLE table_24319661_5 (no_in_season VARCHAR, production_code VARCHAR)",
        "question": "What episode number of the season had BCW410 as a production code?"
    },
    {
        "answer": "SELECT MAX(money___) AS $__ FROM table_name_37 WHERE score = 69 - 68 - 67 - 69 = 273",
        "context": "CREATE TABLE table_name_37 (money___ INTEGER, score VARCHAR)",
        "question": "What was the highest money when the score was 69-68-67-69=273?"
    },
    {
        "answer": "SELECT template_type_code, COUNT(*) FROM Templates GROUP BY template_type_code",
        "context": "CREATE TABLE Templates (template_type_code VARCHAR)",
        "question": "Show all template type codes and number of templates for each."
    },
    {
        "answer": "SELECT cargo__tonnes_ FROM table_name_90 WHERE international__non_cis_ = \"297 421\"",
        "context": "CREATE TABLE table_name_90 (cargo__tonnes_ VARCHAR, international__non_cis_ VARCHAR)",
        "question": "What are the cargo tonnes when the international (non-CIS) is 297 421?"
    },
    {
        "answer": "SELECT aircraft_landings FROM table_name_27 WHERE cargo__tonnes_ = \"18 344\"",
        "context": "CREATE TABLE table_name_27 (aircraft_landings VARCHAR, cargo__tonnes_ VARCHAR)",
        "question": "How manu aircraft landings when the cargo tonnes are 18 344?"
    },
    {
        "answer": "SELECT T1.template_type_code, COUNT(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code",
        "context": "CREATE TABLE Documents (template_id VARCHAR); CREATE TABLE Templates (template_type_code VARCHAR, template_id VARCHAR)",
        "question": "Show all template type codes and the number of documents using each type."
    },
    {
        "answer": "SELECT conference AS Tournament FROM table_24348134_3 WHERE tournament_winner = \"Kent State\"",
        "context": "CREATE TABLE table_24348134_3 (conference VARCHAR, tournament_winner VARCHAR)",
        "question": "List the tournament that kent state won?"
    },
    {
        "answer": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id GROUP BY T1.template_type_code ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Documents (template_id VARCHAR); CREATE TABLE Templates (template_type_code VARCHAR, template_id VARCHAR)",
        "question": "Which template type code is used by most number of documents?"
    },
    {
        "answer": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id WHERE T2.document_name = \"Data base\"",
        "context": "CREATE TABLE Templates (template_type_code VARCHAR, template_id VARCHAR); CREATE TABLE Documents (template_id VARCHAR, document_name VARCHAR)",
        "question": "What is the template type code of the template used by document with the name \"Data base\"?"
    },
    {
        "answer": "SELECT game_cost FROM table_243664_1 WHERE railroad = \"Chicago and North Western\"",
        "context": "CREATE TABLE table_243664_1 (game_cost VARCHAR, railroad VARCHAR)",
        "question": "Name the game coast for chicago and north western"
    },
    {
        "answer": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID = T3.template_ID",
        "context": "CREATE TABLE Templates (template_type_code VARCHAR, Template_ID VARCHAR); CREATE TABLE Documents (template_ID VARCHAR); CREATE TABLE Ref_template_types (template_type_description VARCHAR, template_type_code VARCHAR)",
        "question": "What are the distinct template type descriptions for the templates ever used by any document?"
    },
    {
        "answer": "SELECT game_cost FROM table_243664_1 WHERE real_life_eventual_outcome = \"Merged with New York Central to form Penn Central\"",
        "context": "CREATE TABLE table_243664_1 (game_cost VARCHAR, real_life_eventual_outcome VARCHAR)",
        "question": "Name the game cost for  merged with new york central to form penn central"
    },
    {
        "answer": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code = T2.template_type_code WHERE T1.template_type_description = \"Presentation\"",
        "context": "CREATE TABLE Templates (template_id VARCHAR, template_type_code VARCHAR); CREATE TABLE Ref_template_types (template_type_code VARCHAR, template_type_description VARCHAR)",
        "question": "What are the template ids with template type description \"Presentation\"."
    },
    {
        "answer": "SELECT starting_weight__kg_ FROM table_24370270_10 WHERE weight_lost__kg_ = \"54.6\"",
        "context": "CREATE TABLE table_24370270_10 (starting_weight__kg_ VARCHAR, weight_lost__kg_ VARCHAR)",
        "question": "What is the starting weight if weight lost is 54.6?"
    },
    {
        "answer": "SELECT T1.paragraph_id, T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.Document_Name = 'Welcome to NY'",
        "context": "CREATE TABLE Documents (document_id VARCHAR, Document_Name VARCHAR); CREATE TABLE Paragraphs (paragraph_id VARCHAR, paragraph_text VARCHAR, document_id VARCHAR)",
        "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'."
    },
    {
        "answer": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = \"Customer reviews\"",
        "context": "CREATE TABLE Paragraphs (paragraph_text VARCHAR, document_id VARCHAR); CREATE TABLE Documents (document_id VARCHAR, document_name VARCHAR)",
        "question": "Show all paragraph texts for the document \"Customer reviews\"."
    },
    {
        "answer": "SELECT COUNT(video_out) FROM table_24384861_1 WHERE version = \"SoundDock Portable\"",
        "context": "CREATE TABLE table_24384861_1 (video_out VARCHAR, version VARCHAR)",
        "question": "how many video out connections does the sounddock portable have?"
    },
    {
        "answer": "SELECT T1.document_id, T2.document_name, COUNT(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id",
        "context": "CREATE TABLE Documents (document_name VARCHAR, document_id VARCHAR); CREATE TABLE Paragraphs (document_id VARCHAR)",
        "question": "Show all document ids, names and the number of paragraphs in each document."
    },
    {
        "answer": "SELECT T1.document_id, T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Documents (document_name VARCHAR, document_id VARCHAR); CREATE TABLE Paragraphs (document_id VARCHAR)",
        "question": "What is the document id and name with greatest number of paragraphs?"
    },
    {
        "answer": "SELECT actor_in_original_production FROM table_name_69 WHERE gameplan = \"troy stephens\"",
        "context": "CREATE TABLE table_name_69 (actor_in_original_production VARCHAR, gameplan VARCHAR)",
        "question": "Who is the actor in the original production when Troy Stephens is the GamePlan?"
    },
    {
        "answer": "SELECT 2 AS nd_round FROM table_name_63 WHERE team_1 = \"rc strasbourg (d1)\"",
        "context": "CREATE TABLE table_name_63 (team_1 VARCHAR)",
        "question": "What shows for 2nd round when the team 1 was Rc Strasbourg (d1)?"
    },
    {
        "answer": "SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text = 'Ireland'",
        "context": "CREATE TABLE Paragraphs (document_id VARCHAR, paragraph_text VARCHAR)",
        "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'."
    },
    {
        "answer": "SELECT MIN(money___) AS $__ FROM table_name_75 WHERE place = \"t8\" AND to_par > 19",
        "context": "CREATE TABLE table_name_75 (money___ INTEGER, place VARCHAR, to_par VARCHAR)",
        "question": "What is the lowest money ($) that has t8 as the place, with a to par greater than 19?"
    },
    {
        "answer": "SELECT COUNT(episode_no) FROM table_24399615_10 WHERE bbc_three_weekly_ranking = \"N/A\" AND cable_rank = \"N/A\"",
        "context": "CREATE TABLE table_24399615_10 (episode_no VARCHAR, bbc_three_weekly_ranking VARCHAR, cable_rank VARCHAR)",
        "question": "Which episode had bbc ranking and canle ranking of n/a?"
    },
    {
        "answer": "SELECT country FROM table_name_38 WHERE to_par < 7 AND total = 148",
        "context": "CREATE TABLE table_name_38 (country VARCHAR, to_par VARCHAR, total VARCHAR)",
        "question": "Which Country has a To par smaller than 7, and a Total of 148?"
    },
    {
        "answer": "SELECT year_s__won FROM table_name_61 WHERE total > 148 AND to_par < 17 AND country = \"new zealand\"",
        "context": "CREATE TABLE table_name_61 (year_s__won VARCHAR, country VARCHAR, total VARCHAR, to_par VARCHAR)",
        "question": "Which Year(s) won has a Total larger than 148, and a To par smaller than 17, and a Country of new zealand?"
    },
    {
        "answer": "SELECT T3.Name, T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID",
        "context": "CREATE TABLE course_arrange (Course_ID VARCHAR, Teacher_ID VARCHAR); CREATE TABLE teacher (Name VARCHAR, Teacher_ID VARCHAR); CREATE TABLE course (Course VARCHAR, Course_ID VARCHAR)",
        "question": "Show names of teachers and the courses they are arranged to teach."
    },
    {
        "answer": "SELECT games FROM table_name_60 WHERE name = \"patrick etolu\"",
        "context": "CREATE TABLE table_name_60 (games VARCHAR, name VARCHAR)",
        "question": "In what Games did Patrick Etolu compete?"
    },
    {
        "answer": "SELECT medal FROM table_name_71 WHERE sport = \"boxing\" AND games = \"1970 edinburgh\" AND name = \"james odwori\"",
        "context": "CREATE TABLE table_name_71 (medal VARCHAR, name VARCHAR, sport VARCHAR, games VARCHAR)",
        "question": "What Medal did James Odwori receive for Boxing in the 1970 Edinburgh Games?"
    },
    {
        "answer": "SELECT T2.Name, COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name",
        "context": "CREATE TABLE teacher (Name VARCHAR, Teacher_ID VARCHAR); CREATE TABLE course_arrange (Teacher_ID VARCHAR)",
        "question": "Show names of teachers and the number of courses they teach."
    },
    {
        "answer": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID = T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE teacher (Name VARCHAR, Teacher_ID VARCHAR); CREATE TABLE course_arrange (Teacher_ID VARCHAR)",
        "question": "Show names of teachers that teach at least two courses."
    },
    {
        "answer": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID WHERE T2.Course = \"Math\"",
        "context": "CREATE TABLE course_arrange (Course_ID VARCHAR, Teacher_ID VARCHAR); CREATE TABLE course (Course_ID VARCHAR, Course VARCHAR); CREATE TABLE teacher (Name VARCHAR, Teacher_ID VARCHAR)",
        "question": "Show the name of the teacher for the math course."
    },
    {
        "answer": "SELECT date FROM table_name_42 WHERE home_team = \"middlesbrough\"",
        "context": "CREATE TABLE table_name_42 (date VARCHAR, home_team VARCHAR)",
        "question": "What is the Date of the Middlesbrough Home game?"
    },
    {
        "answer": "SELECT T3.Name, T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID ORDER BY T3.Name",
        "context": "CREATE TABLE course_arrange (Course_ID VARCHAR, Teacher_ID VARCHAR); CREATE TABLE teacher (Name VARCHAR, Teacher_ID VARCHAR); CREATE TABLE course (Course VARCHAR, Course_ID VARCHAR)",
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name."
    },
    {
        "answer": "SELECT result FROM table_name_23 WHERE nominee = \"declan donnellan\"",
        "context": "CREATE TABLE table_name_23 (result VARCHAR, nominee VARCHAR)",
        "question": "What was the result of Declan Donnellan's nomination?"
    },
    {
        "answer": "SELECT t2.visitor_id, t1.name, t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id GROUP BY t2.visitor_id ORDER BY SUM(t2.Total_spent) DESC LIMIT 1",
        "context": "CREATE TABLE visit (visitor_id VARCHAR, Total_spent INTEGER); CREATE TABLE visitor (name VARCHAR, Level_of_membership VARCHAR, id VARCHAR)",
        "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?"
    },
    {
        "answer": "SELECT t2.Museum_ID, t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE museum (name VARCHAR, Museum_ID VARCHAR); CREATE TABLE visit (Museum_ID VARCHAR)",
        "question": "What are the id and name of the museum visited most times?"
    },
    {
        "answer": "SELECT name FROM museum WHERE NOT Museum_ID IN (SELECT museum_id FROM visit)",
        "context": "CREATE TABLE visit (name VARCHAR, Museum_ID VARCHAR, museum_id VARCHAR); CREATE TABLE museum (name VARCHAR, Museum_ID VARCHAR, museum_id VARCHAR)",
        "question": "What is the name of the museum that had no visitor yet?"
    },
    {
        "answer": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID WHERE t3.open_year < 2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id = t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID = t2.Museum_ID WHERE t3.open_year > 2011",
        "context": "CREATE TABLE visitor (name VARCHAR, id VARCHAR); CREATE TABLE museum (Museum_ID VARCHAR, open_year INTEGER); CREATE TABLE visit (visitor_id VARCHAR, Museum_ID VARCHAR)",
        "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?"
    },
    {
        "answer": "SELECT COUNT(series) FROM table_24425976_2 WHERE production_code = \"111\"",
        "context": "CREATE TABLE table_24425976_2 (series VARCHAR, production_code VARCHAR)",
        "question": "How many episodes in the series has a production code of 111?"
    },
    {
        "answer": "SELECT COUNT(*) FROM visitor WHERE NOT id IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID = t2.Museum_ID WHERE t1.open_year > 2010)",
        "context": "CREATE TABLE museum (Museum_ID VARCHAR, open_year INTEGER); CREATE TABLE visitor (id VARCHAR); CREATE TABLE visit (visitor_id VARCHAR, Museum_ID VARCHAR)",
        "question": "Find the number of visitors who did not visit any museum opened after 2010."
    },
    {
        "answer": "SELECT network FROM table_name_83 WHERE year > 1990 AND colour_commentator_s_ = \"chris walby\"",
        "context": "CREATE TABLE table_name_83 (network VARCHAR, year VARCHAR, colour_commentator_s_ VARCHAR)",
        "question": "For which network was Chris Walby the color commentator after 1990?"
    },
    {
        "answer": "SELECT payout___us$__ FROM table_24427210_1 WHERE tv = \"ESPN\" AND bowl_game = \"Music City Bowl\"",
        "context": "CREATE TABLE table_24427210_1 (payout___us$__ VARCHAR, tv VARCHAR, bowl_game VARCHAR)",
        "question": "Name the payout for espn for music city bowl"
    },
    {
        "answer": "SELECT winner_name FROM matches WHERE YEAR = 2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR = 2016",
        "context": "CREATE TABLE matches (winner_name VARCHAR, YEAR VARCHAR)",
        "question": "List the names of all winners who played in both 2013 and 2016."
    },
    {
        "answer": "SELECT AVG(against) FROM table_name_28 WHERE status = \"five nations\" AND date = \"16/03/1996\"",
        "context": "CREATE TABLE table_name_28 (against INTEGER, status VARCHAR, date VARCHAR)",
        "question": "What is the average Against, when Status is \"Five Nations\", and when Date is \"16/03/1996\"?"
    },
    {
        "answer": "SELECT T1.country_code, T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'WTA Championships' INTERSECT SELECT T1.country_code, T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id = T2.winner_id WHERE T2.tourney_name = 'Australian Open'",
        "context": "CREATE TABLE matches (winner_id VARCHAR, tourney_name VARCHAR); CREATE TABLE players (country_code VARCHAR, first_name VARCHAR, player_id VARCHAR)",
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?"
    },
    {
        "answer": "SELECT 2 AS nd_runner_up FROM table_24430894_20 WHERE mutya_ng_pilipinas_asia_pacific = \"Rochelle Romero Ong\"",
        "context": "CREATE TABLE table_24430894_20 (mutya_ng_pilipinas_asia_pacific VARCHAR)",
        "question": "Who won 3rd place when the mutya ng pilipinas winner was  was rochelle romero ong?"
    },
    {
        "answer": "SELECT top_division_debut FROM table_name_12 WHERE tournaments < 88 AND name = \"kitazakura\"",
        "context": "CREATE TABLE table_name_12 (top_division_debut VARCHAR, tournaments VARCHAR, name VARCHAR)",
        "question": "Which Top Division debut for Kitazakura has Tournaments less than 88?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_24430894_20 WHERE mutya_ng_pilipinas_asia_pacific = \"Ritchie Ocampo\"",
        "context": "CREATE TABLE table_24430894_20 (year VARCHAR, mutya_ng_pilipinas_asia_pacific VARCHAR)",
        "question": "List the number of years where ritchie ocampo was the mutya ng pilipinas winner."
    },
    {
        "answer": "SELECT T1.country_code, T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id ORDER BY T2.tours DESC LIMIT 1",
        "context": "CREATE TABLE players (country_code VARCHAR, first_name VARCHAR, player_id VARCHAR); CREATE TABLE rankings (player_id VARCHAR, tours VARCHAR)",
        "question": "Find the first name and country code of the player who did the most number of tours."
    },
    {
        "answer": "SELECT AVG(ranking), T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",
        "context": "CREATE TABLE players (first_name VARCHAR, player_id VARCHAR); CREATE TABLE rankings (player_id VARCHAR)",
        "question": "Find the average ranking for each player and their first name."
    },
    {
        "answer": "SELECT SUM(ranking_points), T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id = T2.player_id GROUP BY T1.first_name",
        "context": "CREATE TABLE players (first_name VARCHAR, player_id VARCHAR); CREATE TABLE rankings (player_id VARCHAR)",
        "question": "Find the total ranking points for each player and their first name."
    },
    {
        "answer": "SELECT COUNT(goals_for) FROM table_name_62 WHERE draws > 7 AND wins > 8 AND losses > 5",
        "context": "CREATE TABLE table_name_62 (goals_for VARCHAR, losses VARCHAR, draws VARCHAR, wins VARCHAR)",
        "question": "What is the total number of goals for entries that have more than 7 draws, 8 wins, and more than 5 losses?"
    },
    {
        "answer": "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 50",
        "context": "CREATE TABLE players (country_code VARCHAR)",
        "question": "Find the codes of countries that have more than 50 players."
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_24481478_1 WHERE opponent = \"Raleigh-Durham Skyhawks\"",
        "context": "CREATE TABLE table_24481478_1 (attendance INTEGER, opponent VARCHAR)",
        "question": "How man fans showed up to watch the game versus the raleigh-durham skyhawks?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT winner_name) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L'",
        "context": "CREATE TABLE matches (winner_name VARCHAR, tourney_name VARCHAR, winner_hand VARCHAR)",
        "question": "How many different winners both participated in the WTA Championships and were left handed?"
    },
    {
        "answer": "SELECT lyrics FROM table_name_48 WHERE date = \"august 10, 2005\" AND catalog_number = \"tocp-66427\"",
        "context": "CREATE TABLE table_name_48 (lyrics VARCHAR, date VARCHAR, catalog_number VARCHAR)",
        "question": "In what language is the Lyrics of the release on August 10, 2005 with Catalog number of TOCP-66427?"
    },
    {
        "answer": "SELECT country FROM table_24486462_1 WHERE compulsory_deduction = \"29.3%\"",
        "context": "CREATE TABLE table_24486462_1 (country VARCHAR, compulsory_deduction VARCHAR)",
        "question": "What country has a compulsory deduction of 29.3%?"
    },
    {
        "answer": "SELECT region FROM table_name_46 WHERE label = \"emi\" AND format = \"4 x vinyl\" AND catalog_number = \"560 6111\"",
        "context": "CREATE TABLE table_name_46 (region VARCHAR, catalog_number VARCHAR, label VARCHAR, format VARCHAR)",
        "question": "What is the Region of the EMI 4 x vinyl release bearing Catalog number 560 6111?"
    },
    {
        "answer": "SELECT T1.killed, T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id WHERE T2.tonnage = 't'",
        "context": "CREATE TABLE ship (Id VARCHAR); CREATE TABLE death (killed VARCHAR, injured VARCHAR, caused_by_ship_id VARCHAR)",
        "question": "What are the death and injury situations caused by the ship with tonnage 't'?"
    },
    {
        "answer": "SELECT T1.id, T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle JOIN death AS T3 ON T2.id = T3.caused_by_ship_id GROUP BY T1.id HAVING SUM(T3.killed) > 10",
        "context": "CREATE TABLE death (caused_by_ship_id VARCHAR, killed INTEGER); CREATE TABLE battle (id VARCHAR, name VARCHAR); CREATE TABLE ship (lost_in_battle VARCHAR, id VARCHAR)",
        "question": "What are the ids and names of the battles that led to more than 10 people killed in total."
    },
    {
        "answer": "SELECT T2.id, T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id = T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE death (caused_by_ship_id VARCHAR); CREATE TABLE ship (Id VARCHAR)",
        "question": "What is the ship id and name that caused most total injuries?"
    },
    {
        "answer": "SELECT launched FROM table_24496403_1 WHERE disposition = \"Stokers' training ship\"",
        "context": "CREATE TABLE table_24496403_1 (launched VARCHAR, disposition VARCHAR)",
        "question": "When was the stokers' training ship launched?"
    },
    {
        "answer": "SELECT money___$__ FROM table_name_87 WHERE place = \"t3\" AND score = 74 - 74 - 71 - 69 = 288",
        "context": "CREATE TABLE table_name_87 (money___$__ VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "What's the money ($) for the t3 place and the score of 74-74-71-69=288?"
    },
    {
        "answer": "SELECT T1.name, T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'Lettice' INTERSECT SELECT T1.name, T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.name = 'HMS Atalanta'",
        "context": "CREATE TABLE ship (lost_in_battle VARCHAR, name VARCHAR); CREATE TABLE battle (name VARCHAR, date VARCHAR, id VARCHAR)",
        "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'"
    },
    {
        "answer": "SELECT name, RESULT, bulgarian_commander FROM battle EXCEPT SELECT T1.name, T1.result, T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id = T2.lost_in_battle WHERE T2.location = 'English Channel'",
        "context": "CREATE TABLE ship (lost_in_battle VARCHAR, location VARCHAR); CREATE TABLE battle (name VARCHAR, RESULT VARCHAR, bulgarian_commander VARCHAR); CREATE TABLE battle (name VARCHAR, result VARCHAR, bulgarian_commander VARCHAR, id VARCHAR)",
        "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'."
    },
    {
        "answer": "SELECT AVG(annual_interchanges__millions__2011_12) FROM table_name_28 WHERE rank > 26 AND location = \"liverpool\" AND annual_entry_exit__millions__2011_12 < 14.209 AND number_of_platforms > 10",
        "context": "CREATE TABLE table_name_28 (annual_interchanges__millions__2011_12 INTEGER, number_of_platforms VARCHAR, annual_entry_exit__millions__2011_12 VARCHAR, rank VARCHAR, location VARCHAR)",
        "question": "What's the average annual interchange for a rank over 26 in liverpool with an annual entry/exit less than 14.209 and more than 10 platforms?"
    },
    {
        "answer": "SELECT MAX(annual_interchanges__millions__2011_12) FROM table_name_82 WHERE railway_station = \"wimbledon\"",
        "context": "CREATE TABLE table_name_82 (annual_interchanges__millions__2011_12 INTEGER, railway_station VARCHAR)",
        "question": "What's the highest annual interchange for wimbledon railway station?"
    },
    {
        "answer": "SELECT rank FROM table_name_83 WHERE annual_interchanges__millions__2011_12 < 1.99 AND annual_entry_exit__millions__2011_12 < 13.835 AND total_passengers__millions__2011_12 > 13.772",
        "context": "CREATE TABLE table_name_83 (rank VARCHAR, total_passengers__millions__2011_12 VARCHAR, annual_interchanges__millions__2011_12 VARCHAR, annual_entry_exit__millions__2011_12 VARCHAR)",
        "question": "What rank has an annual interchange less than 1.99 million, an annual entry/exit less than 13.835 million, and more than 13.772 million total passengers?"
    },
    {
        "answer": "SELECT COUNT(age) FROM table_24501530_1 WHERE result = \"Fired in week 6\"",
        "context": "CREATE TABLE table_24501530_1 (age VARCHAR, result VARCHAR)",
        "question": "How many age figures for the player fired in week 6?"
    },
    {
        "answer": "SELECT AVG(number_of_households) FROM table_name_61 WHERE per_capita_income = \"$21,571\" AND population < 9 OFFSET 783",
        "context": "CREATE TABLE table_name_61 (number_of_households INTEGER, per_capita_income VARCHAR, population VARCHAR)",
        "question": "Which Number of households has Per capita income of $21,571, and a Population smaller than 9,783?"
    },
    {
        "answer": "SELECT T2.department_name, T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Degree_Programs (department_id VARCHAR); CREATE TABLE Departments (department_name VARCHAR, department_id VARCHAR)",
        "question": "Which department offers the most number of degrees? List department name and id."
    },
    {
        "answer": "SELECT t2.department_name, t1.department_id FROM degree_programs AS t1 JOIN departments AS t2 ON t1.department_id = t2.department_id GROUP BY t1.department_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE degree_programs (department_id VARCHAR); CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR)",
        "question": "What is the name and id of the department with the most number of degrees ?"
    },
    {
        "answer": "SELECT AVG(number_of_households) FROM table_name_98 WHERE county = \"cook\" AND population < 5 OFFSET 176",
        "context": "CREATE TABLE table_name_98 (number_of_households INTEGER, county VARCHAR, population VARCHAR)",
        "question": "Which Number of households has a County of cook, and Population smaller than 5,176?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_91 WHERE location = \"liverpool\" AND number_of_platforms > 3 AND annual_interchanges__millions__2011_12 < 0.778",
        "context": "CREATE TABLE table_name_91 (rank VARCHAR, annual_interchanges__millions__2011_12 VARCHAR, location VARCHAR, number_of_platforms VARCHAR)",
        "question": "How many ranks are in liverpool with more than 3 platforms and an annual interchange less than 0.778 million?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id WHERE T1.department_name = 'engineer'",
        "context": "CREATE TABLE Degree_Programs (department_id VARCHAR); CREATE TABLE Departments (department_id VARCHAR, department_name VARCHAR)",
        "question": "How many degrees does the engineering department offer?"
    },
    {
        "answer": "SELECT country FROM table_name_62 WHERE player = \"jodie mudd\"",
        "context": "CREATE TABLE table_name_62 (country VARCHAR, player VARCHAR)",
        "question": "Which Country has a Player of jodie mudd?"
    },
    {
        "answer": "SELECT T1.course_name, T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_id HAVING COUNT(*) <= 2",
        "context": "CREATE TABLE Courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE Sections (course_id VARCHAR)",
        "question": "What are the names and id of courses having at most 2 sections?"
    },
    {
        "answer": "SELECT T1.semester_name, T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id = T2.semester_id GROUP BY T1.semester_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Student_Enrolment (semester_id VARCHAR); CREATE TABLE Semesters (semester_name VARCHAR, semester_id VARCHAR)",
        "question": "What is the semester which most student registered in? Show both the name and the id."
    },
    {
        "answer": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'",
        "context": "CREATE TABLE Departments (department_description VARCHAR, department_name VARCHAR)",
        "question": "What is the description of the department whose name has the substring the computer?"
    },
    {
        "answer": "SELECT T1.first_name, T1.middle_name, T1.last_name, T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT(*) = 2",
        "context": "CREATE TABLE Students (first_name VARCHAR, middle_name VARCHAR, last_name VARCHAR, student_id VARCHAR); CREATE TABLE Student_Enrolment (student_id VARCHAR)",
        "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id."
    },
    {
        "answer": "SELECT DISTINCT T1.first_name, T1.middle_name, T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id = T3.degree_program_id WHERE T3.degree_summary_name = 'Bachelor'",
        "context": "CREATE TABLE Degree_Programs (degree_program_id VARCHAR, degree_summary_name VARCHAR); CREATE TABLE Students (first_name VARCHAR, middle_name VARCHAR, last_name VARCHAR, student_id VARCHAR); CREATE TABLE Student_Enrolment (student_id VARCHAR, degree_program_id VARCHAR)",
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name."
    },
    {
        "answer": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Student_Enrolment (degree_program_id VARCHAR); CREATE TABLE Degree_Programs (degree_summary_name VARCHAR, degree_program_id VARCHAR)",
        "question": "Find the kind of program which most number of students are enrolled in?"
    },
    {
        "answer": "SELECT T1.degree_program_id, T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Degree_Programs (degree_program_id VARCHAR, degree_summary_name VARCHAR); CREATE TABLE Student_Enrolment (degree_program_id VARCHAR)",
        "question": "Find the program which most number of students are enrolled in. List both the id and the summary."
    },
    {
        "answer": "SELECT T1.student_id, T1.first_name, T1.middle_name, T1.last_name, COUNT(*), T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Students (student_id VARCHAR, first_name VARCHAR, middle_name VARCHAR, last_name VARCHAR); CREATE TABLE Student_Enrolment (student_id VARCHAR)",
        "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id."
    },
    {
        "answer": "SELECT i_o_bus FROM table_24538587_11 WHERE socket = \"LGA 1155\" AND codename__main_article_ = \"Sandy Bridge (Desktop)\" AND brand_name__list_ = \"Core i3-21xx\"",
        "context": "CREATE TABLE table_24538587_11 (i_o_bus VARCHAR, brand_name__list_ VARCHAR, socket VARCHAR, codename__main_article_ VARCHAR)",
        "question": "What i/o buses are associated with the LGA 1155 socket, a code name of Sandy Bridge (desktop) and a brand name of Core i3-21xx?"
    },
    {
        "answer": "SELECT COUNT(socket) FROM table_24538587_11 WHERE brand_name__list_ = \"Core i3-2xx7M\"",
        "context": "CREATE TABLE table_24538587_11 (socket VARCHAR, brand_name__list_ VARCHAR)",
        "question": "How many sockets are listed that have a brand name of \"Core i3-2xx7m\"?"
    },
    {
        "answer": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE Student_Enrolment_Courses (course_id VARCHAR)",
        "question": "What's the name of the course with most number of enrollments?"
    },
    {
        "answer": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id = T2.address_id WHERE T2.state_province_county = 'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id",
        "context": "CREATE TABLE Addresses (address_id VARCHAR, state_province_county VARCHAR); CREATE TABLE Students (last_name VARCHAR, current_address_id VARCHAR); CREATE TABLE Students (last_name VARCHAR, student_id VARCHAR); CREATE TABLE Student_Enrolment (student_id VARCHAR)",
        "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program."
    },
    {
        "answer": "SELECT T2.transcript_date, T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Transcript_Contents (transcript_id VARCHAR); CREATE TABLE Transcripts (transcript_date VARCHAR, transcript_id VARCHAR)",
        "question": "Show the date and id of the transcript with at least 2 course results."
    },
    {
        "answer": "SELECT scores_by_each_individual_judge FROM table_name_10 WHERE total_score_week = \"41/60\" AND co_contestant__yaar_vs_pyaar_ = \"shalini chandran\"",
        "context": "CREATE TABLE table_name_10 (scores_by_each_individual_judge VARCHAR, total_score_week VARCHAR, co_contestant__yaar_vs_pyaar_ VARCHAR)",
        "question": "What are the scores when total score/week is 41/60 and co-contestant is Shalini Chandran?"
    },
    {
        "answer": "SELECT main_contestant FROM table_name_11 WHERE status = \"eliminated\" AND scores_by_each_individual_judge = 1 + 7 + 5 = 13",
        "context": "CREATE TABLE table_name_11 (main_contestant VARCHAR, status VARCHAR, scores_by_each_individual_judge VARCHAR)",
        "question": "Who is the main contestant eliminated with a score of 1 + 7 + 5 = 13?"
    },
    {
        "answer": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id = T2.course_id",
        "context": "CREATE TABLE Courses (course_name VARCHAR, course_id VARCHAR); CREATE TABLE Student_Enrolment_Courses (course_id VARCHAR)",
        "question": "What are all the course names of the courses which ever have students enrolled in?"
    },
    {
        "answer": "SELECT MIN(loses) FROM table_name_83 WHERE position < 8 AND games_played < 30",
        "context": "CREATE TABLE table_name_83 (loses INTEGER, position VARCHAR, games_played VARCHAR)",
        "question": "What is the fewest loses for the club that is below 8 in position, and had played less than 30 games?"
    },
    {
        "answer": "SELECT SUM(loses) FROM table_name_54 WHERE draws < 4 AND goals_conceded < 105 AND position > 2 AND goals_scored < 38",
        "context": "CREATE TABLE table_name_54 (loses INTEGER, goals_scored VARCHAR, position VARCHAR, draws VARCHAR, goals_conceded VARCHAR)",
        "question": "What is the loses total when there is less than 4 draws, less than 105 conceded goals, less than 38 goals scored, and the club is positioned greater than 2?"
    },
    {
        "answer": "SELECT T2.transcript_date, T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id = T2.transcript_id GROUP BY T1.transcript_id ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE Transcript_Contents (transcript_id VARCHAR); CREATE TABLE Transcripts (transcript_date VARCHAR, transcript_id VARCHAR)",
        "question": "Show the date of the transcript which shows the least number of results, also list the id."
    },
    {
        "answer": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id = T2.degree_program_id WHERE degree_summary_name = 'Bachelor'",
        "context": "CREATE TABLE Degree_Programs (degree_program_id VARCHAR); CREATE TABLE Student_Enrolment (semester_id VARCHAR, degree_program_id VARCHAR)",
        "question": "Find the semester when both Master students and Bachelor students got enrolled in."
    },
    {
        "answer": "SELECT t1.first_name FROM students AS t1 JOIN addresses AS t2 ON t1.permanent_address_id = t2.address_id WHERE t2.country = 'haiti' OR t1.cell_mobile_number = '09700166582'",
        "context": "CREATE TABLE students (first_name VARCHAR, permanent_address_id VARCHAR, cell_mobile_number VARCHAR); CREATE TABLE addresses (address_id VARCHAR, country VARCHAR)",
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 ."
    },
    {
        "answer": "SELECT third_place FROM table_name_48 WHERE number_of_clubs = 14 AND winners = \"dalian shide\" AND fourth_placed = \"chongqing longxin\"",
        "context": "CREATE TABLE table_name_48 (third_place VARCHAR, fourth_placed VARCHAR, number_of_clubs VARCHAR, winners VARCHAR)",
        "question": "Who was in third place when the Winner was Dalian Shide, Chongqing Longxin was 4th and 14 clubs?"
    },
    {
        "answer": "SELECT AVG(number_of_clubs) FROM table_name_35 WHERE winners = \"dalian shide\" AND fourth_placed = \"sichuan quanxing\"",
        "context": "CREATE TABLE table_name_35 (number_of_clubs INTEGER, winners VARCHAR, fourth_placed VARCHAR)",
        "question": "What is the number of clubs when Dalian Shide won and Sichuan Quanxing won 4th?"
    },
    {
        "answer": "SELECT COUNT(position) FROM table_24565004_13 WHERE nationality\u00b2 = \"Democratic Republic of the Congo\"",
        "context": "CREATE TABLE table_24565004_13 (position VARCHAR, nationality\u00b2 VARCHAR)",
        "question": "Name the number of position for democratic republic of the congo"
    },
    {
        "answer": "SELECT MAX(byes) FROM table_name_87 WHERE lexton_plains = \"skipton\"",
        "context": "CREATE TABLE table_name_87 (byes INTEGER, lexton_plains VARCHAR)",
        "question": "Which Byes have a Lexton Plains of skipton?"
    },
    {
        "answer": "SELECT SUM(byes) FROM table_name_39 WHERE against = 972 AND wins > 11",
        "context": "CREATE TABLE table_name_39 (byes INTEGER, against VARCHAR, wins VARCHAR)",
        "question": "How many Byes have an Against of 972, and more than 11 wins?"
    },
    {
        "answer": "SELECT tries_against FROM table_name_87 WHERE club = \"burry port rfc\"",
        "context": "CREATE TABLE table_name_87 (tries_against VARCHAR, club VARCHAR)",
        "question": "What tries against value does burry port rfc have?"
    },
    {
        "answer": "SELECT COUNT(*) FROM TV_Channel WHERE LANGUAGE = \"English\"",
        "context": "CREATE TABLE TV_Channel (LANGUAGE VARCHAR)",
        "question": "How many TV Channel using language English?"
    },
    {
        "answer": "SELECT LANGUAGE, COUNT(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE TV_Channel (LANGUAGE VARCHAR)",
        "question": "List the language used least number of TV Channel. List language and number of TV Channel."
    },
    {
        "answer": "SELECT LANGUAGE, COUNT(*) FROM TV_Channel GROUP BY LANGUAGE",
        "context": "CREATE TABLE TV_Channel (LANGUAGE VARCHAR)",
        "question": "List each language and the number of TV Channels using it."
    },
    {
        "answer": "SELECT COUNT(appearances\u00b9) FROM table_24565004_20 WHERE nationality\u00b2 = \"Yugoslavia\"",
        "context": "CREATE TABLE table_24565004_20 (appearances\u00b9 VARCHAR, nationality\u00b2 VARCHAR)",
        "question": "Name the number of appearances for yugoslavia"
    },
    {
        "answer": "SELECT MIN(staterooms) FROM table_name_44 WHERE comments = \"diesel-electric hybrid engines\" AND length = \"443 feet\" AND guests > 190",
        "context": "CREATE TABLE table_name_44 (staterooms INTEGER, guests VARCHAR, comments VARCHAR, length VARCHAR)",
        "question": "Of the ships with diesel-electric hybrid engines, length of 443 feet, and over 190 guests, what is the lowest number of staterooms?"
    },
    {
        "answer": "SELECT nationality\u00b2 FROM table_24565004_20 WHERE position = \"Defender\" AND appearances\u00b9 = 201",
        "context": "CREATE TABLE table_24565004_20 (nationality\u00b2 VARCHAR, position VARCHAR, appearances\u00b9 VARCHAR)",
        "question": "Name the nationality for defender 201"
    },
    {
        "answer": "SELECT place_of_birth FROM table_name_65 WHERE elevator = \"lucius iii\" AND cardinalatial_title = \"deacon of s. giorgio in velabro\"",
        "context": "CREATE TABLE table_name_65 (place_of_birth VARCHAR, elevator VARCHAR, cardinalatial_title VARCHAR)",
        "question": "What is the birth place for someone elevated by Lucius III, and has the Cardinalatial title of Deacon of S. Giorgio in Velabro?"
    },
    {
        "answer": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\"",
        "context": "CREATE TABLE TV_Channel (id VARCHAR, series_name VARCHAR); CREATE TABLE TV_series (Episode VARCHAR, Channel VARCHAR)",
        "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\"."
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_9 WHERE premier_league < 6 AND league_cup > 0",
        "context": "CREATE TABLE table_name_9 (total INTEGER, premier_league VARCHAR, league_cup VARCHAR)",
        "question": "How many totals have a Premier League smaller than 6, and a League Cup larger than 0?"
    },
    {
        "answer": "SELECT production_code, channel FROM cartoon ORDER BY original_air_date DESC LIMIT 1",
        "context": "CREATE TABLE cartoon (production_code VARCHAR, channel VARCHAR, original_air_date VARCHAR)",
        "question": "Find the production code and channel of the most recently aired cartoon ."
    },
    {
        "answer": "SELECT T1.series_name, T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Michael Chang' INTERSECT SELECT T1.series_name, T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by = 'Ben Jones'",
        "context": "CREATE TABLE TV_Channel (series_name VARCHAR, country VARCHAR, id VARCHAR); CREATE TABLE cartoon (Channel VARCHAR, directed_by VARCHAR)",
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?"
    },
    {
        "answer": "SELECT name FROM table_24565004_7 WHERE appearances\u00b9 = 252",
        "context": "CREATE TABLE table_24565004_7 (name VARCHAR, appearances\u00b9 VARCHAR)",
        "question": "Which player had 252 appearances"
    },
    {
        "answer": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by = 'Ben Jones'",
        "context": "CREATE TABLE TV_Channel (id VARCHAR, channel VARCHAR, directed_by VARCHAR); CREATE TABLE cartoon (id VARCHAR, channel VARCHAR, directed_by VARCHAR)",
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones."
    },
    {
        "answer": "SELECT COUNT(season) FROM table_245711_2 WHERE final_record = \"9\u201316\u20135\"",
        "context": "CREATE TABLE table_245711_2 (season VARCHAR, final_record VARCHAR)",
        "question": "how many time is the final record is 9\u201316\u20135?"
    },
    {
        "answer": "SELECT MIN(indian_tamil) FROM table_24574438_1 WHERE population_density___km_2__ = 240",
        "context": "CREATE TABLE table_24574438_1 (indian_tamil INTEGER, population_density___km_2__ VARCHAR)",
        "question": "Name the least indian tamil for population density being 240"
    },
    {
        "answer": "SELECT COUNT(division_five) FROM table_24575253_4 WHERE division_one = \"Westcott\"",
        "context": "CREATE TABLE table_24575253_4 (division_five VARCHAR, division_one VARCHAR)",
        "question": "When westcott is in division one how many leagues are in division 5?"
    },
    {
        "answer": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Earnings DESC",
        "context": "CREATE TABLE poker_player (People_ID VARCHAR, Earnings VARCHAR); CREATE TABLE people (Name VARCHAR, People_ID VARCHAR)",
        "question": "What are the names of poker players in descending order of earnings?"
    },
    {
        "answer": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE people (Nationality VARCHAR)",
        "question": "What is the most common nationality of people?"
    },
    {
        "answer": "SELECT duration FROM table_245801_2 WHERE spacecraft = \"Salyut 7 \u2013 VE-4 \u2013 EVA 1\"",
        "context": "CREATE TABLE table_245801_2 (duration VARCHAR, spacecraft VARCHAR)",
        "question": "When salyut 7 \u2013 ve-4 \u2013 eva 1 is the spacecraft, what is the duration?"
    },
    {
        "answer": "SELECT end___utc FROM table_245801_2 WHERE comments = \"First woman EVA\"",
        "context": "CREATE TABLE table_245801_2 (end___utc VARCHAR, comments VARCHAR)",
        "question": "When first woman eva is the comment what is the end -utc?"
    },
    {
        "answer": "SELECT COUNT(duration__days_) FROM table_245801_1 WHERE crew = \"Vladimir Vasyutin , Alexander Volkov\"",
        "context": "CREATE TABLE table_245801_1 (duration__days_ VARCHAR, crew VARCHAR)",
        "question": "Name the duration for  vladimir vasyutin , alexander volkov"
    },
    {
        "answer": "SELECT T1.contestant_number, T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE votes (contestant_number VARCHAR); CREATE TABLE contestants (contestant_number VARCHAR, contestant_name VARCHAR)",
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?"
    },
    {
        "answer": "SELECT T1.contestant_number, T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number GROUP BY T1.contestant_number ORDER BY COUNT(*) LIMIT 1",
        "context": "CREATE TABLE votes (contestant_number VARCHAR); CREATE TABLE contestants (contestant_number VARCHAR, contestant_name VARCHAR)",
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?"
    },
    {
        "answer": "SELECT COUNT(*) FROM votes WHERE state = 'NY' OR state = 'CA'",
        "context": "CREATE TABLE votes (state VARCHAR)",
        "question": "What are the number of votes from state 'NY' or 'CA'?"
    },
    {
        "answer": "SELECT T2.created, T2.state, T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number WHERE T1.contestant_name = 'Tabatha Gehling'",
        "context": "CREATE TABLE contestants (contestant_number VARCHAR, contestant_name VARCHAR); CREATE TABLE votes (created VARCHAR, state VARCHAR, phone_number VARCHAR, contestant_number VARCHAR)",
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?"
    },
    {
        "answer": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number = T2.contestant_number JOIN area_code_state AS T3 ON T2.state = T3.state WHERE T1.contestant_name = 'Kelly Clauss'",
        "context": "CREATE TABLE votes (contestant_number VARCHAR, state VARCHAR); CREATE TABLE contestants (contestant_number VARCHAR, contestant_name VARCHAR); CREATE TABLE area_code_state (area_code VARCHAR, state VARCHAR)",
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'."
    },
    {
        "answer": "SELECT district FROM table_name_2 WHERE reserved_for___sc___st__none_ = \"sc\" AND constituency_number = \"169\"",
        "context": "CREATE TABLE table_name_2 (district VARCHAR, reserved_for___sc___st__none_ VARCHAR, constituency_number VARCHAR)",
        "question": "Which district had SC reserved and 169 Constituents?"
    },
    {
        "answer": "SELECT MAX(number_of_believers) FROM table_24613895_1 WHERE name_in_syriac = \"\u0713\u0718\u071d\u0720\u0722\"",
        "context": "CREATE TABLE table_24613895_1 (number_of_believers INTEGER, name_in_syriac VARCHAR)",
        "question": "Name the most number of believers for \u0713\u0718\u071d\u0720\u0722"
    },
    {
        "answer": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = \"Aruba\" ORDER BY Percentage DESC LIMIT 1",
        "context": "CREATE TABLE country (Code VARCHAR, Name VARCHAR); CREATE TABLE countrylanguage (Language VARCHAR, CountryCode VARCHAR)",
        "question": "Which language is the most popular in Aruba?"
    },
    {
        "answer": "SELECT COUNT(clean_electric_grid_california__san_francisco_) FROM table_24620684_2 WHERE vehicle = \"BMW ActiveE\"",
        "context": "CREATE TABLE table_24620684_2 (clean_electric_grid_california__san_francisco_ VARCHAR, vehicle VARCHAR)",
        "question": "When bmw activee is the vehicle type how many clean electric grid california (san francisco) measurements are there?"
    },
    {
        "answer": "SELECT Population, LifeExpectancy FROM country WHERE Name = \"Brazil\"",
        "context": "CREATE TABLE country (Population VARCHAR, LifeExpectancy VARCHAR, Name VARCHAR)",
        "question": "What are the population and life expectancies in Brazil?"
    },
    {
        "answer": "SELECT us_national_average_electric_mix FROM table_24620684_2 WHERE dirty_electric_grid_rocky_mountains__denver_ = \"380 g/mi (236 g/km)\"",
        "context": "CREATE TABLE table_24620684_2 (us_national_average_electric_mix VARCHAR, dirty_electric_grid_rocky_mountains__denver_ VARCHAR)",
        "question": "When 380 g/mi (236 g/km) is the dirty electric grid rocky mountains (denver) what is the u.s national average electric mix?"
    },
    {
        "answer": "SELECT release_date FROM table_name_40 WHERE series = \"mm\" AND title = \"tom thumb in trouble\"",
        "context": "CREATE TABLE table_name_40 (release_date VARCHAR, series VARCHAR, title VARCHAR)",
        "question": "What is the release date of the mm series, which has the title tom thumb in trouble?"
    },
    {
        "answer": "SELECT AVG(start) FROM table_name_33 WHERE team = \"andretti green racing\" AND finish > 3 AND year < 2007",
        "context": "CREATE TABLE table_name_33 (start INTEGER, year VARCHAR, team VARCHAR, finish VARCHAR)",
        "question": "What is the start of the Team of Andretti Green Racing with a finish higher than 3 in a year before 2007?"
    },
    {
        "answer": "SELECT SUM(SurfaceArea) FROM country WHERE Continent = \"Asia\" OR Continent = \"Europe\"",
        "context": "CREATE TABLE country (SurfaceArea INTEGER, Continent VARCHAR)",
        "question": "What is the total surface area of the continents Asia and Europe?"
    },
    {
        "answer": "SELECT AVG(GNP), SUM(population) FROM country WHERE GovernmentForm = \"US Territory\"",
        "context": "CREATE TABLE country (GNP INTEGER, population INTEGER, GovernmentForm VARCHAR)",
        "question": "What is the average GNP and total population in all nations whose government is US territory?"
    },
    {
        "answer": "SELECT year FROM table_name_51 WHERE chassis = \"dallara\" AND team = \"andretti green racing\" AND finish < 8",
        "context": "CREATE TABLE table_name_51 (year VARCHAR, finish VARCHAR, chassis VARCHAR, team VARCHAR)",
        "question": "What year did Team of Andretti Green Racing have a finish smaller than 8 with a Dallara chassis?"
    },
    {
        "answer": "SELECT director FROM table_name_93 WHERE release_date = \"2004-03-31\" AND characters = \"daffy (as duck dodgers)\"",
        "context": "CREATE TABLE table_name_93 (director VARCHAR, release_date VARCHAR, characters VARCHAR)",
        "question": "What director has 2004-03-31 as the release date, with daffy (as duck dodgers) as the character?"
    },
    {
        "answer": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = \"Aruba\"",
        "context": "CREATE TABLE country (Code VARCHAR, Name VARCHAR); CREATE TABLE countrylanguage (Language VARCHAR, CountryCode VARCHAR)",
        "question": "What is the total number of languages used in Aruba?"
    },
    {
        "answer": "SELECT series FROM table_name_46 WHERE director = \"dan povenmire\" AND title = \"museum scream\"",
        "context": "CREATE TABLE table_name_46 (series VARCHAR, director VARCHAR, title VARCHAR)",
        "question": "What series has dan povenmire as the director, with museum scream as the title?"
    },
    {
        "answer": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = \"Afghanistan\" AND IsOfficial = \"T\"",
        "context": "CREATE TABLE country (Code VARCHAR, Name VARCHAR); CREATE TABLE countrylanguage (CountryCode VARCHAR)",
        "question": "How many official languages does Afghanistan have?"
    },
    {
        "answer": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE countrylanguage (CountryCode VARCHAR); CREATE TABLE country (Continent VARCHAR, Code VARCHAR)",
        "question": "Which continent has the most diverse languages?"
    },
    {
        "answer": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"Dutch\")",
        "context": "CREATE TABLE country (Name VARCHAR, Code VARCHAR); CREATE TABLE countrylanguage (CountryCode VARCHAR, Language VARCHAR)",
        "question": "How many countries speak both English and Dutch?"
    },
    {
        "answer": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"French\"",
        "context": "CREATE TABLE country (Name VARCHAR, Code VARCHAR); CREATE TABLE countrylanguage (CountryCode VARCHAR, Language VARCHAR)",
        "question": "What are the names of nations speak both English and French?"
    },
    {
        "answer": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\" AND T2.IsOfficial = \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"French\" AND T2.IsOfficial = \"T\"",
        "context": "CREATE TABLE countrylanguage (CountryCode VARCHAR, Language VARCHAR, IsOfficial VARCHAR); CREATE TABLE country (Name VARCHAR, Code VARCHAR)",
        "question": "What are the names of nations where both English and French are official languages?"
    },
    {
        "answer": "SELECT MAX(population_density__per_km\u00b2_) FROM table_name_90 WHERE change___percentage_ > 4.9 AND land_area__km\u00b2_ < 15.59 AND population__2011_ > 790",
        "context": "CREATE TABLE table_name_90 (population_density__per_km\u00b2_ INTEGER, population__2011_ VARCHAR, change___percentage_ VARCHAR, land_area__km\u00b2_ VARCHAR)",
        "question": "Which Population density (per km\u00b2) has a Change (%) larger than 4.9, and a Land area (km\u00b2) smaller than 15.59, and a Population (2011) larger than 790?"
    },
    {
        "answer": "SELECT MAX(land_area__km\u00b2_) FROM table_name_12 WHERE population_density__per_km\u00b2_ > 112.6 AND population__2006_ > 785 AND name = \"pinehouse\"",
        "context": "CREATE TABLE table_name_12 (land_area__km\u00b2_ INTEGER, name VARCHAR, population_density__per_km\u00b2_ VARCHAR, population__2006_ VARCHAR)",
        "question": "Which Land area (km\u00b2) has a Population density (per km\u00b2) larger than 112.6, and a Population (2006) larger than 785, and a Name of pinehouse?"
    },
    {
        "answer": "SELECT t1.name FROM country AS t1 JOIN countrylanguage AS t2 ON t1.code = t2.countrycode WHERE t2.language = \"english\" AND isofficial = \"t\" UNION SELECT t1.name FROM country AS t1 JOIN countrylanguage AS t2 ON t1.code = t2.countrycode WHERE t2.language = \"dutch\" AND isofficial = \"t\"",
        "context": "CREATE TABLE countrylanguage (countrycode VARCHAR, language VARCHAR); CREATE TABLE country (name VARCHAR, code VARCHAR)",
        "question": "What are the countries where either English or Dutch is the official language ?"
    },
    {
        "answer": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\" AND IsOfficial = \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"Dutch\" AND IsOfficial = \"T\"",
        "context": "CREATE TABLE country (Code VARCHAR); CREATE TABLE countrylanguage (CountryCode VARCHAR, Language VARCHAR)",
        "question": "Which countries have either English or Dutch as an official language?"
    },
    {
        "answer": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = \"Asia\" GROUP BY T2.Language ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE country (Code VARCHAR, Continent VARCHAR); CREATE TABLE countrylanguage (Language VARCHAR, CountryCode VARCHAR)",
        "question": "Which language is the most popular on the Asian continent?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"Chinese\"",
        "context": "CREATE TABLE country (Code VARCHAR); CREATE TABLE countrylanguage (CountryCode VARCHAR, Language VARCHAR)",
        "question": "What is the number of distinct continents where Chinese is spoken?"
    },
    {
        "answer": "SELECT T1.Name, T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Language = \"English\" ORDER BY T1.Population DESC LIMIT 1",
        "context": "CREATE TABLE city (Name VARCHAR, Population VARCHAR, CountryCode VARCHAR); CREATE TABLE countrylanguage (CountryCode VARCHAR, Language VARCHAR)",
        "question": "Find the city with the largest population that uses English."
    },
    {
        "answer": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.GovernmentForm = \"Republic\" GROUP BY T2.Language HAVING COUNT(*) = 1",
        "context": "CREATE TABLE countrylanguage (Language VARCHAR, CountryCode VARCHAR); CREATE TABLE country (Code VARCHAR, GovernmentForm VARCHAR)",
        "question": "Which languages are spoken by only one country in republic governments?"
    },
    {
        "answer": "SELECT AVG(LifeExpectancy) FROM country WHERE NOT Name IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\" AND T2.IsOfficial = \"T\")",
        "context": "CREATE TABLE countrylanguage (CountryCode VARCHAR, Language VARCHAR, IsOfficial VARCHAR); CREATE TABLE country (LifeExpectancy INTEGER, Name VARCHAR); CREATE TABLE country (Name VARCHAR, Code VARCHAR)",
        "question": "What is average life expectancy in the countries where English is not the official language?"
    },
    {
        "answer": "SELECT SUM(Population) FROM country WHERE NOT Name IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\")",
        "context": "CREATE TABLE country (Name VARCHAR, Code VARCHAR); CREATE TABLE countrylanguage (CountryCode VARCHAR, Language VARCHAR); CREATE TABLE country (Population INTEGER, Name VARCHAR)",
        "question": "What is the total number of people living in the nations that do not use English?"
    },
    {
        "answer": "SELECT time FROM table_name_94 WHERE rank > 2 AND country = \"france\"",
        "context": "CREATE TABLE table_name_94 (time VARCHAR, rank VARCHAR, country VARCHAR)",
        "question": "When france had a rank larger than 2, what was their time?"
    },
    {
        "answer": "SELECT production_code FROM table_24649082_1 WHERE written_by = \"J. H. Wyman & Jeff Pinkner\"",
        "context": "CREATE TABLE table_24649082_1 (production_code VARCHAR, written_by VARCHAR)",
        "question": "What is the production code for the episode written by  J. H. Wyman & Jeff Pinkner?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE IndepYear < 1930 AND T2.IsOfficial = \"T\"",
        "context": "CREATE TABLE country (Code VARCHAR); CREATE TABLE countrylanguage (Language VARCHAR, CountryCode VARCHAR, IsOfficial VARCHAR)",
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?"
    },
    {
        "answer": "SELECT Name FROM country WHERE Continent = \"Africa\" AND population < (SELECT MAX(population) FROM country WHERE Continent = \"Asia\")",
        "context": "CREATE TABLE country (Name VARCHAR, Continent VARCHAR, population INTEGER)",
        "question": "What are the African countries that have a  population less than any country in Asia?"
    },
    {
        "answer": "SELECT country FROM table_name_81 WHERE rank < 7 AND time = \"1:43.189\"",
        "context": "CREATE TABLE table_name_81 (country VARCHAR, rank VARCHAR, time VARCHAR)",
        "question": "Which country had a rank smaller than 7 and a time of 1:43.189?"
    },
    {
        "answer": "SELECT Name FROM country WHERE Continent = \"Asia\" AND population > (SELECT MAX(population) FROM country WHERE Continent = \"Africa\")",
        "context": "CREATE TABLE country (Name VARCHAR, Continent VARCHAR, population INTEGER)",
        "question": "Which Asian countries have a population that is larger than any country in Africa?"
    },
    {
        "answer": "SELECT Name FROM country WHERE Continent = \"Africa\" AND population < (SELECT MIN(population) FROM country WHERE Continent = \"Asia\")",
        "context": "CREATE TABLE country (Name VARCHAR, Continent VARCHAR, population INTEGER)",
        "question": "Which African countries have a smaller population than that of any country in Asia?"
    },
    {
        "answer": "SELECT Name FROM country WHERE SurfaceArea > (SELECT MIN(SurfaceArea) FROM country WHERE Continent = \"Europe\")",
        "context": "CREATE TABLE country (Name VARCHAR, SurfaceArea INTEGER, Continent VARCHAR)",
        "question": "What are the countries that have greater surface area than any country in Europe?"
    },
    {
        "answer": "SELECT MAX(_number) FROM table_24649082_1 WHERE written_by = \"Matthew Pitts\"",
        "context": "CREATE TABLE table_24649082_1 (_number INTEGER, written_by VARCHAR)",
        "question": "What is the most recent episode number written by Matthew Pitts?"
    },
    {
        "answer": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.HeadOfState = \"Beatrix\" AND T2.IsOfficial = \"T\"",
        "context": "CREATE TABLE country (Code VARCHAR, HeadOfState VARCHAR); CREATE TABLE countrylanguage (Language VARCHAR, CountryCode VARCHAR, IsOfficial VARCHAR)",
        "question": "What is the official language spoken in the country whose head of state is Beatrix?"
    },
    {
        "answer": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode = T1.Code WHERE T1.Continent = 'Europe' AND NOT T1.Name IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code = T4.CountryCode WHERE T4.IsOfficial = 'T' AND T4.Language = 'English')",
        "context": "CREATE TABLE city (Name VARCHAR, CountryCode VARCHAR); CREATE TABLE country (Name VARCHAR, Code VARCHAR); CREATE TABLE countrylanguage (CountryCode VARCHAR, IsOfficial VARCHAR, Language VARCHAR); CREATE TABLE country (Code VARCHAR, Continent VARCHAR, Name VARCHAR)",
        "question": "Which cities are in European countries where English is not the official language?"
    },
    {
        "answer": "SELECT DISTINCT t3.name FROM country AS t1 JOIN countrylanguage AS t2 ON t1.code = t2.countrycode JOIN city AS t3 ON t1.code = t3.countrycode WHERE t2.isofficial = 't' AND t2.language = 'chinese' AND t1.continent = \"asia\"",
        "context": "CREATE TABLE city (name VARCHAR, countrycode VARCHAR); CREATE TABLE countrylanguage (countrycode VARCHAR, isofficial VARCHAR, language VARCHAR); CREATE TABLE country (code VARCHAR, continent VARCHAR)",
        "question": "Which unique cities are in Asian countries where Chinese is the official language ?"
    },
    {
        "answer": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode JOIN city AS T3 ON T1.Code = T3.CountryCode WHERE T2.IsOfficial = 'T' AND T2.Language = 'Chinese' AND T1.Continent = \"Asia\"",
        "context": "CREATE TABLE country (Code VARCHAR, Continent VARCHAR); CREATE TABLE countrylanguage (CountryCode VARCHAR, IsOfficial VARCHAR, Language VARCHAR); CREATE TABLE city (Name VARCHAR, CountryCode VARCHAR)",
        "question": "Return the different names of cities that are in Asia and for which Chinese is the official language."
    },
    {
        "answer": "SELECT Code FROM country WHERE GovernmentForm <> \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE = \"English\"",
        "context": "CREATE TABLE countrylanguage (Code VARCHAR, CountryCode VARCHAR, GovernmentForm VARCHAR, LANGUAGE VARCHAR); CREATE TABLE country (Code VARCHAR, CountryCode VARCHAR, GovernmentForm VARCHAR, LANGUAGE VARCHAR)",
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?"
    },
    {
        "answer": "SELECT Name FROM country WHERE Continent = \"Asia\" AND population > (SELECT MIN(population) FROM country WHERE Continent = \"Africa\")",
        "context": "CREATE TABLE country (Name VARCHAR, Continent VARCHAR, population INTEGER)",
        "question": "What are the Asian countries which have a population larger than that of any country in Africa?"
    },
    {
        "answer": "SELECT COUNT(T2.Language), T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name HAVING COUNT(*) > 2",
        "context": "CREATE TABLE country (Name VARCHAR, Code VARCHAR); CREATE TABLE countrylanguage (Language VARCHAR, CountryCode VARCHAR)",
        "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages."
    },
    {
        "answer": "SELECT SUM(Population), GovernmentForm FROM country GROUP BY GovernmentForm HAVING AVG(LifeExpectancy) > 72",
        "context": "CREATE TABLE country (GovernmentForm VARCHAR, Population INTEGER, LifeExpectancy INTEGER)",
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72."
    },
    {
        "answer": "SELECT athlete FROM table_name_49 WHERE time < 21.2 AND lane < 7 AND nationality = \"dominica\"",
        "context": "CREATE TABLE table_name_49 (athlete VARCHAR, nationality VARCHAR, time VARCHAR, lane VARCHAR)",
        "question": "Who was the swimmer from Dominica who had a time of 21.2 and swam in lane 7?"
    },
    {
        "answer": "SELECT marcin_do\u0142\u0119ga___pol__ FROM table_name_76 WHERE world_record = \"olympic record\" AND snatch = \"total\"",
        "context": "CREATE TABLE table_name_76 (marcin_do\u0142\u0119ga___pol__ VARCHAR, world_record VARCHAR, snatch VARCHAR)",
        "question": "What shows for Marcin Do\u0142\u0119ga ( POL )when the world record shows olympic record, and a Snatch of total?"
    },
    {
        "answer": "SELECT date FROM table_name_3 WHERE catalog = \"reveal50cd/lp\" AND region = \"united kingdom\"",
        "context": "CREATE TABLE table_name_3 (date VARCHAR, catalog VARCHAR, region VARCHAR)",
        "question": "What's the date in the United Kingdom having a catalog of reveal50cd/lp?"
    },
    {
        "answer": "SELECT team FROM table_2472711_31 WHERE up_down = \"+ 3479\"",
        "context": "CREATE TABLE table_2472711_31 (team VARCHAR, up_down VARCHAR)",
        "question": "Which team has an up/down of + 3479?"
    },
    {
        "answer": "SELECT CountryCode, MAX(Percentage) FROM countrylanguage WHERE LANGUAGE = \"Spanish\" GROUP BY CountryCode",
        "context": "CREATE TABLE countrylanguage (CountryCode VARCHAR, Percentage INTEGER, LANGUAGE VARCHAR)",
        "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?"
    },
    {
        "answer": "SELECT COUNT(episode) FROM table_24725951_1 WHERE celebrities = \"Frank Skinner and Lee Mack\"",
        "context": "CREATE TABLE table_24725951_1 (episode VARCHAR, celebrities VARCHAR)",
        "question": "How many episodes had celebrity guest stars Frank Skinner and Lee Mack?"
    },
    {
        "answer": "SELECT Name FROM conductor WHERE Nationality <> 'USA'",
        "context": "CREATE TABLE conductor (Name VARCHAR, Nationality VARCHAR)",
        "question": "What are the names of conductors whose nationalities are not \"USA\"?"
    },
    {
        "answer": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC",
        "context": "CREATE TABLE orchestra (Record_Company VARCHAR, Year_of_Founded VARCHAR)",
        "question": "What are the record companies of orchestras in descending order of years in which they were founded?"
    },
    {
        "answer": "SELECT directed_and_produced_by FROM table_24725951_1 WHERE celebrities = \"Nick Hewer and Saira Khan\"",
        "context": "CREATE TABLE table_24725951_1 (directed_and_produced_by VARCHAR, celebrities VARCHAR)",
        "question": "List the director and producer when Nick Hewer and Saira Khan were starring."
    },
    {
        "answer": "SELECT directed_and_produced_by FROM table_24725951_1 WHERE celebrities = \"Bill Turnbull and Louise Minchin\"",
        "context": "CREATE TABLE table_24725951_1 (directed_and_produced_by VARCHAR, celebrities VARCHAR)",
        "question": "List directors and producers when the celebrities involved were Bill Turnbull and Louise Minchin."
    },
    {
        "answer": "SELECT COUNT(DISTINCT Nationality) FROM conductor",
        "context": "CREATE TABLE conductor (Nationality VARCHAR)",
        "question": "How many different nationalities do conductors have?"
    },
    {
        "answer": "SELECT T1.Name, T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID",
        "context": "CREATE TABLE conductor (Name VARCHAR, Conductor_ID VARCHAR); CREATE TABLE orchestra (Orchestra VARCHAR, Conductor_ID VARCHAR)",
        "question": "Show the names of conductors and the orchestras they have conducted."
    },
    {
        "answer": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*) > 1",
        "context": "CREATE TABLE orchestra (Conductor_ID VARCHAR); CREATE TABLE conductor (Name VARCHAR, Conductor_ID VARCHAR)",
        "question": "Show the names of conductors that have conducted more than one orchestras."
    },
    {
        "answer": "SELECT competition FROM table_24765815_2 WHERE vote_percentage = \"N/A\" AND nationality = \"Brazil\"",
        "context": "CREATE TABLE table_24765815_2 (competition VARCHAR, vote_percentage VARCHAR, nationality VARCHAR)",
        "question": "What's the name of the competition where the nationality is Brazil and the voting percentage is n/a?"
    },
    {
        "answer": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID WHERE Year_of_Founded > 2008",
        "context": "CREATE TABLE orchestra (Conductor_ID VARCHAR); CREATE TABLE conductor (Name VARCHAR, Conductor_ID VARCHAR)",
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008."
    },
    {
        "answer": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID = T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE orchestra (Conductor_ID VARCHAR); CREATE TABLE conductor (Name VARCHAR, Conductor_ID VARCHAR)",
        "question": "Show the name of the conductor that has conducted the most number of orchestras."
    },
    {
        "answer": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*)",
        "context": "CREATE TABLE orchestra (Major_Record_Format VARCHAR)",
        "question": "Please show the record formats of orchestras in ascending order of count."
    },
    {
        "answer": "SELECT votes FROM table_name_90 WHERE opponent = \"jeannemarie devolites davis\" AND year = \"1995-special\"",
        "context": "CREATE TABLE table_name_90 (votes VARCHAR, opponent VARCHAR, year VARCHAR)",
        "question": "How many votes did Jeannemarie Devolites Davis get in 1995-Special?"
    },
    {
        "answer": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded > 2003",
        "context": "CREATE TABLE orchestra (Record_Company VARCHAR, Year_of_Founded INTEGER)",
        "question": "Show the record companies shared by orchestras founded before 2003 and after 2003."
    },
    {
        "answer": "SELECT class FROM table_name_66 WHERE event = \"championship test\" AND result = \"62.516\"",
        "context": "CREATE TABLE table_name_66 (class VARCHAR, event VARCHAR, result VARCHAR)",
        "question": "What class had a Championship Test event with a 62.516 result?"
    },
    {
        "answer": "SELECT COUNT(new_democratic) FROM table_24778847_2 WHERE date_of_polling = \"May 11\u201331, 2010\"",
        "context": "CREATE TABLE table_24778847_2 (new_democratic VARCHAR, date_of_polling VARCHAR)",
        "question": "How many figures are given for the New Democratic for the polling range May 11\u201331, 2010?"
    },
    {
        "answer": "SELECT link FROM table_24778847_2 WHERE date_of_polling = \"February 10\u201328, 2011\"",
        "context": "CREATE TABLE table_24778847_2 (link VARCHAR, date_of_polling VARCHAR)",
        "question": "What format is the link for the polling data for February 10\u201328, 2011?"
    },
    {
        "answer": "SELECT displacement FROM table_name_20 WHERE fuel_system = \"carburettor\" AND power = \"ps (kw; hp)\" AND model = \"2000\"",
        "context": "CREATE TABLE table_name_20 (displacement VARCHAR, model VARCHAR, fuel_system VARCHAR, power VARCHAR)",
        "question": "What is the displacement when the fuel system is carburettor, and a power of ps (kw; hp), and also has a model of 2000?"
    },
    {
        "answer": "SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade",
        "context": "CREATE TABLE Highschooler (grade VARCHAR)",
        "question": "Show the number of high schoolers for each grade."
    },
    {
        "answer": "SELECT result FROM table_name_66 WHERE date = \"december 15, 2002\"",
        "context": "CREATE TABLE table_name_66 (result VARCHAR, date VARCHAR)",
        "question": "What was the result of the December 15, 2002 game?"
    },
    {
        "answer": "SELECT COUNT(original_airdate) FROM table_24798489_2 WHERE location = \"Philadelphia, Pennsylvania\"",
        "context": "CREATE TABLE table_24798489_2 (original_airdate VARCHAR, location VARCHAR)",
        "question": "How many dates originally aired episodes located in Philadelphia, pennsylvania?"
    },
    {
        "answer": "SELECT COUNT(original_airdate) FROM table_24798489_2 WHERE episode_number = 22",
        "context": "CREATE TABLE table_24798489_2 (original_airdate VARCHAR, episode_number VARCHAR)",
        "question": "How many original air dates were there for episode 22?"
    },
    {
        "answer": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING COUNT(*) >= 3",
        "context": "CREATE TABLE Highschooler (name VARCHAR, id VARCHAR); CREATE TABLE Friend (student_id VARCHAR)",
        "question": "Show the names of high schoolers who have at least 3 friends."
    },
    {
        "answer": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id JOIN Highschooler AS T3 ON T1.friend_id = T3.id WHERE T2.name = \"Kyle\"",
        "context": "CREATE TABLE Highschooler (name VARCHAR, id VARCHAR); CREATE TABLE Friend (student_id VARCHAR, friend_id VARCHAR); CREATE TABLE Highschooler (id VARCHAR, name VARCHAR)",
        "question": "Show the names of all of the high schooler Kyle's friends."
    },
    {
        "answer": "SELECT date_of_replacement FROM table_name_54 WHERE reason_of_departure = \"sacked\" AND team = \"psis semarang\"",
        "context": "CREATE TABLE table_name_54 (date_of_replacement VARCHAR, reason_of_departure VARCHAR, team VARCHAR)",
        "question": "On what date did the manager for PSIS Semarang take over for the manager that was sacked?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.name = \"Kyle\"",
        "context": "CREATE TABLE Friend (student_id VARCHAR); CREATE TABLE Highschooler (id VARCHAR, name VARCHAR)",
        "question": "How many friends does the high school student Kyle have?"
    },
    {
        "answer": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id",
        "context": "CREATE TABLE Highschooler (name VARCHAR, id VARCHAR); CREATE TABLE Highschooler (name VARCHAR); CREATE TABLE Friend (student_id VARCHAR)",
        "question": "Show names of all high school students who do not have any friends."
    },
    {
        "answer": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id = T2.id",
        "context": "CREATE TABLE Highschooler (name VARCHAR, id VARCHAR); CREATE TABLE Likes (student_id VARCHAR, liked_id VARCHAR); CREATE TABLE Friend (student_id VARCHAR, liked_id VARCHAR)",
        "question": "Show name of all students who have some friends and also are liked by someone else."
    },
    {
        "answer": "SELECT COUNT(assists) FROM table_24807406_1 WHERE minutes = 1",
        "context": "CREATE TABLE table_24807406_1 (assists VARCHAR, minutes VARCHAR)",
        "question": "What is the assists total number if the minutes is 1?"
    },
    {
        "answer": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Likes (student_id VARCHAR); CREATE TABLE Highschooler (name VARCHAR, id VARCHAR)",
        "question": "What is the name of the high schooler who has the greatest number of likes?"
    },
    {
        "answer": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id GROUP BY T1.student_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Likes (student_id VARCHAR); CREATE TABLE Highschooler (name VARCHAR, id VARCHAR)",
        "question": "Show the names of students who have at least 2 likes."
    },
    {
        "answer": "SELECT COUNT(career_caps) FROM table_name_78 WHERE position = \"full back\" AND tour_apps < 29",
        "context": "CREATE TABLE table_name_78 (career_caps VARCHAR, position VARCHAR, tour_apps VARCHAR)",
        "question": "What is the number of career caps for a full back, when tour Apps is smaller than 29?"
    },
    {
        "answer": "SELECT career_caps FROM table_name_73 WHERE position = \"half-back\" AND tests > 3",
        "context": "CREATE TABLE table_name_73 (career_caps VARCHAR, position VARCHAR, tests VARCHAR)",
        "question": "What is the career caps for half-back, when tests is more than 3?"
    },
    {
        "answer": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id WHERE T2.grade > 5 GROUP BY T1.student_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Friend (student_id VARCHAR); CREATE TABLE Highschooler (name VARCHAR, id VARCHAR, grade INTEGER)",
        "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends."
    },
    {
        "answer": "SELECT MIN(grade) FROM Highschooler WHERE NOT id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id)",
        "context": "CREATE TABLE Highschooler (id VARCHAR); CREATE TABLE Friend (student_id VARCHAR); CREATE TABLE Highschooler (grade INTEGER, id VARCHAR)",
        "question": "Find the minimum grade of students who have no friends."
    },
    {
        "answer": "SELECT AVG(age) FROM Dogs WHERE dog_id IN (SELECT dog_id FROM Treatments)",
        "context": "CREATE TABLE Dogs (age INTEGER, dog_id VARCHAR); CREATE TABLE Treatments (age INTEGER, dog_id VARCHAR)",
        "question": "What is the average age of the dogs who have gone through any treatments?"
    },
    {
        "answer": "SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' UNION SELECT T1.professional_id, T1.last_name, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) > 2",
        "context": "CREATE TABLE Treatments (professional_id VARCHAR); CREATE TABLE Professionals (professional_id VARCHAR, last_name VARCHAR, cell_number VARCHAR); CREATE TABLE Professionals (professional_id VARCHAR, last_name VARCHAR, cell_number VARCHAR, state VARCHAR)",
        "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone."
    },
    {
        "answer": "SELECT professional_id, role_code, email_address FROM Professionals EXCEPT SELECT T1.professional_id, T1.role_code, T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id",
        "context": "CREATE TABLE Professionals (professional_id VARCHAR, role_code VARCHAR, email_address VARCHAR); CREATE TABLE Treatments (professional_id VARCHAR)",
        "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email."
    },
    {
        "answer": "SELECT T1.owner_id, T2.first_name, T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id = T2.owner_id GROUP BY T1.owner_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Owners (first_name VARCHAR, last_name VARCHAR, owner_id VARCHAR); CREATE TABLE Dogs (owner_id VARCHAR)",
        "question": "Which owner owns the most dogs? List the owner id, first name and last name."
    },
    {
        "answer": "SELECT T1.professional_id, T1.role_code, T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Professionals (professional_id VARCHAR, role_code VARCHAR, first_name VARCHAR); CREATE TABLE Treatments (professional_id VARCHAR)",
        "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name."
    },
    {
        "answer": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code = T2.breed_code GROUP BY T1.breed_name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Dogs (breed_code VARCHAR); CREATE TABLE Breeds (breed_name VARCHAR, breed_code VARCHAR)",
        "question": "What is the name of the breed with the most dogs?"
    },
    {
        "answer": "SELECT T1.owner_id, T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE Owners (owner_id VARCHAR, last_name VARCHAR); CREATE TABLE Dogs (owner_id VARCHAR, dog_id VARCHAR); CREATE TABLE Treatments (dog_id VARCHAR)",
        "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name."
    },
    {
        "answer": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY SUM(cost_of_treatment) LIMIT 1",
        "context": "CREATE TABLE Treatments (treatment_type_code VARCHAR); CREATE TABLE Treatment_types (treatment_type_description VARCHAR, treatment_type_code VARCHAR)",
        "question": "What is the description of the treatment type that costs the least money in total?"
    },
    {
        "answer": "SELECT T1.owner_id, T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id = T2.owner_id JOIN Treatments AS T3 ON T2.dog_id = T3.dog_id GROUP BY T1.owner_id ORDER BY SUM(T3.cost_of_treatment) DESC LIMIT 1",
        "context": "CREATE TABLE Treatments (dog_id VARCHAR, cost_of_treatment INTEGER); CREATE TABLE Owners (owner_id VARCHAR, zip_code VARCHAR); CREATE TABLE Dogs (owner_id VARCHAR, dog_id VARCHAR)",
        "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code."
    },
    {
        "answer": "SELECT T1.professional_id, T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id GROUP BY T1.professional_id HAVING COUNT(*) >= 2",
        "context": "CREATE TABLE Professionals (professional_id VARCHAR, cell_number VARCHAR); CREATE TABLE Treatments (professional_id VARCHAR)",
        "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone."
    },
    {
        "answer": "SELECT DISTINCT T1.first_name, T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments)",
        "context": "CREATE TABLE Treatments (cost_of_treatment INTEGER); CREATE TABLE Professionals (first_name VARCHAR, last_name VARCHAR); CREATE TABLE Treatments (Id VARCHAR)",
        "question": "What are the first name and last name of the professionals who have done treatment with cost below average?"
    },
    {
        "answer": "SELECT T1.cost_of_treatment, T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code = T2.treatment_type_code",
        "context": "CREATE TABLE Treatments (cost_of_treatment VARCHAR, treatment_type_code VARCHAR); CREATE TABLE treatment_types (treatment_type_description VARCHAR, treatment_type_code VARCHAR)",
        "question": "List the cost of each treatment and the corresponding treatment type description."
    },
    {
        "answer": "SELECT T1.name, T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id = T2.dog_id WHERE T1.breed_code = (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) LIMIT 1)",
        "context": "CREATE TABLE Dogs (name VARCHAR, dog_id VARCHAR, breed_code VARCHAR); CREATE TABLE Treatments (date_of_treatment VARCHAR, dog_id VARCHAR); CREATE TABLE Dogs (breed_code VARCHAR)",
        "question": "List the names of the dogs of the rarest breed and the treatment dates of them."
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_30 WHERE home = \"link\u00f6pings hc\" AND date = \"monday, november 10\" AND round > 18",
        "context": "CREATE TABLE table_name_30 (attendance INTEGER, round VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "What is the lowest attendance on Monday, November 10 when link\u00f6pings hc was the home team and there were more than 18 rounds?"
    },
    {
        "answer": "SELECT visitor FROM table_name_89 WHERE home = \"link\u00f6pings hc\" AND round > 20 AND date = \"saturday, november 22\"",
        "context": "CREATE TABLE table_name_89 (visitor VARCHAR, date VARCHAR, home VARCHAR, round VARCHAR)",
        "question": "Who is the visitor team on Saturday, November 22 when link\u00f6pings hc was the home team and there were more than 20 rounds?"
    },
    {
        "answer": "SELECT green_communist FROM table_name_59 WHERE socialist = \"41.0%\"",
        "context": "CREATE TABLE table_name_59 (green_communist VARCHAR, socialist VARCHAR)",
        "question": "What was the Green-Communist percentage in the poll in which the Socialist Party earned 41.0%?"
    },
    {
        "answer": "SELECT COUNT(lmp2_winning_team) FROM table_24865763_2 WHERE gt1_winning_team = \"Gabriele Gardel Patrice Goueslard Fernando Rees\" AND circuit = \"Algarve\"",
        "context": "CREATE TABLE table_24865763_2 (lmp2_winning_team VARCHAR, gt1_winning_team VARCHAR, circuit VARCHAR)",
        "question": "How many winning teams are there on LMP2 if Gabriele Gardel Patrice Goueslard Fernando Rees was the GT1 Winning Team on the Algarve circuit?"
    },
    {
        "answer": "SELECT MAX(rnd) FROM table_24865763_2 WHERE gt2_winning_team = \"Marc Lieb Richard Lietz\"",
        "context": "CREATE TABLE table_24865763_2 (rnd INTEGER, gt2_winning_team VARCHAR)",
        "question": "What was the maximum round where Marc Lieb Richard Lietz was on the GT2 Winning Team?"
    },
    {
        "answer": "SELECT COUNT(lmp1_winning_team) FROM table_24865763_2 WHERE rnd = 4 AND lmp2_winning_team = \"No. 42 Strakka Racing\"",
        "context": "CREATE TABLE table_24865763_2 (lmp1_winning_team VARCHAR, rnd VARCHAR, lmp2_winning_team VARCHAR)",
        "question": "How many won the LMP1 on round 4 if No. 42 Strakka Racing was the LMP2 Winning Team?"
    },
    {
        "answer": "SELECT result FROM table_name_54 WHERE venue = \"stade g\u00e9n\u00e9ral seyni kountch\u00e9, niamey\" AND competition = \"friendly\" AND date = \"9 october 2012\"",
        "context": "CREATE TABLE table_name_54 (result VARCHAR, date VARCHAR, venue VARCHAR, competition VARCHAR)",
        "question": "what is the result when the venue is stade g\u00e9n\u00e9ral seyni kountch\u00e9, niamey, the competition is friendly and the date is 9 october 2012?"
    },
    {
        "answer": "SELECT score FROM table_name_32 WHERE venue = \"stade g\u00e9n\u00e9ral seyni kountch\u00e9, niamey\" AND competition = \"friendly\" AND date = \"9 october 2012\"",
        "context": "CREATE TABLE table_name_32 (score VARCHAR, date VARCHAR, venue VARCHAR, competition VARCHAR)",
        "question": "what is the score when the venue is stade g\u00e9n\u00e9ral seyni kountch\u00e9, niamey, the competition is friendly and the date is 9 october 2012?"
    },
    {
        "answer": "SELECT COUNT(*) FROM Professionals WHERE NOT professional_id IN (SELECT professional_id FROM Treatments)",
        "context": "CREATE TABLE Professionals (professional_id VARCHAR); CREATE TABLE Treatments (professional_id VARCHAR)",
        "question": "How many professionals did not operate any treatment on dogs?"
    },
    {
        "answer": "SELECT type FROM table_name_14 WHERE rank < 70 AND province = \"british columbia\" AND capacity___mw__ > 2 OFFSET 480",
        "context": "CREATE TABLE table_name_14 (type VARCHAR, capacity___mw__ VARCHAR, rank VARCHAR, province VARCHAR)",
        "question": "what is the type when the rank is smaller than 70, the province is british columbia and the capacity (mw) is more than 2,480?"
    },
    {
        "answer": "SELECT email_address, cell_number, home_phone FROM professionals",
        "context": "CREATE TABLE professionals (email_address VARCHAR, cell_number VARCHAR, home_phone VARCHAR)",
        "question": "List the email, cell phone and home phone of all the professionals."
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_67 WHERE type = \"hydro\" AND name = \"grand rapids generating station\" AND capacity___mw__ > 479",
        "context": "CREATE TABLE table_name_67 (rank INTEGER, capacity___mw__ VARCHAR, type VARCHAR, name VARCHAR)",
        "question": "what is the lowest rank when the type is hydro, the name is grand rapids generating station and the capacity (mw) is more than 479?"
    },
    {
        "answer": "SELECT DISTINCT T1.first_name, T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id = T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code = T3.treatment_type_code",
        "context": "CREATE TABLE Treatments (professional_id VARCHAR, treatment_type_code VARCHAR); CREATE TABLE Treatment_types (treatment_type_description VARCHAR, treatment_type_code VARCHAR); CREATE TABLE professionals (first_name VARCHAR, professional_id VARCHAR)",
        "question": "List the first name of all the professionals along with the description of the treatment they have done."
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_60 WHERE team = \"toyota team tom's\" AND laps > 64",
        "context": "CREATE TABLE table_name_60 (year VARCHAR, team VARCHAR, laps VARCHAR)",
        "question": "How many years have toyota team tom's as the team, with Laps greater than 64?"
    },
    {
        "answer": "SELECT MAX(minutes) FROM table_24908692_5 WHERE field_goals = 70",
        "context": "CREATE TABLE table_24908692_5 (minutes INTEGER, field_goals VARCHAR)",
        "question": "What is the maximum number of minutes associated with exactly 70 field goals?"
    },
    {
        "answer": "SELECT MAX(silver) FROM table_name_89 WHERE rank > 5 AND bronze > 2",
        "context": "CREATE TABLE table_name_89 (silver INTEGER, rank VARCHAR, bronze VARCHAR)",
        "question": "How many silver medals when the bronze is more than 2 and having a rank more than 5?"
    },
    {
        "answer": "SELECT COUNT(steals) FROM table_24906653_5 WHERE blocks = 1",
        "context": "CREATE TABLE table_24906653_5 (steals VARCHAR, blocks VARCHAR)",
        "question": "List the number of takeaways with 1 rejection."
    },
    {
        "answer": "SELECT T1.Name, SUM(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID = T2.Singer_ID GROUP BY T1.Name",
        "context": "CREATE TABLE singer (Name VARCHAR, Singer_ID VARCHAR); CREATE TABLE song (Sales INTEGER, Singer_ID VARCHAR)",
        "question": "Show the names of singers and the total sales of their songs."
    },
    {
        "answer": "SELECT Citizenship FROM singer WHERE Birth_Year < 1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year > 1955",
        "context": "CREATE TABLE singer (Citizenship VARCHAR, Birth_Year INTEGER)",
        "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955."
    },
    {
        "answer": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code = T2.feature_type_code WHERE T1.feature_name = \"AirCon\"",
        "context": "CREATE TABLE Other_Available_Features (feature_type_code VARCHAR, feature_name VARCHAR); CREATE TABLE Ref_Feature_Types (feature_type_name VARCHAR, feature_type_code VARCHAR)",
        "question": "What is the feature type name of feature AirCon?"
    },
    {
        "answer": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T1.property_type_code",
        "context": "CREATE TABLE Properties (property_type_code VARCHAR); CREATE TABLE Ref_Property_Types (property_type_description VARCHAR, property_type_code VARCHAR)",
        "question": "Show the property type descriptions of properties belonging to that code."
    },
    {
        "answer": "SELECT property_name FROM Properties WHERE property_type_code = \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code = \"Apartment\" AND room_count > 1",
        "context": "CREATE TABLE Properties (property_name VARCHAR, property_type_code VARCHAR, room_count VARCHAR)",
        "question": "What are the names of properties that are either houses or apartments with more than 1 room?"
    },
    {
        "answer": "SELECT COUNT(college_junior_club_team) FROM table_1013129_2 WHERE nhl_team = \"Washington Capitals\"",
        "context": "CREATE TABLE table_1013129_2 (college_junior_club_team VARCHAR, nhl_team VARCHAR)",
        "question": "How many different college/junior/club teams provided a player to the Washington Capitals NHL Team?"
    },
    {
        "answer": "SELECT nationality FROM table_1013129_3 WHERE nhl_team = \"Vancouver Canucks\"",
        "context": "CREATE TABLE table_1013129_3 (nationality VARCHAR, nhl_team VARCHAR)",
        "question": "What is the nationality of the player from Vancouver Canucks?"
    },
    {
        "answer": "SELECT pick FROM table_1013129_3 WHERE college_junior_club_team = \"Springfield Olympics (NEJHL)\"",
        "context": "CREATE TABLE table_1013129_3 (pick VARCHAR, college_junior_club_team VARCHAR)",
        "question": "What's the pick number of the player from Springfield Olympics (Nejhl)?"
    },
    {
        "answer": "SELECT result_margin FROM table_24919137_2 WHERE broadcaster = \"Fox Sports 1\" AND venue = \"MCG\"",
        "context": "CREATE TABLE table_24919137_2 (result_margin VARCHAR, broadcaster VARCHAR, venue VARCHAR)",
        "question": "What is the result/margin when fox sports 1 broadcast the game played at mcg?"
    },
    {
        "answer": "SELECT MAX(ties_played) FROM table_10294071_1 WHERE player = \"Josip Palada Category:Articles with hCards\"",
        "context": "CREATE TABLE table_10294071_1 (ties_played INTEGER, player VARCHAR)",
        "question": "what is the maximum\u00a0ties played\u00a0where\u00a0player\u00a0is josip palada category:articles with hcards"
    },
    {
        "answer": "SELECT COUNT(frequency) FROM table_10333757_1 WHERE market_rank = \"Burlington - Plattsburgh , Vermont - New York /143\"",
        "context": "CREATE TABLE table_10333757_1 (frequency VARCHAR, market_rank VARCHAR)",
        "question": "What is the Frequency at the Market/Rank of Burlington - Plattsburgh , Vermont - New York /143?"
    },
    {
        "answer": "SELECT bts_retail_price__regulated_ FROM table_10408617_5 WHERE tariff_code = \"ff0 PRS\"",
        "context": "CREATE TABLE table_10408617_5 (bts_retail_price__regulated_ VARCHAR, tariff_code VARCHAR)",
        "question": "What is the regulated retail price for the tariff code ff0 prs?"
    },
    {
        "answer": "SELECT away_team FROM table_24949975_1 WHERE result = \"2\u20131\" AND home_team = \"Bohemians\"",
        "context": "CREATE TABLE table_24949975_1 (away_team VARCHAR, result VARCHAR, home_team VARCHAR)",
        "question": "What was the away team when the result was 2\u20131 and home team was the bohemians?"
    },
    {
        "answer": "SELECT production_code FROM table_24938621_3 WHERE written_by = \"Cathryn Humphris\"",
        "context": "CREATE TABLE table_24938621_3 (production_code VARCHAR, written_by VARCHAR)",
        "question": "What is the production code of the episode written by Cathryn Humphris?"
    },
    {
        "answer": "SELECT college FROM table_name_54 WHERE pick = 136",
        "context": "CREATE TABLE table_name_54 (college VARCHAR, pick VARCHAR)",
        "question": "Which college did the player picked number 136 go to?"
    },
    {
        "answer": "SELECT flying_hours FROM table_105344_2 WHERE aircraft_kilometers > 64379058.0",
        "context": "CREATE TABLE table_105344_2 (flying_hours VARCHAR, aircraft_kilometers INTEGER)",
        "question": "How many hours were flown in each of the years where more than 64379058.0 kilometers were flown?"
    },
    {
        "answer": "SELECT player FROM table_name_69 WHERE position = \"rb\" AND team = \"oakland\"",
        "context": "CREATE TABLE table_name_69 (player VARCHAR, position VARCHAR, team VARCHAR)",
        "question": "Who is the rb player from team oakland?"
    },
    {
        "answer": "SELECT date FROM table_24989925_2 WHERE game_site = \"Olympic Stadium\"",
        "context": "CREATE TABLE table_24989925_2 (date VARCHAR, game_site VARCHAR)",
        "question": "What is the date of the game at Olympic Stadium?"
    },
    {
        "answer": "SELECT COUNT(south_australia) FROM table_1057262_2 WHERE victoria = 2173",
        "context": "CREATE TABLE table_1057262_2 (south_australia VARCHAR, victoria VARCHAR)",
        "question": "what's the total number of\u00a0south australia\u00a0with\u00a0victoria\u00a0value of 2173"
    },
    {
        "answer": "SELECT MIN(capacity) FROM table_name_61 WHERE class = \"cm22\" AND vehicle = \"1999 subaru impreza wrx sti\"",
        "context": "CREATE TABLE table_name_61 (capacity INTEGER, class VARCHAR, vehicle VARCHAR)",
        "question": "Which Capacity has a Class of cm22, and a Vehicle of 1999 subaru impreza wrx sti?"
    },
    {
        "answer": "SELECT lyrics__l____music__m_ FROM table_name_76 WHERE place = \"23\"",
        "context": "CREATE TABLE table_name_76 (lyrics__l____music__m_ VARCHAR, place VARCHAR)",
        "question": "Who did the Lyrics (l) / Music (m) for the song in 23 Place?"
    },
    {
        "answer": "SELECT COUNT(vote) FROM table_25016824_2 WHERE air_date = \"15 November 1997\"",
        "context": "CREATE TABLE table_25016824_2 (vote VARCHAR, air_date VARCHAR)",
        "question": "How many entries are there for vote when the air date was 15 november 1997?"
    },
    {
        "answer": "SELECT reward FROM table_25016824_2 WHERE immunity = \"Martin\" AND finish = \"13th voted Out 8th Jury Member Day 46\"",
        "context": "CREATE TABLE table_25016824_2 (reward VARCHAR, immunity VARCHAR, finish VARCHAR)",
        "question": "What was the  reward  when immunity went to martin and finish is 13th voted out 8th jury member day 46?"
    },
    {
        "answer": "SELECT county FROM table_10586064_2 WHERE total = \"18,900 (R)\"",
        "context": "CREATE TABLE table_10586064_2 (county VARCHAR, total VARCHAR)",
        "question": "What country had the total 18,900 (r)?"
    },
    {
        "answer": "SELECT rank FROM table_name_20 WHERE gold > 0 AND bronze = 0 AND nation = \"germany (ger)\"",
        "context": "CREATE TABLE table_name_20 (rank VARCHAR, nation VARCHAR, gold VARCHAR, bronze VARCHAR)",
        "question": "What rank has a gold greater than 0, 0 as the bronze, with germany (ger) as the nation?"
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_25017530_5 WHERE player = \"Steven Turner\"",
        "context": "CREATE TABLE table_25017530_5 (pick__number INTEGER, player VARCHAR)",
        "question": "Name the least pick number for steven turner"
    },
    {
        "answer": "SELECT religious_group FROM table_10710364_1 WHERE population__percentage_2001 = \"0.72%\"",
        "context": "CREATE TABLE table_10710364_1 (religious_group VARCHAR, population__percentage_2001 VARCHAR)",
        "question": "What religious groups made up 0.72% of the Indian population in 2001?"
    },
    {
        "answer": "SELECT brakes FROM table_250230_2 WHERE wheels = \"16x8.0JJ (front) 16x8.0JJ (rear)\" AND tyres = \"225/50R16 92V(front) 225/50R16 92V(rear)\" AND model = \"Type RB 4AT\"",
        "context": "CREATE TABLE table_250230_2 (brakes VARCHAR, model VARCHAR, wheels VARCHAR, tyres VARCHAR)",
        "question": "What kind of brakes for the model type rb 4at with 16x8.0jj (front) 16x8.0jj (rear) wheels and 225/50r16 92v(front) 225/50r16 92v(rear) tyres?"
    },
    {
        "answer": "SELECT music___director FROM table_name_69 WHERE co___singer = \"hemachandra\" AND film = \"khaleja\"",
        "context": "CREATE TABLE table_name_69 (music___director VARCHAR, co___singer VARCHAR, film VARCHAR)",
        "question": "Who is the music-director for the song from the film khaleja who had a co-singer of hemachandra?"
    },
    {
        "answer": "SELECT composition FROM table_1081235_1 WHERE name_of_lava_dome = \"Valles lava dome\"",
        "context": "CREATE TABLE table_1081235_1 (composition VARCHAR, name_of_lava_dome VARCHAR)",
        "question": "What is the composition at Valles lava dome?"
    },
    {
        "answer": "SELECT song FROM table_10848177_1 WHERE picturization = \"Vijay\"",
        "context": "CREATE TABLE table_10848177_1 (song VARCHAR, picturization VARCHAR)",
        "question": "Which song has picturization by only vijay?"
    },
    {
        "answer": "SELECT MIN(result) FROM table_name_66 WHERE reaction_time > 0.185 AND name = \"christian malcolm\" AND lane > 3",
        "context": "CREATE TABLE table_name_66 (result INTEGER, lane VARCHAR, reaction_time VARCHAR, name VARCHAR)",
        "question": "What is the lowest result for Christian Malcolm with a reaction time greater than 0.185 and a lane higher than 3?"
    },
    {
        "answer": "SELECT MIN(conceded) FROM table_name_71 WHERE draws = 1 AND scored > 14",
        "context": "CREATE TABLE table_name_71 (conceded INTEGER, draws VARCHAR, scored VARCHAR)",
        "question": "What are the lowest conceded with 1 draw, and a score larger than 14?"
    },
    {
        "answer": "SELECT COUNT(system) FROM table_10875694_11 WHERE title = \"James Bond 007: Everything or Nothing\"",
        "context": "CREATE TABLE table_10875694_11 (system VARCHAR, title VARCHAR)",
        "question": "What is the total number of James Bond 007: Everything or Nothing for each system?"
    },
    {
        "answer": "SELECT compatible_with_60gb_pal_80gb_ntsc_ps3__cechc_ceche_ FROM table_10875694_11 WHERE publisher = \"Electronic Arts\" AND title = \"James Bond 007: Agent Under Fire\"",
        "context": "CREATE TABLE table_10875694_11 (compatible_with_60gb_pal_80gb_ntsc_ps3__cechc_ceche_ VARCHAR, publisher VARCHAR, title VARCHAR)",
        "question": "Which James Bond 007: Agent Under Fire from Electronic Arts is compatible with 60 gb pal/80 gb NTSC PS3 (CECHC/CECHE)?"
    },
    {
        "answer": "SELECT status FROM table_1090916_2 WHERE livery = \"Blue\"",
        "context": "CREATE TABLE table_1090916_2 (status VARCHAR, livery VARCHAR)",
        "question": "What is  the status when livery is blue?"
    },
    {
        "answer": "SELECT location FROM table_1090916_2 WHERE status = \"In service as coaching stock\"",
        "context": "CREATE TABLE table_1090916_2 (location VARCHAR, status VARCHAR)",
        "question": "What is the location when the status is in service as coaching stock?"
    },
    {
        "answer": "SELECT tertiary__18_24_years_ FROM table_25042332_22 WHERE secondary__14_17_years_ = \"71.43\"",
        "context": "CREATE TABLE table_25042332_22 (tertiary__18_24_years_ VARCHAR, secondary__14_17_years_ VARCHAR)",
        "question": "What is the enrollment ratio in tertiary in the region where the enrollment ration in secondary is 71.43?"
    },
    {
        "answer": "SELECT e_vap_ratio_total FROM table_25042332_30 WHERE men_of_voting_age = 123726",
        "context": "CREATE TABLE table_25042332_30 (e_vap_ratio_total VARCHAR, men_of_voting_age VARCHAR)",
        "question": "what is the percentage of male voters where the level of maturity is 123726"
    },
    {
        "answer": "SELECT COUNT(incarceration_rate_total) FROM table_25042332_31 WHERE prison_inmates_women = 153",
        "context": "CREATE TABLE table_25042332_31 (incarceration_rate_total VARCHAR, prison_inmates_women VARCHAR)",
        "question": "How many regions had 153 women prison inmates?"
    },
    {
        "answer": "SELECT 2013 AS _republican_primary FROM table_1108394_6 WHERE staten_island = \"451\"",
        "context": "CREATE TABLE table_1108394_6 (staten_island VARCHAR)",
        "question": "Who was the republican candidate in 2013 when Staten Island was 451?"
    },
    {
        "answer": "SELECT COUNT(incarceration_rate_total) FROM table_25042332_31 WHERE incarceration_rate_female = 63",
        "context": "CREATE TABLE table_25042332_31 (incarceration_rate_total VARCHAR, incarceration_rate_female VARCHAR)",
        "question": "How many regions had an incarceration rate for females of 63?"
    },
    {
        "answer": "SELECT MAX(late_1943) FROM table_1115992_1 WHERE NOT _late_1941 = \"Slovenia\"",
        "context": "CREATE TABLE table_1115992_1 (late_1943 INTEGER, _late_1941 VARCHAR)",
        "question": "Name the most late 1943 with late 194 in slovenia"
    },
    {
        "answer": "SELECT opponent FROM table_name_12 WHERE venue = \"h\" AND result = \"0\u20131\" AND date = \"29 august 1998\"",
        "context": "CREATE TABLE table_name_12 (opponent VARCHAR, date VARCHAR, venue VARCHAR, result VARCHAR)",
        "question": "Which Opponent has a Venue of h, and a Result of 0\u20131, and a Date of 29 august 1998?"
    },
    {
        "answer": "SELECT height FROM table_25058562_2 WHERE player = \"Asko Esna\"",
        "context": "CREATE TABLE table_25058562_2 (height VARCHAR, player VARCHAR)",
        "question": "Name the height for asko esna"
    },
    {
        "answer": "SELECT us_viewers__in_millions_ FROM table_25084227_1 WHERE directed_by = \"Michael Offer\"",
        "context": "CREATE TABLE table_25084227_1 (us_viewers__in_millions_ VARCHAR, directed_by VARCHAR)",
        "question": "If the episode was directed by Michael Offer, how many US Viewers watched it?"
    },
    {
        "answer": "SELECT COUNT(pick__number) FROM table_25085059_3 WHERE cfl_team = \"Winnipeg Blue Bombers\"",
        "context": "CREATE TABLE table_25085059_3 (pick__number VARCHAR, cfl_team VARCHAR)",
        "question": "How many draft picks were for Winnipeg blue bombers?"
    },
    {
        "answer": "SELECT nationality FROM table_name_99 WHERE rank > 1 AND time < 22.12 AND lane < 4 AND name = \"ashley callus\"",
        "context": "CREATE TABLE table_name_99 (nationality VARCHAR, name VARCHAR, lane VARCHAR, rank VARCHAR, time VARCHAR)",
        "question": "Which Nationality has a Rank larger than 1, and a Time smaller than 22.12, and a Lane smaller than 4, and a Name of ashley callus?"
    },
    {
        "answer": "SELECT catalog_number FROM table_11222744_3 WHERE title = \"Super Callanetics\"",
        "context": "CREATE TABLE table_11222744_3 (catalog_number VARCHAR, title VARCHAR)",
        "question": "What is the catalog number of the title called \"super callanetics\"?"
    },
    {
        "answer": "SELECT leading_scorer_1 FROM table_name_2 WHERE leaguecontested = \"northern premier league premier division\" AND fa_cup = \"2q\"",
        "context": "CREATE TABLE table_name_2 (leading_scorer_1 VARCHAR, leaguecontested VARCHAR, fa_cup VARCHAR)",
        "question": "Which Leading scorer 1 has a League Contested of northern premier league premier division, and an FA Cup of 2q?"
    },
    {
        "answer": "SELECT COUNT(channel) FROM table_11323532_2 WHERE country_region = \"New Zealand\"",
        "context": "CREATE TABLE table_11323532_2 (channel VARCHAR, country_region VARCHAR)",
        "question": "What was the number of channels in New Zealand?"
    },
    {
        "answer": "SELECT candidates_winning_candidate_in_bold FROM table_1133844_4 WHERE state__linked_to_summaries_below_ = \"West Virginia\"",
        "context": "CREATE TABLE table_1133844_4 (candidates_winning_candidate_in_bold VARCHAR, state__linked_to_summaries_below_ VARCHAR)",
        "question": "who were the winners in west virginia"
    },
    {
        "answer": "SELECT AVG(population) FROM table_name_83 WHERE median_household_income = \"$87,832\" AND number_of_households < 64 OFFSET 886",
        "context": "CREATE TABLE table_name_83 (population INTEGER, median_household_income VARCHAR, number_of_households VARCHAR)",
        "question": "What is the population where the median household income is $87,832 and there are fewer than 64,886 households?"
    },
    {
        "answer": "SELECT score1 FROM table_name_20 WHERE competition_or_tour = \"major league soccer all-star game\"",
        "context": "CREATE TABLE table_name_20 (score1 VARCHAR, competition_or_tour VARCHAR)",
        "question": "What is the score 1 for the major league soccer all-star game?"
    },
    {
        "answer": "SELECT college FROM table_2508633_9 WHERE nfl_team = \"New England Patriots\" AND position = \"Tight end\"",
        "context": "CREATE TABLE table_2508633_9 (college VARCHAR, nfl_team VARCHAR, position VARCHAR)",
        "question": "What college did the tight end draft pick for New England Patriots come from?"
    },
    {
        "answer": "SELECT team FROM table_name_53 WHERE losses > 5 AND position = 12",
        "context": "CREATE TABLE table_name_53 (team VARCHAR, losses VARCHAR, position VARCHAR)",
        "question": "Which Team has Losses larger than 5, and a Position of 12?"
    },
    {
        "answer": "SELECT COUNT(grand_prix) FROM table_1137702_3 WHERE winning_constructor = \"Benetton - Ford\" AND pole_position = \"Michael Schumacher\"",
        "context": "CREATE TABLE table_1137702_3 (grand_prix VARCHAR, winning_constructor VARCHAR, pole_position VARCHAR)",
        "question": "How many Grand Prix were the winning constructor Benetton - Ford and the pole position was Michael Schumacher?"
    },
    {
        "answer": "SELECT MIN(sipe_sipe_municipality) FROM table_2509113_2 WHERE language = \"Quechua\"",
        "context": "CREATE TABLE table_2509113_2 (sipe_sipe_municipality INTEGER, language VARCHAR)",
        "question": "What is the Sipe Sipe Municipality minimum if the language is Quechua?"
    },
    {
        "answer": "SELECT MIN(tomina_municipality) FROM table_2509350_3 WHERE el_villar_municipality = 4",
        "context": "CREATE TABLE table_2509350_3 (tomina_municipality INTEGER, el_villar_municipality VARCHAR)",
        "question": "Name the least tomina for el villar being 4"
    },
    {
        "answer": "SELECT pole_position FROM table_1140078_2 WHERE race = \"Belgian Grand Prix\"",
        "context": "CREATE TABLE table_1140078_2 (pole_position VARCHAR, race VARCHAR)",
        "question": "What is the pole position of the belgian grand prix?"
    },
    {
        "answer": "SELECT combaya_municipality FROM table_2509202_2 WHERE quiabaya_municipality = \"33\"",
        "context": "CREATE TABLE table_2509202_2 (combaya_municipality VARCHAR, quiabaya_municipality VARCHAR)",
        "question": "What is the number for combaya municipality when quiabaya municipality is 33?"
    },
    {
        "answer": "SELECT score FROM table_name_54 WHERE location_attendance = \"great western forum\"",
        "context": "CREATE TABLE table_name_54 (score VARCHAR, location_attendance VARCHAR)",
        "question": "What was the score of the game at Great Western Forum?"
    },
    {
        "answer": "SELECT COUNT(manager) FROM table_25129482_1 WHERE kitmaker = \"Puma\" AND location = \"Turku\"",
        "context": "CREATE TABLE table_25129482_1 (manager VARCHAR, kitmaker VARCHAR, location VARCHAR)",
        "question": "How many managers for club in Turku where kitmaker is Puma?"
    },
    {
        "answer": "SELECT power_capacity__gw_ FROM table_11456251_5 WHERE number_of_generators = 781",
        "context": "CREATE TABLE table_11456251_5 (power_capacity__gw_ VARCHAR, number_of_generators VARCHAR)",
        "question": "What is the power capacity when the generators were 781?"
    },
    {
        "answer": "SELECT torque_nm AS @rpm FROM table_11497980_1 WHERE gcm__kg__technical_capacity = \"23000\" AND engine_make_capacity = \"MWM 6.10 TCA-EURO III (Turbo Intercooler)\"",
        "context": "CREATE TABLE table_11497980_1 (torque_nm VARCHAR, gcm__kg__technical_capacity VARCHAR, engine_make_capacity VARCHAR)",
        "question": "If the engine make/capacity is MWM 6.10 TCA-EURO III (Turbo Intercooler) and  GVM (kg) Technical Capacity is 23000, what is the Torque Nm@rpm?"
    },
    {
        "answer": "SELECT former_school FROM table_25177625_1 WHERE hometown = \"East Brunswick, NJ\"",
        "context": "CREATE TABLE table_25177625_1 (former_school VARCHAR, hometown VARCHAR)",
        "question": "What were the former schools of the player from East Brunswick, NJ?"
    },
    {
        "answer": "SELECT gcm__kg__technical_capacity FROM table_11497980_1 WHERE transmission_make_type_speed = \"Eaton FS 5306-A Manual Synchromesh 6 Speed\"",
        "context": "CREATE TABLE table_11497980_1 (gcm__kg__technical_capacity VARCHAR, transmission_make_type_speed VARCHAR)",
        "question": "When the transmission make/type/speed is eaton fs 5306-a manual synchromesh 6 speed, what is the value of the gcm (kg) technical capacity?"
    },
    {
        "answer": "SELECT end_date_of__final__term FROM table_25182437_1 WHERE prime_minister = \"Palmer, Geoffrey Geoffrey Palmer\"",
        "context": "CREATE TABLE table_25182437_1 (end_date_of__final__term VARCHAR, prime_minister VARCHAR)",
        "question": "If the prime minister is Palmer, Geoffrey Geoffrey Palmer, what is the end date of (final) term?"
    },
    {
        "answer": "SELECT COUNT(year_of_previous_participation) FROM table_2518850_4 WHERE total_number_of_participation = 1 AND high_school_name = \"Maebashi Ikuei\"",
        "context": "CREATE TABLE table_2518850_4 (year_of_previous_participation VARCHAR, total_number_of_participation VARCHAR, high_school_name VARCHAR)",
        "question": "How many previous years did Maebashi Ikuei high school have a total number of 1 participation?"
    },
    {
        "answer": "SELECT acronym FROM table_1160660_1 WHERE university_name = \"Beirut Arab University\"",
        "context": "CREATE TABLE table_1160660_1 (acronym VARCHAR, university_name VARCHAR)",
        "question": "What is the acronym used for Beirut Arab University?"
    },
    {
        "answer": "SELECT COUNT(january_15_16) FROM table_25216791_3 WHERE august_21_22 = \"155\"",
        "context": "CREATE TABLE table_25216791_3 (january_15_16 VARCHAR, august_21_22 VARCHAR)",
        "question": "How many datas were recorded on January 15-16 if August 21-22 is 155?"
    },
    {
        "answer": "SELECT cores FROM table_name_3 WHERE release_date = \"april 2012\" AND release_price___usd__ = \"$393\" AND part_number_s_ = \"av8063801117503\"",
        "context": "CREATE TABLE table_name_3 (cores VARCHAR, part_number_s_ VARCHAR, release_date VARCHAR, release_price___usd__ VARCHAR)",
        "question": "How many cores does the processor released in April 2012 with a price of $393 and part number av8063801117503 have?"
    },
    {
        "answer": "SELECT area_in_1000km\u00b2__1930_ FROM table_11654169_1 WHERE voivodeship_separate_city = \"lubelskie\"",
        "context": "CREATE TABLE table_11654169_1 (area_in_1000km\u00b2__1930_ VARCHAR, voivodeship_separate_city VARCHAR)",
        "question": "List all areas within 1000 km in the city of Lubelskie?"
    },
    {
        "answer": "SELECT car_plates__since_1937_ FROM table_11654169_1 WHERE capital = \"Wilno\"",
        "context": "CREATE TABLE table_11654169_1 (car_plates__since_1937_ VARCHAR, capital VARCHAR)",
        "question": "List all car plates in the capital of Wilno since the year of 1937."
    },
    {
        "answer": "SELECT MIN(bronze) FROM table_name_45 WHERE total > 2 AND silver < 1 AND rank > 10 AND gold < 0",
        "context": "CREATE TABLE table_name_45 (bronze INTEGER, gold VARCHAR, rank VARCHAR, total VARCHAR, silver VARCHAR)",
        "question": "What is the smallest bronze value for countries with totals over 2, golds of 0, silvers under 1, and ranks over 10?"
    },
    {
        "answer": "SELECT team_classification FROM table_11667521_17 WHERE points_classification = \"Bradley Wiggins\"",
        "context": "CREATE TABLE table_11667521_17 (team_classification VARCHAR, points_classification VARCHAR)",
        "question": "WHAT TEAM CLASSIFIED IN THE STAGE WHERE BRADLEY WIGGINS WON THE POINTS CLASSIFICATION ?"
    },
    {
        "answer": "SELECT team FROM table_2522473_1 WHERE home_ground = \"Stemmemyren\"",
        "context": "CREATE TABLE table_2522473_1 (team VARCHAR, home_ground VARCHAR)",
        "question": "Which teams homeeground is Stemmemyren? "
    },
    {
        "answer": "SELECT home_ground FROM table_2522473_1 WHERE seasons = 27 AND home_city = \"Trondheim\"",
        "context": "CREATE TABLE table_2522473_1 (home_ground VARCHAR, seasons VARCHAR, home_city VARCHAR)",
        "question": "What is the home ground for the team whose home city is Trondheim with 27 seasons? "
    },
    {
        "answer": "SELECT interview FROM table_11674683_2 WHERE delegate = \"Peru\"",
        "context": "CREATE TABLE table_11674683_2 (interview VARCHAR, delegate VARCHAR)",
        "question": "Name the interview for peru delegate"
    },
    {
        "answer": "SELECT transmission FROM table_name_99 WHERE engine = \"2.0l\" AND acceleration_0_100km_h__0_62mph_ = \"10.5 s\"",
        "context": "CREATE TABLE table_name_99 (transmission VARCHAR, engine VARCHAR, acceleration_0_100km_h__0_62mph_ VARCHAR)",
        "question": "What is the transmission when the engine is 2.0l, and acceleration 0\u2013100km/h (0\u201362mph) is 10.5 s?"
    },
    {
        "answer": "SELECT swimsuit FROM table_11674683_2 WHERE delegate = \"South Africa\"",
        "context": "CREATE TABLE table_11674683_2 (swimsuit VARCHAR, delegate VARCHAR)",
        "question": "What are the swimsuits for south africa?"
    },
    {
        "answer": "SELECT production FROM table_name_5 WHERE engine = \"2.7l\" AND acceleration_0_100km_h__0_62mph_ = \"8.5 s\"",
        "context": "CREATE TABLE table_name_5 (production VARCHAR, engine VARCHAR, acceleration_0_100km_h__0_62mph_ VARCHAR)",
        "question": "What is the production when engine is 2.7l, and acceleration 0\u2013100km/h (0\u201362mph) is 8.5 s?"
    },
    {
        "answer": "SELECT imed_avicenna_listed FROM table_name_31 WHERE regional_offshore = \"offshore\" AND country_territory = \"saint kitts and nevis\" AND degree = \"md\" AND established < 2000",
        "context": "CREATE TABLE table_name_31 (imed_avicenna_listed VARCHAR, established VARCHAR, degree VARCHAR, regional_offshore VARCHAR, country_territory VARCHAR)",
        "question": "What is the imed/avicenna listed for a medical school offshore in saint kitts and nevis which was established before 2000 and will give you an MD?"
    },
    {
        "answer": "SELECT hometown FROM table_11677100_11 WHERE position = \"Catcher\"",
        "context": "CREATE TABLE table_11677100_11 (hometown VARCHAR, position VARCHAR)",
        "question": "WHAT HOMETOWN DOES HE PLAY AS THE CATCHER FOR?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_2527063_3 WHERE district = \"East Midnapore\"",
        "context": "CREATE TABLE table_2527063_3 (rank VARCHAR, district VARCHAR)",
        "question": "Name the total number of rank for east midnapore"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_38 WHERE matches < 3",
        "context": "CREATE TABLE table_name_38 (rank INTEGER, matches INTEGER)",
        "question": "What is the average rank of a player with fewer than 3 matches?"
    },
    {
        "answer": "SELECT COUNT(player) FROM table_11677691_4 WHERE hometown = \"Cincinnati, Ohio\"",
        "context": "CREATE TABLE table_11677691_4 (player VARCHAR, hometown VARCHAR)",
        "question": "How many players hometown was Cincinnati, Ohio?"
    },
    {
        "answer": "SELECT school FROM table_11677691_7 WHERE college = \"Auburn\"",
        "context": "CREATE TABLE table_11677691_7 (school VARCHAR, college VARCHAR)",
        "question": "Which school did the player then go to Auburn?"
    },
    {
        "answer": "SELECT college FROM table_11677691_8 WHERE player = \"Robert Nkemdiche \u2021\"",
        "context": "CREATE TABLE table_11677691_8 (college VARCHAR, player VARCHAR)",
        "question": "Where did robert nkemdiche \u2021 go to college"
    },
    {
        "answer": "SELECT MIN(goals) FROM table_name_84 WHERE years = \"2007/08\" AND name = \"joe keenan\" AND assists > 1",
        "context": "CREATE TABLE table_name_84 (goals INTEGER, assists VARCHAR, years VARCHAR, name VARCHAR)",
        "question": "What is the lowest number of goals joe keenan, who has more than 1 assists, had in 2007/08?"
    },
    {
        "answer": "SELECT COUNT(years_for_rockets) FROM table_11734041_1 WHERE school_club_team_country = \"Iowa State\"",
        "context": "CREATE TABLE table_11734041_1 (years_for_rockets VARCHAR, school_club_team_country VARCHAR)",
        "question": "How may times did a player that attended Iowa state appear on the all time roster?"
    },
    {
        "answer": "SELECT height_in_ft FROM table_11734041_1 WHERE years_for_rockets = \"1992-93\"",
        "context": "CREATE TABLE table_11734041_1 (height_in_ft VARCHAR, years_for_rockets VARCHAR)",
        "question": "What height was the player that played for the Rockets between 1992-93?"
    },
    {
        "answer": "SELECT COUNT(years_for_rockets) FROM table_11734041_1 WHERE position = \"Center\" AND school_club_team_country = \"Oral Roberts\"",
        "context": "CREATE TABLE table_11734041_1 (years_for_rockets VARCHAR, position VARCHAR, school_club_team_country VARCHAR)",
        "question": "How many times did a center that attended Oral Roberts play for the Rockets?"
    },
    {
        "answer": "SELECT COUNT(august_21_22) FROM table_25287007_2 WHERE june_10_11 = \"June 11, 1983\"",
        "context": "CREATE TABLE table_25287007_2 (august_21_22 VARCHAR, june_10_11 VARCHAR)",
        "question": "How many solar eclipse during August 21-22 where June 10-11 on June 11, 1983?"
    },
    {
        "answer": "SELECT height_in_ft FROM table_11734041_16 WHERE years_for_rockets = \"1973-78\"",
        "context": "CREATE TABLE table_11734041_16 (height_in_ft VARCHAR, years_for_rockets VARCHAR)",
        "question": "What is the height in ft for the rockets from 1973-78?"
    },
    {
        "answer": "SELECT SUM(lane) FROM table_name_82 WHERE reaction_time < 0.218 AND time > 44.74 AND nationality = \"great britain\"",
        "context": "CREATE TABLE table_name_82 (lane INTEGER, nationality VARCHAR, reaction_time VARCHAR, time VARCHAR)",
        "question": "What is the Lane of the Athlete from Great Britain with a Reaction time of less than 0.218 and a Time larger than 44.74?"
    },
    {
        "answer": "SELECT august_21_22 FROM table_25287007_2 WHERE january_15_16 = \"141\"",
        "context": "CREATE TABLE table_25287007_2 (august_21_22 VARCHAR, january_15_16 VARCHAR)",
        "question": "How many solar eclipse during august 21-22 and January 15-16 is 141?"
    },
    {
        "answer": "SELECT SUM(body_width_mm) FROM table_name_66 WHERE part_number = \"tsop40/44\" AND body_length_mm < 18.42",
        "context": "CREATE TABLE table_name_66 (body_width_mm INTEGER, part_number VARCHAR, body_length_mm VARCHAR)",
        "question": "How much Body Width/mm has a Part Number of tsop40/44, and a Body Length/mm smaller than 18.42?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_49 WHERE county = \"offaly\" AND player = \"mark corrigan\" AND total < 8",
        "context": "CREATE TABLE table_name_49 (rank INTEGER, total VARCHAR, county VARCHAR, player VARCHAR)",
        "question": "What's the highest Rank for the County of Offaly, the Player of Mark Corrigan, and the Total that is smaller than 8?"
    },
    {
        "answer": "SELECT attendance FROM table_name_57 WHERE channel = \"espn\" AND date = \"september 5, 2002\"",
        "context": "CREATE TABLE table_name_57 (attendance VARCHAR, channel VARCHAR, date VARCHAR)",
        "question": "Which attendance has a Channel of espn, and a Date of september 5, 2002?"
    },
    {
        "answer": "SELECT introduced FROM table_1181375_1 WHERE notes = \"9 withdrawn in 1946 after fire\"",
        "context": "CREATE TABLE table_1181375_1 (introduced VARCHAR, notes VARCHAR)",
        "question": " what's the\u00a0introduced\u00a0where\u00a0notes\u00a0is 9 withdrawn in 1946 after fire"
    },
    {
        "answer": "SELECT date FROM table_name_79 WHERE stadium = \"giants stadium\" AND week < 13 AND opponent = \"seattle seahawks\"",
        "context": "CREATE TABLE table_name_79 (date VARCHAR, opponent VARCHAR, stadium VARCHAR, week VARCHAR)",
        "question": "Which Date has a Stadium of giants stadium, and a Week smaller than 13, and an Opponent of seattle seahawks?"
    },
    {
        "answer": "SELECT COUNT(music_director) FROM table_11827596_4 WHERE co_singer = \"Suresh Wadkar\" AND film_name = \"Bhayanak\"",
        "context": "CREATE TABLE table_11827596_4 (music_director VARCHAR, co_singer VARCHAR, film_name VARCHAR)",
        "question": "What was the number of music directors where the suresh wadkar co singer of bhayanak?"
    },
    {
        "answer": "SELECT COUNT(white__both_hispanic_and_non_hispanic_) FROM table_name_77 WHERE black__both_hispanic_and_non_hispanic_ = 9.9 AND hispanic__of_any_race_ < 99.5",
        "context": "CREATE TABLE table_name_77 (white__both_hispanic_and_non_hispanic_ VARCHAR, black__both_hispanic_and_non_hispanic_ VARCHAR, hispanic__of_any_race_ VARCHAR)",
        "question": "What is the total number of white (Hispanic/Non-Hispanic) having a black (Hispanic/Non-Hispanic) of 9.9 and Hispanic under 99.5?"
    },
    {
        "answer": "SELECT AVG(black__both_hispanic_and_non_hispanic_) FROM table_name_99 WHERE white__both_hispanic_and_non_hispanic_ < 61.9 AND multiracial__both_hispanic_and_non_hispanic_ < 12.5 AND hispanic__of_any_race_ < 99.4",
        "context": "CREATE TABLE table_name_99 (black__both_hispanic_and_non_hispanic_ INTEGER, hispanic__of_any_race_ VARCHAR, white__both_hispanic_and_non_hispanic_ VARCHAR, multiracial__both_hispanic_and_non_hispanic_ VARCHAR)",
        "question": "What is the average black value (Hispanic/Non-Hispanic) having a white (Hispanic/Non-Hispanic) under 61.9, Multiracial (Hispanic/Non-Hispanic) under 12.5 and Hispanic under 99.4?"
    },
    {
        "answer": "SELECT MAX(amerindian__both_hispanic_and_non_hispanic_) FROM table_name_67 WHERE black__both_hispanic_and_non_hispanic_ = 15.7 AND white__both_hispanic_and_non_hispanic_ > 69.5",
        "context": "CREATE TABLE table_name_67 (amerindian__both_hispanic_and_non_hispanic_ INTEGER, black__both_hispanic_and_non_hispanic_ VARCHAR, white__both_hispanic_and_non_hispanic_ VARCHAR)",
        "question": "What is the highest Amerindian (Hispanic/Non-Hispanic) value having a Black (Hispanic/Non-Hispanic) of 15.7 and White (Hispanic/Non-Hispanic) over 69.5?"
    },
    {
        "answer": "SELECT black__both_hispanic_and_non_hispanic_ FROM table_name_63 WHERE white__both_hispanic_and_non_hispanic_ < 80.6 AND n_asia__both_hispanic_and_non_hispanic_ = 0.1 AND amerindian__both_hispanic_and_non_hispanic_ < 0.6000000000000001 AND municipality__2010_ = \"vega baja\"",
        "context": "CREATE TABLE table_name_63 (black__both_hispanic_and_non_hispanic_ VARCHAR, municipality__2010_ VARCHAR, amerindian__both_hispanic_and_non_hispanic_ VARCHAR, white__both_hispanic_and_non_hispanic_ VARCHAR, n_asia__both_hispanic_and_non_hispanic_ VARCHAR)",
        "question": "What is the Black (Hispanic/Non-Hispanic) value having a white (Hispanic/Non-Hispanic) under 80.6, Asian (Hispanic/Non-Hispanic) of 0.1, Amerindian (Hispanic/Non-Hispanic) under 0.6000000000000001, and municipality of Vega Baja?"
    },
    {
        "answer": "SELECT desired_rate__p_ FROM table_25316812_1 WHERE rate_limit__p_ = \"50.33\"",
        "context": "CREATE TABLE table_25316812_1 (desired_rate__p_ VARCHAR, rate_limit__p_ VARCHAR)",
        "question": "What is the desired rate when the rate limit (p) is 50.33?"
    },
    {
        "answer": "SELECT launch_site FROM table_11869952_3 WHERE mission = \"Test mission: war heads and Missile payload\" AND results = \"Partial Failure\"",
        "context": "CREATE TABLE table_11869952_3 (launch_site VARCHAR, mission VARCHAR, results VARCHAR)",
        "question": "Where did Test Mission: War Heads and Missile Payload launch when there was a partial failure?"
    },
    {
        "answer": "SELECT AVG(enrollment) FROM table_name_3 WHERE school = \"hamilton community\"",
        "context": "CREATE TABLE table_name_3 (enrollment INTEGER, school VARCHAR)",
        "question": "What is the enrollment at the school of Hamilton community?"
    },
    {
        "answer": "SELECT denomination FROM table_11900773_4 WHERE theme = \"Opera, L\u00e9opold Simoneau and Pierrette Alarie\"",
        "context": "CREATE TABLE table_11900773_4 (denomination VARCHAR, theme VARCHAR)",
        "question": "What denominations are the stamps with themes opera, l\u00e9opold simoneau and pierrette alarie?"
    },
    {
        "answer": "SELECT nation FROM table_name_39 WHERE sport = \"shooting\" AND total = 7 AND years = \"1920\"",
        "context": "CREATE TABLE table_name_39 (nation VARCHAR, years VARCHAR, sport VARCHAR, total VARCHAR)",
        "question": "What nation scored 7 in shooting in 1920?"
    },
    {
        "answer": "SELECT COUNT(design) FROM table_11900773_6 WHERE theme = \"XII Summit de la Francophonie\"",
        "context": "CREATE TABLE table_11900773_6 (design VARCHAR, theme VARCHAR)",
        "question": "How many stamps were designed for the theme of XII Summit de la Francophonie?"
    },
    {
        "answer": "SELECT first_day_cover_cancellation FROM table_11900773_6 WHERE date_of_issue = \"3 April 2008\" AND theme = \"IIHF World Championships, Quebec City\"",
        "context": "CREATE TABLE table_11900773_6 (first_day_cover_cancellation VARCHAR, date_of_issue VARCHAR, theme VARCHAR)",
        "question": "Where is the first day cover cancellation for the 3 April 2008 IIHF World Championships, Quebec City stamp?"
    },
    {
        "answer": "SELECT Major AS facility FROM table_25346763_1 WHERE facility = \"Washington Corrections Center for Women (WCCW)\"",
        "context": "CREATE TABLE table_25346763_1 (Major VARCHAR, facility VARCHAR)",
        "question": "Is the Washington Corrections Center for Women (WCCW) a major facility?"
    },
    {
        "answer": "SELECT rank FROM table_11926114_1 WHERE finale = 37",
        "context": "CREATE TABLE table_11926114_1 (rank VARCHAR, finale VARCHAR)",
        "question": "What is the rank of finale 37?"
    },
    {
        "answer": "SELECT electorate FROM table_1193568_1 WHERE election_date = \"16 Cannot handle non-empty timestamp argument!\"",
        "context": "CREATE TABLE table_1193568_1 (electorate VARCHAR, election_date VARCHAR)",
        "question": " what's the\u00a0electorate\u00a0where\u00a0election date\u00a0is 16 cannot handle non-empty timestamp argument!"
    },
    {
        "answer": "SELECT away_team FROM table_name_95 WHERE home_team = \"brighton & hove albion\"",
        "context": "CREATE TABLE table_name_95 (away_team VARCHAR, home_team VARCHAR)",
        "question": "Who was the away team when Brighton & Hove Albion was home?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_25352324_5 WHERE player = \"Sophia Witherspoon\"",
        "context": "CREATE TABLE table_25352324_5 (points VARCHAR, player VARCHAR)",
        "question": "How many values for points have Sophia Witherspoon as the player?"
    },
    {
        "answer": "SELECT COUNT(team) FROM table_25361570_2 WHERE position_in_table = \"11th\" AND date_of_appointment = \"September 10\"",
        "context": "CREATE TABLE table_25361570_2 (team VARCHAR, position_in_table VARCHAR, date_of_appointment VARCHAR)",
        "question": "Name the number of teams for 11th position september 10"
    },
    {
        "answer": "SELECT height FROM table_25360865_1 WHERE name = \"Demetrius Jemison\"",
        "context": "CREATE TABLE table_25360865_1 (height VARCHAR, name VARCHAR)",
        "question": "Name the height for demetrius jemison"
    },
    {
        "answer": "SELECT f_laps FROM table_25369796_1 WHERE team = \"HBR Motorsport\"",
        "context": "CREATE TABLE table_25369796_1 (f_laps VARCHAR, team VARCHAR)",
        "question": "What was the recorded flaps of HBR Motorsport team?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_93 WHERE date = \"may 26, 1996\"",
        "context": "CREATE TABLE table_name_93 (runner_s__up VARCHAR, date VARCHAR)",
        "question": "Who were the runners-up in the tournament on May 26, 1996?"
    },
    {
        "answer": "SELECT success FROM table_12078626_1 WHERE date_of_completion = \"September 28, 2007\"",
        "context": "CREATE TABLE table_12078626_1 (success VARCHAR, date_of_completion VARCHAR)",
        "question": " what's the\u00a0success\u00a0where\u00a0date of completion\u00a0is september 28, 2007"
    },
    {
        "answer": "SELECT date_of_completion FROM table_12078626_1 WHERE deadline_for_completion = \"September 30, 2007\"",
        "context": "CREATE TABLE table_12078626_1 (date_of_completion VARCHAR, deadline_for_completion VARCHAR)",
        "question": " what's the\u00a0date of completion\u00a0where\u00a0deadline for completion\u00a0is september 30, 2007"
    },
    {
        "answer": "SELECT torque FROM table_name_97 WHERE engine_code = \"n46b20\" AND power = \"ps (kw; hp)@6400\"",
        "context": "CREATE TABLE table_name_97 (torque VARCHAR, engine_code VARCHAR, power VARCHAR)",
        "question": "What is the torque when engine code is N46B20 and power is ps (kw; hp)@6400?"
    },
    {
        "answer": "SELECT COUNT(type) FROM table_2538117_2 WHERE founding_university = \"San Diego State University\"",
        "context": "CREATE TABLE table_2538117_2 (type VARCHAR, founding_university VARCHAR)",
        "question": "how many types of organization were founded in san diego state university? "
    },
    {
        "answer": "SELECT romaji_title FROM table_name_43 WHERE tv_station = \"tbs\" AND episodes < 11",
        "context": "CREATE TABLE table_name_43 (romaji_title VARCHAR, tv_station VARCHAR, episodes VARCHAR)",
        "question": "What is the Romanji Title of a show on TBS with less than 11 episodes?"
    },
    {
        "answer": "SELECT MIN(first_elected) FROM table_name_19 WHERE party = \"republican\" AND district = \"minnesota 1\"",
        "context": "CREATE TABLE table_name_19 (first_elected INTEGER, party VARCHAR, district VARCHAR)",
        "question": "What is the lowest First Elected, when Party is \"Republican\", and when District is \"Minnesota 1\"?"
    },
    {
        "answer": "SELECT womens_singles FROM table_12186309_1 WHERE mens_doubles = \"Steen Fladberg Jens Peter Nierhoff\"",
        "context": "CREATE TABLE table_12186309_1 (womens_singles VARCHAR, mens_doubles VARCHAR)",
        "question": "What was the women's singles were men's doubles were steen fladberg jens peter nierhoff?"
    },
    {
        "answer": "SELECT nickname FROM table_2538117_7 WHERE founding_university = \"Charlotte, NC\"",
        "context": "CREATE TABLE table_2538117_7 (nickname VARCHAR, founding_university VARCHAR)",
        "question": "If the founding university is in Charlotte, NC, what is the nickname?"
    },
    {
        "answer": "SELECT womens_doubles FROM table_12194021_1 WHERE mens_singles = \"Arvind Bhat\" AND mixed_doubles = \"Valiyaveetil Diju Jwala Gutta\"",
        "context": "CREATE TABLE table_12194021_1 (womens_doubles VARCHAR, mens_singles VARCHAR, mixed_doubles VARCHAR)",
        "question": "In womens doubles and mens singles, what years did Arvind Bhat or Valiyaveetil Diju Jwala Gutta win?"
    },
    {
        "answer": "SELECT MIN(laps) FROM table_name_14 WHERE bike = \"kawasaki zx-6r\" AND time = \"+26.891\"",
        "context": "CREATE TABLE table_name_14 (laps INTEGER, bike VARCHAR, time VARCHAR)",
        "question": "Which Laps have a Bike of kawasaki zx-6r, and a Time of +26.891?"
    },
    {
        "answer": "SELECT date_premiered__2009_ FROM table_name_40 WHERE contestant_name = \"kareena kapoor\"",
        "context": "CREATE TABLE table_name_40 (date_premiered__2009_ VARCHAR, contestant_name VARCHAR)",
        "question": "What date premiered (2009) has kareena kapoor as the contestant name?"
    },
    {
        "answer": "SELECT fy08_$millions FROM table_25438110_5 WHERE fy07_$millions = \"$120\"",
        "context": "CREATE TABLE table_25438110_5 (fy08_$millions VARCHAR, fy07_$millions VARCHAR)",
        "question": "What is the FY2008 $mil value associated with a FY2007 $mil value of exactly $120?"
    },
    {
        "answer": "SELECT MAX(river_mile) FROM table_name_71 WHERE pool_length__miles_ = \"42.2\" AND lock_lift_drop__in_feet_ = \"21\"",
        "context": "CREATE TABLE table_name_71 (river_mile INTEGER, pool_length__miles_ VARCHAR, lock_lift_drop__in_feet_ VARCHAR)",
        "question": "What is the highest River Mile that has a pool length of 42.2 miles or a lock/lift drop of 21 feet?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_25459168_2 WHERE fastest_lap = \"Jo\u00e3o Victor Horto\"",
        "context": "CREATE TABLE table_25459168_2 (round VARCHAR, fastest_lap VARCHAR)",
        "question": "How many rounds did Jo\u00e3o Victor Horto achieved the fastest lap?"
    },
    {
        "answer": "SELECT location_[l_] FROM table_name_8 WHERE river_mile > 938.9 AND locks_ & _dam = \"olmsted locks and dam\"",
        "context": "CREATE TABLE table_name_8 (location_ VARCHAR, l_ VARCHAR, river_mile VARCHAR, locks_ VARCHAR, _dam VARCHAR)",
        "question": "What is the location of the river mile that is larger than 938.9, and Olmsted Locks and Dam?"
    },
    {
        "answer": "SELECT notes FROM table_name_8 WHERE country = \"south africa\"",
        "context": "CREATE TABLE table_name_8 (notes VARCHAR, country VARCHAR)",
        "question": "What are the notes for South Africa?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_24 WHERE notes = \"fc\" AND country = \"south africa\"",
        "context": "CREATE TABLE table_name_24 (rank VARCHAR, notes VARCHAR, country VARCHAR)",
        "question": "What is the total rank and fc notes from South Africa?"
    },
    {
        "answer": "SELECT COUNT(founded) FROM table_12434380_1 WHERE institution = \"Kansas City Kansas Community College\"",
        "context": "CREATE TABLE table_12434380_1 (founded VARCHAR, institution VARCHAR)",
        "question": "When was the institution of Kansas city Kansas community college founded?"
    },
    {
        "answer": "SELECT mascot FROM table_12434380_1 WHERE founded = 1923 AND school_colors = \"Blue, Red & White\"",
        "context": "CREATE TABLE table_12434380_1 (mascot VARCHAR, founded VARCHAR, school_colors VARCHAR)",
        "question": "What is the mascot for the school founded in 1923 with the school colors of blue, red & white?"
    },
    {
        "answer": "SELECT license FROM table_25474825_1 WHERE description = \"Tool for designing and executing workflows\"",
        "context": "CREATE TABLE table_25474825_1 (license VARCHAR, description VARCHAR)",
        "question": "What is the license that is described as a tool for designing and executing workflows?"
    },
    {
        "answer": "SELECT fixed_charge___rs__kwh_ FROM table_25479607_3 WHERE unit__kwh__time_range = \"I-2: Peak (18:30-22:30)\"",
        "context": "CREATE TABLE table_25479607_3 (fixed_charge___rs__kwh_ VARCHAR, unit__kwh__time_range VARCHAR)",
        "question": "What is the fixed charge for the user with a unit/time range of i-2: peak (18:30-22:30)?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_1 WHERE artist = \"mia martini\"",
        "context": "CREATE TABLE table_name_1 (points VARCHAR, artist VARCHAR)",
        "question": "How many points does mia martini have?"
    },
    {
        "answer": "SELECT artist FROM table_name_92 WHERE english_translation = \"all this is music\"",
        "context": "CREATE TABLE table_name_92 (artist VARCHAR, english_translation VARCHAR)",
        "question": "Which Artist has an English translation of all this is music?"
    },
    {
        "answer": "SELECT outcome FROM table_25505246_8 WHERE partner = \"Caroline Wozniacki\"",
        "context": "CREATE TABLE table_25505246_8 (outcome VARCHAR, partner VARCHAR)",
        "question": "How did the match end when she played with caroline wozniacki?"
    },
    {
        "answer": "SELECT COUNT(location) FROM table_12547903_3 WHERE callsign = \"DXCL\"",
        "context": "CREATE TABLE table_12547903_3 (location VARCHAR, callsign VARCHAR)",
        "question": "How many places featured the DXCL Callsign?"
    },
    {
        "answer": "SELECT population__maryborough_ FROM table_12576536_1 WHERE population__woocoo_ = 2700",
        "context": "CREATE TABLE table_12576536_1 (population__maryborough_ VARCHAR, population__woocoo_ VARCHAR)",
        "question": "Name the population of maryborough when population of woocoo is 2700"
    },
    {
        "answer": "SELECT AVG(gold) FROM table_name_90 WHERE total > 1 AND bronze < 10 AND nation = \"switzerland\" AND silver > 1",
        "context": "CREATE TABLE table_name_90 (gold INTEGER, silver VARCHAR, nation VARCHAR, total VARCHAR, bronze VARCHAR)",
        "question": "What is the average number of gold medals Switzerland received when they ranked larger than 1st and received fewer than 10 bronze medals and more than 1 silver medal?"
    },
    {
        "answer": "SELECT 2007 AS _estimate FROM table_12720275_1 WHERE combined_statistical_area__or_metropolitan_statistical_area_if_noted_ = \"Tulsa-Bartlesville, OK CSA\"",
        "context": "CREATE TABLE table_12720275_1 (combined_statistical_area__or_metropolitan_statistical_area_if_noted_ VARCHAR)",
        "question": "What is the 2007 estimate for tulsa-bartlesville, ok csa?"
    },
    {
        "answer": "SELECT COUNT(*) FROM table_12720275_1 WHERE rank__csa_ = \"(MSA 348)\"",
        "context": "CREATE TABLE table_12720275_1 (rank__csa_ VARCHAR)",
        "question": "How many times was the rank (csa) was (msa 348)?"
    },
    {
        "answer": "SELECT challenge FROM table_25531112_2 WHERE event = \"Australian Grand Prix\"",
        "context": "CREATE TABLE table_25531112_2 (challenge VARCHAR, event VARCHAR)",
        "question": "Who made the challenge in the Australian Grand Prix?"
    },
    {
        "answer": "SELECT shirt_sponsor FROM table_25527255_2 WHERE average_squad_age = \"25.46\"",
        "context": "CREATE TABLE table_25527255_2 (shirt_sponsor VARCHAR, average_squad_age VARCHAR)",
        "question": "Who is the shirt sponsor of the team with an average squad age of 25.46?"
    },
    {
        "answer": "SELECT verbal_noun FROM table_12784134_1 WHERE participle = \"e-duki\"",
        "context": "CREATE TABLE table_12784134_1 (verbal_noun VARCHAR, participle VARCHAR)",
        "question": "What is the verbal noun connected to the participle e-duki?"
    },
    {
        "answer": "SELECT total_fat FROM table_name_33 WHERE smoke_point = \"\u00b0c ()\" AND polyunsaturated_fat = \"37g\"",
        "context": "CREATE TABLE table_name_33 (total_fat VARCHAR, smoke_point VARCHAR, polyunsaturated_fat VARCHAR)",
        "question": "What is the total fat with a smoke point of \u00b0c () and 37g of polyunsaturated fat?"
    },
    {
        "answer": "SELECT monounsaturated_fat FROM table_name_85 WHERE smoke_point = \"\u00b0c ()\" AND total_fat = \"100g\" AND polyunsaturated_fat = \"11g\" AND saturated_fat = \"14g\"",
        "context": "CREATE TABLE table_name_85 (monounsaturated_fat VARCHAR, saturated_fat VARCHAR, polyunsaturated_fat VARCHAR, smoke_point VARCHAR, total_fat VARCHAR)",
        "question": "What is the monounsaturated fat with a smoke point of \u00b0c (), a total fat of 100g, 11g of polyunsaturated fat, and 14g of saturated fat?"
    },
    {
        "answer": "SELECT original_air_date FROM table_25548505_1 WHERE us_viewers__millions_ = \"5.30\"",
        "context": "CREATE TABLE table_25548505_1 (original_air_date VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "What was the original air date of the episode that had 5.30 million U.S. viewers? "
    },
    {
        "answer": "SELECT area__km\u00b2_ FROM table_255602_1 WHERE population__2010_ = 38062",
        "context": "CREATE TABLE table_255602_1 (area__km\u00b2_ VARCHAR, population__2010_ VARCHAR)",
        "question": "What is the area where population in 2010 is 38062?"
    },
    {
        "answer": "SELECT COUNT(pop_density__per_km\u00b2_) FROM table_255602_1 WHERE area__km\u00b2_ = \"48.67\"",
        "context": "CREATE TABLE table_255602_1 (pop_density__per_km\u00b2_ VARCHAR, area__km\u00b2_ VARCHAR)",
        "question": "What is the population density where area is 48.67?"
    },
    {
        "answer": "SELECT sail_number FROM table_25561560_3 WHERE yacht = \"Two True\"",
        "context": "CREATE TABLE table_25561560_3 (sail_number VARCHAR, yacht VARCHAR)",
        "question": "What was the sail number of Two True?"
    },
    {
        "answer": "SELECT yacht FROM table_25561560_3 WHERE skipper = \"Andrew Saies\"",
        "context": "CREATE TABLE table_25561560_3 (yacht VARCHAR, skipper VARCHAR)",
        "question": "What yacht did Andrew Saies sail on?"
    },
    {
        "answer": "SELECT AVG(bronze) FROM table_name_80 WHERE silver = 0 AND rank = \"17\" AND gold < 1",
        "context": "CREATE TABLE table_name_80 (bronze INTEGER, gold VARCHAR, silver VARCHAR, rank VARCHAR)",
        "question": "What average bronze has 0 as the silver, 17 as the rank, and a gold less than 1?"
    },
    {
        "answer": "SELECT player FROM table_12962773_2 WHERE height = \"2.01\"",
        "context": "CREATE TABLE table_12962773_2 (player VARCHAR, height VARCHAR)",
        "question": "What player is 2.01 m tall?"
    },
    {
        "answer": "SELECT director FROM table_name_67 WHERE writer = \"russell t davies and james moran\"",
        "context": "CREATE TABLE table_name_67 (director VARCHAR, writer VARCHAR)",
        "question": "Who was the director of the episode written by Russell T Davies and James Moran?"
    },
    {
        "answer": "SELECT yacht AS type FROM table_25594888_1 WHERE skipper = \"Bob Oatley\"",
        "context": "CREATE TABLE table_25594888_1 (yacht VARCHAR, skipper VARCHAR)",
        "question": "What yacht type is involved where Bob Oatley is the skipper?"
    },
    {
        "answer": "SELECT MIN(no) FROM table_12962773_4 WHERE player = \"Zoran Erceg\"",
        "context": "CREATE TABLE table_12962773_4 (no INTEGER, player VARCHAR)",
        "question": "What No is the player Zoran Erceg"
    },
    {
        "answer": "SELECT the_icelandic_of_the_glossary FROM table_13003460_1 WHERE the_basque_of_the_glossary = \"presenta for mi locaria\"",
        "context": "CREATE TABLE table_13003460_1 (the_icelandic_of_the_glossary VARCHAR, the_basque_of_the_glossary VARCHAR)",
        "question": "What is the iclandic of the glossary for presenta for mi locaria"
    },
    {
        "answer": "SELECT model_number FROM table_1300080_1 WHERE printer_ports = \"Three Parallel\"",
        "context": "CREATE TABLE table_1300080_1 (model_number VARCHAR, printer_ports VARCHAR)",
        "question": "What is the number of the model with three parallel printer ports?"
    },
    {
        "answer": "SELECT player_name FROM table_name_75 WHERE pick = \"15\" AND year_[a_] = 2000",
        "context": "CREATE TABLE table_name_75 (player_name VARCHAR, pick VARCHAR, year_ VARCHAR, a_ VARCHAR)",
        "question": "who is the player when the pick is 15 and the year [A] is 2000?"
    },
    {
        "answer": "SELECT to_par FROM table_name_66 WHERE country = \"united states\" AND player = \"cristie kerr\"",
        "context": "CREATE TABLE table_name_66 (to_par VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "What is the to par of United States' Cristie Kerr?"
    },
    {
        "answer": "SELECT no_in_series FROM table_25604014_6 WHERE directed_by = \"Win Phelps\" AND no_in_season = 11",
        "context": "CREATE TABLE table_25604014_6 (no_in_series VARCHAR, directed_by VARCHAR, no_in_season VARCHAR)",
        "question": "What are the number in series of the pieces directed by Win Phelps and which number in season is 11?"
    },
    {
        "answer": "SELECT 3 AS rd FROM table_1310499_1 WHERE input_splines = 26 AND tag_id = \"1386-000-017\"",
        "context": "CREATE TABLE table_1310499_1 (input_splines VARCHAR, tag_id VARCHAR)",
        "question": "What is the 3rd ratio for tag number 1386-000-017 and input splines of 26?"
    },
    {
        "answer": "SELECT team_2 FROM table_name_32 WHERE team_1 = \"tatung\" AND ground = \"national pei men senior high school\"",
        "context": "CREATE TABLE table_name_32 (team_2 VARCHAR, team_1 VARCHAR, ground VARCHAR)",
        "question": "What team was 2 when Tatung was team 1 at National Pei Men Senior High School?"
    },
    {
        "answer": "SELECT COUNT(population__1991_) FROM table_2562572_2 WHERE city___municipality = \"Be\u010dej\"",
        "context": "CREATE TABLE table_2562572_2 (population__1991_ VARCHAR, city___municipality VARCHAR)",
        "question": "What is the number of 1991 populations named Be\u010dej?"
    },
    {
        "answer": "SELECT COUNT(city___municipality) FROM table_2562572_2 WHERE urban_settlement = \"Srbobran\"",
        "context": "CREATE TABLE table_2562572_2 (city___municipality VARCHAR, urban_settlement VARCHAR)",
        "question": "What is the number of cities/municipalities having an urban settlement of Srbobran?"
    },
    {
        "answer": "SELECT MAX(draw) FROM table_name_83 WHERE points > 31 AND place > 6 AND english_translation = \"listen to me\"",
        "context": "CREATE TABLE table_name_83 (draw INTEGER, english_translation VARCHAR, points VARCHAR, place VARCHAR)",
        "question": "What is the highest draw number when there are more than 31 points, a rank greater than 6, and the English translation is listen to me?"
    },
    {
        "answer": "SELECT settlement FROM table_2562572_25 WHERE dominant_religion__2002_ = \"Orthodox Christianity\" AND type = \"village\" AND cyrillic_name_other_names = \"\u0420\u0430\u0442\u043a\u043e\u0432\u043e\"",
        "context": "CREATE TABLE table_2562572_25 (settlement VARCHAR, cyrillic_name_other_names VARCHAR, dominant_religion__2002_ VARCHAR, type VARCHAR)",
        "question": "When  \u0440\u0430\u0442\u043a\u043e\u0432\u043e is cyrillic name other names and village is the type and orthodox Christianity is the dominant religion of  2002 what is the settlement? "
    },
    {
        "answer": "SELECT largest_ethnic_group__2002_ FROM table_2562572_25 WHERE cyrillic_name_other_names = \"\u0414\u0435\u0440\u043e\u045a\u0435\"",
        "context": "CREATE TABLE table_2562572_25 (largest_ethnic_group__2002_ VARCHAR, cyrillic_name_other_names VARCHAR)",
        "question": "When \u0434\u0435\u0440\u043e\u045a\u0435 is the cyrillic name other names what is the largest ethnic group of 2002?"
    },
    {
        "answer": "SELECT backed_with FROM table_name_24 WHERE record_label = \"wild world\" AND date > 2008",
        "context": "CREATE TABLE table_name_24 (backed_with VARCHAR, record_label VARCHAR, date VARCHAR)",
        "question": "What's the Backed after 2008 with a label of Wild World?"
    },
    {
        "answer": "SELECT MIN(date) FROM table_name_74 WHERE other_details = \"1000 copies\"",
        "context": "CREATE TABLE table_name_74 (date INTEGER, other_details VARCHAR)",
        "question": "What's the date for Details of 1000 copies?"
    },
    {
        "answer": "SELECT COUNT(part_6) FROM table_13241993_3 WHERE episode__number = 5",
        "context": "CREATE TABLE table_13241993_3 (part_6 VARCHAR, episode__number VARCHAR)",
        "question": "How many part 6 parts are there in the episode number 5?"
    },
    {
        "answer": "SELECT record_medal_event FROM table_name_33 WHERE sport = \"athletics\" AND athlete = \"robert garrett\" AND medal_count < 3",
        "context": "CREATE TABLE table_name_33 (record_medal_event VARCHAR, medal_count VARCHAR, sport VARCHAR, athlete VARCHAR)",
        "question": "What record medal event has athletics as the sport, with robert garrett as the athlete, and a medal count less than 3?"
    },
    {
        "answer": "SELECT cyrillic_name_other_names FROM table_2562572_33 WHERE settlement = \"Martono\u0161\"",
        "context": "CREATE TABLE table_2562572_33 (cyrillic_name_other_names VARCHAR, settlement VARCHAR)",
        "question": "What is the other name for martono\u0161?"
    },
    {
        "answer": "SELECT type FROM table_2562572_33 WHERE cyrillic_name_other_names = \"\u041e\u0440\u043e\u043c (Hungarian: Orom)\"",
        "context": "CREATE TABLE table_2562572_33 (type VARCHAR, cyrillic_name_other_names VARCHAR)",
        "question": "What type of settlement is \u043e\u0440\u043e\u043c (hungarian: orom)?"
    },
    {
        "answer": "SELECT score FROM table_name_38 WHERE money___\u00a3__ = \"90,400\" AND country = \"south africa\" AND player = \"thomas aiken\"",
        "context": "CREATE TABLE table_name_38 (score VARCHAR, player VARCHAR, money___\u00a3__ VARCHAR, country VARCHAR)",
        "question": "Which Score has a Money ( \u00a3 ) of 90,400, and a Country of south africa, and a Player of thomas aiken? Question 1"
    },
    {
        "answer": "SELECT dominant_religion__2002_ FROM table_2562572_37 WHERE settlement = \"Srpska Crnja\"",
        "context": "CREATE TABLE table_2562572_37 (dominant_religion__2002_ VARCHAR, settlement VARCHAR)",
        "question": "Name the dominant religion of srpska crnja"
    },
    {
        "answer": "SELECT purse___$__ FROM table_13388681_1 WHERE margin_of_victory = \"1 stroke\"",
        "context": "CREATE TABLE table_13388681_1 (purse___$__ VARCHAR, margin_of_victory VARCHAR)",
        "question": "How much is the purse ( $ ) when the margin of victory is 1 stroke?"
    },
    {
        "answer": "SELECT MIN(expenditures_on_r) & d__billions_of_us$_, _ppp__ FROM table_name_94 WHERE country_region = \"poland\" AND year > 2011",
        "context": "CREATE TABLE table_name_94 (_ppp__ VARCHAR, d__billions_of_us$_ VARCHAR, expenditures_on_r INTEGER, country_region VARCHAR, year VARCHAR)",
        "question": "What is the lowest expenditures on R&D for Poland after 2011?"
    },
    {
        "answer": "SELECT location FROM table_name_83 WHERE year_joined = 1966 AND previous_conference = \"noble county\" AND school = \"wawaka\"",
        "context": "CREATE TABLE table_name_83 (location VARCHAR, school VARCHAR, year_joined VARCHAR, previous_conference VARCHAR)",
        "question": "Which Location has a Year Joined of 1966, and a Previous Conference of noble county, and a School of wawaka?"
    },
    {
        "answer": "SELECT elevated FROM table_name_7 WHERE elevator = \"nicholas iii\" AND cardinalatial_order_and_title = \"cardinal-deacon of s. eustachio\"",
        "context": "CREATE TABLE table_name_7 (elevated VARCHAR, elevator VARCHAR, cardinalatial_order_and_title VARCHAR)",
        "question": "What is the date of elevation for the Cardinal elevated by Nicholas III to the title of Cardinal-Deacon of S. Eustachio?"
    },
    {
        "answer": "SELECT elevated FROM table_name_91 WHERE cardinalatial_order_and_title = \"cardinal-priest of s. pudenziana\"",
        "context": "CREATE TABLE table_name_91 (elevated VARCHAR, cardinalatial_order_and_title VARCHAR)",
        "question": "What was the date of elevation for the cardinal given the order and title of Cardinal-Priest of S. Pudenziana?"
    },
    {
        "answer": "SELECT population__2011_ FROM table_2562572_44 WHERE settlement = \"Banatski Karlovac\"",
        "context": "CREATE TABLE table_2562572_44 (population__2011_ VARCHAR, settlement VARCHAR)",
        "question": "What was the population in 2011 of banatski karlovac?"
    },
    {
        "answer": "SELECT dominant_religion__2002_ FROM table_2562572_46 WHERE cyrillic_name_other_names = \"\u0412\u043e\u0458\u0432\u043e\u0434\u0438\u043d\u0446\u0438 (Romanian: Voivodin\u0163)\"",
        "context": "CREATE TABLE table_2562572_46 (dominant_religion__2002_ VARCHAR, cyrillic_name_other_names VARCHAR)",
        "question": "What was the dominant religion in 2002 of the settlement with the cyrillic and other name of \u0432\u043e\u0458\u0432\u043e\u0434\u0438\u043d\u0446\u0438 (romanian: voivodin\u0163)?"
    },
    {
        "answer": "SELECT MAX(population__2011_) FROM table_2562572_46 WHERE cyrillic_name_other_names = \"\u0412\u0430\u0442\u0438\u043d\"",
        "context": "CREATE TABLE table_2562572_46 (population__2011_ INTEGER, cyrillic_name_other_names VARCHAR)",
        "question": "What was the population in 2011 of the settlement with the cyrillic name of \u0432\u0430\u0442\u0438\u043d?"
    },
    {
        "answer": "SELECT highest_elevation FROM table_name_7 WHERE highest_point = \"schnebelhorn\"",
        "context": "CREATE TABLE table_name_7 (highest_elevation VARCHAR, highest_point VARCHAR)",
        "question": "What is the highest elevation for the highest point of Schnebelhorn?"
    },
    {
        "answer": "SELECT type FROM table_name_18 WHERE in_service > 2 AND vessel = \"kobben class\"",
        "context": "CREATE TABLE table_name_18 (type VARCHAR, in_service VARCHAR, vessel VARCHAR)",
        "question": "What type of ship is a Kobben class vessel that has been in service longer than 2?"
    },
    {
        "answer": "SELECT candidates FROM table_1341453_37 WHERE incumbent = \"Tony P. Hall\"",
        "context": "CREATE TABLE table_1341453_37 (candidates VARCHAR, incumbent VARCHAR)",
        "question": "Tony P. Hall was the incumbent in the race between what two candidates? "
    },
    {
        "answer": "SELECT party FROM table_1341522_38 WHERE opponent = \"Mike Oxley (R) unopposed\"",
        "context": "CREATE TABLE table_1341522_38 (party VARCHAR, opponent VARCHAR)",
        "question": "what's the\u00a0party\u00a0with\u00a0opponent\u00a0being mike oxley (r) unopposed"
    },
    {
        "answer": "SELECT COUNT(type) FROM table_2562572_53 WHERE settlement = \"Nova Pazova\"",
        "context": "CREATE TABLE table_2562572_53 (type VARCHAR, settlement VARCHAR)",
        "question": "How many different types of settlements does Nova Pazova fall into?"
    },
    {
        "answer": "SELECT COUNT(population__2011_) FROM table_2562572_53 WHERE cyrillic_name = \"\u0421\u0443\u0440\u0434\u0443\u043a\"",
        "context": "CREATE TABLE table_2562572_53 (population__2011_ VARCHAR, cyrillic_name VARCHAR)",
        "question": "What was the population of \u0441\u0443\u0440\u0434\u0443\u043a in 2011?"
    },
    {
        "answer": "SELECT release_price___usd__ FROM table_name_12 WHERE i_o_bus = \"1 \u00d7 6.4 gt/s qpi\" AND part_number_s_ = \"bx80601975at80601002274aa\"",
        "context": "CREATE TABLE table_name_12 (release_price___usd__ VARCHAR, i_o_bus VARCHAR, part_number_s_ VARCHAR)",
        "question": "What's the release price of the processor with the part number bx80601975at80601002274aa, and has 1 \u00d7 6.4 gt/s qpi I/O?"
    },
    {
        "answer": "SELECT SUM(aids_orphans_as__percentage_of_orphans) FROM table_name_41 WHERE double__aids_related_ = \"41,000\" AND paternal__total_ > 442 OFFSET 000",
        "context": "CREATE TABLE table_name_41 (aids_orphans_as__percentage_of_orphans INTEGER, double__aids_related_ VARCHAR, paternal__total_ VARCHAR)",
        "question": "What is the number of AIDS Orphans as % of Orphans when the Double (AIDS Related) number is 41,000, and the Paternal (Total) is larger than 442,000?"
    },
    {
        "answer": "SELECT MIN(total_orphans__total_) FROM table_name_66 WHERE total_orphans__aids_related_ = \"< 100\" AND maternal__total_ < 31 OFFSET 000",
        "context": "CREATE TABLE table_name_66 (total_orphans__total_ INTEGER, total_orphans__aids_related_ VARCHAR, maternal__total_ VARCHAR)",
        "question": "What is the Total Orphans number when the number of Total Orphans (AIDS Related) is < 100, and the Maternal (Total) is smaller than 31,000?"
    },
    {
        "answer": "SELECT term_start FROM table_name_94 WHERE party = \"meretz\"",
        "context": "CREATE TABLE table_name_94 (term_start VARCHAR, party VARCHAR)",
        "question": "What's the term start date for Meretz?"
    },
    {
        "answer": "SELECT incumbent FROM table_1341568_14 WHERE elected = 1974 AND party = \"Republican\"",
        "context": "CREATE TABLE table_1341568_14 (incumbent VARCHAR, elected VARCHAR, party VARCHAR)",
        "question": "What Republican incumbent was elected in 1974?"
    },
    {
        "answer": "SELECT new_entries_this_round FROM table_name_87 WHERE leagues_entering_at_this_round = \"tff third league & turkish regional amateur league\"",
        "context": "CREATE TABLE table_name_87 (new_entries_this_round VARCHAR, leagues_entering_at_this_round VARCHAR)",
        "question": "How many new entries when the leagues entering in the round are tff third league & turkish regional amateur league?"
    },
    {
        "answer": "SELECT MIN(clubs_involved) FROM table_name_59 WHERE winners_from_previous_round = \"4\" AND clubs_remaining > 4",
        "context": "CREATE TABLE table_name_59 (clubs_involved INTEGER, winners_from_previous_round VARCHAR, clubs_remaining VARCHAR)",
        "question": "How many clubs are involved when there are 4 winners from the previous rounds and more than 4 clubs remaining?"
    },
    {
        "answer": "SELECT result FROM table_1341663_10 WHERE candidates = \"Sam M. Gibbons (D) Unopposed\"",
        "context": "CREATE TABLE table_1341663_10 (result VARCHAR, candidates VARCHAR)",
        "question": "what was the result where the candidates are sam m. gibbons (d) unopposed?"
    },
    {
        "answer": "SELECT conference_joined FROM table_name_67 WHERE location = \"terre haute\" AND mascot = \"golden bears\"",
        "context": "CREATE TABLE table_name_67 (conference_joined VARCHAR, location VARCHAR, mascot VARCHAR)",
        "question": "Can you tell me the Conference Joined that has the Location of terre haute, and the Mascot of golden bears?"
    },
    {
        "answer": "SELECT AVG(goals) FROM table_name_52 WHERE last_appearance < 1984 AND appearances > 17 AND first_appearance < 1961 AND position = \"mf\"",
        "context": "CREATE TABLE table_name_52 (goals INTEGER, position VARCHAR, first_appearance VARCHAR, last_appearance VARCHAR, appearances VARCHAR)",
        "question": "What is the average goals when the last appearance was before 1984, there were more than 17 appearances, the first appearance was before 1961 and the position was mf?"
    },
    {
        "answer": "SELECT type FROM table_256286_45 WHERE description = \"Power Development Debt Limit Amendment\"",
        "context": "CREATE TABLE table_256286_45 (type VARCHAR, description VARCHAR)",
        "question": "What is the type of measure that voted on the Power Development Debt Limit Amendment?"
    },
    {
        "answer": "SELECT conference_joined FROM table_name_58 WHERE county = \"69 ripley\" AND year_joined = 1952 AND location = \"versailles\"",
        "context": "CREATE TABLE table_name_58 (conference_joined VARCHAR, location VARCHAR, county VARCHAR, year_joined VARCHAR)",
        "question": "what is the conference joined for the county 69 ripley in 1952 in versailles?"
    },
    {
        "answer": "SELECT COUNT(type) FROM table_256286_5 WHERE description = \"Calling Convention to revise State Constitution\"",
        "context": "CREATE TABLE table_256286_5 (type VARCHAR, description VARCHAR)",
        "question": "How many type classifications are given to the measure with the description, calling convention to revise state constitution? "
    },
    {
        "answer": "SELECT COUNT(party) FROM table_1342013_31 WHERE result = \"Resigned when appointed judge Democratic hold\"",
        "context": "CREATE TABLE table_1342013_31 (party VARCHAR, result VARCHAR)",
        "question": "What number of party had a candidate  resigned when appointed judge democratic hold?"
    },
    {
        "answer": "SELECT MIN(heat) FROM table_name_40 WHERE time = \"1:02.85\" AND lane > 7",
        "context": "CREATE TABLE table_name_40 (heat INTEGER, time VARCHAR, lane VARCHAR)",
        "question": "What is the lowest heat that had a time of 1:02.85 in a lane larger than 7?"
    },
    {
        "answer": "SELECT district FROM table_1342013_41 WHERE incumbent = \"Tom J. Murray\"",
        "context": "CREATE TABLE table_1342013_41 (district VARCHAR, incumbent VARCHAR)",
        "question": "What district is tom j. murray from?"
    },
    {
        "answer": "SELECT w\u00fcrttemberg FROM table_name_51 WHERE baden = \"karlsruher fv\" AND year > 1931",
        "context": "CREATE TABLE table_name_51 (w\u00fcrttemberg VARCHAR, baden VARCHAR, year VARCHAR)",
        "question": "What's the W\u00fcrttemberg for Karlsruher FV happening after 1931?"
    },
    {
        "answer": "SELECT COUNT(touchdowns) FROM table_25647137_2 WHERE player = \"Bill Culligan\"",
        "context": "CREATE TABLE table_25647137_2 (touchdowns VARCHAR, player VARCHAR)",
        "question": "How many touchdowns did bill culligan have?"
    },
    {
        "answer": "SELECT nordbayern FROM table_name_92 WHERE year < 1932 AND w\u00fcrttemberg = \"union b\u00f6ckingen\"",
        "context": "CREATE TABLE table_name_92 (nordbayern VARCHAR, year VARCHAR, w\u00fcrttemberg VARCHAR)",
        "question": "What's the Nordbayern with a W\u00fcrttemberg of Union B\u00f6ckingen in the year before 1932?"
    },
    {
        "answer": "SELECT tickets_sold___available FROM table_name_18 WHERE venue = \"long beach arena\"",
        "context": "CREATE TABLE table_name_18 (tickets_sold___available VARCHAR, venue VARCHAR)",
        "question": "What is the number of tickets sold and available for the concert at Long Beach Arena?"
    },
    {
        "answer": "SELECT MAX(legs) FROM table_256862_1 WHERE winning_yacht = \"Steinlager 2\"",
        "context": "CREATE TABLE table_256862_1 (legs INTEGER, winning_yacht VARCHAR)",
        "question": "Name the most legs for steinlager 2"
    },
    {
        "answer": "SELECT winning_yacht FROM table_256862_1 WHERE entries = \"14\"",
        "context": "CREATE TABLE table_256862_1 (winning_yacht VARCHAR, entries VARCHAR)",
        "question": "Name the wininng yacht for 14 entries"
    },
    {
        "answer": "SELECT SUM(altitude__meters_) FROM table_name_93 WHERE range = \"belgica mountains\" AND name = \"mount launoit\"",
        "context": "CREATE TABLE table_name_93 (altitude__meters_ INTEGER, range VARCHAR, name VARCHAR)",
        "question": "What is the altitude (meters) is associated with the Name Mount Launoit, with the range as Belgica Mountains?"
    },
    {
        "answer": "SELECT COUNT(altitude__meters_) FROM table_name_72 WHERE range = \"m\u00fchlig-hofmann mountains\" AND rank < 10",
        "context": "CREATE TABLE table_name_72 (altitude__meters_ VARCHAR, range VARCHAR, rank VARCHAR)",
        "question": "What is the Altitude (meters) associated with a rank smaller than 10, and the range M\u00fchlig-Hofmann Mountains?"
    },
    {
        "answer": "SELECT first_elected FROM table_1342451_38 WHERE incumbent = \"William F. Stevenson\"",
        "context": "CREATE TABLE table_1342451_38 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": "What year was incumbent william f. stevenson first elected?"
    },
    {
        "answer": "SELECT COUNT(production_code) FROM table_25691838_11 WHERE original_airdate = \"November 15\"",
        "context": "CREATE TABLE table_25691838_11 (production_code VARCHAR, original_airdate VARCHAR)",
        "question": "How many production codes were there for the episode that aired on November 15?"
    },
    {
        "answer": "SELECT SUM(lane) FROM table_name_43 WHERE heat = 3 AND name = \"sara isakovi\u010d\"",
        "context": "CREATE TABLE table_name_43 (lane INTEGER, heat VARCHAR, name VARCHAR)",
        "question": "What's Sara Isakovi\u010d's lane number that had a heat of 3?"
    },
    {
        "answer": "SELECT number_built FROM table_25695027_1 WHERE cylinder_size = \"20 \u00bd\u201d x 26\u201d\" AND firebox = \"Belpaire\" AND valve_gear = \"Stephenson\"",
        "context": "CREATE TABLE table_25695027_1 (number_built VARCHAR, valve_gear VARCHAR, cylinder_size VARCHAR, firebox VARCHAR)",
        "question": "How many engines were built with a cylinder size of 20 \u00bd\u201d x 26\u201d, firebox is belpaire and valve gear is from Stephenson?"
    },
    {
        "answer": "SELECT years_built FROM table_25695027_1 WHERE cylinder_size = \"20 \u00bd\u201d x 26\u201d\" AND firebox = \"Radial-stay\"",
        "context": "CREATE TABLE table_25695027_1 (years_built VARCHAR, cylinder_size VARCHAR, firebox VARCHAR)",
        "question": "This engine with a cylinder size of 20 \u00bd\u201d x 26\u201d and a firebox of radial-stay was built when?"
    },
    {
        "answer": "SELECT total FROM table_1354805_3 WHERE number_of_dances = 11 AND competition_finish > 2.0",
        "context": "CREATE TABLE table_1354805_3 (total VARCHAR, number_of_dances VARCHAR, competition_finish VARCHAR)",
        "question": "What is the Number of dances is 11 and competition finish is larger than 2.0 total"
    },
    {
        "answer": "SELECT points_for FROM table_13564637_5 WHERE club = \"Tonyrefail RFC\"",
        "context": "CREATE TABLE table_13564637_5 (points_for VARCHAR, club VARCHAR)",
        "question": "What were all the points for Tonyrefail RFC?"
    },
    {
        "answer": "SELECT MAX(birth_2013) FROM table_25703_1 WHERE death_2012 = \"14,1\"",
        "context": "CREATE TABLE table_25703_1 (birth_2013 INTEGER, death_2012 VARCHAR)",
        "question": "What is the highest birth/2013 when the death/2012 is 14,1?"
    },
    {
        "answer": "SELECT specifically_stains FROM table_13570_1 WHERE nucleus = \"Blue/black\"",
        "context": "CREATE TABLE table_13570_1 (specifically_stains VARCHAR, nucleus VARCHAR)",
        "question": "A nucleus that is blue/black will specifically stain what?"
    },
    {
        "answer": "SELECT COUNT(played) FROM table_name_90 WHERE points = 8 AND position > 6",
        "context": "CREATE TABLE table_name_90 (played VARCHAR, points VARCHAR, position VARCHAR)",
        "question": "What is the total number played with 8 points and a position more than 6?"
    },
    {
        "answer": "SELECT MAX(no_in_season) FROM table_25716399_1 WHERE directed_by = \"Wendey Stanzler\"",
        "context": "CREATE TABLE table_25716399_1 (no_in_season INTEGER, directed_by VARCHAR)",
        "question": "What season was an episode directed by wendey stanzler?"
    },
    {
        "answer": "SELECT AVG(long) FROM table_name_28 WHERE gain < 0",
        "context": "CREATE TABLE table_name_28 (long INTEGER, gain INTEGER)",
        "question": "What is the long figure when gain is less than 0?"
    },
    {
        "answer": "SELECT COUNT(no_in_season) FROM table_25716397_1 WHERE written_by = \"Tom Scharpling and Daniel Dratch\"",
        "context": "CREATE TABLE table_25716397_1 (no_in_season VARCHAR, written_by VARCHAR)",
        "question": "How many episodes were written by Tom Scharpling and Daniel Dratch?"
    },
    {
        "answer": "SELECT COUNT(directed_by) FROM table_25716397_1 WHERE series_no = 55",
        "context": "CREATE TABLE table_25716397_1 (directed_by VARCHAR, series_no VARCHAR)",
        "question": "How many directors of episode 55?"
    },
    {
        "answer": "SELECT MAX(dave_viewers) FROM table_25721_3 WHERE dave_ja_vu_viewers = 119000",
        "context": "CREATE TABLE table_25721_3 (dave_viewers INTEGER, dave_ja_vu_viewers VARCHAR)",
        "question": "What is the highest number of dave viewers of an episode with 119000 dave ja vu viewers?"
    },
    {
        "answer": "SELECT COUNT(total_viewers) FROM table_25721_3 WHERE airdate = \"25 October 2012\"",
        "context": "CREATE TABLE table_25721_3 (total_viewers VARCHAR, airdate VARCHAR)",
        "question": "How many episodes aired on 25 october 2012?"
    },
    {
        "answer": "SELECT _number_of_discs FROM table_25721_4 WHERE release = \"The Complete Collection Series 1-8 with extras\"",
        "context": "CREATE TABLE table_25721_4 (_number_of_discs VARCHAR, release VARCHAR)",
        "question": "How many DVDs where were in the complete collection series 1-8 with extras?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_24 WHERE drawn < 2 AND lost = 12 AND name = \"ev bad w\u00f6rishofen\"",
        "context": "CREATE TABLE table_name_24 (points INTEGER, name VARCHAR, drawn VARCHAR, lost VARCHAR)",
        "question": "Which Points have a Drawn smaller than 2, and a Lost of 12, and a Name of ev bad w\u00f6rishofen?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_56 WHERE notes = \"sa/b\" AND time = \"6:39.07\"",
        "context": "CREATE TABLE table_name_56 (rank INTEGER, notes VARCHAR, time VARCHAR)",
        "question": "What is the highest rank with the notes of sa/b, and a time of 6:39.07?"
    },
    {
        "answer": "SELECT rnd FROM table_13643320_2 WHERE gtp_winning_team = \"#56 Blue Thunder Racing\" AND gto_winning_team = \"#38 Mandeville Auto Tech\"",
        "context": "CREATE TABLE table_13643320_2 (rnd VARCHAR, gtp_winning_team VARCHAR, gto_winning_team VARCHAR)",
        "question": "What us the number of the round during which #56 Blue Thunder Racing become the GTP winning team and #38 Mandeville Auto Tech became the GTO winning team? "
    },
    {
        "answer": "SELECT COUNT(results) FROM table_13643320_2 WHERE gtu_winning_team = \"#98 All American Racers\"",
        "context": "CREATE TABLE table_13643320_2 (results VARCHAR, gtu_winning_team VARCHAR)",
        "question": "How many different results came out of the round in which #98 All American Racers became the GTU winning team? "
    },
    {
        "answer": "SELECT language_s_ FROM table_13700749_1 WHERE film_title = \"Tsotsi\"",
        "context": "CREATE TABLE table_13700749_1 (language_s_ VARCHAR, film_title VARCHAR)",
        "question": "What are all the languages for tsotsi?"
    },
    {
        "answer": "SELECT writer FROM table_25737761_3 WHERE director = \"Colin Teague\"",
        "context": "CREATE TABLE table_25737761_3 (writer VARCHAR, director VARCHAR)",
        "question": "Who directed the episode directed by colin teague?"
    },
    {
        "answer": "SELECT date FROM table_name_23 WHERE week > 1 AND opponent = \"detroit lions\"",
        "context": "CREATE TABLE table_name_23 (date VARCHAR, week VARCHAR, opponent VARCHAR)",
        "question": "what is the date for the week larger than 1 and the opponent detroit lions?"
    },
    {
        "answer": "SELECT COUNT(high_assists) FROM table_13762472_4 WHERE record = \"15-11\"",
        "context": "CREATE TABLE table_13762472_4 (high_assists VARCHAR, record VARCHAR)",
        "question": " how many\u00a0high assists with\u00a0record\u00a0being 15-11"
    },
    {
        "answer": "SELECT AVG(react) FROM table_name_16 WHERE rank < 4 AND nationality = \"trinidad and tobago\" AND time > 45.13",
        "context": "CREATE TABLE table_name_16 (react INTEGER, time VARCHAR, rank VARCHAR, nationality VARCHAR)",
        "question": "Which Reaction has a Rank smaller than 4, and a Nationality of trinidad and tobago, and a Time larger than 45.13?"
    },
    {
        "answer": "SELECT COUNT(rank_final) FROM table_name_68 WHERE year > 2008 AND apparatus = \"balance beam\" AND rank_qualifying > 4",
        "context": "CREATE TABLE table_name_68 (rank_final VARCHAR, rank_qualifying VARCHAR, year VARCHAR, apparatus VARCHAR)",
        "question": "Count the Rank-Final which has a Year larger than 2008, and an Apparatus of balance beam, and a Rank-Qualifying larger than 4?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_13762472_4 WHERE high_assists = \"Dwyane Wade (9)\"",
        "context": "CREATE TABLE table_13762472_4 (high_rebounds VARCHAR, high_assists VARCHAR)",
        "question": "who had all the high rebounds when high assists is by dwyane wade (9)"
    },
    {
        "answer": "SELECT location FROM table_25773116_2 WHERE pole_position = \"Daniel Erickson\" AND fastest_lap = \"Cole Morgan\"",
        "context": "CREATE TABLE table_25773116_2 (location VARCHAR, pole_position VARCHAR, fastest_lap VARCHAR)",
        "question": "Where was the race where Cole Morgan had the fastest lap and Daniel Erickson had pole position?"
    },
    {
        "answer": "SELECT pole_position FROM table_25773116_2 WHERE fastest_lap = \"Victor Carbone\" AND location = \"Braselton, Georgia\"",
        "context": "CREATE TABLE table_25773116_2 (pole_position VARCHAR, fastest_lap VARCHAR, location VARCHAR)",
        "question": "Who had pole position for the races in Braselton, Georgia where Victor Carbone had fastest lap?"
    },
    {
        "answer": "SELECT location FROM table_25773116_2 WHERE winning_team = \"Audette Racing\"",
        "context": "CREATE TABLE table_25773116_2 (location VARCHAR, winning_team VARCHAR)",
        "question": "Where did Audette Racing win?"
    },
    {
        "answer": "SELECT director_s_ FROM table_25764073_3 WHERE writer_s_ = \"Peter Gawler\"",
        "context": "CREATE TABLE table_25764073_3 (director_s_ VARCHAR, writer_s_ VARCHAR)",
        "question": "Name the directors for peter gawler"
    },
    {
        "answer": "SELECT displacement FROM table_name_64 WHERE model = \"petrol engines\"",
        "context": "CREATE TABLE table_name_64 (displacement VARCHAR, model VARCHAR)",
        "question": "What is the displacement for the petrol engines model?"
    },
    {
        "answer": "SELECT points_per_game FROM table_25774493_3 WHERE rebounds_per_game = \"15.0\"",
        "context": "CREATE TABLE table_25774493_3 (points_per_game VARCHAR, rebounds_per_game VARCHAR)",
        "question": "What were the points per game in the selection where the rebounds per game were 15.0?"
    },
    {
        "answer": "SELECT incumbent FROM table_13833770_3 WHERE opponent = \"Peter King (R) 56.0% David Mejias (D) 44.0%\"",
        "context": "CREATE TABLE table_13833770_3 (incumbent VARCHAR, opponent VARCHAR)",
        "question": "who is the the\u00a0incumbent\u00a0with\u00a0opponent\u00a0being peter king (r) 56.0% david mejias (d) 44.0%"
    },
    {
        "answer": "SELECT production_code FROM table_14035132_3 WHERE no_in_series = \"37b\"",
        "context": "CREATE TABLE table_14035132_3 (production_code VARCHAR, no_in_series VARCHAR)",
        "question": "What's the production code of the episode with a series number 37b? "
    },
    {
        "answer": "SELECT COUNT(longitude) FROM table_name_20 WHERE ansi_code < 1036534 AND water__sqmi_ = 0 AND geo_id > 3809959540",
        "context": "CREATE TABLE table_name_20 (longitude VARCHAR, geo_id VARCHAR, ansi_code VARCHAR, water__sqmi_ VARCHAR)",
        "question": "What is the longitude for the Township that has a ANSI code less than 1036534, a water (sqmi) of 0, and a GEO ID greater than 3809959540?"
    },
    {
        "answer": "SELECT SUM(pop__2010_) FROM table_name_17 WHERE land___sqmi__ < 34.424 AND county = \"mountrail\" AND geo_id < 3806159940",
        "context": "CREATE TABLE table_name_17 (pop__2010_ INTEGER, geo_id VARCHAR, land___sqmi__ VARCHAR, county VARCHAR)",
        "question": "What is the total population in 2010 for the township located in Mountrail which has land less than 34.424 sq miles and a GEO ID less than 3806159940?"
    },
    {
        "answer": "SELECT game FROM table_name_92 WHERE developer_s_ = \"nintendo\" AND platform_s_ = \"gamecube\"",
        "context": "CREATE TABLE table_name_92 (game VARCHAR, developer_s_ VARCHAR, platform_s_ VARCHAR)",
        "question": "What game was developed by Nintendo for the Gamecube platform?"
    },
    {
        "answer": "SELECT percentage_lost FROM table_name_93 WHERE starting_weight__kg_ > 102 AND weight_lost__kg_ = 46.9",
        "context": "CREATE TABLE table_name_93 (percentage_lost VARCHAR, starting_weight__kg_ VARCHAR, weight_lost__kg_ VARCHAR)",
        "question": "What is the Percentage Lost for the contestant with a starting weight above 102 kg who lost 46.9 kg?"
    },
    {
        "answer": "SELECT air_date FROM table_25816476_2 WHERE team_guest_captain = \"John Bishop\"",
        "context": "CREATE TABLE table_25816476_2 (air_date VARCHAR, team_guest_captain VARCHAR)",
        "question": "What was the air date when the team guest captain was john bishop?"
    },
    {
        "answer": "SELECT team_swash FROM table_25816476_2 WHERE team_guest_captain = \"Gail Porter\"",
        "context": "CREATE TABLE table_25816476_2 (team_swash VARCHAR, team_guest_captain VARCHAR)",
        "question": "Who was the team swash when the team guest captain was gail porter?"
    },
    {
        "answer": "SELECT MIN(crude_death_rate__per_1000_) FROM table_name_51 WHERE deaths = \"768\" AND crude_birth_rate__per_1000_ < 29.7",
        "context": "CREATE TABLE table_name_51 (crude_death_rate__per_1000_ INTEGER, deaths VARCHAR, crude_birth_rate__per_1000_ VARCHAR)",
        "question": "Which Crude death rate (per 1000) has Deaths of 768, and a Crude birth rate (per 1000) smaller than 29.7?"
    },
    {
        "answer": "SELECT COUNT(size___s_base_pair__) FROM table_140968_1 WHERE molecular_weight_kda = \"102\"",
        "context": "CREATE TABLE table_140968_1 (size___s_base_pair__ VARCHAR, molecular_weight_kda VARCHAR)",
        "question": "How many base pairs are there if the molecular weight is 102?"
    },
    {
        "answer": "SELECT name FROM table_name_32 WHERE rank > 3 AND lane < 6 AND time = \"1:58.15\"",
        "context": "CREATE TABLE table_name_32 (name VARCHAR, time VARCHAR, rank VARCHAR, lane VARCHAR)",
        "question": "Who had a larger rank than 3, less than 6 lanes, and a time of 1:58.15?"
    },
    {
        "answer": "SELECT filter FROM table_2583036_1 WHERE wavelength = \"222mm (K-band)\"",
        "context": "CREATE TABLE table_2583036_1 (filter VARCHAR, wavelength VARCHAR)",
        "question": "what is the filter when the wavelength is 222mm (k-band)?"
    },
    {
        "answer": "SELECT soap_opera FROM table_name_4 WHERE duration = \"18 years\" AND character = \"miley byrne\"",
        "context": "CREATE TABLE table_name_4 (soap_opera VARCHAR, duration VARCHAR, character VARCHAR)",
        "question": "what is the soap opera when the duration is 18 years and the character is miley byrne?"
    },
    {
        "answer": "SELECT results FROM table_14154271_2 WHERE gt2_winning_team = \"Lars-Erik Nielsen Allan Simonsen Richard Westbrook\"",
        "context": "CREATE TABLE table_14154271_2 (results VARCHAR, gt2_winning_team VARCHAR)",
        "question": "The results for gt2 winning team is all lars-erik nielsen allan simonsen richard westbrook. "
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_96 WHERE main = \"eintracht frankfurt\" AND rhein = \"waldhof mannheim\" AND saar = \"fk pirmasens\" AND hessen = \"wormatia worms\"",
        "context": "CREATE TABLE table_name_96 (year INTEGER, hessen VARCHAR, saar VARCHAR, main VARCHAR, rhein VARCHAR)",
        "question": "What is the smallest year for a Main of Eintracht Frankfurt, Rhein of Waldhof Mannheim, Sarr of FK Pirmasens, and Hessen of Wormatia Worms?"
    },
    {
        "answer": "SELECT MIN(pop_density) FROM table_2588674_1 WHERE village = \"Mongmong-Toto-Maite\"",
        "context": "CREATE TABLE table_2588674_1 (pop_density INTEGER, village VARCHAR)",
        "question": "What is the population density of mongmong-toto-maite?"
    },
    {
        "answer": "SELECT season FROM table_14242137_11 WHERE regionalliga_nord = \"VfB Oldenburg\"",
        "context": "CREATE TABLE table_14242137_11 (season VARCHAR, regionalliga_nord VARCHAR)",
        "question": "what's the\u00a0season\u00a0with\u00a0regionalliga nord\u00a0being vfb oldenburg"
    },
    {
        "answer": "SELECT director FROM table_name_12 WHERE series = \"mm\" AND production_num < 6494 AND release_date = \"1934-09-15\"",
        "context": "CREATE TABLE table_name_12 (director VARCHAR, release_date VARCHAR, series VARCHAR, production_num VARCHAR)",
        "question": "Who was the director of the movie having a release date of 1934-09-15, an MM Series and a production number less than 6494?"
    },
    {
        "answer": "SELECT population__2010___rank_ FROM table_14253123_1 WHERE area_sq_mi__km_2____rank_ = \"sqmi (km2) (5)\"",
        "context": "CREATE TABLE table_14253123_1 (population__2010___rank_ VARCHAR, area_sq_mi__km_2____rank_ VARCHAR)",
        "question": "When the  area sq mi (km 2 ) (rank) is sqmi (km2) (5) what is the  population (2010) (rank)?"
    },
    {
        "answer": "SELECT production_code FROM table_25851971_1 WHERE written_by = \"Anthony Sparks\"",
        "context": "CREATE TABLE table_25851971_1 (production_code VARCHAR, written_by VARCHAR)",
        "question": "What was the production code of the episode written by Anthony Sparks?"
    },
    {
        "answer": "SELECT COUNT(gold) FROM table_name_79 WHERE silver = 1 AND nation = \"puerto rico\" AND total < 1",
        "context": "CREATE TABLE table_name_79 (gold VARCHAR, total VARCHAR, silver VARCHAR, nation VARCHAR)",
        "question": "How many Gold medals did Puerto Rico receive with 1 Silver and a Total of 1 or less?"
    },
    {
        "answer": "SELECT oberliga_hessen FROM table_14242137_4 WHERE oberliga_baden_w\u00fcrttemberg = \"SV Sandhausen\" AND oberliga_s\u00fcdwest = \"FSV Salmrohr\"",
        "context": "CREATE TABLE table_14242137_4 (oberliga_hessen VARCHAR, oberliga_baden_w\u00fcrttemberg VARCHAR, oberliga_s\u00fcdwest VARCHAR)",
        "question": "Name the oberliga hessen for sv sandhausen and fsv salmrohr"
    },
    {
        "answer": "SELECT leader_battle FROM table_25920798_2 WHERE eliminated = \"Plamen\"",
        "context": "CREATE TABLE table_25920798_2 (leader_battle VARCHAR, eliminated VARCHAR)",
        "question": "Name the leader battle for plamen"
    },
    {
        "answer": "SELECT status FROM table_2589963_1 WHERE institution = \"Informatics International College\"",
        "context": "CREATE TABLE table_2589963_1 (status VARCHAR, institution VARCHAR)",
        "question": "What status of school is informatics international college?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_14260687_3 WHERE quarter = \"2012 Q1\"",
        "context": "CREATE TABLE table_14260687_3 (total VARCHAR, quarter VARCHAR)",
        "question": "How many total smartphones were shipped during the quarter 2012 Q1?"
    },
    {
        "answer": "SELECT regular_season FROM table_1427998_1 WHERE playoffs = \"divisional Finals\"",
        "context": "CREATE TABLE table_1427998_1 (regular_season VARCHAR, playoffs VARCHAR)",
        "question": "Where did the team finish in the season when the playoff result was divisional finals."
    },
    {
        "answer": "SELECT playoffs FROM table_1427998_1 WHERE league = \"USISL\" AND regular_season = \"1st, Pacific\"",
        "context": "CREATE TABLE table_1427998_1 (playoffs VARCHAR, league VARCHAR, regular_season VARCHAR)",
        "question": "What is the playoff result when the league is USISL and the regular season record is 1st, pacific."
    },
    {
        "answer": "SELECT MIN(home_attendance) FROM table_14302582_1 WHERE competition = \"Southern Derby\"",
        "context": "CREATE TABLE table_14302582_1 (home_attendance INTEGER, competition VARCHAR)",
        "question": "What was the lowest home attendance for the southern derby?"
    },
    {
        "answer": "SELECT MIN(jews_and_others_1) FROM table_25947046_1 WHERE localities = 11",
        "context": "CREATE TABLE table_25947046_1 (jews_and_others_1 INTEGER, localities VARCHAR)",
        "question": "What is the lowest jews and others 1 for the localities 11?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_76 WHERE notes = \"q, pb\" AND time___sec__ = 11.15 AND lane > 7",
        "context": "CREATE TABLE table_name_76 (rank INTEGER, lane VARCHAR, notes VARCHAR, time___sec__ VARCHAR)",
        "question": "What is the rank when time is 11.15 and lane is bigger than 7 with notes Q, PB?"
    },
    {
        "answer": "SELECT SUM(lane) FROM table_name_31 WHERE notes = \"q, sb\" AND time___sec__ < 11.22",
        "context": "CREATE TABLE table_name_31 (lane INTEGER, notes VARCHAR, time___sec__ VARCHAR)",
        "question": "What is the lane for notes Q, SB and time less than 11.22?"
    },
    {
        "answer": "SELECT COUNT(population__2011_census_) FROM table_14325808_1 WHERE area__km\u00b2_ = \"132.79\"",
        "context": "CREATE TABLE table_14325808_1 (population__2011_census_ VARCHAR, area__km\u00b2_ VARCHAR)",
        "question": "How many places according to the 2011 census of whatever population have an area of 132.79 kilometers squared?"
    },
    {
        "answer": "SELECT in_service_for_nal FROM table_name_10 WHERE ship = \"ms vistafjord\"",
        "context": "CREATE TABLE table_name_10 (in_service_for_nal VARCHAR, ship VARCHAR)",
        "question": "The ship MS Vistafjord has what in service for NAL?"
    },
    {
        "answer": "SELECT MAX(aggregate) FROM table_25931938_1 WHERE celebrity = \"Ricky Groves\"",
        "context": "CREATE TABLE table_25931938_1 (aggregate INTEGER, celebrity VARCHAR)",
        "question": "What was the aggregate for Ricky Groves?"
    },
    {
        "answer": "SELECT access_using_a_croatian_identity_card FROM table_25965003_3 WHERE countries_and_territories = \"Jersey\"",
        "context": "CREATE TABLE table_25965003_3 (access_using_a_croatian_identity_card VARCHAR, countries_and_territories VARCHAR)",
        "question": "Can one access the Jersey territory using a Croatian identity card?"
    },
    {
        "answer": "SELECT COUNT(class) FROM table_14342210_13 WHERE prior_experience = \"Shasta H.S.\"",
        "context": "CREATE TABLE table_14342210_13 (class VARCHAR, prior_experience VARCHAR)",
        "question": "How many entries are there for class when the prior experience is shasta h.s."
    },
    {
        "answer": "SELECT complement FROM table_2596811_12 WHERE killed = \"0 off 3 men\" AND wounded = \"0 off 2 men\"",
        "context": "CREATE TABLE table_2596811_12 (complement VARCHAR, killed VARCHAR, wounded VARCHAR)",
        "question": "What was the complement associated with 0 off 3 men killed and 0 off 2 men wounded?"
    },
    {
        "answer": "SELECT COUNT(rainfall_by_depth__mm_year_) FROM table_25983027_1 WHERE infiltration__km_3__year_ = \"9.3\"",
        "context": "CREATE TABLE table_25983027_1 (rainfall_by_depth__mm_year_ VARCHAR, infiltration__km_3__year_ VARCHAR)",
        "question": "How many regions had rainfall infiltration (km 3/year) of 9.3?"
    },
    {
        "answer": "SELECT rainfall_by_volume__km_3__year_ FROM table_25983027_1 WHERE rainfall_by_depth__mm_year_ = 3527",
        "context": "CREATE TABLE table_25983027_1 (rainfall_by_volume__km_3__year_ VARCHAR, rainfall_by_depth__mm_year_ VARCHAR)",
        "question": "What was the rainfall by volume in Huetar Atlantico where the rainfall depth (mm/year) was 3527?"
    },
    {
        "answer": "SELECT team FROM table_name_79 WHERE rider = \"adam barclay\"",
        "context": "CREATE TABLE table_name_79 (team VARCHAR, rider VARCHAR)",
        "question": "What team has adam barclay as the rider?"
    },
    {
        "answer": "SELECT touchdowns__5_points_ FROM table_14342210_14 WHERE player = \"Albert Herrnstein\"",
        "context": "CREATE TABLE table_14342210_14 (touchdowns__5_points_ VARCHAR, player VARCHAR)",
        "question": "How many touchdowns did Albert Herrnstein make?"
    },
    {
        "answer": "SELECT role_episode FROM table_name_21 WHERE year > 2006 AND recipients_and_nominees = \"ellen burstyn\"",
        "context": "CREATE TABLE table_name_21 (role_episode VARCHAR, year VARCHAR, recipients_and_nominees VARCHAR)",
        "question": "What was the Role/Episode after 2006 with Ellen Burstyn as a recipient and nominee?"
    },
    {
        "answer": "SELECT category FROM table_name_71 WHERE recipients_and_nominees = \"outstanding main title design\"",
        "context": "CREATE TABLE table_name_71 (category VARCHAR, recipients_and_nominees VARCHAR)",
        "question": "For which Category was Outstanding Main Title Design a Recipient and nominee?"
    },
    {
        "answer": "SELECT young_rider_classification FROM table_25999087_2 WHERE combativity_award = \"Yannick Talabardon\"",
        "context": "CREATE TABLE table_25999087_2 (young_rider_classification VARCHAR, combativity_award VARCHAR)",
        "question": "Who is every young rider classification if combativity award is Yannick Talabardon?"
    },
    {
        "answer": "SELECT race FROM table_name_48 WHERE jockey = \"frankie dettori\" AND margin > 3 AND course = \"yarmouth\"",
        "context": "CREATE TABLE table_name_48 (race VARCHAR, course VARCHAR, jockey VARCHAR, margin VARCHAR)",
        "question": "what is the race when the jockey is frankie dettori, the margin is more than 3 and the course is yarmouth?"
    },
    {
        "answer": "SELECT team_classification FROM table_25999087_2 WHERE points_classification = \"Philippe Gilbert\" AND mountains_classification = \"Johnny Hoogerland\" AND stage < 9.0",
        "context": "CREATE TABLE table_25999087_2 (team_classification VARCHAR, stage VARCHAR, points_classification VARCHAR, mountains_classification VARCHAR)",
        "question": "What is every team classification when points classification is Philippe Gilbert if mountains classification is Johnny Hoogerland and stage is less than 9.0?"
    },
    {
        "answer": "SELECT class FROM table_14342367_13 WHERE position = \"Right tackle\"",
        "context": "CREATE TABLE table_14342367_13 (class VARCHAR, position VARCHAR)",
        "question": "What was the class of the player who played right tackle?"
    },
    {
        "answer": "SELECT COUNT(player) FROM table_14342367_13 WHERE hometown = \"Sioux City, Iowa\"",
        "context": "CREATE TABLE table_14342367_13 (player VARCHAR, hometown VARCHAR)",
        "question": "How many players are from Sioux City, Iowa?"
    },
    {
        "answer": "SELECT MAX(no_in_series) FROM table_25997153_1 WHERE us_viewers__million_ = \"16.17\"",
        "context": "CREATE TABLE table_25997153_1 (no_in_series INTEGER, us_viewers__million_ VARCHAR)",
        "question": "what is the latest episode in the series that had 16.17 million u.s. viewers?"
    },
    {
        "answer": "SELECT date_established FROM table_26013618_1 WHERE name_of_the_nature_reserve = \"Stellbrookmoor\"",
        "context": "CREATE TABLE table_26013618_1 (date_established VARCHAR, name_of_the_nature_reserve VARCHAR)",
        "question": "When was Stellbrookmoor established?"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_12 WHERE team = \"team player's\" AND grid = 9 AND points > 10",
        "context": "CREATE TABLE table_name_12 (laps VARCHAR, points VARCHAR, team VARCHAR, grid VARCHAR)",
        "question": "What is the total number of laps for a team of team player's, and has a grid of 9, and points larger than 10?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_14342592_4 WHERE player = \"Patrick\"",
        "context": "CREATE TABLE table_14342592_4 (points INTEGER, player VARCHAR)",
        "question": "Name the least points for patrick"
    },
    {
        "answer": "SELECT us_viewers__million_ FROM table_2602958_3 WHERE no = 38",
        "context": "CREATE TABLE table_2602958_3 (us_viewers__million_ VARCHAR, no VARCHAR)",
        "question": "How many viewers in millions for episode number 38?"
    },
    {
        "answer": "SELECT COUNT(player) FROM table_14342592_4 WHERE starter = \"No\" AND touchdowns = 1 AND position = \"Right halfback\"",
        "context": "CREATE TABLE table_14342592_4 (player VARCHAR, position VARCHAR, starter VARCHAR, touchdowns VARCHAR)",
        "question": "Name the number of players when starter is no and touchdowns is 1 for right halfback"
    },
    {
        "answer": "SELECT MIN(losses) FROM table_name_24 WHERE against < 1211 AND wimmera_fl = \"horsham saints\" AND wins > 13",
        "context": "CREATE TABLE table_name_24 (losses INTEGER, wins VARCHAR, against VARCHAR, wimmera_fl VARCHAR)",
        "question": "What's the least losses for Horsham Saints with more than 13 wins and less than 1211 against?"
    },
    {
        "answer": "SELECT MIN(city_population__2009_) FROM table_name_15 WHERE city_area_km_2__ = 6 AND district = \"rajanpur district\" AND serial_no < 29",
        "context": "CREATE TABLE table_name_15 (city_population__2009_ INTEGER, serial_no VARCHAR, city_area_km_2__ VARCHAR, district VARCHAR)",
        "question": "What was the lowest city population for the district of rajanpur district with a area of 6 km squared and a serial number less than 29?"
    },
    {
        "answer": "SELECT winner FROM table_14395920_2 WHERE points_classification = \"Mark Cavendish\" AND general_classification = \"Rinaldo Nocentini\" AND stage < 11.0",
        "context": "CREATE TABLE table_14395920_2 (winner VARCHAR, stage VARCHAR, points_classification VARCHAR, general_classification VARCHAR)",
        "question": "Who won the stage when Mark Cavendish led the points classification, Rinaldo Nocentini led the general classification, and the stage was less than 11.0?"
    },
    {
        "answer": "SELECT MAX(sr_no) FROM table_26036389_1 WHERE name_of_road = \"Banikhet Dalhouse Khajiar\"",
        "context": "CREATE TABLE table_26036389_1 (sr_no INTEGER, name_of_road VARCHAR)",
        "question": "What is the Sr. number of Banikhet Dalhouse Khajiar?"
    },
    {
        "answer": "SELECT AVG(gold) FROM table_name_55 WHERE bronze = 1 AND total > 2 AND silver < 3",
        "context": "CREATE TABLE table_name_55 (gold INTEGER, silver VARCHAR, bronze VARCHAR, total VARCHAR)",
        "question": "What is the average number of golds for teams with 1 bronze, less than 3 silver, and a total over 2?"
    },
    {
        "answer": "SELECT COUNT(afc_cup) FROM table_14460937_1 WHERE play_off = 1",
        "context": "CREATE TABLE table_14460937_1 (afc_cup VARCHAR, play_off VARCHAR)",
        "question": "How many times has the playoff been 1 in the contest for the afc cup?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_26041144_16 WHERE player = \"Hashan Tillakaratne\"",
        "context": "CREATE TABLE table_26041144_16 (rank VARCHAR, player VARCHAR)",
        "question": "What is the ranktotal number if the Hashan Tillakaratne?"
    },
    {
        "answer": "SELECT class_to_1928 FROM table_name_21 WHERE year_s__of_manufacture = \"1921/23\" AND class_from_1928 = \"bci-21\"",
        "context": "CREATE TABLE table_name_21 (class_to_1928 VARCHAR, year_s__of_manufacture VARCHAR, class_from_1928 VARCHAR)",
        "question": "Which class to 1928 value had years of manufacture of 1921/23 and class from 1928 of BCi-21?"
    },
    {
        "answer": "SELECT SUM(finishes) FROM table_name_57 WHERE podiums = 0 AND stage_wins = 0 AND driver = \"lambros athanassoulas\"",
        "context": "CREATE TABLE table_name_57 (finishes INTEGER, driver VARCHAR, podiums VARCHAR, stage_wins VARCHAR)",
        "question": "What's the finishes for Lambros Athanassoulas having 0 podiums and 0 stage wins?"
    },
    {
        "answer": "SELECT rank FROM table_name_44 WHERE react < 0.168 AND nationality = \"virgin islands\"",
        "context": "CREATE TABLE table_name_44 (rank VARCHAR, react VARCHAR, nationality VARCHAR)",
        "question": "What the rank of the Virgin Islands athlete with react under 0.168?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_44 WHERE athlete = \"chris brown\" AND react > 0.244",
        "context": "CREATE TABLE table_name_44 (rank INTEGER, athlete VARCHAR, react VARCHAR)",
        "question": "What is the lowest rank for Chris Brown with react greater than 0.244?"
    },
    {
        "answer": "SELECT position FROM table_1473672_5 WHERE nhl_team = \"Montreal Canadiens\"",
        "context": "CREATE TABLE table_1473672_5 (position VARCHAR, nhl_team VARCHAR)",
        "question": "What was the position of the player picked by the Montreal Canadiens?"
    },
    {
        "answer": "SELECT MAX(2008) FROM table_name_35 WHERE 2009 = 3.4 AND 2005 > 2.9",
        "context": "CREATE TABLE table_name_35 (Id VARCHAR)",
        "question": "What's the 2008 that has 3.4 in 2009 and more than 2.9 in 2005?"
    },
    {
        "answer": "SELECT date FROM table_name_2 WHERE partner = \"alexander krasnorutskiy\" AND score = \"6\u20133, 4\u20136, 6\u20132\"",
        "context": "CREATE TABLE table_name_2 (date VARCHAR, partner VARCHAR, score VARCHAR)",
        "question": "What date had Alexander Krasnorutskiy as a partner with a score of 6\u20133, 4\u20136, 6\u20132?"
    },
    {
        "answer": "SELECT COUNT(enrollment) FROM table_name_32 WHERE school = \"indianapolis tindley\"",
        "context": "CREATE TABLE table_name_32 (enrollment VARCHAR, school VARCHAR)",
        "question": "How much Enrollment has a School of indianapolis tindley?"
    },
    {
        "answer": "SELECT date_of_creation FROM table_261222_1 WHERE city___municipality = \"Kibawe\"",
        "context": "CREATE TABLE table_261222_1 (date_of_creation VARCHAR, city___municipality VARCHAR)",
        "question": "What day was kibawe created?"
    },
    {
        "answer": "SELECT COUNT(area__km_2__) FROM table_261222_1 WHERE city___municipality = \"Manolo Fortich\"",
        "context": "CREATE TABLE table_261222_1 (area__km_2__ VARCHAR, city___municipality VARCHAR)",
        "question": "How many places are named manolo fortich?"
    },
    {
        "answer": "SELECT international_tourist_arrivals__2010_ FROM table_14752049_3 WHERE international_tourist_arrivals__2011_ = \"8.1 million\"",
        "context": "CREATE TABLE table_14752049_3 (international_tourist_arrivals__2010_ VARCHAR, international_tourist_arrivals__2011_ VARCHAR)",
        "question": "Name the international tourist arrivals for arrivals 2011 for 8.1 million"
    },
    {
        "answer": "SELECT SUM(gold) FROM table_name_2 WHERE bronze = 1 AND total = \"6\" AND silver < 3",
        "context": "CREATE TABLE table_name_2 (gold INTEGER, silver VARCHAR, bronze VARCHAR, total VARCHAR)",
        "question": "what is the gold when the bronze is 1, total is 6 and silver is less than 3?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_14752049_5 WHERE international_tourist_arrivals__2011_ = \"6.2 million\"",
        "context": "CREATE TABLE table_14752049_5 (rank VARCHAR, international_tourist_arrivals__2011_ VARCHAR)",
        "question": "Name the number of ranks for international tourist arrivals being 6.2 million"
    },
    {
        "answer": "SELECT g__\u03bcs_km_ FROM table_261642_3 WHERE frequency__hz_ = \"100k\"",
        "context": "CREATE TABLE table_261642_3 (g__\u03bcs_km_ VARCHAR, frequency__hz_ VARCHAR)",
        "question": "What is the g (\u03bcs/km)when the frequency (hz) is 100k?"
    },
    {
        "answer": "SELECT mascot FROM table_name_82 WHERE county = \"43 kosciusko\"",
        "context": "CREATE TABLE table_name_82 (mascot VARCHAR, county VARCHAR)",
        "question": "what is the mascot when the county is 43 kosciusko?"
    },
    {
        "answer": "SELECT film FROM table_name_23 WHERE category = \"best actress \u2013 musical or comedy\" AND lost_to = \"nicole kidman ( moulin rouge! )\"",
        "context": "CREATE TABLE table_name_23 (film VARCHAR, category VARCHAR, lost_to VARCHAR)",
        "question": "which Film has a Category of best actress \u2013 musical or comedy, and a Lost to of nicole kidman ( moulin rouge! )?"
    },
    {
        "answer": "SELECT category FROM table_name_40 WHERE result = \"nominated\" AND lost_to = \"jennifer westfeldt ( kissing jessica stein )\"",
        "context": "CREATE TABLE table_name_40 (category VARCHAR, result VARCHAR, lost_to VARCHAR)",
        "question": "which Category has a Result of nominated, and a Lost to of jennifer westfeldt ( kissing jessica stein )?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_2 WHERE opponent = \"pittsburgh steelers\" AND opponents > 0",
        "context": "CREATE TABLE table_name_2 (attendance INTEGER, opponent VARCHAR, opponents VARCHAR)",
        "question": "What is the average attendance for games against the Pittsburgh Steelers when the opponents scored more than 0 points?"
    },
    {
        "answer": "SELECT COUNT(population_1891) FROM table_14925084_1 WHERE area_1891__statute_acres_ = 175836",
        "context": "CREATE TABLE table_14925084_1 (population_1891 VARCHAR, area_1891__statute_acres_ VARCHAR)",
        "question": "Name the population 1891 for area being 175836"
    },
    {
        "answer": "SELECT COUNT(administrative_county) FROM table_14925084_1 WHERE area_1961__statute_acres_ = 176694",
        "context": "CREATE TABLE table_14925084_1 (administrative_county VARCHAR, area_1961__statute_acres_ VARCHAR)",
        "question": "Name the number of administrative county for area 1961 and 176694"
    },
    {
        "answer": "SELECT COUNT(week) FROM table_14940519_1 WHERE game_site = \"Memorial Stadium\" AND opponent = \"Buffalo Bills\"",
        "context": "CREATE TABLE table_14940519_1 (week VARCHAR, game_site VARCHAR, opponent VARCHAR)",
        "question": "Name the number of week for game site being memorial stadium for buffalo bills"
    },
    {
        "answer": "SELECT school FROM table_name_27 WHERE enrollment > 533 AND ihsaa_football_class = \"aa\"",
        "context": "CREATE TABLE table_name_27 (school VARCHAR, enrollment VARCHAR, ihsaa_football_class VARCHAR)",
        "question": "What school has more than 533 enrolled and is an IHSAA Football Class of aa?"
    },
    {
        "answer": "SELECT MIN(apps) FROM table_name_33 WHERE rank = 3 AND win__percentage < 0",
        "context": "CREATE TABLE table_name_33 (apps INTEGER, rank VARCHAR, win__percentage VARCHAR)",
        "question": "What is the lowest apps for rank 3 and 0% wins?"
    },
    {
        "answer": "SELECT size FROM table_name_61 WHERE year_joined < 1974 AND ihsaa_class = \"aa\" AND _number___county = \"89 wayne\" AND school = \"centerville\"",
        "context": "CREATE TABLE table_name_61 (size VARCHAR, school VARCHAR, _number___county VARCHAR, year_joined VARCHAR, ihsaa_class VARCHAR)",
        "question": "What's the size of Centerville in 89 Wayne county with an IHSAA class of AA in the year before 1974?"
    },
    {
        "answer": "SELECT year_joined FROM table_name_66 WHERE school = \"hagerstown\"",
        "context": "CREATE TABLE table_name_66 (year_joined VARCHAR, school VARCHAR)",
        "question": "What's the year that Hagerstown joined?"
    },
    {
        "answer": "SELECT previous_conference FROM table_name_88 WHERE size > 287 AND location = \"fountain city\"",
        "context": "CREATE TABLE table_name_88 (previous_conference VARCHAR, size VARCHAR, location VARCHAR)",
        "question": "What's the previous conference of Fountain City with a size more than 287?"
    },
    {
        "answer": "SELECT MAX(ff) FROM table_26176081_29 WHERE solo = 56",
        "context": "CREATE TABLE table_26176081_29 (ff INTEGER, solo VARCHAR)",
        "question": "What is the highest ff when solo is 56?"
    },
    {
        "answer": "SELECT artist FROM table_14977252_2 WHERE draw = 2",
        "context": "CREATE TABLE table_14977252_2 (artist VARCHAR, draw VARCHAR)",
        "question": "Name the artist of 2 draw"
    },
    {
        "answer": "SELECT original_air_date FROM table_2618072_1 WHERE written_by = \"Michael S. Chernuchin & Joe Morgenstern\"",
        "context": "CREATE TABLE table_2618072_1 (original_air_date VARCHAR, written_by VARCHAR)",
        "question": "When was the original air date written by michael s. chernuchin & joe morgenstern?"
    },
    {
        "answer": "SELECT COUNT(title) FROM table_2618119_1 WHERE directed_by = \"Matthew Penn\" AND no_in_series = 143",
        "context": "CREATE TABLE table_2618119_1 (title VARCHAR, directed_by VARCHAR, no_in_series VARCHAR)",
        "question": "How many titles have directors of matthew Penn and number in series of 143?"
    },
    {
        "answer": "SELECT player FROM table_1506950_9 WHERE pga_ch = \"T6\" AND masters = \"T4\" AND us_open = \"T8\"",
        "context": "CREATE TABLE table_1506950_9 (player VARCHAR, us_open VARCHAR, pga_ch VARCHAR, masters VARCHAR)",
        "question": "Which player's results were T6 in the PGA Ch., T4 in the Masters and T8 at the U.S. Open?"
    },
    {
        "answer": "SELECT COUNT(province) FROM table_15081939_4 WHERE evening_gown = \"8.49\"",
        "context": "CREATE TABLE table_15081939_4 (province VARCHAR, evening_gown VARCHAR)",
        "question": "How many provinces have evening gown score of 8.49"
    },
    {
        "answer": "SELECT MIN(s_spoilt_vote) FROM table_15082102_3 WHERE electorate = 83850",
        "context": "CREATE TABLE table_15082102_3 (s_spoilt_vote INTEGER, electorate VARCHAR)",
        "question": "in electorate of 83850 what is the minimum s split vote"
    },
    {
        "answer": "SELECT champion_score FROM table_15161170_1 WHERE division = \"division 2 Men\"",
        "context": "CREATE TABLE table_15161170_1 (champion_score VARCHAR, division VARCHAR)",
        "question": "When the division is Division 2 men what is the champion score?"
    },
    {
        "answer": "SELECT institution FROM table_261954_1 WHERE nickname = \"Quakers\"",
        "context": "CREATE TABLE table_261954_1 (institution VARCHAR, nickname VARCHAR)",
        "question": "What is every institution with the nickname of Quakers?"
    },
    {
        "answer": "SELECT event FROM table_name_61 WHERE tournament = \"european championships\" AND year = 2006",
        "context": "CREATE TABLE table_name_61 (event VARCHAR, tournament VARCHAR, year VARCHAR)",
        "question": "What event has european championships as the tournament, with 2006 as the year?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_58 WHERE country = \"egypt\"",
        "context": "CREATE TABLE table_name_58 (rank INTEGER, country VARCHAR)",
        "question": "What is the highest rank for the team of egypt?"
    },
    {
        "answer": "SELECT race_winner FROM table_15187794_1 WHERE circuit = \"Magny-Cours\"",
        "context": "CREATE TABLE table_15187794_1 (race_winner VARCHAR, circuit VARCHAR)",
        "question": "Who won the race at Magny-Cours"
    },
    {
        "answer": "SELECT losses FROM table_26200568_16 WHERE club = \"Toronto Downtown Dingos\"",
        "context": "CREATE TABLE table_26200568_16 (losses VARCHAR, club VARCHAR)",
        "question": "How many losses does Toronto Downtown Dingos have?"
    },
    {
        "answer": "SELECT COUNT(voltage_range__v_) FROM table_15261_1 WHERE clock_multiplier = \"3X or 2X mode\" AND part_number = \"A80486DX4WB-100\"",
        "context": "CREATE TABLE table_15261_1 (voltage_range__v_ VARCHAR, clock_multiplier VARCHAR, part_number VARCHAR)",
        "question": "What is the voltage range (v) if the clock multiplier is 3x or 2x mode and part number is a80486dx4wb-100?"
    },
    {
        "answer": "SELECT clock_multiplier FROM table_15261_1 WHERE voltage_range__v_ = \"3.3 - 3.6\" AND input_clock__mhz_ = \"33 X 3 / 50 X 2\" AND part_number = \"A80486DX4-100\"",
        "context": "CREATE TABLE table_15261_1 (clock_multiplier VARCHAR, part_number VARCHAR, voltage_range__v_ VARCHAR, input_clock__mhz_ VARCHAR)",
        "question": "What is the clock multiplier if the voltage range (v) is 3.3 - 3.6; input clock (mhz) is 33 x 3 / 50 x 2; and part number is a80486dx4-100?"
    },
    {
        "answer": "SELECT COUNT(points) AS defending FROM table_26218783_6 WHERE player = \"Stanislas Wawrinka\"",
        "context": "CREATE TABLE table_26218783_6 (points VARCHAR, player VARCHAR)",
        "question": "How many times is player Stanislas Wawrinka on the list?"
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_40 WHERE gymnast = \"robert stanescu ( rou )\" AND b_score > 8.75",
        "context": "CREATE TABLE table_name_40 (total INTEGER, gymnast VARCHAR, b_score VARCHAR)",
        "question": "What is the total for Robert Stanescu ( rou ), when the B Score is larger than 8.75?"
    },
    {
        "answer": "SELECT college FROM table_15353123_1 WHERE player = \"Dean Kirkland\"",
        "context": "CREATE TABLE table_15353123_1 (college VARCHAR, player VARCHAR)",
        "question": "Which college did Dean Kirkland go to"
    },
    {
        "answer": "SELECT Season AS episode__number FROM table_2623498_4 WHERE written_by = \"Mark Drop\"",
        "context": "CREATE TABLE table_2623498_4 (Season VARCHAR, written_by VARCHAR)",
        "question": "Which episodes in season 3 were written by Mark Drop?"
    },
    {
        "answer": "SELECT COUNT(metropolitan_borough_)[c_] FROM table_15366849_1 WHERE station = \"Dorridge\"",
        "context": "CREATE TABLE table_15366849_1 (c_ VARCHAR, metropolitan_borough_ VARCHAR, station VARCHAR)",
        "question": "How many metropolitan boroughs have dorridge as a station?"
    },
    {
        "answer": "SELECT MAX(bronze) FROM table_name_64 WHERE nation = \"south africa (rsa)\" AND total > 16",
        "context": "CREATE TABLE table_name_64 (bronze INTEGER, nation VARCHAR, total VARCHAR)",
        "question": "What's the bronze count for South Africa (RSA) with a total more than 16?"
    },
    {
        "answer": "SELECT AVG(election) FROM table_name_50 WHERE province = \"grosseto\" AND established < 1766",
        "context": "CREATE TABLE table_name_50 (election INTEGER, province VARCHAR, established VARCHAR)",
        "question": "What is the average election result for the province of Grosseto from 1766 and prior?"
    },
    {
        "answer": "SELECT COUNT(all_bills_cosponsored) FROM table_name_80 WHERE all_amendments_sponsored < 15 AND all_bills_sponsored = 6 AND all_amendments_cosponsored < 0",
        "context": "CREATE TABLE table_name_80 (all_bills_cosponsored VARCHAR, all_amendments_cosponsored VARCHAR, all_amendments_sponsored VARCHAR, all_bills_sponsored VARCHAR)",
        "question": "What is the total number of all bills co-sponsored associated with all amendments sponsored under 15, all bills sponsored of 6, and 0 amendments cosponsored?"
    },
    {
        "answer": "SELECT old_english_day_name FROM table_2624098_1 WHERE modern_english_day_name = \"Saturday\"",
        "context": "CREATE TABLE table_2624098_1 (old_english_day_name VARCHAR, modern_english_day_name VARCHAR)",
        "question": "what is the old English name of Saturday? "
    },
    {
        "answer": "SELECT english_day_name_meaning FROM table_2624098_1 WHERE old_english_day_name = \"S\u00e6turnesd\u00e6g\"",
        "context": "CREATE TABLE table_2624098_1 (english_day_name_meaning VARCHAR, old_english_day_name VARCHAR)",
        "question": "what is the English meaning of the old English name \"s\u00e6turnesd\u00e6g\"?"
    },
    {
        "answer": "SELECT COUNT(english_day_name_meaning) FROM table_2624098_1 WHERE modern_english_day_name = \"Wednesday\"",
        "context": "CREATE TABLE table_2624098_1 (english_day_name_meaning VARCHAR, modern_english_day_name VARCHAR)",
        "question": "how many different meanings does Wednesday have?"
    },
    {
        "answer": "SELECT MIN(all_amendments_sponsored) FROM table_name_52 WHERE bills_originally_cosponsored = 150 AND all_bills_cosponsored > 247",
        "context": "CREATE TABLE table_name_52 (all_amendments_sponsored INTEGER, bills_originally_cosponsored VARCHAR, all_bills_cosponsored VARCHAR)",
        "question": "What is the fewest amendments sponsored associated with 150 bills originally cosponsored and over 247 bills cosponsored?"
    },
    {
        "answer": "SELECT station FROM table_name_79 WHERE country_of_origin = \"china\" AND frequency = \"684khz\"",
        "context": "CREATE TABLE table_name_79 (station VARCHAR, country_of_origin VARCHAR, frequency VARCHAR)",
        "question": "Which station is from China and has a frequency of 684khz?"
    },
    {
        "answer": "SELECT name FROM table_15463188_7 WHERE school_club_team = \"State\"",
        "context": "CREATE TABLE table_15463188_7 (name VARCHAR, school_club_team VARCHAR)",
        "question": "Name the name of the state"
    },
    {
        "answer": "SELECT points FROM table_15467476_2 WHERE club = \"Pontrhydyfen RFC\"",
        "context": "CREATE TABLE table_15467476_2 (points VARCHAR, club VARCHAR)",
        "question": "Name the points for  pontrhydyfen rfc"
    },
    {
        "answer": "SELECT SUM(debut_year) FROM table_name_39 WHERE years_at_club = \"1950\u20131951\" AND games > 14",
        "context": "CREATE TABLE table_name_39 (debut_year INTEGER, years_at_club VARCHAR, games VARCHAR)",
        "question": "How many debut years have Years at club of 1950\u20131951, and Games larger than 14?"
    },
    {
        "answer": "SELECT MAX(year_of_release) FROM table_name_71 WHERE title = \"greatest hits\"",
        "context": "CREATE TABLE table_name_71 (year_of_release INTEGER, title VARCHAR)",
        "question": "What was the latest year of release for the greatest hits title?"
    },
    {
        "answer": "SELECT AVG(latitude) FROM table_name_57 WHERE water__sqmi_ = 0.058 AND ansi_code < 1759683",
        "context": "CREATE TABLE table_name_57 (latitude INTEGER, water__sqmi_ VARCHAR, ansi_code VARCHAR)",
        "question": "what is the latitude when water (sqmi) is 0.058 and the ansi code is less than 1759683?"
    },
    {
        "answer": "SELECT week__number FROM table_26250253_1 WHERE original_artist = \"The Temptations\"",
        "context": "CREATE TABLE table_26250253_1 (week__number VARCHAR, original_artist VARCHAR)",
        "question": "The original artist The Temptations has what week #?"
    },
    {
        "answer": "SELECT MAX(no) FROM table_15621965_17 WHERE position = \"Guard\" AND school_club_team = \"Wake Forest\"",
        "context": "CREATE TABLE table_15621965_17 (no INTEGER, position VARCHAR, school_club_team VARCHAR)",
        "question": "What is the latest number of the guard position from the Wake Forest school team?"
    },
    {
        "answer": "SELECT founded FROM table_262505_1 WHERE current_conference = \"school closed in 2005\"",
        "context": "CREATE TABLE table_262505_1 (founded VARCHAR, current_conference VARCHAR)",
        "question": "Name the founded for school closed in 2005"
    },
    {
        "answer": "SELECT no FROM table_15621965_18 WHERE position = \"Guard\" AND school_club_team = \"Oklahoma State\"",
        "context": "CREATE TABLE table_15621965_18 (no VARCHAR, position VARCHAR, school_club_team VARCHAR)",
        "question": "WHAT WAS THE JERSEY NUMBER OF THE ROSTER PLAYER FROM OKLAHOMA STATE WHO PLAYED GUARD?"
    },
    {
        "answer": "SELECT catalog_number FROM table_name_30 WHERE a_side = \"venus demilo\"",
        "context": "CREATE TABLE table_name_30 (catalog_number VARCHAR, a_side VARCHAR)",
        "question": "What is the catalog number of Venus Demilo's A-side?"
    },
    {
        "answer": "SELECT no_in_series FROM table_26259391_1 WHERE production_code = \"8ACX05\"",
        "context": "CREATE TABLE table_26259391_1 (no_in_series VARCHAR, production_code VARCHAR)",
        "question": "how many series have production code 8acx05"
    },
    {
        "answer": "SELECT centerfold_model FROM table_1566848_6 WHERE interview_subject = \"Steve Jobs\"",
        "context": "CREATE TABLE table_1566848_6 (centerfold_model VARCHAR, interview_subject VARCHAR)",
        "question": "Name the centerfold model when interview subject is steve jobs"
    },
    {
        "answer": "SELECT COUNT(sprints_classification) FROM table_26257223_13 WHERE winner = \"Joaquin Rodriguez\"",
        "context": "CREATE TABLE table_26257223_13 (sprints_classification VARCHAR, winner VARCHAR)",
        "question": "How many sprints classifications were associated with an overall winner of Joaquin Rodriguez?"
    },
    {
        "answer": "SELECT team_classification FROM table_26257223_13 WHERE winner = \"Chris Horner\"",
        "context": "CREATE TABLE table_26257223_13 (team_classification VARCHAR, winner VARCHAR)",
        "question": "Who led team classification during the stage whose winner was Chris Horner?"
    },
    {
        "answer": "SELECT sprints_classification FROM table_26257223_13 WHERE general_classification = \"Chris Horner\"",
        "context": "CREATE TABLE table_26257223_13 (sprints_classification VARCHAR, general_classification VARCHAR)",
        "question": "Who led sprints classification when Chris Horner led general classification?"
    },
    {
        "answer": "SELECT COUNT(winning_constructor) FROM table_26258348_4 WHERE fastest_lap = \"Mark Webber\"",
        "context": "CREATE TABLE table_26258348_4 (winning_constructor VARCHAR, fastest_lap VARCHAR)",
        "question": "How many winning constructor catagories are there when Mark Webber had the fastest lap? "
    },
    {
        "answer": "SELECT release_price___usd__ FROM table_name_96 WHERE gpu_frequency = \"standard power, embedded\"",
        "context": "CREATE TABLE table_name_96 (release_price___usd__ VARCHAR, gpu_frequency VARCHAR)",
        "question": "What is the release price for the GPU frequency of standard power, embedded?"
    },
    {
        "answer": "SELECT enrollment FROM table_262534_2 WHERE location__population_ = \"Lebanon, Tennessee (20,235)\"",
        "context": "CREATE TABLE table_262534_2 (enrollment VARCHAR, location__population_ VARCHAR)",
        "question": "What is the enrollment for the institution that is located in Lebanon, Tennessee (20,235)?"
    },
    {
        "answer": "SELECT tie_no FROM table_name_77 WHERE home_team = \"crawley town\"",
        "context": "CREATE TABLE table_name_77 (tie_no VARCHAR, home_team VARCHAR)",
        "question": "Crawley Town as the home team has what as the tie no?"
    },
    {
        "answer": "SELECT date FROM table_26267607_2 WHERE winning_team = \"Abt Sportsline\" AND pole_position = \"Mattias Ekstr\u00f6m\" AND circuit = \"circuit Ricardo Tormo , Valencia\"",
        "context": "CREATE TABLE table_26267607_2 (date VARCHAR, circuit VARCHAR, winning_team VARCHAR, pole_position VARCHAR)",
        "question": "On what date is the winning team Abt Sportsline and pole position Mattias Ekstr\u00f6m in the Circuit Ricardo Tormo , Valencia?"
    },
    {
        "answer": "SELECT winning_driver FROM table_26267607_2 WHERE fastest_lap = \"Mike Rockenfeller\"",
        "context": "CREATE TABLE table_26267607_2 (winning_driver VARCHAR, fastest_lap VARCHAR)",
        "question": "Where the fastest lap is Mike Rockenfeller, who is the winning driver?"
    },
    {
        "answer": "SELECT theme FROM table_15778392_1 WHERE week__number = \"Top 8\"",
        "context": "CREATE TABLE table_15778392_1 (theme VARCHAR, week__number VARCHAR)",
        "question": "WHERE THE WEEK NUMBER WAS TOP 8, WHAT WAS THE THEME?"
    },
    {
        "answer": "SELECT series FROM table_name_66 WHERE title = \"peck up your troubles\"",
        "context": "CREATE TABLE table_name_66 (series VARCHAR, title VARCHAR)",
        "question": "From what series is Peck Up Your Troubles?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_15780718_6 WHERE score = \"W 105\u201391 (OT)\"",
        "context": "CREATE TABLE table_15780718_6 (high_rebounds VARCHAR, score VARCHAR)",
        "question": "Name for the high rebounds when score is  w 105\u201391 (ot)"
    },
    {
        "answer": "SELECT participants_recipients FROM table_26282750_1 WHERE category = \"Best Female Actor\"",
        "context": "CREATE TABLE table_26282750_1 (participants_recipients VARCHAR, category VARCHAR)",
        "question": "Who was the participant or recipient for the Best Female Actor?"
    },
    {
        "answer": "SELECT film_festival FROM table_26282750_1 WHERE category = \"Best Male Actor\"",
        "context": "CREATE TABLE table_26282750_1 (film_festival VARCHAR, category VARCHAR)",
        "question": "What film festival had the Best Male Actor?"
    },
    {
        "answer": "SELECT MIN(european_parliament_seats) FROM table_158282_1 WHERE international_affiliation = \"Global Greens, EGP\"",
        "context": "CREATE TABLE table_158282_1 (european_parliament_seats INTEGER, international_affiliation VARCHAR)",
        "question": "What is the smallest number of European Parliament sets when the international affiliation is global greens, egp? "
    },
    {
        "answer": "SELECT COUNT(draws) FROM table_name_66 WHERE against > 924 AND club = \"mortlake\" AND losses < 14",
        "context": "CREATE TABLE table_name_66 (draws VARCHAR, losses VARCHAR, against VARCHAR, club VARCHAR)",
        "question": "Mortlake club has more than 924 against, less than 14 losses, and how many total draws?"
    },
    {
        "answer": "SELECT AVG(population__2004_) FROM table_name_38 WHERE moroccan_population > 234506",
        "context": "CREATE TABLE table_name_38 (population__2004_ INTEGER, moroccan_population INTEGER)",
        "question": "Which Population (2004) has a Moroccan population larger than 234506?"
    },
    {
        "answer": "SELECT date FROM table_name_98 WHERE opponent = \"vfl sindelfingen\"",
        "context": "CREATE TABLE table_name_98 (date VARCHAR, opponent VARCHAR)",
        "question": "What date was the opponent VFL Sindelfingen?"
    },
    {
        "answer": "SELECT gdp__ppp__per_capita___intl_$___2011 FROM table_26313243_1 WHERE country = \"Haiti\"",
        "context": "CREATE TABLE table_26313243_1 (gdp__ppp__per_capita___intl_$___2011 VARCHAR, country VARCHAR)",
        "question": "Name the gdp per capita for haiti"
    },
    {
        "answer": "SELECT ppv FROM table_15887683_4 WHERE television_service = \"Sky Calcio 5\"",
        "context": "CREATE TABLE table_15887683_4 (ppv VARCHAR, television_service VARCHAR)",
        "question": "Do the Sky Calcio 5 channels have PPV?"
    },
    {
        "answer": "SELECT score FROM table_name_90 WHERE competition = \"league cup\" AND season = \"2007-08\"",
        "context": "CREATE TABLE table_name_90 (score VARCHAR, competition VARCHAR, season VARCHAR)",
        "question": "What was the score of the league cup in the 2007-08 season?"
    },
    {
        "answer": "SELECT years_produced FROM table_26352332_4 WHERE cylinder_layout = \"V8\"",
        "context": "CREATE TABLE table_26352332_4 (years_produced VARCHAR, cylinder_layout VARCHAR)",
        "question": "The cylinder layout v8 is produced in what years?"
    },
    {
        "answer": "SELECT company FROM table_name_74 WHERE author = \"aristophanes\" AND play = \"plutus\"",
        "context": "CREATE TABLE table_name_74 (company VARCHAR, author VARCHAR, play VARCHAR)",
        "question": "Which company has an author of Aristophanes and play of Plutus?"
    },
    {
        "answer": "SELECT cylinder_layout FROM table_26352332_4 WHERE years_produced = \"2007-current\" AND engine_family = \"MaxxForce 5\"",
        "context": "CREATE TABLE table_26352332_4 (cylinder_layout VARCHAR, years_produced VARCHAR, engine_family VARCHAR)",
        "question": "The engine family MaxxForce 5\t in the years produced 2007-current, have what cylinder layout?"
    },
    {
        "answer": "SELECT coinage_metal FROM table_26336060_19 WHERE km_number = \"S75\"",
        "context": "CREATE TABLE table_26336060_19 (coinage_metal VARCHAR, km_number VARCHAR)",
        "question": "What is the coinage metal for a KM number of S75?"
    },
    {
        "answer": "SELECT country FROM table_name_33 WHERE base = \"athens\" AND company = \"attis theatre\"",
        "context": "CREATE TABLE table_name_33 (country VARCHAR, base VARCHAR, company VARCHAR)",
        "question": "What is the country of the play based in Athens at the Attis Theatre company?"
    },
    {
        "answer": "SELECT COUNT(quantity) FROM table_name_11 WHERE type = \"1\u2032c1\u2032 h2t\"",
        "context": "CREATE TABLE table_name_11 (quantity VARCHAR, type VARCHAR)",
        "question": "How much Quantity has a Type of 1\u2032c1\u2032 h2t?"
    },
    {
        "answer": "SELECT COUNT(place) FROM table_name_85 WHERE team = \"tauro\" AND played < 18",
        "context": "CREATE TABLE table_name_85 (place VARCHAR, team VARCHAR, played VARCHAR)",
        "question": "how many times is the team tauro and played less than 18?"
    },
    {
        "answer": "SELECT january FROM table_15945862_1 WHERE june = \"7.34\"",
        "context": "CREATE TABLE table_15945862_1 (january VARCHAR, june VARCHAR)",
        "question": "January 7.34 where is June ?"
    },
    {
        "answer": "SELECT result FROM table_name_63 WHERE week > 1 AND attendance = \"69,149\" AND opponent = \"seattle seahawks\"",
        "context": "CREATE TABLE table_name_63 (result VARCHAR, opponent VARCHAR, week VARCHAR, attendance VARCHAR)",
        "question": "Playing against the Seattle Seahawks in a week after week 1 before 69,149 people what was the result of the game?"
    },
    {
        "answer": "SELECT left_office FROM table_26362472_1 WHERE province = \"Seville\"",
        "context": "CREATE TABLE table_26362472_1 (left_office VARCHAR, province VARCHAR)",
        "question": "What are the dates of leaving office for politician from the province of Seville?"
    },
    {
        "answer": "SELECT 102 AS kg FROM table_name_56 WHERE world_record = \"olympic record\" AND \"snatch\" = \"snatch\"",
        "context": "CREATE TABLE table_name_56 (world_record VARCHAR)",
        "question": "What's the 102kg when the snatch was snatch and the olympic record was the world record?"
    },
    {
        "answer": "SELECT COUNT(transmitted) FROM table_1601792_4 WHERE frequency = \"7 UHF\"",
        "context": "CREATE TABLE table_1601792_4 (transmitted VARCHAR, frequency VARCHAR)",
        "question": "How many stations are transmitted on frequency 7 uhf?"
    },
    {
        "answer": "SELECT COUNT(*) FROM table_1604579_2 WHERE country = \"Austria\"",
        "context": "CREATE TABLE table_1604579_2 (country VARCHAR)",
        "question": "How many freedom indices does the country of Austria have?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_26375386_20 WHERE vote_percentage = \"15.0%\"",
        "context": "CREATE TABLE table_26375386_20 (total VARCHAR, vote_percentage VARCHAR)",
        "question": "How many times was the vote percentage 15.0%?"
    },
    {
        "answer": "SELECT 2008 AS _candidates FROM table_16185956_1 WHERE district = \"Washington 1\"",
        "context": "CREATE TABLE table_16185956_1 (district VARCHAR)",
        "question": "Who are the candidates in Washington 1 district?"
    },
    {
        "answer": "SELECT COUNT(rank_by_average) FROM table_26375386_28 WHERE couple = \"Tana and Stuart\"",
        "context": "CREATE TABLE table_26375386_28 (rank_by_average VARCHAR, couple VARCHAR)",
        "question": "How many ranks by average for the couple Tana and Stuart?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_26375386_22 WHERE public = 3",
        "context": "CREATE TABLE table_26375386_22 (total VARCHAR, public VARCHAR)",
        "question": "Name the total number for 3 public"
    },
    {
        "answer": "SELECT primary_cartridge FROM table_26389588_1 WHERE year_of_introduction = \"1962\" AND country_of_origin = \"Denmark\"",
        "context": "CREATE TABLE table_26389588_1 (primary_cartridge VARCHAR, year_of_introduction VARCHAR, country_of_origin VARCHAR)",
        "question": "If the Country of Origin is Denmark and the year of introduction is 1962, what is the primary cartridge?"
    },
    {
        "answer": "SELECT MAX(season) FROM table_name_34 WHERE team = \"prema powerteam\" AND series = \"masters of formula three\"",
        "context": "CREATE TABLE table_name_34 (season INTEGER, team VARCHAR, series VARCHAR)",
        "question": "What is the most recent season for the Prema Powerteam with a Masters of Formula Three series?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_49 WHERE nationality = \"australia\" AND name = \"leisel jones\" AND lane > 4",
        "context": "CREATE TABLE table_name_49 (rank INTEGER, lane VARCHAR, nationality VARCHAR, name VARCHAR)",
        "question": "Can you tell me the lowest Rank that has the Nationality of australia, and the Name of leisel jones, and the Lane larger than 4?"
    },
    {
        "answer": "SELECT winning_song FROM table_1646960_3 WHERE debut_album = \"The winner\"",
        "context": "CREATE TABLE table_1646960_3 (winning_song VARCHAR, debut_album VARCHAR)",
        "question": "What is the winning song for the artist with a debut album \"the winner\"?"
    },
    {
        "answer": "SELECT COUNT(production_code) FROM table_26429543_1 WHERE us_viewers__millions_ = \"4.69\"",
        "context": "CREATE TABLE table_26429543_1 (production_code VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "How many different production codes are there for the episode with 4.69 million US viewers?"
    },
    {
        "answer": "SELECT AVG(lower_index_kcal__nm_3) FROM table_name_5 WHERE lower_index_mj__nm_3 = 74.54 AND upper_index_kcal__nm_3 < 19 OFFSET 376",
        "context": "CREATE TABLE table_name_5 (lower_index_kcal__nm_3 INTEGER, lower_index_mj__nm_3 VARCHAR, upper_index_kcal__nm_3 VARCHAR)",
        "question": "What is the Lower index Kcal/ Nm 3 entry, for the row with entries of an Upper index Kcal/ Nm 3 smaller than 19,376, and a Lower index MJ/ Nm 3 of 74.54?"
    },
    {
        "answer": "SELECT SUM(upper_index_kcal__nm_3) FROM table_name_1 WHERE lower_index_mj__nm_3 > 47.91 AND fuel_gas = \"propylene\" AND upper_index_mj__nm_3 > 77.04",
        "context": "CREATE TABLE table_name_1 (upper_index_kcal__nm_3 INTEGER, upper_index_mj__nm_3 VARCHAR, lower_index_mj__nm_3 VARCHAR, fuel_gas VARCHAR)",
        "question": "What is the entry for Upper index Kcal/ Nm 3 for the row with an entry that has a Lower index MJ/ Nm 3 larger than 47.91, for propylene, and an Upper index MJ/ Nm 3 larger than 77.04?"
    },
    {
        "answer": "SELECT COUNT(title) FROM table_165732_2 WHERE episode__number = 2",
        "context": "CREATE TABLE table_165732_2 (title VARCHAR, episode__number VARCHAR)",
        "question": "How many titles does Episode 2 have"
    },
    {
        "answer": "SELECT ticket_price_s_ FROM table_name_56 WHERE date_s_ = \"september 16, 1986\"",
        "context": "CREATE TABLE table_name_56 (ticket_price_s_ VARCHAR, date_s_ VARCHAR)",
        "question": "What was the ticket price on September 16, 1986?"
    },
    {
        "answer": "SELECT AVG(metropolitan_population__2006__millions) FROM table_name_38 WHERE metropolitan_area = \"lima\" AND gdp__ppp__us$_per_capita > 13 OFFSET 100",
        "context": "CREATE TABLE table_name_38 (metropolitan_population__2006__millions INTEGER, metropolitan_area VARCHAR, gdp__ppp__us$_per_capita VARCHAR)",
        "question": "What is the average 2006 metropolitan population of Lima with a GDP per capita over $13,100?"
    },
    {
        "answer": "SELECT MIN(prominence__m_) FROM table_name_67 WHERE elevation__m_ = 3 OFFSET 095",
        "context": "CREATE TABLE table_name_67 (prominence__m_ INTEGER, elevation__m_ VARCHAR)",
        "question": "Which Prominence (m) has an Elevation (m) of 3,095?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_16661199_2 WHERE giants_points = 10",
        "context": "CREATE TABLE table_16661199_2 (attendance INTEGER, giants_points VARCHAR)",
        "question": "Name the most attendance for giants points of 10"
    },
    {
        "answer": "SELECT candidates FROM table_2646656_3 WHERE result = \"Retired Republican hold\" AND incumbent = \"Philemon Bliss\"",
        "context": "CREATE TABLE table_2646656_3 (candidates VARCHAR, result VARCHAR, incumbent VARCHAR)",
        "question": "Who were the candidates where the result was retired Republican hold and the incumbent was Philemon Bliss?"
    },
    {
        "answer": "SELECT score FROM table_name_67 WHERE location_attendance = \"chicago stadium\"",
        "context": "CREATE TABLE table_name_67 (score VARCHAR, location_attendance VARCHAR)",
        "question": "What was the score of the game at the Chicago Stadium?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_16729076_1 WHERE game_site = \"Kingdome\"",
        "context": "CREATE TABLE table_16729076_1 (attendance INTEGER, game_site VARCHAR)",
        "question": "what is the attendance where the game site is kingdome?"
    },
    {
        "answer": "SELECT location FROM table_26476336_2 WHERE years = \"2005-2010\"",
        "context": "CREATE TABLE table_26476336_2 (location VARCHAR, years VARCHAR)",
        "question": "What location is listed from 2005-2010?"
    },
    {
        "answer": "SELECT MAX(total) FROM table_name_72 WHERE date = 1602 AND greater_doubles < 16",
        "context": "CREATE TABLE table_name_72 (total INTEGER, date VARCHAR, greater_doubles VARCHAR)",
        "question": "Which Total has a Date of 1602, and Greater Doubles smaller than 16?"
    },
    {
        "answer": "SELECT COUNT(size__steps_) FROM table_name_26 WHERE just_ratio = \"10:9\" AND size__cents_ > 160",
        "context": "CREATE TABLE table_name_26 (size__steps_ VARCHAR, just_ratio VARCHAR, size__cents_ VARCHAR)",
        "question": "What is the value of the size (steps) that has just ratio 10:9 and a size (cents) more than 160"
    },
    {
        "answer": "SELECT COUNT(genre) FROM table_26488540_1 WHERE artist = \"The Jimi Hendrix Experience\"",
        "context": "CREATE TABLE table_26488540_1 (genre VARCHAR, artist VARCHAR)",
        "question": "How many different genres appear for the Jimi Hendrix Experience?"
    },
    {
        "answer": "SELECT COUNT(republican) AS :_saxby_chambliss FROM table_16751596_16 WHERE lead_margin = 21",
        "context": "CREATE TABLE table_16751596_16 (republican VARCHAR, lead_margin VARCHAR)",
        "question": "How many times did Saxby Chambliss have a lead margin of 21?"
    },
    {
        "answer": "SELECT rank_on_channel FROM table_26493520_3 WHERE original_air_date = \"January 21, 2011\"",
        "context": "CREATE TABLE table_26493520_3 (rank_on_channel VARCHAR, original_air_date VARCHAR)",
        "question": "Name the rank on channel for january 21, 2011"
    },
    {
        "answer": "SELECT COUNT(title) FROM table_26493520_1 WHERE written_by = \"Alexander Woo\" AND directed_by = \"Scott Winant\"",
        "context": "CREATE TABLE table_26493520_1 (title VARCHAR, written_by VARCHAR, directed_by VARCHAR)",
        "question": "How many episodes were written by Alexander Woo and directed by Scott Winant?"
    },
    {
        "answer": "SELECT democratic_coalition FROM table_2651755_1 WHERE together_we_can_do_more = \"Sergio Castro ( PC )\"",
        "context": "CREATE TABLE table_2651755_1 (democratic_coalition VARCHAR, together_we_can_do_more VARCHAR)",
        "question": "What is the democratic coalation when together we can do more is sergio castro ( pc )?"
    },
    {
        "answer": "SELECT independent_regional_force FROM table_2651755_1 WHERE democratic_coalition = \"(R) Jorge Tarud ( PPD )\"",
        "context": "CREATE TABLE table_2651755_1 (independent_regional_force VARCHAR, democratic_coalition VARCHAR)",
        "question": "Who is the independent regional force when democratic coalition is (r) jorge tarud ( ppd )?"
    },
    {
        "answer": "SELECT COUNT(year_joined) FROM table_name_48 WHERE mascot = \"ingots\" AND year_left > 2007",
        "context": "CREATE TABLE table_name_48 (year_joined VARCHAR, mascot VARCHAR, year_left VARCHAR)",
        "question": "What year did the Ingots, who left after 2007, join?"
    },
    {
        "answer": "SELECT snatch FROM table_16779068_5 WHERE body_weight = \"737\"",
        "context": "CREATE TABLE table_16779068_5 (snatch VARCHAR, body_weight VARCHAR)",
        "question": "Name the snatch when body weight is 73.7"
    },
    {
        "answer": "SELECT metrical_equivalence FROM table_26538461_2 WHERE portuguese_name = \"Linha\"",
        "context": "CREATE TABLE table_26538461_2 (metrical_equivalence VARCHAR, portuguese_name VARCHAR)",
        "question": "Name the metrical equivalence for linha"
    },
    {
        "answer": "SELECT market_value__billion_$_ FROM table_1682026_2 WHERE assets__billion_$_ = \"2,550\"",
        "context": "CREATE TABLE table_1682026_2 (market_value__billion_$_ VARCHAR, assets__billion_$_ VARCHAR)",
        "question": "When the assets are 2,550, what is the Market Value?"
    },
    {
        "answer": "SELECT opponent FROM table_16864968_9 WHERE location = \"Prudential Center\"",
        "context": "CREATE TABLE table_16864968_9 (opponent VARCHAR, location VARCHAR)",
        "question": "Nam the opponent for prudential center"
    },
    {
        "answer": "SELECT MAX(shirt_no) FROM table_name_24 WHERE height < 190 AND player = \"henry bell cisnero\"",
        "context": "CREATE TABLE table_name_24 (shirt_no INTEGER, height VARCHAR, player VARCHAR)",
        "question": "What is the Shirt No for Henry Bell Cisnero whose height is less than 190?"
    },
    {
        "answer": "SELECT MAX(height) FROM table_name_15 WHERE position = \"libero\"",
        "context": "CREATE TABLE table_name_15 (height INTEGER, position VARCHAR)",
        "question": "What is the height of the person whose position is Libero?"
    },
    {
        "answer": "SELECT original_air_date FROM table_26561498_1 WHERE patient_portrayer = \"Julie Warner\"",
        "context": "CREATE TABLE table_26561498_1 (original_air_date VARCHAR, patient_portrayer VARCHAR)",
        "question": "what is the original air date for julie warner?"
    },
    {
        "answer": "SELECT written_by FROM table_26561509_1 WHERE directed_by = \"Charles Haid\" AND no = 54",
        "context": "CREATE TABLE table_26561509_1 (written_by VARCHAR, directed_by VARCHAR, no VARCHAR)",
        "question": "The episode with the no. 54, directed by Charles Haid, is written by who?"
    },
    {
        "answer": "SELECT MIN(free) FROM table_name_87 WHERE athlete = \"apolline dreyfuss & lila meesseman-bakir\" AND total > 90.333",
        "context": "CREATE TABLE table_name_87 (free INTEGER, athlete VARCHAR, total VARCHAR)",
        "question": "What is the free of Apolline Dreyfuss & Lila Meesseman-Bakir, when the total was larger than 90.333?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_name_45 WHERE manner_of_departure = \"sacked\" AND team = \"nejapa\"",
        "context": "CREATE TABLE table_name_45 (date_of_vacancy VARCHAR, manner_of_departure VARCHAR, team VARCHAR)",
        "question": "What is the date of vacancy when the manner of departure is sacked and the team is nejapa?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_name_54 WHERE date_of_appointment = \"1 january 2009\"",
        "context": "CREATE TABLE table_name_54 (date_of_vacancy VARCHAR, date_of_appointment VARCHAR)",
        "question": "what is the date of vacancy when the date of appointment is 1 january 2009?"
    },
    {
        "answer": "SELECT ratings__kansai_ FROM table_26591434_1 WHERE original_airdate = \"May 25, 2010 22.00 - 22.54\"",
        "context": "CREATE TABLE table_26591434_1 (ratings__kansai_ VARCHAR, original_airdate VARCHAR)",
        "question": "What is the ratings for the original air date may 25, 2010 22.00 - 22.54?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_name_70 WHERE position_in_table = \"10th\" AND team = \"balboa\"",
        "context": "CREATE TABLE table_name_70 (date_of_vacancy VARCHAR, position_in_table VARCHAR, team VARCHAR)",
        "question": "what is the date of vacancy when the position in table is 10th and the team is balboa?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_name_2 WHERE team = \"firpo\" AND replaced_by = \"oscar benitez\"",
        "context": "CREATE TABLE table_name_2 (date_of_vacancy VARCHAR, team VARCHAR, replaced_by VARCHAR)",
        "question": "what is the date of vacancy when the team is firpo and replaced by is oscar benitez?"
    },
    {
        "answer": "SELECT position_in_table FROM table_17039232_3 WHERE date_of_appointment = \"1 July 2008\" AND manner_of_departure = \"Resigned\"",
        "context": "CREATE TABLE table_17039232_3 (position_in_table VARCHAR, date_of_appointment VARCHAR, manner_of_departure VARCHAR)",
        "question": "Name the position in table for 1 july 2008 when manner of departure is resigned"
    },
    {
        "answer": "SELECT SUM(no_in_series) FROM table_name_5 WHERE written_by = \"sam meikle\" AND no_in_season = 21",
        "context": "CREATE TABLE table_name_5 (no_in_series INTEGER, written_by VARCHAR, no_in_season VARCHAR)",
        "question": "What is the sum of the numbers in series written by sam meikle, which have 21 numbers in the season?"
    },
    {
        "answer": "SELECT brighton_cast FROM table_17085724_1 WHERE character = \"Jerry Cruncher\"",
        "context": "CREATE TABLE table_17085724_1 (brighton_cast VARCHAR, character VARCHAR)",
        "question": "Name the brighton cast for jerry cruncher"
    },
    {
        "answer": "SELECT AVG(tourism_receipts__2011___millions_of_us) AS $_ FROM table_name_41 WHERE tourist_arrivals__2011___millions_ < 1.141 AND tourism_receipts__2011___us$_per_arrival_ > 1 OFFSET 449",
        "context": "CREATE TABLE table_name_41 (tourism_receipts__2011___millions_of_us INTEGER, tourist_arrivals__2011___millions_ VARCHAR, tourism_receipts__2011___us$_per_arrival_ VARCHAR)",
        "question": "What is the average tourism receipts in millions of US dollars in 2011 with less than 1.141 million of 2011 tourist arrivals and more than 1,449 tourism receipts in 2011 US dollars per arrival?"
    },
    {
        "answer": "SELECT MIN(groundwater_discharge__million_m_3__) FROM table_26609958_1 WHERE hydrographic_basin = \"Cabarita River\"",
        "context": "CREATE TABLE table_26609958_1 (groundwater_discharge__million_m_3__ INTEGER, hydrographic_basin VARCHAR)",
        "question": "When cabarita river is the hydrographic basin what is the lowest groundwater discharge (million m 3)?"
    },
    {
        "answer": "SELECT MAX(tourism_receipts__2011___us) AS $_per_capita_ FROM table_name_99 WHERE tourism_receipts__2003___as__percentage_of_gdp_ = \"19.4\" AND tourism_receipts__2011___us$_per_arrival_ < 655",
        "context": "CREATE TABLE table_name_99 (tourism_receipts__2011___us INTEGER, tourism_receipts__2003___as__percentage_of_gdp_ VARCHAR, tourism_receipts__2011___us$_per_arrival_ VARCHAR)",
        "question": "What is the highest number of tourism receipts in 2011 US $ per capita with 19.4 % of GDP in 2003 tourism receipts and less than 655 US $ per arrival in 2011 tourism receipts?"
    },
    {
        "answer": "SELECT MIN(tourist_arrivals__2011___millions_) FROM table_name_95 WHERE tourism_receipts__2011___us$_per_arrival_ = 507 AND tourism_receipts__2011___millions_of_us$_ < 11 OFFSET 869",
        "context": "CREATE TABLE table_name_95 (tourist_arrivals__2011___millions_ INTEGER, tourism_receipts__2011___us$_per_arrival_ VARCHAR, tourism_receipts__2011___millions_of_us$_ VARCHAR)",
        "question": "What is the lowest tourism arrivals in 2011 in millions with 507 US $ per arrival in 2011 tourism receipts and less than 11,869 million of US $ in 2011 tourism receipts?"
    },
    {
        "answer": "SELECT MAX(tourist_arrivals__2011___millions_) FROM table_name_92 WHERE tourism_competitiveness__2011___ttci_ = \"3.82\" AND tourism_receipts__2011___us$_per_arrival_ > 1 OFFSET 102",
        "context": "CREATE TABLE table_name_92 (tourist_arrivals__2011___millions_ INTEGER, tourism_competitiveness__2011___ttci_ VARCHAR, tourism_receipts__2011___us$_per_arrival_ VARCHAR)",
        "question": "What is the highest tourism arrivals in 2011 in millions with a 3.82 tourism competitiveness in 2011 and more than 1,102 US$ per arrival in 2011 tourism receipts?"
    },
    {
        "answer": "SELECT lites_2_race_two_winning_team FROM table_26638600_3 WHERE lites_1_race_one_winning_team = \"#13 Inspire Motorsports\"",
        "context": "CREATE TABLE table_26638600_3 (lites_2_race_two_winning_team VARCHAR, lites_1_race_one_winning_team VARCHAR)",
        "question": "Who was the lights 2 race two winning team when the lites 1 race one winning team was #13 Inspire Motorsports?"
    },
    {
        "answer": "SELECT census_ranking FROM table_170969_2 WHERE area_km_2 = \"78.67\"",
        "context": "CREATE TABLE table_170969_2 (census_ranking VARCHAR, area_km_2 VARCHAR)",
        "question": "What is the census ranking when the area is 78.67 ?"
    },
    {
        "answer": "SELECT a_league FROM table_name_54 WHERE finals = \"6 (1)\" AND name = \"leigh broxham\"",
        "context": "CREATE TABLE table_name_54 (a_league VARCHAR, finals VARCHAR, name VARCHAR)",
        "question": "What A-League has 6 (1) for the finals, and leigh broxham as the name?"
    },
    {
        "answer": "SELECT party FROM table_2668169_2 WHERE incumbent = \"Mathias Morris\"",
        "context": "CREATE TABLE table_2668169_2 (party VARCHAR, incumbent VARCHAR)",
        "question": "Which party does the incumbent Mathias Morris belong to?"
    },
    {
        "answer": "SELECT COUNT(high_points) FROM table_17118657_7 WHERE location_attendance = \"UIC Pavilion 6,304\"",
        "context": "CREATE TABLE table_17118657_7 (high_points VARCHAR, location_attendance VARCHAR)",
        "question": "How many players received high points where location/attendance was UIC Pavilion 6,304 respectively?"
    },
    {
        "answer": "SELECT SUM(distance) FROM table_name_73 WHERE county = \"faulkner\" AND total < 1.5",
        "context": "CREATE TABLE table_name_73 (distance INTEGER, county VARCHAR, total VARCHAR)",
        "question": "How much Distance has a County of faulkner, and a Total smaller than 1.5?"
    },
    {
        "answer": "SELECT candidates FROM table_2668243_17 WHERE district = \"New York 21\"",
        "context": "CREATE TABLE table_2668243_17 (candidates VARCHAR, district VARCHAR)",
        "question": "Name the candidates for new york 21"
    },
    {
        "answer": "SELECT school FROM table_name_27 WHERE team = \"kansas city royals\"",
        "context": "CREATE TABLE table_name_27 (school VARCHAR, team VARCHAR)",
        "question": "What school has the Kansas City Royals for a team?"
    },
    {
        "answer": "SELECT standard_name FROM table_name_49 WHERE version = \"adsl2\" AND downstream_rate = \"01.5 1.5 mbit/s\"",
        "context": "CREATE TABLE table_name_49 (standard_name VARCHAR, version VARCHAR, downstream_rate VARCHAR)",
        "question": "What's the standard name with an ADSL2 version and a 01.5 1.5 mbit/s downstream rate?"
    },
    {
        "answer": "SELECT party FROM table_2668243_22 WHERE result = \"Re-elected\" AND district = \"South Carolina 7\"",
        "context": "CREATE TABLE table_2668243_22 (party VARCHAR, result VARCHAR, district VARCHAR)",
        "question": "What \"party\" was re-elected in district South Carolina 7?"
    },
    {
        "answer": "SELECT change_over_previous_year_as_a_whole FROM table_171748_3 WHERE change_over_same_quarter_the_previous_year = \"Up 2.8%\"",
        "context": "CREATE TABLE table_171748_3 (change_over_previous_year_as_a_whole VARCHAR, change_over_same_quarter_the_previous_year VARCHAR)",
        "question": "What's the change over previous year as a whole in the period in which the change over same quarter the previous year was up 2.8%?"
    },
    {
        "answer": "SELECT change_over_same_quarter_the_previous_year FROM table_171748_3 WHERE _percentage_trains_arriving_within_5_mins_of_scheduled_time__over_three_months_ = \"89.6%\"",
        "context": "CREATE TABLE table_171748_3 (change_over_same_quarter_the_previous_year VARCHAR, _percentage_trains_arriving_within_5_mins_of_scheduled_time__over_three_months_ VARCHAR)",
        "question": "What's the change over same quarter the previous year in the period when the 89.6% of the trains arrive within 5 minutes of scheduled time (over three months)?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_2668243_25 WHERE incumbent = \"John Roane\"",
        "context": "CREATE TABLE table_2668243_25 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": "How many people were first elected when john roane was the incumbent?"
    },
    {
        "answer": "SELECT MIN(uefa_champions_league) FROM table_name_9 WHERE la_liga = 17 AND copa_del_rey > 0",
        "context": "CREATE TABLE table_name_9 (uefa_champions_league INTEGER, la_liga VARCHAR, copa_del_rey VARCHAR)",
        "question": "Which UEFA Champions League has a La Liga of 17, and a Copa del Rey larger than 0?"
    },
    {
        "answer": "SELECT result FROM table_2668264_17 WHERE party = \"Adams-Clay Federalist\" AND incumbent = \"Stephen Van Rensselaer\"",
        "context": "CREATE TABLE table_2668264_17 (result VARCHAR, party VARCHAR, incumbent VARCHAR)",
        "question": "What was the result of the election where stephen van rensselaer was the incumbent and the party represented was the adams-clay federalist party?"
    },
    {
        "answer": "SELECT SUM(wins) FROM table_name_51 WHERE points = \"0\" AND podiums < 0",
        "context": "CREATE TABLE table_name_51 (wins INTEGER, points VARCHAR, podiums VARCHAR)",
        "question": "How many wins when the points are 0 and podiums are less than 0?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_73 WHERE award = \"venice film festival\" AND title = \"lust, caution\"",
        "context": "CREATE TABLE table_name_73 (year VARCHAR, award VARCHAR, title VARCHAR)",
        "question": "How many years have an Award of venice film festival, and a Title of lust, caution?"
    },
    {
        "answer": "SELECT candidates FROM table_2668336_24 WHERE incumbent = \"John Pegram\"",
        "context": "CREATE TABLE table_2668336_24 (candidates VARCHAR, incumbent VARCHAR)",
        "question": "Who are the candidates when the incumbent is john pegram?"
    },
    {
        "answer": "SELECT MIN(game) FROM table_17326036_7 WHERE team = \"Houston\"",
        "context": "CREATE TABLE table_17326036_7 (game INTEGER, team VARCHAR)",
        "question": "What is the lowest game number when the team is Houston? "
    },
    {
        "answer": "SELECT AVG(draw) FROM table_name_33 WHERE total_games = 186",
        "context": "CREATE TABLE table_name_33 (draw INTEGER, total_games VARCHAR)",
        "question": "What is the average draw for 186 games?"
    },
    {
        "answer": "SELECT COUNT(total_games) FROM table_name_26 WHERE loss > 18 AND league = \"total\" AND draw > 317",
        "context": "CREATE TABLE table_name_26 (total_games VARCHAR, draw VARCHAR, loss VARCHAR, league VARCHAR)",
        "question": "What is the total number of games with more than 18 loses, a Total League, and more than 317 draws?"
    },
    {
        "answer": "SELECT COUNT(score) FROM table_17355716_10 WHERE high_rebounds = \"Mehmet Okur , Paul Millsap (6)\"",
        "context": "CREATE TABLE table_17355716_10 (score VARCHAR, high_rebounds VARCHAR)",
        "question": "how many times were high rebounds mehmet okur , paul millsap (6)"
    },
    {
        "answer": "SELECT COUNT(party) FROM table_2668347_14 WHERE candidates = \"Thomas H. Hubbard (DR) 51.5% Simeon Ford (F) 48.4%\"",
        "context": "CREATE TABLE table_2668347_14 (party VARCHAR, candidates VARCHAR)",
        "question": "how many times were the candidates thomas h. hubbard (dr) 51.5% simeon ford (f) 48.4%?"
    },
    {
        "answer": "SELECT written_by FROM table_17355743_1 WHERE season__number = 10",
        "context": "CREATE TABLE table_17355743_1 (written_by VARCHAR, season__number VARCHAR)",
        "question": "Who wrote season 10"
    },
    {
        "answer": "SELECT directed_by FROM table_17355743_1 WHERE written_by = \"Joe Sachs and David Zabel\"",
        "context": "CREATE TABLE table_17355743_1 (directed_by VARCHAR, written_by VARCHAR)",
        "question": "Name who directed the episode by joe sachs and david zabel"
    },
    {
        "answer": "SELECT points_2 FROM table_17359181_1 WHERE won = 30",
        "context": "CREATE TABLE table_17359181_1 (points_2 VARCHAR, won VARCHAR)",
        "question": "What is every value for Points 2 when the value of won is 30?"
    },
    {
        "answer": "SELECT label - Nr FROM table_name_78 WHERE year < 1968 AND label = \"world pacific\" AND from_album = \"chile con soul\"",
        "context": "CREATE TABLE table_name_78 (label VARCHAR, Nr VARCHAR, from_album VARCHAR, year VARCHAR)",
        "question": "Which Label-Nr has a Year smaller than 1968, and a Label of world pacific, and an album of chile con soul?"
    },
    {
        "answer": "SELECT party FROM table_2668352_16 WHERE result = \"Lost re-election Democratic-Republican hold\"",
        "context": "CREATE TABLE table_2668352_16 (party VARCHAR, result VARCHAR)",
        "question": "Which party experienced a result of lost re-election democratic-republican hold?"
    },
    {
        "answer": "SELECT largest_city FROM table_17416221_1 WHERE population__2013_ = 6620100",
        "context": "CREATE TABLE table_17416221_1 (largest_city VARCHAR, population__2013_ VARCHAR)",
        "question": "what is the largest city where the population is 6620100?"
    },
    {
        "answer": "SELECT floors FROM table_name_72 WHERE rank > 41 AND city = \"parel\"",
        "context": "CREATE TABLE table_name_72 (floors VARCHAR, rank VARCHAR, city VARCHAR)",
        "question": "What is the number of floors when the r Rank larger than 41, and a City of parel?"
    },
    {
        "answer": "SELECT largest_city FROM table_17416221_1 WHERE province = \"Eastern Cape\"",
        "context": "CREATE TABLE table_17416221_1 (largest_city VARCHAR, province VARCHAR)",
        "question": "what is the largest city where the province is eastern cape?"
    },
    {
        "answer": "SELECT incumbent FROM table_2668374_18 WHERE party = \"Federalist\" AND first_elected = \"1803\"",
        "context": "CREATE TABLE table_2668374_18 (incumbent VARCHAR, party VARCHAR, first_elected VARCHAR)",
        "question": "What incumbent was a federalist that was first elected in 1803?"
    },
    {
        "answer": "SELECT COUNT(airport) FROM table_17419587_1 WHERE iata = \"MEL\"",
        "context": "CREATE TABLE table_17419587_1 (airport VARCHAR, iata VARCHAR)",
        "question": "What is the airport with the IATA MEL?"
    },
    {
        "answer": "SELECT series__number FROM table_17467147_1 WHERE directed_by = \"Patrick Norris\" AND written_by = \"Debra J. Fisher & Erica Messer\"",
        "context": "CREATE TABLE table_17467147_1 (series__number VARCHAR, directed_by VARCHAR, written_by VARCHAR)",
        "question": "When debra j. fisher & erica messer are the writers and the director is patrick norris what is the series number?"
    },
    {
        "answer": "SELECT episode__number FROM table_17481974_1 WHERE original_airdate = \"September 1, 2003\"",
        "context": "CREATE TABLE table_17481974_1 (episode__number VARCHAR, original_airdate VARCHAR)",
        "question": "What are the numbers of episodes that were broadcast on September 1, 2003"
    },
    {
        "answer": "SELECT COUNT(episode__number) FROM table_17525955_2 WHERE us_air_date = \"Saturday, May 30, 2009\"",
        "context": "CREATE TABLE table_17525955_2 (episode__number VARCHAR, us_air_date VARCHAR)",
        "question": "How many episodes were originally aired Saturday, May 30, 2009?"
    },
    {
        "answer": "SELECT party FROM table_2668401_17 WHERE result = \"Re-elected\" AND first_elected = \"1797\" AND district = \"Virginia 5\"",
        "context": "CREATE TABLE table_2668401_17 (party VARCHAR, district VARCHAR, result VARCHAR, first_elected VARCHAR)",
        "question": "What party did the incumbent from the Virginia 5 district who was re-elected and was first elected in 1797 belong to?"
    },
    {
        "answer": "SELECT MIN(time) FROM table_name_66 WHERE nationality = \"jamaica\" AND lane > 4 AND rank < 1",
        "context": "CREATE TABLE table_name_66 (time INTEGER, rank VARCHAR, nationality VARCHAR, lane VARCHAR)",
        "question": "Name the lowest Time of jamaica with a Lane larger than 4 and a Rank smaller than 1?"
    },
    {
        "answer": "SELECT subsidiaries FROM table_1756264_2 WHERE company_name = \"POSTERMOBILE LIMITED\"",
        "context": "CREATE TABLE table_1756264_2 (subsidiaries VARCHAR, company_name VARCHAR)",
        "question": "How many subsidiaries of Postermobile Limited?"
    },
    {
        "answer": "SELECT description_of_activities FROM table_1756264_2 WHERE company_name = \"CLEAR CHANNEL ENTERTAINMENT FACILITATION LIMITED\"",
        "context": "CREATE TABLE table_1756264_2 (description_of_activities VARCHAR, company_name VARCHAR)",
        "question": "What activities does Clear Channel Entertainment Facilitation Limited engage in?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_2668387_18 WHERE incumbent = \"John Smith\"",
        "context": "CREATE TABLE table_2668387_18 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": "Name the number of first elected for john smith"
    },
    {
        "answer": "SELECT incumbent FROM table_2668387_18 WHERE district = \"Virginia 18\"",
        "context": "CREATE TABLE table_2668387_18 (incumbent VARCHAR, district VARCHAR)",
        "question": "Name the incumbent for virginia 18"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_2668405_17 WHERE candidates = \"Leven Powell (F) 63.8% Roger West (DR) 36.4%\"",
        "context": "CREATE TABLE table_2668405_17 (first_elected VARCHAR, candidates VARCHAR)",
        "question": "How many times were the candidates leven powell (f) 63.8% roger west (dr) 36.4%?"
    },
    {
        "answer": "SELECT original_air_date FROM table_17623902_1 WHERE written_by = \"Debbie Sarjeant\"",
        "context": "CREATE TABLE table_17623902_1 (original_air_date VARCHAR, written_by VARCHAR)",
        "question": "What was the original air date of this episode that was written by Debbie Sarjeant?"
    },
    {
        "answer": "SELECT COUNT(production_code) FROM table_17623902_1 WHERE written_by = \"Julie Martin\"",
        "context": "CREATE TABLE table_17623902_1 (production_code VARCHAR, written_by VARCHAR)",
        "question": "How many episodes did Julie Martin wrote for the show If every episode has its own production code?"
    },
    {
        "answer": "SELECT COUNT(series) FROM table_17621978_11 WHERE date = \"April 26\"",
        "context": "CREATE TABLE table_17621978_11 (series VARCHAR, date VARCHAR)",
        "question": "Name the total number of series for april 26"
    },
    {
        "answer": "SELECT country FROM table_17634290_7 WHERE moving_from = \"Bristol City\"",
        "context": "CREATE TABLE table_17634290_7 (country VARCHAR, moving_from VARCHAR)",
        "question": "What is the name of the country where moving from is listed as bristol city?"
    },
    {
        "answer": "SELECT production FROM table_26686908_2 WHERE championship = \"David Wall\" AND challenge = \"Jordan Ormsby\"",
        "context": "CREATE TABLE table_26686908_2 (production VARCHAR, championship VARCHAR, challenge VARCHAR)",
        "question": "Who handled production for the race when the championship went to david wall and challenge was jordan ormsby?"
    },
    {
        "answer": "SELECT date FROM table_name_74 WHERE event = \"men's 100m breaststroke\" AND heat_semifinal_final = \"heat 6\"",
        "context": "CREATE TABLE table_name_74 (date VARCHAR, event VARCHAR, heat_semifinal_final VARCHAR)",
        "question": "What date was the men's 100m breaststroke in heat 6?"
    },
    {
        "answer": "SELECT title FROM table_26701861_1 WHERE director = \"Pamela Fryman\" AND production_code = \"2ALH07\"",
        "context": "CREATE TABLE table_26701861_1 (title VARCHAR, director VARCHAR, production_code VARCHAR)",
        "question": "what is the title of the episode with the director pamela fryman and the production code 2alh07?"
    },
    {
        "answer": "SELECT conserved_in_mus_musculus FROM table_26708105_2 WHERE sequence = \"aAGTAct\"",
        "context": "CREATE TABLE table_26708105_2 (conserved_in_mus_musculus VARCHAR, sequence VARCHAR)",
        "question": "What is the conserved in mus musculus listing for sequence aagtact?"
    },
    {
        "answer": "SELECT COUNT(common_name) FROM table_26708105_5 WHERE accession_number = \"XP_001843282\"",
        "context": "CREATE TABLE table_26708105_5 (common_name VARCHAR, accession_number VARCHAR)",
        "question": "How many times is the accession number xp_001843282?"
    },
    {
        "answer": "SELECT COUNT(try_bonus) FROM table_17675675_2 WHERE points = \"51\"",
        "context": "CREATE TABLE table_17675675_2 (try_bonus VARCHAR, points VARCHAR)",
        "question": "With the given points of 51, what was the total number of the try bonus?"
    },
    {
        "answer": "SELECT COUNT(no_in_series) FROM table_26736040_1 WHERE directed_by = \"Bryan Cranston\"",
        "context": "CREATE TABLE table_26736040_1 (no_in_series VARCHAR, directed_by VARCHAR)",
        "question": "How many entries for number in series when director is Bryan Cranston?"
    },
    {
        "answer": "SELECT stage__winner_ FROM table_17672500_19 WHERE team_classification = \"Caisse d'Epargne\"",
        "context": "CREATE TABLE table_17672500_19 (stage__winner_ VARCHAR, team_classification VARCHAR)",
        "question": "Who are all the stage winners where the team classification is Caisse D'epargne?"
    },
    {
        "answer": "SELECT date FROM table_name_43 WHERE surface = \"clay\" AND opponent = \"irina falconi\"",
        "context": "CREATE TABLE table_name_43 (date VARCHAR, surface VARCHAR, opponent VARCHAR)",
        "question": "What was the date of the tournament with a clay surface and an opponent of Irina Falconi?"
    },
    {
        "answer": "SELECT MAX(episode_number) FROM table_26733129_1 WHERE three_darts_challenge = \"Sharon Osbourne\"",
        "context": "CREATE TABLE table_26733129_1 (episode_number INTEGER, three_darts_challenge VARCHAR)",
        "question": "How many episodes are there for the three darts challenge with Sharon Osbourne?"
    },
    {
        "answer": "SELECT musical_performance FROM table_26733129_1 WHERE air_date = \"5 April 2010\"",
        "context": "CREATE TABLE table_26733129_1 (musical_performance VARCHAR, air_date VARCHAR)",
        "question": "What musical performances aired on 5 April 2010?"
    },
    {
        "answer": "SELECT MIN(ansi_code) FROM table_name_18 WHERE longitude > -101.333926 AND geo_id < 3806700900 AND township = \"adler\" AND land___sqmi__ > 35.84",
        "context": "CREATE TABLE table_name_18 (ansi_code INTEGER, land___sqmi__ VARCHAR, township VARCHAR, longitude VARCHAR, geo_id VARCHAR)",
        "question": "What is the smallest ANSI code for adler township when Longitude is more than -101.333926, GEO ID is less than 3806700900, and Land ( sqmi ) is more than 35.84?"
    },
    {
        "answer": "SELECT COUNT(proto_slavic) FROM table_26757_4 WHERE serbo_croatian = \"\u0433\u043d(\u0438\u0458)\u0435\u0437\u0434\u043e / gn(ij)ezdo\"",
        "context": "CREATE TABLE table_26757_4 (proto_slavic VARCHAR, serbo_croatian VARCHAR)",
        "question": "When  \u0433\u043d(\u0438\u0458)\u0435\u0437\u0434\u043e / gn(ij)ezdo is the serbo-croatian how many proto-slavics are there?"
    },
    {
        "answer": "SELECT COUNT(location) FROM table_17822401_1 WHERE branding = \"Radyo5 101.9 News FM\"",
        "context": "CREATE TABLE table_17822401_1 (location VARCHAR, branding VARCHAR)",
        "question": "How many stations are called radyo5 101.9 news fm?"
    },
    {
        "answer": "SELECT church_name FROM table_178389_1 WHERE location_of_the_church = \"Kyrkjeb\u00f8\"",
        "context": "CREATE TABLE table_178389_1 (church_name VARCHAR, location_of_the_church VARCHAR)",
        "question": "What is the church name for the church located in Kyrkjeb\u00f8?"
    },
    {
        "answer": "SELECT county FROM table_name_4 WHERE latitude < 46.935364 AND geo_id = 3801700500",
        "context": "CREATE TABLE table_name_4 (county VARCHAR, latitude VARCHAR, geo_id VARCHAR)",
        "question": "In what county is the latitude less than 46.935364 and GEO ID is 3801700500?"
    },
    {
        "answer": "SELECT COUNT(branding) FROM table_17822401_1 WHERE power__kw_ = \"5kW\"",
        "context": "CREATE TABLE table_17822401_1 (branding VARCHAR, power__kw_ VARCHAR)",
        "question": "What is the number of brand where the power is 5kw?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_75 WHERE venue = \"bydgoszcz, poland\" AND event = \"junior team\"",
        "context": "CREATE TABLE table_name_75 (year INTEGER, venue VARCHAR, event VARCHAR)",
        "question": "Which Year has a Venue of bydgoszcz, poland, and an Event of junior team?"
    },
    {
        "answer": "SELECT vivek_express__15905_15906 FROM table_26745820_5 WHERE kanyakumari = \"Bhavnagar\"",
        "context": "CREATE TABLE table_26745820_5 (vivek_express__15905_15906 VARCHAR, kanyakumari VARCHAR)",
        "question": "What is the name of the only route that runs to bhavnagar?"
    },
    {
        "answer": "SELECT MAX(district) FROM table_26758262_1 WHERE location_of_court = \"Tolland\"",
        "context": "CREATE TABLE table_26758262_1 (district INTEGER, location_of_court VARCHAR)",
        "question": "What district is the court located in Tolland?"
    },
    {
        "answer": "SELECT MIN(population_estimate__2013_) FROM table_name_57 WHERE percentage = 23.7",
        "context": "CREATE TABLE table_name_57 (population_estimate__2013_ INTEGER, percentage VARCHAR)",
        "question": "What is the lowest 2013 population estimate of the province with a 23.7 percentage?"
    },
    {
        "answer": "SELECT player FROM table_2679061_1 WHERE position = \"Defence\" AND college_junior_club_team = \"Ottawa 67's (OHL)\"",
        "context": "CREATE TABLE table_2679061_1 (player VARCHAR, position VARCHAR, college_junior_club_team VARCHAR)",
        "question": "who is the player for the position defence and the college/junior/club team is ottawa 67's (ohl)?"
    },
    {
        "answer": "SELECT platform_s_ FROM table_name_65 WHERE genre = \"third-person shooter\"",
        "context": "CREATE TABLE table_name_65 (platform_s_ VARCHAR, genre VARCHAR)",
        "question": "What is the platform for the game of the third-person shooter genre?"
    },
    {
        "answer": "SELECT platform_s_ FROM table_name_95 WHERE year = 2007",
        "context": "CREATE TABLE table_name_95 (platform_s_ VARCHAR, year VARCHAR)",
        "question": "What is the platform of the game from 2007?"
    },
    {
        "answer": "SELECT COUNT(pick__number) FROM table_2679061_11 WHERE nhl_team = \"Chicago Black Hawks\"",
        "context": "CREATE TABLE table_2679061_11 (pick__number VARCHAR, nhl_team VARCHAR)",
        "question": "How many picks did the Chicago Black Hawks get?"
    },
    {
        "answer": "SELECT developer_s_ FROM table_name_4 WHERE game = \"resident evil 4\"",
        "context": "CREATE TABLE table_name_4 (developer_s_ VARCHAR, game VARCHAR)",
        "question": "Who was the developer of Resident Evil 4?"
    },
    {
        "answer": "SELECT AVG(lane) FROM table_name_59 WHERE heat > 12 AND rank = 38 AND time > 22.67",
        "context": "CREATE TABLE table_name_59 (lane INTEGER, time VARCHAR, heat VARCHAR, rank VARCHAR)",
        "question": "What lane had a heat after 12, a rank of 38 and a time larger than 22.67?"
    },
    {
        "answer": "SELECT state__class_ FROM table_1802522_3 WHERE date_of_successors_formal_installation = \"November 30, 1962\"",
        "context": "CREATE TABLE table_1802522_3 (state__class_ VARCHAR, date_of_successors_formal_installation VARCHAR)",
        "question": "What state had November 30, 1962 as the date of the successors formal installation?"
    },
    {
        "answer": "SELECT COUNT(longitude) FROM table_name_38 WHERE latitude = 48.930222 AND geo_id < 3806755660",
        "context": "CREATE TABLE table_name_38 (longitude VARCHAR, latitude VARCHAR, geo_id VARCHAR)",
        "question": "What is the longitude with a latitude of 48.930222 with a Geo ID smaller than 3806755660?"
    },
    {
        "answer": "SELECT latitude FROM table_name_18 WHERE land___sqmi__ < 34.401 AND geo_id < 3807157722 AND longitude = -98.475995",
        "context": "CREATE TABLE table_name_18 (latitude VARCHAR, longitude VARCHAR, land___sqmi__ VARCHAR, geo_id VARCHAR)",
        "question": "What is the latitude that has a sqmi smaller than 34.401, a Geo ID smaller than 3807157722, and a Longitude of -98.475995?"
    },
    {
        "answer": "SELECT members_of_parliament FROM table_18106841_1 WHERE winners__percentage_votes = \"50.54%\"",
        "context": "CREATE TABLE table_18106841_1 (members_of_parliament VARCHAR, winners__percentage_votes VARCHAR)",
        "question": "When the winners votes were 50.54% who were the members of parliment?"
    },
    {
        "answer": "SELECT COUNT(longitude) FROM table_name_68 WHERE township = \"nogosek\" AND geo_id > 3809357060",
        "context": "CREATE TABLE table_name_68 (longitude VARCHAR, township VARCHAR, geo_id VARCHAR)",
        "question": "What is the total longitude of Nogosek and a GEO ID larger than 3809357060?"
    },
    {
        "answer": "SELECT no_in_series FROM table_18055005_1 WHERE viewers__millions_ = \"4.1\" AND written_by = \"Douglas Lieblein\"",
        "context": "CREATE TABLE table_18055005_1 (no_in_series VARCHAR, viewers__millions_ VARCHAR, written_by VARCHAR)",
        "question": "What's the series number of the episode originally viewed by 4.1 million people and written by Douglas Lieblein?"
    },
    {
        "answer": "SELECT recipients_and_nominees FROM table_name_30 WHERE role_episode = \"david duchovny\" AND result = \"won\"",
        "context": "CREATE TABLE table_name_30 (recipients_and_nominees VARCHAR, role_episode VARCHAR, result VARCHAR)",
        "question": "Who are the recipients that won for David Duchovny role/episode?"
    },
    {
        "answer": "SELECT wednesday FROM table_18173916_8 WHERE monday = \"363 The Hangover Part II\"",
        "context": "CREATE TABLE table_18173916_8 (wednesday VARCHAR, monday VARCHAR)",
        "question": "which chapter was Transmitted on wednesday if the episode of \"363 the hangover part ii\" was transmitted on monday? "
    },
    {
        "answer": "SELECT friday FROM table_18173916_8 WHERE tuesday = \"414 Insanely Twisted Shadow Planet\"",
        "context": "CREATE TABLE table_18173916_8 (friday VARCHAR, tuesday VARCHAR)",
        "question": "which episode was Transmitted on friday if the episode of \"414 insanely twisted shadow planet\" was transmitted on tuesday? "
    },
    {
        "answer": "SELECT reserved_for___sc___st__none_ FROM table_name_43 WHERE constituency_number = \"108\"",
        "context": "CREATE TABLE table_name_43 (reserved_for___sc___st__none_ VARCHAR, constituency_number VARCHAR)",
        "question": "What's the reserved number for constituency number 108?"
    },
    {
        "answer": "SELECT friday FROM table_18173916_8 WHERE monday = \"515 The Adventures of Tintin\"",
        "context": "CREATE TABLE table_18173916_8 (friday VARCHAR, monday VARCHAR)",
        "question": "which episode was Transmitted on friday if the episode of \"515 the adventures of tintin\" was transmitted on monday? "
    },
    {
        "answer": "SELECT result FROM table_26842217_12 WHERE visiting_team = \"Louisiana-Monroe\"",
        "context": "CREATE TABLE table_26842217_12 (result VARCHAR, visiting_team VARCHAR)",
        "question": "What was the result in the game where the visiting team was Louisiana-Monroe?"
    },
    {
        "answer": "SELECT rowers FROM table_name_99 WHERE notes = \"fc\" AND time = \"7:41.97\"",
        "context": "CREATE TABLE table_name_99 (rowers VARCHAR, notes VARCHAR, time VARCHAR)",
        "question": "What is the Rowers of the race with a Time of 7:41.97 and Notes of FC?"
    },
    {
        "answer": "SELECT broadcast FROM table_26842217_18 WHERE time = \"7:00pm\" AND home_team = \"Mississippi State\"",
        "context": "CREATE TABLE table_26842217_18 (broadcast VARCHAR, time VARCHAR, home_team VARCHAR)",
        "question": "Name the broadcast for 7:00pm and mississippi state"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_56 WHERE category = \"best performance by a leading actor in a play\"",
        "context": "CREATE TABLE table_name_56 (year INTEGER, category VARCHAR)",
        "question": "What is the first year that Reasons to be Pretty had a nominee for best performance by a leading actor in a play?"
    },
    {
        "answer": "SELECT total_score_week FROM table_18278508_6 WHERE date_performed = \"August 14\" AND position = \"Bottom 2\"",
        "context": "CREATE TABLE table_18278508_6 (total_score_week VARCHAR, date_performed VARCHAR, position VARCHAR)",
        "question": "What was the total score / week of the contestant who placed in the bottom 2 on august 14?"
    },
    {
        "answer": "SELECT COUNT(main_contestant) FROM table_18278508_4 WHERE position = \"Safe\" AND co_contestant__yaar_vs_pyaar_ = \"Tina Parekh\"",
        "context": "CREATE TABLE table_18278508_4 (main_contestant VARCHAR, position VARCHAR, co_contestant__yaar_vs_pyaar_ VARCHAR)",
        "question": "Name the total number of main contestants for safe position for tina parekh"
    },
    {
        "answer": "SELECT match_report FROM table_name_13 WHERE venue = \"stark's park\" AND competition = \"second division\" AND date = \"23 august 2008\"",
        "context": "CREATE TABLE table_name_13 (match_report VARCHAR, date VARCHAR, venue VARCHAR, competition VARCHAR)",
        "question": "What is the match report for the game that was played on 23 august 2008 in stark's park during the second division competition?"
    },
    {
        "answer": "SELECT province, _community FROM table_18349697_1 WHERE age = 27",
        "context": "CREATE TABLE table_18349697_1 (province VARCHAR, _community VARCHAR, age VARCHAR)",
        "question": "What is the province where the age of the contestant is 27?"
    },
    {
        "answer": "SELECT no_in_season FROM table_18367694_3 WHERE directed_by = \"Joan Tewkesbury\"",
        "context": "CREATE TABLE table_18367694_3 (no_in_season VARCHAR, directed_by VARCHAR)",
        "question": "When joan tewkesbury is the director what is the number in seasons?"
    },
    {
        "answer": "SELECT location FROM table_name_7 WHERE built < 1872 AND name = \"durfee mill no. 1\"",
        "context": "CREATE TABLE table_name_7 (location VARCHAR, built VARCHAR, name VARCHAR)",
        "question": "What is the location of the Durfee Mill No. 1, built before 1872 ?"
    },
    {
        "answer": "SELECT tobago FROM table_1850282_5 WHERE species = \"Liophis cobellus cobellus\"",
        "context": "CREATE TABLE table_1850282_5 (tobago VARCHAR, species VARCHAR)",
        "question": "are in tobago species liophis cobellus cobellus?"
    },
    {
        "answer": "SELECT reason_for_change FROM table_18563954_3 WHERE state__class_ = \"Massachusetts (2)\"",
        "context": "CREATE TABLE table_18563954_3 (reason_for_change VARCHAR, state__class_ VARCHAR)",
        "question": "Why did the change happened in Massachusetts (2)?"
    },
    {
        "answer": "SELECT COUNT(production_code) FROM table_18569389_1 WHERE us_viewers__million_ = \"5.08\"",
        "context": "CREATE TABLE table_18569389_1 (production_code VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "Name the number of production code for 5.08"
    },
    {
        "answer": "SELECT yacht AS Type FROM table_1858574_2 WHERE loa__metres_ = \"17.07\"",
        "context": "CREATE TABLE table_1858574_2 (yacht VARCHAR, loa__metres_ VARCHAR)",
        "question": "When 17.07 is the loa (metres) what is the type of yacht?"
    },
    {
        "answer": "SELECT sail_number FROM table_1858574_2 WHERE position = 3",
        "context": "CREATE TABLE table_1858574_2 (sail_number VARCHAR, position VARCHAR)",
        "question": "When 3 is the position what is the sail number?"
    },
    {
        "answer": "SELECT state_country FROM table_1858574_2 WHERE position = 5",
        "context": "CREATE TABLE table_1858574_2 (state_country VARCHAR, position VARCHAR)",
        "question": "When 5 is the position what is the state or country?"
    },
    {
        "answer": "SELECT MAX(position) FROM table_18597302_1 WHERE team = \"Atl. Colegiales\"",
        "context": "CREATE TABLE table_18597302_1 (position INTEGER, team VARCHAR)",
        "question": "What was the position of the Atl. Colegiales team?"
    },
    {
        "answer": "SELECT geo_id FROM table_18600760_19 WHERE land___sqmi__ = \"35.990\"",
        "context": "CREATE TABLE table_18600760_19 (geo_id VARCHAR, land___sqmi__ VARCHAR)",
        "question": "where the land is 35.990 what is the number of the geo id"
    },
    {
        "answer": "SELECT ihsaa_football_class FROM table_name_50 WHERE location = \"wabash\" AND school = \"wabash\"",
        "context": "CREATE TABLE table_name_50 (ihsaa_football_class VARCHAR, location VARCHAR, school VARCHAR)",
        "question": "Which IHSAA Football Class has a Location of wabash, and a School of wabash?"
    },
    {
        "answer": "SELECT height__cm_ FROM table_18626383_2 WHERE country = \"Bahamas\"",
        "context": "CREATE TABLE table_18626383_2 (height__cm_ VARCHAR, country VARCHAR)",
        "question": "When bahamas is the country what is the height in centimeters?"
    },
    {
        "answer": "SELECT winner FROM table_name_45 WHERE points_classification = \"robbie mcewen\" AND mountains_classification = \"jos\u00e9 rujano\"",
        "context": "CREATE TABLE table_name_45 (winner VARCHAR, points_classification VARCHAR, mountains_classification VARCHAR)",
        "question": "Who was the winner when points classification is Robbie Mcewen, and a Mountains classification is Jos\u00e9 Rujano?"
    },
    {
        "answer": "SELECT points_classification FROM table_name_19 WHERE intergiro_classification = \"sven krau\u00df\" AND mountains_classification = \"koldo gil\" AND trofeo_super_team = \"liquigas-bianchi\" AND stage = \"9\"",
        "context": "CREATE TABLE table_name_19 (points_classification VARCHAR, stage VARCHAR, trofeo_super_team VARCHAR, intergiro_classification VARCHAR, mountains_classification VARCHAR)",
        "question": "What is the points classification when the Intergiro classification is Sven Krau\u00df, and the mountains classification is koldo gil, Trofeo Super Team is Liquigas-Bianchi, and stage is 9?"
    },
    {
        "answer": "SELECT intergiro_classification FROM table_name_16 WHERE points_classification = \"paolo bettini\" AND trofeo_super_team = \"davitamon-lotto\" AND mountains_classification = \"jos\u00e9 rujano\"",
        "context": "CREATE TABLE table_name_16 (intergiro_classification VARCHAR, mountains_classification VARCHAR, points_classification VARCHAR, trofeo_super_team VARCHAR)",
        "question": "What is the Intergiro classification when the points classification is Paolo Bettini, Trofeo Super Team is Davitamon-Lotto, and the Mountains classification is Jos\u00e9 Rujano?"
    },
    {
        "answer": "SELECT stage FROM table_name_67 WHERE points_classification = \"danilo di luca\" AND mountains_classification = \"jos\u00e9 rujano\" AND general_classification = \"danilo di luca\"",
        "context": "CREATE TABLE table_name_67 (stage VARCHAR, general_classification VARCHAR, points_classification VARCHAR, mountains_classification VARCHAR)",
        "question": "What is the Stage when the points classification is Danilo Di Luca, Mountains classification is Jos\u00e9 Rujano, and general classification is Danilo Di Luca?"
    },
    {
        "answer": "SELECT us_viewers__million_ FROM table_26961951_4 WHERE written_by = \"Alison McDonald\"",
        "context": "CREATE TABLE table_26961951_4 (us_viewers__million_ VARCHAR, written_by VARCHAR)",
        "question": "How many viewers in millions did the Alison McDonald episode get?"
    },
    {
        "answer": "SELECT event FROM table_18646111_13 WHERE athlete = \"Hans Ruep\"",
        "context": "CREATE TABLE table_18646111_13 (event VARCHAR, athlete VARCHAR)",
        "question": "Name the event for hans ruep"
    },
    {
        "answer": "SELECT COUNT(a_external__cm_2__) FROM table_26967904_2 WHERE chambering = \".338 Lapua Magnum\"",
        "context": "CREATE TABLE table_26967904_2 (a_external__cm_2__ VARCHAR, chambering VARCHAR)",
        "question": "How many  external (cm 2 ) are there for the .338 lapua magnum chambering?"
    },
    {
        "answer": "SELECT chambering FROM table_26967904_1 WHERE f_bolt = \"N (lbf)\" AND p_max___bar__ = 3900",
        "context": "CREATE TABLE table_26967904_1 (chambering VARCHAR, f_bolt VARCHAR, p_max___bar__ VARCHAR)",
        "question": "With what type of chambering is the F bolt n (lbf) and the P max (bar) 3900?"
    },
    {
        "answer": "SELECT MAX(p_max___bar__) FROM table_26967904_1 WHERE chambering = \".45 ACP\"",
        "context": "CREATE TABLE table_26967904_1 (p_max___bar__ INTEGER, chambering VARCHAR)",
        "question": "What is the p max (bar) in the pistol where the chambering is .45 ACP?"
    },
    {
        "answer": "SELECT kit_manufacturer FROM table_187239_1 WHERE minor_sponsors = \"Tim Brasil Brokers\"",
        "context": "CREATE TABLE table_187239_1 (kit_manufacturer VARCHAR, minor_sponsors VARCHAR)",
        "question": "When tim brasil brokers are the minor sponsors who is the kit manufacturer?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_26976615_3 WHERE date_of_vacancy = \"22 August 2010\"",
        "context": "CREATE TABLE table_26976615_3 (date_of_appointment VARCHAR, date_of_vacancy VARCHAR)",
        "question": "What is the date of appointment for the date of vacancy of 22 august 2010?"
    },
    {
        "answer": "SELECT COUNT(minor_sponsors) FROM table_187239_1 WHERE kit_manufacturer = \"Olympikus\" AND period = \"2011\"",
        "context": "CREATE TABLE table_187239_1 (minor_sponsors VARCHAR, kit_manufacturer VARCHAR, period VARCHAR)",
        "question": "When 2011 is the period and olympikus is the kit manufacturer how many minor sponsors are there?"
    },
    {
        "answer": "SELECT COUNT(date_of_appointment) FROM table_26976615_3 WHERE date_of_vacancy = \"2 October 2010\"",
        "context": "CREATE TABLE table_26976615_3 (date_of_appointment VARCHAR, date_of_vacancy VARCHAR)",
        "question": "How many date of appointments are there when the date of vacancy was 2 october 2010?"
    },
    {
        "answer": "SELECT COUNT(tracks) FROM table_name_7 WHERE unformatted_capacity_per_side = \"2000kb\"",
        "context": "CREATE TABLE table_name_7 (tracks VARCHAR, unformatted_capacity_per_side VARCHAR)",
        "question": "How many tracks have an unformatted capacity per side of 2000kb?"
    },
    {
        "answer": "SELECT cardinalatial_title FROM table_name_40 WHERE elevated = \"december 18, 1182\" AND place_of_birth = \"lucca\" AND elector = \"pandolfo\"",
        "context": "CREATE TABLE table_name_40 (cardinalatial_title VARCHAR, elector VARCHAR, elevated VARCHAR, place_of_birth VARCHAR)",
        "question": "What's the Cardinalatial Title has the Elevated of December 18, 1182, the Place of birth of Lucca, and the Electo rof Pandolfo?"
    },
    {
        "answer": "SELECT elevated FROM table_name_25 WHERE cardinalatial_title = \"priest of s. eusebio and archbishop of benevento\"",
        "context": "CREATE TABLE table_name_25 (elevated VARCHAR, cardinalatial_title VARCHAR)",
        "question": "What's listed for the Elevated with a Cardinalatial title of Priest of S. Eusebio and Archbishop of Benevento?"
    },
    {
        "answer": "SELECT fri_27_aug FROM table_26986076_1 WHERE tues_24_aug = \"20' 49.46 108.709mph\"",
        "context": "CREATE TABLE table_26986076_1 (fri_27_aug VARCHAR, tues_24_aug VARCHAR)",
        "question": "If the time on Tues Aug 24 is 20' 49.46 108.709mph, what is the time on Fri Aug 27?"
    },
    {
        "answer": "SELECT date_released FROM table_1881642_1 WHERE green_communist = \"5.7%\"",
        "context": "CREATE TABLE table_1881642_1 (date_released VARCHAR, green_communist VARCHAR)",
        "question": "What date did the Green-Communists receive 5.7%?"
    },
    {
        "answer": "SELECT city FROM table_name_48 WHERE county = \"40 jennings\" AND school = \"north vernon\"",
        "context": "CREATE TABLE table_name_48 (city VARCHAR, county VARCHAR, school VARCHAR)",
        "question": "Which city has a school of North Vernon and a county of 40 Jennings?"
    },
    {
        "answer": "SELECT year_joined FROM table_name_5 WHERE school = \"jennings county\"",
        "context": "CREATE TABLE table_name_5 (year_joined VARCHAR, school VARCHAR)",
        "question": "What year did a school from Jennings County join?"
    },
    {
        "answer": "SELECT SUM(time) FROM table_name_50 WHERE lane < 4 AND name = \"britta steffen\"",
        "context": "CREATE TABLE table_name_50 (time INTEGER, lane VARCHAR, name VARCHAR)",
        "question": "What's the time of Britta Steffen in a lane less than 4?"
    },
    {
        "answer": "SELECT mon_23_aug FROM table_26986076_5 WHERE tues_24_aug = \"21' 18.87 106.209mph\"",
        "context": "CREATE TABLE table_26986076_5 (mon_23_aug VARCHAR, tues_24_aug VARCHAR)",
        "question": "When 21' 18.87 106.209mph is Tuesday August 24th what is Monday August 23rd?"
    },
    {
        "answer": "SELECT duration FROM table_name_98 WHERE soap_opera = \"the archers\" AND actor = \"norman painting\"",
        "context": "CREATE TABLE table_name_98 (duration VARCHAR, soap_opera VARCHAR, actor VARCHAR)",
        "question": "What's the duration of the Archers with Norman Painting as an actor?"
    },
    {
        "answer": "SELECT duration FROM table_name_45 WHERE soap_opera = \"the archers\" AND actor = \"pauline seville\"",
        "context": "CREATE TABLE table_name_45 (duration VARCHAR, soap_opera VARCHAR, actor VARCHAR)",
        "question": "What's the duration of the Archers with Pauline Seville acting?"
    },
    {
        "answer": "SELECT actor FROM table_name_14 WHERE soap_opera = \"the archers\" AND character = \"martha woodford\"",
        "context": "CREATE TABLE table_name_14 (actor VARCHAR, soap_opera VARCHAR, character VARCHAR)",
        "question": "Who's the actor for the Archers having a character of Martha Woodford?"
    },
    {
        "answer": "SELECT COUNT(original_airdate) FROM table_26982362_2 WHERE production_code = \"693-002\"",
        "context": "CREATE TABLE table_26982362_2 (original_airdate VARCHAR, production_code VARCHAR)",
        "question": "The episode with production code 693-002, has how many original airdates?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_18987377_1 WHERE director = \"Marcel Camus Category:Articles with hCards\"",
        "context": "CREATE TABLE table_18987377_1 (film_title_used_in_nomination VARCHAR, director VARCHAR)",
        "question": "Name the film titled for marcel camus category:articles with hcards"
    },
    {
        "answer": "SELECT event FROM table_name_91 WHERE runner_up_skip = \"randy ferbey\" AND location = \"gander, newfoundland and labrador\"",
        "context": "CREATE TABLE table_name_91 (event VARCHAR, runner_up_skip VARCHAR, location VARCHAR)",
        "question": "What's the event that happened in Gander, Newfoundland and Labrador with Randy Ferbey runner-up?"
    },
    {
        "answer": "SELECT COUNT(l2_cache__mb_) FROM table_269920_3 WHERE model = \"7130M\"",
        "context": "CREATE TABLE table_269920_3 (l2_cache__mb_ VARCHAR, model VARCHAR)",
        "question": "How many different L2 cache numbers are there for the 7130M model?"
    },
    {
        "answer": "SELECT mountains_classification FROM table_19115414_4 WHERE points_classification = \"Alexander Kristoff\"",
        "context": "CREATE TABLE table_19115414_4 (mountains_classification VARCHAR, points_classification VARCHAR)",
        "question": "Name the mountains classification for alexander kristoff"
    },
    {
        "answer": "SELECT MAX(black_caribbean_population) FROM table_19149550_7 WHERE other_black_population = 2243",
        "context": "CREATE TABLE table_19149550_7 (black_caribbean_population INTEGER, other_black_population VARCHAR)",
        "question": "What is the black caribbean population when the other black population is 2243?"
    },
    {
        "answer": "SELECT MIN(1964) FROM table_name_85 WHERE country = \"united states\" AND 1969 < 7.3",
        "context": "CREATE TABLE table_name_85 (country VARCHAR)",
        "question": "Which 1964 has a Country of united states, and a 1969 smaller than 7.3?"
    },
    {
        "answer": "SELECT MIN(black_caribbean_population) FROM table_19149550_7 WHERE black_african_population < 10552.0",
        "context": "CREATE TABLE table_19149550_7 (black_caribbean_population INTEGER, black_african_population INTEGER)",
        "question": "What is the black caribbean population when the black African population is less than 10552.0?"
    },
    {
        "answer": "SELECT COUNT(tv_season) FROM table_19188562_2 WHERE rating__adults_18_49_ = \"1.2\"",
        "context": "CREATE TABLE table_19188562_2 (tv_season VARCHAR, rating__adults_18_49_ VARCHAR)",
        "question": "How many tv series had an adult rating of 1.2?"
    },
    {
        "answer": "SELECT affiliation FROM table_19210115_1 WHERE nickname = \"Explorers\"",
        "context": "CREATE TABLE table_19210115_1 (affiliation VARCHAR, nickname VARCHAR)",
        "question": "What is the affiliation of the University called Explorers?"
    },
    {
        "answer": "SELECT frequency FROM table_19215259_1 WHERE branding = \"101.5 News FM\"",
        "context": "CREATE TABLE table_19215259_1 (frequency VARCHAR, branding VARCHAR)",
        "question": "What is the frequency of 101.5 News FM?"
    },
    {
        "answer": "SELECT location FROM table_19215259_1 WHERE power__kw_ = \"5kW\" AND frequency = \"102.3MHz\"",
        "context": "CREATE TABLE table_19215259_1 (location VARCHAR, power__kw_ VARCHAR, frequency VARCHAR)",
        "question": "Where is the frequency 102.3mhz and 5kw power?"
    },
    {
        "answer": "SELECT college FROM table_26996293_7 WHERE player = \"Terry Moss\"",
        "context": "CREATE TABLE table_26996293_7 (college VARCHAR, player VARCHAR)",
        "question": "What is the college where player terry moss attended?"
    },
    {
        "answer": "SELECT player FROM table_name_97 WHERE debut = \"age 18 v plymouth , 14 august 2012\" AND born = \"portsmouth\"",
        "context": "CREATE TABLE table_name_97 (player VARCHAR, debut VARCHAR, born VARCHAR)",
        "question": "Who was the player with a debut of age 18 v plymouth , 14 august 2012, and born in Portsmouth?"
    },
    {
        "answer": "SELECT democratic FROM table_27003223_4 WHERE registered_voters = \"67.8%\"",
        "context": "CREATE TABLE table_27003223_4 (democratic VARCHAR, registered_voters VARCHAR)",
        "question": "what is the percentage of democratic voters in which the registered voters is 67.8%?"
    },
    {
        "answer": "SELECT recognised_seats FROM table_19304764_2 WHERE discipline = \"Pharmacology\"",
        "context": "CREATE TABLE table_19304764_2 (recognised_seats VARCHAR, discipline VARCHAR)",
        "question": "Name the recognised seats for pharmacology"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_38 WHERE developer_s_ = \"ubisoft montreal\"",
        "context": "CREATE TABLE table_name_38 (year INTEGER, developer_s_ VARCHAR)",
        "question": "What is the smallest year when Ubisoft Montreal was the developer (s)?"
    },
    {
        "answer": "SELECT MIN(recognised_seats) FROM table_19304764_2",
        "context": "CREATE TABLE table_19304764_2 (recognised_seats INTEGER)",
        "question": "Name the least recognised seats"
    },
    {
        "answer": "SELECT COUNT(nation) FROM table_19312274_3 WHERE name = \"FMS International\"",
        "context": "CREATE TABLE table_19312274_3 (nation VARCHAR, name VARCHAR)",
        "question": "How many nations do the FMS international team represent?"
    },
    {
        "answer": "SELECT year FROM table_1939214_1 WHERE league = \"USL PDL\" AND regular_season = \"2nd, Northeast\"",
        "context": "CREATE TABLE table_1939214_1 (year VARCHAR, league VARCHAR, regular_season VARCHAR)",
        "question": "In what year did the team compete in the 2nd, Northeast season of the USL PDL League?"
    },
    {
        "answer": "SELECT COUNT(incumbent) FROM table_27021001_1 WHERE result = \"Sanford Bishop (D) 57% Joseph McCormick (R) 43%\"",
        "context": "CREATE TABLE table_27021001_1 (incumbent VARCHAR, result VARCHAR)",
        "question": "How many incumbents were the result of sanford bishop (d) 57% joseph mccormick (r) 43%?"
    },
    {
        "answer": "SELECT 1997 FROM table_name_72 WHERE 1999 = \"1r\" AND 1992 = \"qf\" AND 1995 = \"1r\"",
        "context": "CREATE TABLE table_name_72 (Id VARCHAR)",
        "question": "What's the 1997 when 1992 is QF, 1995 is 1R, and 1999 is 1R?"
    },
    {
        "answer": "SELECT COUNT(male_rank) FROM table_2701625_1 WHERE country = \"Fiji\"",
        "context": "CREATE TABLE table_2701625_1 (male_rank VARCHAR, country VARCHAR)",
        "question": "Name the total number of male rank for fiji"
    },
    {
        "answer": "SELECT AVG(total_goals) FROM table_name_91 WHERE fa_cup_goals = 0 AND name = \"alan sweeney\" AND league_cup_apps < 0",
        "context": "CREATE TABLE table_name_91 (total_goals INTEGER, league_cup_apps VARCHAR, fa_cup_goals VARCHAR, name VARCHAR)",
        "question": "What's the total goals for Alan Sweeney having 0 FA Cup goals and fewer than 0 League Cup apps?"
    },
    {
        "answer": "SELECT MAX(champ_car_world_series__2004_2007_) FROM table_19524523_1 WHERE usac__1956_1995_ = 2",
        "context": "CREATE TABLE table_19524523_1 (champ_car_world_series__2004_2007_ INTEGER, usac__1956_1995_ VARCHAR)",
        "question": "What is the most Champ Car wins for any driver with a USAC record of 2?"
    },
    {
        "answer": "SELECT report FROM table_name_18 WHERE date = \"november 15, 2000\"",
        "context": "CREATE TABLE table_name_18 (report VARCHAR, date VARCHAR)",
        "question": "What is the Report on November 15, 2000?"
    },
    {
        "answer": "SELECT delegate FROM table_27050336_7 WHERE committee = \"Judiciary\" AND party = \"Democratic\" AND counties_represented = \"Montgomery\"",
        "context": "CREATE TABLE table_27050336_7 (delegate VARCHAR, counties_represented VARCHAR, committee VARCHAR, party VARCHAR)",
        "question": "For democratic party, countries represented is montgomery and where committee is judiciary mention all the delegate name."
    },
    {
        "answer": "SELECT AVG(fips_code) FROM table_name_70 WHERE area = \"114.76 sq mi (297.23 sq km)\" AND population__2010_ < 166 OFFSET 327",
        "context": "CREATE TABLE table_name_70 (fips_code INTEGER, area VARCHAR, population__2010_ VARCHAR)",
        "question": "What is the FIPS code for the municipality that has an area of 114.76 sq mi (297.23 sq km) and had a 2010 population of less than 166,327?"
    },
    {
        "answer": "SELECT party FROM table_27050336_7 WHERE delegate = \"Gaines, Tawanna P. Tawanna Gaines\"",
        "context": "CREATE TABLE table_27050336_7 (party VARCHAR, delegate VARCHAR)",
        "question": "For delegate is gaines, tawanna p. tawanna gaines, please specify all the party."
    },
    {
        "answer": "SELECT COUNT(second_national_tour_year_2) FROM table_19529639_3 WHERE original_west_end_cast = \"Oliver Tompsett\"",
        "context": "CREATE TABLE table_19529639_3 (second_national_tour_year_2 VARCHAR, original_west_end_cast VARCHAR)",
        "question": "How many different actors from the Second national tour year 2 played the character played by Oliver Tompsett from the original West End cast?"
    },
    {
        "answer": "SELECT tonnage___grt__ FROM table_name_11 WHERE fate = \"sunk\" AND deaths < 17 AND date = \"16 november 1940\"",
        "context": "CREATE TABLE table_name_11 (tonnage___grt__ VARCHAR, date VARCHAR, fate VARCHAR, deaths VARCHAR)",
        "question": "Which Tonnage has a Fate of sunk, and Deaths smaller than 17, and a Date of 16 november 1940?"
    },
    {
        "answer": "SELECT SUM(tonnage___grt__) FROM table_name_83 WHERE fate = \"sunk\" AND flag = \"great britain\" AND date = \"26 september 1940\" AND deaths = 2",
        "context": "CREATE TABLE table_name_83 (tonnage___grt__ INTEGER, deaths VARCHAR, date VARCHAR, fate VARCHAR, flag VARCHAR)",
        "question": "How much tonnage has a Fate of sunk, and a Flag of great britain, and a Date of 26 september 1940, and Deaths of 2?"
    },
    {
        "answer": "SELECT COUNT(material_collected) FROM table_19534677_1 WHERE isbn = \"978-1401221935\"",
        "context": "CREATE TABLE table_19534677_1 (material_collected VARCHAR, isbn VARCHAR)",
        "question": "Name the total number for material collected for 978-1401221935"
    },
    {
        "answer": "SELECT COUNT(material_collected) FROM table_19534677_1 WHERE volume_title = \"Justice League of America by George P\u00e9rez, Vol. 2\"",
        "context": "CREATE TABLE table_19534677_1 (material_collected VARCHAR, volume_title VARCHAR)",
        "question": "Name the total number of material collected for  justice league of america by george p\u00e9rez, vol. 2"
    },
    {
        "answer": "SELECT \"player\" FROM table_19611329_1 WHERE year_inducted = 1945 AND inducted_as = \"player\"",
        "context": "CREATE TABLE table_19611329_1 (year_inducted VARCHAR, inducted_as VARCHAR)",
        "question": "Name the player for 1945 for player"
    },
    {
        "answer": "SELECT format FROM table_2709_4 WHERE owner = \"Dakota Broadcasting\"",
        "context": "CREATE TABLE table_2709_4 (format VARCHAR, owner VARCHAR)",
        "question": "What is the format for the station owned by Dakota Broadcasting?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_27091128_2 WHERE outgoing_manager = \"Kadir \u00d6zcan\"",
        "context": "CREATE TABLE table_27091128_2 (date_of_appointment VARCHAR, outgoing_manager VARCHAR)",
        "question": "What was the date of appointment for the manager replacing Kadir \u00d6zcan?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_27091128_2 WHERE replaced_by = \"Erg\u00fcn Penbe\"",
        "context": "CREATE TABLE table_27091128_2 (date_of_appointment VARCHAR, replaced_by VARCHAR)",
        "question": "What was date of appointment for Erg\u00fcn Penbe? "
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_1965650_2 WHERE player = \"Colin Campbell\"",
        "context": "CREATE TABLE table_1965650_2 (pick__number INTEGER, player VARCHAR)",
        "question": "Name the least pick number for colin campbell"
    },
    {
        "answer": "SELECT college_junior_club_team FROM table_1965650_2 WHERE player = \"Jimmy Jones\"",
        "context": "CREATE TABLE table_1965650_2 (college_junior_club_team VARCHAR, player VARCHAR)",
        "question": "Name the college/junior club team for jimmy jones"
    },
    {
        "answer": "SELECT original_air_date FROM table_27117365_1 WHERE us_viewers__million_ = \"5.85\"",
        "context": "CREATE TABLE table_27117365_1 (original_air_date VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "What original air date has 5.85 u.s. viewers (million)?"
    },
    {
        "answer": "SELECT COUNT(final_venue) FROM table_19651669_1 WHERE season = \"1997-98\"",
        "context": "CREATE TABLE table_19651669_1 (final_venue VARCHAR, season VARCHAR)",
        "question": "How many final venues were there in the 1997-98 season?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_27133147_3 WHERE manner_of_departure = \"Resigned\" AND position_in_table = \"10th\"",
        "context": "CREATE TABLE table_27133147_3 (date_of_vacancy VARCHAR, manner_of_departure VARCHAR, position_in_table VARCHAR)",
        "question": "If the position in table is 10th, and the manner of departure was resigned, what was the date of vacancy?"
    },
    {
        "answer": "SELECT years FROM table_name_88 WHERE soap_opera = \"marienhof\" AND duration = \"10 years\" AND actor = \"leonore capell\"",
        "context": "CREATE TABLE table_name_88 (years VARCHAR, actor VARCHAR, soap_opera VARCHAR, duration VARCHAR)",
        "question": "What years did Marienhof run, which featured Leonore Capell and lasted 10 years?"
    },
    {
        "answer": "SELECT COUNT(nhl_team) FROM table_1965650_7 WHERE player = \"Denis Andersen\"",
        "context": "CREATE TABLE table_1965650_7 (nhl_team VARCHAR, player VARCHAR)",
        "question": "How many teams have a player named Denis Andersen?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_27133147_3 WHERE incoming_head_coach = \"Carlos Azenha\"",
        "context": "CREATE TABLE table_27133147_3 (date_of_vacancy VARCHAR, incoming_head_coach VARCHAR)",
        "question": "If the incoming head coach is Carlos Azenha, what is the date of vacancy?"
    },
    {
        "answer": "SELECT COUNT(enrollment) FROM table_1969634_1 WHERE institution = \"Southern New Hampshire University\"",
        "context": "CREATE TABLE table_1969634_1 (enrollment VARCHAR, institution VARCHAR)",
        "question": "How many schools named southern new hampshire university?"
    },
    {
        "answer": "SELECT us_viewers__million_ FROM table_27116696_1 WHERE directed_by = \"Allison Liddi-Brown\"",
        "context": "CREATE TABLE table_27116696_1 (us_viewers__million_ VARCHAR, directed_by VARCHAR)",
        "question": "How many U.S. viewers (million) watched the episode directed by Allison Liddi-Brown?"
    },
    {
        "answer": "SELECT pba_team FROM table_name_96 WHERE college = \"ateneo de manila\"",
        "context": "CREATE TABLE table_name_96 (pba_team VARCHAR, college VARCHAR)",
        "question": "What is Ateneo de Manila's PBA Team?"
    },
    {
        "answer": "SELECT MAX(joined) FROM table_1973729_2 WHERE current_conference = \"Dropped athletics\"",
        "context": "CREATE TABLE table_1973729_2 (joined INTEGER, current_conference VARCHAR)",
        "question": "What joined year does Dropped Athletics have?"
    },
    {
        "answer": "SELECT image_quality FROM table_name_32 WHERE multiple_sessions = \"x\" AND authentication = \"\u2713\" AND date = \"may 15, 2007\"",
        "context": "CREATE TABLE table_name_32 (image_quality VARCHAR, date VARCHAR, multiple_sessions VARCHAR, authentication VARCHAR)",
        "question": "what is the image quality when the multiple sessions is x, the authentication is \u2713 and the date is may 15, 2007?"
    },
    {
        "answer": "SELECT couple FROM table_19744915_15 WHERE vote_percentage = \"7.691%\"",
        "context": "CREATE TABLE table_19744915_15 (couple VARCHAR, vote_percentage VARCHAR)",
        "question": "What couple had a vote percentage of 7.691%"
    },
    {
        "answer": "SELECT COUNT(col__m_) FROM table_name_86 WHERE elevation__m_ = 2 OFFSET 308",
        "context": "CREATE TABLE table_name_86 (col__m_ VARCHAR, elevation__m_ VARCHAR)",
        "question": "What is the Col entry for the peak with an elevation of 2,308 meters?"
    },
    {
        "answer": "SELECT episode_no_episode_no_refers_to_the_episodes_number_in_the_overall_series, _whereas_series_no_refers_to_the_episodes_number_in_this_particular_series FROM table_27208311_1 WHERE series_no = 3",
        "context": "CREATE TABLE table_27208311_1 (episode_no_episode_no_refers_to_the_episodes_number_in_the_overall_series VARCHAR, _whereas_series_no_refers_to_the_episodes_number_in_this_particular_series VARCHAR, series_no VARCHAR)",
        "question": "What is every episode number for the series number 3?"
    },
    {
        "answer": "SELECT city_of_license__market FROM table_name_75 WHERE owned_since < 2011 AND affiliation = \"abc\" AND channel___tv___rf__ = \"9 (22)\"",
        "context": "CREATE TABLE table_name_75 (city_of_license__market VARCHAR, channel___tv___rf__ VARCHAR, owned_since VARCHAR, affiliation VARCHAR)",
        "question": "What city of license/market has an owned since before 2011,and a affiliation of abc and channel (tv/rf) of 9 (22)?"
    },
    {
        "answer": "SELECT replaced_by FROM table_27225944_3 WHERE team = \"Slaven Belupo\"",
        "context": "CREATE TABLE table_27225944_3 (replaced_by VARCHAR, team VARCHAR)",
        "question": "Name the replaced by for slaven belupo"
    },
    {
        "answer": "SELECT aspect_ratio FROM table_272313_2 WHERE pixel_aspect_ratio = \"SMPTE 259M\" AND scanning = \"interlaced\"",
        "context": "CREATE TABLE table_272313_2 (aspect_ratio VARCHAR, pixel_aspect_ratio VARCHAR, scanning VARCHAR)",
        "question": "Name the aspect ratio for smpte 259m and interlaced scanning"
    },
    {
        "answer": "SELECT color_analyst_s_ FROM table_2724704_5 WHERE studio_analyst_s_ = \"Terry Bowden\" AND tv_rating = \"17.2\"",
        "context": "CREATE TABLE table_2724704_5 (color_analyst_s_ VARCHAR, studio_analyst_s_ VARCHAR, tv_rating VARCHAR)",
        "question": "Name the color analyst for terry bowden and 17.2"
    },
    {
        "answer": "SELECT studio_analyst_s_ FROM table_2724704_5 WHERE network_s_ = \"ESPN\" AND sideline_reporter_s_ = \"Erin Andrews and Tom Rinaldi\"",
        "context": "CREATE TABLE table_2724704_5 (studio_analyst_s_ VARCHAR, network_s_ VARCHAR, sideline_reporter_s_ VARCHAR)",
        "question": "Name the studio analysts for espn with erin andrews and tom rinaldi"
    },
    {
        "answer": "SELECT MAX(*) AS millions FROM countries WHERE country = \"Iceland\" AND year in (1948, 1949)",
        "context": "",
        "question": "How many millions of $ were spent in Iceland in 1948/49?"
    },
    {
        "answer": "SELECT COUNT(_percentage_of_popular_vote) FROM table_19769687_3 WHERE _number_of_seats_won = 83",
        "context": "CREATE TABLE table_19769687_3 (_percentage_of_popular_vote VARCHAR, _number_of_seats_won VARCHAR)",
        "question": "Name the total number for % popular vote for # of seats won for 83"
    },
    {
        "answer": "SELECT transfer_fee FROM table_name_25 WHERE moving_from = \"celta de vigo\"",
        "context": "CREATE TABLE table_name_25 (transfer_fee VARCHAR, moving_from VARCHAR)",
        "question": "What was the transfer fee when the moving from was celta de Vigo?"
    },
    {
        "answer": "SELECT transfer_window FROM table_name_21 WHERE moving_from = \"fenerbah\u00e7e\"",
        "context": "CREATE TABLE table_name_21 (transfer_window VARCHAR, moving_from VARCHAR)",
        "question": "What was the transfer window with a moving from of fenerbah\u00e7e?"
    },
    {
        "answer": "SELECT COUNT(residence_city) FROM table_198175_2 WHERE english_name = \"Province of Viborg and Nyslott\"",
        "context": "CREATE TABLE table_198175_2 (residence_city VARCHAR, english_name VARCHAR)",
        "question": "How many residence cities have an English name of Province of Viborg and Nyslott?"
    },
    {
        "answer": "SELECT venue FROM table_name_26 WHERE score = \"4-0\" AND competition = \"2002 tiger cup\"",
        "context": "CREATE TABLE table_name_26 (venue VARCHAR, score VARCHAR, competition VARCHAR)",
        "question": "What venue has a score of 4-0 with the 2002 Tiger Cup listed as the competition?"
    },
    {
        "answer": "SELECT COUNT(area) FROM table_1982739_2 WHERE english_name = \"Nanqiao District\"",
        "context": "CREATE TABLE table_1982739_2 (area VARCHAR, english_name VARCHAR)",
        "question": "What is the total number of areas that are called Nanqiao District?"
    },
    {
        "answer": "SELECT COUNT(english_name) FROM table_1982739_2 WHERE traditional_chinese = \"\u5168\u6912\u7e23\"",
        "context": "CREATE TABLE table_1982739_2 (english_name VARCHAR, traditional_chinese VARCHAR)",
        "question": "What is the number of English names that have a Traditional Chinese name of \u5168\u6912\u7e23?"
    },
    {
        "answer": "SELECT MAX(stats) FROM table_19839391_3 WHERE pitcher = \"Doug Davis\"",
        "context": "CREATE TABLE table_19839391_3 (stats INTEGER, pitcher VARCHAR)",
        "question": "What are Doug Davis' maximum pitching stats?"
    },
    {
        "answer": "SELECT won FROM table_27293285_4 WHERE played = \"22\" AND lost = \"15\" AND points_against = \"511\"",
        "context": "CREATE TABLE table_27293285_4 (won VARCHAR, points_against VARCHAR, played VARCHAR, lost VARCHAR)",
        "question": "Name the won for played being 22 and points against 511 and lost being 15"
    },
    {
        "answer": "SELECT MIN(no_decisions) FROM table_19864214_3 WHERE pitcher = \"Scott Feldman Category:Articles with hCards\"",
        "context": "CREATE TABLE table_19864214_3 (no_decisions INTEGER, pitcher VARCHAR)",
        "question": "what is the least number of no decisions for scott feldman category:articles with hcards"
    },
    {
        "answer": "SELECT event FROM table_27294107_11 WHERE round_of_32 = \"Su\u00e1rez ( TRI ) W 16\u20136\"",
        "context": "CREATE TABLE table_27294107_11 (event VARCHAR, round_of_32 VARCHAR)",
        "question": "What was the event when su\u00e1rez ( tri ) w 16\u20136 was round of 32?"
    },
    {
        "answer": "SELECT spokesperson FROM table_1992924_3 WHERE commentator = \"Dmitriy Guberniyev\"",
        "context": "CREATE TABLE table_1992924_3 (spokesperson VARCHAR, commentator VARCHAR)",
        "question": "state all the spokesperson for the channel where commentator is dmitriy guberniyev"
    },
    {
        "answer": "SELECT release_date FROM table_name_37 WHERE director = \"friz freleng\" AND production_number > 1496 AND series = \"mm\" AND title = \"apes of wrath\"",
        "context": "CREATE TABLE table_name_37 (release_date VARCHAR, title VARCHAR, series VARCHAR, director VARCHAR, production_number VARCHAR)",
        "question": "What date was Apes of Wrath written by Friz Freleng, production number higher than 1496 from series mm released?"
    },
    {
        "answer": "SELECT release_date FROM table_name_93 WHERE production_number < 1495 AND director = \"robert mckimson\" AND title = \"mouse-placed kitten\"",
        "context": "CREATE TABLE table_name_93 (release_date VARCHAR, title VARCHAR, production_number VARCHAR, director VARCHAR)",
        "question": "What is the release date of the episode named Mouse-Placed Kitten with an episode number less than 1495 directed by Robert McKimson?"
    },
    {
        "answer": "SELECT MAX(countries_sampled) FROM table_19948664_1 WHERE author___editor___source = \"The Economist\" AND year_of_publication = \"2007\" AND ranking_la__2_ = \"2nd\"",
        "context": "CREATE TABLE table_19948664_1 (countries_sampled INTEGER, ranking_la__2_ VARCHAR, author___editor___source VARCHAR, year_of_publication VARCHAR)",
        "question": "How many countries were sampled in the index created by The Economist, published in 2007 and ranked 2nd in the LA Ranking?"
    },
    {
        "answer": "SELECT world_ranking__1_ FROM table_19948664_1 WHERE author___editor___source = \"Transparency International\"",
        "context": "CREATE TABLE table_19948664_1 (world_ranking__1_ VARCHAR, author___editor___source VARCHAR)",
        "question": "What's the wold ranking of the index by Transparency International?"
    },
    {
        "answer": "SELECT countries_sampled FROM table_19948664_1 WHERE ranking_la__2_ = \"2nd\" AND world_ranking__1_ = \"23rd\"",
        "context": "CREATE TABLE table_19948664_1 (countries_sampled VARCHAR, ranking_la__2_ VARCHAR, world_ranking__1_ VARCHAR)",
        "question": "How many countries were sampled for the index in 2nd place in the LA ranking and 23rd in the world ranking?"
    },
    {
        "answer": "SELECT col_location FROM table_2731431_1 WHERE col_height__m_ = 1107",
        "context": "CREATE TABLE table_2731431_1 (col_location VARCHAR, col_height__m_ VARCHAR)",
        "question": "What is the col location with a col height (m) of 1107?"
    },
    {
        "answer": "SELECT playoffs FROM table_1999350_1 WHERE open_canada_cup = \"N/A\" AND regular_season = \"2nd, New England\"",
        "context": "CREATE TABLE table_1999350_1 (playoffs VARCHAR, open_canada_cup VARCHAR, regular_season VARCHAR)",
        "question": "What is the playoffs result in years where Open Canada Cup was \"N/A\" and regular season result was \"2nd, New England\"?"
    },
    {
        "answer": "SELECT index__year_ FROM table_19948664_1 WHERE author___editor___source = \"United Nations (UNDP)\" AND ranking_la__2_ = \"2nd\"",
        "context": "CREATE TABLE table_19948664_1 (index__year_ VARCHAR, author___editor___source VARCHAR, ranking_la__2_ VARCHAR)",
        "question": "What index was created by the United Nations (UNDP) and reached 2nd place in the LA Ranking?"
    },
    {
        "answer": "SELECT COUNT(copyright_information) FROM table_27303975_3 WHERE catalog_number = \"CAL04 / 0091037553546\"",
        "context": "CREATE TABLE table_27303975_3 (copyright_information VARCHAR, catalog_number VARCHAR)",
        "question": "how many times was the catalog number cal04 / 0091037553546?"
    },
    {
        "answer": "SELECT directed_by FROM table_27332038_1 WHERE written_by = \"Elaine Ko\"",
        "context": "CREATE TABLE table_27332038_1 (directed_by VARCHAR, written_by VARCHAR)",
        "question": "who directed the episode that elaine ko wrote?"
    },
    {
        "answer": "SELECT COUNT(ilo_code) FROM table_2001348_1 WHERE revising_convention_s_ = \"this convention, Work in Fishing Convention\"",
        "context": "CREATE TABLE table_2001348_1 (ilo_code VARCHAR, revising_convention_s_ VARCHAR)",
        "question": "How many ILO codes are there with revising conventions of 'this convention, work in fishing convention'?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_42 WHERE venue = \"a\" AND opponent = \"west ham united\"",
        "context": "CREATE TABLE table_name_42 (attendance INTEGER, venue VARCHAR, opponent VARCHAR)",
        "question": "What is the highest attendance for the match against west ham united at the venue of a?"
    },
    {
        "answer": "SELECT league_goals FROM table_name_50 WHERE fa_cup_goals > 0 AND fa_cup_apps = \"2\" AND league_apps = \"45\"",
        "context": "CREATE TABLE table_name_50 (league_goals VARCHAR, league_apps VARCHAR, fa_cup_goals VARCHAR, fa_cup_apps VARCHAR)",
        "question": "what is the league goals when the fa cup goals is higher than 0, the fa cup apps is 2 and the league apps is 45?"
    },
    {
        "answer": "SELECT users___number_ FROM table_20018310_1 WHERE irrigation_district = \"Del Este\" AND juntas_de_regantes__wub_ = \"Nisibon-Yuma\"",
        "context": "CREATE TABLE table_20018310_1 (users___number_ VARCHAR, irrigation_district VARCHAR, juntas_de_regantes__wub_ VARCHAR)",
        "question": "What's the number of users in the Nisibon-Yuma within the Del Este district?"
    },
    {
        "answer": "SELECT total_itv_viewers__millions_ FROM table_27319183_7 WHERE official_itv_rating__millions_ = \"10.24\"",
        "context": "CREATE TABLE table_27319183_7 (total_itv_viewers__millions_ VARCHAR, official_itv_rating__millions_ VARCHAR)",
        "question": "How many total itv viewers were there for the episode with official itv ratings of 10.24 million?"
    },
    {
        "answer": "SELECT COUNT(tom_emmer__r_) FROM table_20032301_3 WHERE matt_entenza__dfl_ = \"38%\"",
        "context": "CREATE TABLE table_20032301_3 (tom_emmer__r_ VARCHAR, matt_entenza__dfl_ VARCHAR)",
        "question": "How many polls show different percentages for Tom Emmer and 38% for Matt Entenza?"
    },
    {
        "answer": "SELECT team_captain FROM table_27374004_2 WHERE shirt_sponsor = \"Quick\"",
        "context": "CREATE TABLE table_27374004_2 (team_captain VARCHAR, shirt_sponsor VARCHAR)",
        "question": "What is the team captain when the shirt sponser is quick?"
    },
    {
        "answer": "SELECT chairman FROM table_27374004_2 WHERE current_manager = \"Bob Peeters\"",
        "context": "CREATE TABLE table_27374004_2 (chairman VARCHAR, current_manager VARCHAR)",
        "question": "Who is the chairman when the current manager is bob peeters?"
    },
    {
        "answer": "SELECT album_number FROM table_name_66 WHERE chinese__simplified_ = \"\u60c5\u6b4c\u6ca1\u6709\u544a\u8bc9\u4f60\"",
        "context": "CREATE TABLE table_name_66 (album_number VARCHAR, chinese__simplified_ VARCHAR)",
        "question": "What is the album number for the record \u60c5\u6b4c\u6ca1\u6709\u544a\u8bc9\u4f60, simplified from the traditional Chinese name?"
    },
    {
        "answer": "SELECT university FROM table_27369069_4 WHERE soccer_stadium = \"terrain #2 of Complexe sportif Claude-Robillard\"",
        "context": "CREATE TABLE table_27369069_4 (university VARCHAR, soccer_stadium VARCHAR)",
        "question": "What is the university where the soccer stadium is terrain #2 of complexe sportif claude-robillard?"
    },
    {
        "answer": "SELECT COUNT(date_of_vacancy) FROM table_27374004_4 WHERE outgoing_manager = \"Bart De Roover\"",
        "context": "CREATE TABLE table_27374004_4 (date_of_vacancy VARCHAR, outgoing_manager VARCHAR)",
        "question": "How many times did outgoing manager Bart de Roover vacated a position?"
    },
    {
        "answer": "SELECT outgoing_manager FROM table_27374004_4 WHERE manner_of_departure = \"Sacked\" AND position_in_table = \"15th\"",
        "context": "CREATE TABLE table_27374004_4 (outgoing_manager VARCHAR, manner_of_departure VARCHAR, position_in_table VARCHAR)",
        "question": "Who was the outgoing manager of the team in 15th position that was sacked?"
    },
    {
        "answer": "SELECT driver FROM table_20159025_1 WHERE part_1 = \"1:31.386\"",
        "context": "CREATE TABLE table_20159025_1 (driver VARCHAR, part_1 VARCHAR)",
        "question": "Who was the driver when the time in part 3 was 1:31.386?"
    },
    {
        "answer": "SELECT COUNT(title) FROM table_20345624_2 WHERE original_airdate = \"5 August 1967\"",
        "context": "CREATE TABLE table_20345624_2 (title VARCHAR, original_airdate VARCHAR)",
        "question": "Name the title that aired on 5 august 1967"
    },
    {
        "answer": "SELECT outgoing_head_coach FROM table_27383390_4 WHERE incoming_head_coach = \"Abdollah Veysi\"",
        "context": "CREATE TABLE table_27383390_4 (outgoing_head_coach VARCHAR, incoming_head_coach VARCHAR)",
        "question": "Who is the outgoing head coach when the incoming head coach is abdollah veysi?"
    },
    {
        "answer": "SELECT SUM(giro_wins) FROM table_name_29 WHERE jerseys = 2 AND country = \"portugal\" AND young_rider > 0",
        "context": "CREATE TABLE table_name_29 (giro_wins INTEGER, young_rider VARCHAR, jerseys VARCHAR, country VARCHAR)",
        "question": "what is the giro wins when jerseys is 2, country is portugal and young rider is more than 0?"
    },
    {
        "answer": "SELECT penalty FROM table_name_19 WHERE player = \"jonathan toews\"",
        "context": "CREATE TABLE table_name_19 (penalty VARCHAR, player VARCHAR)",
        "question": "What is the penalty for Jonathan Toews?"
    },
    {
        "answer": "SELECT others_percentage FROM table_20573232_1 WHERE mccain_percentage = \"57.7%\"",
        "context": "CREATE TABLE table_20573232_1 (others_percentage VARCHAR, mccain_percentage VARCHAR)",
        "question": "What is the percentage of others when McCain is at 57.7%"
    },
    {
        "answer": "SELECT seasons_by_team FROM table_274117_5 WHERE position = \"OL\" AND number = 11",
        "context": "CREATE TABLE table_274117_5 (seasons_by_team VARCHAR, position VARCHAR, number VARCHAR)",
        "question": "What are seasons by team for Pro Bowl appearances of the player who was an OL and had 11 appearances? "
    },
    {
        "answer": "SELECT competition FROM table_name_85 WHERE result = \"2-0\" AND location = \"ferreiras\" AND assist_pass = \"casey nogueira\"",
        "context": "CREATE TABLE table_name_85 (competition VARCHAR, assist_pass VARCHAR, result VARCHAR, location VARCHAR)",
        "question": "Which competition has a result of 2-0 in Ferreiras with an assist/pass by Casey Nogueira?"
    },
    {
        "answer": "SELECT for___percentage_ FROM table_20683381_3 WHERE against___percentage_ = \"17,874 (33.2)\"",
        "context": "CREATE TABLE table_20683381_3 (for___percentage_ VARCHAR, against___percentage_ VARCHAR)",
        "question": "When 17,874 (33.2) is the percentage against what is the percentage for?"
    },
    {
        "answer": "SELECT MIN(elevation_ft) FROM table_27435931_1 WHERE year = \"April 2006\"",
        "context": "CREATE TABLE table_27435931_1 (elevation_ft INTEGER, year VARCHAR)",
        "question": "what was the lowest elevation in april 2006?"
    },
    {
        "answer": "SELECT against___percentage_ FROM table_20683381_3 WHERE \u00b1_yes_side_2008___percentage_ = \"+18.1\"",
        "context": "CREATE TABLE table_20683381_3 (against___percentage_ VARCHAR, \u00b1_yes_side_2008___percentage_ VARCHAR)",
        "question": "When +18.1 is the \u00b1 yes side 2008 percentage what is the percentage of against?"
    },
    {
        "answer": "SELECT name FROM table_name_72 WHERE transfer_window = \"winter\" AND transfer_fee = \"free\"",
        "context": "CREATE TABLE table_name_72 (name VARCHAR, transfer_window VARCHAR, transfer_fee VARCHAR)",
        "question": "What player had a transfer window of winter, and free as the transfer fee?"
    },
    {
        "answer": "SELECT name FROM table_name_85 WHERE transfer_window = \"summer\" AND nat = \"ger\" AND transfer_fee = \"n/a\"",
        "context": "CREATE TABLE table_name_85 (name VARCHAR, transfer_fee VARCHAR, transfer_window VARCHAR, nat VARCHAR)",
        "question": "Which player from GER has a transfer window of summer, and a transfer fee of n/a?"
    },
    {
        "answer": "SELECT directed_by FROM table_20704243_6 WHERE original_air_date = \"July15,2012\"",
        "context": "CREATE TABLE table_20704243_6 (directed_by VARCHAR, original_air_date VARCHAR)",
        "question": "Who directed the episode that aired on july15,2012?"
    },
    {
        "answer": "SELECT weight__kg_m_ FROM table_2071644_2 WHERE cross_section_area__cm_2__ = \"25.3\"",
        "context": "CREATE TABLE table_2071644_2 (weight__kg_m_ VARCHAR, cross_section_area__cm_2__ VARCHAR)",
        "question": "What is the weight with a cross section area of 25.3?"
    },
    {
        "answer": "SELECT callback_audition_date FROM table_27455867_1 WHERE episode_air_date = \"February 2, 2011\"",
        "context": "CREATE TABLE table_27455867_1 (callback_audition_date VARCHAR, episode_air_date VARCHAR)",
        "question": "When was the callback audition date for the audition city from the episode aired on February 2, 2011?"
    },
    {
        "answer": "SELECT flange_thickness__mm_ FROM table_2071644_2 WHERE weight__kg_m_ = \"19.9\"",
        "context": "CREATE TABLE table_2071644_2 (flange_thickness__mm_ VARCHAR, weight__kg_m_ VARCHAR)",
        "question": "What is the flange thickness when the weight is 19.9?"
    },
    {
        "answer": "SELECT guernsey_record FROM table_name_80 WHERE location = \"bordeaux harbour\"",
        "context": "CREATE TABLE table_name_80 (guernsey_record VARCHAR, location VARCHAR)",
        "question": "What was the guernsey record set with a fish caught at Bordeaux Harbour?"
    },
    {
        "answer": "SELECT release_date FROM table_name_21 WHERE production_num < 5038 AND characters = \"bosko\"",
        "context": "CREATE TABLE table_name_21 (release_date VARCHAR, production_num VARCHAR, characters VARCHAR)",
        "question": "When was the film released that a less than 5038 production number and was of the character Bosko?"
    },
    {
        "answer": "SELECT MIN(no_in_season) FROM table_20726262_6 WHERE directedby = \"Karen Gaviola\"",
        "context": "CREATE TABLE table_20726262_6 (no_in_season INTEGER, directedby VARCHAR)",
        "question": "What episode was directed by Karen Gaviola?"
    },
    {
        "answer": "SELECT MIN(production_num) FROM table_name_56 WHERE title = \"bosko's fox hunt\"",
        "context": "CREATE TABLE table_name_56 (production_num INTEGER, title VARCHAR)",
        "question": "The film titled Bosko's fox hunt had what as the smallest production number?"
    },
    {
        "answer": "SELECT world_rank_by_qs_, _2013 FROM table_27484208_1 WHERE members = \"University of Otago\"",
        "context": "CREATE TABLE table_27484208_1 (world_rank_by_qs_ VARCHAR, _2013 VARCHAR, members VARCHAR)",
        "question": "What was the world rank by QS in 2013 for the University of Otago?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_50 WHERE genre = \"first-person shooter\"",
        "context": "CREATE TABLE table_name_50 (year INTEGER, genre VARCHAR)",
        "question": "What is total number of years that has genre of first-person shooter?"
    },
    {
        "answer": "SELECT result FROM table_27487712_1 WHERE incumbent = \"John Lewis\"",
        "context": "CREATE TABLE table_27487712_1 (result VARCHAR, incumbent VARCHAR)",
        "question": "What was the result of the election with incumbent john lewis?"
    },
    {
        "answer": "SELECT \"normalised\" AS _transliteration FROM table_name_9 WHERE roman_equivalent = \"i\"",
        "context": "CREATE TABLE table_name_9 (roman_equivalent VARCHAR)",
        "question": "what is the \"normalized\" transliteration for Roman i"
    },
    {
        "answer": "SELECT judges FROM table_27487310_5 WHERE country = \"Netherlands\" AND air_dates = \"28 November 2011 \u2013 24 December 2011\"",
        "context": "CREATE TABLE table_27487310_5 (judges VARCHAR, country VARCHAR, air_dates VARCHAR)",
        "question": "Who are the judges in the Netherlands for the season airing 28 November 2011 \u2013 24 December 2011?"
    },
    {
        "answer": "SELECT normal_environment_of_occurrence__in_native_words_ FROM table_name_86 WHERE proto_germanic_origin = \"/ai/\"",
        "context": "CREATE TABLE table_name_86 (normal_environment_of_occurrence__in_native_words_ VARCHAR, proto_germanic_origin VARCHAR)",
        "question": "what is the normal environment of occurrence that has a Proto-Germanic origin /ai/"
    },
    {
        "answer": "SELECT COUNT(season) FROM table_27487336_1 WHERE sacks = \"39\"",
        "context": "CREATE TABLE table_27487336_1 (season VARCHAR, sacks VARCHAR)",
        "question": "How many seasons have a sacks of 39?"
    },
    {
        "answer": "SELECT COUNT(latitude) FROM table_name_45 WHERE land___sqmi__ > 34.846 AND geo_id < 3805529660 AND township = \"greenland\" AND ansi_code > 1036405",
        "context": "CREATE TABLE table_name_45 (latitude VARCHAR, ansi_code VARCHAR, township VARCHAR, land___sqmi__ VARCHAR, geo_id VARCHAR)",
        "question": "What is the total latitude of the greenland township with more than 34.846 sqmi of land, a geo id less than 3805529660, and an ANSI code greater than 1036405?"
    },
    {
        "answer": "SELECT decision FROM table_27501030_7 WHERE opponent = \"Atlanta Thrashers\"",
        "context": "CREATE TABLE table_27501030_7 (decision VARCHAR, opponent VARCHAR)",
        "question": "What is the decision when the opponents are atlanta thrashers?"
    },
    {
        "answer": "SELECT experience FROM table_name_29 WHERE year_at_cu = \"1st\" AND position = \"graduate assistant\"",
        "context": "CREATE TABLE table_name_29 (experience VARCHAR, year_at_cu VARCHAR, position VARCHAR)",
        "question": "The graduate assistant who was in the 1st year at CU has what experience?"
    },
    {
        "answer": "SELECT name FROM table_name_86 WHERE experience > 19 AND alma_mater = \"eastern nazarene ('74)\"",
        "context": "CREATE TABLE table_name_86 (name VARCHAR, experience VARCHAR, alma_mater VARCHAR)",
        "question": "What person has the alma mater of Eastern Nazarene ('74), and greater than 19 experience?"
    },
    {
        "answer": "SELECT COUNT(engine_capacity) FROM table_name_50 WHERE transmission = \"a4\" AND mpg_us_urban > 19 AND mpg_us_extra_urban > 38.6 AND model = \"aveo\"",
        "context": "CREATE TABLE table_name_50 (engine_capacity VARCHAR, model VARCHAR, mpg_us_extra_urban VARCHAR, transmission VARCHAR, mpg_us_urban VARCHAR)",
        "question": "What is the total engine capacity of the a4 transmission, which has an urban mpg-US greater than 19, an mpg-us extra-urban greater than 38.6, and an aveo model?"
    },
    {
        "answer": "SELECT enrollment__2005_ FROM table_2076490_1 WHERE type = \"Baccalaureate college\" AND school = \"Granite State College\"",
        "context": "CREATE TABLE table_2076490_1 (enrollment__2005_ VARCHAR, type VARCHAR, school VARCHAR)",
        "question": "What was the enrollment (2005) for baccalaureate colleges , for Granite State College?"
    },
    {
        "answer": "SELECT mpg_uk_combined FROM table_name_89 WHERE mpg_uk_urban__cold_ > 26.6 AND transmission = \"m5\" AND fuel_type = \"diesel\" AND engine_capacity < 1560",
        "context": "CREATE TABLE table_name_89 (mpg_uk_combined VARCHAR, engine_capacity VARCHAR, fuel_type VARCHAR, mpg_uk_urban__cold_ VARCHAR, transmission VARCHAR)",
        "question": "What is the mpg-uk combined with an mpg-uk urban (cold) greater than 26.6, a m5 transmission, a diesel fuel type, and an engine capacity less than 1560?"
    },
    {
        "answer": "SELECT l_100km_urban__cold_ FROM table_name_24 WHERE co_2_g_km < 222 AND mpg_us_urban > 17.8 AND mpg_uk_extra_urban = 55.4 AND engine_capacity > 1560",
        "context": "CREATE TABLE table_name_24 (l_100km_urban__cold_ VARCHAR, engine_capacity VARCHAR, mpg_uk_extra_urban VARCHAR, co_2_g_km VARCHAR, mpg_us_urban VARCHAR)",
        "question": "What is the l/100km urban (cold) with a CO 2 g/km less than 222, an mpg-us urban greater than 17.8, an mpg-uk extra-urban of 55.4, and an engine capacity greater than 1560?"
    },
    {
        "answer": "SELECT MIN(qtr_final__week_) FROM table_27529608_21 WHERE name_name_of_act = \"Austin Anderson\"",
        "context": "CREATE TABLE table_27529608_21 (qtr_final__week_ INTEGER, name_name_of_act VARCHAR)",
        "question": "What is the quarterfinal week for Austin Anderson?"
    },
    {
        "answer": "SELECT model FROM table_name_6 WHERE green_rating = \"g\" AND manufacturer = \"chrysler jeep\" AND l_100km_urban__cold_ < 18 AND mpg_uk_combined = 27.7",
        "context": "CREATE TABLE table_name_6 (model VARCHAR, mpg_uk_combined VARCHAR, l_100km_urban__cold_ VARCHAR, green_rating VARCHAR, manufacturer VARCHAR)",
        "question": "What model has a g green rating, has chrysler jeep as a manufacturer, has an l/100km urban (cold) less than 18, and has an mpg-uk combined of 27.7?"
    },
    {
        "answer": "SELECT COUNT(semi_final__week_) FROM table_27529608_21 WHERE hometown = \"Pittsburgh, Pennsylvania\"",
        "context": "CREATE TABLE table_27529608_21 (semi_final__week_ VARCHAR, hometown VARCHAR)",
        "question": "How many semi-final weeks are there for acts from Pittsburgh, Pennsylvania?"
    },
    {
        "answer": "SELECT total_apps FROM table_name_80 WHERE league_apps = \"4 (2)\"",
        "context": "CREATE TABLE table_name_80 (total_apps VARCHAR, league_apps VARCHAR)",
        "question": "what is the total apps when the league apps is 4 (2)?"
    },
    {
        "answer": "SELECT COUNT(type_of_work) FROM table_207795_1 WHERE russian_title = \"\u0425\u0440\u043e\u043c\u0430\u044f \u0441\u0443\u0434\u044c\u0431\u0430\"",
        "context": "CREATE TABLE table_207795_1 (type_of_work VARCHAR, russian_title VARCHAR)",
        "question": "How many types of work is \u0445\u0440\u043e\u043c\u0430\u044f \u0441\u0443\u0434\u044c\u0431\u0430?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_80 WHERE time = \"6:36.65\"",
        "context": "CREATE TABLE table_name_80 (rank INTEGER, time VARCHAR)",
        "question": "What is the least rank for athletes with a time of 6:36.65?"
    },
    {
        "answer": "SELECT players FROM table_27533947_1 WHERE grand_average = \"12.76-202\"",
        "context": "CREATE TABLE table_27533947_1 (players VARCHAR, grand_average VARCHAR)",
        "question": "If the grand average is 12.76-202, who is the player?"
    },
    {
        "answer": "SELECT points FROM table_20855452_4 WHERE player = \"Agnieszka Radwa\u0144ska\"",
        "context": "CREATE TABLE table_20855452_4 (points VARCHAR, player VARCHAR)",
        "question": "How many points did agnieszka radwa\u0144ska score?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_27537518_4 WHERE score = \"6-4\"",
        "context": "CREATE TABLE table_27537518_4 (attendance INTEGER, score VARCHAR)",
        "question": "What was the 6-4 score's maximum attendance?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_3 WHERE name = \"stephen myler\" AND tries < 0",
        "context": "CREATE TABLE table_name_3 (points INTEGER, name VARCHAR, tries VARCHAR)",
        "question": "How many Points have a Name of stephen myler, and Tries smaller than 0?"
    },
    {
        "answer": "SELECT MIN(number_of_electorates__2003_) FROM table_name_85 WHERE district = \"bhind\" AND reserved_for___sc___st__none_ = \"none\" AND constituency_number = \"11\"",
        "context": "CREATE TABLE table_name_85 (number_of_electorates__2003_ INTEGER, constituency_number VARCHAR, district VARCHAR, reserved_for___sc___st__none_ VARCHAR)",
        "question": "What is the lowest number of Electorates (2003) in District bhind, Reserved for none, and Constituency Number 11?"
    },
    {
        "answer": "SELECT record FROM table_27539272_4 WHERE location_attendance = \"Prudential Center - 12,880\"",
        "context": "CREATE TABLE table_27539272_4 (record VARCHAR, location_attendance VARCHAR)",
        "question": "Name the record for prudential center - 12,880"
    },
    {
        "answer": "SELECT title_subject FROM table_20903658_1 WHERE medium = \"Bronze\" AND public_office = \"colonist and soldier in Ville Marie, New France\"",
        "context": "CREATE TABLE table_20903658_1 (title_subject VARCHAR, medium VARCHAR, public_office VARCHAR)",
        "question": "Who was the subject of the bronze sculpture who was a colonist and soldier in Ville Marie, New France? "
    },
    {
        "answer": "SELECT original_title FROM table_20963074_1 WHERE result = \"Not Nominated\" AND film_title_used_in_nomination = \"Report on Death\"",
        "context": "CREATE TABLE table_20963074_1 (original_title VARCHAR, result VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "Name the original title for not nominated result with report on death"
    },
    {
        "answer": "SELECT COUNT(result) FROM table_20963074_1 WHERE original_title = \"Octubre\"",
        "context": "CREATE TABLE table_20963074_1 (result VARCHAR, original_title VARCHAR)",
        "question": "Name the total number of results for octubre"
    },
    {
        "answer": "SELECT year__ceremony_ FROM table_20963074_1 WHERE original_title = \"Reportaje a la muerte\"",
        "context": "CREATE TABLE table_20963074_1 (year__ceremony_ VARCHAR, original_title VARCHAR)",
        "question": "Name the year for reportaje a la muerte"
    },
    {
        "answer": "SELECT type FROM table_name_49 WHERE unit = \"naval base swinoujscie (auxiliary squadron)\"",
        "context": "CREATE TABLE table_name_49 (type VARCHAR, unit VARCHAR)",
        "question": "What is the type for a vessel with a listed unit of naval base swinoujscie (auxiliary squadron)?"
    },
    {
        "answer": "SELECT first_air_date FROM table_20971444_3 WHERE episode = 9",
        "context": "CREATE TABLE table_20971444_3 (first_air_date VARCHAR, episode VARCHAR)",
        "question": "Name the first air date for 9 episode"
    },
    {
        "answer": "SELECT directed_by FROM table_27547668_3 WHERE viewers = 899000",
        "context": "CREATE TABLE table_27547668_3 (directed_by VARCHAR, viewers VARCHAR)",
        "question": "Who directed the episode with 899000 viewers?"
    },
    {
        "answer": "SELECT SUM(countries_sampled) FROM table_name_71 WHERE year_of_publication = \"2010\" AND world_ranking__1_ = \"33\" AND ranking_in_latin_america__2_ < 3",
        "context": "CREATE TABLE table_name_71 (countries_sampled INTEGER, ranking_in_latin_america__2_ VARCHAR, year_of_publication VARCHAR, world_ranking__1_ VARCHAR)",
        "question": "How many countries sampled has a world ranking of 33 in 2010 and less than 3 ranking in Latin America?"
    },
    {
        "answer": "SELECT original_airdate FROM table_27547668_2 WHERE _number = 6",
        "context": "CREATE TABLE table_27547668_2 (original_airdate VARCHAR, _number VARCHAR)",
        "question": "What is the original air date of # 6?"
    },
    {
        "answer": "SELECT score FROM table_name_43 WHERE tie_no = \"replay\" AND away_team = \"york city\"",
        "context": "CREATE TABLE table_name_43 (score VARCHAR, tie_no VARCHAR, away_team VARCHAR)",
        "question": "What is the score when the Tie no is replay, and the away team is York City?"
    },
    {
        "answer": "SELECT episode_number FROM table_name_79 WHERE broadcast_date = \"21 september 2001\"",
        "context": "CREATE TABLE table_name_79 (episode_number VARCHAR, broadcast_date VARCHAR)",
        "question": "What is the episode number of the episode broadcast on 21 September 2001?"
    },
    {
        "answer": "SELECT province FROM table_27592654_2 WHERE election_date = \"5 Cannot handle non-empty timestamp argument! 1861\"",
        "context": "CREATE TABLE table_27592654_2 (province VARCHAR, election_date VARCHAR)",
        "question": "What was the province with an election date of 5 cannot handle non-empty timestamp argument! 1861?"
    },
    {
        "answer": "SELECT most_spoken_language FROM table_name_91 WHERE code > 70403 AND area__km_2__ > 3.79 AND population > 73 OFFSET 283",
        "context": "CREATE TABLE table_name_91 (most_spoken_language VARCHAR, population VARCHAR, code VARCHAR, area__km_2__ VARCHAR)",
        "question": "What is the Most Spoken language in the Place with Code 70403 with an Area (km 2) larger than 3.79 and a Population larger than 73,283?"
    },
    {
        "answer": "SELECT broadcast_day_and_timings__in_jst__ FROM table_21076286_2 WHERE broadcast_network = \"TV Saitama\"",
        "context": "CREATE TABLE table_21076286_2 (broadcast_day_and_timings__in_jst__ VARCHAR, broadcast_network VARCHAR)",
        "question": "Name the broadcast day and timings for tv saitama"
    },
    {
        "answer": "SELECT song_choice FROM table_27614571_1 WHERE original_artist = \"Patricia Marx\"",
        "context": "CREATE TABLE table_27614571_1 (song_choice VARCHAR, original_artist VARCHAR)",
        "question": "What was Barreto's song choice where the original artist was Patricia Marx?"
    },
    {
        "answer": "SELECT MAX(lane) FROM table_name_85 WHERE react < 0.164 AND time = \"20.45\"",
        "context": "CREATE TABLE table_name_85 (lane INTEGER, react VARCHAR, time VARCHAR)",
        "question": "What's the lane number when time was 20.45 and the react was less than 0.164?"
    },
    {
        "answer": "SELECT MIN(population) FROM table_name_66 WHERE code < 70409 AND area__km_2__ < 5.97 AND place = \"tshepiso\"",
        "context": "CREATE TABLE table_name_66 (population INTEGER, place VARCHAR, code VARCHAR, area__km_2__ VARCHAR)",
        "question": "What is the Population of Tshepiso with a Code of 70409 or smaller and an Area (km 2) smaller than 5.97?"
    },
    {
        "answer": "SELECT time FROM table_name_76 WHERE react > 0.187 AND athlete = \"paul hession\"",
        "context": "CREATE TABLE table_name_76 (time VARCHAR, react VARCHAR, athlete VARCHAR)",
        "question": "What the time of Paul Hession with more than an 0.187 react?"
    },
    {
        "answer": "SELECT opponents FROM table_27611593_5 WHERE partner = \"Vania King\"",
        "context": "CREATE TABLE table_27611593_5 (opponents VARCHAR, partner VARCHAR)",
        "question": "Who were Petrova's opponents with Vania King?"
    },
    {
        "answer": "SELECT episode_air_date FROM table_27615445_1 WHERE guest_fourth_judge = \"Luiza Possi\"",
        "context": "CREATE TABLE table_27615445_1 (episode_air_date VARCHAR, guest_fourth_judge VARCHAR)",
        "question": "List all episode air dates where Luiza Possi was the guest fourth judge?"
    },
    {
        "answer": "SELECT COUNT(episode_air_date) FROM table_27615445_1 WHERE audition_city = \"Rio de Janeiro\"",
        "context": "CREATE TABLE table_27615445_1 (episode_air_date VARCHAR, audition_city VARCHAR)",
        "question": "How many episode air dates are there for auditioning city Rio De Janeiro?"
    },
    {
        "answer": "SELECT won_promotion FROM table_2119448_3 WHERE lost_promotion_playoffs = \"Kalmar FF\"",
        "context": "CREATE TABLE table_2119448_3 (won_promotion VARCHAR, lost_promotion_playoffs VARCHAR)",
        "question": "Name the won promotion for kalmar ff"
    },
    {
        "answer": "SELECT nation FROM table_name_35 WHERE world_rank = \"2\" AND birth_date = \"1976-12-20\"",
        "context": "CREATE TABLE table_name_35 (nation VARCHAR, world_rank VARCHAR, birth_date VARCHAR)",
        "question": "what is the nation when the world rank is 2 and the birth date is 1976-12-20?"
    },
    {
        "answer": "SELECT song_choice FROM table_27614707_1 WHERE week__number = \"Top 5\" AND original_artist = \"Marisa Monte\"",
        "context": "CREATE TABLE table_27614707_1 (song_choice VARCHAR, week__number VARCHAR, original_artist VARCHAR)",
        "question": "What Marisa Monte song choice was song during top 5?"
    },
    {
        "answer": "SELECT tournament_venue__city_ FROM table_21269441_4 WHERE regular_season_winner = \"Louisville\"",
        "context": "CREATE TABLE table_21269441_4 (tournament_venue__city_ VARCHAR, regular_season_winner VARCHAR)",
        "question": "Where was the tourney when Louisville won the regular season?"
    },
    {
        "answer": "SELECT date FROM table_name_22 WHERE format = \"cd\" AND label = \"avex entertainment\"",
        "context": "CREATE TABLE table_name_22 (date VARCHAR, format VARCHAR, label VARCHAR)",
        "question": "When did Avex Entertainment release a CD?"
    },
    {
        "answer": "SELECT MIN(members_lost) FROM table_27671835_3 WHERE net_change = \"\u22121\"",
        "context": "CREATE TABLE table_27671835_3 (members_lost INTEGER, net_change VARCHAR)",
        "question": "What is the lowest number of members lost when the  net change is \u22121?"
    },
    {
        "answer": "SELECT new_membership_total FROM table_27671835_3 WHERE conference = \"NCHC (men only)\"",
        "context": "CREATE TABLE table_27671835_3 (new_membership_total VARCHAR, conference VARCHAR)",
        "question": "What was the new membership total at the nchc (men only) conference?"
    },
    {
        "answer": "SELECT COUNT(team) FROM table_27683516_3 WHERE date_of_vacancy = \"30 October 2010\"",
        "context": "CREATE TABLE table_27683516_3 (team VARCHAR, date_of_vacancy VARCHAR)",
        "question": "How many dates of vacancy were on 30 october 2010?"
    },
    {
        "answer": "SELECT MAX(insurgents) FROM table_21636599_1 WHERE total_per_period = 602",
        "context": "CREATE TABLE table_21636599_1 (insurgents INTEGER, total_per_period VARCHAR)",
        "question": "How many insurgents have 602 as the total per period?"
    },
    {
        "answer": "SELECT isin FROM table_21692771_1 WHERE amount_issued_[\u20ac] = \"223,000,000\"",
        "context": "CREATE TABLE table_21692771_1 (isin VARCHAR, amount_issued_ VARCHAR, \u20ac VARCHAR)",
        "question": "What is the ISIN that has an amount issued of 223,000,000?"
    },
    {
        "answer": "SELECT date FROM table_27700375_11 WHERE location_attendance = \"The Palace of Auburn Hills 14,554\"",
        "context": "CREATE TABLE table_27700375_11 (date VARCHAR, location_attendance VARCHAR)",
        "question": "Name the date for the palace of auburn hills 14,554"
    },
    {
        "answer": "SELECT MIN(game) FROM table_27700375_11 WHERE score = \"L 109\u2013116 (OT)\"",
        "context": "CREATE TABLE table_27700375_11 (game INTEGER, score VARCHAR)",
        "question": "Name the least game for  l 109\u2013116 (ot)"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_21795650_1 WHERE series = \"Formula Renault 2.0 Italy\"",
        "context": "CREATE TABLE table_21795650_1 (points VARCHAR, series VARCHAR)",
        "question": "What is the point total for the Formula Renault 2.0 Italy series?"
    },
    {
        "answer": "SELECT result FROM table_name_3 WHERE opponent = \"washington redskins\"",
        "context": "CREATE TABLE table_name_3 (result VARCHAR, opponent VARCHAR)",
        "question": "Which Result has an Opponent of washington redskins?"
    },
    {
        "answer": "SELECT year__ceremony_ FROM table_21790203_1 WHERE film_title_used_in_nomination = \"My Magic\"",
        "context": "CREATE TABLE table_21790203_1 (year__ceremony_ VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "Name the year for is my magic"
    },
    {
        "answer": "SELECT fencing_victories__pts_ FROM table_name_61 WHERE shooting_score__pts_ = \"187 (1180)\" AND total < 5640",
        "context": "CREATE TABLE table_name_61 (fencing_victories__pts_ VARCHAR, shooting_score__pts_ VARCHAR, total VARCHAR)",
        "question": "Which Fencing Victories (pts) has a Shooting Score (pts) of 187 (1180) and a Total smaller than 5640? Question 1"
    },
    {
        "answer": "SELECT result FROM table_21790203_1 WHERE film_title_used_in_nomination = \"Already Famous\"",
        "context": "CREATE TABLE table_21790203_1 (result VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "Name the result for already famous"
    },
    {
        "answer": "SELECT years FROM table_name_72 WHERE type_code = \"cubic centimetres (cuin) v8 ( m273 )\"",
        "context": "CREATE TABLE table_name_72 (years VARCHAR, type_code VARCHAR)",
        "question": "Which Years has a Type/code of cubic centimetres (cuin) v8 ( m273 )?"
    },
    {
        "answer": "SELECT reason_for_change FROM table_2192067_4 WHERE date_successor_seated = \"July 28, 1876\"",
        "context": "CREATE TABLE table_2192067_4 (reason_for_change VARCHAR, date_successor_seated VARCHAR)",
        "question": "what is the reason for change where the date the successor was seated was july 28, 1876?"
    },
    {
        "answer": "SELECT district FROM table_2192067_4 WHERE vacator = \"Vacant\"",
        "context": "CREATE TABLE table_2192067_4 (district VARCHAR, vacator VARCHAR)",
        "question": "what is the district where the vacator is vacant?"
    },
    {
        "answer": "SELECT total FROM table_21995420_6 WHERE school = \"University of the Cordilleras UC Dance Squad\"",
        "context": "CREATE TABLE table_21995420_6 (total VARCHAR, school VARCHAR)",
        "question": "What is every total for the University of the Cordilleras UC Dance Squad?"
    },
    {
        "answer": "SELECT MIN(draws) FROM table_name_29 WHERE against < 1299 AND wins > 7 AND club = \"warrnambool\" AND losses < 2",
        "context": "CREATE TABLE table_name_29 (draws INTEGER, losses VARCHAR, club VARCHAR, against VARCHAR, wins VARCHAR)",
        "question": "What's the smallest draw of Warrnambool when the against was less than 1299, more than 7 wins, and less than 2 losses?"
    },
    {
        "answer": "SELECT outcome FROM table_2199290_2 WHERE score_in_the_final = \"7\u20136(9), 7\u20136(1)\"",
        "context": "CREATE TABLE table_2199290_2 (outcome VARCHAR, score_in_the_final VARCHAR)",
        "question": "What was the outcome when the final score was 7\u20136(9), 7\u20136(1)?"
    },
    {
        "answer": "SELECT AVG(league_cup_goals) FROM table_name_98 WHERE league_cup_apps = 4 AND league_goals < 4 AND fa_cup_apps = \"1\" AND total_apps = \"35\"",
        "context": "CREATE TABLE table_name_98 (league_cup_goals INTEGER, total_apps VARCHAR, fa_cup_apps VARCHAR, league_cup_apps VARCHAR, league_goals VARCHAR)",
        "question": "what is the average league cup goals when the league cup apps is 4, league goals is less than 4, fa cup apps is 1 and total apps is 35?"
    },
    {
        "answer": "SELECT winner FROM table_22050544_1 WHERE event__number = \"15H\"",
        "context": "CREATE TABLE table_22050544_1 (winner VARCHAR, event__number VARCHAR)",
        "question": "What is the winner in event number 15h?"
    },
    {
        "answer": "SELECT location_attendance FROM table_27713030_3 WHERE date = \"October 18\"",
        "context": "CREATE TABLE table_27713030_3 (location_attendance VARCHAR, date VARCHAR)",
        "question": "What is the location and attendance on October 18?"
    },
    {
        "answer": "SELECT location FROM table_name_67 WHERE league_division = \"second division\" AND position_in_2012_13 = \"4th, third division (promoted)\"",
        "context": "CREATE TABLE table_name_67 (location VARCHAR, league_division VARCHAR, position_in_2012_13 VARCHAR)",
        "question": "What Location is in the second division and has 4th, third division (promoted) as its Position in 2012-13?"
    },
    {
        "answer": "SELECT SUM(shirt_no) FROM table_name_11 WHERE position = \"setter\" AND nationality = \"italy\" AND height > 172",
        "context": "CREATE TABLE table_name_11 (shirt_no INTEGER, height VARCHAR, position VARCHAR, nationality VARCHAR)",
        "question": "What is the shirt no with a position of setter, a nationality of Italy, and height larger than 172?"
    },
    {
        "answer": "SELECT fcc_info FROM table_name_98 WHERE frequency_mhz > 89.3 AND city_of_license = \"portales, new mexico\"",
        "context": "CREATE TABLE table_name_98 (fcc_info VARCHAR, frequency_mhz VARCHAR, city_of_license VARCHAR)",
        "question": "What is the FCC info for the translator with frequency over 89.3MHz and licensd in Portales, New Mexico?"
    },
    {
        "answer": "SELECT COUNT(record) FROM table_27715173_6 WHERE date = \"November 24\"",
        "context": "CREATE TABLE table_27715173_6 (record VARCHAR, date VARCHAR)",
        "question": "How many records are there for the game on november 24?"
    },
    {
        "answer": "SELECT MAX(size) FROM table_name_69 WHERE county = \"62 perry\"",
        "context": "CREATE TABLE table_name_69 (size INTEGER, county VARCHAR)",
        "question": "Which Size has a County of 62 perry?"
    },
    {
        "answer": "SELECT sigma__with_15\u03c3_shift_ FROM table_222448_1 WHERE percent_defective = \"69%\"",
        "context": "CREATE TABLE table_222448_1 (sigma__with_15\u03c3_shift_ VARCHAR, percent_defective VARCHAR)",
        "question": "What is the sigma (with 1.5\u03c3 shift) when there are 69% defective?"
    },
    {
        "answer": "SELECT high_assists FROM table_27721131_2 WHERE score = \"W 97\u201394 (OT)\"",
        "context": "CREATE TABLE table_27721131_2 (high_assists VARCHAR, score VARCHAR)",
        "question": "Who's in the high assists with a w 97\u201394 (ot) score?"
    },
    {
        "answer": "SELECT original_air_date FROM table_22265225_1 WHERE production_code = \"218\"",
        "context": "CREATE TABLE table_22265225_1 (original_air_date VARCHAR, production_code VARCHAR)",
        "question": "What day did the episode with a production code of 218 originally air?"
    },
    {
        "answer": "SELECT COUNT(team) FROM table_27721131_2 WHERE high_assists = \"John Wall (9)\" AND score = \"W 97\u201383 (OT)\"",
        "context": "CREATE TABLE table_27721131_2 (team VARCHAR, high_assists VARCHAR, score VARCHAR)",
        "question": "What's the team number with John Wall (9) in high assists and a w 97\u201383 (ot) score?"
    },
    {
        "answer": "SELECT COUNT(age) FROM table_22265261_1 WHERE sp = \"200/1\"",
        "context": "CREATE TABLE table_22265261_1 (age VARCHAR, sp VARCHAR)",
        "question": "How old was the horse when the SP was 200/1?"
    },
    {
        "answer": "SELECT distance FROM table_22265261_1 WHERE position = \"11th\"",
        "context": "CREATE TABLE table_22265261_1 (distance VARCHAR, position VARCHAR)",
        "question": "What was the distance for the 11th position?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_70 WHERE b_score = 9.15 AND gymnast = \"cheng fei ( chn )\"",
        "context": "CREATE TABLE table_name_70 (total INTEGER, b_score VARCHAR, gymnast VARCHAR)",
        "question": "What is the total when the B Score was 9.15 for Cheng Fei ( chn )?"
    },
    {
        "answer": "SELECT report FROM table_22298383_1 WHERE day = \"Sunday\" AND average_speed__mph_ = \"128.27\"",
        "context": "CREATE TABLE table_22298383_1 (report VARCHAR, day VARCHAR, average_speed__mph_ VARCHAR)",
        "question": "What was the report for the Sunday race where the winner had an average speed of 128.27 mph?"
    },
    {
        "answer": "SELECT market_rank_ & _city_of_license__market FROM table_22329326_1 WHERE station = \"KABC-TV\"",
        "context": "CREATE TABLE table_22329326_1 (market_rank_ VARCHAR, _city_of_license__market VARCHAR, station VARCHAR)",
        "question": "What market rank and city had the station KABC-TV?"
    },
    {
        "answer": "SELECT cardinalatial_order_and_title FROM table_name_84 WHERE elector = \"pedro mart\u00ednez de luna y gotor\"",
        "context": "CREATE TABLE table_name_84 (cardinalatial_order_and_title VARCHAR, elector VARCHAR)",
        "question": "What is the Cardinalatial order and title that Pedro Mart\u00ednez de Luna y Gotor elevated?"
    },
    {
        "answer": "SELECT nationality FROM table_name_49 WHERE cardinalatial_order_and_title = \"cardinal-priest of ss. xii apostoli\"",
        "context": "CREATE TABLE table_name_49 (nationality VARCHAR, cardinalatial_order_and_title VARCHAR)",
        "question": "What is the nationality of the elector withe the Cardinalatial order and title of Cardinal-Priest of Ss. XII Apostoli?"
    },
    {
        "answer": "SELECT record FROM table_27723228_8 WHERE score = \"L 84\u201396 (OT)\"",
        "context": "CREATE TABLE table_27723228_8 (record VARCHAR, score VARCHAR)",
        "question": "What is the record when the score was l 84\u201396 (ot)?"
    },
    {
        "answer": "SELECT malaysian_team_classification FROM table_22464308_2 WHERE points_classification = \"Mohd Nur Rizuan Zainal\"",
        "context": "CREATE TABLE table_22464308_2 (malaysian_team_classification VARCHAR, points_classification VARCHAR)",
        "question": "Which malaysian team classification had mohd nur rizuan zainal as points classification?"
    },
    {
        "answer": "SELECT COUNT(high_assists) FROM table_27723526_9 WHERE date = \"December 21\"",
        "context": "CREATE TABLE table_27723526_9 (high_assists VARCHAR, date VARCHAR)",
        "question": "Who had highest assists at game on December 21?"
    },
    {
        "answer": "SELECT location FROM table_name_99 WHERE ihsaa_football_class = \"aa\" AND school = \"winchester community\"",
        "context": "CREATE TABLE table_name_99 (location VARCHAR, ihsaa_football_class VARCHAR, school VARCHAR)",
        "question": "Winchester Community school, which plays IHSAA class AA football, is located where?"
    },
    {
        "answer": "SELECT county FROM table_name_81 WHERE ihsaa_football_class = \"a\" AND size < 301",
        "context": "CREATE TABLE table_name_81 (county VARCHAR, ihsaa_football_class VARCHAR, size VARCHAR)",
        "question": "What county has a school with less than 301 students and plays IHSAA class A football?"
    },
    {
        "answer": "SELECT term_began FROM table_224672_2 WHERE term_ended = \"January 3, 1995\"",
        "context": "CREATE TABLE table_224672_2 (term_began VARCHAR, term_ended VARCHAR)",
        "question": "When did the term begin that ended January 3, 1995?"
    },
    {
        "answer": "SELECT high_points FROM table_27733258_6 WHERE score = \"L 110\u2013112 (OT)\"",
        "context": "CREATE TABLE table_27733258_6 (high_points VARCHAR, score VARCHAR)",
        "question": "Name the high points for l 110\u2013112 (ot)"
    },
    {
        "answer": "SELECT years FROM table_name_33 WHERE duration = \"15 years\" AND character = \"giulia poggi\"",
        "context": "CREATE TABLE table_name_33 (years VARCHAR, duration VARCHAR, character VARCHAR)",
        "question": "What are the years that have a duration of 15 years and giulia poggi as the character?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_76 WHERE date = \"december 14, 1958\" AND week > 12",
        "context": "CREATE TABLE table_name_76 (attendance INTEGER, date VARCHAR, week VARCHAR)",
        "question": "What is the lowest attendance for December 14, 1958 after week 12?"
    },
    {
        "answer": "SELECT COUNT(date_successor_seated) FROM table_225205_4 WHERE district = \"New Jersey 2nd\"",
        "context": "CREATE TABLE table_225205_4 (date_successor_seated VARCHAR, district VARCHAR)",
        "question": "How many date of successor seated is new jersey 2nd in the district?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_name_43 WHERE language = \"spanish\" AND original_title = \"traffic\"",
        "context": "CREATE TABLE table_name_43 (film_title_used_in_nomination VARCHAR, language VARCHAR, original_title VARCHAR)",
        "question": "What title was used in the nomination of the Spanish language film Traffic?"
    },
    {
        "answer": "SELECT position FROM table_name_92 WHERE year < 1907 AND cross_code_debut = \"inaugural rl test v new zealand\" AND test_debut = \"inaugural ru test v new zealand\"",
        "context": "CREATE TABLE table_name_92 (position VARCHAR, test_debut VARCHAR, year VARCHAR, cross_code_debut VARCHAR)",
        "question": "What is the position earlier than 1907, with a cross-code debut of inaugural rl test v new zealand, and a test debut of inaugural ru test v new zealand?"
    },
    {
        "answer": "SELECT outcome FROM table_2259502_2 WHERE score = \"7-5, 2-6, [6-10]\"",
        "context": "CREATE TABLE table_2259502_2 (outcome VARCHAR, score VARCHAR)",
        "question": "What was the outcome in games where the score was 7-5, 2-6, [6-10]?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_22597626_2 WHERE outcome = \"Runner-up\" AND championship = \"US Open\"",
        "context": "CREATE TABLE table_22597626_2 (year INTEGER, outcome VARCHAR, championship VARCHAR)",
        "question": "In the US Open championship and the outcome is runner-up, what is the minimum year?"
    },
    {
        "answer": "SELECT attendance FROM table_name_78 WHERE date = \"december 26, 1982\"",
        "context": "CREATE TABLE table_name_78 (attendance VARCHAR, date VARCHAR)",
        "question": "How many people attended on december 26, 1982?"
    },
    {
        "answer": "SELECT lmp2_winning_driver FROM table_27743641_2 WHERE lmp1_winning_team = \"No. 20 Oryx Dyson Racing\"",
        "context": "CREATE TABLE table_27743641_2 (lmp2_winning_driver VARCHAR, lmp1_winning_team VARCHAR)",
        "question": "Who was the LMP2 winner when the LMP1 winning team was No. 20 Oryx Dyson Racing?"
    },
    {
        "answer": "SELECT comptroller FROM table_22607062_1 WHERE ticket___office = \"Prohibition\"",
        "context": "CREATE TABLE table_22607062_1 (comptroller VARCHAR, ticket___office VARCHAR)",
        "question": "Name the comptroller for office of prohibition"
    },
    {
        "answer": "SELECT date FROM table_27734769_8 WHERE high_points = \"LaMarcus Aldridge (36)\"",
        "context": "CREATE TABLE table_27734769_8 (date VARCHAR, high_points VARCHAR)",
        "question": "What is the date the high points was lamarcus aldridge (36)?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_22640051_3 WHERE outgoing_manager = \"Manuel Pellegrini\"",
        "context": "CREATE TABLE table_22640051_3 (date_of_vacancy VARCHAR, outgoing_manager VARCHAR)",
        "question": "Name the date of vacancy for manuel pellegrini"
    },
    {
        "answer": "SELECT COUNT(date) FROM table_27734769_8 WHERE high_assists = \"Andre Miller (7)\"",
        "context": "CREATE TABLE table_27734769_8 (date VARCHAR, high_assists VARCHAR)",
        "question": "How many times was the high assists andre miller (7)?"
    },
    {
        "answer": "SELECT date FROM table_27734769_8 WHERE high_rebounds = \"LaMarcus Aldridge (6)\"",
        "context": "CREATE TABLE table_27734769_8 (date VARCHAR, high_rebounds VARCHAR)",
        "question": "What is the date the high rebounds were by lamarcus aldridge (6)?"
    },
    {
        "answer": "SELECT date FROM table_name_10 WHERE circuit = \"snetterton\" AND fastest_lap = \"riki christodoulou\"",
        "context": "CREATE TABLE table_name_10 (date VARCHAR, circuit VARCHAR, fastest_lap VARCHAR)",
        "question": "What date was the circuit, snetterton, when riki christodoulou had the fastest lap?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_22654139_3 WHERE reporters = \"Lesley Visser and Robin Roberts\"",
        "context": "CREATE TABLE table_22654139_3 (year INTEGER, reporters VARCHAR)",
        "question": "What is the latest year with reporters Lesley Visser and Robin Roberts?"
    },
    {
        "answer": "SELECT pole_position FROM table_name_10 WHERE fastest_lap = \"adam christodoulou\" AND circuit = \"rockingham\"",
        "context": "CREATE TABLE table_name_10 (pole_position VARCHAR, fastest_lap VARCHAR, circuit VARCHAR)",
        "question": "who had the pole position at rockingham circuit with adam christodoulou having the fastest lap?"
    },
    {
        "answer": "SELECT high_points FROM table_27744844_5 WHERE date = \"November 6\"",
        "context": "CREATE TABLE table_27744844_5 (high_points VARCHAR, date VARCHAR)",
        "question": "Which player scored the most points and how many were scored on November 6?"
    },
    {
        "answer": "SELECT drawn FROM table_name_49 WHERE points_for = \"416\" AND points_against = \"533\"",
        "context": "CREATE TABLE table_name_49 (drawn VARCHAR, points_for VARCHAR, points_against VARCHAR)",
        "question": "What drawn has 416 as the points for and 533 as the points against?"
    },
    {
        "answer": "SELECT COUNT(record) FROM table_22669044_8 WHERE location_attendance = \"United Center 18,838\"",
        "context": "CREATE TABLE table_22669044_8 (record VARCHAR, location_attendance VARCHAR)",
        "question": "Name the number of record for united center 18,838"
    },
    {
        "answer": "SELECT location FROM table_22670216_1 WHERE winning_driver = \"Wally Dallenbach\" AND track = \"Wisconsin State Fair Park Speedway\"",
        "context": "CREATE TABLE table_22670216_1 (location VARCHAR, winning_driver VARCHAR, track VARCHAR)",
        "question": "If the track is the Wisconsin State Fair Park Speedway and the winning driver is Wally Dallenbach, what was the location?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_27755603_2 WHERE high_points = \"Rodney Stuckey (16)\"",
        "context": "CREATE TABLE table_27755603_2 (high_rebounds VARCHAR, high_points VARCHAR)",
        "question": "Who did the high rebounds in the game in which Rodney Stuckey (16) did the high points?"
    },
    {
        "answer": "SELECT COUNT(rnd) FROM table_22670216_1 WHERE track = \"Ontario Motor Speedway\" AND pole_position = \"Johnny Rutherford\"",
        "context": "CREATE TABLE table_22670216_1 (rnd VARCHAR, track VARCHAR, pole_position VARCHAR)",
        "question": "If the pole position is Johnny Rutherford and the track is the Ontario Motor Speedway, what is the RND total number?"
    },
    {
        "answer": "SELECT team FROM table_27755784_10 WHERE high_assists = \"Stephen Curry (7)\" AND high_points = \"Monta Ellis (27)\"",
        "context": "CREATE TABLE table_27755784_10 (team VARCHAR, high_assists VARCHAR, high_points VARCHAR)",
        "question": "What is the team when the high assists was stephen curry (7) and the high points was monta ellis (27)?"
    },
    {
        "answer": "SELECT winner FROM table_22756549_1 WHERE runner_up_a = \"V. A. Muthiah\"",
        "context": "CREATE TABLE table_22756549_1 (winner VARCHAR, runner_up_a VARCHAR)",
        "question": "Who won when V. A. Muthiah was the runner-up?"
    },
    {
        "answer": "SELECT previous_conference FROM table_name_88 WHERE conference_joined = \"indiana lake shore\" AND mascot = \"governors\"",
        "context": "CREATE TABLE table_name_88 (previous_conference VARCHAR, conference_joined VARCHAR, mascot VARCHAR)",
        "question": "What was the previous conference for the team with the Governors as their mascot that joined the Indiana Lake Shore conference?"
    },
    {
        "answer": "SELECT score FROM table_27756164_2 WHERE high_points = \"Danny Granger (30)\"",
        "context": "CREATE TABLE table_27756164_2 (score VARCHAR, high_points VARCHAR)",
        "question": "What was the score of the game in which Danny Granger (30) did the high points?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_22825058_23 WHERE against = \"The Netherlands\"",
        "context": "CREATE TABLE table_22825058_23 (round VARCHAR, against VARCHAR)",
        "question": "Name the total number of round for against the netherlands"
    },
    {
        "answer": "SELECT SUM(gain) FROM table_name_27 WHERE long > 8 AND avg_g = 124.9",
        "context": "CREATE TABLE table_name_27 (gain INTEGER, long VARCHAR, avg_g VARCHAR)",
        "question": "How many gains have a long greater than 8, with avg/g of 124.9?"
    },
    {
        "answer": "SELECT driver FROM table_name_72 WHERE grid < 17 AND points > 0 AND laps = 87 AND time_retired = \"1:48:11.023\"",
        "context": "CREATE TABLE table_name_72 (driver VARCHAR, time_retired VARCHAR, laps VARCHAR, grid VARCHAR, points VARCHAR)",
        "question": "Which Driver has a Grid smaller than 17, and Points larger than 0, and a Lapse of 87, and a Time/Retired of 1:48:11.023?"
    },
    {
        "answer": "SELECT tournament_venue__city_ FROM table_22849575_6 WHERE conference = \"Big Sky conference\"",
        "context": "CREATE TABLE table_22849575_6 (tournament_venue__city_ VARCHAR, conference VARCHAR)",
        "question": "Name the tournament venue for big sky conference"
    },
    {
        "answer": "SELECT COUNT(conference) AS Tournament FROM table_22849575_6 WHERE tournament_winner = \"James Madison\"",
        "context": "CREATE TABLE table_22849575_6 (conference VARCHAR, tournament_winner VARCHAR)",
        "question": "Name the number of conference tournament for james madison"
    },
    {
        "answer": "SELECT location FROM table_name_31 WHERE record = \"5\u20132\u20131\"",
        "context": "CREATE TABLE table_name_31 (location VARCHAR, record VARCHAR)",
        "question": "Which Location has a Record of 5\u20132\u20131?"
    },
    {
        "answer": "SELECT COUNT(game_site) FROM table_27764201_2 WHERE opponent = \"Rhein Fire\"",
        "context": "CREATE TABLE table_27764201_2 (game_site VARCHAR, opponent VARCHAR)",
        "question": "How many times did the Centurions play the Rhein Fire?"
    },
    {
        "answer": "SELECT record FROM table_name_62 WHERE round > 2 AND event = \"bellator 38\"",
        "context": "CREATE TABLE table_name_62 (record VARCHAR, round VARCHAR, event VARCHAR)",
        "question": "Which Record has a Round larger than 2, and an Event of bellator 38?"
    },
    {
        "answer": "SELECT AVG(pick) FROM table_name_62 WHERE hometown_school = \"atlanta, ga\"",
        "context": "CREATE TABLE table_name_62 (pick INTEGER, hometown_school VARCHAR)",
        "question": "What was the pick # of the player who has a hometown/school of Atlanta, GA?"
    },
    {
        "answer": "SELECT monday_to_friday FROM table_name_34 WHERE ma\u00f1ana_es_para_siempre = \"impreuna pentru totdeauna\"",
        "context": "CREATE TABLE table_name_34 (monday_to_friday VARCHAR, ma\u00f1ana_es_para_siempre VARCHAR)",
        "question": "What is Ma\u00f1ana es para siempre of impreuna pentru totdeauna from Monday to Friday?"
    },
    {
        "answer": "SELECT region FROM table_22901612_2 WHERE chief_judge = \"Glen E. Conrad\"",
        "context": "CREATE TABLE table_22901612_2 (region VARCHAR, chief_judge VARCHAR)",
        "question": "If the chief judge is Glen E. Conrad, what is the region?"
    },
    {
        "answer": "SELECT 2008 AS _club FROM table_name_71 WHERE name = \"francesca piccinini category:articles with hcards\"",
        "context": "CREATE TABLE table_name_71 (name VARCHAR)",
        "question": "Which 2008 club has the name Francesca Piccinini Category:Articles with hCards?"
    },
    {
        "answer": "SELECT MIN(catches) FROM table_27771406_1 WHERE player = \"Clifford McWatt\"",
        "context": "CREATE TABLE table_27771406_1 (catches INTEGER, player VARCHAR)",
        "question": "How many catches did Clifford McWatt have? "
    },
    {
        "answer": "SELECT SUM(against) FROM table_name_29 WHERE wins = 8 AND club = \"south warrnambool\" AND draws < 0",
        "context": "CREATE TABLE table_name_29 (against INTEGER, draws VARCHAR, wins VARCHAR, club VARCHAR)",
        "question": "What is the number of against when the wins were 8, and a Club of South Warrnambool, with less than 0 draws?"
    },
    {
        "answer": "SELECT points__margin_ FROM table_27786562_1 WHERE top_tens = 24 AND owner = \"David Pearson\"",
        "context": "CREATE TABLE table_27786562_1 (points__margin_ VARCHAR, top_tens VARCHAR, owner VARCHAR)",
        "question": "Name the points for top tens being 24 and ownder david pearson"
    },
    {
        "answer": "SELECT COUNT(lap_two) FROM table_23018775_3 WHERE name = \"Marco Andretti\"",
        "context": "CREATE TABLE table_23018775_3 (lap_two VARCHAR, name VARCHAR)",
        "question": "How many lap two's did marco andretti do?"
    },
    {
        "answer": "SELECT COUNT(college_junior_club_team) FROM table_2781227_2 WHERE player = \"Lee Sorochan\"",
        "context": "CREATE TABLE table_2781227_2 (college_junior_club_team VARCHAR, player VARCHAR)",
        "question": "How many teams does Lee Sorochan play for?"
    },
    {
        "answer": "SELECT original_air_date FROM table_23114705_3 WHERE written_by = \"Tim Balme\"",
        "context": "CREATE TABLE table_23114705_3 (original_air_date VARCHAR, written_by VARCHAR)",
        "question": "If the episode was written by Tim Balme, what was the original air date?"
    },
    {
        "answer": "SELECT characters FROM table_name_80 WHERE title = \"suppressed duck\"",
        "context": "CREATE TABLE table_name_80 (characters VARCHAR, title VARCHAR)",
        "question": "What are the characters from the movie Suppressed Duck?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_13 WHERE pick > 148 AND player = \"pierre bland\"",
        "context": "CREATE TABLE table_name_13 (round VARCHAR, pick VARCHAR, player VARCHAR)",
        "question": "How many rounds did Pierre Bland have a pick larger than 148?"
    },
    {
        "answer": "SELECT COUNT(director) FROM table_23141790_1 WHERE original_title = \"Vesni\u010dko m\u00e1 st\u0159ediskov\u00e1\"",
        "context": "CREATE TABLE table_23141790_1 (director VARCHAR, original_title VARCHAR)",
        "question": "Name the total number of director for vesni\u010dko m\u00e1 st\u0159ediskov\u00e1"
    },
    {
        "answer": "SELECT MAX(sex_ratio) FROM table_231623_3 WHERE population = 4773138",
        "context": "CREATE TABLE table_231623_3 (sex_ratio INTEGER, population VARCHAR)",
        "question": "Name the sex ratio lowest for population 4773138"
    },
    {
        "answer": "SELECT COUNT(pac_12_sports) FROM table_27816698_2 WHERE institution = \"California Polytechnic State University\"",
        "context": "CREATE TABLE table_27816698_2 (pac_12_sports VARCHAR, institution VARCHAR)",
        "question": "How many pac-12 sports are shown for california polytechnic state university?"
    },
    {
        "answer": "SELECT rank__week_ FROM table_23177573_1 WHERE written_by = \"Thomas L. Moran\" AND directed_by = \"Andrew Bernstein\"",
        "context": "CREATE TABLE table_23177573_1 (rank__week_ VARCHAR, written_by VARCHAR, directed_by VARCHAR)",
        "question": "What was the week ranking of the episode written by Thomas L. Moran and directed by Andrew Bernstein?"
    },
    {
        "answer": "SELECT institution FROM table_27816698_2 WHERE location = \"Bakersfield, California\"",
        "context": "CREATE TABLE table_27816698_2 (institution VARCHAR, location VARCHAR)",
        "question": "Which  institution was located in bakersfield, california?"
    },
    {
        "answer": "SELECT commandery AS capital FROM table_278229_1 WHERE commandery = \"Gaoliang \u9ad8\u6dbc\"",
        "context": "CREATE TABLE table_278229_1 (commandery VARCHAR)",
        "question": "When gaoliang \u9ad8\u6dbc is the commandery what is the commandery capital?"
    },
    {
        "answer": "SELECT notes FROM table_name_82 WHERE call_sign = \"cbue-fm\"",
        "context": "CREATE TABLE table_name_82 (notes VARCHAR, call_sign VARCHAR)",
        "question": "What is the Notes of the Frequency with a call sign of CBUE-FM?"
    },
    {
        "answer": "SELECT AVG(dynamo) FROM table_name_25 WHERE draw > 0 AND played < 15 AND spartak > 1",
        "context": "CREATE TABLE table_name_25 (dynamo INTEGER, spartak VARCHAR, draw VARCHAR, played VARCHAR)",
        "question": "what is the average dynamo when draw is more than 0, played is less than 15 and spartak is more than 1?"
    },
    {
        "answer": "SELECT rider_names FROM table_27833186_1 WHERE location = \"Euer Valley, CA\" AND horse_name = \"Magic Sirocco\"",
        "context": "CREATE TABLE table_27833186_1 (rider_names VARCHAR, location VARCHAR, horse_name VARCHAR)",
        "question": "Who were the winning riders of the championship in Euer Valley, CA and whose horse was Magic Sirocco?"
    },
    {
        "answer": "SELECT capacity FROM table_23214833_1 WHERE team_captain = \"Vasil Vasilev\"",
        "context": "CREATE TABLE table_23214833_1 (capacity VARCHAR, team_captain VARCHAR)",
        "question": "How many people can attend games in the stadium of the team whose captain is Vasil Vasilev?"
    },
    {
        "answer": "SELECT approximate_translation FROM table_2784232_1 WHERE morphological_category = \"1st. plur. perfect\"",
        "context": "CREATE TABLE table_2784232_1 (approximate_translation VARCHAR, morphological_category VARCHAR)",
        "question": "What are the the approximate translations when the Morphological Category is 1st. plur. perfect?"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_62 WHERE day_1 < 71 AND country = \"romania\"",
        "context": "CREATE TABLE table_name_62 (rank INTEGER, day_1 VARCHAR, country VARCHAR)",
        "question": "what is the average rank when the day 1 is less than 71 and the country is romania?"
    },
    {
        "answer": "SELECT venue FROM table_name_20 WHERE year = 2006 AND competition = \"asian games\" AND event = \"400 m\"",
        "context": "CREATE TABLE table_name_20 (venue VARCHAR, event VARCHAR, year VARCHAR, competition VARCHAR)",
        "question": "what is the venue when the year is 2006, the competition is asian games and the event is 400 m?"
    },
    {
        "answer": "SELECT score FROM table_23248967_5 WHERE team = \"New Orleans\"",
        "context": "CREATE TABLE table_23248967_5 (score VARCHAR, team VARCHAR)",
        "question": "What was the score against New Orleans?"
    },
    {
        "answer": "SELECT venue FROM table_name_93 WHERE competition = \"asian games\" AND event = \"4x400 m relay\" AND year = 2002",
        "context": "CREATE TABLE table_name_93 (venue VARCHAR, year VARCHAR, competition VARCHAR, event VARCHAR)",
        "question": "what is the venue when the competition is asian games, the event is 4x400 m relay and the year is 2002?"
    },
    {
        "answer": "SELECT spokespersons FROM table_name_7 WHERE commentator = \"pierre tchernia\" AND voting_order = 11",
        "context": "CREATE TABLE table_name_7 (spokespersons VARCHAR, commentator VARCHAR, voting_order VARCHAR)",
        "question": "During the voting order 11, when the commentator was pierre tchernia, who was the spokesperson?"
    },
    {
        "answer": "SELECT SUM(voting_order) FROM table_name_50 WHERE commentator = \"bunny carr\"",
        "context": "CREATE TABLE table_name_50 (voting_order INTEGER, commentator VARCHAR)",
        "question": "What was the voting order when bunny carr was the commentator?"
    },
    {
        "answer": "SELECT location_attendance FROM table_27882867_4 WHERE score = \"L 93-105\"",
        "context": "CREATE TABLE table_27882867_4 (location_attendance VARCHAR, score VARCHAR)",
        "question": "Name the location attendance for l 93-105"
    },
    {
        "answer": "SELECT surface FROM table_27877656_7 WHERE score = \"6\u20134, 6\u20131\" AND edition = \"2011 Europe/Africa Group IIIB\"",
        "context": "CREATE TABLE table_27877656_7 (surface VARCHAR, score VARCHAR, edition VARCHAR)",
        "question": "For edition is 2011 europe/africa group iiib and surface where score is 6\u20134, 6\u20131 please specify all the surface"
    },
    {
        "answer": "SELECT opponent_team FROM table_27877656_7 WHERE edition = \"2009 Europe/Africa Group IIIB\" AND outcome = \"Winner\" AND opponent = \"Sandra Kristj\u00e1nsd\u00f3ttir\"",
        "context": "CREATE TABLE table_27877656_7 (opponent_team VARCHAR, opponent VARCHAR, edition VARCHAR, outcome VARCHAR)",
        "question": "For opponent is sandra kristj\u00e1nsd\u00f3ttir, outcome is winner and edition is 2009 europe/africa group iiib mention all the opponent team."
    },
    {
        "answer": "SELECT high_rebounds FROM table_23274514_5 WHERE record = \"10-19\"",
        "context": "CREATE TABLE table_23274514_5 (high_rebounds VARCHAR, record VARCHAR)",
        "question": "Name the high rebounds for record 10-19"
    },
    {
        "answer": "SELECT opponent FROM table_27877656_7 WHERE edition = \"2009 Europe/Africa Group IIIB\" AND opponent_team = \"Armenia\"",
        "context": "CREATE TABLE table_27877656_7 (opponent VARCHAR, edition VARCHAR, opponent_team VARCHAR)",
        "question": "For armenia as opponent team and edition is 2009 europe/africa group iiib mention all the opponent"
    },
    {
        "answer": "SELECT COUNT(location_attendance) FROM table_27902171_8 WHERE record = \"36-29\"",
        "context": "CREATE TABLE table_27902171_8 (location_attendance VARCHAR, record VARCHAR)",
        "question": "Name the number of location attendance for 36-29 record"
    },
    {
        "answer": "SELECT airing_date FROM table_name_50 WHERE official_website = \"official website\" AND number_of_episodes = 20 AND genre = \"modern action\" AND english_title__chinese_title_ = \"armed reaction \u9640\u69cd\u5e2b\u59d0\"",
        "context": "CREATE TABLE table_name_50 (airing_date VARCHAR, english_title__chinese_title_ VARCHAR, genre VARCHAR, official_website VARCHAR, number_of_episodes VARCHAR)",
        "question": "What's the airing date of Armed Reaction \u9640\u69cd\u5e2b\u59d0 with 20 episodes in the Modern Action genre having an official website?"
    },
    {
        "answer": "SELECT team FROM table_23286158_8 WHERE location_attendance = \"Rose Garden 20,565\"",
        "context": "CREATE TABLE table_23286158_8 (team VARCHAR, location_attendance VARCHAR)",
        "question": "Name the team at the rose garden 20,565"
    },
    {
        "answer": "SELECT official_website FROM table_name_33 WHERE number_of_episodes > 22 AND english_title__chinese_title_ = \"burning flame \u70c8\u706b\u96c4\u5fc3\"",
        "context": "CREATE TABLE table_name_33 (official_website VARCHAR, number_of_episodes VARCHAR, english_title__chinese_title_ VARCHAR)",
        "question": "What's the official website of Burning Flame \u70c8\u706b\u96c4\u5fc3 with 22 episodes?"
    },
    {
        "answer": "SELECT callsign FROM table_27914076_1 WHERE coverage = \"Davao Mindanao Region\"",
        "context": "CREATE TABLE table_27914076_1 (callsign VARCHAR, coverage VARCHAR)",
        "question": "Name the callsign for davao mindanao region"
    },
    {
        "answer": "SELECT MIN(no_in_series) FROM table_23289934_1 WHERE production_code = \"3ABC21\"",
        "context": "CREATE TABLE table_23289934_1 (no_in_series INTEGER, production_code VARCHAR)",
        "question": "Name the least number for production code for 3abc21"
    },
    {
        "answer": "SELECT AVG(body_length_mm) FROM table_name_9 WHERE lead_pitch_mm < 0.5",
        "context": "CREATE TABLE table_name_9 (body_length_mm INTEGER, lead_pitch_mm INTEGER)",
        "question": "Which Body Length/mm has a Lead Pitch/mm smaller than 0.5?"
    },
    {
        "answer": "SELECT COUNT(coverage) FROM table_27914076_1 WHERE branding = \"106.7 Energy FM\"",
        "context": "CREATE TABLE table_27914076_1 (coverage VARCHAR, branding VARCHAR)",
        "question": "Name the number of coverage for  106.7 energy fm"
    },
    {
        "answer": "SELECT COUNT(game) FROM table_23308178_8 WHERE record = \"39-12-6\"",
        "context": "CREATE TABLE table_23308178_8 (game VARCHAR, record VARCHAR)",
        "question": "How many games did they have a record of 39-12-6?"
    },
    {
        "answer": "SELECT firefox_, _other_mozilla FROM table_name_12 WHERE chrome = \"1.93%\"",
        "context": "CREATE TABLE table_name_12 (firefox_ VARCHAR, _other_mozilla VARCHAR, chrome VARCHAR)",
        "question": "What percentage of browsers were using Firefox or other Mozilla browsers during the period in which 1.93% were using Chrome?"
    },
    {
        "answer": "SELECT country FROM table_name_27 WHERE series_premiere = \"unknown\" AND tv_network_s_ = \"mbc action\"",
        "context": "CREATE TABLE table_name_27 (country VARCHAR, series_premiere VARCHAR, tv_network_s_ VARCHAR)",
        "question": "What country has a series premier of unknown and mbc action as their TV network?"
    },
    {
        "answer": "SELECT title FROM table_2343740_1 WHERE original_air_date = \"February 9, 1979\"",
        "context": "CREATE TABLE table_2343740_1 (title VARCHAR, original_air_date VARCHAR)",
        "question": "What was the title of the episode that aired February 9, 1979?"
    },
    {
        "answer": "SELECT director FROM table_2345558_1 WHERE writer_s_ = \"Jason Yoshimura\"",
        "context": "CREATE TABLE table_2345558_1 (director VARCHAR, writer_s_ VARCHAR)",
        "question": "Who directed the episode written by Jason Yoshimura?"
    },
    {
        "answer": "SELECT sat_29_aug FROM table_23465864_3 WHERE rider = \"Roy Richardson 476cc Aermacchi\"",
        "context": "CREATE TABLE table_23465864_3 (sat_29_aug VARCHAR, rider VARCHAR)",
        "question": "When  roy richardson 476cc aermacchi is the rider what is the time for saturday august 9th?"
    },
    {
        "answer": "SELECT league_cup_apps FROM table_name_83 WHERE fa_cup_apps = \"5\"",
        "context": "CREATE TABLE table_name_83 (league_cup_apps VARCHAR, fa_cup_apps VARCHAR)",
        "question": "Which league cup apps has FA as the cup apps of 5?"
    },
    {
        "answer": "SELECT social_democratic FROM table_name_33 WHERE democratic_and_social_centre = \"10.0% 22 seats\"",
        "context": "CREATE TABLE table_name_33 (social_democratic VARCHAR, democratic_and_social_centre VARCHAR)",
        "question": "What Social Democratic has a Democratic and Social Centre of 10.0% 22 seats?"
    },
    {
        "answer": "SELECT social_democratic FROM table_name_86 WHERE democratic_and_social_centre = \"4.4% 4 seats\"",
        "context": "CREATE TABLE table_name_86 (social_democratic VARCHAR, democratic_and_social_centre VARCHAR)",
        "question": "What Social Democratic has the Democratic and Social Centre of 4.4% 4 seats?"
    },
    {
        "answer": "SELECT number_of_teams FROM table_name_66 WHERE top_goalscorer_s_ = \"not awarded\" AND year = \"2007 details\"",
        "context": "CREATE TABLE table_name_66 (number_of_teams VARCHAR, top_goalscorer_s_ VARCHAR, year VARCHAR)",
        "question": "How many teams were at the 2007 details tournament where there a top goalscorer was not awarded?"
    },
    {
        "answer": "SELECT section FROM table_name_30 WHERE level = \"tier 2\" AND season = 1996",
        "context": "CREATE TABLE table_name_30 (section VARCHAR, level VARCHAR, season VARCHAR)",
        "question": "What section were they in when there were tier 2 in 1996?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_name_81 WHERE actor_actress = \"emma thompson\" AND category = \"best supporting actress\"",
        "context": "CREATE TABLE table_name_81 (film_title_used_in_nomination VARCHAR, actor_actress VARCHAR, category VARCHAR)",
        "question": "What was the film title that emma thompson was the actress nominated for best supporting actress?"
    },
    {
        "answer": "SELECT b_winning_car FROM table_27965906_2 WHERE a_winning_car = \"#88 Team Mitsubishi 88 Mitsubishi Starion\"",
        "context": "CREATE TABLE table_27965906_2 (b_winning_car VARCHAR, a_winning_car VARCHAR)",
        "question": "Name the b winning car for  #88 team mitsubishi 88 mitsubishi starion"
    },
    {
        "answer": "SELECT category FROM table_name_51 WHERE actor_actress = \"al pacino\" AND film_title_used_in_nomination = \"glengarry glen ross\"",
        "context": "CREATE TABLE table_name_51 (category VARCHAR, actor_actress VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What category was al pacino nominated for in the film, glengarry glen ross?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_21 WHERE result = \"won\" AND role_episode = \"fox mulder\"",
        "context": "CREATE TABLE table_name_21 (year INTEGER, result VARCHAR, role_episode VARCHAR)",
        "question": "what is the earliest year when the result is won and the role/episode is fox mulder?"
    },
    {
        "answer": "SELECT executive_director FROM table_name_84 WHERE type = \"extension\" AND location = \"lemery, batangas\"",
        "context": "CREATE TABLE table_name_84 (executive_director VARCHAR, type VARCHAR, location VARCHAR)",
        "question": "Who is the executive director of the Lemery, Batangas extension?"
    },
    {
        "answer": "SELECT SUM(gold) FROM table_name_19 WHERE rank = \"19\"",
        "context": "CREATE TABLE table_name_19 (gold INTEGER, rank VARCHAR)",
        "question": "What is the number of gold for the country ranked 19?"
    },
    {
        "answer": "SELECT SUM(number_of_electorates__2009_) FROM table_name_21 WHERE district = \"indore\" AND reserved_for___sc___st__none_ = \"none\" AND constituency_number = \"208\"",
        "context": "CREATE TABLE table_name_21 (number_of_electorates__2009_ INTEGER, constituency_number VARCHAR, district VARCHAR, reserved_for___sc___st__none_ VARCHAR)",
        "question": "What is the number of electorates (2009) for the Indore district, when reserved for (SC / ST /None) is none, and constituency number is 208?"
    },
    {
        "answer": "SELECT match_points FROM table_27987767_2 WHERE losers = \"Gran Parma\"",
        "context": "CREATE TABLE table_27987767_2 (match_points VARCHAR, losers VARCHAR)",
        "question": "how many match points did gran parma lost"
    },
    {
        "answer": "SELECT COUNT(eliminated_from_competition) FROM table_27987767_3 WHERE proceed_to_quarter_final = \"Brive\"",
        "context": "CREATE TABLE table_27987767_3 (eliminated_from_competition VARCHAR, proceed_to_quarter_final VARCHAR)",
        "question": "When brive is the proceed to quarter final how many were eliminated from competition? "
    },
    {
        "answer": "SELECT COUNT(floors) FROM table_23759976_1 WHERE building_[a_] = \"Chongqing Poly Tower\"",
        "context": "CREATE TABLE table_23759976_1 (floors VARCHAR, building_ VARCHAR, a_ VARCHAR)",
        "question": "How many different numbers of floors are there for the Chongqing Poly Tower?"
    },
    {
        "answer": "SELECT bleeding_time FROM table_238124_1 WHERE partial_thromboplastin_time = \"Prolonged\" AND prothrombin_time = \"Unaffected\"",
        "context": "CREATE TABLE table_238124_1 (bleeding_time VARCHAR, partial_thromboplastin_time VARCHAR, prothrombin_time VARCHAR)",
        "question": "What was the bleeding time during the prolonged partial thromboplastin time in which the prothrombin time is unaffected?"
    },
    {
        "answer": "SELECT country FROM table_28005160_2 WHERE city = \"New Orleans\"",
        "context": "CREATE TABLE table_28005160_2 (country VARCHAR, city VARCHAR)",
        "question": "What country is new orleans in?"
    },
    {
        "answer": "SELECT country FROM table_28005160_2 WHERE sponsored_name = \"New Orleans Shell Shockers\"",
        "context": "CREATE TABLE table_28005160_2 (country VARCHAR, sponsored_name VARCHAR)",
        "question": "What country are the new orleans shell shockers from?"
    },
    {
        "answer": "SELECT MAX(gold) FROM table_name_83 WHERE silver < 2 AND bronze < 4",
        "context": "CREATE TABLE table_name_83 (gold INTEGER, silver VARCHAR, bronze VARCHAR)",
        "question": "What is the highest number of gold medals won by a team that won fewer than 2 silver and fewer than 4 bronze medals?"
    },
    {
        "answer": "SELECT composer FROM table_28005100_1 WHERE title = \"Ain Shams\"",
        "context": "CREATE TABLE table_28005100_1 (composer VARCHAR, title VARCHAR)",
        "question": "Who was the composer of ain shams?"
    },
    {
        "answer": "SELECT epa_rated_combined_fuel_economy FROM table_23840623_4 WHERE vehicle = \"Nissan Leaf\"",
        "context": "CREATE TABLE table_23840623_4 (epa_rated_combined_fuel_economy VARCHAR, vehicle VARCHAR)",
        "question": "What is the epa rated combined fuel economy for the Nissan Leaf?"
    },
    {
        "answer": "SELECT COUNT(sound_engineer) FROM table_28005100_1 WHERE title = \"Law Hakon '3er Leek\"",
        "context": "CREATE TABLE table_28005100_1 (sound_engineer VARCHAR, title VARCHAR)",
        "question": "How many sound engineers were there for law hakon '3er leek?"
    },
    {
        "answer": "SELECT no FROM table_28005100_1 WHERE lyricist = \"Ahmed Metwally\"",
        "context": "CREATE TABLE table_28005100_1 (no VARCHAR, lyricist VARCHAR)",
        "question": "Which number was the lyricist  ahmed metwally?"
    },
    {
        "answer": "SELECT epa_rated_combined_fuel_economy FROM table_23840623_4 WHERE operating_mode = \"All-electric\" AND dirty_electric_grid_rocky_mountains__denver_ = \"330 g/mi (205 g/km)\"",
        "context": "CREATE TABLE table_23840623_4 (epa_rated_combined_fuel_economy VARCHAR, operating_mode VARCHAR, dirty_electric_grid_rocky_mountains__denver_ VARCHAR)",
        "question": "What is the epa rated combined fuel economy for the all-electric vehicle with dirty electric grid rocky mountains (denver) of 330 g/mi (205 g/km)?"
    },
    {
        "answer": "SELECT approx_duration FROM table_28003469_1 WHERE event_details = \"Women's Foil\"",
        "context": "CREATE TABLE table_28003469_1 (approx_duration VARCHAR, event_details VARCHAR)",
        "question": "What is every value for approximate duration when event details is women's foil?"
    },
    {
        "answer": "SELECT MAX(lane) FROM table_name_60 WHERE rank > 3 AND time > 45.63 AND react < 0.28800000000000003 AND athlete = \"geiner mosquera\"",
        "context": "CREATE TABLE table_name_60 (lane INTEGER, athlete VARCHAR, react VARCHAR, rank VARCHAR, time VARCHAR)",
        "question": "Which Lane has a Rank larger than 3, and a Time larger than 45.63, and a Reaction smaller than 0.28800000000000003, and an Athlete of geiner mosquera?"
    },
    {
        "answer": "SELECT MAX(viewers) FROM table_27994983_8 WHERE draw = 3",
        "context": "CREATE TABLE table_27994983_8 (viewers INTEGER, draw VARCHAR)",
        "question": "How many viewers are the when the draw is 3?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_95 WHERE competition = \"all-ireland hurling final\" AND waterford_score = \"6-08 (24)\"",
        "context": "CREATE TABLE table_name_95 (year INTEGER, competition VARCHAR, waterford_score VARCHAR)",
        "question": "What is the lowest year that has all-ireland hurling final as the competition, and 6-08 (24) as the waterford score?"
    },
    {
        "answer": "SELECT waterford_score FROM table_name_7 WHERE year < 1963 AND competition = \"all-ireland hurling final replay\"",
        "context": "CREATE TABLE table_name_7 (waterford_score VARCHAR, year VARCHAR, competition VARCHAR)",
        "question": "What is the waterford score that has a year prior to 1963, with all-ireland hurling final replay as the competition?"
    },
    {
        "answer": "SELECT us_viewers__millions_ FROM table_28027307_1 WHERE production_code = \"6AKY07\"",
        "context": "CREATE TABLE table_28027307_1 (us_viewers__millions_ VARCHAR, production_code VARCHAR)",
        "question": "How many millions of U.S. viewers watched the episode with the production code of 6AKY07?"
    },
    {
        "answer": "SELECT SUM(prominence__m_) FROM table_name_39 WHERE country = \"slovakia\"",
        "context": "CREATE TABLE table_name_39 (prominence__m_ INTEGER, country VARCHAR)",
        "question": "What is the sum of the prominence in m of slovakia?"
    },
    {
        "answer": "SELECT tonioli FROM table_2803106_1 WHERE week__number = 11 AND dixon = \"8\"",
        "context": "CREATE TABLE table_2803106_1 (tonioli VARCHAR, week__number VARCHAR, dixon VARCHAR)",
        "question": "On week 11 when Dixon scored an 8, what was tonioli's score?"
    },
    {
        "answer": "SELECT winners_from_previous_round FROM table_28039032_1 WHERE round = \"Semi finals\"",
        "context": "CREATE TABLE table_28039032_1 (winners_from_previous_round VARCHAR, round VARCHAR)",
        "question": "How many winners from previous round were there in the semi finals?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_10 WHERE time = \"7:52.53\"",
        "context": "CREATE TABLE table_name_10 (rank INTEGER, time VARCHAR)",
        "question": "What was the rank when then time was 7:52.53?"
    },
    {
        "answer": "SELECT MAX(water__sqmi_) FROM table_name_91 WHERE pop__2010_ = 359 AND longitude < -97.176811",
        "context": "CREATE TABLE table_name_91 (water__sqmi_ INTEGER, pop__2010_ VARCHAR, longitude VARCHAR)",
        "question": "Which Water (sqmi) has a Pop (2010) of 359, and a Longitude smaller than -97.176811?"
    },
    {
        "answer": "SELECT COUNT(production_code) FROM table_28037619_2 WHERE us_viewers__million_ = \"4.36\"",
        "context": "CREATE TABLE table_28037619_2 (production_code VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "How many production codes are there for the episode that had 4.36 million u.s. viewers?"
    },
    {
        "answer": "SELECT conference AS Tournament FROM table_24160890_3 WHERE tournament_venue__city_ = \"Madison Square Garden ( New York City, New York )\"",
        "context": "CREATE TABLE table_24160890_3 (conference VARCHAR, tournament_venue__city_ VARCHAR)",
        "question": "When madison square garden ( new york city, new york ) is the tournament venue (city) what is the conference tournament?"
    },
    {
        "answer": "SELECT MIN(ansi_code) FROM table_name_48 WHERE geo_id > 3809927140 AND water__sqmi_ < 0.492 AND pop__2010_ = 37 AND latitude > 48.245979",
        "context": "CREATE TABLE table_name_48 (ansi_code INTEGER, latitude VARCHAR, pop__2010_ VARCHAR, geo_id VARCHAR, water__sqmi_ VARCHAR)",
        "question": "Which ANSI code has a GEO ID larger than 3809927140, and a Water (sqmi) smaller than 0.492, and a Pop (2010) of 37, and a Latitude larger than 48.245979?"
    },
    {
        "answer": "SELECT COUNT(regular_season_winner) FROM table_24160890_3 WHERE tournament_winner = \"Cincinnati\"",
        "context": "CREATE TABLE table_24160890_3 (regular_season_winner VARCHAR, tournament_winner VARCHAR)",
        "question": "When Cincinnati is the tournament winner how many regular season winners are there?"
    },
    {
        "answer": "SELECT conference AS Tournament FROM table_24160890_3 WHERE regular_season_winner = \"Troy\"",
        "context": "CREATE TABLE table_24160890_3 (conference VARCHAR, regular_season_winner VARCHAR)",
        "question": "When troy is the regular season winner what is the conference tournament?"
    },
    {
        "answer": "SELECT date_successor_seated FROM table_2417345_4 WHERE district = \"Ohio 10th\"",
        "context": "CREATE TABLE table_2417345_4 (date_successor_seated VARCHAR, district VARCHAR)",
        "question": "When were the successor/s seated for Ohio 10th?"
    },
    {
        "answer": "SELECT AVG(year_joined) FROM table_name_88 WHERE size > 93 AND previous_conference = \"none (new school)\" AND mascot = \"rebels\"",
        "context": "CREATE TABLE table_name_88 (year_joined INTEGER, mascot VARCHAR, size VARCHAR, previous_conference VARCHAR)",
        "question": "Which Year Joined has a Size larger than 93, and a Previous Conference of none (new school), and a Mascot of rebels?"
    },
    {
        "answer": "SELECT COUNT(year_joined) FROM table_name_68 WHERE size < 417 AND ihsaa_class = \"a\" AND school = \"jac-cen-del\"",
        "context": "CREATE TABLE table_name_68 (year_joined VARCHAR, school VARCHAR, size VARCHAR, ihsaa_class VARCHAR)",
        "question": "How many years Joined have a Size smaller than 417, and an IHSAA Class of A, and a School of jac-cen-del?"
    },
    {
        "answer": "SELECT MAX(week) FROM table_name_97 WHERE result = \"bottom 3\" AND partner = \"endre jansen\"",
        "context": "CREATE TABLE table_name_97 (week INTEGER, result VARCHAR, partner VARCHAR)",
        "question": "In what Week resulting in the bottom 3 was Endre Jansen Partner?"
    },
    {
        "answer": "SELECT position FROM table_name_5 WHERE round = 7 AND pick__number < 214",
        "context": "CREATE TABLE table_name_5 (position VARCHAR, round VARCHAR, pick__number VARCHAR)",
        "question": "What position has 7 as the round, with a pick # less than 214?"
    },
    {
        "answer": "SELECT written_by FROM table_28081876_6 WHERE original_air_date = \"August 10, 2012\"",
        "context": "CREATE TABLE table_28081876_6 (written_by VARCHAR, original_air_date VARCHAR)",
        "question": "Who were the authors of the episode first broadcast on August 10, 2012?"
    },
    {
        "answer": "SELECT intermediate_sprints_classification_klasyfikacja_najaktywniejszych FROM table_28092844_16 WHERE winner = \"Daniel Martin\"",
        "context": "CREATE TABLE table_28092844_16 (intermediate_sprints_classification_klasyfikacja_najaktywniejszych VARCHAR, winner VARCHAR)",
        "question": "What was the intermediate sprint classification for the race whose winner was Daniel Martin?"
    },
    {
        "answer": "SELECT teams_classification FROM table_28092844_16 WHERE general_classification_\u017c\u00f3\u0142ta_koszulka = \"Allan Davis\"",
        "context": "CREATE TABLE table_28092844_16 (teams_classification VARCHAR, general_classification_\u017c\u00f3\u0142ta_koszulka VARCHAR)",
        "question": "Which teams classification winners had a general classification winner of Allan Davis?"
    },
    {
        "answer": "SELECT original_tokyo___seoul_tour_cast FROM table_24353141_1 WHERE original_1st_us_tour_cast = \"Nicci Claspell\"",
        "context": "CREATE TABLE table_24353141_1 (original_tokyo___seoul_tour_cast VARCHAR, original_1st_us_tour_cast VARCHAR)",
        "question": "While the original 1st us tour cast included nicci claspell, who was in the original tokyo/seoul tour cast?"
    },
    {
        "answer": "SELECT points_classification_klasyfikacja_punktowa FROM table_28092844_16 WHERE teams_classification = \"Lampre-Farnese\"",
        "context": "CREATE TABLE table_28092844_16 (points_classification_klasyfikacja_punktowa VARCHAR, teams_classification VARCHAR)",
        "question": "Who won the points classification when the teams classification winner was Lampre-Farnese?"
    },
    {
        "answer": "SELECT country FROM table_name_73 WHERE airport = \"nnamdi azikiwe international airport\"",
        "context": "CREATE TABLE table_name_73 (country VARCHAR, airport VARCHAR)",
        "question": "Which country is the nnamdi azikiwe international airport in?"
    },
    {
        "answer": "SELECT AVG(lane) FROM table_name_79 WHERE nationality = \"kenya\" AND react > 0.212",
        "context": "CREATE TABLE table_name_79 (lane INTEGER, nationality VARCHAR, react VARCHAR)",
        "question": "What is the average lane for Kenya with react larger than 0.212?"
    },
    {
        "answer": "SELECT writer_s_ FROM table_name_64 WHERE recorded_at = \"funhouse studios\" AND time = \"3:27\"",
        "context": "CREATE TABLE table_name_64 (writer_s_ VARCHAR, recorded_at VARCHAR, time VARCHAR)",
        "question": "Who wrote the album recorded at funhouse studios with a time of 3:27?"
    },
    {
        "answer": "SELECT womens_singles FROM table_28138035_27 WHERE year_location = \"1998 Doha\"",
        "context": "CREATE TABLE table_28138035_27 (womens_singles VARCHAR, year_location VARCHAR)",
        "question": "Who is listed under womens singles when year location is 1998 doha?"
    },
    {
        "answer": "SELECT COUNT(year_location) FROM table_28138035_20 WHERE womens_doubles = \"Jing Junhong Li Jiawei\"",
        "context": "CREATE TABLE table_28138035_20 (year_location VARCHAR, womens_doubles VARCHAR)",
        "question": "How many  year locations are there for the womens doubles in jing junhong li jiawei?"
    },
    {
        "answer": "SELECT COUNT(mens_singles) FROM table_28138035_20 WHERE mens_doubles = \"Chen Qi Ma Lin\"",
        "context": "CREATE TABLE table_28138035_20 (mens_singles VARCHAR, mens_doubles VARCHAR)",
        "question": "How many players are there for mens singles when chen qi ma lin played mens doubles?"
    },
    {
        "answer": "SELECT COUNT(year_location) FROM table_28138035_20 WHERE mens_doubles = \"Lin Gaoyuan Wu Jiaji\"",
        "context": "CREATE TABLE table_28138035_20 (year_location VARCHAR, mens_doubles VARCHAR)",
        "question": "How many years did lin gaoyuan wu jiaji play  mens doubles?"
    },
    {
        "answer": "SELECT MAX(goals\u00b9) FROM table_24565004_19 WHERE period = \"1972 \u2013 1975, 1976 \u2013 1982\"",
        "context": "CREATE TABLE table_24565004_19 (goals\u00b9 INTEGER, period VARCHAR)",
        "question": "Name the most goals for  1972 \u2013 1975, 1976 \u2013 1982"
    },
    {
        "answer": "SELECT exposure_fusion FROM table_name_38 WHERE name = \"panoramaplus x4\"",
        "context": "CREATE TABLE table_name_38 (exposure_fusion VARCHAR, name VARCHAR)",
        "question": "What's the exposure fusion of Panoramaplus x4?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_28164986_4 WHERE manner_of_departure = \"fired\" AND team = \"Niger Tornadoes\"",
        "context": "CREATE TABLE table_28164986_4 (date_of_appointment VARCHAR, manner_of_departure VARCHAR, team VARCHAR)",
        "question": "when was the next coach appointed after niger tornadoes fired their coach?"
    },
    {
        "answer": "SELECT COUNT(language_of_films) FROM table_2461720_1 WHERE theatre_name = \"M\u00e9ga-Plex Taschereau IMAX\"",
        "context": "CREATE TABLE table_2461720_1 (language_of_films VARCHAR, theatre_name VARCHAR)",
        "question": "Name the total number of language of films for m\u00e9ga-plex taschereau imax"
    },
    {
        "answer": "SELECT COUNT(outgoing_manager) FROM table_28164986_4 WHERE team = \"Sunshine Stars\"",
        "context": "CREATE TABLE table_28164986_4 (outgoing_manager VARCHAR, team VARCHAR)",
        "question": "how many managers left sunshine stars?"
    },
    {
        "answer": "SELECT location FROM table_2461720_1 WHERE theatre_name = \"M\u00e9ga-Plex Taschereau IMAX\"",
        "context": "CREATE TABLE table_2461720_1 (location VARCHAR, theatre_name VARCHAR)",
        "question": "Name the location for democratic m\u00e9ga-plex taschereau imax"
    },
    {
        "answer": "SELECT ihsaa_football_class FROM table_name_79 WHERE ihsaa_class = \"aaa\" AND location = \"nashville\"",
        "context": "CREATE TABLE table_name_79 (ihsaa_football_class VARCHAR, ihsaa_class VARCHAR, location VARCHAR)",
        "question": "Which IHSAA Football Class has a IHSAA Class of aaa, and a Location of nashville?"
    },
    {
        "answer": "SELECT COUNT(mystic_arte) FROM table_28178595_2 WHERE character = \"Hisui (Jadeite) Hearts 1\"",
        "context": "CREATE TABLE table_28178595_2 (mystic_arte VARCHAR, character VARCHAR)",
        "question": "How many mystic arte have hisui (jadeite) hearts 1 as the character?"
    },
    {
        "answer": "SELECT title FROM table_2468961_3 WHERE written_by = \"Bob Rosenfarb\" AND directed_by = \"Richard Correll\"",
        "context": "CREATE TABLE table_2468961_3 (title VARCHAR, written_by VARCHAR, directed_by VARCHAR)",
        "question": "What was the title of the episode written by Bob Rosenfarb and directed by Richard Correll?"
    },
    {
        "answer": "SELECT act FROM table_28180840_15 WHERE name_name_of_act = \"Zhu Xiaoming\"",
        "context": "CREATE TABLE table_28180840_15 (act VARCHAR, name_name_of_act VARCHAR)",
        "question": "What is the name of the performance zhu xiaoming performed?"
    },
    {
        "answer": "SELECT challenge_winner FROM table_24798489_1 WHERE original_airdate = \"January 28, 2009\"",
        "context": "CREATE TABLE table_24798489_1 (challenge_winner VARCHAR, original_airdate VARCHAR)",
        "question": "Who was the challenge winner in the episode that originally aired on January 28, 2009?"
    },
    {
        "answer": "SELECT MIN(week) FROM table_name_70 WHERE date = \"september 19, 1965\" AND attendance < 46 OFFSET 941",
        "context": "CREATE TABLE table_name_70 (week INTEGER, date VARCHAR, attendance VARCHAR)",
        "question": "What is the lowest week that has September 19, 1965 as the date, with an attendance less than 46,941?"
    },
    {
        "answer": "SELECT manner_of_departure FROM table_28181347_6 WHERE date_of_appointment = \"6 November 2007\"",
        "context": "CREATE TABLE table_28181347_6 (manner_of_departure VARCHAR, date_of_appointment VARCHAR)",
        "question": "One 6 November 2007 what was the manner of departure for the coach release in football league one?"
    },
    {
        "answer": "SELECT margin_of_victory FROM table_247955_2 WHERE runner_s__up = \"K. J. Choi\"",
        "context": "CREATE TABLE table_247955_2 (margin_of_victory VARCHAR, runner_s__up VARCHAR)",
        "question": "What was the margin of victory when runner-up was K. J. Choi?"
    },
    {
        "answer": "SELECT MIN(no_in_series) FROM table_2818164_4 WHERE directed_by = \"Jay Sandrich\" AND original_air_date = \"October 23, 1986\"",
        "context": "CREATE TABLE table_2818164_4 (no_in_series INTEGER, directed_by VARCHAR, original_air_date VARCHAR)",
        "question": "What is the series number for the episode directed by  jay sandrich that aired October 23, 1986?"
    },
    {
        "answer": "SELECT title FROM table_28195971_1 WHERE directed_by = \"David Solomon\" AND written_by = \"Marti Noxon\"",
        "context": "CREATE TABLE table_28195971_1 (title VARCHAR, directed_by VARCHAR, written_by VARCHAR)",
        "question": "What are the title(s) of episodes directed by david solomon and written by marti noxon?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_26 WHERE game = \"4\"",
        "context": "CREATE TABLE table_name_26 (location_attendance VARCHAR, game VARCHAR)",
        "question": "Where is the location of Game 4?"
    },
    {
        "answer": "SELECT MIN(week) FROM table_24786958_2 WHERE kickoff = \"6:00 p.m.\"",
        "context": "CREATE TABLE table_24786958_2 (week INTEGER, kickoff VARCHAR)",
        "question": "What week had kickoff time at 6:00 p.m.?"
    },
    {
        "answer": "SELECT SUM(std_rank) FROM table_name_97 WHERE name = \"311 south wacker drive\" AND year > 1990",
        "context": "CREATE TABLE table_name_97 (std_rank INTEGER, name VARCHAR, year VARCHAR)",
        "question": "How much Standard Rank has a Name of 311 south wacker drive, and a Year larger than 1990?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_31 WHERE city = \"san juan\"",
        "context": "CREATE TABLE table_name_31 (year VARCHAR, city VARCHAR)",
        "question": "What year was the expansion in the city of San Juan?"
    },
    {
        "answer": "SELECT no__episode__number_ FROM table_28210383_1 WHERE directed_by = \"Greg Colton\" AND written_by = \"Patrick Meighan\"",
        "context": "CREATE TABLE table_28210383_1 (no__episode__number_ VARCHAR, directed_by VARCHAR, written_by VARCHAR)",
        "question": "What numbered episode was directed by greg colton and written by patrick meighan?"
    },
    {
        "answer": "SELECT score FROM table_name_4 WHERE date = \"13 december 1975\" AND away_team = \"halifax town\"",
        "context": "CREATE TABLE table_name_4 (score VARCHAR, date VARCHAR, away_team VARCHAR)",
        "question": "For the game on 13 December 1975 with Halifax Town as the away team what was the score?"
    },
    {
        "answer": "SELECT mens_doubles FROM table_28211988_1 WHERE mens_singles = \"Ma Wenge\"",
        "context": "CREATE TABLE table_28211988_1 (mens_doubles VARCHAR, mens_singles VARCHAR)",
        "question": "Who is everyone on the men's doubles when men's singles is Ma Wenge?"
    },
    {
        "answer": "SELECT mens_doubles FROM table_28211988_1 WHERE mens_singles = \"Jean-Michel Saive\"",
        "context": "CREATE TABLE table_28211988_1 (mens_doubles VARCHAR, mens_singles VARCHAR)",
        "question": "Who are all men's doubles when men's singles is Jean-Michel Saive?"
    },
    {
        "answer": "SELECT romaji_title FROM table_name_79 WHERE tv_station = \"tbs\" AND japanese_title = \"around40\u301c\u6ce8\u6587\u306e\u591a\u3044\u30aa\u30f3\u30ca\u305f\u3061\u301c\"",
        "context": "CREATE TABLE table_name_79 (romaji_title VARCHAR, tv_station VARCHAR, japanese_title VARCHAR)",
        "question": "What is the Romanji title for around40\u301c\u6ce8\u6587\u306e\u591a\u3044\u30aa\u30f3\u30ca\u305f\u3061\u301c on TBS?"
    },
    {
        "answer": "SELECT japanese_title FROM table_name_70 WHERE episodes > 10 AND tv_station = \"tbs\" AND average_ratings = \"14.8%\"",
        "context": "CREATE TABLE table_name_70 (japanese_title VARCHAR, average_ratings VARCHAR, episodes VARCHAR, tv_station VARCHAR)",
        "question": "What is the Japanese title for the episode bigger than 10 on TBS with average ratings of 14.8%?"
    },
    {
        "answer": "SELECT school FROM table_name_86 WHERE year_joined > 1926 AND mascot = \"vikings\"",
        "context": "CREATE TABLE table_name_86 (school VARCHAR, year_joined VARCHAR, mascot VARCHAR)",
        "question": "Which School has a Year Joined larger than 1926, and a Mascot of vikings?"
    },
    {
        "answer": "SELECT _number___county FROM table_name_13 WHERE year_joined > 1926 AND previous_conference = \"olympic\"",
        "context": "CREATE TABLE table_name_13 (_number___county VARCHAR, year_joined VARCHAR, previous_conference VARCHAR)",
        "question": "Which #/ County has a Year Joined larger than 1926, and a Previous Conference of olympic?"
    },
    {
        "answer": "SELECT COUNT(seasons) FROM table_2822193_1 WHERE series = \"Formula Holden\"",
        "context": "CREATE TABLE table_2822193_1 (seasons VARCHAR, series VARCHAR)",
        "question": "How many seasons are there with Formula Holden?"
    },
    {
        "answer": "SELECT score FROM table_name_24 WHERE competition = \"1996 asian cup qualification\" AND date = \"june 29, 1996\"",
        "context": "CREATE TABLE table_name_24 (score VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "What is the Score of the 1996 Asian Cup Qualification on June 29, 1996?"
    },
    {
        "answer": "SELECT MAX(point_finishes__non_podium_) FROM table_2822193_1 WHERE series = \"V8Supercar\"",
        "context": "CREATE TABLE table_2822193_1 (point_finishes__non_podium_ INTEGER, series VARCHAR)",
        "question": "What's the most amount of point finishes for v8supercar?"
    },
    {
        "answer": "SELECT enrollment FROM table_name_4 WHERE primary_conference = \"mid-hoosier\" AND county = \"16 decatur\" AND ihsaa_class = \"aa\"",
        "context": "CREATE TABLE table_name_4 (enrollment VARCHAR, ihsaa_class VARCHAR, primary_conference VARCHAR, county VARCHAR)",
        "question": "Which Enrollment has a Primary Conference of mid-hoosier, and a County of 16 decatur, and an IHSAA Class of aa?"
    },
    {
        "answer": "SELECT COUNT(blocks) FROM table_25016555_5 WHERE assists = 21",
        "context": "CREATE TABLE table_25016555_5 (blocks VARCHAR, assists VARCHAR)",
        "question": "When 21 is the number of assists how many sets of blocks are there?"
    },
    {
        "answer": "SELECT candidates FROM table_25030512_12 WHERE district = \"Florida 7\" AND first_elected = \"2010\"",
        "context": "CREATE TABLE table_25030512_12 (candidates VARCHAR, district VARCHAR, first_elected VARCHAR)",
        "question": "When 2010 is the first elected and Florida 7 is the district who are the candidates?"
    },
    {
        "answer": "SELECT COUNT(tenant) FROM table_28281704_1 WHERE country = \"Russia\" AND stadium = \"Saransk stadium\"",
        "context": "CREATE TABLE table_28281704_1 (tenant VARCHAR, country VARCHAR, stadium VARCHAR)",
        "question": "Name the number of tenants for russia at the saransk stadium"
    },
    {
        "answer": "SELECT l2_cache FROM table_name_96 WHERE gpu_model = \"iris pro graphics 5200\" AND frequency = \"2.6 ghz\"",
        "context": "CREATE TABLE table_name_96 (l2_cache VARCHAR, gpu_model VARCHAR, frequency VARCHAR)",
        "question": "What is the L2 cache for the processor with iris pro graphics 5200 and frequency of 2.6 ghz?"
    },
    {
        "answer": "SELECT original_airdate FROM table_2501754_3 WHERE prod_code = \"ICEB786E\"",
        "context": "CREATE TABLE table_2501754_3 (original_airdate VARCHAR, prod_code VARCHAR)",
        "question": "List the 1st air date for the episode with a iceb786e production code."
    },
    {
        "answer": "SELECT frequency FROM table_name_14 WHERE release_price___usd__ = \"$383\" AND sspec_number = \"sr15f(c0)\"",
        "context": "CREATE TABLE table_name_14 (frequency VARCHAR, release_price___usd__ VARCHAR, sspec_number VARCHAR)",
        "question": "What is the frequency of the processor released at $383, with a sSpec of sr15f(c0)?"
    },
    {
        "answer": "SELECT COUNT(cap_s_) FROM table_28286776_12 WHERE club_s_ = \"Burnley\"",
        "context": "CREATE TABLE table_28286776_12 (cap_s_ VARCHAR, club_s_ VARCHAR)",
        "question": "How many items are listed under caps when burnley is the club team?"
    },
    {
        "answer": "SELECT driver_s_ FROM table_2503102_1 WHERE engine = \"Chevrolet\" AND car_sponsor_s_ = \"GoDaddy.com\"",
        "context": "CREATE TABLE table_2503102_1 (driver_s_ VARCHAR, engine VARCHAR, car_sponsor_s_ VARCHAR)",
        "question": "Who is the driver of the Chevrolet engine that is sponsored by godaddy.com?"
    },
    {
        "answer": "SELECT COUNT(below_50_percentage_of_median_income) FROM table_25042332_16 WHERE below_40_percentage_of_median_income = \"10.4%\"",
        "context": "CREATE TABLE table_25042332_16 (below_50_percentage_of_median_income VARCHAR, below_40_percentage_of_median_income VARCHAR)",
        "question": "What percentage of the population is below 50% of the median income in the region where 10.4% of the population earns below 40% of the median income?"
    },
    {
        "answer": "SELECT MIN(median_income___intl) AS $__ FROM table_25042332_16 WHERE below_60_percentage_of_median_income = \"24.4%\"",
        "context": "CREATE TABLE table_25042332_16 (median_income___intl INTEGER, below_60_percentage_of_median_income VARCHAR)",
        "question": "What is the median income for the region where 24.4% pf people make below 60% of the median income?"
    },
    {
        "answer": "SELECT COUNT(site) FROM table_28298589_2 WHERE time = \"3:30pm\" AND visiting_team = \"Coastal Carolina\"",
        "context": "CREATE TABLE table_28298589_2 (site VARCHAR, time VARCHAR, visiting_team VARCHAR)",
        "question": "How many site entries are there at 3:30pm and the visiting team is coastal carolina?"
    },
    {
        "answer": "SELECT region FROM table_25042332_33 WHERE life_expectancy_at_birth__2001_2002_ = \"77.9\"",
        "context": "CREATE TABLE table_25042332_33 (region VARCHAR, life_expectancy_at_birth__2001_2002_ VARCHAR)",
        "question": "Which region had a life expectancy at birth of 77.9 from 2001-2002?"
    },
    {
        "answer": "SELECT runner_up FROM table_25058269_1 WHERE season = \"2011\u201312\"",
        "context": "CREATE TABLE table_25058269_1 (runner_up VARCHAR, season VARCHAR)",
        "question": "Who is the runner-up for season 2011\u201312?"
    },
    {
        "answer": "SELECT stage FROM table_28298471_14 WHERE winner = \"Hayden Roulston\"",
        "context": "CREATE TABLE table_28298471_14 (stage VARCHAR, winner VARCHAR)",
        "question": "When hayden roulston is the winner what is the stage?"
    },
    {
        "answer": "SELECT country FROM table_name_52 WHERE base = \"mecklenburg\" AND play = \"the libation bearers\"",
        "context": "CREATE TABLE table_name_52 (country VARCHAR, base VARCHAR, play VARCHAR)",
        "question": "What Country has the Play The Libation Bearers a Base of Mecklenburg?"
    },
    {
        "answer": "SELECT written_by FROM table_28348757_6 WHERE production_code = \"XLE05012\"",
        "context": "CREATE TABLE table_28348757_6 (written_by VARCHAR, production_code VARCHAR)",
        "question": "Who wrote the episode with the code xle05012?"
    },
    {
        "answer": "SELECT surface FROM table_name_54 WHERE opponent_in_the_final = \"evie dominikovic\"",
        "context": "CREATE TABLE table_name_54 (surface VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "The final match played against Evie Dominikovic was played on what surface?"
    },
    {
        "answer": "SELECT area__km\u00b2_ FROM table_28367242_1 WHERE corporate_name = \"Powell River, The Corporation of the City of\"",
        "context": "CREATE TABLE table_28367242_1 (area__km\u00b2_ VARCHAR, corporate_name VARCHAR)",
        "question": "What is the area of the corporation named the powell river, the corporation of the city of?"
    },
    {
        "answer": "SELECT february_2010 FROM table_25256368_1 WHERE january_2010 = \"6.2%\"",
        "context": "CREATE TABLE table_25256368_1 (february_2010 VARCHAR, january_2010 VARCHAR)",
        "question": "Name the feb 2010 for january 2010 for 6.2%"
    },
    {
        "answer": "SELECT COUNT(directed_by) FROM table_25277262_2 WHERE no_in_season = 3",
        "context": "CREATE TABLE table_25277262_2 (directed_by VARCHAR, no_in_season VARCHAR)",
        "question": "How many people directed episode 3 in the season?"
    },
    {
        "answer": "SELECT method FROM table_name_86 WHERE round = \"3\" AND res = \"loss\" AND event = \"juiz de fora - fight 1\"",
        "context": "CREATE TABLE table_name_86 (method VARCHAR, event VARCHAR, round VARCHAR, res VARCHAR)",
        "question": "Which method had a 3 rounds, result in a loss and the Juiz de Fora - fight 1 event?"
    },
    {
        "answer": "SELECT round FROM table_name_42 WHERE opponent = \"gabriel veiga\"",
        "context": "CREATE TABLE table_name_42 (round VARCHAR, opponent VARCHAR)",
        "question": "In which round was Gabriel Veiga the opponent?"
    },
    {
        "answer": "SELECT conference FROM table_28365816_2 WHERE tournament_winner = \"North Carolina\"",
        "context": "CREATE TABLE table_28365816_2 (conference VARCHAR, tournament_winner VARCHAR)",
        "question": "During what conference is North Carolina listed as the tournament winner?"
    },
    {
        "answer": "SELECT reidsville FROM table_25330991_3 WHERE information = \"Enrollment\"",
        "context": "CREATE TABLE table_25330991_3 (reidsville VARCHAR, information VARCHAR)",
        "question": "Name the reidsville for enrollment"
    },
    {
        "answer": "SELECT country FROM table_name_55 WHERE notes = \"sa/b\" AND rank > 1 AND athlete = \"zhang xiuyun\"",
        "context": "CREATE TABLE table_name_55 (country VARCHAR, athlete VARCHAR, notes VARCHAR, rank VARCHAR)",
        "question": "what is the country when the nots is sa/b, the rank is more than 1 and the athlete is zhang xiuyun?"
    },
    {
        "answer": "SELECT tournament_winner FROM table_28365816_2 WHERE conference = \"Mid-American conference\"",
        "context": "CREATE TABLE table_28365816_2 (tournament_winner VARCHAR, conference VARCHAR)",
        "question": "During the Mid-American Conference who is listed as the tournament winner?"
    },
    {
        "answer": "SELECT nhl_team FROM table_2840500_5 WHERE college_junior_club_team = \"HC Lada Togliatti (Russia)\"",
        "context": "CREATE TABLE table_2840500_5 (nhl_team VARCHAR, college_junior_club_team VARCHAR)",
        "question": "Which team drafted the player from the HC Lada Togliatti (Russia)?"
    },
    {
        "answer": "SELECT MIN(season__number) FROM table_25363904_2 WHERE title_english = \"Two marriage proposals\"",
        "context": "CREATE TABLE table_25363904_2 (season__number INTEGER, title_english VARCHAR)",
        "question": "Name the least season number for two marriage proposals"
    },
    {
        "answer": "SELECT high_rebounds FROM table_name_94 WHERE game < 9 AND opponent = \"detroit\"",
        "context": "CREATE TABLE table_name_94 (high_rebounds VARCHAR, game VARCHAR, opponent VARCHAR)",
        "question": "Which High rebounds has a Game smaller than 9, and a Opponent of detroit?"
    },
    {
        "answer": "SELECT MIN(pick) FROM table_2840500_2 WHERE position = \"Centre\" AND nationality = \"Czech Republic\"",
        "context": "CREATE TABLE table_2840500_2 (pick INTEGER, position VARCHAR, nationality VARCHAR)",
        "question": "What is the minimum pick of a centre from the Czech Republic?"
    },
    {
        "answer": "SELECT NOT COUNT AS event FROM table_name_42 WHERE winner = \"clay\"",
        "context": "CREATE TABLE table_name_42 (COUNT VARCHAR, winner VARCHAR)",
        "question": "How many events did clay win?"
    },
    {
        "answer": "SELECT surface FROM table_name_59 WHERE opponent = \"rafael nadal\" AND NOT event = 2",
        "context": "CREATE TABLE table_name_59 (surface VARCHAR, opponent VARCHAR, event VARCHAR)",
        "question": "Which Surface has an Opponent of rafael nadal, and an Event of 2?"
    },
    {
        "answer": "SELECT MAX(stage) FROM table_name_36 WHERE year > 1948 AND leader_at_the_summit = \"group\" AND finish = \"bagn\u00e8res-de-bigorre\"",
        "context": "CREATE TABLE table_name_36 (stage INTEGER, finish VARCHAR, year VARCHAR, leader_at_the_summit VARCHAR)",
        "question": "What is the highest stage number for a year later than 1948, leader at the summit was group, and finish was Bagn\u00e8res-De-Bigorre?"
    },
    {
        "answer": "SELECT distance FROM table_28490105_1 WHERE supporting = \"Champ Car World Series ( Grand Prix of Cleveland )\" AND tc_winning_car = \"Pierre Kleinubing\"",
        "context": "CREATE TABLE table_28490105_1 (distance VARCHAR, supporting VARCHAR, tc_winning_car VARCHAR)",
        "question": "What was the distance in the round where the supporter was champ car world series ( grand prix of cleveland ) and the tc winning car was pierre kleinubing?"
    },
    {
        "answer": "SELECT MIN(rnd) FROM table_28490105_1 WHERE gt_winning_car = \"Max Angelelli\"",
        "context": "CREATE TABLE table_28490105_1 (rnd INTEGER, gt_winning_car VARCHAR)",
        "question": "What is the earliest round where the gt winning car is max angelelli?"
    },
    {
        "answer": "SELECT supporting FROM table_28490105_1 WHERE gt_winning_car = \"Dodge Viper\" AND rnd = 1",
        "context": "CREATE TABLE table_28490105_1 (supporting VARCHAR, gt_winning_car VARCHAR, rnd VARCHAR)",
        "question": "Who was supporting in round 1 where the gt winning car was dodge viper?"
    },
    {
        "answer": "SELECT _number_of_divisions FROM table_2849652_1 WHERE sport = \"Bowling\"",
        "context": "CREATE TABLE table_2849652_1 (_number_of_divisions VARCHAR, sport VARCHAR)",
        "question": "How many divisions in bowling ? "
    },
    {
        "answer": "SELECT 2011 AS _2012_state_tournament_location FROM table_2849652_2 WHERE sport = \"Soccer\"",
        "context": "CREATE TABLE table_2849652_2 (sport VARCHAR)",
        "question": "Where was the 2011-2012 soccer state tournament held?"
    },
    {
        "answer": "SELECT MAX(championship) FROM table_name_85 WHERE league_cup = 1 AND total = \"17\"",
        "context": "CREATE TABLE table_name_85 (championship INTEGER, league_cup VARCHAR, total VARCHAR)",
        "question": "What is the highest championship that has 1 as the league cup, and 17 as the total?"
    },
    {
        "answer": "SELECT date FROM table_name_82 WHERE nation = \"russia\" AND place = \"beijing, china\" AND athlete = \"yelena isinbayeva\"",
        "context": "CREATE TABLE table_name_82 (date VARCHAR, athlete VARCHAR, nation VARCHAR, place VARCHAR)",
        "question": "What's the date when Yelena Isinbayeva for Russia was in Beijing, China?"
    },
    {
        "answer": "SELECT second FROM table_25563779_4 WHERE national_trophy_rookie = \"Gerrard Barrabeig\"",
        "context": "CREATE TABLE table_25563779_4 (second VARCHAR, national_trophy_rookie VARCHAR)",
        "question": "If the national trophy/rookie is Gerrard Barrabeig, what is the name of the second?"
    },
    {
        "answer": "SELECT location FROM table_25572068_1 WHERE winning_driver = \"Nathana\u00ebl Berthon\"",
        "context": "CREATE TABLE table_25572068_1 (location VARCHAR, winning_driver VARCHAR)",
        "question": "What was the location when the winning driver was Nathana\u00ebl Berthon?"
    },
    {
        "answer": "SELECT name FROM table_name_16 WHERE heat > 4 AND lane = 4 AND nationality = \"australia\"",
        "context": "CREATE TABLE table_name_16 (name VARCHAR, nationality VARCHAR, heat VARCHAR, lane VARCHAR)",
        "question": "What is the name of the swimmer from Australia in lane 4 with a heat larger than 4?"
    },
    {
        "answer": "SELECT COUNT(position) FROM table_2850912_8 WHERE nhl_team = \"Detroit Red Wings\" AND player = \"Urban Nordin\"",
        "context": "CREATE TABLE table_2850912_8 (position VARCHAR, nhl_team VARCHAR, player VARCHAR)",
        "question": "how many parts does detroit red wings person urban nordin play"
    },
    {
        "answer": "SELECT school AS website FROM table_28523_3 WHERE religious_affiliation = \"Church of England\"",
        "context": "CREATE TABLE table_28523_3 (school VARCHAR, religious_affiliation VARCHAR)",
        "question": "What is the website of the school affiliated with the Church of England?"
    },
    {
        "answer": "SELECT COUNT(population__2011_) FROM table_2562572_20 WHERE cyrillic_name_other_names = \"\u0412\u0440\u0431\u0430\u0441\"",
        "context": "CREATE TABLE table_2562572_20 (population__2011_ VARCHAR, cyrillic_name_other_names VARCHAR)",
        "question": "Name the number of population for  \u0432\u0440\u0431\u0430\u0441"
    },
    {
        "answer": "SELECT original_air_date__us_ FROM table_28511558_2 WHERE directed_by = \"Victor Cook\" AND written_by = \"Brat Jennett\"",
        "context": "CREATE TABLE table_28511558_2 (original_air_date__us_ VARCHAR, directed_by VARCHAR, written_by VARCHAR)",
        "question": "What date did the episode directed by Victor Cook and Written by Brat Jennett air in the U.S.?"
    },
    {
        "answer": "SELECT cyrillic_name_other_names FROM table_2562572_20 WHERE dominant_religion__2002_ = \"Orthodox Christianity\" AND type = \"village\" AND settlement = \"Ba\u010dko Dobro Polje\"",
        "context": "CREATE TABLE table_2562572_20 (cyrillic_name_other_names VARCHAR, settlement VARCHAR, dominant_religion__2002_ VARCHAR, type VARCHAR)",
        "question": "Name the cyrillic name for orthodox christianity village and  ba\u010dko dobro polje"
    },
    {
        "answer": "SELECT mountains_classification FROM table_28538368_2 WHERE general_classification = \"Alberto Contador Kanstantsin Sivtsov\" AND points_classification = \"Alessandro Petacchi\" AND winner = \"Mark Cavendish\"",
        "context": "CREATE TABLE table_28538368_2 (mountains_classification VARCHAR, winner VARCHAR, general_classification VARCHAR, points_classification VARCHAR)",
        "question": "When Alberto Contador Kanstantsin Sivtsov was the general classification and Alessandro Petacchi was the points classification at the same time while Mark Cavendish is the winner, who was the mountain classification?"
    },
    {
        "answer": "SELECT young_rider_classification FROM table_28538368_2 WHERE winner = \"Paolo Tiralongo\"",
        "context": "CREATE TABLE table_28538368_2 (young_rider_classification VARCHAR, winner VARCHAR)",
        "question": "What is the name of the young rider classification when Paolo Tiralongo won?"
    },
    {
        "answer": "SELECT COUNT(population__1991_) FROM table_2562572_5 WHERE population__2011_ = 9564",
        "context": "CREATE TABLE table_2562572_5 (population__1991_ VARCHAR, population__2011_ VARCHAR)",
        "question": "Name the total number of population for 1991 for 9564 for 2011"
    },
    {
        "answer": "SELECT austria FROM table_28562675_3 WHERE netherlands = \"Brunssum/Schinnen LL Brunssum\" AND belgium = \"SHAPE and Waterloo LL Brussels\"",
        "context": "CREATE TABLE table_28562675_3 (austria VARCHAR, netherlands VARCHAR, belgium VARCHAR)",
        "question": "What was the team from Austria when the Netherlands sent Brunssum/Schinnen LL Brunssum and Belgium sent Shape and Waterloo LL Brussels?"
    },
    {
        "answer": "SELECT digital_channel FROM table_2857352_3 WHERE virtual_channel = \"23.2\"",
        "context": "CREATE TABLE table_2857352_3 (digital_channel VARCHAR, virtual_channel VARCHAR)",
        "question": "What digital channel corresponds to virtual channel 23.2?"
    },
    {
        "answer": "SELECT pick FROM table_name_63 WHERE school = \"jasper hs (jasper, texas)\"",
        "context": "CREATE TABLE table_name_63 (pick VARCHAR, school VARCHAR)",
        "question": "what is the pick when the school is jasper hs (jasper, texas)?"
    },
    {
        "answer": "SELECT no_votes FROM table_256286_63 WHERE description = \"Partial public funding of election campaigns\"",
        "context": "CREATE TABLE table_256286_63 (no_votes VARCHAR, description VARCHAR)",
        "question": "How many no votes were there in the partial public funding of election campaigns legislation?"
    },
    {
        "answer": "SELECT SUM(samples_taken) FROM table_name_12 WHERE melamine_content_mg_kg_ < 53.4 AND producer = \"qingdao suncare nutritional technology\"",
        "context": "CREATE TABLE table_name_12 (samples_taken INTEGER, melamine_content_mg_kg_ VARCHAR, producer VARCHAR)",
        "question": "How many samples taken from producer Qingdao Suncare Nutritional Technology with a melamine content less than 53.4?"
    },
    {
        "answer": "SELECT COUNT(no_in_series) FROM table_28611413_2 WHERE viewers__millions_ = \"16.15\"",
        "context": "CREATE TABLE table_28611413_2 (no_in_series VARCHAR, viewers__millions_ VARCHAR)",
        "question": "How many seasons had 16.15 million viewers?"
    },
    {
        "answer": "SELECT date FROM table_name_64 WHERE opera = \"5.1%\" AND internet_explorer = \"59.5%\"",
        "context": "CREATE TABLE table_name_64 (date VARCHAR, opera VARCHAR, internet_explorer VARCHAR)",
        "question": "Which date has an Opera usage percentage of 5.1% and Internet Explorer usage of 59.5%?"
    },
    {
        "answer": "SELECT opponent FROM table_name_54 WHERE res = \"loss\" AND event = \"gladiator challenge 87: collision course\"",
        "context": "CREATE TABLE table_name_54 (opponent VARCHAR, res VARCHAR, event VARCHAR)",
        "question": "Who was the fight against when loss was the result at the Gladiator Challenge 87: Collision Course event?"
    },
    {
        "answer": "SELECT record FROM table_name_13 WHERE event = \"cage combat fighting championships: mayhem\"",
        "context": "CREATE TABLE table_name_13 (record VARCHAR, event VARCHAR)",
        "question": "For the Cage Combat Fighting Championships: Mayhem, what was the record?"
    },
    {
        "answer": "SELECT chef FROM table_name_21 WHERE restaurant_name = \"lakes bar and grill\"",
        "context": "CREATE TABLE table_name_21 (chef VARCHAR, restaurant_name VARCHAR)",
        "question": "Who is the chef at Lakes Bar and Grill?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_2865020_5 WHERE average = \"1.412\"",
        "context": "CREATE TABLE table_2865020_5 (points INTEGER, average VARCHAR)",
        "question": "What is the minimum number of points for teams averaging 1.412?"
    },
    {
        "answer": "SELECT us_viewers__million_ FROM table_2866456_1 WHERE _number = 6",
        "context": "CREATE TABLE table_2866456_1 (us_viewers__million_ VARCHAR, _number VARCHAR)",
        "question": "How many u.s. viewers  (million) have 6 as the #?"
    },
    {
        "answer": "SELECT COUNT(birth_2012) FROM table_25703_2 WHERE january_december_2012 = \"Kurgan Oblast\"",
        "context": "CREATE TABLE table_25703_2 (birth_2012 VARCHAR, january_december_2012 VARCHAR)",
        "question": "What is the total number of birth/2012 for January\u2013December 2012 in Kurgan Oblast?"
    },
    {
        "answer": "SELECT MIN(birth_2012) FROM table_25703_2 WHERE death_2012 = 163",
        "context": "CREATE TABLE table_25703_2 (birth_2012 INTEGER, death_2012 VARCHAR)",
        "question": "What were the total 2012 births when the 2012 deaths were 163?"
    },
    {
        "answer": "SELECT time FROM table_name_98 WHERE rank > 2 AND notes = \"fb\" AND country = \"belarus\"",
        "context": "CREATE TABLE table_name_98 (time VARCHAR, country VARCHAR, rank VARCHAR, notes VARCHAR)",
        "question": "What is the Time of the Belarus Player with a Rank larger than 2 and Notes of FB?"
    },
    {
        "answer": "SELECT time FROM table_name_75 WHERE notes = \"fa\" AND rank < 2",
        "context": "CREATE TABLE table_name_75 (time VARCHAR, notes VARCHAR, rank VARCHAR)",
        "question": "What is the Time of the Player with a Rank of 1 or 2 and Notes of FA?"
    },
    {
        "answer": "SELECT MAX(Ends) AS won FROM table_25718552_2 WHERE stolen_ends = 3",
        "context": "CREATE TABLE table_25718552_2 (Ends INTEGER, stolen_ends VARCHAR)",
        "question": "What is the largest amount of ends won when stolen ends were 3?"
    },
    {
        "answer": "SELECT MIN(teams) FROM table_25735_1 WHERE winner = \"Wynnum Manly Seagulls\"",
        "context": "CREATE TABLE table_25735_1 (teams INTEGER, winner VARCHAR)",
        "question": "What was the number of teams in the competition that wynnum manly seagulls won?"
    },
    {
        "answer": "SELECT COUNT(number_of_electorates__2009_) FROM table_name_83 WHERE constituency_number = \"193\"",
        "context": "CREATE TABLE table_name_83 (number_of_electorates__2009_ VARCHAR, constituency_number VARCHAR)",
        "question": "What is the total number of electorates in 2009 with a constituency of 193?"
    },
    {
        "answer": "SELECT COUNT(total_goals) FROM table_name_52 WHERE fa_cup_apps > 0 AND position = \"mf\" AND league_goals = 4",
        "context": "CREATE TABLE table_name_52 (total_goals VARCHAR, league_goals VARCHAR, fa_cup_apps VARCHAR, position VARCHAR)",
        "question": "how many times is the fa cup apps more than 0, the position mf and the league goals 4?"
    },
    {
        "answer": "SELECT MAX(rushing_yards) FROM table_28697228_4 WHERE opponent = \"Indiana\" AND player = \"Denard Robinson\"",
        "context": "CREATE TABLE table_28697228_4 (rushing_yards INTEGER, opponent VARCHAR, player VARCHAR)",
        "question": "What is the number of rushing yards when the opponentis Indiana and the player is Denard Robinson?"
    },
    {
        "answer": "SELECT MAX(int) FROM table_25773915_11 WHERE player = \"Maake Kemoeatu\"",
        "context": "CREATE TABLE table_25773915_11 (int INTEGER, player VARCHAR)",
        "question": "If the player is Maake Kemoeatu, what is the int maximum?"
    },
    {
        "answer": "SELECT rushing_yards FROM table_28697228_4 WHERE passing_yards = 244",
        "context": "CREATE TABLE table_28697228_4 (rushing_yards VARCHAR, passing_yards VARCHAR)",
        "question": "How many rushing yards are listed when the passing yards are 244?"
    },
    {
        "answer": "SELECT title FROM table_name_66 WHERE series = \"lt\" AND director = \"ben hardaway\" AND production_num = \"6612\"",
        "context": "CREATE TABLE table_name_66 (title VARCHAR, production_num VARCHAR, series VARCHAR, director VARCHAR)",
        "question": "What title has lt as the series, ben hardaway as the director, with 6612 as the production num.?"
    },
    {
        "answer": "SELECT eliminated FROM table_28742659_2 WHERE finish = \"15th voted Out 9th Jury Member Day 46\"",
        "context": "CREATE TABLE table_28742659_2 (eliminated VARCHAR, finish VARCHAR)",
        "question": "What is listed in eliminated when the finish is 15th voted out 9th jury Member Day 46?"
    },
    {
        "answer": "SELECT mccain__percentage FROM table_20424014_1 WHERE obama__percentage = \"19.3%\"",
        "context": "CREATE TABLE table_20424014_1 (mccain__percentage VARCHAR, obama__percentage VARCHAR)",
        "question": "what is the mccain % where obama got 19.3%"
    },
    {
        "answer": "SELECT SUM(enrollment) FROM table_name_5 WHERE school = \"fort wayne homestead\"",
        "context": "CREATE TABLE table_name_5 (enrollment INTEGER, school VARCHAR)",
        "question": "How much Enrollment has a School of fort wayne homestead?"
    },
    {
        "answer": "SELECT location FROM table_25987797_1 WHERE school = \"Lucas\"",
        "context": "CREATE TABLE table_25987797_1 (location VARCHAR, school VARCHAR)",
        "question": "What is the name of the school in Lucas ? "
    },
    {
        "answer": "SELECT player FROM table_26130295_3 WHERE first_team = 1 AND number_of_selections = 2",
        "context": "CREATE TABLE table_26130295_3 (player VARCHAR, first_team VARCHAR, number_of_selections VARCHAR)",
        "question": "when number of selection is 2 and first team is 1 who are all the player"
    },
    {
        "answer": "SELECT MAX(final_four_mvp) FROM table_26130295_3 WHERE first_team = 1",
        "context": "CREATE TABLE table_26130295_3 (final_four_mvp INTEGER, first_team VARCHAR)",
        "question": "what would be final four mvp maximum when first team is 1"
    },
    {
        "answer": "SELECT tournament FROM table_name_96 WHERE opponent = \"alberta brianti\" AND score = \"6-4 2-6 6-2\"",
        "context": "CREATE TABLE table_name_96 (tournament VARCHAR, opponent VARCHAR, score VARCHAR)",
        "question": "What tournament had Alberta Brianti as an opponent with a score of 6-4 2-6 6-2?"
    },
    {
        "answer": "SELECT regional_page__number FROM table_287659_2 WHERE region_name = \"North Central\"",
        "context": "CREATE TABLE table_287659_2 (regional_page__number VARCHAR, region_name VARCHAR)",
        "question": "In the North Central region, what are the regional page #'s?"
    },
    {
        "answer": "SELECT region_name FROM table_287659_2 WHERE regional_page__number = \"1-3, 5-7, 9-11, 13-15\"",
        "context": "CREATE TABLE table_287659_2 (region_name VARCHAR, regional_page__number VARCHAR)",
        "question": "Which region has a regional page # of 1-3, 5-7, 9-11, 13-15?"
    },
    {
        "answer": "SELECT party FROM table_26129220_2 WHERE senator = \"Mark Wagoner\"",
        "context": "CREATE TABLE table_26129220_2 (party VARCHAR, senator VARCHAR)",
        "question": "What is the party affiliation for senator mark Wagoner? "
    },
    {
        "answer": "SELECT representative FROM table_26131768_4 WHERE residence = \"Chagrin Falls\"",
        "context": "CREATE TABLE table_26131768_4 (representative VARCHAR, residence VARCHAR)",
        "question": "If the residence is Chagrin falls, who is the representative?"
    },
    {
        "answer": "SELECT MIN(term_limited) FROM table_26131768_4 WHERE first_elected = \"2003 (Appt.)\"",
        "context": "CREATE TABLE table_26131768_4 (term_limited INTEGER, first_elected VARCHAR)",
        "question": "If first elected on 2003 (appt.), when was the term limited?"
    },
    {
        "answer": "SELECT COUNT(residence) FROM table_26131768_4 WHERE representative = \"Scott Oelslager\"",
        "context": "CREATE TABLE table_26131768_4 (residence VARCHAR, representative VARCHAR)",
        "question": "How many times was Scott Oelslager a representative?"
    },
    {
        "answer": "SELECT ioc_code FROM table_2879165_1 WHERE country = \"Singapore\"",
        "context": "CREATE TABLE table_2879165_1 (ioc_code VARCHAR, country VARCHAR)",
        "question": "What is the ioc code when the country is listed as Singapore?"
    },
    {
        "answer": "SELECT COUNT(game) FROM table_28768469_7 WHERE high_assists = \"Earl Watson (11)\" AND location_attendance = \"KeyArena 16,841\"",
        "context": "CREATE TABLE table_28768469_7 (game VARCHAR, high_assists VARCHAR, location_attendance VARCHAR)",
        "question": "How many games have high assists as earl watson (11) and location attendance as Keyarena 16,841?"
    },
    {
        "answer": "SELECT MIN(no_in_season) FROM table_2618102_1 WHERE written_by = \"Brad Markowitz, William N. Fordes & Ren\u00e9 Balcer\"",
        "context": "CREATE TABLE table_2618102_1 (no_in_season INTEGER, written_by VARCHAR)",
        "question": "Name the least number in season for brad markowitz, william n. fordes & ren\u00e9 balcer"
    },
    {
        "answer": "SELECT station_type FROM table_28794440_1 WHERE location = \"Cebu\"",
        "context": "CREATE TABLE table_28794440_1 (station_type VARCHAR, location VARCHAR)",
        "question": "What types of stations are located in Cebu?"
    },
    {
        "answer": "SELECT football_conference FROM table_261927_2 WHERE location = \"Henniker, New Hampshire\"",
        "context": "CREATE TABLE table_261927_2 (football_conference VARCHAR, location VARCHAR)",
        "question": "What is the football conference for Henniker, New Hampshire>?"
    },
    {
        "answer": "SELECT venue FROM table_name_71 WHERE date = \"september 5, 1998\"",
        "context": "CREATE TABLE table_name_71 (venue VARCHAR, date VARCHAR)",
        "question": "What venue did the game on september 5, 1998 take place at?"
    },
    {
        "answer": "SELECT no FROM table_26202812_7 WHERE score_in_the_final = \"7\u20136 (7\u20130) , 6\u20137 (5\u20137) , 4\u20136, 6\u20132, 6\u20137 (5\u20137)\"",
        "context": "CREATE TABLE table_26202812_7 (no VARCHAR, score_in_the_final VARCHAR)",
        "question": "Which match was the final score 7\u20136 (7\u20130) , 6\u20137 (5\u20137) , 4\u20136, 6\u20132, 6\u20137 (5\u20137)?"
    },
    {
        "answer": "SELECT COUNT(golden_tickets) FROM table_28793672_1 WHERE callback_venue = \"RCTI Studio, Jakarta\"",
        "context": "CREATE TABLE table_28793672_1 (golden_tickets VARCHAR, callback_venue VARCHAR)",
        "question": "How many times is there a golden tickets entry when the callback venue is rcti studio, jakarta?"
    },
    {
        "answer": "SELECT event_type FROM table_name_57 WHERE body = \"cmas\" AND year = \"1980\" AND sport = \"underwater hockey\"",
        "context": "CREATE TABLE table_name_57 (event_type VARCHAR, sport VARCHAR, body VARCHAR, year VARCHAR)",
        "question": "What event type had BODY CMAS in 1980 and underwater hockey?"
    },
    {
        "answer": "SELECT body FROM table_name_12 WHERE event_type = \"world championship\" AND sport = \"underwater target shooting\"",
        "context": "CREATE TABLE table_name_12 (body VARCHAR, event_type VARCHAR, sport VARCHAR)",
        "question": "What body is at the World Championship for Underwater Target shooting?"
    },
    {
        "answer": "SELECT theme FROM table_26250176_1 WHERE week__number = \"Audition\"",
        "context": "CREATE TABLE table_26250176_1 (theme VARCHAR, week__number VARCHAR)",
        "question": "What is the theme for Audition week?"
    },
    {
        "answer": "SELECT player FROM table_28846752_9 WHERE economy = \"6.14\"",
        "context": "CREATE TABLE table_28846752_9 (player VARCHAR, economy VARCHAR)",
        "question": "Who is the player when the economy is 6.14?"
    },
    {
        "answer": "SELECT MAX(parallel_bars) FROM table_name_61 WHERE country = \"united states\" AND vault < 63.85",
        "context": "CREATE TABLE table_name_61 (parallel_bars INTEGER, country VARCHAR, vault VARCHAR)",
        "question": "Name the highest Parallel Bars of the united states with a Vault smaller than 63.85?"
    },
    {
        "answer": "SELECT stage FROM table_28853064_15 WHERE team_classification = \"EPM-UNE\" AND mountains_classification = \"Oscar Solis\" AND winner = \"Jaime Vergara\"",
        "context": "CREATE TABLE table_28853064_15 (stage VARCHAR, winner VARCHAR, team_classification VARCHAR, mountains_classification VARCHAR)",
        "question": "In what stage did Jaime Vergara won, Team Classification was given to EPM-Une and Mountain Classification winner was Oscar Solis?"
    },
    {
        "answer": "SELECT directed_by FROM table_28859177_2 WHERE original_air_date = \"November 21, 2003\"",
        "context": "CREATE TABLE table_28859177_2 (directed_by VARCHAR, original_air_date VARCHAR)",
        "question": "Who directed the episode that aired November 21, 2003?"
    },
    {
        "answer": "SELECT COUNT(goals) FROM table_name_9 WHERE years_at_club = \"1961\u20131966\" AND debut_year > 1961",
        "context": "CREATE TABLE table_name_9 (goals VARCHAR, years_at_club VARCHAR, debut_year VARCHAR)",
        "question": "How many Goals have Years at club of 1961\u20131966, and a Debut year larger than 1961?"
    },
    {
        "answer": "SELECT COUNT(drumset_name) FROM table_2889300_6 WHERE drumstand__oftenoptional_ = \"HD-1/3Stand\" AND tom_tom_pads = \"3xCloth-Head\"",
        "context": "CREATE TABLE table_2889300_6 (drumset_name VARCHAR, drumstand__oftenoptional_ VARCHAR, tom_tom_pads VARCHAR)",
        "question": "how many drumsets of drumstand (oftenoptional) with hd-1/3stand and tom-tom pads is 3xcloth-head are"
    },
    {
        "answer": "SELECT COUNT(market_share__target_group_14_49_) FROM table_2639433_4 WHERE viewers__in_millions_target_group_14_49_ = \"0.63\"",
        "context": "CREATE TABLE table_2639433_4 (market_share__target_group_14_49_ VARCHAR, viewers__in_millions_target_group_14_49_ VARCHAR)",
        "question": "How many times was the viewer target group 0.63?"
    },
    {
        "answer": "SELECT COUNT(receptions) FROM table_name_82 WHERE avg_g = 2",
        "context": "CREATE TABLE table_name_82 (receptions VARCHAR, avg_g VARCHAR)",
        "question": "How many times is avg/g 2?"
    },
    {
        "answer": "SELECT COUNT(date) FROM table_28925058_1 WHERE grand_prix = \"Spanish grand_prix\" AND race_winner = \"Daniel Ruiz\"",
        "context": "CREATE TABLE table_28925058_1 (date VARCHAR, grand_prix VARCHAR, race_winner VARCHAR)",
        "question": "How many dates did Daniel Ruiz win the Spanish Grand Prix?"
    },
    {
        "answer": "SELECT COUNT(place) FROM table_26427332_17 WHERE contestant = \"Jacqueline Kohl\"",
        "context": "CREATE TABLE table_26427332_17 (place VARCHAR, contestant VARCHAR)",
        "question": "How many entries are in the ranking for jacqueline kohl?"
    },
    {
        "answer": "SELECT airing_date FROM table_name_39 WHERE number_of_episodes > 20 AND genre = \"modern drama\"",
        "context": "CREATE TABLE table_name_39 (airing_date VARCHAR, number_of_episodes VARCHAR, genre VARCHAR)",
        "question": "Which Airing date has a Number of episodes larger than 20, and a Genre of modern drama?"
    },
    {
        "answer": "SELECT COUNT(written_by) FROM table_26429658_1 WHERE directed_by = \"Arlene Sanford\"",
        "context": "CREATE TABLE table_26429658_1 (written_by VARCHAR, directed_by VARCHAR)",
        "question": "How many episodes were directed by Arlene Sanford?"
    },
    {
        "answer": "SELECT grand_finalist FROM table_name_26 WHERE grand_finalists = \"jonathan loh, peterson poon, nathan santos\"",
        "context": "CREATE TABLE table_name_26 (grand_finalist VARCHAR, grand_finalists VARCHAR)",
        "question": "who is the grand finalist when the grand finalists are jonathan loh, peterson poon, nathan santos?"
    },
    {
        "answer": "SELECT college_junior_club_team FROM table_2897457_3 WHERE position = \"Defence\" AND nationality = \"Canada\" AND pick__number < 61.0",
        "context": "CREATE TABLE table_2897457_3 (college_junior_club_team VARCHAR, pick__number VARCHAR, position VARCHAR, nationality VARCHAR)",
        "question": "Which college/junior/team has defence as the position with canada as the nationality and the pick # is less than 61.0?"
    },
    {
        "answer": "SELECT AVG(l_100km_combined) FROM table_name_81 WHERE l_100km_urban__cold_ = 13.9 AND mpg_uk_combined > 28.5 AND mpg_uk_extra_urban < 38.7",
        "context": "CREATE TABLE table_name_81 (l_100km_combined INTEGER, mpg_uk_extra_urban VARCHAR, l_100km_urban__cold_ VARCHAR, mpg_uk_combined VARCHAR)",
        "question": "What's the average L/km combines when the L/100km Urban is 13.9, the mpg-UK combined is more than 28.5 and the mpg-UK extra urban is less than 38.7?"
    },
    {
        "answer": "SELECT MIN(mpg_uk_combined) FROM table_name_42 WHERE mpg_uk_urban__cold_ = 25.4 AND l_100km_extra_urban < 6.9 AND l_100km_urban__cold_ > 11.1",
        "context": "CREATE TABLE table_name_42 (mpg_uk_combined INTEGER, l_100km_urban__cold_ VARCHAR, mpg_uk_urban__cold_ VARCHAR, l_100km_extra_urban VARCHAR)",
        "question": "What's the least mpg-UK combined when the mpg-UK urban is 25.4, the L/100km extra urban is less than 6.9 and the L/100km urban is more than 11.1?"
    },
    {
        "answer": "SELECT COUNT(co_2_g_km) FROM table_name_20 WHERE fuel_type = \"diesel\" AND manufacturer = \"fiat\" AND l_100km_urban__cold_ > 6.3 AND mpg_uk_combined = 43.5",
        "context": "CREATE TABLE table_name_20 (co_2_g_km VARCHAR, mpg_uk_combined VARCHAR, l_100km_urban__cold_ VARCHAR, fuel_type VARCHAR, manufacturer VARCHAR)",
        "question": "What's the CO2 g/km of a Fiat running on diesel with the L/100km urban more than 6.3 and an mpg-UK combined of 43.5?"
    },
    {
        "answer": "SELECT COUNT(l_100km_extra_urban) FROM table_name_52 WHERE mpg_uk_combined > 19.2 AND l_100km_combined < 5.7 AND fuel_type = \"diesel\" AND mpg_us_combined < 50",
        "context": "CREATE TABLE table_name_52 (l_100km_extra_urban VARCHAR, mpg_us_combined VARCHAR, fuel_type VARCHAR, mpg_uk_combined VARCHAR, l_100km_combined VARCHAR)",
        "question": "What's the total L/100km extra urban fueled by diesel, when the mpg-UK combines is more than 19.2, mpg-US is less than 50 and the L/100m combined is less than 5.7?"
    },
    {
        "answer": "SELECT SUM(engine_capacity) FROM table_name_53 WHERE mpg_uk_urban__cold_ < 12.2 AND mpg_uk_extra_urban < 18.8 AND mpg_us_urban < 7.2",
        "context": "CREATE TABLE table_name_53 (engine_capacity INTEGER, mpg_us_urban VARCHAR, mpg_uk_urban__cold_ VARCHAR, mpg_uk_extra_urban VARCHAR)",
        "question": "What's the engine capacity when the mpg-UK urban is less than 12.2, the mpg-UK extra urban is less than 18.8 and the mpg-US turban is less than 7.2?"
    },
    {
        "answer": "SELECT pick__number FROM table_2897457_8 WHERE position = \"Defence\" AND nhl_team = \"Boston Bruins\"",
        "context": "CREATE TABLE table_2897457_8 (pick__number VARCHAR, position VARCHAR, nhl_team VARCHAR)",
        "question": "What pick number was the Boston Bruins selection for defence?"
    },
    {
        "answer": "SELECT player FROM table_2897457_4 WHERE position = \"Centre\" AND nhl_team = \"Detroit Red Wings\"",
        "context": "CREATE TABLE table_2897457_4 (player VARCHAR, position VARCHAR, nhl_team VARCHAR)",
        "question": "Which player is the centre for the Detroit Red Wings?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_2668243_8 WHERE incumbent = \"Thomas P. Moore\"",
        "context": "CREATE TABLE table_2668243_8 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": "How many first elected years are provided for Thomas P. Moore?"
    },
    {
        "answer": "SELECT goals_for FROM table_name_44 WHERE lost = \"involuntary suspension of season (hurricane rita)\"",
        "context": "CREATE TABLE table_name_44 (goals_for VARCHAR, lost VARCHAR)",
        "question": "What are the goals for a lost of Involuntary suspension of Season (hurricane Rita)?"
    },
    {
        "answer": "SELECT first_elected FROM table_2668264_22 WHERE incumbent = \"Andrew R. Govan\"",
        "context": "CREATE TABLE table_2668264_22 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": "What was the first elected year that featured incumbent andrew r. govan?"
    },
    {
        "answer": "SELECT location FROM table_name_38 WHERE silver = \"david mccann\" AND gold = \"morgan fox\"",
        "context": "CREATE TABLE table_name_38 (location VARCHAR, silver VARCHAR, gold VARCHAR)",
        "question": "What location did david mccann receive a siver and morgan fox win the gold?"
    },
    {
        "answer": "SELECT result FROM table_2668336_17 WHERE candidates = \"Charles Fisher (DR) 65.1% W. Jones (F) 34.9%\"",
        "context": "CREATE TABLE table_2668336_17 (result VARCHAR, candidates VARCHAR)",
        "question": "Candiates Charles Fisher (DR) 65.1% W. Jones (F) 34.9% had what result?"
    },
    {
        "answer": "SELECT incumbent FROM table_2668336_19 WHERE candidates = \"John Murray (DR) 50.4% George Denison (DR) 49.6%\" AND result = \"Retired Democratic-Republican hold\"",
        "context": "CREATE TABLE table_2668336_19 (incumbent VARCHAR, candidates VARCHAR, result VARCHAR)",
        "question": "Who were the incumbent(s) in the election featuring  john murray (dr) 50.4% george denison (dr) 49.6% with a result of a retired democratic-republican hold?"
    },
    {
        "answer": "SELECT subdivision_name___ru____gost_ FROM table_290017_1 WHERE subdivision_name___be____bgn_pcgn_ = \"Hrodzenskaya voblasts'\"",
        "context": "CREATE TABLE table_290017_1 (subdivision_name___ru____gost_ VARCHAR, subdivision_name___be____bgn_pcgn_ VARCHAR)",
        "question": "What are the subdivision names (RU) where the subdivision name (BE) is Hrodzenskaya Voblasts'?"
    },
    {
        "answer": "SELECT subdivision_name___be____bgn_pcgn_ FROM table_290017_1 WHERE subdivision_name___ru____bgn_pcgn_ = \"Grodnenskaya oblast'\"",
        "context": "CREATE TABLE table_290017_1 (subdivision_name___be____bgn_pcgn_ VARCHAR, subdivision_name___ru____bgn_pcgn_ VARCHAR)",
        "question": "What is the subdivision name (BE) where subdivision name (RU) (BGN) is Grodnenskaya Oblast'?"
    },
    {
        "answer": "SELECT into_service FROM table_29002641_1 WHERE number = \"DH2\"",
        "context": "CREATE TABLE table_29002641_1 (into_service VARCHAR, number VARCHAR)",
        "question": "Name the into service for dh2"
    },
    {
        "answer": "SELECT MAX(year_of_release) FROM table_name_40 WHERE label = \"mca\"",
        "context": "CREATE TABLE table_name_40 (year_of_release INTEGER, label VARCHAR)",
        "question": "What was the last year MCA had a Release?"
    },
    {
        "answer": "SELECT MIN(electorate) FROM table_name_57 WHERE political_party = \"conservative\" AND constituency = \"south west devon\" AND \"conservative\" > 2 AND name = \"plymstock radford\"",
        "context": "CREATE TABLE table_name_57 (electorate INTEGER, name VARCHAR, political_party VARCHAR, constituency VARCHAR)",
        "question": "What is the smallest electorate for the Conservative party in South West Devon constituency, with over 2 conservatives and a name of Plymstock Radford?"
    },
    {
        "answer": "SELECT district FROM table_2668393_18 WHERE candidates = \"Edwin Gray (DR)\"",
        "context": "CREATE TABLE table_2668393_18 (district VARCHAR, candidates VARCHAR)",
        "question": "What is the district with the candidates edwin gray (dr)?"
    },
    {
        "answer": "SELECT original_airdate FROM table_29039942_1 WHERE writer = \"Daisuke Habara\" AND director = \"Akimitsu Sasaki\"",
        "context": "CREATE TABLE table_29039942_1 (original_airdate VARCHAR, writer VARCHAR, director VARCHAR)",
        "question": "What was the original airdate for the episode written by daisuke habara and directed by akimitsu sasaki"
    },
    {
        "answer": "SELECT no FROM table_26745820_1 WHERE distance = \"4168km\"",
        "context": "CREATE TABLE table_26745820_1 (no VARCHAR, distance VARCHAR)",
        "question": "what is the no when the distance is 4168km?"
    },
    {
        "answer": "SELECT venue FROM table_29033869_3 WHERE opponent = \"Essendon\" AND position_on_ladder = \"3rd\"",
        "context": "CREATE TABLE table_29033869_3 (venue VARCHAR, opponent VARCHAR, position_on_ladder VARCHAR)",
        "question": "Which venue did collingsworth play essendon in when they had the 3rd position on the ladder?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_65 WHERE nation = \"canada\" AND result = \"silver\" AND championship = \"olympics\" AND event = \"men's coxless pair\"",
        "context": "CREATE TABLE table_name_65 (year INTEGER, event VARCHAR, championship VARCHAR, nation VARCHAR, result VARCHAR)",
        "question": "What year did Canada get a silver in the olympics in the Men's Coxless Pair event?"
    },
    {
        "answer": "SELECT population__july_2009_est_ FROM table_26769_1 WHERE population_density_per_km\u00b2 = \"14.3/km\u00b2 (/sqmi)\"",
        "context": "CREATE TABLE table_26769_1 (population__july_2009_est_ VARCHAR, population_density_per_km\u00b2 VARCHAR)",
        "question": "What was the population of a country with a population density of 14.3/km\u00b2 (/sqmi)?"
    },
    {
        "answer": "SELECT MAX(_number) FROM table_29050051_3 WHERE position = \"Guard\" AND previous_school = \"Brophy College Prep\"",
        "context": "CREATE TABLE table_29050051_3 (_number INTEGER, position VARCHAR, previous_school VARCHAR)",
        "question": "What is the highest number a guard from brophy college prep wore?"
    },
    {
        "answer": "SELECT country_or_territory_with_flag FROM table_26769_1 WHERE population_density_per_km\u00b2 = \"3.5/km\u00b2 (/sqmi)\"",
        "context": "CREATE TABLE table_26769_1 (country_or_territory_with_flag VARCHAR, population_density_per_km\u00b2 VARCHAR)",
        "question": "What was the country with a population density per km\u00b2 of 3.5/km\u00b2 (/sqmi)?"
    },
    {
        "answer": "SELECT school FROM table_name_52 WHERE enrollment > 264 AND county = \"46 la porte\"",
        "context": "CREATE TABLE table_name_52 (school VARCHAR, enrollment VARCHAR, county VARCHAR)",
        "question": "Which School has an Enrollment larger than 264, and a County of 46 la porte?"
    },
    {
        "answer": "SELECT name FROM table_29050051_3 WHERE previous_school = \"South Kent School / Brentwood HS\"",
        "context": "CREATE TABLE table_29050051_3 (name VARCHAR, previous_school VARCHAR)",
        "question": "Who previously attended south kent school / brentwood hs?"
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_2679061_6 WHERE nhl_team = \"Vancouver Canucks\"",
        "context": "CREATE TABLE table_2679061_6 (pick__number INTEGER, nhl_team VARCHAR)",
        "question": "What is the pick # for nhl team vancouver canucks?"
    },
    {
        "answer": "SELECT COUNT(directed_by) FROM table_29063233_1 WHERE uk_viewers__million_ = \"6.16\"",
        "context": "CREATE TABLE table_29063233_1 (directed_by VARCHAR, uk_viewers__million_ VARCHAR)",
        "question": "How many directed by entries have UK viewership over 6.16 million?"
    },
    {
        "answer": "SELECT college_junior_club_team FROM table_2679061_6 WHERE player = \"Don Barber\"",
        "context": "CREATE TABLE table_2679061_6 (college_junior_club_team VARCHAR, player VARCHAR)",
        "question": "What is the college/junior/club team for player don barber?"
    },
    {
        "answer": "SELECT mountains_classification FROM table_29077342_19 WHERE team_classification = \"Rabobank\" AND general_classification = \"Damiano Cunego\"",
        "context": "CREATE TABLE table_29077342_19 (mountains_classification VARCHAR, team_classification VARCHAR, general_classification VARCHAR)",
        "question": "Name the mountains classification for rabobank and damiano cunego"
    },
    {
        "answer": "SELECT written_by FROM table_29087004_3 WHERE directed_by = \"Greg Sullivan\" AND united_states_original_airdate = \"July 21, 2012\"",
        "context": "CREATE TABLE table_29087004_3 (written_by VARCHAR, directed_by VARCHAR, united_states_original_airdate VARCHAR)",
        "question": "Who were the writers of the episodes directed by Greg Sullivan and which first aired on July 21, 2012?"
    },
    {
        "answer": "SELECT SUM(position) FROM table_name_78 WHERE lost = 8 AND played > 14",
        "context": "CREATE TABLE table_name_78 (position INTEGER, lost VARCHAR, played VARCHAR)",
        "question": "How much Position has a Lost of 8, and a Played larger than 14?"
    },
    {
        "answer": "SELECT COUNT(drawn) FROM table_name_13 WHERE name = \"erc lechbruck\" AND points < 17",
        "context": "CREATE TABLE table_name_13 (drawn VARCHAR, name VARCHAR, points VARCHAR)",
        "question": "How much Drawn has a Name of erc lechbruck, and Points smaller than 17?"
    },
    {
        "answer": "SELECT COUNT(hand_number) FROM table_26853172_1 WHERE player_1 = \"South\" AND prevailing_wind = \"East\"",
        "context": "CREATE TABLE table_26853172_1 (hand_number VARCHAR, player_1 VARCHAR, prevailing_wind VARCHAR)",
        "question": "What is the hand number of the hand where player 1 is south and the east wind is prevailing?"
    },
    {
        "answer": "SELECT directed_by FROM table_26914076_4 WHERE us_viewers__millions_ = \"0.57\"",
        "context": "CREATE TABLE table_26914076_4 (directed_by VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "Who directed the episode that had 0.57 million U.S. viewers? "
    },
    {
        "answer": "SELECT first_broadcast FROM table_29141354_4 WHERE jamie_and_johns_guest = \"Mark Webber\"",
        "context": "CREATE TABLE table_29141354_4 (first_broadcast VARCHAR, jamie_and_johns_guest VARCHAR)",
        "question": "When id the episode broadcast with Mark Webber as Jamie and John's guest?"
    },
    {
        "answer": "SELECT COUNT(andrew_and_georgies_guest_lee_mack_replaced_andrew_flintoff_as_team_captain_for_one_week_in_series_4), _episode_2 FROM table_29141354_4 WHERE episode = \"04x04\"",
        "context": "CREATE TABLE table_29141354_4 (_episode_2 VARCHAR, andrew_and_georgies_guest_lee_mack_replaced_andrew_flintoff_as_team_captain_for_one_week_in_series_4 VARCHAR, episode VARCHAR)",
        "question": "How many items are listed under 'andrew and georgies guest lee mack replaced andrew flint as team captain for one week' for episode 04x04?"
    },
    {
        "answer": "SELECT result FROM table_26977890_1 WHERE combatants_b = \"Royal Navy\"",
        "context": "CREATE TABLE table_26977890_1 (result VARCHAR, combatants_b VARCHAR)",
        "question": "With the Royal Navy as Combatants B, what was the result?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_26986076_3 WHERE rider = \"Paul Coward 492cc Nourish Weslake\"",
        "context": "CREATE TABLE table_26986076_3 (rank INTEGER, rider VARCHAR)",
        "question": "What is Paul Coward 492cc nourish Weslake's lowest rank?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_72 WHERE country = \"united states\" AND player = \"phil mickelson\"",
        "context": "CREATE TABLE table_name_72 (total INTEGER, country VARCHAR, player VARCHAR)",
        "question": "What was the total for united states player phil mickelson?"
    },
    {
        "answer": "SELECT MAX(l3_cache__mb_) FROM table_269920_17 WHERE qpi_speed__gt_s_ = \"4.8\" AND speed__ghz_ = \"2.00\" AND model = \"E5504\"",
        "context": "CREATE TABLE table_269920_17 (l3_cache__mb_ INTEGER, model VARCHAR, qpi_speed__gt_s_ VARCHAR, speed__ghz_ VARCHAR)",
        "question": "What is the maximum L3 cache of the processor whose speed is 2.00 GHZ, has a QPI speed of 4.8 gt/s, and is model e5504?"
    },
    {
        "answer": "SELECT MIN(season_no) FROM table_29154676_1 WHERE us_viewers__millions_ = \"3.91\"",
        "context": "CREATE TABLE table_29154676_1 (season_no INTEGER, us_viewers__millions_ VARCHAR)",
        "question": "What is the last episode in the season that had 3.91 million viewers in the US?"
    },
    {
        "answer": "SELECT MIN(fa_cup_goals) FROM table_27086613_5 WHERE fa_cup_apps = 2 AND position = \"FW\"",
        "context": "CREATE TABLE table_27086613_5 (fa_cup_goals INTEGER, fa_cup_apps VARCHAR, position VARCHAR)",
        "question": "Name the least fa cup goals with fa cup apps being 2 and fw "
    },
    {
        "answer": "SELECT COUNT(season_no) FROM table_29154676_1 WHERE written_by = \"Warren Leight\"",
        "context": "CREATE TABLE table_29154676_1 (season_no VARCHAR, written_by VARCHAR)",
        "question": "How many episodes were written by Warren Leight?"
    },
    {
        "answer": "SELECT venue FROM table_name_58 WHERE result = \"loss\" AND opponent = \"st george-illawarra dragons\"",
        "context": "CREATE TABLE table_name_58 (venue VARCHAR, result VARCHAR, opponent VARCHAR)",
        "question": "what is the venue when the result is loss and the opponent is st george-illawarra dragons?"
    },
    {
        "answer": "SELECT pole_position FROM table_29162856_1 WHERE winning_rider = \"Rob Guiver\" AND fastest_lap = \"Kyle Ryde\"",
        "context": "CREATE TABLE table_29162856_1 (pole_position VARCHAR, winning_rider VARCHAR, fastest_lap VARCHAR)",
        "question": "Who had the pole position(s) when rob guiver won and kyle ryde had the fastest lap?"
    },
    {
        "answer": "SELECT december_28 FROM table_29217650_1 WHERE movies = \"Ang Tanging Ina Mo (Last na 'To!)\"",
        "context": "CREATE TABLE table_29217650_1 (december_28 VARCHAR, movies VARCHAR)",
        "question": "What is the figure for December 28 for ang tanging ina mo (last na 'to!)?"
    },
    {
        "answer": "SELECT democratic_alternative FROM table_name_31 WHERE polling_institute = \"malta today\"",
        "context": "CREATE TABLE table_name_31 (democratic_alternative VARCHAR, polling_institute VARCHAR)",
        "question": "What is the value of the Democratic Alternative for the poll released by Malta Today?"
    },
    {
        "answer": "SELECT polling_institute FROM table_name_46 WHERE lead = \"12%\" AND labour = \"40.2%\"",
        "context": "CREATE TABLE table_name_46 (polling_institute VARCHAR, lead VARCHAR, labour VARCHAR)",
        "question": "Which polling institute showed a lead of 12% and a Labour share of the poll at 40.2%?"
    },
    {
        "answer": "SELECT COUNT(written_by) FROM table_29219286_1 WHERE directed_by = \"Ernest Dickerson\" AND no_in_season = 9",
        "context": "CREATE TABLE table_29219286_1 (written_by VARCHAR, directed_by VARCHAR, no_in_season VARCHAR)",
        "question": "How many people wrote episode 9 in the season that was directed by Ernest Dickerson?"
    },
    {
        "answer": "SELECT ep_winning_team FROM table_29225103_2 WHERE cp_winning_team = \"Dave Clark\" AND gm_winning_team = \"Stuart Northrup\"",
        "context": "CREATE TABLE table_29225103_2 (ep_winning_team VARCHAR, cp_winning_team VARCHAR, gm_winning_team VARCHAR)",
        "question": "Who was the EP winning team when the CP winning team was Dave Clark and the GM winning team was Stuart Northrup?"
    },
    {
        "answer": "SELECT cm_winning_team FROM table_29225103_2 WHERE fm_winning_team = \"#17 Elva - Ford\"",
        "context": "CREATE TABLE table_29225103_2 (cm_winning_team VARCHAR, fm_winning_team VARCHAR)",
        "question": "Who was the CM winning team when the FM winning team was #17 Elva - Ford?"
    },
    {
        "answer": "SELECT socket FROM table_27277284_27 WHERE frequency = \"2100MHz\" AND model_number = \"Athlon X2 QL-64\"",
        "context": "CREATE TABLE table_27277284_27 (socket VARCHAR, frequency VARCHAR, model_number VARCHAR)",
        "question": "What kind of sockets does a 2100MHz Athlon X2 QL-64 use?"
    },
    {
        "answer": "SELECT ep_winning_team FROM table_29225103_2 WHERE fm_winning_team = \"Brabham - Ford\" AND hm_winning_team = \"Osca\"",
        "context": "CREATE TABLE table_29225103_2 (ep_winning_team VARCHAR, fm_winning_team VARCHAR, hm_winning_team VARCHAR)",
        "question": "Who was the EP winning team when the FM winning team was Brabham - Ford and the HM winning team was Osca?"
    },
    {
        "answer": "SELECT COUNT(country) FROM table_27279050_3 WHERE last_current_driver_s__3_november_2013 = \"Adderly Fong ( 2013 )\"",
        "context": "CREATE TABLE table_27279050_3 (country VARCHAR, last_current_driver_s__3_november_2013 VARCHAR)",
        "question": "How many times is last/current driver(s) 3 november 2013 is adderly fong ( 2013 )?"
    },
    {
        "answer": "SELECT country FROM table_27279050_3 WHERE last_current_driver_s__3_november_2013 = \"Daniel Abt ( 2012 )\"",
        "context": "CREATE TABLE table_27279050_3 (country VARCHAR, last_current_driver_s__3_november_2013 VARCHAR)",
        "question": "What is the country when last/current driver(s) 3 november 2013 is daniel abt ( 2012 )?"
    },
    {
        "answer": "SELECT round FROM table_name_92 WHERE res = \"loss\" AND event = \"ufc 118\"",
        "context": "CREATE TABLE table_name_92 (round VARCHAR, res VARCHAR, event VARCHAR)",
        "question": "In what round was the loss at ufc 118?"
    },
    {
        "answer": "SELECT decile FROM table_name_62 WHERE area = \"welcome bay\" AND authority = \"state\"",
        "context": "CREATE TABLE table_name_62 (decile VARCHAR, area VARCHAR, authority VARCHAR)",
        "question": "Which decile has an Area of welcome bay, and an Authority of state?"
    },
    {
        "answer": "SELECT COUNT(distance) FROM table_2923917_4 WHERE brisbane = \"$3.80\"",
        "context": "CREATE TABLE table_2923917_4 (distance VARCHAR, brisbane VARCHAR)",
        "question": "How many distance places have brisbane at $3.80?"
    },
    {
        "answer": "SELECT MIN(decile) FROM table_name_70 WHERE name = \"st mary's catholic school\"",
        "context": "CREATE TABLE table_name_70 (decile INTEGER, name VARCHAR)",
        "question": "What is the smallest decile with a Name of st mary's catholic school?"
    },
    {
        "answer": "SELECT AVG(births__000s_) FROM table_name_14 WHERE total_fertility_rate = \"na\" AND natural_growth < 2.5",
        "context": "CREATE TABLE table_name_14 (births__000s_ INTEGER, total_fertility_rate VARCHAR, natural_growth VARCHAR)",
        "question": "What is the average birth rate that has a total fertility rate of na, and a natural growth smaller than 2.5?"
    },
    {
        "answer": "SELECT compatible_repository FROM table_27329061_2 WHERE version = \"Old version, no longer supported: 9\" AND default_desktop_environment = \"LXDE\"",
        "context": "CREATE TABLE table_27329061_2 (compatible_repository VARCHAR, version VARCHAR, default_desktop_environment VARCHAR)",
        "question": "What is the compatible repository when the version is old version, no longer supported: 9 and default desktop environment is lxde?"
    },
    {
        "answer": "SELECT total_fertility_rate FROM table_name_60 WHERE deaths > 7.8",
        "context": "CREATE TABLE table_name_60 (total_fertility_rate VARCHAR, deaths INTEGER)",
        "question": "What was the total fertility rate that had a death rate larger than 7.8?"
    },
    {
        "answer": "SELECT default_desktop_environment FROM table_27329061_2 WHERE edition = \"KDE\" AND compatible_repository = \"Ubuntu 13.04\"",
        "context": "CREATE TABLE table_27329061_2 (default_desktop_environment VARCHAR, edition VARCHAR, compatible_repository VARCHAR)",
        "question": "What is the default desktop environment when the edition is kde and the compatible repository is ubuntu 13.04?"
    },
    {
        "answer": "SELECT AVG(2005) FROM table_name_38 WHERE 2008 > 0 AND 2007 > 310 AND average_annual = 767 AND total > 4 OFFSET 597",
        "context": "CREATE TABLE table_name_38 (total VARCHAR, average_annual VARCHAR)",
        "question": "What is the average value for 2005, when the value for 2008 is greater than 0, when the value for 2007 is greater than 310, when the Average annual is 767, and when the Total is greater than 4,597?"
    },
    {
        "answer": "SELECT SUM(births__000s_) FROM table_name_59 WHERE deaths > 7.6 AND year = \"1990-2009\"",
        "context": "CREATE TABLE table_name_59 (births__000s_ INTEGER, deaths VARCHAR, year VARCHAR)",
        "question": "What was the amount of Births (000s) that had a death rate larger than 7.6, and a Year of 1990-2009?"
    },
    {
        "answer": "SELECT year FROM table_name_83 WHERE tournament = \"1st division el salvador\" AND finish = \"champion\" AND team = \"fas\"",
        "context": "CREATE TABLE table_name_83 (year VARCHAR, team VARCHAR, tournament VARCHAR, finish VARCHAR)",
        "question": "In what Year was 1st Division El Salvador with a Finish of Champion and a Team of Fas?"
    },
    {
        "answer": "SELECT finish FROM table_name_25 WHERE team = \"platense municipal zacatecoluca\" AND tournament = \"1st division el salvador\"",
        "context": "CREATE TABLE table_name_25 (finish VARCHAR, team VARCHAR, tournament VARCHAR)",
        "question": "During the Tournament of 1st Division El Salvador, what was the Finish for the Team of Platense Municipal Zacatecoluca?"
    },
    {
        "answer": "SELECT location FROM table_29285076_2 WHERE date = \"March 17\"",
        "context": "CREATE TABLE table_29285076_2 (location VARCHAR, date VARCHAR)",
        "question": "At what location was the March 17 race held?"
    },
    {
        "answer": "SELECT location FROM table_29285076_2 WHERE fastest_lap = \"Luke Ellery\" AND winning_driver = \"Wayne Boyd\"",
        "context": "CREATE TABLE table_29285076_2 (location VARCHAR, fastest_lap VARCHAR, winning_driver VARCHAR)",
        "question": "Where was the race with Luke Ellery as fastest lap and Wayne Boyd as winning driver?"
    },
    {
        "answer": "SELECT area__km\u00b2_ FROM table_29289372_1 WHERE income_classification = \"1st Class\" AND population__2010_ = 318676",
        "context": "CREATE TABLE table_29289372_1 (area__km\u00b2_ VARCHAR, income_classification VARCHAR, population__2010_ VARCHAR)",
        "question": "When 318676 is the population of 2010 and 1st class is the income classification what is the area in kilometers squared?"
    },
    {
        "answer": "SELECT COUNT(population__2010_) FROM table_29289372_1 WHERE income_classification = \"1st Class\" AND city_municipality = \"Itogon, Benguet\"",
        "context": "CREATE TABLE table_29289372_1 (population__2010_ VARCHAR, income_classification VARCHAR, city_municipality VARCHAR)",
        "question": "When itogon, benguet is the city/municipality and 1st class is the income classification how many measurements of population in 2010?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_55 WHERE silver = 2 AND total > 10",
        "context": "CREATE TABLE table_name_55 (rank INTEGER, silver VARCHAR, total VARCHAR)",
        "question": "What is the total rank with more than 2 silver and total larger than 10?"
    },
    {
        "answer": "SELECT MAX(weeks_at__number1) FROM table_27441210_12 WHERE artist = \"K.Maro\"",
        "context": "CREATE TABLE table_27441210_12 (weeks_at__number1 INTEGER, artist VARCHAR)",
        "question": "How many weeks was K.Maro at #1?"
    },
    {
        "answer": "SELECT number_one_single_s_ FROM table_27441210_5 WHERE artist = \"Desvarieux, Jacob\"",
        "context": "CREATE TABLE table_27441210_5 (number_one_single_s_ VARCHAR, artist VARCHAR)",
        "question": "Name the number one singles for  desvarieux, jacob"
    },
    {
        "answer": "SELECT year FROM table_name_10 WHERE result = \"1st\" AND venue = \"melbourne , australia\" AND extra = \"100 m\"",
        "context": "CREATE TABLE table_name_10 (year VARCHAR, extra VARCHAR, result VARCHAR, venue VARCHAR)",
        "question": "Result of 1st, and a Venue of melbourne , australia, and a Extra of 100 m happened in which year?"
    },
    {
        "answer": "SELECT title FROM table_27450976_1 WHERE written_by = \"Scott M. Gimple\"",
        "context": "CREATE TABLE table_27450976_1 (title VARCHAR, written_by VARCHAR)",
        "question": "What is the name of the episode that was written by Scott M. Gimple?"
    },
    {
        "answer": "SELECT MAX(no_in_series) FROM table_27491610_2 WHERE directed_by = \"Skip Sudduth\"",
        "context": "CREATE TABLE table_27491610_2 (no_in_series INTEGER, directed_by VARCHAR)",
        "question": "What was the latest number in series that was directed by Skip Sudduth?"
    },
    {
        "answer": "SELECT MAX(no_in_season) FROM table_27491610_2 WHERE no_in_series = 141",
        "context": "CREATE TABLE table_27491610_2 (no_in_season INTEGER, no_in_series VARCHAR)",
        "question": "What number in season is number 141 in series?"
    },
    {
        "answer": "SELECT formed_from FROM table_275023_1 WHERE province = \"New Plymouth\"",
        "context": "CREATE TABLE table_275023_1 (formed_from VARCHAR, province VARCHAR)",
        "question": "What province was New Plymouth formed from?"
    },
    {
        "answer": "SELECT SUM(losses) FROM table_name_11 WHERE team_name = \"burnaby lakers\" AND points = 8 AND season = \"1998\" AND games < 25",
        "context": "CREATE TABLE table_name_11 (losses INTEGER, games VARCHAR, season VARCHAR, team_name VARCHAR, points VARCHAR)",
        "question": "How many losses did the Burnaby Lakers accumulate when they scored 8 points in 1998 playing less than 25 games?"
    },
    {
        "answer": "SELECT supplier FROM table_name_16 WHERE basic_shape = \"flat\" AND wrist_pad = \"no\" AND keys__x_modes_ = \"25+\"",
        "context": "CREATE TABLE table_name_16 (supplier VARCHAR, keys__x_modes_ VARCHAR, basic_shape VARCHAR, wrist_pad VARCHAR)",
        "question": "Which Supplier have a Basic shape of flat, a Wrist pad of no, and Keys (x modes) of 25+?"
    },
    {
        "answer": "SELECT location FROM table_name_5 WHERE name_of_system = \"atm (1880\u20131911) geta (1911\u20131944)\" AND traction_type = \"electric\"",
        "context": "CREATE TABLE table_name_5 (location VARCHAR, name_of_system VARCHAR, traction_type VARCHAR)",
        "question": "At what location did the event that used electric traction and system name ATM (1880\u20131911) GETA (1911\u20131944) occur?"
    },
    {
        "answer": "SELECT COUNT(start_of_stage) FROM table_275506_1 WHERE year = \"2006\"",
        "context": "CREATE TABLE table_275506_1 (start_of_stage VARCHAR, year VARCHAR)",
        "question": "How many entries for start of stage occur in the year 2006?"
    },
    {
        "answer": "SELECT to_par FROM table_name_38 WHERE country = \"united states\" AND place = \"t5\"",
        "context": "CREATE TABLE table_name_38 (to_par VARCHAR, country VARCHAR, place VARCHAR)",
        "question": "What is the to par of the player from the United States with a t5 place?"
    },
    {
        "answer": "SELECT played_by FROM table_2933761_1 WHERE occupation = \"Mathematics Student\"",
        "context": "CREATE TABLE table_2933761_1 (played_by VARCHAR, occupation VARCHAR)",
        "question": "Who played the mathematics student?"
    },
    {
        "answer": "SELECT COUNT(prison_connection) FROM table_2933761_1 WHERE name = \"Joan Leaven\"",
        "context": "CREATE TABLE table_2933761_1 (prison_connection VARCHAR, name VARCHAR)",
        "question": "How many prisons is Joan Leaven connected with?"
    },
    {
        "answer": "SELECT moving_to FROM table_name_39 WHERE year > 2005 AND rank > 5 AND name = \"isma\u00ebl bangoura\"",
        "context": "CREATE TABLE table_name_39 (moving_to VARCHAR, name VARCHAR, year VARCHAR, rank VARCHAR)",
        "question": "Isma\u00ebl Bangoura with a rank larger than 5 after the year 2005 was moving to what football club?"
    },
    {
        "answer": "SELECT COUNT(mountains_classification) FROM table_27573848_18 WHERE winner = \"Robert Gesink\"",
        "context": "CREATE TABLE table_27573848_18 (mountains_classification VARCHAR, winner VARCHAR)",
        "question": "How many times was Robert Gesink a winner?"
    },
    {
        "answer": "SELECT general_classification FROM table_29332810_14 WHERE winner = \"Ben Swift\" AND young_rider_classification = \"Cameron Meyer\"",
        "context": "CREATE TABLE table_29332810_14 (general_classification VARCHAR, winner VARCHAR, young_rider_classification VARCHAR)",
        "question": "Who is listed under the general classifcation where Ben Swift won and Cameron Meyer was listed under the young rider?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_37 WHERE year > 2005 AND moving_from = \"nancy\"",
        "context": "CREATE TABLE table_name_37 (rank INTEGER, year VARCHAR, moving_from VARCHAR)",
        "question": "Moving from Nancy after 2005, what is listed as the lowest rank?"
    },
    {
        "answer": "SELECT money_requested__\u00a3_ FROM table_name_10 WHERE company_or_product_name = \"basstoneslap\"",
        "context": "CREATE TABLE table_name_10 (money_requested__\u00a3_ VARCHAR, company_or_product_name VARCHAR)",
        "question": "How much Money is requested by BassToneSlap?"
    },
    {
        "answer": "SELECT quarterfinalists FROM table_29302816_8 WHERE runner_up = \"Andrew Pattison\"",
        "context": "CREATE TABLE table_29302816_8 (quarterfinalists VARCHAR, runner_up VARCHAR)",
        "question": "What are the quarterfinalists when the runner up is andrew pattison?"
    },
    {
        "answer": "SELECT company_or_product_name FROM table_name_83 WHERE episode = \"episode 3\" AND investing_dragon_s_ = \"deborah meaden\"",
        "context": "CREATE TABLE table_name_83 (company_or_product_name VARCHAR, episode VARCHAR, investing_dragon_s_ VARCHAR)",
        "question": "What is the name of the Company or Product that is Episode 3 and is suppoted by Investing Dragon Deborah Meaden?"
    },
    {
        "answer": "SELECT COUNT(sd) FROM table_27615896_18 WHERE status = \"Quarterfinals lost to Novak Djokovic [1]\"",
        "context": "CREATE TABLE table_27615896_18 (sd VARCHAR, status VARCHAR)",
        "question": "What is the total number of sd listings where the status is quarterfinals lost to Novak Djokovic [1]?"
    },
    {
        "answer": "SELECT winning_driver FROM table_29361707_2 WHERE pole_position = \"Roberval Andrade\" AND fastest_lap = \"Felipe Giaffone\" AND winning_team = \"RVR Corinthians Motorsport\"",
        "context": "CREATE TABLE table_29361707_2 (winning_driver VARCHAR, winning_team VARCHAR, pole_position VARCHAR, fastest_lap VARCHAR)",
        "question": "Who was the winner at the track where Roberval Andrade won pole, Felipe Giaffone had the fastest lap, and RVR Corinthians Motorsport was the winning team?"
    },
    {
        "answer": "SELECT name FROM table_name_12 WHERE directed___undirected = \"both\" AND basis = \"subgraph-centric\"",
        "context": "CREATE TABLE table_name_12 (name VARCHAR, directed___undirected VARCHAR, basis VARCHAR)",
        "question": "What is the name of the algorithm with a directed/undirected of both and a subgraph-centric basis?"
    },
    {
        "answer": "SELECT directed___undirected FROM table_name_13 WHERE induced___non_induced = \"induced\" AND counting_method = \"exact\" AND name = \"mfinder\"",
        "context": "CREATE TABLE table_name_13 (directed___undirected VARCHAR, name VARCHAR, induced___non_induced VARCHAR, counting_method VARCHAR)",
        "question": "What is the directed/undirected for mfinder, which has an induced/non-induced of induced and an exact counting method?"
    },
    {
        "answer": "SELECT MAX(subscribers__2006___thousands_) FROM table_29395291_2 WHERE provider = \"Glo Mobile\"",
        "context": "CREATE TABLE table_29395291_2 (subscribers__2006___thousands_ INTEGER, provider VARCHAR)",
        "question": "What is the maximum number of 2006 subscribers for Glo Mobile?"
    },
    {
        "answer": "SELECT opponent FROM table_name_6 WHERE outcome = \"winner\" AND surface = \"hard\" AND date = \"august 27, 2011\"",
        "context": "CREATE TABLE table_name_6 (opponent VARCHAR, date VARCHAR, outcome VARCHAR, surface VARCHAR)",
        "question": "Who is the opponent for the winner outcome on a hard surface on August 27, 2011?"
    },
    {
        "answer": "SELECT opponent FROM table_27654988_1 WHERE competition = \"Women's Cup 0 0\" AND scorers = \"Branc\u00e3o Couto 0\"",
        "context": "CREATE TABLE table_27654988_1 (opponent VARCHAR, competition VARCHAR, scorers VARCHAR)",
        "question": "Who was the opponent in the Women's Cup 0 0 where Branc\u00e3o Couto 0 is the scorer?"
    },
    {
        "answer": "SELECT municipality FROM table_name_2 WHERE area = \"outer circle south\" AND area_km\u00b2 < 368 AND county = \"akershus\" AND population > 14 OFFSET 398",
        "context": "CREATE TABLE table_name_2 (municipality VARCHAR, population VARCHAR, county VARCHAR, area VARCHAR, area_km\u00b2 VARCHAR)",
        "question": "Which municipality's area is outer circle south and smaller than 368 km in Akershus County with more than 14,398 people?"
    },
    {
        "answer": "SELECT artist FROM table_27711947_1 WHERE choreographer = \"Marcos Aguirre\" AND rating = \"Simple\"",
        "context": "CREATE TABLE table_27711947_1 (artist VARCHAR, choreographer VARCHAR, rating VARCHAR)",
        "question": "List all artists with choreographer Marcos Aguirre and a simple rating."
    },
    {
        "answer": "SELECT COUNT(remittances_2010) FROM table_2941963_1 WHERE remittances_2009 = \"19.73\"",
        "context": "CREATE TABLE table_2941963_1 (remittances_2010 VARCHAR, remittances_2009 VARCHAR)",
        "question": "how many remittances in 2010 where the remittances is 19.73?"
    },
    {
        "answer": "SELECT overall_record FROM table_2771237_1 WHERE average_attendance = 16720",
        "context": "CREATE TABLE table_2771237_1 (overall_record VARCHAR, average_attendance VARCHAR)",
        "question": "What was the overall record in the season where average attendance was 16720?"
    },
    {
        "answer": "SELECT pregame_analysts FROM table_2941848_2 WHERE trophy_presentation = \"Chris Rose\"",
        "context": "CREATE TABLE table_2941848_2 (pregame_analysts VARCHAR, trophy_presentation VARCHAR)",
        "question": "What is every pregame analyst with Chris Rose as trophy presenter?"
    },
    {
        "answer": "SELECT play_by_play_announcer FROM table_2941848_2 WHERE trophy_presentation = \"Chris Rose\"",
        "context": "CREATE TABLE table_2941848_2 (play_by_play_announcer VARCHAR, trophy_presentation VARCHAR)",
        "question": "Who is every play-by-play announcer when Chris Rose is the trophy presenter?"
    },
    {
        "answer": "SELECT score FROM table_name_93 WHERE date = \"september 25\"",
        "context": "CREATE TABLE table_name_93 (score VARCHAR, date VARCHAR)",
        "question": "Name the score for september 25"
    },
    {
        "answer": "SELECT country_of_origin FROM table_29474407_11 WHERE name__designation = \"Flieger-Doppelpistole 1919\"",
        "context": "CREATE TABLE table_29474407_11 (country_of_origin VARCHAR, name__designation VARCHAR)",
        "question": "What country made the Flieger-Doppelpistole 1919?"
    },
    {
        "answer": "SELECT score FROM table_27712702_9 WHERE date = \"January 8\"",
        "context": "CREATE TABLE table_27712702_9 (score VARCHAR, date VARCHAR)",
        "question": "What was the score of the January 8 game?"
    },
    {
        "answer": "SELECT director FROM table_29475589_3 WHERE writer_s_ = \"Nicole Dubuc Duane Capizzi\"",
        "context": "CREATE TABLE table_29475589_3 (director VARCHAR, writer_s_ VARCHAR)",
        "question": "When nicole dubuc duane capizzi is the writer who is the director?"
    },
    {
        "answer": "SELECT AVG(erp_w) FROM table_name_90 WHERE city_of_license = \"pound, virginia\" AND frequency_mhz > 91.3",
        "context": "CREATE TABLE table_name_90 (erp_w INTEGER, city_of_license VARCHAR, frequency_mhz VARCHAR)",
        "question": "Name the average ERP W when it has a city of license of pound, virginia and frequency mhz more than 91.3"
    },
    {
        "answer": "SELECT COUNT(representative) FROM table_29486189_4 WHERE first_elected = \"2008\" AND residence = \"Hanover Twp\"",
        "context": "CREATE TABLE table_29486189_4 (representative VARCHAR, first_elected VARCHAR, residence VARCHAR)",
        "question": "how many representatives from hanover twp were first elected in 2008"
    },
    {
        "answer": "SELECT MAX(game) FROM table_27722734_7 WHERE date = \"December 1\"",
        "context": "CREATE TABLE table_27722734_7 (game INTEGER, date VARCHAR)",
        "question": "Name the most game for december 1"
    },
    {
        "answer": "SELECT MIN(game) FROM table_27734577_13 WHERE high_assists = \"Josh Smith (4)\"",
        "context": "CREATE TABLE table_27734577_13 (game INTEGER, high_assists VARCHAR)",
        "question": "What is the game number where josh smith (4) had the high assists?"
    },
    {
        "answer": "SELECT COUNT(quarterfinals) FROM table_29521180_35 WHERE athlete = \"Federico Muller\"",
        "context": "CREATE TABLE table_29521180_35 (quarterfinals VARCHAR, athlete VARCHAR)",
        "question": "How many athletes were named federico muller?"
    },
    {
        "answer": "SELECT date FROM table_27756314_10 WHERE high_points = \"Michael Beasley , Martell Webster (16)\"",
        "context": "CREATE TABLE table_27756314_10 (date VARCHAR, high_points VARCHAR)",
        "question": "What is the date when the high points is michael beasley , martell webster (16)?"
    },
    {
        "answer": "SELECT maximum_peak_performance___teraflops__ FROM table_27765443_2 WHERE period_of_operation = \"October 2006 - January 2010\"",
        "context": "CREATE TABLE table_27765443_2 (maximum_peak_performance___teraflops__ VARCHAR, period_of_operation VARCHAR)",
        "question": "Name the most peak performance for october 2006 - january 2010"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_44 WHERE award_description_s_ = \"platinum\"",
        "context": "CREATE TABLE table_name_44 (year INTEGER, award_description_s_ VARCHAR)",
        "question": "What is the average year with an award of platinum?"
    },
    {
        "answer": "SELECT winnings FROM table_27781212_1 WHERE driver = \"Jeff Gordon\"",
        "context": "CREATE TABLE table_27781212_1 (winnings VARCHAR, driver VARCHAR)",
        "question": "how many winnings does jeff gordon have?"
    },
    {
        "answer": "SELECT skip__club_ FROM table_29546030_2 WHERE pa = 31 AND blank_ends = 9",
        "context": "CREATE TABLE table_29546030_2 (skip__club_ VARCHAR, pa VARCHAR, blank_ends VARCHAR)",
        "question": "Which skip (club) had 31 PA and 9 blank ends?"
    },
    {
        "answer": "SELECT catalog FROM table_name_84 WHERE label = \"alfa records\" AND format = \"cd\"",
        "context": "CREATE TABLE table_name_84 (catalog VARCHAR, label VARCHAR, format VARCHAR)",
        "question": "Name the catalog for alfa records and cd format"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_59 WHERE artist = \"queen\" AND weeks_at_number_one < 1",
        "context": "CREATE TABLE table_name_59 (year VARCHAR, artist VARCHAR, weeks_at_number_one VARCHAR)",
        "question": "What's the sum of years when the Artist of the queen were less than 1?"
    },
    {
        "answer": "SELECT result FROM table_name_90 WHERE game_site = \"soldier field\"",
        "context": "CREATE TABLE table_name_90 (result VARCHAR, game_site VARCHAR)",
        "question": "What is the result of the game that was played at Soldier Field?"
    },
    {
        "answer": "SELECT COUNT(clubs_involved) FROM table_29566686_1 WHERE leagues_entering_at_this_round = \"Allsvenskan\"",
        "context": "CREATE TABLE table_29566686_1 (clubs_involved VARCHAR, leagues_entering_at_this_round VARCHAR)",
        "question": "How many different values of clubs involved were there when the league entering at this round was allsvenskan?"
    },
    {
        "answer": "SELECT score FROM table_name_28 WHERE opponent = \"devil rays\" AND date = \"april 24\"",
        "context": "CREATE TABLE table_name_28 (score VARCHAR, opponent VARCHAR, date VARCHAR)",
        "question": "What is the score of the Devil Rays on April 24?"
    },
    {
        "answer": "SELECT COUNT(episode) FROM table_29574579_1 WHERE directed_by = \"Jamie Payne\"",
        "context": "CREATE TABLE table_29574579_1 (episode VARCHAR, directed_by VARCHAR)",
        "question": "How many episodes are directed by Jamie Payne?"
    },
    {
        "answer": "SELECT us_viewers__millions_ FROM table_2791668_1 WHERE directed_by = \"Ed Sherin\"",
        "context": "CREATE TABLE table_2791668_1 (us_viewers__millions_ VARCHAR, directed_by VARCHAR)",
        "question": "how many millions of North American people saw the episode whose director was Ed Sherin? "
    },
    {
        "answer": "SELECT h_s_asst_principal FROM table_name_47 WHERE glendale_principal = \"joyce brace\" AND year = \"2002-2003\"",
        "context": "CREATE TABLE table_name_47 (h_s_asst_principal VARCHAR, glendale_principal VARCHAR, year VARCHAR)",
        "question": "What is the H.S. Asst. principal with a Glendale principal Joyce Brace during 2002-2003?"
    },
    {
        "answer": "SELECT hs_principal FROM table_name_99 WHERE wr_principal = \"dave lovering\" AND ms_principal = \"marty pizur\"",
        "context": "CREATE TABLE table_name_99 (hs_principal VARCHAR, wr_principal VARCHAR, ms_principal VARCHAR)",
        "question": "Who is the h.s. principal with Dave Lovering as w.r. principal and Marty Pizur as m.s. principal?"
    },
    {
        "answer": "SELECT original_air_date FROM table_29584044_1 WHERE no_in_series = 31",
        "context": "CREATE TABLE table_29584044_1 (original_air_date VARCHAR, no_in_series VARCHAR)",
        "question": "What is the original air date of the episode that was number 31 in the series? "
    },
    {
        "answer": "SELECT hh_principal FROM table_name_55 WHERE hs_principal = \"jim haught\" AND maplemere_principal = \"charlie taylor\" AND wr_principal = \"rich auerbach\"",
        "context": "CREATE TABLE table_name_55 (hh_principal VARCHAR, wr_principal VARCHAR, hs_principal VARCHAR, maplemere_principal VARCHAR)",
        "question": "Who is the h.h. principal with Jim Haught as h.s. principal, Charlie Taylor as maplemere principal, and Rich Auerbach as w.r. principal?"
    },
    {
        "answer": "SELECT glendale_principal FROM table_name_58 WHERE ms_principal = \"greg smorel\" AND hs_principal = \"joleen reinholz\" AND year = \"2006-2007\"",
        "context": "CREATE TABLE table_name_58 (glendale_principal VARCHAR, year VARCHAR, ms_principal VARCHAR, hs_principal VARCHAR)",
        "question": "Who is the Glendale principal with Greg Smorel as m.s. principal and Joleen Reinholz as H.S. principal during 2006-2007?"
    },
    {
        "answer": "SELECT episode FROM table_27987623_3 WHERE viewers__millions_ = \"0.296\"",
        "context": "CREATE TABLE table_27987623_3 (episode VARCHAR, viewers__millions_ VARCHAR)",
        "question": "Which episode had viewership of 0.296 million?"
    },
    {
        "answer": "SELECT winner FROM table_name_97 WHERE general_classification = \"pavel tonkov\" AND stage = \"7\"",
        "context": "CREATE TABLE table_name_97 (winner VARCHAR, general_classification VARCHAR, stage VARCHAR)",
        "question": "Who was the winner in stage 7 with a general classification of Pavel Tonkov?"
    },
    {
        "answer": "SELECT MIN(area__km\u00b2_) FROM table_2801442_1 WHERE code = \"BW\"",
        "context": "CREATE TABLE table_2801442_1 (area__km\u00b2_ INTEGER, code VARCHAR)",
        "question": "How big (in km2) is the district with a code BW?"
    },
    {
        "answer": "SELECT MAX(season__number) FROM table_28019988_5 WHERE us_viewers__million_ = \"2.31\" AND written_by = \"Tom Garrigus\"",
        "context": "CREATE TABLE table_28019988_5 (season__number INTEGER, us_viewers__million_ VARCHAR, written_by VARCHAR)",
        "question": "What episode number of the season was written by Tom Garrigus and had 2.31 million u.s. viewers?"
    },
    {
        "answer": "SELECT COUNT(peak) FROM table_29633639_1 WHERE chinese_title = \"\u842c\u51f0\u4e4b\u738b\"",
        "context": "CREATE TABLE table_29633639_1 (peak VARCHAR, chinese_title VARCHAR)",
        "question": "how many peaks where for the chinese episode named \u842c\u51f0\u4e4b\u738b"
    },
    {
        "answer": "SELECT operator FROM table_28035004_1 WHERE bodybuilder = \"Willowbrook\"",
        "context": "CREATE TABLE table_28035004_1 (operator VARCHAR, bodybuilder VARCHAR)",
        "question": "Who is the operator when willowbrook was the bodybuilder?"
    },
    {
        "answer": "SELECT one_mora FROM table_name_95 WHERE NOT accented_mora = \"low tone\" AND gloss = \"/\u02e9okiru/ [\u00f2k\u00ec\u027d\u026f\u0301]\"",
        "context": "CREATE TABLE table_name_95 (one_mora VARCHAR, gloss VARCHAR, accented_mora VARCHAR)",
        "question": "What is the one mora for a low tone mora with a gloss of /\u02e9okiru/ [\u00f2k\u00ec\u027d\u026f\u0301]?"
    },
    {
        "answer": "SELECT COUNT(match_points) FROM table_28068063_3 WHERE eliminated_from_competition = \"B\u00e9ziers\"",
        "context": "CREATE TABLE table_28068063_3 (match_points VARCHAR, eliminated_from_competition VARCHAR)",
        "question": "How many teams eliminated b\u00e9ziers from competition?"
    },
    {
        "answer": "SELECT proceed_to_quarter_final FROM table_28068063_3 WHERE eliminated_from_competition = \"London Irish\"",
        "context": "CREATE TABLE table_28068063_3 (proceed_to_quarter_final VARCHAR, eliminated_from_competition VARCHAR)",
        "question": "Who proceeded to the quarter final when the london irish were eliminated from competition?"
    },
    {
        "answer": "SELECT opponent FROM table_name_86 WHERE method = \"submission (armbar)\" AND record = \"9-3-1\"",
        "context": "CREATE TABLE table_name_86 (opponent VARCHAR, method VARCHAR, record VARCHAR)",
        "question": "Who is the opponent of the match with a method of submission (armbar) and a 9-3-1 record?"
    },
    {
        "answer": "SELECT location FROM table_name_19 WHERE method = \"submission (armbar)\" AND opponent = \"mayra conde\"",
        "context": "CREATE TABLE table_name_19 (location VARCHAR, method VARCHAR, opponent VARCHAR)",
        "question": "What is the location of the match where the method was submission (armbar) and Mayra Conde was the opponent?"
    },
    {
        "answer": "SELECT participants_recipients FROM table_29644931_1 WHERE category = \"Best Newcomer\"",
        "context": "CREATE TABLE table_29644931_1 (participants_recipients VARCHAR, category VARCHAR)",
        "question": "Which films participated when the category was Best Newcomer?"
    },
    {
        "answer": "SELECT original_air_date FROM table_28089666_1 WHERE production_code = \"5.05\"",
        "context": "CREATE TABLE table_28089666_1 (original_air_date VARCHAR, production_code VARCHAR)",
        "question": "What original air date was the episode with production code of 5.05?"
    },
    {
        "answer": "SELECT written_by FROM table_28089666_1 WHERE production_code = \"1.01\"",
        "context": "CREATE TABLE table_28089666_1 (written_by VARCHAR, production_code VARCHAR)",
        "question": "Who wrote episode with production code 1.01?"
    },
    {
        "answer": "SELECT location FROM table_name_1 WHERE game = 7",
        "context": "CREATE TABLE table_name_1 (location VARCHAR, game VARCHAR)",
        "question": "What is the location of game 7?"
    },
    {
        "answer": "SELECT wrestler FROM table_29692554_2 WHERE method_of_elimination = \"Pinned after a spear\" AND time = \"22:50\"",
        "context": "CREATE TABLE table_29692554_2 (wrestler VARCHAR, method_of_elimination VARCHAR, time VARCHAR)",
        "question": "Who was eliminated by being pinned after a spear at  22:50?"
    },
    {
        "answer": "SELECT circuit FROM table_29686983_1 WHERE fastest_lap = \"Sam Lowes\" AND winning_rider = \"Luca Scassa\"",
        "context": "CREATE TABLE table_29686983_1 (circuit VARCHAR, fastest_lap VARCHAR, winning_rider VARCHAR)",
        "question": "what is the circuit where the fastest lap is sam lowes and the winning rider is luca scassa?"
    },
    {
        "answer": "SELECT date FROM table_name_37 WHERE final_score = \"30-17\" AND stadium = \"gillette stadium\"",
        "context": "CREATE TABLE table_name_37 (date VARCHAR, final_score VARCHAR, stadium VARCHAR)",
        "question": "When was the game at Gillette Stadium that ended in a final score of 30-17?"
    },
    {
        "answer": "SELECT original_air_date FROM table_2818164_7 WHERE written_by = \"Mark St. Germain\" AND directed_by = \"Jay Sandrich\"",
        "context": "CREATE TABLE table_2818164_7 (original_air_date VARCHAR, written_by VARCHAR, directed_by VARCHAR)",
        "question": "What is the original air date the was written by mark st. germain and direct by jay sandrich?"
    },
    {
        "answer": "SELECT year FROM table_name_74 WHERE regular_season = \"2nd, central\"",
        "context": "CREATE TABLE table_name_74 (year VARCHAR, regular_season VARCHAR)",
        "question": "What year did the Nashville Metros have the Regular Season 2nd, central?"
    },
    {
        "answer": "SELECT ___ave_on_prev_season FROM table_2970978_1 WHERE competition = \"League Two\"",
        "context": "CREATE TABLE table_2970978_1 (___ave_on_prev_season VARCHAR, competition VARCHAR)",
        "question": "What is every value for average on previous season if the competition is league two?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_78 WHERE playoffs = \"did not qualify\" AND open_cup = \"did not qualify\" AND regular_season = \"7th, southeast\"",
        "context": "CREATE TABLE table_name_78 (year INTEGER, regular_season VARCHAR, playoffs VARCHAR, open_cup VARCHAR)",
        "question": "What was the average year that the Nashville Metros did not qualify for the Playoffs, did not qualify for the Open Cup, and had the Regular Season 7th, Southeast?"
    },
    {
        "answer": "SELECT COUNT(presenter_s_) FROM table_28190363_1 WHERE name = \"Celebrity MasterChef\"",
        "context": "CREATE TABLE table_28190363_1 (presenter_s_ VARCHAR, name VARCHAR)",
        "question": "How many sets of presenters are there for the version of the show named Celebrity Masterchef?"
    },
    {
        "answer": "SELECT MAX(stolen_ends) FROM table_29704430_1",
        "context": "CREATE TABLE table_29704430_1 (stolen_ends INTEGER)",
        "question": "What is the most stolen ends?"
    },
    {
        "answer": "SELECT COUNT(*) FROM table_282413_3 WHERE ethnic_group = \"Other: Total\"",
        "context": "CREATE TABLE table_282413_3 (ethnic_group VARCHAR)",
        "question": "How many times is the ethnic group other: total?"
    },
    {
        "answer": "SELECT series__number FROM table_29747178_2 WHERE directed_by = \"John Showalter\"",
        "context": "CREATE TABLE table_29747178_2 (series__number VARCHAR, directed_by VARCHAR)",
        "question": "What is the series # when the director is john showalter?"
    },
    {
        "answer": "SELECT MAX(episode) FROM table_29773532_21 WHERE share_16_39 = \"23,22%\"",
        "context": "CREATE TABLE table_29773532_21 (episode INTEGER, share_16_39 VARCHAR)",
        "question": "Which episode had a share 16-19 of 23,22%?"
    },
    {
        "answer": "SELECT MIN(decile) FROM table_name_78 WHERE authority = \"state\" AND area = \"eketahuna\" AND roll > 44",
        "context": "CREATE TABLE table_name_78 (decile INTEGER, roll VARCHAR, authority VARCHAR, area VARCHAR)",
        "question": "Name the least decile for state authority and area of eketahuna with roll more than 44"
    },
    {
        "answer": "SELECT launched FROM table_name_91 WHERE completed = \"13 september 1934\"",
        "context": "CREATE TABLE table_name_91 (launched VARCHAR, completed VARCHAR)",
        "question": "Name the launched for 13 september 1934 completion"
    },
    {
        "answer": "SELECT pennant_number FROM table_name_43 WHERE launched = \"29 march 1934\" AND completed = \"30 october 1934\"",
        "context": "CREATE TABLE table_name_43 (pennant_number VARCHAR, launched VARCHAR, completed VARCHAR)",
        "question": "Name the pennant number for completion of 30 october 1934 and launched 29 march 1934"
    },
    {
        "answer": "SELECT points_classification_navy_blue_jersey FROM table_name_8 WHERE general_classification_yellow_jersey = \"graeme brown\"",
        "context": "CREATE TABLE table_name_8 (points_classification_navy_blue_jersey VARCHAR, general_classification_yellow_jersey VARCHAR)",
        "question": "Which Points Classification Navy Blue Jersey that has a  Jersey of Graeme Brown"
    },
    {
        "answer": "SELECT intermediate_sprints_classification_red_jersey FROM table_name_34 WHERE mountains_classification_green_jersey = \"murilo antonio fischer\" AND points_classification_navy_blue_jersey = \"jose joaquin rojas gil\"",
        "context": "CREATE TABLE table_name_34 (intermediate_sprints_classification_red_jersey VARCHAR, mountains_classification_green_jersey VARCHAR, points_classification_navy_blue_jersey VARCHAR)",
        "question": "What is the Intermediate Sprints Classification Red Jersey that has a Green Jersey of Murilo Antonio Fischer, and  Jose Joaquin Rojas Gil?"
    },
    {
        "answer": "SELECT general_classification_yellow_jersey FROM table_name_74 WHERE mountains_classification_green_jersey = \"murilo antonio fischer\" AND team_classification = \"lampre-fondital\"",
        "context": "CREATE TABLE table_name_74 (general_classification_yellow_jersey VARCHAR, mountains_classification_green_jersey VARCHAR, team_classification VARCHAR)",
        "question": "What is General Classification Yellow Jersey that has a  Murilo Antonio Fischer, and  Lampre-Fondital?"
    },
    {
        "answer": "SELECT points_classification_navy_blue_jersey FROM table_name_11 WHERE mountains_classification_green_jersey = \"yoann le boulanger\" AND team_classification = \"gerolsteiner\"",
        "context": "CREATE TABLE table_name_11 (points_classification_navy_blue_jersey VARCHAR, mountains_classification_green_jersey VARCHAR, team_classification VARCHAR)",
        "question": "What is the Points Classification Navy Blue Jersey that has  Yoann le Boulanger, and  Gerolsteiner?"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_2850912_6 WHERE player = \"Greg Strome\"",
        "context": "CREATE TABLE table_2850912_6 (pick__number INTEGER, player VARCHAR)",
        "question": "What pick was Greg Strome?"
    },
    {
        "answer": "SELECT tv_network_s_ FROM table_29799700_2 WHERE series_finale = \"May 7, 2012\"",
        "context": "CREATE TABLE table_29799700_2 (tv_network_s_ VARCHAR, series_finale VARCHAR)",
        "question": "Which TV network had its series finale on May 7, 2012?"
    },
    {
        "answer": "SELECT winner FROM table_28601467_1 WHERE result = \"Scotland won on points table\" AND runner_up = \"[[|]] 4 points\"",
        "context": "CREATE TABLE table_28601467_1 (winner VARCHAR, result VARCHAR, runner_up VARCHAR)",
        "question": "What are all the winning records when the result is Scotland won on points table and the Runner-Up result is [[|]] 4 points?"
    },
    {
        "answer": "SELECT runner_up FROM table_28601467_1 WHERE winner = \"Ireland 59 points\"",
        "context": "CREATE TABLE table_28601467_1 (runner_up VARCHAR, winner VARCHAR)",
        "question": "What is the runner-up record where winner record is Ireland 59 points?"
    },
    {
        "answer": "SELECT original_air_date FROM table_29803475_2 WHERE us_viewers__million_ = \"0.23\"",
        "context": "CREATE TABLE table_29803475_2 (original_air_date VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "What is every original air date with U.S. viewers of 0.23 million?"
    },
    {
        "answer": "SELECT final_venue FROM table_28601467_1 WHERE host_nation_s_ = \"England\" AND runner_up = \"[[|]] 4 points\" AND winner = \"[[|]] 6 points\"",
        "context": "CREATE TABLE table_28601467_1 (final_venue VARCHAR, winner VARCHAR, host_nation_s_ VARCHAR, runner_up VARCHAR)",
        "question": "What was the final venue whene England hasted the competition and the runner-up record is [[|]] 4 points and the winner record is [[|]] 6 points?"
    },
    {
        "answer": "SELECT record FROM table_name_8 WHERE score = \"7 - 2\"",
        "context": "CREATE TABLE table_name_8 (record VARCHAR, score VARCHAR)",
        "question": "What record was reached with a score of 7 - 2?"
    },
    {
        "answer": "SELECT games FROM table_name_39 WHERE player = \"roger merrett\"",
        "context": "CREATE TABLE table_name_39 (games VARCHAR, player VARCHAR)",
        "question": "What is the number of games for Roger Merrett?"
    },
    {
        "answer": "SELECT country_with_flag FROM table_298550_1 WHERE population__1_july_2005_est_ = 11346670",
        "context": "CREATE TABLE table_298550_1 (country_with_flag VARCHAR, population__1_july_2005_est_ VARCHAR)",
        "question": "What is every country with a flag with population of 11346670?"
    },
    {
        "answer": "SELECT dimensions FROM table_298883_5 WHERE reverse = \"Western sea barrage and locks at Taedong Gang\"",
        "context": "CREATE TABLE table_298883_5 (dimensions VARCHAR, reverse VARCHAR)",
        "question": "What are the dimensions of the coin with western sea barrage and locks at taedong gang on the reverse side?"
    },
    {
        "answer": "SELECT entrant FROM table_name_12 WHERE year < 1987 AND engine = \"bmw straight-4 (t/c)\" AND pts > 2",
        "context": "CREATE TABLE table_name_12 (entrant VARCHAR, pts VARCHAR, year VARCHAR, engine VARCHAR)",
        "question": "Before 1987, what is the Entrant with bmw straight-4 (t/c) as Engine and a great than 2 Pts?"
    },
    {
        "answer": "SELECT MAX(miss_water) FROM table_30008638_1 WHERE country_territory = \"Canada\"",
        "context": "CREATE TABLE table_30008638_1 (miss_water INTEGER, country_territory VARCHAR)",
        "question": "How many Miss Waters has Canada had?"
    },
    {
        "answer": "SELECT poor_law_union FROM table_28802165_1 WHERE townland = \"Marshalstown\"",
        "context": "CREATE TABLE table_28802165_1 (poor_law_union VARCHAR, townland VARCHAR)",
        "question": "What is the poor law union on Marshalstown?"
    },
    {
        "answer": "SELECT original_air_date FROM table_28859177_3 WHERE directed_by = \"Graeme Clifford\" AND written_by = \"Lindsay Sturman\"",
        "context": "CREATE TABLE table_28859177_3 (original_air_date VARCHAR, directed_by VARCHAR, written_by VARCHAR)",
        "question": "What is the original air date for episode graeme clifford directed and lindsay sturman wrote?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_61 WHERE division = \"conference\" AND league_pos = \"9th\" AND lost < 13",
        "context": "CREATE TABLE table_name_61 (points VARCHAR, lost VARCHAR, division VARCHAR, league_pos VARCHAR)",
        "question": "What is the total number of points for the conference division, a league position of 9th, and a lost result less than 13?"
    },
    {
        "answer": "SELECT nationality FROM table_2886617_4 WHERE nhl_team = \"Vancouver Canucks\"",
        "context": "CREATE TABLE table_2886617_4 (nationality VARCHAR, nhl_team VARCHAR)",
        "question": "What country does the player who joined the Vancouver Canucks originally hail from?"
    },
    {
        "answer": "SELECT nationality FROM table_2886617_3 WHERE position = \"Left Wing\" AND college_junior_club_team = \"Portland Winterhawks (WHL)\"",
        "context": "CREATE TABLE table_2886617_3 (nationality VARCHAR, position VARCHAR, college_junior_club_team VARCHAR)",
        "question": "Which nationality has left wing as the position and college/junior/team is portland winterhawks (whl)?"
    },
    {
        "answer": "SELECT nupowr_183 FROM table_3002894_4 WHERE nupowr_117 = \"0,4, or 8 MB\"",
        "context": "CREATE TABLE table_3002894_4 (nupowr_183 VARCHAR, nupowr_117 VARCHAR)",
        "question": "When 0,4, or 8 mb is the nupowr 117 what is the nupowr 183?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_52 WHERE team = \"mv agusta\" AND rank = \"13th\" AND wins < 0",
        "context": "CREATE TABLE table_name_52 (points INTEGER, wins VARCHAR, team VARCHAR, rank VARCHAR)",
        "question": "Name the least point for mv agusta and rank of 13th for wins less than 0"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_98 WHERE games > 34 AND season = \"2009-10\"",
        "context": "CREATE TABLE table_name_98 (rank INTEGER, games VARCHAR, season VARCHAR)",
        "question": "Name the least rank when games are more than 34 and the season is 2009-10"
    },
    {
        "answer": "SELECT how_ashtagrama_iyers_say_it FROM table_name_6 WHERE pure_tamil = \"engal veetil, engal agathil\"",
        "context": "CREATE TABLE table_name_6 (how_ashtagrama_iyers_say_it VARCHAR, pure_tamil VARCHAR)",
        "question": "Name how ashtagrama lyers say it for engal veetil, engal agathil"
    },
    {
        "answer": "SELECT english_meaning FROM table_name_8 WHERE how_other_tamils_say_it = \"engey poringo\"",
        "context": "CREATE TABLE table_name_8 (english_meaning VARCHAR, how_other_tamils_say_it VARCHAR)",
        "question": "Name the english meaning for engey poringo"
    },
    {
        "answer": "SELECT high_points FROM table_30049462_5 WHERE team = \"Detroit\"",
        "context": "CREATE TABLE table_30049462_5 (high_points VARCHAR, team VARCHAR)",
        "question": "in the detroit team who made the high points"
    },
    {
        "answer": "SELECT how_other_iyers_say_it FROM table_name_22 WHERE how_ashtagrama_iyers_say_it = \"enga ullale\"",
        "context": "CREATE TABLE table_name_22 (how_other_iyers_say_it VARCHAR, how_ashtagrama_iyers_say_it VARCHAR)",
        "question": "Name how other lyers say enga ullale"
    },
    {
        "answer": "SELECT COUNT(built) FROM table_name_68 WHERE registry = \"united kingdom\" AND passengers = 1 OFFSET 300",
        "context": "CREATE TABLE table_name_68 (built VARCHAR, registry VARCHAR, passengers VARCHAR)",
        "question": "What's the total built by the United Kingdom and holds 1,300 passengers?"
    },
    {
        "answer": "SELECT MAX(number_of_dairy_cows) FROM table_29012710_1 WHERE province = \"British Columbia\"",
        "context": "CREATE TABLE table_29012710_1 (number_of_dairy_cows INTEGER, province VARCHAR)",
        "question": "what is the most amount of cattle where they live in british columbia"
    },
    {
        "answer": "SELECT COUNT(province) FROM table_29012710_1 WHERE number_of_dairy_cows = 13000",
        "context": "CREATE TABLE table_29012710_1 (province VARCHAR, number_of_dairy_cows VARCHAR)",
        "question": "what is the most number where cattle is 13000"
    },
    {
        "answer": "SELECT COUNT(high_rebounds) FROM table_30054758_3 WHERE high_points = \"Inge \u2013 19\"",
        "context": "CREATE TABLE table_30054758_3 (high_rebounds VARCHAR, high_points VARCHAR)",
        "question": "How many entries are there for  high rebounds when high points is inge \u2013 19?"
    },
    {
        "answer": "SELECT state_ranked_in_partisan_order FROM table_name_28 WHERE percentage_republicans = \"67%\" AND republican__democratic = \"24/12\"",
        "context": "CREATE TABLE table_name_28 (state_ranked_in_partisan_order VARCHAR, percentage_republicans VARCHAR, republican__democratic VARCHAR)",
        "question": "Which state has 67% Republicans and a ratio of 24/12 of Republicans to Democrats?"
    },
    {
        "answer": "SELECT production_code FROM table_29054902_1 WHERE us_viewers__million_ = \"3.81\"",
        "context": "CREATE TABLE table_29054902_1 (production_code VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "What is the production code of the episode that was watched by 3.81 million U.S. viewers? "
    },
    {
        "answer": "SELECT republican__democratic FROM table_name_91 WHERE state_ranked_in_partisan_order = \"south carolina\"",
        "context": "CREATE TABLE table_name_91 (republican__democratic VARCHAR, state_ranked_in_partisan_order VARCHAR)",
        "question": "What is the ratio of Republicans to Democrats in South Carolina?"
    },
    {
        "answer": "SELECT MAX(series__number) FROM table_29087004_2 WHERE united_states_original_airdate = \"December 24, 2010\"",
        "context": "CREATE TABLE table_29087004_2 (series__number INTEGER, united_states_original_airdate VARCHAR)",
        "question": "What number episode in the series had and original United States air date of December 24, 2010?"
    },
    {
        "answer": "SELECT written_by FROM table_29087004_2 WHERE directed_by = \"Jos Humphrey\" AND canada_original_airdate = \"Unknown\" AND united_states_original_airdate = \"August 27, 2011\"",
        "context": "CREATE TABLE table_29087004_2 (written_by VARCHAR, united_states_original_airdate VARCHAR, directed_by VARCHAR, canada_original_airdate VARCHAR)",
        "question": "Who wrote the episode directed by Jos Humphrey that had an original Canadian air date that was unknown and a United States original air date of August 27, 2011?"
    },
    {
        "answer": "SELECT republican_seat_plurality FROM table_name_18 WHERE state_ranked_in_partisan_order = \"north carolina\"",
        "context": "CREATE TABLE table_name_18 (republican_seat_plurality VARCHAR, state_ranked_in_partisan_order VARCHAR)",
        "question": "What is the Republican seat plurality of North Carolina?"
    },
    {
        "answer": "SELECT thurs_25_aug FROM table_30058355_2 WHERE fri_26_aug = \"19' 30.70 116.023mph\"",
        "context": "CREATE TABLE table_30058355_2 (thurs_25_aug VARCHAR, fri_26_aug VARCHAR)",
        "question": "What shows for thurs 25 aug when fri 26 aug is 19' 30.70 116.023mph?"
    },
    {
        "answer": "SELECT length FROM table_30062172_3 WHERE round = 1 AND gt3_winner = \"David Ashburn Richard Westbrook\"",
        "context": "CREATE TABLE table_30062172_3 (length VARCHAR, round VARCHAR, gt3_winner VARCHAR)",
        "question": "When  david ashburn richard westbrook is the gt3 winner and 1 is the round what is the length?"
    },
    {
        "answer": "SELECT gt4_winner FROM table_30062172_3 WHERE circuit = \"Donington Park\" AND gt3_winner = \"Charles Bateman Michael Lyons\"",
        "context": "CREATE TABLE table_30062172_3 (gt4_winner VARCHAR, circuit VARCHAR, gt3_winner VARCHAR)",
        "question": "When charles bateman michael lyons is the gt3 winner and donington park is the circuit who is the gt4 winner?"
    },
    {
        "answer": "SELECT MAX(appearances) FROM table_29160596_1 WHERE top_mc = \"Meek Mill\"",
        "context": "CREATE TABLE table_29160596_1 (appearances INTEGER, top_mc VARCHAR)",
        "question": "How many appearances by Meek Mill?"
    },
    {
        "answer": "SELECT COUNT(number_of_troops) FROM table_30108346_1 WHERE troops_per_$1_billion___usd___gdp = \"2.45\"",
        "context": "CREATE TABLE table_30108346_1 (number_of_troops VARCHAR, troops_per_$1_billion___usd___gdp VARCHAR)",
        "question": "Name the number of troops for troops per $1 billion being 2.45"
    },
    {
        "answer": "SELECT COUNT(troops_per_one_million_population) FROM table_30108346_1 WHERE troops_per_$1_billion___usd___gdp = \"2.76\"",
        "context": "CREATE TABLE table_30108346_1 (troops_per_one_million_population VARCHAR, troops_per_$1_billion___usd___gdp VARCHAR)",
        "question": "Name the total number of troops per one million being 2.76"
    },
    {
        "answer": "SELECT player FROM table_30108930_6 WHERE college = \"Howard\"",
        "context": "CREATE TABLE table_30108930_6 (player VARCHAR, college VARCHAR)",
        "question": "Which player(s) played at Howard college?"
    },
    {
        "answer": "SELECT start FROM table_name_11 WHERE finish = \"32\" AND laps > 6",
        "context": "CREATE TABLE table_name_11 (start VARCHAR, finish VARCHAR, laps VARCHAR)",
        "question": "Which start has 32 as the finish and laps more than 6?"
    },
    {
        "answer": "SELECT poles FROM table_29434211_1 WHERE series = \"European F3 Open\"",
        "context": "CREATE TABLE table_29434211_1 (poles VARCHAR, series VARCHAR)",
        "question": "How many poles does the European F3 Open series have?"
    },
    {
        "answer": "SELECT civil_parish FROM table_30120547_1 WHERE townland = \"Cappanaboul\"",
        "context": "CREATE TABLE table_30120547_1 (civil_parish VARCHAR, townland VARCHAR)",
        "question": "What is the civil parish of the cappanaboul townland?"
    },
    {
        "answer": "SELECT special_notes FROM table_name_91 WHERE issue_price < 24.95 AND theme = \"edmonton oilers\"",
        "context": "CREATE TABLE table_name_91 (special_notes VARCHAR, issue_price VARCHAR, theme VARCHAR)",
        "question": "What are the special notes for an issue price under 24.95 with an edmonton oilers theme?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_10 WHERE issue_price > 15.95 AND special_notes = \"from edmonton oilers gift set\"",
        "context": "CREATE TABLE table_name_10 (year VARCHAR, issue_price VARCHAR, special_notes VARCHAR)",
        "question": "What year has an issue price over 15.95, and a special notes from edmonton oilers gift set?"
    },
    {
        "answer": "SELECT area__acres__ FROM table_30120556_1 WHERE civil_parish = \"Kilworth\" AND townland = \"Monadrishane\"",
        "context": "CREATE TABLE table_30120556_1 (area__acres__ VARCHAR, civil_parish VARCHAR, townland VARCHAR)",
        "question": "What is the area of the civil parish kilworth and townland monadrishane?"
    },
    {
        "answer": "SELECT COUNT(barony) FROM table_30120556_1 WHERE townland = \"Ballyvadona\"",
        "context": "CREATE TABLE table_30120556_1 (barony VARCHAR, townland VARCHAR)",
        "question": "How many barony's appear when Ballyvadona is the townland."
    },
    {
        "answer": "SELECT host_team FROM table_name_24 WHERE visiting_team = \"baltimore ravens\"",
        "context": "CREATE TABLE table_name_24 (host_team VARCHAR, visiting_team VARCHAR)",
        "question": "Who hosted the visiting team Baltimore Ravens?"
    },
    {
        "answer": "SELECT COUNT(area__acres__) FROM table_30120560_1 WHERE townland = \"Brittas\"",
        "context": "CREATE TABLE table_30120560_1 (area__acres__ VARCHAR, townland VARCHAR)",
        "question": "what is the number of areas where the townland is brittas?"
    },
    {
        "answer": "SELECT MIN(area__acres__) FROM table_30120633_1 WHERE townland = \"Clashroe\"",
        "context": "CREATE TABLE table_30120633_1 (area__acres__ INTEGER, townland VARCHAR)",
        "question": "How few acres is the area of Clashroe?"
    },
    {
        "answer": "SELECT date FROM table_name_34 WHERE visiting_team = \"new york giants\"",
        "context": "CREATE TABLE table_name_34 (date VARCHAR, visiting_team VARCHAR)",
        "question": "What date did the New York Giants play as a visiting team?"
    },
    {
        "answer": "SELECT nhl_team FROM table_name_59 WHERE nationality = \"canada\" AND position = \"right wing\" AND pick__number = \"43\"",
        "context": "CREATE TABLE table_name_59 (nhl_team VARCHAR, pick__number VARCHAR, nationality VARCHAR, position VARCHAR)",
        "question": "What team draft a player from Canada that was picked #43 and plays right wing?"
    },
    {
        "answer": "SELECT area__acres__ FROM table_30121075_1 WHERE poor_law_union = \"Skibbereen\" AND townland = \"Knockmore\"",
        "context": "CREATE TABLE table_30121075_1 (area__acres__ VARCHAR, poor_law_union VARCHAR, townland VARCHAR)",
        "question": "What is the area when the poor law union is skibbereen and the townland is knockmore?"
    },
    {
        "answer": "SELECT MAX(games) FROM table_name_27 WHERE goals_against < 14 AND wins > 1 AND draws < 2 AND goals_for = 3",
        "context": "CREATE TABLE table_name_27 (games INTEGER, goals_for VARCHAR, draws VARCHAR, goals_against VARCHAR, wins VARCHAR)",
        "question": "what's the number of games with a Goals Against smaller than 14, and a Wins larger than 1, and a Draws smaller than 2, and a Goals For of 3?"
    },
    {
        "answer": "SELECT COUNT(pick__number) FROM table_29626583_1 WHERE affiliation = \"University of Akron Reading United Michigan Bucks\"",
        "context": "CREATE TABLE table_29626583_1 (pick__number VARCHAR, affiliation VARCHAR)",
        "question": "how many pick# does the university of akron reading united michigan bucks affiliation have"
    },
    {
        "answer": "SELECT position FROM table_29626583_1 WHERE affiliation = \"United States U-20\"",
        "context": "CREATE TABLE table_29626583_1 (position VARCHAR, affiliation VARCHAR)",
        "question": "what is the position for the united states u-20 affiliation "
    },
    {
        "answer": "SELECT 1985 FROM table_30133_3 WHERE gdp_as_of_2012_after_purchasing_power_parity__ppp__calculations__usd_billions_ = \"369.38\"",
        "context": "CREATE TABLE table_30133_3 (gdp_as_of_2012_after_purchasing_power_parity__ppp__calculations__usd_billions_ VARCHAR)",
        "question": "What is the 1985 value for the year when GDP as of 2012 after PPP was 369.38?"
    },
    {
        "answer": "SELECT COUNT(gdp_as_of_2012_after_purchasing_power_parity__ppp__calculations__usd_billions_) FROM table_30133_3 WHERE 2012 = 23113",
        "context": "CREATE TABLE table_30133_3 (gdp_as_of_2012_after_purchasing_power_parity__ppp__calculations__usd_billions_ VARCHAR)",
        "question": "How many GDPs as of 2012 after PPP values are associated with a 2012 value of 23113?"
    },
    {
        "answer": "SELECT fast_laps FROM table_name_28 WHERE series = \"world series by nissan\" AND races = \"6\" AND points = \"30\"",
        "context": "CREATE TABLE table_name_28 (fast_laps VARCHAR, points VARCHAR, series VARCHAR, races VARCHAR)",
        "question": "How many fast laps are in 6 races with 30 points in the World Series by Nissan?"
    },
    {
        "answer": "SELECT train_number FROM table_29770377_1 WHERE train_name = \"Island Express\" AND destination = \"Kanniyakumari\"",
        "context": "CREATE TABLE table_29770377_1 (train_number VARCHAR, train_name VARCHAR, destination VARCHAR)",
        "question": "What is the train number for the train name island express with a destination of kanniyakumari?"
    },
    {
        "answer": "SELECT COUNT(reservation_for_sc_st) FROM table_29785324_4 WHERE constituency_no = 191",
        "context": "CREATE TABLE table_29785324_4 (reservation_for_sc_st VARCHAR, constituency_no VARCHAR)",
        "question": "How many reservations for sc/st are there in constituency 191?"
    },
    {
        "answer": "SELECT film FROM table_name_10 WHERE award = \"troisi\u00e8me prix\" AND year < 2010 AND director = \"jan komasa\"",
        "context": "CREATE TABLE table_name_10 (film VARCHAR, director VARCHAR, award VARCHAR, year VARCHAR)",
        "question": "Award of troisi\u00e8me prix, and a Year smaller than 2010, and a Director of jan komasa is what film?"
    },
    {
        "answer": "SELECT chromosomal_location FROM table_29871617_1 WHERE name = \"IL-1\u03b2\"",
        "context": "CREATE TABLE table_29871617_1 (chromosomal_location VARCHAR, name VARCHAR)",
        "question": "What is the chromosomal location of il-1\u03b2?"
    },
    {
        "answer": "SELECT coreceptor FROM table_29871617_1 WHERE chromosomal_location = \"11q22.2-q22.3\"",
        "context": "CREATE TABLE table_29871617_1 (coreceptor VARCHAR, chromosomal_location VARCHAR)",
        "question": "What are the coreceptors of the chromosomes in that location 11q22.2-q22.3?"
    },
    {
        "answer": "SELECT chromosomal_location FROM table_29871617_1 WHERE name = \"IL-36\u03b2\"",
        "context": "CREATE TABLE table_29871617_1 (chromosomal_location VARCHAR, name VARCHAR)",
        "question": "Where is il-36\u03b2 located?"
    },
    {
        "answer": "SELECT COUNT(synthesis) FROM table_30057479_1 WHERE output_power = \"5~16.2 pW per cycle (calculated)\"",
        "context": "CREATE TABLE table_30057479_1 (synthesis VARCHAR, output_power VARCHAR)",
        "question": "How many synthesis are there for 5~16.2 pw per cycle (calculated) output power?"
    },
    {
        "answer": "SELECT score FROM table_name_96 WHERE competition = \"friendly\" AND venue = \"vasil levski national stadium, sofia\"",
        "context": "CREATE TABLE table_name_96 (score VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "What score did vasil levski national stadium, sofia, which was friendly during competition, earn?"
    },
    {
        "answer": "SELECT nationality FROM table_name_68 WHERE nhl_team = \"washington capitals\"",
        "context": "CREATE TABLE table_name_68 (nationality VARCHAR, nhl_team VARCHAR)",
        "question": "What is the nationality of the Washington Capitals?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_25 WHERE record = \"3-5\"",
        "context": "CREATE TABLE table_name_25 (attendance INTEGER, record VARCHAR)",
        "question": "What is the least attendance that has 3-5 as a record?"
    },
    {
        "answer": "SELECT date FROM table_30073089_2 WHERE location = \"S. Valentino Alla Muta , Italia\"",
        "context": "CREATE TABLE table_30073089_2 (date VARCHAR, location VARCHAR)",
        "question": "Name the date for  s. valentino alla muta , italia"
    },
    {
        "answer": "SELECT date FROM table_name_62 WHERE opponent = \"northwestern\"",
        "context": "CREATE TABLE table_name_62 (date VARCHAR, opponent VARCHAR)",
        "question": "What was the date of the game against Northwestern?"
    },
    {
        "answer": "SELECT competition FROM table_name_51 WHERE year > 1980 AND score = \"0:5\" AND location = \"jerusalem\"",
        "context": "CREATE TABLE table_name_51 (competition VARCHAR, location VARCHAR, year VARCHAR, score VARCHAR)",
        "question": "Which competition occurred after 1980 with a score of 0:5 in Jerusalem?"
    },
    {
        "answer": "SELECT result FROM table_name_17 WHERE venue = \"dakar , senegal\" AND date = \"3 september 2011\" AND score = \"2\u20130\"",
        "context": "CREATE TABLE table_name_17 (result VARCHAR, score VARCHAR, venue VARCHAR, date VARCHAR)",
        "question": "What was the result at dakar , senegal, on 3 september 2011, and with a Score of 2\u20130?"
    },
    {
        "answer": "SELECT time FROM table_name_31 WHERE rank > 3 AND name = \"andrey kapralov\"",
        "context": "CREATE TABLE table_name_31 (time VARCHAR, rank VARCHAR, name VARCHAR)",
        "question": "Which time has a Rank larger than 3, and a Name of andrey kapralov?"
    },
    {
        "answer": "SELECT COUNT(s_asset__billion_) AS $_ FROM table_name_14 WHERE headquarters = \"stockholm, sweden\" AND market_value__billion_$_ < 39.8 AND revenue__billion_$__ > 5.8 AND profits__billion_$_ = 1.1",
        "context": "CREATE TABLE table_name_14 (s_asset__billion_ VARCHAR, profits__billion_$_ VARCHAR, revenue__billion_$__ VARCHAR, headquarters VARCHAR, market_value__billion_$_ VARCHAR)",
        "question": "How much is the total assets of a company based in Stockholm, Sweden with a market capitalization smaller than 39.8 with revenues greater than 5.8 and profit of 1.1?"
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_name_28 WHERE name = \"ken walter\" AND overall > 195",
        "context": "CREATE TABLE table_name_28 (pick__number INTEGER, name VARCHAR, overall VARCHAR)",
        "question": "What is Ken Walter's lowest pick number with an overall pick number larger than 195?"
    },
    {
        "answer": "SELECT COUNT(current_account_balance__percent_of_gdp_) FROM table_30133_1 WHERE gdp_at_constant_prices_growth_rate__percent_change_ = \"4.6\"",
        "context": "CREATE TABLE table_30133_1 (current_account_balance__percent_of_gdp_ VARCHAR, gdp_at_constant_prices_growth_rate__percent_change_ VARCHAR)",
        "question": "How many current account balances are associated with GDP at constant prices growth rates of 4.6?"
    },
    {
        "answer": "SELECT COUNT(export_volume_of_goods_and_services__percent_change_) FROM table_30133_1 WHERE gdp_at_constant_prices__thb_trillions_ = \"3.072\"",
        "context": "CREATE TABLE table_30133_1 (export_volume_of_goods_and_services__percent_change_ VARCHAR, gdp_at_constant_prices__thb_trillions_ VARCHAR)",
        "question": "How many export volume of goods/services values are associated with GDP at constant prices values of 3.072?"
    },
    {
        "answer": "SELECT COUNT(export_volume_of_goods_and_services__percent_change_) FROM table_30133_1 WHERE gdp_at_current_prices__usd_billions_ = \"161.340\"",
        "context": "CREATE TABLE table_30133_1 (export_volume_of_goods_and_services__percent_change_ VARCHAR, gdp_at_current_prices__usd_billions_ VARCHAR)",
        "question": "How many export volume of goods and services values are associated with GDP at current prices of 161.340?"
    },
    {
        "answer": "SELECT current_account_balance__percent_of_gdp_ FROM table_30133_1 WHERE export_volume_of_goods_and_services__percent_change_ = \"-4.2\"",
        "context": "CREATE TABLE table_30133_1 (current_account_balance__percent_of_gdp_ VARCHAR, export_volume_of_goods_and_services__percent_change_ VARCHAR)",
        "question": "What is the current account balance for an export volume of goods and service value of -4.2?"
    },
    {
        "answer": "SELECT current_account_balance__percent_of_gdp_ FROM table_30133_1 WHERE gdp_at_current_prices__usd_billions_ = \"142.640\"",
        "context": "CREATE TABLE table_30133_1 (current_account_balance__percent_of_gdp_ VARCHAR, gdp_at_current_prices__usd_billions_ VARCHAR)",
        "question": "What is the current account balance for a GDP at current prices of 142.640?"
    },
    {
        "answer": "SELECT chassis FROM table_name_55 WHERE engine = \"maserati straight-6\" AND entrant = \"officine alfieri maserati\" AND points < 6",
        "context": "CREATE TABLE table_name_55 (chassis VARCHAR, points VARCHAR, engine VARCHAR, entrant VARCHAR)",
        "question": "What is the chassis of Officine Alfieri Maserati with a Maserati Straight-6 engine and fewer than 6 points?"
    },
    {
        "answer": "SELECT election_date FROM table_name_49 WHERE member = \"william richmond category:articles with hcards\"",
        "context": "CREATE TABLE table_name_49 (election_date VARCHAR, member VARCHAR)",
        "question": "What is the Election date for Member william richmond category:articles with hcards?"
    },
    {
        "answer": "SELECT electorate FROM table_name_37 WHERE member = \"dingley brittin category:articles with hcards\"",
        "context": "CREATE TABLE table_name_37 (electorate VARCHAR, member VARCHAR)",
        "question": "What electorate does Member dingley brittin category:articles with hcards represent?"
    },
    {
        "answer": "SELECT location FROM table_name_54 WHERE classification = \"ncaa division ii\" AND institution = \"franklin pierce university\"",
        "context": "CREATE TABLE table_name_54 (location VARCHAR, classification VARCHAR, institution VARCHAR)",
        "question": "Where is NCAA division ii Franklin Pierce University located at?"
    },
    {
        "answer": "SELECT district_attorney FROM table_name_22 WHERE position = \"bureau chief ada\"",
        "context": "CREATE TABLE table_name_22 (district_attorney VARCHAR, position VARCHAR)",
        "question": "Tell me the DA for bureau chief ada"
    },
    {
        "answer": "SELECT classification FROM table_name_4 WHERE current_conference = \"nec\" AND location = \"new britain, connecticut\"",
        "context": "CREATE TABLE table_name_4 (classification VARCHAR, current_conference VARCHAR, location VARCHAR)",
        "question": "What is the classification for the school in the NEC Conference located in New Britain, Connecticut?"
    },
    {
        "answer": "SELECT institution FROM table_name_48 WHERE classification = \"ncaa division i\" AND current_conference = \"nec\" AND nickname = \"blue devils\"",
        "context": "CREATE TABLE table_name_48 (institution VARCHAR, nickname VARCHAR, classification VARCHAR, current_conference VARCHAR)",
        "question": "What institution is a NCAA Division i school and part of the NEC conference with a nickname the Blue Devils?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_57 WHERE location = \"moscow, ussr\" AND date = \"15 february 1971\"",
        "context": "CREATE TABLE table_name_57 (score_in_the_final VARCHAR, location VARCHAR, date VARCHAR)",
        "question": "Name the score for moscow, ussr 15 february 1971"
    },
    {
        "answer": "SELECT MAX(heat_rank) FROM table_name_88 WHERE overall_rank = \"t63\" AND time < 25.47",
        "context": "CREATE TABLE table_name_88 (heat_rank INTEGER, overall_rank VARCHAR, time VARCHAR)",
        "question": "I want to know the highest heat rank for overall rank of t63 and time less than 25.47"
    },
    {
        "answer": "SELECT MAX(yards) FROM table_name_48 WHERE rushes < 51 AND games > 12",
        "context": "CREATE TABLE table_name_48 (yards INTEGER, rushes VARCHAR, games VARCHAR)",
        "question": "What was the highest number of yards in years where there were fewer than 51 rushes and more than 12 games?"
    },
    {
        "answer": "SELECT director FROM table_name_54 WHERE role = \"john travers\"",
        "context": "CREATE TABLE table_name_54 (director VARCHAR, role VARCHAR)",
        "question": "Who directed the movie when John Wayne played the role of John Travers?"
    },
    {
        "answer": "SELECT format FROM table_name_67 WHERE region = \"worldwide\" AND date = \"july 22, 2008\"",
        "context": "CREATE TABLE table_name_67 (format VARCHAR, region VARCHAR, date VARCHAR)",
        "question": "Tell me the format for worldwide region july 22, 2008"
    },
    {
        "answer": "SELECT stage FROM table_name_13 WHERE trofeo_fast_team = \"gewiss playbus\" AND points_classification = \"fabrizio guidi\" AND winner = \"fabiano fontanelli\"",
        "context": "CREATE TABLE table_name_13 (stage VARCHAR, winner VARCHAR, trofeo_fast_team VARCHAR, points_classification VARCHAR)",
        "question": "What is the stage of Fabiano Fontanelli, who had a Trofeo Fast Team of Gewiss Playbus and a point classification of Fabrizio Guidi?"
    },
    {
        "answer": "SELECT date FROM table_name_4 WHERE competition = \"friendly\" AND score = \"2\u20131\" AND venue = \"philadelphia , pennsylvania\"",
        "context": "CREATE TABLE table_name_4 (date VARCHAR, venue VARCHAR, competition VARCHAR, score VARCHAR)",
        "question": "When did a Competition of friendly, and a Score of 2\u20131, and a Venue of philadelphia , pennsylvania occur?"
    },
    {
        "answer": "SELECT transfer_window FROM table_name_30 WHERE transfer_fee = \"free\" AND moving_to = \"norwich city\"",
        "context": "CREATE TABLE table_name_30 (transfer_window VARCHAR, transfer_fee VARCHAR, moving_to VARCHAR)",
        "question": "What is the Transfer window, when the Transfer fee is \"free\", and when the item \"Moving to\" is Norwich City?"
    },
    {
        "answer": "SELECT test_career FROM table_name_98 WHERE player = \"mushfiqur rahim\"",
        "context": "CREATE TABLE table_name_98 (test_career VARCHAR, player VARCHAR)",
        "question": "When was Mushfiqur Rahim's test career?"
    },
    {
        "answer": "SELECT date FROM table_name_53 WHERE method = \"knockout\" AND round > 2 AND opponent = \"barry prior\"",
        "context": "CREATE TABLE table_name_53 (date VARCHAR, opponent VARCHAR, method VARCHAR, round VARCHAR)",
        "question": "When did the opponent knockout Barry Prior in more than 2 rounds?"
    },
    {
        "answer": "SELECT host FROM table_name_85 WHERE region = \"midwest\" AND venue = \"thomas assembly center\"",
        "context": "CREATE TABLE table_name_85 (host VARCHAR, region VARCHAR, venue VARCHAR)",
        "question": "Tell me the host for midwest thomas assembly center"
    },
    {
        "answer": "SELECT score FROM table_name_35 WHERE competition = \"vfl reserves\" AND venue = \"mcg\" AND year = \"1971\"",
        "context": "CREATE TABLE table_name_35 (score VARCHAR, year VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "In 1971 at MCG, what was the score of the VFL Reserves?"
    },
    {
        "answer": "SELECT venue FROM table_name_51 WHERE score = \"4.10 (34) - 8.12 (60)\"",
        "context": "CREATE TABLE table_name_51 (venue VARCHAR, score VARCHAR)",
        "question": "Where was the match with a score of 4.10 (34) - 8.12 (60)?"
    },
    {
        "answer": "SELECT score FROM table_name_62 WHERE record = \"28\u201319\"",
        "context": "CREATE TABLE table_name_62 (score VARCHAR, record VARCHAR)",
        "question": "What was the score of the game when the record was 28\u201319?"
    },
    {
        "answer": "SELECT bbc_two_rank FROM table_name_2 WHERE bbc_one_rank = \"1st\" AND bbc_one_total_viewing = \"9,840,000\"",
        "context": "CREATE TABLE table_name_2 (bbc_two_rank VARCHAR, bbc_one_rank VARCHAR, bbc_one_total_viewing VARCHAR)",
        "question": "What is the BBC 2 rank when BBC 1 is 1st rank and the total viewing is 9,840,000?"
    },
    {
        "answer": "SELECT constituency FROM table_name_41 WHERE party = \"alliance\" AND election < 1997 AND position = 2 AND candidate = \"seamus close\"",
        "context": "CREATE TABLE table_name_41 (constituency VARCHAR, candidate VARCHAR, position VARCHAR, party VARCHAR, election VARCHAR)",
        "question": "Which Alliance Constituency has Seamus Close, position 2 and an election smaller than 1997?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_4 WHERE team = \"navy\" AND lost > 11",
        "context": "CREATE TABLE table_name_4 (points INTEGER, team VARCHAR, lost VARCHAR)",
        "question": "How many points for the navy team that lost over 11?"
    },
    {
        "answer": "SELECT MIN(year_of_recording) FROM table_name_63 WHERE orchestra = \"royal philharmonic orchestra\" AND record_company = \"decca records\"",
        "context": "CREATE TABLE table_name_63 (year_of_recording INTEGER, orchestra VARCHAR, record_company VARCHAR)",
        "question": "What is the oldest year that the Royal Philharmonic Orchestra released a record with Decca Records?"
    },
    {
        "answer": "SELECT MIN(interview) FROM table_name_46 WHERE state = \"oklahoma\" AND swimsuit < 8.8",
        "context": "CREATE TABLE table_name_46 (interview INTEGER, state VARCHAR, swimsuit VARCHAR)",
        "question": "Tell me the lowest interview for oklahoma and swimsuit less than 8.8"
    },
    {
        "answer": "SELECT DISTINCT t1.fname, t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = \"Google\"",
        "context": "CREATE TABLE authorship (authid VARCHAR, instid VARCHAR); CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR); CREATE TABLE inst (instid VARCHAR, name VARCHAR)",
        "question": "Which authors belong to the institution \"Google\"? Show the first names and last names."
    },
    {
        "answer": "SELECT AVG(average) FROM table_name_54 WHERE evening_gown = 7.52 AND swimsuit > 7.78",
        "context": "CREATE TABLE table_name_54 (average INTEGER, evening_gown VARCHAR, swimsuit VARCHAR)",
        "question": "I want the average for evening gown of 7.52 and swimsuit larger than 7.78"
    },
    {
        "answer": "SELECT MAX(interview) FROM table_name_19 WHERE state = \"north carolina\" AND evening_gown > 7.68",
        "context": "CREATE TABLE table_name_19 (interview INTEGER, state VARCHAR, evening_gown VARCHAR)",
        "question": "Tell me the highest interview for north carolina and evening gown more than 7.68"
    },
    {
        "answer": "SELECT ncaa_tourn_appearances FROM table_name_3 WHERE conference_titles > \"0\" AND ncaa_titles = \"0\" AND coach = \"lou watson\"",
        "context": "CREATE TABLE table_name_3 (ncaa_tourn_appearances VARCHAR, coach VARCHAR, conference_titles VARCHAR, ncaa_titles VARCHAR)",
        "question": "Which NCAA Tournament Appearances have Conference Titles that are larger than 0, NCAA Titles of 0, and were coached by Lou Watson?"
    },
    {
        "answer": "SELECT driver_s FROM table_name_81 WHERE class = \"sports car\" AND race_title = \"xxiv gran premio di pescara\"",
        "context": "CREATE TABLE table_name_81 (driver_s VARCHAR, class VARCHAR, race_title VARCHAR)",
        "question": "Who won the XXIV Gran Premio di Pescara in the sports car class?"
    },
    {
        "answer": "SELECT surface FROM table_name_22 WHERE tournament = \"citt\u00e0 di caltanissetta\"",
        "context": "CREATE TABLE table_name_22 (surface VARCHAR, tournament VARCHAR)",
        "question": "What surface was the citt\u00e0 di caltanissetta played on?"
    },
    {
        "answer": "SELECT COUNT(erp_w) FROM table_name_63 WHERE frequency_mhz = \"107.9 fm\"",
        "context": "CREATE TABLE table_name_63 (erp_w VARCHAR, frequency_mhz VARCHAR)",
        "question": "How much is the total ERP W for an 107.9 fm freqeuncy MHz?"
    },
    {
        "answer": "SELECT tournament FROM table_name_85 WHERE outcome = \"winner\" AND score = \"6\u20133, 7\u20135\" AND partner = \"kimberly po-messerli\"",
        "context": "CREATE TABLE table_name_85 (tournament VARCHAR, partner VARCHAR, outcome VARCHAR, score VARCHAR)",
        "question": "Which Tournament has a winner Outcome with a Score of 6\u20133, 7\u20135 with Kimberly Po-Messerli as a Partner?"
    },
    {
        "answer": "SELECT MIN(sales_area__m\u00b2_) FROM table_name_20 WHERE sales_per_area = \"\u20ac4,094/m\u00b2\" AND no_of_stores > 2",
        "context": "CREATE TABLE table_name_20 (sales_area__m\u00b2_ INTEGER, sales_per_area VARCHAR, no_of_stores VARCHAR)",
        "question": "What is the smallest sales area (m\u00b2) that has \u20ac4,094/m\u00b2 and more than 2 stores?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_3 WHERE result = \"l 18-6\"",
        "context": "CREATE TABLE table_name_3 (attendance VARCHAR, result VARCHAR)",
        "question": "Tell me the total number of attendance for result of l 18-6"
    },
    {
        "answer": "SELECT AVG(spectators) FROM table_name_56 WHERE date = \"2006-06-21\" AND time_cet_ > 21",
        "context": "CREATE TABLE table_name_56 (spectators INTEGER, date VARCHAR, time_cet_ VARCHAR)",
        "question": "Tell me the average spectators for 2006-06-21 and time more than 21"
    },
    {
        "answer": "SELECT sample_size FROM table_name_61 WHERE poll_source = \"rasmussen reports\" AND date_s__administered = \"october 13, 2010\"",
        "context": "CREATE TABLE table_name_61 (sample_size VARCHAR, poll_source VARCHAR, date_s__administered VARCHAR)",
        "question": "How many people participated in the Rasmussen Reports poll on October 13, 2010?"
    },
    {
        "answer": "SELECT tournament FROM table_name_90 WHERE outcome = \"winner\" AND score = \"4-6 6-3 10-5\"",
        "context": "CREATE TABLE table_name_90 (tournament VARCHAR, outcome VARCHAR, score VARCHAR)",
        "question": "Tell me the tournament for outcome of winner and score of 4-6 6-3 10-5"
    },
    {
        "answer": "SELECT COUNT(ashmolean) FROM table_name_40 WHERE harrison = \"14s\" AND image < 542",
        "context": "CREATE TABLE table_name_40 (ashmolean VARCHAR, harrison VARCHAR, image VARCHAR)",
        "question": "What is the number of Ashmolean with 14s Harrison, and image less than 542?"
    },
    {
        "answer": "SELECT date FROM table_name_46 WHERE outcome = \"winner\" AND opponents = \"dinah pfizenmaier anna zaja\"",
        "context": "CREATE TABLE table_name_46 (date VARCHAR, outcome VARCHAR, opponents VARCHAR)",
        "question": "Tell me the date for dinah pfizenmaier anna zaja and winner"
    },
    {
        "answer": "SELECT order FROM table_name_84 WHERE species_authority = \"hydrochaeris hydrochaeris (linnaeus, 1766)\"",
        "context": "CREATE TABLE table_name_84 (order VARCHAR, species_authority VARCHAR)",
        "question": "What order has the Species Authority of hydrochaeris hydrochaeris (linnaeus, 1766)?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_85 WHERE rank < 4 AND silver > 0 AND gold < 2",
        "context": "CREATE TABLE table_name_85 (total INTEGER, gold VARCHAR, rank VARCHAR, silver VARCHAR)",
        "question": "What is the smallest total for a rank below 4, 0 silver medals, and 2 gold medals?"
    },
    {
        "answer": "SELECT name FROM table_name_76 WHERE species_authority = \"sigmodon hispidus say & ord, 1825\"",
        "context": "CREATE TABLE table_name_76 (name VARCHAR, species_authority VARCHAR)",
        "question": "What is the name for the species Authority of sigmodon hispidus say & ord, 1825?"
    },
    {
        "answer": "SELECT COUNT(pick__number) FROM table_name_78 WHERE affiliation = \"university of virginia\"",
        "context": "CREATE TABLE table_name_78 (pick__number VARCHAR, affiliation VARCHAR)",
        "question": "Tell me the total number of pick for university of virginia"
    },
    {
        "answer": "SELECT frequency FROM table_name_33 WHERE origin = \"bus station\" AND number = 3",
        "context": "CREATE TABLE table_name_33 (frequency VARCHAR, origin VARCHAR, number VARCHAR)",
        "question": "What is the frequency of number 3 with a bus station origin?"
    },
    {
        "answer": "SELECT class FROM table_name_87 WHERE name = \"jamar jackson\"",
        "context": "CREATE TABLE table_name_87 (class VARCHAR, name VARCHAR)",
        "question": "for the name of jamar jackson what is the class?"
    },
    {
        "answer": "SELECT COUNT(number) FROM table_name_99 WHERE name = \"jamar jackson\"",
        "context": "CREATE TABLE table_name_99 (number VARCHAR, name VARCHAR)",
        "question": "for the name of jamar jackson what is the total of Number?"
    },
    {
        "answer": "SELECT wicket FROM table_name_59 WHERE date = \"19-03-2007\"",
        "context": "CREATE TABLE table_name_59 (wicket VARCHAR, date VARCHAR)",
        "question": "Name the wicket for 19-03-2007"
    },
    {
        "answer": "SELECT track FROM table_name_80 WHERE pole_winner = \"frank kimmel\" AND event_name = \"pennsylvania 200\"",
        "context": "CREATE TABLE table_name_80 (track VARCHAR, pole_winner VARCHAR, event_name VARCHAR)",
        "question": "At which track was Frank Kimmel the Pole Winner of the Pennsylvania 200?"
    },
    {
        "answer": "SELECT date FROM table_name_75 WHERE race_winner = \"steve wallace\" AND track = \"kentucky speedway\"",
        "context": "CREATE TABLE table_name_75 (date VARCHAR, race_winner VARCHAR, track VARCHAR)",
        "question": "Steve Wallace was a Race Winner at the Kentucky Speedway on what date?"
    },
    {
        "answer": "SELECT commissioned FROM table_name_12 WHERE launched = \"december 30, 1965\"",
        "context": "CREATE TABLE table_name_12 (commissioned VARCHAR, launched VARCHAR)",
        "question": "Tell me what was commissioned december 30, 1965"
    },
    {
        "answer": "SELECT result FROM table_name_90 WHERE venue = \"lincoln financial field\" AND date = \"december 11, 2005\"",
        "context": "CREATE TABLE table_name_90 (result VARCHAR, venue VARCHAR, date VARCHAR)",
        "question": "Tell me the result for lincoln financial field december 11, 2005"
    },
    {
        "answer": "SELECT winner FROM table_name_89 WHERE fastest_lap = \"katsuyuki hiranaka\"",
        "context": "CREATE TABLE table_name_89 (winner VARCHAR, fastest_lap VARCHAR)",
        "question": "Who was the winner when Katsuyuki Hiranaka had the fastest lap?"
    },
    {
        "answer": "SELECT MIN(division) FROM table_name_91 WHERE playoffs = \"did not qualify\" AND open_cup = \"did not qualify\" AND year = \"2002\"",
        "context": "CREATE TABLE table_name_91 (division INTEGER, year VARCHAR, playoffs VARCHAR, open_cup VARCHAR)",
        "question": "What is the lowest division in the playoffs and did not qualify for the Open Cup in 2002?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_4 WHERE wins < 2 AND class = \"50cc\" AND points = 15",
        "context": "CREATE TABLE table_name_4 (year VARCHAR, points VARCHAR, wins VARCHAR, class VARCHAR)",
        "question": "Tell me the total number of years for wins less than 2 and class of 50cc with points of 15"
    },
    {
        "answer": "SELECT team FROM table_name_85 WHERE round < 9 AND pole_position = \"takashi kogure\"",
        "context": "CREATE TABLE table_name_85 (team VARCHAR, round VARCHAR, pole_position VARCHAR)",
        "question": "Before round 9, when Takashi Kogure held pole position, who was the team?"
    },
    {
        "answer": "SELECT affiliation FROM table_name_28 WHERE mls_team = \"metrostars\" AND pick__number = 26",
        "context": "CREATE TABLE table_name_28 (affiliation VARCHAR, mls_team VARCHAR, pick__number VARCHAR)",
        "question": "Tell me the affiliation for mls team of metrostars and pick number of 26"
    },
    {
        "answer": "SELECT COUNT(pick__number) FROM table_name_9 WHERE position = \"m\" AND affiliation = \"williams college\"",
        "context": "CREATE TABLE table_name_9 (pick__number VARCHAR, position VARCHAR, affiliation VARCHAR)",
        "question": "Tell me the total number of picks for position of m of williams college"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_86 WHERE team = \"newman/haas racing\" AND rank = \"1st\"",
        "context": "CREATE TABLE table_name_86 (year VARCHAR, team VARCHAR, rank VARCHAR)",
        "question": "How many years did Team Newman/Haas Racing receive a 1st place ranking?"
    },
    {
        "answer": "SELECT date FROM table_name_90 WHERE venue = \"punt road oval\"",
        "context": "CREATE TABLE table_name_90 (date VARCHAR, venue VARCHAR)",
        "question": "What date did the VFL play Punt Road Oval?"
    },
    {
        "answer": "SELECT presentation_of_credentials FROM table_name_45 WHERE appointed_by = \"grover cleveland\" AND representative = \"charles w. buck\"",
        "context": "CREATE TABLE table_name_45 (presentation_of_credentials VARCHAR, appointed_by VARCHAR, representative VARCHAR)",
        "question": "Name the presentation of credentials for appointed by of grover cleveland and representative of charles w. buck"
    },
    {
        "answer": "SELECT operator FROM table_name_99 WHERE region = \"yorkshire\"",
        "context": "CREATE TABLE table_name_99 (operator VARCHAR, region VARCHAR)",
        "question": "What is the operator of the ensemble from Yorkshire?"
    },
    {
        "answer": "SELECT termination_of_mission FROM table_name_18 WHERE appointed_by = \"woodrow wilson\" AND representative = \"benton mcmillin\"",
        "context": "CREATE TABLE table_name_18 (termination_of_mission VARCHAR, appointed_by VARCHAR, representative VARCHAR)",
        "question": "Name the termination of mission for woodrow wilson appointed by and representative of benton mcmillin"
    },
    {
        "answer": "SELECT winning_team FROM table_name_80 WHERE winning_driver = \"rick mears\" AND name = \"kraco twin 125 (r1)\"",
        "context": "CREATE TABLE table_name_80 (winning_team VARCHAR, winning_driver VARCHAR, name VARCHAR)",
        "question": "What is the Winning Team with Rick Mears' and Kraco Twin 125 (R1)?"
    },
    {
        "answer": "SELECT MAX(total_apps) FROM table_name_41 WHERE fa_cup_apps = 26 AND total_goals > 9",
        "context": "CREATE TABLE table_name_41 (total_apps INTEGER, fa_cup_apps VARCHAR, total_goals VARCHAR)",
        "question": "What is the highest apps total with FA cup apps of 26 with total number of goals larger than 9?"
    },
    {
        "answer": "SELECT status FROM table_name_58 WHERE name = \"joon-hyung park \ubc15\uc900\ud615\"",
        "context": "CREATE TABLE table_name_58 (status VARCHAR, name VARCHAR)",
        "question": "What was the status of joon-hyung park \ubc15\uc900\ud615?"
    },
    {
        "answer": "SELECT report FROM table_name_68 WHERE winning_team = \"penske racing\" AND pole_position = \"rick mears\"",
        "context": "CREATE TABLE table_name_68 (report VARCHAR, winning_team VARCHAR, pole_position VARCHAR)",
        "question": "What is the Report of Winning Team Penske Racing, and what was Rick Mears' Pole position?"
    },
    {
        "answer": "SELECT pole_position FROM table_name_41 WHERE winning_team = \"penske racing\" AND name = \"ii copa mexico 150\"",
        "context": "CREATE TABLE table_name_41 (pole_position VARCHAR, winning_team VARCHAR, name VARCHAR)",
        "question": "What is the Pole Position for Winning Team Penske Racing, and the Name of II Copa Mexico 150?"
    },
    {
        "answer": "SELECT COUNT(fa_cup_apps) FROM table_name_50 WHERE total_apps > 12 AND league_apps > 38 AND fa_cup_goals > 1",
        "context": "CREATE TABLE table_name_50 (fa_cup_apps VARCHAR, fa_cup_goals VARCHAR, total_apps VARCHAR, league_apps VARCHAR)",
        "question": "What FA cup apps has a total larger than 12 and league apps larger than 38, and FA Cup goals larger than 1?"
    },
    {
        "answer": "SELECT COUNT(silver) FROM table_name_70 WHERE gold < 1 AND rank = 13 AND bronze > 2",
        "context": "CREATE TABLE table_name_70 (silver VARCHAR, bronze VARCHAR, gold VARCHAR, rank VARCHAR)",
        "question": "How many values for silver occur when gold is less than 1, the rank is 13, and bronze is greater than 2?"
    },
    {
        "answer": "SELECT entrant FROM table_name_42 WHERE engine = \"honda v6\" AND chassis = \"lotus 99t\"",
        "context": "CREATE TABLE table_name_42 (entrant VARCHAR, engine VARCHAR, chassis VARCHAR)",
        "question": "Which entrant has a Honda V6 engine and a Lotus 99t chassis?"
    },
    {
        "answer": "SELECT MAX(runs) FROM table_name_68 WHERE wickets = 66 AND matches < 13",
        "context": "CREATE TABLE table_name_68 (runs INTEGER, wickets VARCHAR, matches VARCHAR)",
        "question": "Name the most runs for wickets of 66 and matches less than 13"
    },
    {
        "answer": "SELECT score FROM table_name_29 WHERE opponent = \"san diego padres\" AND record = \"11-23\"",
        "context": "CREATE TABLE table_name_29 (score VARCHAR, opponent VARCHAR, record VARCHAR)",
        "question": "What is the score of the game with the San Diego Padres as the opponent and a record of 11-23?"
    },
    {
        "answer": "SELECT record FROM table_name_70 WHERE date = \"13 may\"",
        "context": "CREATE TABLE table_name_70 (record VARCHAR, date VARCHAR)",
        "question": "What is the record of the game on 13 May?"
    },
    {
        "answer": "SELECT sweet_potato_[g_] FROM table_name_92 WHERE soybean__green__[f_] = \"1.65\"",
        "context": "CREATE TABLE table_name_92 (sweet_potato_ VARCHAR, g_ VARCHAR, soybean__green__ VARCHAR, f_ VARCHAR)",
        "question": "What is the Sweet Potato amount when the soybean amount is 1.65?"
    },
    {
        "answer": "SELECT year_built__converted * _ FROM table_name_14 WHERE no_built__converted * _ = \"10\"",
        "context": "CREATE TABLE table_name_14 (year_built__converted VARCHAR, _ VARCHAR, no_built__converted VARCHAR)",
        "question": "Tell me the year built for number built of 10"
    },
    {
        "answer": "SELECT name_of_the_song FROM table_name_82 WHERE kind_of_the_song = \"opening theme\" AND drama = \"revolving doors of vengeance\"",
        "context": "CREATE TABLE table_name_82 (name_of_the_song VARCHAR, kind_of_the_song VARCHAR, drama VARCHAR)",
        "question": "What is the name of the song that is part of the opening theme and has a drama of the revolving doors of vengeance?"
    },
    {
        "answer": "SELECT COUNT(max__number_of_players) FROM table_name_24 WHERE developer = \"sega\" AND main_title___alternate_title_s_ = \"hang-on (cartridge version)\"",
        "context": "CREATE TABLE table_name_24 (max__number_of_players VARCHAR, developer VARCHAR, main_title___alternate_title_s_ VARCHAR)",
        "question": "What is the maximum number of players for the sega game, hang-on (cartridge version)?"
    },
    {
        "answer": "SELECT term_end FROM table_name_37 WHERE party = \"national religious party\" AND minister = \"shlomo-yisrael ben-meir\"",
        "context": "CREATE TABLE table_name_37 (term_end VARCHAR, party VARCHAR, minister VARCHAR)",
        "question": "When is the term end of Shlomo-Yisrael Ben-Meir of the National Religious Party?"
    },
    {
        "answer": "SELECT date FROM table_name_37 WHERE time___et__ = \"1:00 pm\" AND game_site = \"arrowhead stadium\"",
        "context": "CREATE TABLE table_name_37 (date VARCHAR, time___et__ VARCHAR, game_site VARCHAR)",
        "question": "What date is the 1:00 pm game at arrowhead stadium?"
    },
    {
        "answer": "SELECT points_classification FROM table_name_65 WHERE team_classification = \"predictor-lotto\" AND stage = \"1\"",
        "context": "CREATE TABLE table_name_65 (points_classification VARCHAR, team_classification VARCHAR, stage VARCHAR)",
        "question": "Name the points classification for predictor-lotto and stage 1"
    },
    {
        "answer": "SELECT game_site FROM table_name_2 WHERE time___et__ = \"7:00 pm\"",
        "context": "CREATE TABLE table_name_2 (game_site VARCHAR, time___et__ VARCHAR)",
        "question": "Where will the game at (ET) of 7:00 pm be at?"
    },
    {
        "answer": "SELECT branding FROM table_name_35 WHERE callsign = \"dxre\"",
        "context": "CREATE TABLE table_name_35 (branding VARCHAR, callsign VARCHAR)",
        "question": "What is the brand of DXRE?"
    },
    {
        "answer": "SELECT speed FROM table_name_44 WHERE rider = \"peter williams\"",
        "context": "CREATE TABLE table_name_44 (speed VARCHAR, rider VARCHAR)",
        "question": "What is the average speed of rider Peter Williams?"
    },
    {
        "answer": "SELECT engine FROM table_name_24 WHERE chassis = \"reynard 01i\" AND drivers = \"casey mears\"",
        "context": "CREATE TABLE table_name_24 (engine VARCHAR, chassis VARCHAR, drivers VARCHAR)",
        "question": "What engine did Casey Mears use on the Reynard 01i Chassis?"
    },
    {
        "answer": "SELECT player FROM table_name_97 WHERE pick__number < 29 AND mls_team = \"chicago fire\"",
        "context": "CREATE TABLE table_name_97 (player VARCHAR, pick__number VARCHAR, mls_team VARCHAR)",
        "question": "Tell me the player for pick number less than 29 and mls team of chicago fire"
    },
    {
        "answer": "SELECT circuit FROM table_name_21 WHERE winning_driver = \"rupert keegan\" AND round = 8",
        "context": "CREATE TABLE table_name_21 (circuit VARCHAR, winning_driver VARCHAR, round VARCHAR)",
        "question": "What circuit did Rupert Keegan win in round 8?"
    },
    {
        "answer": "SELECT award FROM table_name_78 WHERE director_s_ = \"candida scott knight\"",
        "context": "CREATE TABLE table_name_78 (award VARCHAR, director_s_ VARCHAR)",
        "question": "Name the award for candida scott knight"
    },
    {
        "answer": "SELECT sideline_reporter_s_ FROM table_name_22 WHERE network = \"nbc\" AND play_by_play = \"al michaels\" AND year > 2013",
        "context": "CREATE TABLE table_name_22 (sideline_reporter_s_ VARCHAR, year VARCHAR, network VARCHAR, play_by_play VARCHAR)",
        "question": "Who are the sideline reporter(s) on NBC with al michaels on the play-by-play after 2013?"
    },
    {
        "answer": "SELECT MAX(peroutka) FROM table_name_69 WHERE others = 46 AND electors < 15",
        "context": "CREATE TABLE table_name_69 (peroutka INTEGER, others VARCHAR, electors VARCHAR)",
        "question": "What is the highest Peroutka with 46 others, and less than 15 electors?"
    },
    {
        "answer": "SELECT higher_harmonics FROM table_name_36 WHERE speed = \"0.0821373\"",
        "context": "CREATE TABLE table_name_36 (higher_harmonics VARCHAR, speed VARCHAR)",
        "question": "Which higher harmonics have a speed of 0.0821373?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_42 WHERE venue = \"victoria park\"",
        "context": "CREATE TABLE table_name_42 (home_team VARCHAR, venue VARCHAR)",
        "question": "Which home team score occurred at Victoria Park?"
    },
    {
        "answer": "SELECT MAX(cars_entered) FROM table_name_33 WHERE winning_driver = \"rodger ward\" AND season < 1959",
        "context": "CREATE TABLE table_name_33 (cars_entered INTEGER, winning_driver VARCHAR, season VARCHAR)",
        "question": "What are the largest Cars Entered with a Winning Driver of rodger ward, and a Season smaller than 1959?"
    },
    {
        "answer": "SELECT avg_speed FROM table_name_23 WHERE distance = \"18.00km\" AND winning_driver = \"jean-claude andruet\"",
        "context": "CREATE TABLE table_name_23 (avg_speed VARCHAR, distance VARCHAR, winning_driver VARCHAR)",
        "question": "What was the average speed over 18.00km for winning driver Jean-Claude Andruet?"
    },
    {
        "answer": "SELECT 2007 FROM table_name_55 WHERE tournament = \"olympic games\"",
        "context": "CREATE TABLE table_name_55 (tournament VARCHAR)",
        "question": "What shows for 2007 at the Olympic Games as tournament."
    },
    {
        "answer": "SELECT position FROM table_name_95 WHERE round = 7 AND college = \"oklahoma\"",
        "context": "CREATE TABLE table_name_95 (position VARCHAR, round VARCHAR, college VARCHAR)",
        "question": "What position does the player from Oklahoma who was drafted in round 7 play?"
    },
    {
        "answer": "SELECT event FROM table_name_38 WHERE competition = \"world championships\" AND year < 2011",
        "context": "CREATE TABLE table_name_38 (event VARCHAR, competition VARCHAR, year VARCHAR)",
        "question": "What competition was the World Championships before 2011?"
    },
    {
        "answer": "SELECT years_as_tallest FROM table_name_12 WHERE street_address = \"324 e. 11th street\"",
        "context": "CREATE TABLE table_name_12 (years_as_tallest VARCHAR, street_address VARCHAR)",
        "question": "What's the Years as tallest with a Street address of 324 E. 11th Street?"
    },
    {
        "answer": "SELECT tires FROM table_name_15 WHERE engine = \"offy\" AND chassis = \"manta\" AND team = \"bfm enterprises\"",
        "context": "CREATE TABLE table_name_15 (tires VARCHAR, team VARCHAR, engine VARCHAR, chassis VARCHAR)",
        "question": "What tires did BFM Enterprises run on their Offy engine and manta chassis?"
    },
    {
        "answer": "SELECT height_feet___m FROM table_name_40 WHERE street_address = \"2345 grand avenue\"",
        "context": "CREATE TABLE table_name_40 (height_feet___m VARCHAR, street_address VARCHAR)",
        "question": "What is listsed as the Height feet/m and has a Street address of 2345 Grand Avenue?"
    },
    {
        "answer": "SELECT length FROM table_name_60 WHERE daily_ridership > 414",
        "context": "CREATE TABLE table_name_60 (length VARCHAR, daily_ridership INTEGER)",
        "question": "Daily ridership greater that 414 is associated with which length?"
    },
    {
        "answer": "SELECT SUM(1999) FROM table_name_27 WHERE 1990 > 0 AND 2003 = 3 AND 2007 > 1 AND 1996 > 0",
        "context": "CREATE TABLE table_name_27 (Id VARCHAR)",
        "question": "what is the listing for 1999 when 1990 is more than 0, 2003 is 3, 2007 is more than 1 and 1996 is more than 0?"
    },
    {
        "answer": "SELECT competition FROM table_name_75 WHERE notes = \"400 m hurdles\" AND year < 2004 AND venue = \"johannesburg, south africa\"",
        "context": "CREATE TABLE table_name_75 (competition VARCHAR, venue VARCHAR, notes VARCHAR, year VARCHAR)",
        "question": "Prior to 2004, what was the name of the competition that took place in Johannesburg, South Africa and had the 400 m hurdles event?"
    },
    {
        "answer": "SELECT position FROM table_name_56 WHERE competition = \"european indoor championships\"",
        "context": "CREATE TABLE table_name_56 (position VARCHAR, competition VARCHAR)",
        "question": "What place did T\u00e2rlea come in at the European Indoor Championships?"
    },
    {
        "answer": "SELECT MAX(sex_ratio__child_) FROM table_name_24 WHERE work_participation___percentage_ = \"37.7%\"",
        "context": "CREATE TABLE table_name_24 (sex_ratio__child_ INTEGER, work_participation___percentage_ VARCHAR)",
        "question": "What is the child sex ration for the population with 37.7% work participation?"
    },
    {
        "answer": "SELECT COUNT(appearances) FROM table_name_95 WHERE goals = 5 AND rank < 7",
        "context": "CREATE TABLE table_name_95 (appearances VARCHAR, goals VARCHAR, rank VARCHAR)",
        "question": "How many appearances were made by people that had 5 goals and less than 7 rank?"
    },
    {
        "answer": "SELECT name FROM table_name_29 WHERE round = \"e\"",
        "context": "CREATE TABLE table_name_29 (name VARCHAR, round VARCHAR)",
        "question": "Tell me the name for round of e"
    },
    {
        "answer": "SELECT wins FROM table_name_78 WHERE series = \"formula nippon\" AND position = \"8th\"",
        "context": "CREATE TABLE table_name_78 (wins VARCHAR, series VARCHAR, position VARCHAR)",
        "question": "How many wins have a Series of formula nippon, and a Position of 8th?"
    },
    {
        "answer": "SELECT theme FROM table_name_6 WHERE days < 148 AND series = \"season 3\"",
        "context": "CREATE TABLE table_name_6 (theme VARCHAR, days VARCHAR, series VARCHAR)",
        "question": "What's the theme for a series of season 3 with smaller than 148 days?"
    },
    {
        "answer": "SELECT team FROM table_name_51 WHERE win__number = \"1\" AND rating = \"+85\"",
        "context": "CREATE TABLE table_name_51 (team VARCHAR, win__number VARCHAR, rating VARCHAR)",
        "question": "What is the name of the team that had 1 win and a rating of +85?"
    },
    {
        "answer": "SELECT AVG(overall) FROM table_name_47 WHERE position = \"defensive tackle\" AND round = 4 AND pick__number < 36",
        "context": "CREATE TABLE table_name_47 (overall INTEGER, pick__number VARCHAR, position VARCHAR, round VARCHAR)",
        "question": "Position of defensive tackle, and a Round of 4, and a Pick # smaller than 36 has what overall average?"
    },
    {
        "answer": "SELECT winning_team FROM table_name_15 WHERE winning_driver = \"emerson fittipaldi\" AND pole_position = \"michael andretti\" AND circuit = \"cleveland burke lakefront airport\"",
        "context": "CREATE TABLE table_name_15 (winning_team VARCHAR, circuit VARCHAR, winning_driver VARCHAR, pole_position VARCHAR)",
        "question": "For the race held at the Cleveland Burke Lakefront Airport circuit, with winning driver Emerson Fittipaldi and pole position Michael Andretti, what was the winning team?"
    },
    {
        "answer": "SELECT muzzle_device FROM table_name_47 WHERE barrel_twist = \"1:7\" AND stock = \"4th generation\"",
        "context": "CREATE TABLE table_name_47 (muzzle_device VARCHAR, barrel_twist VARCHAR, stock VARCHAR)",
        "question": "What is the muzzle device with a 1:7 barrel twist and a stock 4th generation?"
    },
    {
        "answer": "SELECT position FROM table_name_29 WHERE player = \"farmar, jordan jordan farmar\"",
        "context": "CREATE TABLE table_name_29 (position VARCHAR, player VARCHAR)",
        "question": "What position is played by farmar, jordan jordan farmar?"
    },
    {
        "answer": "SELECT last_performance FROM table_name_7 WHERE status = \"past\" AND style = \"ballet\" AND name = \"tommy batchelor\"",
        "context": "CREATE TABLE table_name_7 (last_performance VARCHAR, name VARCHAR, status VARCHAR, style VARCHAR)",
        "question": "what last performance has past status, ballet as style and tommy batchelor?"
    },
    {
        "answer": "SELECT city FROM table_name_20 WHERE region = \"east\" AND state = \"north carolina\" AND host = \"university of richmond\"",
        "context": "CREATE TABLE table_name_20 (city VARCHAR, host VARCHAR, region VARCHAR, state VARCHAR)",
        "question": "What city in the east region in North Carolina was the round where the University of Richmond was the host?"
    },
    {
        "answer": "SELECT crystal_structure FROM table_name_67 WHERE no_of_cu_o_planes_in_unit_cell = 3 AND t_c__k_ = 110",
        "context": "CREATE TABLE table_name_67 (crystal_structure VARCHAR, no_of_cu_o_planes_in_unit_cell VARCHAR, t_c__k_ VARCHAR)",
        "question": "Which crystal structures has a Tc(K) of 110 and the number of Cu-O planes in the unit cell is 3?"
    },
    {
        "answer": "SELECT host FROM table_name_62 WHERE state = \"texas\" AND venue = \"montagne center\"",
        "context": "CREATE TABLE table_name_62 (host VARCHAR, state VARCHAR, venue VARCHAR)",
        "question": "What was the host of the round in the Montagne Center in Texas?"
    },
    {
        "answer": "SELECT event FROM table_name_4 WHERE res = \"win\" AND opponent = \"shane ott\"",
        "context": "CREATE TABLE table_name_4 (event VARCHAR, res VARCHAR, opponent VARCHAR)",
        "question": "Which Event resulted in a Win for Opponent, Shane Ott?"
    },
    {
        "answer": "SELECT prime_mover FROM table_name_16 WHERE model = \"fa-2\"",
        "context": "CREATE TABLE table_name_16 (prime_mover VARCHAR, model VARCHAR)",
        "question": "What is the prime mover of the locomotive with a fa-2 model?"
    },
    {
        "answer": "SELECT COUNT(goals) FROM table_name_38 WHERE nat = \"eng\" AND transfer_fee = \"youth system\" AND since < 2005 AND name = \"rix\"",
        "context": "CREATE TABLE table_name_38 (goals VARCHAR, name VARCHAR, since VARCHAR, nat VARCHAR, transfer_fee VARCHAR)",
        "question": "How many goals was by Rix from Eng who started before 2005 in the youth system?"
    },
    {
        "answer": "SELECT film FROM table_name_2 WHERE year = 2007 AND language = \"hindi\" AND music_director = \"shantanu moitra\"",
        "context": "CREATE TABLE table_name_2 (film VARCHAR, music_director VARCHAR, year VARCHAR, language VARCHAR)",
        "question": "What is the 2007 film in Hindi with a music director Shantanu moitra?"
    },
    {
        "answer": "SELECT tournament FROM table_name_99 WHERE surface = \"hard\" AND score = \"6\u20131, 6\u20132\"",
        "context": "CREATE TABLE table_name_99 (tournament VARCHAR, surface VARCHAR, score VARCHAR)",
        "question": "Tell me the tournament with a hard surface for 6\u20131, 6\u20132"
    },
    {
        "answer": "SELECT section FROM table_name_29 WHERE position = \"8th\" AND season = \"2003\"",
        "context": "CREATE TABLE table_name_29 (section VARCHAR, position VARCHAR, season VARCHAR)",
        "question": "Tell me the section for position of 8th and season of 2003"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_55 WHERE time = \"2:15.98\" AND lane > 7",
        "context": "CREATE TABLE table_name_55 (rank VARCHAR, time VARCHAR, lane VARCHAR)",
        "question": "What is the number of the rank when the time is 2:15.98, in a lane larger than 7?"
    },
    {
        "answer": "SELECT MIN(lane) FROM table_name_64 WHERE rank = 6",
        "context": "CREATE TABLE table_name_64 (lane INTEGER, rank VARCHAR)",
        "question": "What is the smallest lane for rank 6?"
    },
    {
        "answer": "SELECT AVG(bronze) FROM table_name_41 WHERE rank = \"43\" AND total < 11",
        "context": "CREATE TABLE table_name_41 (bronze INTEGER, rank VARCHAR, total VARCHAR)",
        "question": "Tell me the average bronze for rank of 43 and total less than 11"
    },
    {
        "answer": "SELECT format FROM table_name_31 WHERE frequency = \"1290 khz\"",
        "context": "CREATE TABLE table_name_31 (format VARCHAR, frequency VARCHAR)",
        "question": "Say the frequency of 1290 khz"
    },
    {
        "answer": "SELECT calls FROM table_name_88 WHERE frequency = \"1290 khz\"",
        "context": "CREATE TABLE table_name_88 (calls VARCHAR, frequency VARCHAR)",
        "question": "Tell me the calls for frequency of 1290 khz"
    },
    {
        "answer": "SELECT role FROM table_name_73 WHERE series_title = \"dragon laws i: the undercover\"",
        "context": "CREATE TABLE table_name_73 (role VARCHAR, series_title VARCHAR)",
        "question": "The series titled dragon laws i: the undercover has what role?"
    },
    {
        "answer": "SELECT COUNT(time) FROM table_name_56 WHERE country = \"bolivia\" AND lane > 6",
        "context": "CREATE TABLE table_name_56 (time VARCHAR, country VARCHAR, lane VARCHAR)",
        "question": "For how long did Bolivia have a lane greater than 6?"
    },
    {
        "answer": "SELECT country FROM table_name_72 WHERE heat_rank < 8 AND overall_rank = \"56\"",
        "context": "CREATE TABLE table_name_72 (country VARCHAR, heat_rank VARCHAR, overall_rank VARCHAR)",
        "question": "Which country is ranked 56 overall and has a heat rank smaller than 8?"
    },
    {
        "answer": "SELECT MAX(week) FROM table_name_80 WHERE venue = \"metropolitan stadium\" AND attendance > 47 OFFSET 644",
        "context": "CREATE TABLE table_name_80 (week INTEGER, venue VARCHAR, attendance VARCHAR)",
        "question": "Tell me the highest week for metropolitan stadium for attendance more than 47,644"
    },
    {
        "answer": "SELECT player FROM table_name_43 WHERE position = \"forward\" AND school_country = \"kentucky\"",
        "context": "CREATE TABLE table_name_43 (player VARCHAR, position VARCHAR, school_country VARCHAR)",
        "question": "Which player plays forward and is from Kentucky?"
    },
    {
        "answer": "SELECT MAX(promotions) FROM table_name_43 WHERE team = \"pallacanestro messina\" AND relegations > 0",
        "context": "CREATE TABLE table_name_43 (promotions INTEGER, team VARCHAR, relegations VARCHAR)",
        "question": "Whats the highest Promotions that has a Team of Pallacanestro Messina, along with Relegations larger than 0?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_40 WHERE chassis = \"zakspeed 881\"",
        "context": "CREATE TABLE table_name_40 (points INTEGER, chassis VARCHAR)",
        "question": "What are the average points with a Chassis of zakspeed 881?"
    },
    {
        "answer": "SELECT year FROM table_name_15 WHERE party = \"liberal\" AND constituency = \"hazel grove\"",
        "context": "CREATE TABLE table_name_15 (year VARCHAR, party VARCHAR, constituency VARCHAR)",
        "question": "What year was Hazel Grove the constituent for the liberal party?"
    },
    {
        "answer": "SELECT days FROM table_name_18 WHERE year = \"1945\" AND constituency = \"heywood and radcliffe\"",
        "context": "CREATE TABLE table_name_18 (days VARCHAR, year VARCHAR, constituency VARCHAR)",
        "question": "What are the number of days in 1945 where the constituent was heywood and radcliffe?"
    },
    {
        "answer": "SELECT AVG(laps) FROM table_name_74 WHERE grid > 12 AND bike = \"ducati 999rs\" AND rider = \"dean ellison\"",
        "context": "CREATE TABLE table_name_74 (laps INTEGER, rider VARCHAR, grid VARCHAR, bike VARCHAR)",
        "question": "Tell me the average Laps for grid larger than 12 and bikes of ducati 999rs for dean ellison"
    },
    {
        "answer": "SELECT venue FROM table_name_38 WHERE sport = \"baseball\" AND championships__years_ = \"0\" AND league = \"milb, florida state league\" AND club = \"jupiter hammerheads\"",
        "context": "CREATE TABLE table_name_38 (venue VARCHAR, club VARCHAR, league VARCHAR, sport VARCHAR, championships__years_ VARCHAR)",
        "question": "Which Venue has a Sport of baseball, Championships (Years) of 0, a League of milb, florida state league, and a Club of jupiter hammerheads?"
    },
    {
        "answer": "SELECT club FROM table_name_86 WHERE league = \"american basketball association\" AND venue = \"tba\"",
        "context": "CREATE TABLE table_name_86 (club VARCHAR, league VARCHAR, venue VARCHAR)",
        "question": "Which club has a League of american basketball association, and a Venue of tba?"
    },
    {
        "answer": "SELECT name FROM table_name_97 WHERE roll = 270",
        "context": "CREATE TABLE table_name_97 (name VARCHAR, roll VARCHAR)",
        "question": "Which name has a Roll of 270?"
    },
    {
        "answer": "SELECT venue FROM table_name_63 WHERE opponent = \"zimbabwe\"",
        "context": "CREATE TABLE table_name_63 (venue VARCHAR, opponent VARCHAR)",
        "question": "Where did Zimbabwe play?"
    },
    {
        "answer": "SELECT money_requested__\u00a3_ FROM table_name_78 WHERE entrepreneur_s_ = \"ian chamings\"",
        "context": "CREATE TABLE table_name_78 (money_requested__\u00a3_ VARCHAR, entrepreneur_s_ VARCHAR)",
        "question": "How much money did Ian Chamings request?"
    },
    {
        "answer": "SELECT height_of_bridge_structure FROM table_name_8 WHERE opened < 2011 AND name = \"anqing bridge\"",
        "context": "CREATE TABLE table_name_8 (height_of_bridge_structure VARCHAR, opened VARCHAR, name VARCHAR)",
        "question": "How tall is the Anqing Bridge which opened prior to 2011?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_42 WHERE venue = \"arden street oval\"",
        "context": "CREATE TABLE table_name_42 (home_team VARCHAR, venue VARCHAR)",
        "question": "Who was the home team in the game played at arden street oval?"
    },
    {
        "answer": "SELECT drivers FROM table_name_31 WHERE team = \"arciero racing\"",
        "context": "CREATE TABLE table_name_31 (drivers VARCHAR, team VARCHAR)",
        "question": "Who drove for Arciero Racing?"
    },
    {
        "answer": "SELECT caps FROM table_name_22 WHERE player = \"mile sterjovski\"",
        "context": "CREATE TABLE table_name_22 (caps VARCHAR, player VARCHAR)",
        "question": "How many caps did the player Mile Sterjovski have?"
    },
    {
        "answer": "SELECT report FROM table_name_33 WHERE pole_position = \"bobby unser\" AND winning_driver = \"rick mears\"",
        "context": "CREATE TABLE table_name_33 (report VARCHAR, pole_position VARCHAR, winning_driver VARCHAR)",
        "question": "Which report includes Bobby Unser as the Pole Position and Rick Mears as the Winning driver?"
    },
    {
        "answer": "SELECT guns FROM table_name_63 WHERE class = \"third-rate ship of the line\" AND rank = \"vice-admiral\" AND year = \"1802\"",
        "context": "CREATE TABLE table_name_63 (guns VARCHAR, year VARCHAR, class VARCHAR, rank VARCHAR)",
        "question": "Tell me the guns for third-rate ship of the line and rank of vice-admiral with year of 1802"
    },
    {
        "answer": "SELECT venue FROM table_name_32 WHERE home_team = \"melbourne\"",
        "context": "CREATE TABLE table_name_32 (venue VARCHAR, home_team VARCHAR)",
        "question": "What is Melbourne's home venue?"
    },
    {
        "answer": "SELECT SUM(fixtures) FROM table_name_67 WHERE round = \"sixth round\" AND clubs_involved > 15",
        "context": "CREATE TABLE table_name_67 (fixtures INTEGER, round VARCHAR, clubs_involved VARCHAR)",
        "question": "In the sixth round, what is the sum of fixtures when there were more than 15 clubs involved?"
    },
    {
        "answer": "SELECT club FROM table_name_8 WHERE lost = \"9\" AND tries_for = \"55\"",
        "context": "CREATE TABLE table_name_8 (club VARCHAR, lost VARCHAR, tries_for VARCHAR)",
        "question": "What is the Club, when the value for Lost is 9, and when the value for Tries is 55?"
    },
    {
        "answer": "SELECT away_team FROM table_name_64 WHERE venue = \"arden street oval\"",
        "context": "CREATE TABLE table_name_64 (away_team VARCHAR, venue VARCHAR)",
        "question": "Who was the opposing team at the match played at the Arden Street Oval?"
    },
    {
        "answer": "SELECT capacity FROM table_name_15 WHERE stadium = \"city park stadium\"",
        "context": "CREATE TABLE table_name_15 (capacity VARCHAR, stadium VARCHAR)",
        "question": "Tell me the capacity for city park stadium"
    },
    {
        "answer": "SELECT date_of_birth FROM table_name_66 WHERE begin_date = \"april 24, 1902\"",
        "context": "CREATE TABLE table_name_66 (date_of_birth VARCHAR, begin_date VARCHAR)",
        "question": "What was the date of birth of the member of the United States House of Representatives that began their term on April 24, 1902?"
    },
    {
        "answer": "SELECT category FROM table_name_43 WHERE nominated_work = \"cecilie\" AND award = \"robert award\"",
        "context": "CREATE TABLE table_name_43 (category VARCHAR, nominated_work VARCHAR, award VARCHAR)",
        "question": "What category is the nominated work of cecilie, winner of the robert award?"
    },
    {
        "answer": "SELECT AVG(losses) FROM table_name_43 WHERE years = \"1904\"",
        "context": "CREATE TABLE table_name_43 (losses INTEGER, years VARCHAR)",
        "question": "How many losses did Notre Dame have in 1904?"
    },
    {
        "answer": "SELECT years_in_toronto FROM table_name_83 WHERE player = \"sebastian telfair\"",
        "context": "CREATE TABLE table_name_83 (years_in_toronto VARCHAR, player VARCHAR)",
        "question": "How long has Sebastian Telfair played for Toronto?"
    },
    {
        "answer": "SELECT home_captain FROM table_name_22 WHERE venue = \"edgbaston\"",
        "context": "CREATE TABLE table_name_22 (home_captain VARCHAR, venue VARCHAR)",
        "question": "Who is the home captain that played at Edgbaston?"
    },
    {
        "answer": "SELECT result FROM table_name_24 WHERE home_captain = \"graham gooch\" AND date = \"3,4,5,6,7 june 1993\"",
        "context": "CREATE TABLE table_name_24 (result VARCHAR, home_captain VARCHAR, date VARCHAR)",
        "question": "For the matches with home captain Graham Gooch played on the dates 3,4,5,6,7 June 1993, what was the result?"
    },
    {
        "answer": "SELECT COUNT(crowd) FROM table_name_21 WHERE venue = \"arden street oval\"",
        "context": "CREATE TABLE table_name_21 (crowd VARCHAR, venue VARCHAR)",
        "question": "How many people at Arden Street Oval?"
    },
    {
        "answer": "SELECT SUM(place) FROM table_name_58 WHERE ties > 0 AND points = \"7 qc\" AND losses > 2",
        "context": "CREATE TABLE table_name_58 (place INTEGER, losses VARCHAR, ties VARCHAR, points VARCHAR)",
        "question": "Name the sum of place with ties larger than 0 and point sof 7 qc and losses more than 2"
    },
    {
        "answer": "SELECT name FROM table_name_86 WHERE bullet = \"10.57 (.416)\" AND base = \"14.96 (.589)\"",
        "context": "CREATE TABLE table_name_86 (name VARCHAR, bullet VARCHAR, base VARCHAR)",
        "question": "Which Name has a Bullett of 10.57 (.416) and a Base of 14.96 (.589)?"
    },
    {
        "answer": "SELECT score FROM table_name_47 WHERE surface = \"clay\" AND opponent = \"hans podlipnik\" AND outcome = \"runner-up\"",
        "context": "CREATE TABLE table_name_47 (score VARCHAR, outcome VARCHAR, surface VARCHAR, opponent VARCHAR)",
        "question": "What was the final score for Aguilar when he played Hans Podlipnik on clay and was runner-up?"
    },
    {
        "answer": "SELECT call_sign FROM table_name_67 WHERE frequency = \"0 97.3 fm\"",
        "context": "CREATE TABLE table_name_67 (call_sign VARCHAR, frequency VARCHAR)",
        "question": "Tell me the call sign for frequency of 0 97.3 fm"
    },
    {
        "answer": "SELECT no4 FROM table_name_46 WHERE no5 = \"susana telmo\"",
        "context": "CREATE TABLE table_name_46 (no4 VARCHAR, no5 VARCHAR)",
        "question": "Who is the no. 4 team that has the no. 5 player Susana Telmo?"
    },
    {
        "answer": "SELECT AVG(played) FROM table_name_83 WHERE city = \"belgrade\" AND average_attendance > 26 OFFSET 222",
        "context": "CREATE TABLE table_name_83 (played INTEGER, city VARCHAR, average_attendance VARCHAR)",
        "question": "What is the average played value in Belgrade with attendance greater than 26,222?"
    },
    {
        "answer": "SELECT nationality FROM table_name_96 WHERE player = \"darren lockyer\" AND position = \"five-eighth\"",
        "context": "CREATE TABLE table_name_96 (nationality VARCHAR, player VARCHAR, position VARCHAR)",
        "question": "What was the nationality of five-eighth player Darren Lockyer?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_51 WHERE role = \"lady cecily waynflete\" AND theatre = \"opera house, kennedy center\"",
        "context": "CREATE TABLE table_name_51 (year VARCHAR, role VARCHAR, theatre VARCHAR)",
        "question": "Tell me the total number of years for lady cecily waynflete and opera house, kennedy center"
    },
    {
        "answer": "SELECT MAX(martyred) FROM table_name_65 WHERE beatified > 1909 AND name = \"laurent-marie-joseph imbert / st. imbert\" AND canonised > 1984",
        "context": "CREATE TABLE table_name_65 (martyred INTEGER, canonised VARCHAR, beatified VARCHAR, name VARCHAR)",
        "question": "When was Laurent-Marie-Joseph Imbert / St. Imbert, who was beatified after 1909 and canonised after 1984, martyred?"
    },
    {
        "answer": "SELECT director_s_ FROM table_name_63 WHERE recipient = \"avie luthra\"",
        "context": "CREATE TABLE table_name_63 (director_s_ VARCHAR, recipient VARCHAR)",
        "question": "Who directed the film that Avie Luthra received an award for?"
    },
    {
        "answer": "SELECT construction_completed FROM table_name_70 WHERE county = \"jo daviess\"",
        "context": "CREATE TABLE table_name_70 (construction_completed VARCHAR, county VARCHAR)",
        "question": "What is the date construction is completed in Jo Daviess county?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_96 WHERE role = \"narrator\" AND radio_station_production_company = \"bbc audiobooks\" AND release_air_date = \"13 november 2008\"",
        "context": "CREATE TABLE table_name_96 (year INTEGER, release_air_date VARCHAR, role VARCHAR, radio_station_production_company VARCHAR)",
        "question": "Role of narrator, and a Radio Station/Production Company of bbc audiobooks, and a Release/Air Date of 13 november 2008 is what sum of the year?"
    },
    {
        "answer": "SELECT winning_driver FROM table_name_84 WHERE winning_car = \"march - honda 86j\" AND winning_team = \"team nova\"",
        "context": "CREATE TABLE table_name_84 (winning_driver VARCHAR, winning_car VARCHAR, winning_team VARCHAR)",
        "question": "Who was the winning driver driving the winning car March - Honda 86j, with the winning team Team Nova?"
    },
    {
        "answer": "SELECT radio_station_production_company FROM table_name_73 WHERE role = \"interviewee & monologues\"",
        "context": "CREATE TABLE table_name_73 (radio_station_production_company VARCHAR, role VARCHAR)",
        "question": "Radio Station/Production Company that has a Role of interviewee & monologues is what radio station?"
    },
    {
        "answer": "SELECT MIN(crowd) FROM table_name_8 WHERE away_team = \"fitzroy\"",
        "context": "CREATE TABLE table_name_8 (crowd INTEGER, away_team VARCHAR)",
        "question": "What is the smallest crowd with fitzroy as the home team?"
    },
    {
        "answer": "SELECT school_club_team FROM table_name_36 WHERE round > 8 AND position = \"linebacker\"",
        "context": "CREATE TABLE table_name_36 (school_club_team VARCHAR, round VARCHAR, position VARCHAR)",
        "question": "What school did the linebacker who was drafted after round 8 come from?"
    },
    {
        "answer": "SELECT pens FROM table_name_17 WHERE draw = \"0\" AND player = \"sione mafi pahulu\"",
        "context": "CREATE TABLE table_name_17 (pens VARCHAR, draw VARCHAR, player VARCHAR)",
        "question": "What pens have a draw of 0 when the player is sione mafi pahulu?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_5 WHERE week > 2 AND opponent = \"new orleans saints\"",
        "context": "CREATE TABLE table_name_5 (attendance INTEGER, week VARCHAR, opponent VARCHAR)",
        "question": "Name the least attendance for opponent of new orleans saints and week more than 2"
    },
    {
        "answer": "SELECT match_report FROM table_name_89 WHERE competition = \"euro2008q\" AND venue = \"athens olympic stadium\" AND date = \"november 17, 2007\"",
        "context": "CREATE TABLE table_name_89 (match_report VARCHAR, date VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "What was the Match Report for the Euro2008q at the Athens Olympic Stadium on November 17, 2007?"
    },
    {
        "answer": "SELECT match_report FROM table_name_44 WHERE competition = \"euro2008q\" AND venue = \"athens olympic stadium\" AND score = \"1-2\"",
        "context": "CREATE TABLE table_name_44 (match_report VARCHAR, score VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "What was the Match Report for the Euro2008q at the Athens Olympic Stadium and a score of 1-2?"
    },
    {
        "answer": "SELECT date FROM table_name_83 WHERE result = \"draw\" AND venue = \"sydney cricket ground\"",
        "context": "CREATE TABLE table_name_83 (date VARCHAR, result VARCHAR, venue VARCHAR)",
        "question": "On what date was there a draw at Sydney Cricket Ground?"
    },
    {
        "answer": "SELECT city___state FROM table_name_12 WHERE winner = \"john bowe\" AND circuit = \"phillip island grand prix circuit\"",
        "context": "CREATE TABLE table_name_12 (city___state VARCHAR, winner VARCHAR, circuit VARCHAR)",
        "question": "In what City/State did John Bowe win at Phillip Island Grand Prix Circuit?"
    },
    {
        "answer": "SELECT venue FROM table_name_28 WHERE year > 2006 AND notes = \"3000 m s'chase\" AND position = \"2nd\" AND competition = \"african championships\"",
        "context": "CREATE TABLE table_name_28 (venue VARCHAR, competition VARCHAR, position VARCHAR, year VARCHAR, notes VARCHAR)",
        "question": "Which venue did the African Championships have after 2006 with a position of 2nd and 3000 m s'chase in notes?"
    },
    {
        "answer": "SELECT date FROM table_name_20 WHERE distance = \"km (mi)\" AND course = \"roccaraso to san giorgio del sannio\"",
        "context": "CREATE TABLE table_name_20 (date VARCHAR, distance VARCHAR, course VARCHAR)",
        "question": "What is the date with the distance of km (mi) at the course of roccaraso to san giorgio del sannio?"
    },
    {
        "answer": "SELECT catalog FROM table_name_72 WHERE date > 2004",
        "context": "CREATE TABLE table_name_72 (catalog VARCHAR, date INTEGER)",
        "question": "Tell me the catalog for date larger than 2004"
    },
    {
        "answer": "SELECT COUNT(avg_g) FROM table_name_51 WHERE long = 51 AND loss = 333 AND gain > 2013",
        "context": "CREATE TABLE table_name_51 (avg_g VARCHAR, gain VARCHAR, long VARCHAR, loss VARCHAR)",
        "question": "How much Avg/G has a Long of 51, and a Loss of 333, and a Gain larger than 2013?"
    },
    {
        "answer": "SELECT MAX(scored) FROM table_name_66 WHERE competition = \"2010 east asian football championship\"",
        "context": "CREATE TABLE table_name_66 (scored INTEGER, competition VARCHAR)",
        "question": "What is the highest scored in the 2010 east asian football championship?"
    },
    {
        "answer": "SELECT result FROM table_name_61 WHERE location = \"n/a\" AND odds = \"p + 1\"",
        "context": "CREATE TABLE table_name_61 (result VARCHAR, location VARCHAR, odds VARCHAR)",
        "question": "What was the score for an n/a location with the odds of p + 1?"
    },
    {
        "answer": "SELECT label FROM table_name_88 WHERE region = \"united states\" AND format = \"download\"",
        "context": "CREATE TABLE table_name_88 (label VARCHAR, region VARCHAR, format VARCHAR)",
        "question": "What label is in download format in the United States?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_49 WHERE position = \"defensive back\" AND overall < 199",
        "context": "CREATE TABLE table_name_49 (round INTEGER, position VARCHAR, overall VARCHAR)",
        "question": "What is the average round when there is a defensive back and an overall smaller than 199?"
    },
    {
        "answer": "SELECT finish FROM table_name_76 WHERE start = \"28\"",
        "context": "CREATE TABLE table_name_76 (finish VARCHAR, start VARCHAR)",
        "question": "Name the finish for start of 28"
    },
    {
        "answer": "SELECT city FROM table_name_22 WHERE result = \"brisbane broncos def. halifax blue sox\"",
        "context": "CREATE TABLE table_name_22 (city VARCHAR, result VARCHAR)",
        "question": "What city has a Result of brisbane broncos def. halifax blue sox?"
    },
    {
        "answer": "SELECT COUNT(overall) FROM table_name_28 WHERE position = \"wide receiver\" AND player = \"tom fleming\"",
        "context": "CREATE TABLE table_name_28 (overall VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "What was the overall draft number of Tom Fleming, a wide receiver?"
    },
    {
        "answer": "SELECT gold_coast FROM table_name_2 WHERE melbourne = \"yes\" AND adelaide = \"yes\" AND auckland = \"yes\"",
        "context": "CREATE TABLE table_name_2 (gold_coast VARCHAR, auckland VARCHAR, melbourne VARCHAR, adelaide VARCHAR)",
        "question": "yes or no for the gold coast with yes for melbourne, yes for adelaide, yes for auckland?"
    },
    {
        "answer": "SELECT MIN(losses) FROM table_name_96 WHERE rank < 3 AND team = \"united states\" AND wins > 6",
        "context": "CREATE TABLE table_name_96 (losses INTEGER, wins VARCHAR, rank VARCHAR, team VARCHAR)",
        "question": "What is the lowest amount of losses the United States, ranked higher than 3 with more than 6 wins, have?"
    },
    {
        "answer": "SELECT COUNT(wins) FROM table_name_87 WHERE rank > 1 AND run_ratio < 5.85 AND losses > 4",
        "context": "CREATE TABLE table_name_87 (wins VARCHAR, losses VARCHAR, rank VARCHAR, run_ratio VARCHAR)",
        "question": "How many total wins did the team ranked lower than 1 with a run ratio less than 5.85 and more than 4 losses have?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_22 WHERE player = \"paul mcdonald\" AND overall > 109",
        "context": "CREATE TABLE table_name_22 (round INTEGER, player VARCHAR, overall VARCHAR)",
        "question": "In which round did Paul McDonald have an overall greater than 109?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_52 WHERE album = \"remixes\"",
        "context": "CREATE TABLE table_name_52 (year INTEGER, album VARCHAR)",
        "question": "What is the total number of Year that has an Album of Remixes?"
    },
    {
        "answer": "SELECT SUM(events) FROM table_name_97 WHERE rank > 5",
        "context": "CREATE TABLE table_name_97 (events INTEGER, rank INTEGER)",
        "question": "the sum of Events that has a Rank larger than 5 is 3"
    },
    {
        "answer": "SELECT females FROM table_name_21 WHERE males = \"1 234\"",
        "context": "CREATE TABLE table_name_21 (females VARCHAR, males VARCHAR)",
        "question": "What females have males of 1 234?"
    },
    {
        "answer": "SELECT SUM(touchdowns) FROM table_name_81 WHERE field_goals < 0",
        "context": "CREATE TABLE table_name_81 (touchdowns INTEGER, field_goals INTEGER)",
        "question": "How many touchdowns were made where field goals were less than 0?"
    },
    {
        "answer": "SELECT AVG(field_goals) FROM table_name_87 WHERE points > 50 AND extra_points > 0 AND player = \"herb graver\" AND touchdowns < 15",
        "context": "CREATE TABLE table_name_87 (field_goals INTEGER, touchdowns VARCHAR, player VARCHAR, points VARCHAR, extra_points VARCHAR)",
        "question": "When Herb Graver played, how many field goals were made when there were more than 50 points, less than 15 touchdowns, and more than 0 extra points?"
    },
    {
        "answer": "SELECT open_source_movie FROM table_name_90 WHERE cc_license = \"by-nc-sa 1.0\"",
        "context": "CREATE TABLE table_name_90 (open_source_movie VARCHAR, cc_license VARCHAR)",
        "question": "What open source movie has a CC License of by-nc-sa 1.0?"
    },
    {
        "answer": "SELECT COUNT(displacement__tons_) FROM table_name_52 WHERE armament = \"2 x -inch (mm), 16 x -inch (mm)\"",
        "context": "CREATE TABLE table_name_52 (displacement__tons_ VARCHAR, armament VARCHAR)",
        "question": "How much Displacement (tons) has an Armament of 2 x -inch (mm), 16 x -inch (mm)?"
    },
    {
        "answer": "SELECT location FROM table_name_16 WHERE event = \"king of the cage: flash point\"",
        "context": "CREATE TABLE table_name_16 (location VARCHAR, event VARCHAR)",
        "question": "Which Location has an Event of king of the cage: flash point?"
    },
    {
        "answer": "SELECT venue FROM table_name_90 WHERE home_team = \"south melbourne\"",
        "context": "CREATE TABLE table_name_90 (venue VARCHAR, home_team VARCHAR)",
        "question": "What venue had south melbourne as the home team?"
    },
    {
        "answer": "SELECT 2006 FROM table_name_88 WHERE 2010 = \"a\" AND 2009 = \"a\" AND tournament = \"canada masters\"",
        "context": "CREATE TABLE table_name_88 (tournament VARCHAR)",
        "question": "What is the 2006 result of the Canada Masters tournament that is A in 2009 and A in 2010?"
    },
    {
        "answer": "SELECT 2012 FROM table_name_29 WHERE 2009 = \"1r\" AND 2008 = \"1r\" AND 2007 = \"2r\"",
        "context": "CREATE TABLE table_name_29 (Id VARCHAR)",
        "question": "What is the 2012 result of a tournament that is 2R in 2007, 1R in 2008 and 1R in 2009?"
    },
    {
        "answer": "SELECT 2007 FROM table_name_26 WHERE 2012 = \"grand slam tournaments\"",
        "context": "CREATE TABLE table_name_26 (Id VARCHAR)",
        "question": "What is the 2007 value at the 2012 Grand Slam Tournaments?"
    },
    {
        "answer": "SELECT SUM(worst_score) FROM table_name_23 WHERE best_dancer = \"apolo anton ohno\" AND best_score > 30",
        "context": "CREATE TABLE table_name_23 (worst_score INTEGER, best_dancer VARCHAR, best_score VARCHAR)",
        "question": "What is the worst score for the dance that has Apolo Anton Ohno as the best dancer, and where his best score is larger than 30?"
    },
    {
        "answer": "SELECT date FROM table_name_10 WHERE away_team = \"fitzroy\"",
        "context": "CREATE TABLE table_name_10 (date VARCHAR, away_team VARCHAR)",
        "question": "What is the date they played against fitzroy?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_89 WHERE draws < 2 AND wins < 1 AND goal_difference = \"1:2\" AND losses > 1",
        "context": "CREATE TABLE table_name_89 (total INTEGER, losses VARCHAR, goal_difference VARCHAR, draws VARCHAR, wins VARCHAR)",
        "question": "What is the lowest total that has draws less than 2 and wins less than 1, losses bigger than 1 with a goal difference of 1:2"
    },
    {
        "answer": "SELECT fatalities FROM table_name_79 WHERE epicenter = \"m\u0101zandar\u0101n\"",
        "context": "CREATE TABLE table_name_79 (fatalities VARCHAR, epicenter VARCHAR)",
        "question": "What number of Fatalities did the Epicenter M\u0101zandar\u0101n have?"
    },
    {
        "answer": "SELECT loss FROM table_name_57 WHERE opponent = \"rangers\" AND attendance > 43 OFFSET 211",
        "context": "CREATE TABLE table_name_57 (loss VARCHAR, opponent VARCHAR, attendance VARCHAR)",
        "question": "What was the Loss when the opponent was the Rangers and the attendance was greater than 43,211?"
    },
    {
        "answer": "SELECT 2008 FROM table_name_36 WHERE 2009 = \"a\" AND 2011 = \"2r\"",
        "context": "CREATE TABLE table_name_36 (Id VARCHAR)",
        "question": "What was the 2008 result associated with a 2009 of A and a 2011 of 2R?"
    },
    {
        "answer": "SELECT position FROM table_name_6 WHERE country = \"brazil\" AND period = \"2008\" AND goals = \"0 1\"",
        "context": "CREATE TABLE table_name_6 (position VARCHAR, goals VARCHAR, country VARCHAR, period VARCHAR)",
        "question": "Name the position for brazil 2008 with goals of 0 1"
    },
    {
        "answer": "SELECT AVG(events) FROM table_name_60 WHERE player = \"tom kite\" AND earnings___$__ < 760 OFFSET 405",
        "context": "CREATE TABLE table_name_60 (events INTEGER, player VARCHAR, earnings___$__ VARCHAR)",
        "question": "Which Events have a Player of tom kite, and Earnings ($) smaller than 760,405?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_66 WHERE overall > 17 AND position = \"quarterback\"",
        "context": "CREATE TABLE table_name_66 (round VARCHAR, overall VARCHAR, position VARCHAR)",
        "question": "How many rounds have an Overall larger than 17, and a Position of quarterback?"
    },
    {
        "answer": "SELECT storm FROM table_name_58 WHERE dance = \"4\" AND clash = \"3\"",
        "context": "CREATE TABLE table_name_58 (storm VARCHAR, dance VARCHAR, clash VARCHAR)",
        "question": "Which storm has a clash of 3 and a dance of 4?"
    },
    {
        "answer": "SELECT sydney FROM table_name_53 WHERE perth = \"no\" AND adelaide = \"no\" AND melbourne = \"yes\" AND gold_coast = \"yes\"",
        "context": "CREATE TABLE table_name_53 (sydney VARCHAR, gold_coast VARCHAR, melbourne VARCHAR, perth VARCHAR, adelaide VARCHAR)",
        "question": "Name the sydney with perth of no, adelaide of no with melbourne of yes and gold coast of yes"
    },
    {
        "answer": "SELECT melbourne FROM table_name_49 WHERE adelaide = \"no\" AND auckland = \"yes\" AND gold_coast = \"no\"",
        "context": "CREATE TABLE table_name_49 (melbourne VARCHAR, gold_coast VARCHAR, adelaide VARCHAR, auckland VARCHAR)",
        "question": "Name the melbourne for adelaide of no with auckland of yes and gold coast of yes"
    },
    {
        "answer": "SELECT date FROM table_name_63 WHERE away_team = \"geelong\"",
        "context": "CREATE TABLE table_name_63 (date VARCHAR, away_team VARCHAR)",
        "question": "What is the date with geelong as Away team?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_1 WHERE away_team = \"essendon\"",
        "context": "CREATE TABLE table_name_1 (away_team VARCHAR)",
        "question": "What is essendon's away team score?"
    },
    {
        "answer": "SELECT SUM(position) FROM table_name_35 WHERE against = 5 AND drawn > 0",
        "context": "CREATE TABLE table_name_35 (position INTEGER, against VARCHAR, drawn VARCHAR)",
        "question": "Which Position has an Against of 5, and a Drawn larger than 0?"
    },
    {
        "answer": "SELECT MAX(played) FROM table_name_66 WHERE lost < 1 AND difference = \"6\" AND against > 2",
        "context": "CREATE TABLE table_name_66 (played INTEGER, against VARCHAR, lost VARCHAR, difference VARCHAR)",
        "question": "Which Played is the highest one that has a Lost smaller than 1, and a Difference of 6, and an Against larger than 2?"
    },
    {
        "answer": "SELECT city_location FROM table_name_60 WHERE pole_position = \"emerson fittipaldi\"",
        "context": "CREATE TABLE table_name_60 (city_location VARCHAR, pole_position VARCHAR)",
        "question": "Where is Emerson Fittipaldi starting in Pole position?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_28 WHERE overall < 187 AND player = \"dave stachelski\"",
        "context": "CREATE TABLE table_name_28 (round INTEGER, overall VARCHAR, player VARCHAR)",
        "question": "Name the average round where Dave Stachelski was picked smaller than 187."
    },
    {
        "answer": "SELECT prize_money FROM table_name_56 WHERE commercial_name = \"michelob light challenge of champions\"",
        "context": "CREATE TABLE table_name_56 (prize_money VARCHAR, commercial_name VARCHAR)",
        "question": "What prize money has michelob light challenge of champions as the commercial name?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_9 WHERE engine = \"alta straight-4\" AND entrant = \"connaught engineering\" AND year < 1957",
        "context": "CREATE TABLE table_name_9 (points INTEGER, year VARCHAR, engine VARCHAR, entrant VARCHAR)",
        "question": "What is the greatest point of an Entrant of connaught engineering alta straight-4 engine before 1957"
    },
    {
        "answer": "SELECT date FROM table_name_92 WHERE type_of_game = \"friendly\" AND opponent = \"france\" AND city = \"paris, france\"",
        "context": "CREATE TABLE table_name_92 (date VARCHAR, city VARCHAR, type_of_game VARCHAR, opponent VARCHAR)",
        "question": "What date has friendly as the type of game, france as an opponent, and paris, france as the city?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_85 WHERE venue = \"lake oval\"",
        "context": "CREATE TABLE table_name_85 (away_team VARCHAR, venue VARCHAR)",
        "question": "What is the score of the team that plays in lake oval?"
    },
    {
        "answer": "SELECT date FROM table_name_24 WHERE margin_of_victory = \"1 stroke\" AND tournament = \"the ace group classic\"",
        "context": "CREATE TABLE table_name_24 (date VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "What was the date of the Ace Group Classic tournament with a 1 stroke margin of victory?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_60 WHERE home_team = \"carlton\"",
        "context": "CREATE TABLE table_name_60 (home_team VARCHAR)",
        "question": "What was the score of the home team of carlton?"
    },
    {
        "answer": "SELECT MAX(number_of_households) FROM table_name_88 WHERE median_family_income = \"$52,106\" AND population < 21 OFFSET 403",
        "context": "CREATE TABLE table_name_88 (number_of_households INTEGER, median_family_income VARCHAR, population VARCHAR)",
        "question": "What is the largest number of households with median family income of $52,106 with less than 21,403 in population?"
    },
    {
        "answer": "SELECT MAX(number_of_households) FROM table_name_2 WHERE median_household_income = \"$54,086\" AND population < 231 OFFSET 236",
        "context": "CREATE TABLE table_name_2 (number_of_households INTEGER, median_household_income VARCHAR, population VARCHAR)",
        "question": "What is the most households with a median household income of $54,086 with less than 231,236 in population?"
    },
    {
        "answer": "SELECT auckland FROM table_name_1 WHERE adelaide = \"no\" AND melbourne = \"yes\" AND sydney = \"yes\"",
        "context": "CREATE TABLE table_name_1 (auckland VARCHAR, sydney VARCHAR, adelaide VARCHAR, melbourne VARCHAR)",
        "question": "Which Auckland has an Adelaide of no, a Melbourne of yes, and a Sydney of yes?"
    },
    {
        "answer": "SELECT venue FROM table_name_38 WHERE host = \"saint joseph's university\"",
        "context": "CREATE TABLE table_name_38 (venue VARCHAR, host VARCHAR)",
        "question": "What is the venue that Saint Joseph's University hosted at?"
    },
    {
        "answer": "SELECT name FROM table_name_3 WHERE overall < 123 AND team = \"detroit lions\"",
        "context": "CREATE TABLE table_name_3 (name VARCHAR, overall VARCHAR, team VARCHAR)",
        "question": "What is the Name with an overall of less than 123 for the Detroit Lions?"
    },
    {
        "answer": "SELECT date FROM table_name_88 WHERE team = \"clare\" AND player = \"ger loughnane\"",
        "context": "CREATE TABLE table_name_88 (date VARCHAR, team VARCHAR, player VARCHAR)",
        "question": "On which date did Ger Loughnane from Team Clare have a match?"
    },
    {
        "answer": "SELECT opponent FROM table_name_45 WHERE round > 1 AND event = \"pfp: ring of fire\"",
        "context": "CREATE TABLE table_name_45 (opponent VARCHAR, round VARCHAR, event VARCHAR)",
        "question": "Which opponent had a round of more than 1 and an even of PFP: ring of fire?"
    },
    {
        "answer": "SELECT division_record FROM table_name_39 WHERE team = \"senators\"",
        "context": "CREATE TABLE table_name_39 (division_record VARCHAR, team VARCHAR)",
        "question": "What is the Senators' division record?"
    },
    {
        "answer": "SELECT nhl_team FROM table_name_66 WHERE position = \"left wing\"",
        "context": "CREATE TABLE table_name_66 (nhl_team VARCHAR, position VARCHAR)",
        "question": "Which NHL team has left wing listed as the position?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_23 WHERE opponent = \"cleveland barons\" AND january > 3",
        "context": "CREATE TABLE table_name_23 (points INTEGER, opponent VARCHAR, january VARCHAR)",
        "question": "What is the average number of points of the game after January 3 against the Cleveland Barons?"
    },
    {
        "answer": "SELECT SUM(roll) FROM table_name_63 WHERE area = \"raetihi\" AND name = \"orautoha school\" AND decile < 8",
        "context": "CREATE TABLE table_name_63 (roll INTEGER, decile VARCHAR, area VARCHAR, name VARCHAR)",
        "question": "What is the roll number of Orautoha school in Raetihi, which has a decile smaller than 8?"
    },
    {
        "answer": "SELECT score FROM table_name_5 WHERE location = \"brendan byrne arena\"",
        "context": "CREATE TABLE table_name_5 (score VARCHAR, location VARCHAR)",
        "question": "Location of brendan byrne arena had what score?"
    },
    {
        "answer": "SELECT location FROM table_name_83 WHERE opponent = \"chicago bulls\"",
        "context": "CREATE TABLE table_name_83 (location VARCHAR, opponent VARCHAR)",
        "question": "Opponent of chicago bulls had what location?"
    },
    {
        "answer": "SELECT name FROM table_name_36 WHERE winning_driver = \"meo constantini\" AND circuit = \"monza\"",
        "context": "CREATE TABLE table_name_36 (name VARCHAR, winning_driver VARCHAR, circuit VARCHAR)",
        "question": "What race did Meo Constantini win at the circuit of monza ?"
    },
    {
        "answer": "SELECT SUM(_number_of_bids) FROM table_name_7 WHERE win__percentage = \".500\" AND conference = \"ohio valley\"",
        "context": "CREATE TABLE table_name_7 (_number_of_bids INTEGER, win__percentage VARCHAR, conference VARCHAR)",
        "question": "How many bids were there for the .500 win percentage in the Ohio Valley conference?"
    },
    {
        "answer": "SELECT visiting_team FROM table_name_24 WHERE week < 12 AND stadium = \"sports authority field at mile high\"",
        "context": "CREATE TABLE table_name_24 (visiting_team VARCHAR, week VARCHAR, stadium VARCHAR)",
        "question": "Who was the visiting team on weeks under 12 and at Sports Authority Field at Mile High?"
    },
    {
        "answer": "SELECT visiting_team FROM table_name_36 WHERE stadium = \"raymond james stadium\"",
        "context": "CREATE TABLE table_name_36 (visiting_team VARCHAR, stadium VARCHAR)",
        "question": "Who was the visiting team at Raymond James Stadium?"
    },
    {
        "answer": "SELECT to_par FROM table_name_62 WHERE country = \"united states\" AND place = \"t8\" AND player = \"tiger woods\"",
        "context": "CREATE TABLE table_name_62 (to_par VARCHAR, player VARCHAR, country VARCHAR, place VARCHAR)",
        "question": "What is the To par and holds the t8 place of the United States player Tiger Woods?"
    },
    {
        "answer": "SELECT attendance FROM table_name_27 WHERE result = \"w 16-10* o.t.\"",
        "context": "CREATE TABLE table_name_27 (attendance VARCHAR, result VARCHAR)",
        "question": "Result of w 16-10* o.t. had what attendance?"
    },
    {
        "answer": "SELECT club_career FROM table_name_65 WHERE position = \"df\" AND total_goals < 18 AND league_apps < 129 AND league_goals > 7",
        "context": "CREATE TABLE table_name_65 (club_career VARCHAR, league_goals VARCHAR, league_apps VARCHAR, position VARCHAR, total_goals VARCHAR)",
        "question": "What was the club career for players in positions of DF, fewer than 18 total goals, fewer than 129 league appearances, and more than 7 league goals?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_45 WHERE group = \"method fest independent film festival\"",
        "context": "CREATE TABLE table_name_45 (year VARCHAR, group VARCHAR)",
        "question": "What is the total number of Years that has the Group, Method Fest Independent Film Festival?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_79 WHERE group = \"logie award\" AND award = \"most outstanding actor\" AND result = \"nominated\"",
        "context": "CREATE TABLE table_name_79 (year INTEGER, result VARCHAR, group VARCHAR, award VARCHAR)",
        "question": "What is the average Year that has the Group, Logie Award, the Award, Most Outstanding Actor, and the Result, nominated?"
    },
    {
        "answer": "SELECT group FROM table_name_31 WHERE result = \"nominated\" AND year < 2012 AND film_show = \"east west 101\" AND award = \"best lead actor in a television drama\"",
        "context": "CREATE TABLE table_name_31 (group VARCHAR, award VARCHAR, film_show VARCHAR, result VARCHAR, year VARCHAR)",
        "question": "Before 2012, which Group has the Result, nominated, the Film/Show, East West 101, and the Award, Best Lead Actor in A Television Drama?"
    },
    {
        "answer": "SELECT award FROM table_name_96 WHERE film_show = \"east west 101\" AND year < 2009 AND group = \"logie award\"",
        "context": "CREATE TABLE table_name_96 (award VARCHAR, group VARCHAR, film_show VARCHAR, year VARCHAR)",
        "question": "What is the Award, when the Film/Show is East West 101, and when the year is before 2009, and when the Group is Logie Award?"
    },
    {
        "answer": "SELECT current_version FROM table_name_14 WHERE rtm_build = \"9200\" AND name = \"windows 8\"",
        "context": "CREATE TABLE table_name_14 (current_version VARCHAR, rtm_build VARCHAR, name VARCHAR)",
        "question": "What is the current version of windows 8 with an RTM build of 9200?"
    },
    {
        "answer": "SELECT MAX(wkts) FROM table_name_58 WHERE ovrs < 28.5 AND player = \"adam voges\"",
        "context": "CREATE TABLE table_name_58 (wkts INTEGER, ovrs VARCHAR, player VARCHAR)",
        "question": "If Adam Voges had less than 28.5 Ovrs, what are his highest Wkts?"
    },
    {
        "answer": "SELECT AVG(pass_def) FROM table_name_63 WHERE team = \"green bay packers\" AND solo = 62 AND sacks < 2",
        "context": "CREATE TABLE table_name_63 (pass_def INTEGER, sacks VARCHAR, team VARCHAR, solo VARCHAR)",
        "question": "What is the average pass def that has green bay packers as the team, 62 as the solo and sacks less than 2?"
    },
    {
        "answer": "SELECT programming FROM table_name_1 WHERE operator = \"ivptc\"",
        "context": "CREATE TABLE table_name_1 (programming VARCHAR, operator VARCHAR)",
        "question": "What channel has an operator of ivptc?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_77 WHERE silver > 6 AND bronze = 6 AND gold < 16",
        "context": "CREATE TABLE table_name_77 (total INTEGER, gold VARCHAR, silver VARCHAR, bronze VARCHAR)",
        "question": "What is the lowest total metals of a team with more than 6 silver, 6 bronze, and fewer than 16 gold medals?"
    },
    {
        "answer": "SELECT MAX(term_ending) FROM table_name_89 WHERE name = \"xue hanqin\"",
        "context": "CREATE TABLE table_name_89 (term_ending INTEGER, name VARCHAR)",
        "question": "Name of xue hanqin has what highest term ending?"
    },
    {
        "answer": "SELECT AVG(year_born) FROM table_name_97 WHERE player = \"radek necas\" AND height < 2.04",
        "context": "CREATE TABLE table_name_97 (year_born INTEGER, player VARCHAR, height VARCHAR)",
        "question": "When was radek necas with less than 2.04 height born?"
    },
    {
        "answer": "SELECT away_captain FROM table_name_84 WHERE venue = \"adelaide oval\"",
        "context": "CREATE TABLE table_name_84 (away_captain VARCHAR, venue VARCHAR)",
        "question": "Who was the captain of the away team at Adelaide Oval?"
    },
    {
        "answer": "SELECT country FROM table_name_10 WHERE driver = \"john nielsen\"",
        "context": "CREATE TABLE table_name_10 (country VARCHAR, driver VARCHAR)",
        "question": "what country is john nielsen from"
    },
    {
        "answer": "SELECT propulsion FROM table_name_68 WHERE order_year = \"2003-2004\" AND manufacturer = \"neoplan usa\"",
        "context": "CREATE TABLE table_name_68 (propulsion VARCHAR, order_year VARCHAR, manufacturer VARCHAR)",
        "question": "What is the Propulsion for the model offered in 2003-2004 by neoplan usa?"
    },
    {
        "answer": "SELECT score FROM table_name_14 WHERE city = \"inglewood, california\"",
        "context": "CREATE TABLE table_name_14 (score VARCHAR, city VARCHAR)",
        "question": "What was the final score of the player from Inglewood, California?"
    },
    {
        "answer": "SELECT previous_champion_s_ FROM table_name_98 WHERE date_won = \"july 7, 2010\"",
        "context": "CREATE TABLE table_name_98 (previous_champion_s_ VARCHAR, date_won VARCHAR)",
        "question": "Who was the previous champion of the title won on July 7, 2010?"
    },
    {
        "answer": "SELECT SUM(founded) FROM table_name_68 WHERE club = \"tri-city storm\" AND titles > 1",
        "context": "CREATE TABLE table_name_68 (founded INTEGER, club VARCHAR, titles VARCHAR)",
        "question": "Which Founded has a Club of tri-city storm and a Titles larger than 1?"
    },
    {
        "answer": "SELECT AVG(founded) FROM table_name_14 WHERE league = \"women's flat track derby association\" AND club = \"omaha rollergirls\"",
        "context": "CREATE TABLE table_name_14 (founded INTEGER, league VARCHAR, club VARCHAR)",
        "question": "Which Founded  has a League of women's flat track derby association, and a Club of omaha rollergirls?"
    },
    {
        "answer": "SELECT score FROM table_name_94 WHERE competition = \"bernardo o'higgins cup\" AND date = \"may 7, 1961\"",
        "context": "CREATE TABLE table_name_94 (score VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "What was the score at Bernardo O'Higgins Cup on May 7, 1961?"
    },
    {
        "answer": "SELECT AVG(grid) FROM table_name_7 WHERE time = \"+22.505\" AND laps > 23",
        "context": "CREATE TABLE table_name_7 (grid INTEGER, time VARCHAR, laps VARCHAR)",
        "question": "What grid has an average time of +22.505 and laps larger than 23?"
    },
    {
        "answer": "SELECT SUM(dist__f_) FROM table_name_12 WHERE jockey = \"johnny murtagh\" AND runners < 26",
        "context": "CREATE TABLE table_name_12 (dist__f_ INTEGER, jockey VARCHAR, runners VARCHAR)",
        "question": "What is the total dist with Johnny Murtagh and less than 26 runners?"
    },
    {
        "answer": "SELECT score FROM table_name_19 WHERE partner = \"lorenzo manta\"",
        "context": "CREATE TABLE table_name_19 (score VARCHAR, partner VARCHAR)",
        "question": "What was the score when Mark parterned with lorenzo manta?"
    },
    {
        "answer": "SELECT place FROM table_name_39 WHERE country = \"united states\" AND to_par = \"e\"",
        "context": "CREATE TABLE table_name_39 (place VARCHAR, country VARCHAR, to_par VARCHAR)",
        "question": "What place in the United States has a To par of e?"
    },
    {
        "answer": "SELECT location FROM table_name_58 WHERE opponent = \"iowa state\"",
        "context": "CREATE TABLE table_name_58 (location VARCHAR, opponent VARCHAR)",
        "question": "Where did the Bruins play Iowa State?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_44 WHERE date = \"may 10\"",
        "context": "CREATE TABLE table_name_44 (attendance VARCHAR, date VARCHAR)",
        "question": "How many people attended the game on May 10?"
    },
    {
        "answer": "SELECT COUNT(goals_against) FROM table_name_13 WHERE goal_difference = 0 AND wins = 12 AND goals_for > 44",
        "context": "CREATE TABLE table_name_13 (goals_against VARCHAR, goals_for VARCHAR, goal_difference VARCHAR, wins VARCHAR)",
        "question": "How many \"goals against\" were scored at the club that had a \"goal difference\" of 0, 12 wins, and more than 44 goals?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_52 WHERE pick__number > 26 AND position = \"defensive back\"",
        "context": "CREATE TABLE table_name_52 (round INTEGER, pick__number VARCHAR, position VARCHAR)",
        "question": "Which Round is the average one that has a Pick # larger than 26, and a Position of defensive back?"
    },
    {
        "answer": "SELECT sport FROM table_name_29 WHERE nation_represented = \"united states\"",
        "context": "CREATE TABLE table_name_29 (sport VARCHAR, nation_represented VARCHAR)",
        "question": "Which sport did the United States win?"
    },
    {
        "answer": "SELECT AVG(population) FROM table_name_54 WHERE median_household_income = \"$40,340\" AND number_of_households < 64 OFFSET 767",
        "context": "CREATE TABLE table_name_54 (population INTEGER, median_household_income VARCHAR, number_of_households VARCHAR)",
        "question": "Median household income of $40,340, and a Number of households smaller than 64,767 is what average population?"
    },
    {
        "answer": "SELECT date FROM table_name_59 WHERE venue = \"arden street oval\"",
        "context": "CREATE TABLE table_name_59 (date VARCHAR, venue VARCHAR)",
        "question": "What was the date of the Arden Street Oval game?"
    },
    {
        "answer": "SELECT AVG(area__km\u00b2_) FROM table_name_24 WHERE name = \"glenella\" AND population__2011_ < 522",
        "context": "CREATE TABLE table_name_24 (area__km\u00b2_ INTEGER, name VARCHAR, population__2011_ VARCHAR)",
        "question": "What was the area in Glenella with a population of 522 in 2011?"
    },
    {
        "answer": "SELECT AVG(events_won__us_series_) FROM table_name_83 WHERE name = \"jason bennett\"",
        "context": "CREATE TABLE table_name_83 (events_won__us_series_ INTEGER, name VARCHAR)",
        "question": "How many US events did jason bennett win?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_10 WHERE tied = \"4\" AND goals_for < 257 AND games > 72",
        "context": "CREATE TABLE table_name_10 (points INTEGER, games VARCHAR, tied VARCHAR, goals_for VARCHAR)",
        "question": "What is the highest number of points scored when Acadie-Bathurst had 4 tied games, less than 257 goals, and over 72 games played?"
    },
    {
        "answer": "SELECT COUNT(played) FROM table_name_22 WHERE first_game = 1991 AND percentage = \"22.22%\" AND lost > 7",
        "context": "CREATE TABLE table_name_22 (played VARCHAR, lost VARCHAR, first_game VARCHAR, percentage VARCHAR)",
        "question": "What is the total number of games played that correlates with a first game in 1991, a percentage of 22.22%, and less than 7 losses?"
    },
    {
        "answer": "SELECT university_students_and_adults__18yrs + _ FROM table_name_86 WHERE specification = \"minimum diameter of sakigawa\" AND gender = \"female\"",
        "context": "CREATE TABLE table_name_86 (university_students_and_adults__18yrs VARCHAR, _ VARCHAR, specification VARCHAR, gender VARCHAR)",
        "question": "Which University students and adults have minimum diameter of Sakigawa for female gender?"
    },
    {
        "answer": "SELECT gender FROM table_name_19 WHERE university_students_and_adults__18yrs + _ = \"25mm\"",
        "context": "CREATE TABLE table_name_19 (gender VARCHAR, university_students_and_adults__18yrs VARCHAR, _ VARCHAR)",
        "question": "Which gender is associated with University students and adults of 25mm?"
    },
    {
        "answer": "SELECT university_students_and_adults__18yrs + _ FROM table_name_57 WHERE gender = \"male\" AND specification = \"minimum weight\"",
        "context": "CREATE TABLE table_name_57 (university_students_and_adults__18yrs VARCHAR, _ VARCHAR, gender VARCHAR, specification VARCHAR)",
        "question": "What value for university students and adult goes with male gender for minimum weight?"
    },
    {
        "answer": "SELECT kind_of_the_song FROM table_name_50 WHERE number > 8 AND name_of_the_song = \"\u5be6\u60c5\"",
        "context": "CREATE TABLE table_name_50 (kind_of_the_song VARCHAR, number VARCHAR, name_of_the_song VARCHAR)",
        "question": "What type of song is larger than 8 and named \u5be6\u60c5?"
    },
    {
        "answer": "SELECT COUNT(start) FROM table_name_21 WHERE finish < 4",
        "context": "CREATE TABLE table_name_21 (start VARCHAR, finish INTEGER)",
        "question": "Name the total number of start when finish is less than 4"
    },
    {
        "answer": "SELECT name FROM table_name_45 WHERE party = \"minister for community safety and legal affairs\"",
        "context": "CREATE TABLE table_name_45 (name VARCHAR, party VARCHAR)",
        "question": "What is the name of the minister from the party of minister for community safety and legal affairs?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_3 WHERE name = \"jon olinger\" AND pick__number < 24",
        "context": "CREATE TABLE table_name_3 (round INTEGER, name VARCHAR, pick__number VARCHAR)",
        "question": "What is the least round number for Jon Olinger, who was picked before pick # 24?"
    },
    {
        "answer": "SELECT year FROM table_name_73 WHERE league = \"malaysian super league\" AND malaysia_cup = \"group stage\"",
        "context": "CREATE TABLE table_name_73 (year VARCHAR, league VARCHAR, malaysia_cup VARCHAR)",
        "question": "What year was the League the malaysian super league, and a Malaysia Cup of group stage?"
    },
    {
        "answer": "SELECT MAX(area__km\u00b2_) FROM table_name_29 WHERE deed_number = \"21352022\" AND population > 184",
        "context": "CREATE TABLE table_name_29 (area__km\u00b2_ INTEGER, deed_number VARCHAR, population VARCHAR)",
        "question": "What is the largest Area (km\u00b2) for Deed number of 21352022 with a Population of more than 184?"
    },
    {
        "answer": "SELECT AVG(roll) FROM table_name_48 WHERE area = \"featherston\" AND authority = \"integrated\"",
        "context": "CREATE TABLE table_name_48 (roll INTEGER, area VARCHAR, authority VARCHAR)",
        "question": "tell me the average roll for the featherston area and integrated authority."
    },
    {
        "answer": "SELECT COUNT(decile) FROM table_name_90 WHERE roll = 251",
        "context": "CREATE TABLE table_name_90 (decile VARCHAR, roll VARCHAR)",
        "question": "tell me the total number of decile with a roll showing 251."
    },
    {
        "answer": "SELECT gross_mw FROM table_name_56 WHERE operation_start = \"2015\"",
        "context": "CREATE TABLE table_name_56 (gross_mw VARCHAR, operation_start VARCHAR)",
        "question": "Operation start of 2015 has what gross mw?"
    },
    {
        "answer": "SELECT SUM(week) FROM table_name_13 WHERE game_site = \"the meadowlands\" AND attendance = \"78,161\"",
        "context": "CREATE TABLE table_name_13 (week INTEGER, game_site VARCHAR, attendance VARCHAR)",
        "question": "What week did the Jets play in the meadowlands with and attendance of 78,161?"
    },
    {
        "answer": "SELECT county FROM table_name_82 WHERE _percentage__2040_ > 1.8 AND _percentage__2000_ < 4.1 AND _percentage__1960_ < 3.2 AND rank = \"13\"",
        "context": "CREATE TABLE table_name_82 (county VARCHAR, rank VARCHAR, _percentage__1960_ VARCHAR, _percentage__2040_ VARCHAR, _percentage__2000_ VARCHAR)",
        "question": "Which county has a % (2040) larger than 1.8, a % (2000) smaller than 4.1, a % (1960) smaller than 3.2, and is ranked 13?"
    },
    {
        "answer": "SELECT representative FROM table_name_65 WHERE appointed_by = \"george w. bush\" AND presentation_of_credentials = \"9 november 2007\"",
        "context": "CREATE TABLE table_name_65 (representative VARCHAR, appointed_by VARCHAR, presentation_of_credentials VARCHAR)",
        "question": "Name the representative appointed by george w. bush with presentation of credentials 9 november 2007"
    },
    {
        "answer": "SELECT MAX(ends_lost) FROM table_name_2 WHERE shot_pct > 77 AND blank_ends = 11 AND stolen_ends = 7 AND ends_won > 44",
        "context": "CREATE TABLE table_name_2 (ends_lost INTEGER, ends_won VARCHAR, stolen_ends VARCHAR, shot_pct VARCHAR, blank_ends VARCHAR)",
        "question": "What's the highest Ends Lost with a shot % greater than 77, 11 blank ends, 7 stolen ends, and more than 44 ends one?"
    },
    {
        "answer": "SELECT whenbuilt FROM table_name_67 WHERE builder = \"brighton\" AND withdrawn = \"september 1964\" AND name = \"blandford forum\"",
        "context": "CREATE TABLE table_name_67 (whenbuilt VARCHAR, name VARCHAR, builder VARCHAR, withdrawn VARCHAR)",
        "question": "What is the whenbuilt of the Brighton built Blandford Forum with a withdrawn of september 1964?"
    },
    {
        "answer": "SELECT year FROM table_name_54 WHERE stages = \"8\"",
        "context": "CREATE TABLE table_name_54 (year VARCHAR, stages VARCHAR)",
        "question": "What year was stage 8 reached?"
    },
    {
        "answer": "SELECT MIN(highest_score) FROM table_name_92 WHERE worst_dancer_s_ = \"master p\" AND best_dancer_s_ = \"drew lachey\" AND lowest_score < 8",
        "context": "CREATE TABLE table_name_92 (highest_score INTEGER, lowest_score VARCHAR, worst_dancer_s_ VARCHAR, best_dancer_s_ VARCHAR)",
        "question": "What is the lowest score in the Highest score column when Master P was the Worst dancer(s), Drew Lachey was the Best dancer(s), and the Lowest score was under 8?"
    },
    {
        "answer": "SELECT AVG(year_of_most_recent_appearance) FROM table_name_27 WHERE year_of_first_appearance > 1976 AND corps_name = \"boston crusaders\"",
        "context": "CREATE TABLE table_name_27 (year_of_most_recent_appearance INTEGER, year_of_first_appearance VARCHAR, corps_name VARCHAR)",
        "question": "What is the average year of the most recent appearance of the Boston Crusaders, who had their first appearance after 1976?"
    },
    {
        "answer": "SELECT date FROM table_name_58 WHERE surface = \"clay\" AND opponent_in_the_final = \"flavio cipolla\"",
        "context": "CREATE TABLE table_name_58 (date VARCHAR, surface VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "On what date did the match against Flavio Cipolla, played on a clay surface, occur?"
    },
    {
        "answer": "SELECT academic_ & _university_affairs FROM table_name_72 WHERE local_affairs = \"andrew langille\"",
        "context": "CREATE TABLE table_name_72 (academic_ VARCHAR, _university_affairs VARCHAR, local_affairs VARCHAR)",
        "question": "Who was in Academic & University Affairs when Andrew Langille  was in local affairs?"
    },
    {
        "answer": "SELECT melbourne FROM table_name_59 WHERE gold_coast = \"yes\" AND adelaide = \"no\" AND sydney = \"yes\"",
        "context": "CREATE TABLE table_name_59 (melbourne VARCHAR, sydney VARCHAR, gold_coast VARCHAR, adelaide VARCHAR)",
        "question": "Which Melbourne had a gold coast and sydney which were yes, but an adelaide that was no?"
    },
    {
        "answer": "SELECT team FROM table_name_73 WHERE rank = 3",
        "context": "CREATE TABLE table_name_73 (team VARCHAR, rank VARCHAR)",
        "question": "What team has rank 3?"
    },
    {
        "answer": "SELECT sydney FROM table_name_47 WHERE gold_coast = \"no\" AND adelaide = \"no\" AND melbourne = \"no\" AND auckland = \"no\"",
        "context": "CREATE TABLE table_name_47 (sydney VARCHAR, auckland VARCHAR, melbourne VARCHAR, gold_coast VARCHAR, adelaide VARCHAR)",
        "question": "Which Syndney's Gold coast, Adelaide, Melbourne, and Auckland were all no?"
    },
    {
        "answer": "SELECT MAX(_number_100) FROM table_name_87 WHERE season = \"1991\" AND against = \"surrey\"",
        "context": "CREATE TABLE table_name_87 (_number_100 INTEGER, season VARCHAR, against VARCHAR)",
        "question": "Which # 100 has a Season of 1991, and an Against of surrey?"
    },
    {
        "answer": "SELECT distance FROM table_name_3 WHERE course = \"vittorio veneto to marina romea\"",
        "context": "CREATE TABLE table_name_3 (distance VARCHAR, course VARCHAR)",
        "question": "Name the distance for Course of vittorio veneto to marina romea"
    },
    {
        "answer": "SELECT SUM(_number_100) FROM table_name_33 WHERE season = \"1990\" AND against = \"warwickshire\"",
        "context": "CREATE TABLE table_name_33 (_number_100 INTEGER, season VARCHAR, against VARCHAR)",
        "question": "Which sum of # 100 has a Season of 1990, and an Against of warwickshire?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_12 WHERE home_team = \"essendon\"",
        "context": "CREATE TABLE table_name_12 (away_team VARCHAR, home_team VARCHAR)",
        "question": "What is the score of the away team when the home team is Essendon?"
    },
    {
        "answer": "SELECT website FROM table_name_81 WHERE webcast = \"listen live\" AND frequency = 99.3",
        "context": "CREATE TABLE table_name_81 (website VARCHAR, webcast VARCHAR, frequency VARCHAR)",
        "question": "What's the website for the Listen Live webcast on the 99.3 frequency?"
    },
    {
        "answer": "SELECT date FROM table_name_14 WHERE tournament = \"at&t pebble beach national pro-am\" AND margin_of_victory = \"1 stroke\" AND to_par = \"\u201311\"",
        "context": "CREATE TABLE table_name_14 (date VARCHAR, to_par VARCHAR, tournament VARCHAR, margin_of_victory VARCHAR)",
        "question": "Which Date has a Tournament of at&t pebble beach national pro-am, and a Margin of victory of 1 stroke, and a To par of \u201311?"
    },
    {
        "answer": "SELECT AVG(debt_as__percentage_of_value) FROM table_name_7 WHERE _percentage_change_on_year = \"62\" AND operating_income__$m_ > -16",
        "context": "CREATE TABLE table_name_7 (debt_as__percentage_of_value INTEGER, _percentage_change_on_year VARCHAR, operating_income__$m_ VARCHAR)",
        "question": "Name the average debt as % of value for operating income more than -16 and % change on year being 62"
    },
    {
        "answer": "SELECT COUNT(revenue__) AS $m_ FROM table_name_21 WHERE country = \"italy\" AND team = \"internazionale\" AND operating_income__$m_ < 27",
        "context": "CREATE TABLE table_name_21 (revenue__ VARCHAR, operating_income__$m_ VARCHAR, country VARCHAR, team VARCHAR)",
        "question": "Name the total number of revenue for italy with team of internazionale with operating income less than 27"
    },
    {
        "answer": "SELECT MAX(revenue__) AS $m_ FROM table_name_92 WHERE operating_income__$m_ > 27 AND team = \"hamburg\" AND debt_as__percentage_of_value < 0",
        "context": "CREATE TABLE table_name_92 (revenue__ INTEGER, debt_as__percentage_of_value VARCHAR, operating_income__$m_ VARCHAR, team VARCHAR)",
        "question": "Name the most revenue for operating income more than 27 for hamburg and debt as % of value less than 0"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_77 WHERE away_team = \"essendon\"",
        "context": "CREATE TABLE table_name_77 (home_team VARCHAR, away_team VARCHAR)",
        "question": "What is the home team score when the away team is Essendon?"
    },
    {
        "answer": "SELECT to_par FROM table_name_30 WHERE money___\u00a3__ = \"200,000\" AND country = \"australia\"",
        "context": "CREATE TABLE table_name_30 (to_par VARCHAR, money___\u00a3__ VARCHAR, country VARCHAR)",
        "question": "Name the to par with money of 200,000 for australia"
    },
    {
        "answer": "SELECT COUNT(population__hervey_bay_) FROM table_name_94 WHERE population__woocoo_ < 640 AND population__maryborough_ < 19 OFFSET 257",
        "context": "CREATE TABLE table_name_94 (population__hervey_bay_ VARCHAR, population__woocoo_ VARCHAR, population__maryborough_ VARCHAR)",
        "question": "Name the total number of population hervey bay with population woocoo less than 640 and population of maryborough less than 19,257"
    },
    {
        "answer": "SELECT SUM(january) FROM table_name_36 WHERE record = \"27-12-3\" AND game < 42",
        "context": "CREATE TABLE table_name_36 (january INTEGER, record VARCHAR, game VARCHAR)",
        "question": "What was the sum of January values with a record of 27-12-3 for a game less than 42?"
    },
    {
        "answer": "SELECT COUNT(january) FROM table_name_30 WHERE opponent = \"philadelphia flyers\"",
        "context": "CREATE TABLE table_name_30 (january VARCHAR, opponent VARCHAR)",
        "question": "What is the number in January for Philadelphia Flyers as opponents?"
    },
    {
        "answer": "SELECT position FROM table_name_58 WHERE appearances = 244 AND leeds_career = \"1981\u20131989\"",
        "context": "CREATE TABLE table_name_58 (position VARCHAR, appearances VARCHAR, leeds_career VARCHAR)",
        "question": "What position does the player who has made 244 appearances with a Leeds career of 1981\u20131989 play?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_21 WHERE country = \"canada\" AND position = \"center\" AND player = \"mario lemieux\"",
        "context": "CREATE TABLE table_name_21 (year INTEGER, player VARCHAR, country VARCHAR, position VARCHAR)",
        "question": "What is the first year that Mario Lemieux from Canada won playing center?"
    },
    {
        "answer": "SELECT maximum_memory FROM table_name_10 WHERE standard_memory = \"16 mb\"",
        "context": "CREATE TABLE table_name_10 (maximum_memory VARCHAR, standard_memory VARCHAR)",
        "question": "What is the maximum memory of the model that has a standard memory of 16 mb?"
    },
    {
        "answer": "SELECT venue FROM table_name_60 WHERE result = \"2-0\" AND score = \"1 goal\" AND competition = \"1980 afc asian cup\"",
        "context": "CREATE TABLE table_name_60 (venue VARCHAR, competition VARCHAR, result VARCHAR, score VARCHAR)",
        "question": "What is the venue when the result is 2-0, and the score is 1 goal, and the competition is 1980 afc asian cup?"
    },
    {
        "answer": "SELECT MIN(crowd) FROM table_name_93 WHERE home_team = \"footscray\"",
        "context": "CREATE TABLE table_name_93 (crowd INTEGER, home_team VARCHAR)",
        "question": "What was the smallest crowd size at a home game for Footscray?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_64 WHERE chassis = \"march 762\" AND points > 0",
        "context": "CREATE TABLE table_name_64 (year VARCHAR, chassis VARCHAR, points VARCHAR)",
        "question": "What year had the Chassis of march 762 and more than 0 points?"
    },
    {
        "answer": "SELECT MIN(grid) FROM table_name_74 WHERE manufacturer = \"ktm\" AND laps > 20",
        "context": "CREATE TABLE table_name_74 (grid INTEGER, manufacturer VARCHAR, laps VARCHAR)",
        "question": "What is the lowest grid number that had a rider with KTM as the manufacturer who did more than 20 laps?"
    },
    {
        "answer": "SELECT record FROM table_name_46 WHERE game_site = \"raymond james stadium\"",
        "context": "CREATE TABLE table_name_46 (record VARCHAR, game_site VARCHAR)",
        "question": "What is the record when the game was played at raymond james stadium?"
    },
    {
        "answer": "SELECT kickoff FROM table_name_30 WHERE date = \"october 22, 2000\"",
        "context": "CREATE TABLE table_name_30 (kickoff VARCHAR, date VARCHAR)",
        "question": "What is the kickoff for the game on october 22, 2000?"
    },
    {
        "answer": "SELECT language FROM table_name_43 WHERE service = \"optimum tv\" AND origin_of_programming = \"united states\" AND genre = \"cricket\"",
        "context": "CREATE TABLE table_name_43 (language VARCHAR, genre VARCHAR, service VARCHAR, origin_of_programming VARCHAR)",
        "question": "Which language is used by the optimum TV service that shows cricket and is based in the United States?"
    },
    {
        "answer": "SELECT origin_of_programming FROM table_name_11 WHERE service = \"dish\" AND language = \"malayalam\" AND genre = \"general\" AND network = \"asianet plus\"",
        "context": "CREATE TABLE table_name_11 (origin_of_programming VARCHAR, network VARCHAR, genre VARCHAR, service VARCHAR, language VARCHAR)",
        "question": "What is the origin of the Malayalam Dish Service that shows general programming on the Asianet Plus network?"
    },
    {
        "answer": "SELECT AVG(grid) FROM table_name_10 WHERE constructor = \"ferrari\" AND time_retired = \"1:32:35.101\"",
        "context": "CREATE TABLE table_name_10 (grid INTEGER, constructor VARCHAR, time_retired VARCHAR)",
        "question": "What is the average grid number with a ferrari and a time or retired time of 1:32:35.101?"
    },
    {
        "answer": "SELECT type FROM table_name_46 WHERE date < 1943 AND builder = \"alco schenectady\" AND number > 822 AND works_number = 59867",
        "context": "CREATE TABLE table_name_46 (type VARCHAR, works_number VARCHAR, number VARCHAR, date VARCHAR, builder VARCHAR)",
        "question": "Which Type has a Date smaller than 1943, and a Builder of alco schenectady, and a Number larger than 822, and Works number of 59867?"
    },
    {
        "answer": "SELECT SUM(bronze) FROM table_name_45 WHERE silver > 3",
        "context": "CREATE TABLE table_name_45 (bronze INTEGER, silver INTEGER)",
        "question": "What is the sum of bronze when silver is greater than 3?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_54 WHERE gold = 0 AND bronze = 0 AND silver < 1",
        "context": "CREATE TABLE table_name_54 (total INTEGER, silver VARCHAR, gold VARCHAR, bronze VARCHAR)",
        "question": "What is the average total when gold is 0, bronze is 0, and silver is smaller than 1?"
    },
    {
        "answer": "SELECT MAX(money_requested__) AS \u00a3_ FROM table_name_24 WHERE episode = \"episode 7\" AND entrepreneur_s_ = \"jerry mantalvanos & paul merker\"",
        "context": "CREATE TABLE table_name_24 (money_requested__ INTEGER, episode VARCHAR, entrepreneur_s_ VARCHAR)",
        "question": "In episode 7 what was the highest amount of money requested by Jerry Mantalvanos & Paul Merker ?"
    },
    {
        "answer": "SELECT money_requested__\u00a3_ FROM table_name_59 WHERE company_or_product_name = \"reestore\"",
        "context": "CREATE TABLE table_name_59 (money_requested__\u00a3_ VARCHAR, company_or_product_name VARCHAR)",
        "question": "How much money did reestore request ?"
    },
    {
        "answer": "SELECT opponents_in_final FROM table_name_15 WHERE outcome = \"winner\" AND surface = \"hard\" AND date = \"april 17, 1994\"",
        "context": "CREATE TABLE table_name_15 (opponents_in_final VARCHAR, date VARCHAR, outcome VARCHAR, surface VARCHAR)",
        "question": "Which Opponents in Final has an Outcome of winner, and a Surface of hard, and a Date of april 17, 1994?"
    },
    {
        "answer": "SELECT race FROM table_name_80 WHERE place = \"2nd\" AND season = 1996 AND date = \"20-jan-1996\"",
        "context": "CREATE TABLE table_name_80 (race VARCHAR, date VARCHAR, place VARCHAR, season VARCHAR)",
        "question": "Which race resulted in 2nd place in the 1996 season on 20-Jan-1996?"
    },
    {
        "answer": "SELECT record FROM table_name_23 WHERE home = \"detroit red wings\" AND score = \"1\u20132\" AND date = \"december 29\"",
        "context": "CREATE TABLE table_name_23 (record VARCHAR, date VARCHAR, home VARCHAR, score VARCHAR)",
        "question": "What is the Record that has a Home of detroit red wings, and a Score of 1\u20132 on december 29?"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_name_32 WHERE name = \"william middleton\" AND round > 5",
        "context": "CREATE TABLE table_name_32 (pick__number INTEGER, name VARCHAR, round VARCHAR)",
        "question": "Which Pick # is the highest one that has a Name of william middleton, and a Round larger than 5?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_84 WHERE tally = \"1-19\" AND matches < 2",
        "context": "CREATE TABLE table_name_84 (total VARCHAR, tally VARCHAR, matches VARCHAR)",
        "question": "What are the total number of matches smaller than 2 with a tally of 1-19?"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_name_86 WHERE name = \"lawrence sidbury\" AND round < 4",
        "context": "CREATE TABLE table_name_86 (pick__number INTEGER, name VARCHAR, round VARCHAR)",
        "question": "Which Pick # is the highest one that has a Name of lawrence sidbury, and a Round smaller than 4?"
    },
    {
        "answer": "SELECT being__qualities_ FROM table_name_52 WHERE having__things_ = \"language, religions, work, customs, values, norms\"",
        "context": "CREATE TABLE table_name_52 (being__qualities_ VARCHAR, having__things_ VARCHAR)",
        "question": "Name the being for having things of language, religions, work, customs, values, norms?"
    },
    {
        "answer": "SELECT winning_driver FROM table_name_53 WHERE winning_constructor = \"alfa romeo\" AND name = \"roussillon grand prix\"",
        "context": "CREATE TABLE table_name_53 (winning_driver VARCHAR, winning_constructor VARCHAR, name VARCHAR)",
        "question": "Which winning driver of the Roussillon Grand Prix had an Alfa Romeo?"
    },
    {
        "answer": "SELECT interacting__settings_ FROM table_name_40 WHERE doing__actions_ = \"co-operate, plan, take care of, help\"",
        "context": "CREATE TABLE table_name_40 (interacting__settings_ VARCHAR, doing__actions_ VARCHAR)",
        "question": "Name the interacting settings for co-operate, plan, take care of, help"
    },
    {
        "answer": "SELECT record FROM table_name_85 WHERE home = \"edmonton oilers\" AND visitor = \"chicago blackhawks\" AND date = \"november 27\"",
        "context": "CREATE TABLE table_name_85 (record VARCHAR, date VARCHAR, home VARCHAR, visitor VARCHAR)",
        "question": "What was the oilers record for the game on November 27 when the Edmonton oilers were playing at home and the Chicago Blackhawks were the visiting team?"
    },
    {
        "answer": "SELECT lead FROM table_name_95 WHERE institute = \"election results\" AND social_democratic = \"31.7% 8 seats\"",
        "context": "CREATE TABLE table_name_95 (lead VARCHAR, institute VARCHAR, social_democratic VARCHAR)",
        "question": "Name the lead for institute of election results and social democratic of 31.7% 8 seats"
    },
    {
        "answer": "SELECT driver FROM table_name_3 WHERE laps < 53 AND grid > 17 AND time_retired = \"spin\"",
        "context": "CREATE TABLE table_name_3 (driver VARCHAR, time_retired VARCHAR, laps VARCHAR, grid VARCHAR)",
        "question": "Who was the driver with less than 53 laps, Grid larger than 17, and a Time/Retired of spin?"
    },
    {
        "answer": "SELECT district FROM table_name_3 WHERE first_elected = 1858 AND result = \"defeated democratic gain\" AND incumbent = \"james humphrey\"",
        "context": "CREATE TABLE table_name_3 (district VARCHAR, incumbent VARCHAR, first_elected VARCHAR, result VARCHAR)",
        "question": "What district is James Humphrey from who was first elected in 1858 and was eventually defeated democratic gain?"
    },
    {
        "answer": "SELECT date FROM table_name_40 WHERE surface = \"hard\" AND opponent = \"eva hrdinov\u00e1\"",
        "context": "CREATE TABLE table_name_40 (date VARCHAR, surface VARCHAR, opponent VARCHAR)",
        "question": "What date was the surface hard and Eva Hrdinov\u00e1 was the opponent?"
    },
    {
        "answer": "SELECT MIN(year_left) FROM table_name_13 WHERE school = \"calumet\" AND year_joined > 1993",
        "context": "CREATE TABLE table_name_13 (year_left INTEGER, school VARCHAR, year_joined VARCHAR)",
        "question": "Which Year Left is the lowest one that has a School of calumet, and a Year Joined larger than 1993?"
    },
    {
        "answer": "SELECT COUNT(event) FROM table_name_92 WHERE round = \"radek \u0161t\u011bp\u00e1nek\" AND NOT aces < 3",
        "context": "CREATE TABLE table_name_92 (event VARCHAR, round VARCHAR, aces VARCHAR)",
        "question": "What is the event year radek \u0161t\u011bp\u00e1nek was the round and there were less than 3 aces?"
    },
    {
        "answer": "SELECT MAX(player) FROM table_name_63 WHERE year = \"1r\" AND sets = \"clay\" AND NOT aces > 4",
        "context": "CREATE TABLE table_name_63 (player INTEGER, year VARCHAR, sets VARCHAR, aces VARCHAR)",
        "question": "What is the highest number of players during 1r year with a clay set and more than 4 aces?"
    },
    {
        "answer": "SELECT winner FROM table_name_80 WHERE team_classification = \"la vie claire\" AND general_classification = \"greg lemond\" AND stage = \"20\"",
        "context": "CREATE TABLE table_name_80 (winner VARCHAR, stage VARCHAR, team_classification VARCHAR, general_classification VARCHAR)",
        "question": "Who has a Team classification of la vie claire, a stage of 20, a General classification of greg lemond?"
    },
    {
        "answer": "SELECT general_classification FROM table_name_62 WHERE team_classification = \"la vie claire\" AND stage = \"12\"",
        "context": "CREATE TABLE table_name_62 (general_classification VARCHAR, team_classification VARCHAR, stage VARCHAR)",
        "question": "What is the classification with a Team classification of la vie claire and a Stage of 12?"
    },
    {
        "answer": "SELECT team_classification FROM table_name_74 WHERE winner = \"ludo peeters\"",
        "context": "CREATE TABLE table_name_74 (team_classification VARCHAR, winner VARCHAR)",
        "question": "What is Ludo Peeters' team classification?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_52 WHERE chassis = \"talbot-lago t26c\" AND points < 3",
        "context": "CREATE TABLE table_name_52 (year VARCHAR, chassis VARCHAR, points VARCHAR)",
        "question": "Name the total number of years for talbot-lago t26c and points less than 3"
    },
    {
        "answer": "SELECT stage FROM table_name_7 WHERE team_classification = \"banesto\" AND points_classification = \"tony rominger\"",
        "context": "CREATE TABLE table_name_7 (stage VARCHAR, team_classification VARCHAR, points_classification VARCHAR)",
        "question": "Which stage corresponds to Banesto and Tony Rominger?"
    },
    {
        "answer": "SELECT entrepreneur_s_ FROM table_name_27 WHERE money_requested__\u00a3_ = \"60,000\"",
        "context": "CREATE TABLE table_name_27 (entrepreneur_s_ VARCHAR, money_requested__\u00a3_ VARCHAR)",
        "question": "What Entrepreneurs requested \u00a360,000?"
    },
    {
        "answer": "SELECT MIN(week) FROM table_name_12 WHERE opponent = \"chicago cardinals\" AND attendance < 25 OFFSET 312",
        "context": "CREATE TABLE table_name_12 (week INTEGER, opponent VARCHAR, attendance VARCHAR)",
        "question": "What was the earliest week the team played the chicago cardinals in front of less than 25,312?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_84 WHERE position = \"d\" AND round < 11 AND player = \"dennis vial\"",
        "context": "CREATE TABLE table_name_84 (college_junior_club_team__league_ VARCHAR, player VARCHAR, position VARCHAR, round VARCHAR)",
        "question": "What league has a D position, a round smaller than 11 and is with Dennis Vial?"
    },
    {
        "answer": "SELECT japanese_voice_actor FROM table_name_87 WHERE battle_of_the_planets = \"keyop\"",
        "context": "CREATE TABLE table_name_87 (japanese_voice_actor VARCHAR, battle_of_the_planets VARCHAR)",
        "question": "Who is the Japanese voice actor of the Battle of the Planets of Keyop?"
    },
    {
        "answer": "SELECT MAX(season) FROM table_name_72 WHERE country = \"uzbekistan\" AND team = \"fc pakhtakor tashkent\" AND apps > 6",
        "context": "CREATE TABLE table_name_72 (season INTEGER, apps VARCHAR, country VARCHAR, team VARCHAR)",
        "question": "In which season did Fc Pakhtakor Tashkent represent the country of Uzbekistan with more than 6 apps?"
    },
    {
        "answer": "SELECT voice_actor__harmony_gold_ova_dub_ FROM table_name_10 WHERE voice_actor__adv_tv_sentai_ova_dub_ = \"kim prause\"",
        "context": "CREATE TABLE table_name_10 (voice_actor__harmony_gold_ova_dub_ VARCHAR, voice_actor__adv_tv_sentai_ova_dub_ VARCHAR)",
        "question": "Who is the voice actor (harmony gold ova dub) of the character with a voice actor (adv TV/sentai ova dub) Kim Prause?"
    },
    {
        "answer": "SELECT name FROM table_name_32 WHERE courtesy_title = \"sanuki-no-kami/jiju\"",
        "context": "CREATE TABLE table_name_32 (name VARCHAR, courtesy_title VARCHAR)",
        "question": "What is the name of the person with a courtesy title of sanuki-no-kami/jiju?"
    },
    {
        "answer": "SELECT AVG(number_of_seasons_in_top_division) FROM table_name_65 WHERE number_of_seasons_in_prva_hnl = 17",
        "context": "CREATE TABLE table_name_65 (number_of_seasons_in_top_division INTEGER, number_of_seasons_in_prva_hnl VARCHAR)",
        "question": "Name the average number of seasons for Prva HNL of 17"
    },
    {
        "answer": "SELECT MIN(number_of_seasons_in_top_division) FROM table_name_46 WHERE position_in_2012_13 = \"001 1st\"",
        "context": "CREATE TABLE table_name_46 (number_of_seasons_in_top_division INTEGER, position_in_2012_13 VARCHAR)",
        "question": "Name the least number of seasons in top division with position in 2012-13 of 001 1st"
    },
    {
        "answer": "SELECT away_team FROM table_name_56 WHERE home_team = \"richmond\"",
        "context": "CREATE TABLE table_name_56 (away_team VARCHAR, home_team VARCHAR)",
        "question": "Who was the opponent when Richmond played as the home team?"
    },
    {
        "answer": "SELECT home_captain FROM table_name_89 WHERE venue = \"sabina park\"",
        "context": "CREATE TABLE table_name_89 (home_captain VARCHAR, venue VARCHAR)",
        "question": "Who was the home captain at Sabina Park?"
    },
    {
        "answer": "SELECT surname FROM table_name_64 WHERE throws = \"r\" AND position = \"p\" AND dob = \"26 april 1989\"",
        "context": "CREATE TABLE table_name_64 (surname VARCHAR, dob VARCHAR, throws VARCHAR, position VARCHAR)",
        "question": "Which Surname has Throws of r, and a Position of p, and a DOB of 26 april 1989?"
    },
    {
        "answer": "SELECT genre FROM table_name_98 WHERE release_year_of_first_charted_record = 1988",
        "context": "CREATE TABLE table_name_98 (genre VARCHAR, release_year_of_first_charted_record VARCHAR)",
        "question": "Name the genre for release-year of first charted record of 1988"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_2 WHERE home_team = \"footscray\"",
        "context": "CREATE TABLE table_name_2 (home_team VARCHAR)",
        "question": "What was Footscray's score when it played as the home team?"
    },
    {
        "answer": "SELECT outcome FROM table_name_41 WHERE opponent_in_the_final = \"carlos kirmayr\"",
        "context": "CREATE TABLE table_name_41 (outcome VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "What was the Outcome against Opponent in the Final Carlos Kirmayr?"
    },
    {
        "answer": "SELECT championship FROM table_name_89 WHERE outcome = \"runner-up\" AND surface = \"clay\" AND opponent_in_the_final = \"ivan lendl\"",
        "context": "CREATE TABLE table_name_89 (championship VARCHAR, opponent_in_the_final VARCHAR, outcome VARCHAR, surface VARCHAR)",
        "question": "Against Opponent in the Final Ivan Lendl, on a Surface of clay, with an Outcome of runner-up, where was the Championship?"
    },
    {
        "answer": "SELECT opponent FROM table_name_35 WHERE loss = \"wells (4-7)\"",
        "context": "CREATE TABLE table_name_35 (opponent VARCHAR, loss VARCHAR)",
        "question": "Who was the opponent when the loss was Wells (4-7)?"
    },
    {
        "answer": "SELECT date FROM table_name_36 WHERE points < 85 AND game__number = 74",
        "context": "CREATE TABLE table_name_36 (date VARCHAR, points VARCHAR, game__number VARCHAR)",
        "question": "Which Date has Points smaller than 85 and a Game # of 74?"
    },
    {
        "answer": "SELECT visitor FROM table_name_20 WHERE game__number < 67 AND home = \"buffalo\"",
        "context": "CREATE TABLE table_name_20 (visitor VARCHAR, game__number VARCHAR, home VARCHAR)",
        "question": "What is listed for Vistor that has a Game # that is smaller than 67 and has a Home listed as Buffalo?"
    },
    {
        "answer": "SELECT opponent FROM table_name_51 WHERE surface = \"clay\" AND outcome = \"winner\" AND tournament = \"bogot\u00e1\" AND score = \"6\u20130, 6\u20134\"",
        "context": "CREATE TABLE table_name_51 (opponent VARCHAR, score VARCHAR, tournament VARCHAR, surface VARCHAR, outcome VARCHAR)",
        "question": "Which opponent has a Surface of clay, an Outcome of winner, a Tournament of bogot\u00e1, and a Score of 6\u20130, 6\u20134?"
    },
    {
        "answer": "SELECT home_leg FROM table_name_82 WHERE competition = \"uefa europa league\" AND round = \"q1\" AND opponents = \"motherwell\"",
        "context": "CREATE TABLE table_name_82 (home_leg VARCHAR, opponents VARCHAR, competition VARCHAR, round VARCHAR)",
        "question": "Name the home leg for uefa europa league and round of q1 with opponents of motherwell"
    },
    {
        "answer": "SELECT MIN(overall) FROM table_name_46 WHERE college = \"san diego state\" AND pick__number < 30",
        "context": "CREATE TABLE table_name_46 (overall INTEGER, college VARCHAR, pick__number VARCHAR)",
        "question": "College of san diego state, and a Pick # smaller than 30 has what lowest overall?"
    },
    {
        "answer": "SELECT MAX(first_elected) FROM table_name_73 WHERE party = \"dem\" AND district > 24 AND home_city_town = \"berlin\"",
        "context": "CREATE TABLE table_name_73 (first_elected INTEGER, home_city_town VARCHAR, party VARCHAR, district VARCHAR)",
        "question": "Which First elected is the highest one that has a Party of dem, and a District larger than 24, and a Home city/town of berlin?"
    },
    {
        "answer": "SELECT COUNT(lane) FROM table_name_80 WHERE heat = 1 AND name = \"david carry\"",
        "context": "CREATE TABLE table_name_80 (lane VARCHAR, heat VARCHAR, name VARCHAR)",
        "question": "What lane is David Carry in heat 1?"
    },
    {
        "answer": "SELECT away_team FROM table_name_96 WHERE home_team = \"carlton\"",
        "context": "CREATE TABLE table_name_96 (away_team VARCHAR, home_team VARCHAR)",
        "question": "Which Away team has Carlton for it's Home team?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_96 WHERE team = \"suzuki\" AND year < 1981 AND wins < 0",
        "context": "CREATE TABLE table_name_96 (points INTEGER, wins VARCHAR, team VARCHAR, year VARCHAR)",
        "question": "Before 1981, how many Points did Team Suzuki have with less than 0 Wins?"
    },
    {
        "answer": "SELECT MIN(wins) FROM table_name_51 WHERE year > 1986 AND team = \"lucky strike yamaha\" AND points < 6",
        "context": "CREATE TABLE table_name_51 (wins INTEGER, points VARCHAR, year VARCHAR, team VARCHAR)",
        "question": "After 1986, how many Wins did Lucky Strike Yamaha Team with less than 6 Points have?"
    },
    {
        "answer": "SELECT event FROM table_name_24 WHERE res = \"win\" AND round = \"n/a\" AND opponent = \"nicolas smith\"",
        "context": "CREATE TABLE table_name_24 (event VARCHAR, opponent VARCHAR, res VARCHAR, round VARCHAR)",
        "question": "Which event is a win by an opponent of Nicolas Smith, with the round marked n/a?"
    },
    {
        "answer": "SELECT SUM(crowd) FROM table_name_49 WHERE venue = \"windy hill\"",
        "context": "CREATE TABLE table_name_49 (crowd INTEGER, venue VARCHAR)",
        "question": "What was the crowd when the VFL played Windy Hill?"
    },
    {
        "answer": "SELECT MIN(quay_cranes) FROM table_name_72 WHERE berths = 1 AND operator = \"mtl\" AND terminal = \"terminal 5 (ct5)\"",
        "context": "CREATE TABLE table_name_72 (quay_cranes INTEGER, terminal VARCHAR, berths VARCHAR, operator VARCHAR)",
        "question": "Name the lowest Quay cranes for Berths of 1 and operator of mtl with terminal of terminal 5 (ct5)"
    },
    {
        "answer": "SELECT home_team FROM table_name_9 WHERE away_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_9 (home_team VARCHAR, away_team VARCHAR)",
        "question": "Which Home team faced the Away team, Hawthorn?"
    },
    {
        "answer": "SELECT COUNT(division) FROM table_name_9 WHERE fa_cup = \"round of 16\" AND season > 2012",
        "context": "CREATE TABLE table_name_9 (division VARCHAR, fa_cup VARCHAR, season VARCHAR)",
        "question": "What is the division in the season more recent than 2012 when the round of 16 was reached in the FA Cup?"
    },
    {
        "answer": "SELECT location FROM table_name_23 WHERE current_conference = \"ssac\" AND institution = \"belhaven college\"",
        "context": "CREATE TABLE table_name_23 (location VARCHAR, current_conference VARCHAR, institution VARCHAR)",
        "question": "Where is the Belhaven College SSAC conference location?"
    },
    {
        "answer": "SELECT institution FROM table_name_87 WHERE founded > 1883 AND current_conference = \"american southwest\"",
        "context": "CREATE TABLE table_name_87 (institution VARCHAR, founded VARCHAR, current_conference VARCHAR)",
        "question": "What American Southwest Conference school was founded in 1883?"
    },
    {
        "answer": "SELECT AVG(pct) FROM table_name_51 WHERE state_champions < 1 AND mrc_championships = 10 AND co_champions > 4",
        "context": "CREATE TABLE table_name_51 (pct INTEGER, co_champions VARCHAR, state_champions VARCHAR, mrc_championships VARCHAR)",
        "question": "What is the average Pct value when state champions is less than 1, MRC Championships  is 10, and co-champions are greater than 4?"
    },
    {
        "answer": "SELECT COUNT(crowd) FROM table_name_96 WHERE home_team = \"geelong\"",
        "context": "CREATE TABLE table_name_96 (crowd VARCHAR, home_team VARCHAR)",
        "question": "How big was the crowd when Geelong was the home team?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_33 WHERE associate_professors > 4 AND lecturers = 5 AND professors < 40",
        "context": "CREATE TABLE table_name_33 (total VARCHAR, professors VARCHAR, associate_professors VARCHAR, lecturers VARCHAR)",
        "question": "What is the total in the case when there are more than 4 associate professors, 5 lecturers and fewer professors than 40?"
    },
    {
        "answer": "SELECT COUNT(lecturers) FROM table_name_71 WHERE assistant_professors > 8 AND professors > 14 AND associate_professors < 35 AND total > 81",
        "context": "CREATE TABLE table_name_71 (lecturers VARCHAR, total VARCHAR, associate_professors VARCHAR, assistant_professors VARCHAR, professors VARCHAR)",
        "question": "How may lecturers are there in the case when there are more than 8 assistant professors, fewer than 35 associate professors, more than 14 professors and total of more than 81?"
    },
    {
        "answer": "SELECT service FROM table_name_96 WHERE origin_of_programming = \"india\" AND genre = \"general\" AND network = \"zee variasi\"",
        "context": "CREATE TABLE table_name_96 (service VARCHAR, network VARCHAR, origin_of_programming VARCHAR, genre VARCHAR)",
        "question": "Which general service in India is a part of the zee variasi network?"
    },
    {
        "answer": "SELECT body_tackle FROM table_name_56 WHERE diving_tackle = \"yes\" AND sliding_tackle = \"classified as a trip\"",
        "context": "CREATE TABLE table_name_56 (body_tackle VARCHAR, diving_tackle VARCHAR, sliding_tackle VARCHAR)",
        "question": "Which body tackle has yes for the diving tackle and the sliding tackle classified as a trip?"
    },
    {
        "answer": "SELECT director FROM table_name_14 WHERE original_title = \"best foreign film\"",
        "context": "CREATE TABLE table_name_14 (director VARCHAR, original_title VARCHAR)",
        "question": "Who is the director of the best foreign film?"
    },
    {
        "answer": "SELECT quotient FROM table_name_10 WHERE votes = \"27,391\"",
        "context": "CREATE TABLE table_name_10 (quotient VARCHAR, votes VARCHAR)",
        "question": "Votes of 27,391 has which quotient?"
    },
    {
        "answer": "SELECT english_title FROM table_name_90 WHERE original_title = \"ansikte mot ansikte\"",
        "context": "CREATE TABLE table_name_90 (english_title VARCHAR, original_title VARCHAR)",
        "question": "What is the English title for Ansikte Mot Ansikte?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_31 WHERE outcome = \"winner\" AND date = \"3 august 2013\"",
        "context": "CREATE TABLE table_name_31 (score_in_the_final VARCHAR, outcome VARCHAR, date VARCHAR)",
        "question": "Which Score in the final has an Outcome of winner, and a Date of 3 august 2013?"
    },
    {
        "answer": "SELECT COUNT(goals_for) FROM table_name_80 WHERE club = \"lokomotiv plovdiv\" AND goals_against > 58",
        "context": "CREATE TABLE table_name_80 (goals_for VARCHAR, club VARCHAR, goals_against VARCHAR)",
        "question": "How many goals have a Lokomotiv Plovdiv club and goals against larger than 58?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_60 WHERE entrant = \"marlboro brm\" AND chassis = \"brm p160b\"",
        "context": "CREATE TABLE table_name_60 (points INTEGER, entrant VARCHAR, chassis VARCHAR)",
        "question": "What was marlboro brm's lowest points by using brm p160b?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_61 WHERE competition = \"u.s championships\" AND event = \"all around\"",
        "context": "CREATE TABLE table_name_61 (year INTEGER, competition VARCHAR, event VARCHAR)",
        "question": "Competition of u.s championships, and a Event of all around has what average year?"
    },
    {
        "answer": "SELECT tournament FROM table_name_39 WHERE partnering = \"diego p\u00e9rez\" AND opponents_in_the_final = \"christer allgardh carl limberger\"",
        "context": "CREATE TABLE table_name_39 (tournament VARCHAR, partnering VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "WHich Tournament  has a Partnering of diego p\u00e9rez and a Opponents in the final of christer allgardh carl limberger?"
    },
    {
        "answer": "SELECT score FROM table_name_25 WHERE opponents_in_the_final = \"jordi arrese \u00e0lex corretja\"",
        "context": "CREATE TABLE table_name_25 (score VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "What is the Score of an Opponent\\ in the final of jordi arrese \u00e0lex corretja?"
    },
    {
        "answer": "SELECT 2007 FROM table_name_36 WHERE 2009 = \"1r\" AND 2011 = \"2r\" AND tournament = \"wimbledon\"",
        "context": "CREATE TABLE table_name_36 (tournament VARCHAR)",
        "question": "What is the 2007 value with 1r in 2009 and 2r in 2011 at the Tournament of Wimbledon?"
    },
    {
        "answer": "SELECT 2003 FROM table_name_16 WHERE 2009 = \"1r\" AND tournament = \"australian open\"",
        "context": "CREATE TABLE table_name_16 (tournament VARCHAR)",
        "question": "What is the 2003 value with 1r in 2009 at the Australian Open?"
    },
    {
        "answer": "SELECT event FROM table_name_98 WHERE location = \"brighton, uk\"",
        "context": "CREATE TABLE table_name_98 (event VARCHAR, location VARCHAR)",
        "question": "What bombing happened in Brighton, UK?"
    },
    {
        "answer": "SELECT MAX(goal) FROM table_name_39 WHERE result = \"2\u20133\"",
        "context": "CREATE TABLE table_name_39 (goal INTEGER, result VARCHAR)",
        "question": "What is the top goal for the result of 2\u20133?"
    },
    {
        "answer": "SELECT MAX(yards) FROM table_name_51 WHERE rec < 54 AND long < 5 AND player = \"todd herremans\" AND avg > 1",
        "context": "CREATE TABLE table_name_51 (yards INTEGER, avg VARCHAR, player VARCHAR, rec VARCHAR, long VARCHAR)",
        "question": "Which Yards is the highest one that has a Rec smaller than 54, and a Long smaller than 5, and a Player of todd herremans, and an Avg larger than 1?"
    },
    {
        "answer": "SELECT class FROM table_name_67 WHERE pos = \"4th\" AND year < 2006",
        "context": "CREATE TABLE table_name_67 (class VARCHAR, pos VARCHAR, year VARCHAR)",
        "question": "Name the class for 4th position with year before 2006"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_17 WHERE pos = \"23rd\"",
        "context": "CREATE TABLE table_name_17 (laps VARCHAR, pos VARCHAR)",
        "question": "Name the total number of laps for 23rd position"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_12 WHERE player = \"tom hammond\" AND extra_points > 12",
        "context": "CREATE TABLE table_name_12 (points INTEGER, player VARCHAR, extra_points VARCHAR)",
        "question": "How many points does Tom Hammond have if he has more than 12 points?"
    },
    {
        "answer": "SELECT province FROM table_name_55 WHERE election > 2009",
        "context": "CREATE TABLE table_name_55 (province VARCHAR, election INTEGER)",
        "question": "What province has an election after 2009?"
    },
    {
        "answer": "SELECT matches_w_l FROM table_name_64 WHERE players = \"judith wiesner and alex antonitsch\"",
        "context": "CREATE TABLE table_name_64 (matches_w_l VARCHAR, players VARCHAR)",
        "question": "Players of judith wiesner and alex antonitsch had what match w-l?"
    },
    {
        "answer": "SELECT seeding FROM table_name_41 WHERE matches_w_l = \"1-2\" AND team = \"spain\"",
        "context": "CREATE TABLE table_name_41 (seeding VARCHAR, matches_w_l VARCHAR, team VARCHAR)",
        "question": "Matches W-L of 1-2, and a Team of spain had what seeding?"
    },
    {
        "answer": "SELECT venue FROM table_name_57 WHERE away_team = \"collingwood\"",
        "context": "CREATE TABLE table_name_57 (venue VARCHAR, away_team VARCHAR)",
        "question": "Where did Collingwood play ae the away team?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_49 WHERE title = \"the angry brigade\"",
        "context": "CREATE TABLE table_name_49 (year INTEGER, title VARCHAR)",
        "question": "Title of the angry brigade involves which lowest year?"
    },
    {
        "answer": "SELECT drawn FROM table_name_94 WHERE played = \"22\" AND points_against = \"453\" AND losing_bonus = \"5\"",
        "context": "CREATE TABLE table_name_94 (drawn VARCHAR, losing_bonus VARCHAR, played VARCHAR, points_against VARCHAR)",
        "question": "For the club that had 453 points against, losing bonus of 5 and played of 22, what is the drawn?"
    },
    {
        "answer": "SELECT MIN(start) FROM table_name_93 WHERE span = \"1990-2005\" AND conv < 2",
        "context": "CREATE TABLE table_name_93 (start INTEGER, span VARCHAR, conv VARCHAR)",
        "question": "In 1990-2005 what is the lowest Start with Convs smaller than 2?"
    },
    {
        "answer": "SELECT title FROM table_name_98 WHERE episode__number > 2 AND part_6 = \"january 6, 2008\"",
        "context": "CREATE TABLE table_name_98 (title VARCHAR, episode__number VARCHAR, part_6 VARCHAR)",
        "question": "What is the Title, when the Episode # is after 2, and when Part 6 is on January 6, 2008?"
    },
    {
        "answer": "SELECT material_or_non_material FROM table_name_36 WHERE positional_or_automatic = \"either\" AND count_rectified = \"no\" AND opponents = \"either\"",
        "context": "CREATE TABLE table_name_36 (material_or_non_material VARCHAR, opponents VARCHAR, positional_or_automatic VARCHAR, count_rectified VARCHAR)",
        "question": "What is the designation of material or non-material for either positional or automatic with no rectified count and either opponent?"
    },
    {
        "answer": "SELECT material_or_non_material FROM table_name_63 WHERE suits = \"2\" AND opponents = \"either\"",
        "context": "CREATE TABLE table_name_63 (material_or_non_material VARCHAR, suits VARCHAR, opponents VARCHAR)",
        "question": "Is it material or non-material when there are 2 suits for either opponent?"
    },
    {
        "answer": "SELECT COUNT(point) FROM table_name_89 WHERE team = \"happy valley\" AND game < 14",
        "context": "CREATE TABLE table_name_89 (point VARCHAR, team VARCHAR, game VARCHAR)",
        "question": "How many points did Happy Valley score before game 14?"
    },
    {
        "answer": "SELECT surface FROM table_name_46 WHERE tournament = \"curitiba\"",
        "context": "CREATE TABLE table_name_46 (surface VARCHAR, tournament VARCHAR)",
        "question": "Which surface was played during Curitiba tournament?"
    },
    {
        "answer": "SELECT length FROM table_name_22 WHERE class = \"gt\" AND circuit = \"portland international raceway\"",
        "context": "CREATE TABLE table_name_22 (length VARCHAR, class VARCHAR, circuit VARCHAR)",
        "question": "What was the length for GT class at Portland International Raceway?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_21 WHERE team = \"minardi team usa\" AND grid = 3 AND laps > 68",
        "context": "CREATE TABLE table_name_21 (points INTEGER, laps VARCHAR, team VARCHAR, grid VARCHAR)",
        "question": "How many average points did the team Minardi Team USA have when there was a grid 3 and more laps than 68?"
    },
    {
        "answer": "SELECT SUM(losses) FROM table_name_95 WHERE bellarine_fl = \"geelong amateur\" AND byes < 0",
        "context": "CREATE TABLE table_name_95 (losses INTEGER, bellarine_fl VARCHAR, byes VARCHAR)",
        "question": "What is the sum of losses for Geelong Amateur, with 0 byes?"
    },
    {
        "answer": "SELECT year_ended FROM table_name_80 WHERE passenger_load_factor___percentage_ > 72.8 AND revenue__\u20acm_ < 906.8",
        "context": "CREATE TABLE table_name_80 (year_ended VARCHAR, passenger_load_factor___percentage_ VARCHAR, revenue__\u20acm_ VARCHAR)",
        "question": "Which Year Ended has a Passenger Load Factor (%) larger than 72.8, and a Revenue (\u20acm) smaller than 906.8?"
    },
    {
        "answer": "SELECT founded FROM table_name_99 WHERE location = \"paul smiths, new york\"",
        "context": "CREATE TABLE table_name_99 (founded VARCHAR, location VARCHAR)",
        "question": "What is the Founded year of the school located in Paul Smiths, New York?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_59 WHERE away_team = \"fitzroy\"",
        "context": "CREATE TABLE table_name_59 (away_team VARCHAR)",
        "question": "What was fitzroy's away side score?"
    },
    {
        "answer": "SELECT years FROM table_name_87 WHERE league = \"400 (21)\"",
        "context": "CREATE TABLE table_name_87 (years VARCHAR, league VARCHAR)",
        "question": "The league of 400 (21) has what years listed?"
    },
    {
        "answer": "SELECT MAX(area_2006_km\u00b2) FROM table_name_22 WHERE city = \"sopot\" AND area_1996_km\u00b2 < 17.31",
        "context": "CREATE TABLE table_name_22 (area_2006_km\u00b2 INTEGER, city VARCHAR, area_1996_km\u00b2 VARCHAR)",
        "question": "Which area 2006 km\u00b2 has a city of sopot, and an area 1996 km\u00b2 smaller than 17.31?"
    },
    {
        "answer": "SELECT erp__analog__digital_ FROM table_name_27 WHERE region_served = \"rockhampton\"",
        "context": "CREATE TABLE table_name_27 (erp__analog__digital_ VARCHAR, region_served VARCHAR)",
        "question": "What is the ERP for the Rockhampton region?"
    },
    {
        "answer": "SELECT city FROM table_name_39 WHERE region = \"mideast\" AND host = \"temple university\"",
        "context": "CREATE TABLE table_name_39 (city VARCHAR, region VARCHAR, host VARCHAR)",
        "question": "Which city in the mideast region is the hot of Temple University?"
    },
    {
        "answer": "SELECT time FROM table_name_28 WHERE name = \"adi bichman\"",
        "context": "CREATE TABLE table_name_28 (time VARCHAR, name VARCHAR)",
        "question": "What is the time for Adi Bichman?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_76 WHERE opponent = \"new york mets\" AND record = \"18-18\"",
        "context": "CREATE TABLE table_name_76 (attendance VARCHAR, opponent VARCHAR, record VARCHAR)",
        "question": "What is the total attendance at games against the New York Mets with a record of 18-18?"
    },
    {
        "answer": "SELECT date FROM table_name_23 WHERE visiting_team = \"new england patriots\"",
        "context": "CREATE TABLE table_name_23 (date VARCHAR, visiting_team VARCHAR)",
        "question": "When did the New England Patriots play as the visiting team?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_45 WHERE away_team = \"footscray\"",
        "context": "CREATE TABLE table_name_45 (away_team VARCHAR)",
        "question": "What was Footscray's score as an away team?"
    },
    {
        "answer": "SELECT opponent FROM table_name_51 WHERE surface = \"hardcourt\" AND outcome = \"runner-up\" AND tournament = \"honolulu\"",
        "context": "CREATE TABLE table_name_51 (opponent VARCHAR, tournament VARCHAR, surface VARCHAR, outcome VARCHAR)",
        "question": "Which Opponent has a Surface of hardcourt, an Outcome of runner-up, and a Tournament of honolulu?"
    },
    {
        "answer": "SELECT total FROM table_name_60 WHERE set_2 = \"19\u201325\"",
        "context": "CREATE TABLE table_name_60 (total VARCHAR, set_2 VARCHAR)",
        "question": "Which Total has a Set 2 of 19\u201325?"
    },
    {
        "answer": "SELECT MIN(group) FROM table_name_99 WHERE fraction < 0.000748 AND half_life__s_ = 55.72 AND decay_constant__s_\u22121__ > 0.012400000000000001",
        "context": "CREATE TABLE table_name_99 (group INTEGER, decay_constant__s_\u22121__ VARCHAR, fraction VARCHAR, half_life__s_ VARCHAR)",
        "question": "What is the lowest group number that has a Fraction less than 0.000748, a Half-Life of 55.72 and a Decay Constant larger than 0.012400000000000001?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_52 WHERE competition = \"european championships\"",
        "context": "CREATE TABLE table_name_52 (year INTEGER, competition VARCHAR)",
        "question": "What is the first year of the European Championships competition?"
    },
    {
        "answer": "SELECT years_as_tallest FROM table_name_95 WHERE floors < 31 AND street_address = \"211 union street\"",
        "context": "CREATE TABLE table_name_95 (years_as_tallest VARCHAR, floors VARCHAR, street_address VARCHAR)",
        "question": "During what years did the tallest building, located at 211 Union Street, have less than 31 floors?"
    },
    {
        "answer": "SELECT MAX(peak) FROM table_name_81 WHERE track = \"mo\u00f1o negro\" AND year < 1996",
        "context": "CREATE TABLE table_name_81 (peak INTEGER, track VARCHAR, year VARCHAR)",
        "question": "What number did Mo\u00f1o Negro peak at before 1996?"
    },
    {
        "answer": "SELECT MIN(capacity) FROM table_name_11 WHERE first_season_in_segunda_divisi\u00f3n = 2013 AND top_division_titles > 0",
        "context": "CREATE TABLE table_name_11 (capacity INTEGER, first_season_in_segunda_divisi\u00f3n VARCHAR, top_division_titles VARCHAR)",
        "question": "What is the smallest capacity for a First season in Segunda Divisi\u00f3n of 2013, and Top division titles larger than 0?"
    },
    {
        "answer": "SELECT year_startup FROM table_name_18 WHERE operator = \"albian sands\" AND project_name = \"jackpine mine (ph 2)\"",
        "context": "CREATE TABLE table_name_18 (year_startup VARCHAR, operator VARCHAR, project_name VARCHAR)",
        "question": "What was the startup year for the Jackpine Mine (ph 2) project with an albian sands operator?"
    },
    {
        "answer": "SELECT MIN(erp_w) FROM table_name_54 WHERE facility_id = 67829",
        "context": "CREATE TABLE table_name_54 (erp_w INTEGER, facility_id VARCHAR)",
        "question": "What is the lowest ERP W of the 67829 Facility ID?"
    },
    {
        "answer": "SELECT AVG(off_reb) FROM table_name_29 WHERE ftm_fta = \"16-17\" AND steals < 8",
        "context": "CREATE TABLE table_name_29 (off_reb INTEGER, ftm_fta VARCHAR, steals VARCHAR)",
        "question": "What was the average of the Off Reb with steals less than 8 and FTM-FTA of 16-17?"
    },
    {
        "answer": "SELECT album FROM table_name_56 WHERE release_info = \"heavenly (hvn95)\"",
        "context": "CREATE TABLE table_name_56 (album VARCHAR, release_info VARCHAR)",
        "question": "Which album had a release of heavenly (hvn95)?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_8 WHERE college = \"florida state\"",
        "context": "CREATE TABLE table_name_8 (round VARCHAR, college VARCHAR)",
        "question": "What is the sum of all the rounds when a Florida State player was drafted?"
    },
    {
        "answer": "SELECT COUNT(draw) FROM table_name_44 WHERE televote > 18 AND artist = \"elizabeth anastasiou\" AND jury > 4",
        "context": "CREATE TABLE table_name_44 (draw VARCHAR, jury VARCHAR, televote VARCHAR, artist VARCHAR)",
        "question": "How much Draw has a Televote larger than 18, and an Artist of elizabeth anastasiou, and a Jury larger than 4?"
    },
    {
        "answer": "SELECT MAX(place) FROM table_name_65 WHERE artist = \"nikolas metaxas\" AND televote > 60",
        "context": "CREATE TABLE table_name_65 (place INTEGER, artist VARCHAR, televote VARCHAR)",
        "question": "Which Place is the highest one that has an Artist of nikolas metaxas, and a Televote larger than 60?"
    },
    {
        "answer": "SELECT venue FROM table_name_22 WHERE bronze = \"finland\" AND silver = \"united states\"",
        "context": "CREATE TABLE table_name_22 (venue VARCHAR, bronze VARCHAR, silver VARCHAR)",
        "question": "Where was the tournament where Finland received the bronze and the United States received the silver?"
    },
    {
        "answer": "SELECT theatre, _studio, _or_network FROM table_name_78 WHERE date = \"1941\" AND title = \"one night in lisbon\"",
        "context": "CREATE TABLE table_name_78 (theatre VARCHAR, _studio VARCHAR, _or_network VARCHAR, date VARCHAR, title VARCHAR)",
        "question": "Who created One Night in Lisbon in 1941?"
    },
    {
        "answer": "SELECT host_team FROM table_name_22 WHERE stadium = \"candlestick park\"",
        "context": "CREATE TABLE table_name_22 (host_team VARCHAR, stadium VARCHAR)",
        "question": "Who was the host team at Candlestick Park?"
    },
    {
        "answer": "SELECT record FROM table_name_41 WHERE kickoff = \"12:00pm cst\" AND game_site = \"arrowhead stadium\" AND week = \"15\"",
        "context": "CREATE TABLE table_name_41 (record VARCHAR, week VARCHAR, kickoff VARCHAR, game_site VARCHAR)",
        "question": "Which Record has a Kickoff of 12:00pm cst, and a Game site of arrowhead stadium, and a Week of 15?"
    },
    {
        "answer": "SELECT AVG(scored) FROM table_name_64 WHERE competition = \"2011 long teng cup\" AND date = \"2 october 2011\"",
        "context": "CREATE TABLE table_name_64 (scored INTEGER, competition VARCHAR, date VARCHAR)",
        "question": "Name the averag scored for 2011 long teng cup and 2 october 2011"
    },
    {
        "answer": "SELECT barrel_twist FROM table_name_63 WHERE barrel_length = \"11.5 in.\"",
        "context": "CREATE TABLE table_name_63 (barrel_twist VARCHAR, barrel_length VARCHAR)",
        "question": "Can you tell me the Barrel twist that has the Barrel lenght of 11.5 in.?"
    },
    {
        "answer": "SELECT country FROM table_name_3 WHERE iata = \"jfk\"",
        "context": "CREATE TABLE table_name_3 (country VARCHAR, iata VARCHAR)",
        "question": "Which country has an IATA of JFK?"
    },
    {
        "answer": "SELECT MAX(week) FROM table_name_10 WHERE date = \"august 24, 1956\" AND attendance > 40 OFFSET 175",
        "context": "CREATE TABLE table_name_10 (week INTEGER, date VARCHAR, attendance VARCHAR)",
        "question": "In what week was the game on August 24, 1956 played in front of 40,175 fans?"
    },
    {
        "answer": "SELECT rider FROM table_name_8 WHERE rank < 5 AND time = \"31\u2019 03.093\"",
        "context": "CREATE TABLE table_name_8 (rider VARCHAR, rank VARCHAR, time VARCHAR)",
        "question": "Rank smaller than 5, and a Time of 31\u2019 03.093 is what rider?"
    },
    {
        "answer": "SELECT b_mountain_channel FROM table_name_75 WHERE station_call_letters = \"k41go\"",
        "context": "CREATE TABLE table_name_75 (b_mountain_channel VARCHAR, station_call_letters VARCHAR)",
        "question": "What B Mountain Channel has station call letters of k41go?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_74 WHERE team = \"honda 250cc\" AND time = \"31\u2019 03.093\"",
        "context": "CREATE TABLE table_name_74 (rank INTEGER, team VARCHAR, time VARCHAR)",
        "question": "Team of honda 250cc, and a Time of 31\u2019 03.093 has what lowest rank?"
    },
    {
        "answer": "SELECT venue FROM table_name_57 WHERE home_team = \"footscray\"",
        "context": "CREATE TABLE table_name_57 (venue VARCHAR, home_team VARCHAR)",
        "question": "What is the venue where the home team is Footscray?"
    },
    {
        "answer": "SELECT MIN(total_matches) FROM table_name_33 WHERE total_w_l_h = \"1-2-0\"",
        "context": "CREATE TABLE table_name_33 (total_matches INTEGER, total_w_l_h VARCHAR)",
        "question": "Which Total matches is the lowest one that has a Total W-L-H of 1-2-0?"
    },
    {
        "answer": "SELECT away_team FROM table_name_22 WHERE venue = \"brunswick street oval\"",
        "context": "CREATE TABLE table_name_22 (away_team VARCHAR, venue VARCHAR)",
        "question": "What away team is playing at the Brunswick Street Oval Venue?"
    },
    {
        "answer": "SELECT date FROM table_name_74 WHERE outcome = \"runner-up\" AND opponents_in_the_final = \"tom gullikson butch walts\"",
        "context": "CREATE TABLE table_name_74 (date VARCHAR, outcome VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "Which date has the tom gullikson butch walts final, and who was the runner-up?"
    },
    {
        "answer": "SELECT color_commentator_s_ FROM table_name_70 WHERE network = \"espn\"",
        "context": "CREATE TABLE table_name_70 (color_commentator_s_ VARCHAR, network VARCHAR)",
        "question": "Who is the color commentator for ESPN from 1990 to 1992?"
    },
    {
        "answer": "SELECT SUM(cuts_made) FROM table_name_76 WHERE wins = 0 AND top_25 = 1 AND events > 4",
        "context": "CREATE TABLE table_name_76 (cuts_made INTEGER, events VARCHAR, wins VARCHAR, top_25 VARCHAR)",
        "question": "How man cuts were there of players who had 0 wins but had 1 player in the top 25 with more than 4 events?"
    },
    {
        "answer": "SELECT whenbuilt FROM table_name_28 WHERE name = \"fighter command\"",
        "context": "CREATE TABLE table_name_28 (whenbuilt VARCHAR, name VARCHAR)",
        "question": "When was the locomotive named fighter command built?"
    },
    {
        "answer": "SELECT combination_classification FROM table_name_34 WHERE points_classification = \"daniele bennati\" AND team_classification = \"quick step\"",
        "context": "CREATE TABLE table_name_34 (combination_classification VARCHAR, points_classification VARCHAR, team_classification VARCHAR)",
        "question": "Which Combination classification has Points classification of daniele bennati, and a Team classification of quick step?"
    },
    {
        "answer": "SELECT mountains_classification FROM table_name_81 WHERE team_classification = \"quick step\"",
        "context": "CREATE TABLE table_name_81 (mountains_classification VARCHAR, team_classification VARCHAR)",
        "question": "Which Mountains classification has a Team classification of quick step?"
    },
    {
        "answer": "SELECT team_classification FROM table_name_28 WHERE combination_classification = \"egoi mart\u00ednez\" AND winner = \"tom boonen\"",
        "context": "CREATE TABLE table_name_28 (team_classification VARCHAR, combination_classification VARCHAR, winner VARCHAR)",
        "question": "Which Team classification has a Combination classification of egoi mart\u00ednez, and a Winner of tom boonen?"
    },
    {
        "answer": "SELECT AVG(_number_of_candidates) FROM table_name_36 WHERE _percentage_of_popular_vote = \"41.37%\"",
        "context": "CREATE TABLE table_name_36 (_number_of_candidates INTEGER, _percentage_of_popular_vote VARCHAR)",
        "question": "What is the # of candidates that have a popular vote of 41.37%?"
    },
    {
        "answer": "SELECT COUNT(general_election) FROM table_name_95 WHERE _number_of_seats_won < 23 AND _number_of_candidates > 108",
        "context": "CREATE TABLE table_name_95 (general_election VARCHAR, _number_of_seats_won VARCHAR, _number_of_candidates VARCHAR)",
        "question": "How many general elections that have won smaller than 23 with candidates larger than 108?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_25 WHERE home_team = \"essendon\"",
        "context": "CREATE TABLE table_name_25 (home_team VARCHAR)",
        "question": "What was the essendon score when they were at home?"
    },
    {
        "answer": "SELECT m809_series FROM table_name_88 WHERE m939_series = \"m931/932\"",
        "context": "CREATE TABLE table_name_88 (m809_series VARCHAR, m939_series VARCHAR)",
        "question": "Name the M809 seris with M939 series of M931/932"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_71 WHERE manufacturer = \"honda\" AND rank = 8",
        "context": "CREATE TABLE table_name_71 (wins INTEGER, manufacturer VARCHAR, rank VARCHAR)",
        "question": "Manufacturer of honda, and a Rank of 8 had what highest wins?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_13 WHERE entrant = \"shadow racing team\" AND pts > 0",
        "context": "CREATE TABLE table_name_13 (year INTEGER, entrant VARCHAR, pts VARCHAR)",
        "question": "What is the latest year that shadow racing team scored more than 0 points?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_35 WHERE start = \"1st\" AND chassis = \"g-force\"",
        "context": "CREATE TABLE table_name_35 (year INTEGER, start VARCHAR, chassis VARCHAR)",
        "question": "What was the most recent year when a g-force chassis started in 1st?"
    },
    {
        "answer": "SELECT vessel_name FROM table_name_56 WHERE flag = \"malta\" AND type = \"panamax\" AND class = \"gl\" AND built > 2010",
        "context": "CREATE TABLE table_name_56 (vessel_name VARCHAR, built VARCHAR, class VARCHAR, flag VARCHAR, type VARCHAR)",
        "question": "What is the name of the Malta vessel built after 2010 that is a GL class Panamax vessel?"
    },
    {
        "answer": "SELECT SUM(built) FROM table_name_54 WHERE class = \"dnv\" AND type = \"panamax\" AND vessel_name = \"deva\"",
        "context": "CREATE TABLE table_name_54 (built INTEGER, vessel_name VARCHAR, class VARCHAR, type VARCHAR)",
        "question": "Which year was the vessel Deva built as a Panamax DNV class ship?"
    },
    {
        "answer": "SELECT stage FROM table_name_71 WHERE mountains_classification = \"pascal richard\" AND winner = \"vladimir poulnikov\"",
        "context": "CREATE TABLE table_name_71 (stage VARCHAR, mountains_classification VARCHAR, winner VARCHAR)",
        "question": "What was the Stage when Pascal Richard had the Mountains classification and Vladimir Poulnikov won?"
    },
    {
        "answer": "SELECT result FROM table_name_91 WHERE film_series = \"thirst\" AND year = 2010 AND group = \"green globe film awards\"",
        "context": "CREATE TABLE table_name_91 (result VARCHAR, group VARCHAR, film_series VARCHAR, year VARCHAR)",
        "question": "What was the result for Thirst in 2010 at the Green Globe Film Awards?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_92 WHERE result = \"nominated\" AND film_series = \"thirst\" AND award = \"best actress\" AND group = \"baeksang arts awards\"",
        "context": "CREATE TABLE table_name_92 (year INTEGER, group VARCHAR, award VARCHAR, result VARCHAR, film_series VARCHAR)",
        "question": "What is the average year in which Kim was nominated for Thirst as Best Actress at the Baeksang Arts Awards?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_89 WHERE school_club_team = \"trinity\" AND overall < 21",
        "context": "CREATE TABLE table_name_89 (round INTEGER, school_club_team VARCHAR, overall VARCHAR)",
        "question": "What is the lowest round Trinity school was drafted with an overall higher than 21?"
    },
    {
        "answer": "SELECT date FROM table_name_62 WHERE week > 13 AND attendance = \"41,862\"",
        "context": "CREATE TABLE table_name_62 (date VARCHAR, week VARCHAR, attendance VARCHAR)",
        "question": "What is the date of the game later than week 13 and 41,862 people attended?"
    },
    {
        "answer": "SELECT round FROM table_name_18 WHERE song = \"\u9676\u5586\u3001\u8521\u4f9d\u6797 - \u4eca\u5929\u4f60\u8981\u5ac1\u7ed9\u6211/\u66f9\u683c - \u4e16\u754c\u552f\u4e00\u7684\u4f60\"",
        "context": "CREATE TABLE table_name_18 (round VARCHAR, song VARCHAR)",
        "question": "What round has this song: \u9676\u5586\u3001\u8521\u4f9d\u6797 - \u4eca\u5929\u4f60\u8981\u5ac1\u7ed9\u6211/\u66f9\u683c - \u4e16\u754c\u552f\u4e00\u7684\u4f60?"
    },
    {
        "answer": "SELECT AVG(week) FROM table_name_25 WHERE attendance = \"14,381\"",
        "context": "CREATE TABLE table_name_25 (week INTEGER, attendance VARCHAR)",
        "question": "What week had an attendance of 14,381?"
    },
    {
        "answer": "SELECT network FROM table_name_34 WHERE rank > 5 AND show = \"2012 summer olympics closing ceremony in london\"",
        "context": "CREATE TABLE table_name_34 (network VARCHAR, rank VARCHAR, show VARCHAR)",
        "question": "Which Network has a Rank larger than 5, a Show of 2012 summer olympics closing ceremony in london?"
    },
    {
        "answer": "SELECT s_default_argument FROM table_name_37 WHERE pseudorandom_number_generation = \"no\" AND eval_function = \"no\"",
        "context": "CREATE TABLE table_name_37 (s_default_argument VARCHAR, pseudorandom_number_generation VARCHAR, eval_function VARCHAR)",
        "question": "What is the s default argument without a pseudorandom number generation and no eval function?"
    },
    {
        "answer": "SELECT lambda_functions FROM table_name_10 WHERE pseudorandom_number_generation = \"no\" AND s_default_argument = \"no\" AND functions = \"no\" AND eval_function = \"no\"",
        "context": "CREATE TABLE table_name_10 (lambda_functions VARCHAR, eval_function VARCHAR, functions VARCHAR, pseudorandom_number_generation VARCHAR, s_default_argument VARCHAR)",
        "question": "What is the lambda function without a pseudorandom number generation, no s default argument, no functions, and no eval function?"
    },
    {
        "answer": "SELECT player FROM table_name_18 WHERE opposition = \"limerick\" AND last_game = \"munster semi-final\" AND d\u00e9but = 1973",
        "context": "CREATE TABLE table_name_18 (player VARCHAR, d\u00e9but VARCHAR, opposition VARCHAR, last_game VARCHAR)",
        "question": "Which player debuted in 1973 against Limerick and played his last game at the Munster semi-final?"
    },
    {
        "answer": "SELECT network FROM table_name_8 WHERE genre = \"music\"",
        "context": "CREATE TABLE table_name_8 (network VARCHAR, genre VARCHAR)",
        "question": "Which network's genre is music?"
    },
    {
        "answer": "SELECT genre FROM table_name_50 WHERE origin_of_programming = \"india\" AND network = \"star plus\"",
        "context": "CREATE TABLE table_name_50 (genre VARCHAR, origin_of_programming VARCHAR, network VARCHAR)",
        "question": "What genre is Star Plus from India?"
    },
    {
        "answer": "SELECT event FROM table_name_60 WHERE games = \"1976 innsbruck\"",
        "context": "CREATE TABLE table_name_60 (event VARCHAR, games VARCHAR)",
        "question": "What were the events in the 1976 Innsbruck Games?"
    },
    {
        "answer": "SELECT 2 AS nd_leg FROM table_name_57 WHERE team_1 = \"chicago croatian\"",
        "context": "CREATE TABLE table_name_57 (team_1 VARCHAR)",
        "question": "What was the 2nd leg when Team 1 was Chicago Croatian?"
    },
    {
        "answer": "SELECT color_commentator_s_ FROM table_name_42 WHERE sideline_reporter_s_ = \"eric dickerson and melissa stark\" AND year = 2001",
        "context": "CREATE TABLE table_name_42 (color_commentator_s_ VARCHAR, sideline_reporter_s_ VARCHAR, year VARCHAR)",
        "question": "Who was the color commentator for Eric Dickerson and Melissa Stark in 2001?"
    },
    {
        "answer": "SELECT nationality FROM table_name_55 WHERE nhl_team = \"montreal canadiens\" AND pick__number = \"25\"",
        "context": "CREATE TABLE table_name_55 (nationality VARCHAR, nhl_team VARCHAR, pick__number VARCHAR)",
        "question": "Which nationality do the Montreal Canadiens belong to with a pick# of 25?"
    },
    {
        "answer": "SELECT color_commentator_s_ FROM table_name_69 WHERE play_by_play = \"al michaels\" AND year > 2003",
        "context": "CREATE TABLE table_name_69 (color_commentator_s_ VARCHAR, play_by_play VARCHAR, year VARCHAR)",
        "question": "Who was Al Michaels' color commentator in 2003?"
    },
    {
        "answer": "SELECT MAX(site) FROM table_name_42 WHERE sex_and_other_data = \"old male\"",
        "context": "CREATE TABLE table_name_42 (site INTEGER, sex_and_other_data VARCHAR)",
        "question": "Which Site that has a Sex and other data of old male?"
    },
    {
        "answer": "SELECT competing_entities FROM table_name_37 WHERE age_groups = \"18 or younger\" AND held_every = \"one year\" AND sport = \"table tennis\"",
        "context": "CREATE TABLE table_name_37 (competing_entities VARCHAR, sport VARCHAR, age_groups VARCHAR, held_every VARCHAR)",
        "question": "what is the competing entities when the age group is 18 or younger, held every is one year and the sport is table tennis?"
    },
    {
        "answer": "SELECT record_as_played FROM table_name_19 WHERE regular_season_vacated = \"24\u20130\" AND season > 1997",
        "context": "CREATE TABLE table_name_19 (record_as_played VARCHAR, regular_season_vacated VARCHAR, season VARCHAR)",
        "question": "What is shown for Record as played with a Regular season Vacated of 24\u20130 later than 1997?"
    },
    {
        "answer": "SELECT episode FROM table_name_10 WHERE result = \"safe\" AND order__number = \"5\" AND original_artist = \"hoagy carmichael\"",
        "context": "CREATE TABLE table_name_10 (episode VARCHAR, original_artist VARCHAR, result VARCHAR, order__number VARCHAR)",
        "question": "Which episode had Hoagy carmichael safe with an order of 5?"
    },
    {
        "answer": "SELECT date FROM table_name_48 WHERE region = \"france\" AND catalog = \"82876-70291-2\"",
        "context": "CREATE TABLE table_name_48 (date VARCHAR, region VARCHAR, catalog VARCHAR)",
        "question": "What Date is listed for the Region of France and Catalog of 82876-70291-2?"
    },
    {
        "answer": "SELECT dance_styles FROM table_name_54 WHERE draw < 15 AND points = 18",
        "context": "CREATE TABLE table_name_54 (dance_styles VARCHAR, draw VARCHAR, points VARCHAR)",
        "question": "Which dance style had a draw smaller than 15 and 18 points?"
    },
    {
        "answer": "SELECT MIN(crowd) FROM table_name_22 WHERE venue = \"victoria park\"",
        "context": "CREATE TABLE table_name_22 (crowd INTEGER, venue VARCHAR)",
        "question": "What is the smallest crowd at victoria park?"
    },
    {
        "answer": "SELECT team_classification FROM table_name_13 WHERE points_classification = \"jos\u00e9 mar\u00eda jim\u00e9nez\" AND winner = \"beat zberg\"",
        "context": "CREATE TABLE table_name_13 (team_classification VARCHAR, points_classification VARCHAR, winner VARCHAR)",
        "question": "What is the team classification with a winner of Beat Zberg, and a points classification of Jos\u00e9 Mar\u00eda Jim\u00e9nez."
    },
    {
        "answer": "SELECT city FROM table_name_61 WHERE stadium = \"don valley stadium\"",
        "context": "CREATE TABLE table_name_61 (city VARCHAR, stadium VARCHAR)",
        "question": "In what city is the Don Valley Stadium located?"
    },
    {
        "answer": "SELECT AVG(crowd) FROM table_name_8 WHERE home_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_8 (crowd INTEGER, home_team VARCHAR)",
        "question": "What is the average crowd size for games with hawthorn as the home side?"
    },
    {
        "answer": "SELECT AVG(redline__rpm_) FROM table_name_49 WHERE engine_code = \"m57tud30\" AND year > 2002",
        "context": "CREATE TABLE table_name_49 (redline__rpm_ INTEGER, engine_code VARCHAR, year VARCHAR)",
        "question": "What is the average Redline RPM of engines with engine code M57TUD30, made after 2002?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_37 WHERE away_team = \"richmond\"",
        "context": "CREATE TABLE table_name_37 (home_team VARCHAR, away_team VARCHAR)",
        "question": "When richmond was the Away team what was the score of the home team?"
    },
    {
        "answer": "SELECT COUNT(silver) FROM table_name_62 WHERE total < 6 AND bronze < 0",
        "context": "CREATE TABLE table_name_62 (silver VARCHAR, total VARCHAR, bronze VARCHAR)",
        "question": "How many silvers for the nation with under 6 total and under 0 bronze?"
    },
    {
        "answer": "SELECT origin_of_programming FROM table_name_12 WHERE genre = \"general\" AND network = \"ntv bangla\" AND service = \"cogeco cable\"",
        "context": "CREATE TABLE table_name_12 (origin_of_programming VARCHAR, service VARCHAR, genre VARCHAR, network VARCHAR)",
        "question": "Whose origin of Programming offers a general genre, a network of ntv bangla and a service of cogeco cable?"
    },
    {
        "answer": "SELECT service FROM table_name_95 WHERE language = \"hindi\" AND genre = \"general\" AND network = \"zee tv\"",
        "context": "CREATE TABLE table_name_95 (service VARCHAR, network VARCHAR, language VARCHAR, genre VARCHAR)",
        "question": "Which service has a hindi language, general genre and zee tv network?"
    },
    {
        "answer": "SELECT SUM(gold) FROM table_name_86 WHERE silver = 1 AND bronze < 2 AND total = 1 AND rank < 10",
        "context": "CREATE TABLE table_name_86 (gold INTEGER, rank VARCHAR, total VARCHAR, silver VARCHAR, bronze VARCHAR)",
        "question": "What is the sum of gold medal totals for nations with 1 silver, less than 2 bronze, and ranked below 10?"
    },
    {
        "answer": "SELECT time FROM table_name_12 WHERE jockey = \"cornelio velasquez\"",
        "context": "CREATE TABLE table_name_12 (time VARCHAR, jockey VARCHAR)",
        "question": "What is the time for when cornelio velasquez was the jockey?"
    },
    {
        "answer": "SELECT street_address FROM table_name_73 WHERE name = \"the palazzo\"",
        "context": "CREATE TABLE table_name_73 (street_address VARCHAR, name VARCHAR)",
        "question": "The Palazzo's street address is listed as what?"
    },
    {
        "answer": "SELECT trainer FROM table_name_71 WHERE year = 2013",
        "context": "CREATE TABLE table_name_71 (trainer VARCHAR, year VARCHAR)",
        "question": "Who was the trainer in 2013?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_76 WHERE week > 4 AND date = \"december 6, 1981\"",
        "context": "CREATE TABLE table_name_76 (attendance VARCHAR, week VARCHAR, date VARCHAR)",
        "question": "How many people were in attendance in a week over 4 on December 6, 1981?"
    },
    {
        "answer": "SELECT MIN(game) FROM table_name_5 WHERE location = \"shibe park\" AND date = \"october 10\"",
        "context": "CREATE TABLE table_name_5 (game INTEGER, location VARCHAR, date VARCHAR)",
        "question": "Name the least game for october 10 at shibe park"
    },
    {
        "answer": "SELECT AVG(appearances) FROM table_name_30 WHERE season_s_ = \"2009\" AND winning_percentage < 0",
        "context": "CREATE TABLE table_name_30 (appearances INTEGER, season_s_ VARCHAR, winning_percentage VARCHAR)",
        "question": "In 2009, what Appearances had a Winning Percentage of less than 0?"
    },
    {
        "answer": "SELECT MAX(rank_by_average) FROM table_name_27 WHERE average = 25.3 AND number_of_dances > 10",
        "context": "CREATE TABLE table_name_27 (rank_by_average INTEGER, average VARCHAR, number_of_dances VARCHAR)",
        "question": "What was the highest rank by average of a couple who had an average of 25.3 and had more than 10 dances?"
    },
    {
        "answer": "SELECT date FROM table_name_42 WHERE outcome = \"runner-up\" AND score = \"6\u20134, 6\u20132\" AND opponents = \"gisela dulko flavia pennetta\"",
        "context": "CREATE TABLE table_name_42 (date VARCHAR, opponents VARCHAR, outcome VARCHAR, score VARCHAR)",
        "question": "What date has an outcome of runner-up, and a Score of 6\u20134, 6\u20132, and a Opponents of gisela dulko flavia pennetta?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_48 WHERE college = \"usf\" AND pick__number < 24",
        "context": "CREATE TABLE table_name_48 (round INTEGER, college VARCHAR, pick__number VARCHAR)",
        "question": "What is the average round that the player from USF was picked in when his draft pick number was less than 24?"
    },
    {
        "answer": "SELECT AVG(pick__number) FROM table_name_8 WHERE overall = 296",
        "context": "CREATE TABLE table_name_8 (pick__number INTEGER, overall VARCHAR)",
        "question": "What Average Pick # has an Overall of 296?"
    },
    {
        "answer": "SELECT member FROM table_name_74 WHERE state = \"sa\" AND electorate = \"grey\"",
        "context": "CREATE TABLE table_name_74 (member VARCHAR, state VARCHAR, electorate VARCHAR)",
        "question": "Which member is from the state of SA and the grey electorate?"
    },
    {
        "answer": "SELECT COUNT(heat) FROM table_name_48 WHERE lane = 2 AND rank > 75 AND nationality = \"madagascar\"",
        "context": "CREATE TABLE table_name_48 (heat VARCHAR, nationality VARCHAR, lane VARCHAR, rank VARCHAR)",
        "question": "How many heats had 2 lanes, a rank above 75, and nationality of Madagascar?"
    },
    {
        "answer": "SELECT call_sign FROM table_name_1 WHERE class = \"a\" AND frequency_mhz = 88.7",
        "context": "CREATE TABLE table_name_1 (call_sign VARCHAR, class VARCHAR, frequency_mhz VARCHAR)",
        "question": "Which call sign has a Class of A, and a Frequency MHz of 88.7?"
    },
    {
        "answer": "SELECT division FROM table_name_83 WHERE team = \"traktor tashkent\" AND season = \"2005\"",
        "context": "CREATE TABLE table_name_83 (division VARCHAR, team VARCHAR, season VARCHAR)",
        "question": "What division is Traktor Tashkent in 2005?"
    },
    {
        "answer": "SELECT nominated_work FROM table_name_7 WHERE year = 1996 AND festival = \"black maria film and video festival\"",
        "context": "CREATE TABLE table_name_7 (nominated_work VARCHAR, year VARCHAR, festival VARCHAR)",
        "question": "Name the nominated work for 1996 and festival of black maria film and video festival"
    },
    {
        "answer": "SELECT date FROM table_name_6 WHERE venue = \"away\" AND win_draw_lose = \"lost\" AND team = \"accrington\"",
        "context": "CREATE TABLE table_name_6 (date VARCHAR, team VARCHAR, venue VARCHAR, win_draw_lose VARCHAR)",
        "question": "What was the date of the away game that they lost to Accrington?"
    },
    {
        "answer": "SELECT win_draw_lose FROM table_name_71 WHERE venue = \"home\" AND team = \"derby county\"",
        "context": "CREATE TABLE table_name_71 (win_draw_lose VARCHAR, venue VARCHAR, team VARCHAR)",
        "question": "What was the result of the home game against Derby County?"
    },
    {
        "answer": "SELECT course FROM table_name_21 WHERE type = \"flat stage\" AND date = \"4 september\"",
        "context": "CREATE TABLE table_name_21 (course VARCHAR, type VARCHAR, date VARCHAR)",
        "question": "Which course has a flat stage on 4 September?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_96 WHERE away_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_96 (away_team VARCHAR)",
        "question": "What was Hawthorn's score as the away team?"
    },
    {
        "answer": "SELECT SUM(number_of_deputies) FROM table_name_74 WHERE percentage_of_votes = \"94.2%\"",
        "context": "CREATE TABLE table_name_74 (number_of_deputies INTEGER, percentage_of_votes VARCHAR)",
        "question": "What is the number of deputies with 94.2% of the votes?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_name_37 WHERE partnering = \"bruno soares\" AND surface = \"clay\" AND date = \"august 1, 2010\"",
        "context": "CREATE TABLE table_name_37 (opponents_in_the_final VARCHAR, date VARCHAR, partnering VARCHAR, surface VARCHAR)",
        "question": "Who did Bruno Soares and a partner face in the finals on a clay surface on August 1, 2010?"
    },
    {
        "answer": "SELECT -time AS rank FROM table_name_55 WHERE rank < 9 AND debut_year = 1994",
        "context": "CREATE TABLE table_name_55 (time VARCHAR, rank VARCHAR, debut_year VARCHAR)",
        "question": "What is the all-time rank associated with a rank less than 9 and a debut in 1994?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_14 WHERE date = \"april 12\"",
        "context": "CREATE TABLE table_name_14 (attendance INTEGER, date VARCHAR)",
        "question": "What is the average attendance that has april 12 as the date?"
    },
    {
        "answer": "SELECT MAX(clock_rate__mhz_) FROM table_name_75 WHERE bandwidth__mb_s_ < 4800 AND bus_width__bits_ < 16",
        "context": "CREATE TABLE table_name_75 (clock_rate__mhz_ INTEGER, bandwidth__mb_s_ VARCHAR, bus_width__bits_ VARCHAR)",
        "question": "Bandwidth (MB/s) smaller than 4800, and a Bus width (bits) smaller than 16 has what highest Clock rate (MHz)?"
    },
    {
        "answer": "SELECT MAX(roll) FROM table_name_85 WHERE decile > 2 AND area = \"te puna\"",
        "context": "CREATE TABLE table_name_85 (roll INTEGER, decile VARCHAR, area VARCHAR)",
        "question": "What is the highest roll number of the school in Te puna with a decile larger than 2?"
    },
    {
        "answer": "SELECT android FROM table_name_42 WHERE other_unix = \"unknown\"",
        "context": "CREATE TABLE table_name_42 (android VARCHAR, other_unix VARCHAR)",
        "question": "Which Android has anOther Unix of unknown?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_66 WHERE venue = \"corio oval\"",
        "context": "CREATE TABLE table_name_66 (home_team VARCHAR, venue VARCHAR)",
        "question": "What is the home team's score at corio oval?"
    },
    {
        "answer": "SELECT SUM(goals_conceded) FROM table_name_86 WHERE points < 26 AND played < 18",
        "context": "CREATE TABLE table_name_86 (goals_conceded INTEGER, points VARCHAR, played VARCHAR)",
        "question": "What are the total amount of Goals Conceded when the Points are less than 26, and when the value for Played is less than 18?"
    },
    {
        "answer": "SELECT score FROM table_name_20 WHERE place = \"t8\" AND player = \"byron nelson\"",
        "context": "CREATE TABLE table_name_20 (score VARCHAR, place VARCHAR, player VARCHAR)",
        "question": "What is score of the game played in place t8 with Byron Nelson playing?"
    },
    {
        "answer": "SELECT SUM(money___) AS $__ FROM table_name_55 WHERE country = \"united states\" AND player = \"sam snead\"",
        "context": "CREATE TABLE table_name_55 (money___ INTEGER, country VARCHAR, player VARCHAR)",
        "question": "What is the sum of Money of the game that was played in the United States with Sam Snead as a player?"
    },
    {
        "answer": "SELECT year FROM table_name_55 WHERE tyre = \"d\" AND chassis = \"mazda 787\"",
        "context": "CREATE TABLE table_name_55 (year VARCHAR, tyre VARCHAR, chassis VARCHAR)",
        "question": "What Year has a Tyre of D, and Chassis of Mazda 787?"
    },
    {
        "answer": "SELECT mountains_classification FROM table_name_82 WHERE young_rider_classification = \"francesco casagrande\" AND intergiro_classification = \"not awarded\" AND stage = \"2\"",
        "context": "CREATE TABLE table_name_82 (mountains_classification VARCHAR, stage VARCHAR, young_rider_classification VARCHAR, intergiro_classification VARCHAR)",
        "question": "Name the mountains classification which has a young rider classification of francesco casagrande and integiro classification of not awarded with stage of 2"
    },
    {
        "answer": "SELECT trofeo_fast_team FROM table_name_55 WHERE young_rider_classification = \"francesco casagrande\" AND stage = \"10\"",
        "context": "CREATE TABLE table_name_55 (trofeo_fast_team VARCHAR, young_rider_classification VARCHAR, stage VARCHAR)",
        "question": "Name trofeo fast team with young rider classification of francesco casagrande and stage of 10"
    },
    {
        "answer": "SELECT tries_against FROM table_name_95 WHERE played = \"22\" AND club = \"ystalyfera rfc\"",
        "context": "CREATE TABLE table_name_95 (tries_against VARCHAR, played VARCHAR, club VARCHAR)",
        "question": "What is listed for the Tries against that has a Played of 22, along with a Club of Ystalyfera RFC?"
    },
    {
        "answer": "SELECT drawn FROM table_name_23 WHERE try_bonus = \"5\" AND points_for = \"517\"",
        "context": "CREATE TABLE table_name_23 (drawn VARCHAR, try_bonus VARCHAR, points_for VARCHAR)",
        "question": "What is listed for the Drawn that has a Tray bonus of 5 wiht Points for of 517?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_34 WHERE week > 6 AND opponent = \"at philadelphia eagles\"",
        "context": "CREATE TABLE table_name_34 (attendance INTEGER, week VARCHAR, opponent VARCHAR)",
        "question": "What was the average attendance when the opponent was at Philadelphia Eagles and the week was later than week 6?"
    },
    {
        "answer": "SELECT MIN(cuts_made) FROM table_name_90 WHERE top_10 < 11 AND top_5 > 2 AND top_25 < 6",
        "context": "CREATE TABLE table_name_90 (cuts_made INTEGER, top_25 VARCHAR, top_10 VARCHAR, top_5 VARCHAR)",
        "question": "Name the least cuts for top-5 more than 2 with top 25 less than 6 and top 10 less than 11"
    },
    {
        "answer": "SELECT SUM(domestic_passengers) FROM table_name_38 WHERE _percentage_change_2005_2006 = \"10.9%\" AND freight__metric_tonnes_ < 4 OFFSET 022",
        "context": "CREATE TABLE table_name_38 (domestic_passengers INTEGER, _percentage_change_2005_2006 VARCHAR, freight__metric_tonnes_ VARCHAR)",
        "question": "What is the sum of all domestic passengers with 10.9% change and less than 4,022 tonnes in freight?"
    },
    {
        "answer": "SELECT MIN(sunlight_hours) FROM table_name_98 WHERE city_town = \"ourense\" AND days_with_frost > 30",
        "context": "CREATE TABLE table_name_98 (sunlight_hours INTEGER, city_town VARCHAR, days_with_frost VARCHAR)",
        "question": "What is the lowest number of sunlight hours, and number of days with frost, more than 30, for the city of Ourense?"
    },
    {
        "answer": "SELECT MAX(runs) FROM table_name_75 WHERE match > 63 AND venue = \"national stadium, karachi\" AND year < 1996",
        "context": "CREATE TABLE table_name_75 (runs INTEGER, year VARCHAR, match VARCHAR, venue VARCHAR)",
        "question": "Which Runs is the highest one that has a Match larger than 63, and a Venue of national stadium, karachi, and a Year smaller than 1996?"
    },
    {
        "answer": "SELECT school_club_team FROM table_name_25 WHERE pick < 196 AND round > 5 AND player = \"blake miller\"",
        "context": "CREATE TABLE table_name_25 (school_club_team VARCHAR, player VARCHAR, pick VARCHAR, round VARCHAR)",
        "question": "Which school/club has a pick smaller than 196, a round higher than 5 and has Blake Miller?"
    },
    {
        "answer": "SELECT date FROM table_name_15 WHERE result = \"won 4-2\"",
        "context": "CREATE TABLE table_name_15 (date VARCHAR, result VARCHAR)",
        "question": "What was the date of the game with a result of won 4-2?"
    },
    {
        "answer": "SELECT SUM(area__km\u00b2_) FROM table_name_34 WHERE county = \"nairnshire\" AND population < 11 OFFSET 050",
        "context": "CREATE TABLE table_name_34 (area__km\u00b2_ INTEGER, county VARCHAR, population VARCHAR)",
        "question": "What is the area (km\u00b2) of Nairnshire county, which has a population less than 11,050?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_66 WHERE away_team = \"footscray\"",
        "context": "CREATE TABLE table_name_66 (away_team VARCHAR)",
        "question": "What was the score for Footscray when they were the away team?"
    },
    {
        "answer": "SELECT MAX(Severe) AS tropical_cyclones FROM table_name_78 WHERE tropical_cyclones = 10 AND tropical_lows = 14",
        "context": "CREATE TABLE table_name_78 (Severe INTEGER, tropical_cyclones VARCHAR, tropical_lows VARCHAR)",
        "question": "What is the highest number of severe tropical cyclones when there are 10 tropical cyclones and 14 tropical lows?"
    },
    {
        "answer": "SELECT rank FROM table_name_99 WHERE laps < 137 AND qual = \"116.470\"",
        "context": "CREATE TABLE table_name_99 (rank VARCHAR, laps VARCHAR, qual VARCHAR)",
        "question": "What's the rank when the laps are fewer than 137 and the qual is 116.470?"
    },
    {
        "answer": "SELECT MIN(length__m_) FROM table_name_72 WHERE maximum_grade___percentage_ = \"15\" AND vertical_drop__m_ < 122.22 AND country = \"norway\"",
        "context": "CREATE TABLE table_name_72 (length__m_ INTEGER, country VARCHAR, maximum_grade___percentage_ VARCHAR, vertical_drop__m_ VARCHAR)",
        "question": "What is the shortest length of a track in Norway that has a maximum grade of 15% and a vertical drop less than 122.22 m?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_79 WHERE opponent = \"west bromwich albion\" AND result = \"3 \u2013 3\" AND match > 20",
        "context": "CREATE TABLE table_name_79 (attendance INTEGER, match VARCHAR, opponent VARCHAR, result VARCHAR)",
        "question": "How many Attendance has a Opponent of west bromwich albion, and a Result of 3 \u2013 3, and a Match larger than 20?"
    },
    {
        "answer": "SELECT MAX(match) FROM table_name_99 WHERE venue = \"h\" AND date = \"22 september 1888\" AND attendance < 4 OFFSET 000",
        "context": "CREATE TABLE table_name_99 (match INTEGER, attendance VARCHAR, venue VARCHAR, date VARCHAR)",
        "question": "WHich Match has a Venue of h on 22 september 1888 with Attendances smaller than 4,000?"
    },
    {
        "answer": "SELECT venue FROM table_name_40 WHERE home_team = \"carlton\"",
        "context": "CREATE TABLE table_name_40 (venue VARCHAR, home_team VARCHAR)",
        "question": "What venue features carlton as the home side?"
    },
    {
        "answer": "SELECT form_factor FROM table_name_84 WHERE controller = \"sandforce\" AND capacities__gb_ = \"80/120/180/240/360/480\" AND introduced = \"july 2013\"",
        "context": "CREATE TABLE table_name_84 (form_factor VARCHAR, introduced VARCHAR, controller VARCHAR, capacities__gb_ VARCHAR)",
        "question": "Which value for Form factor has Sandforce with Capacity 80/120/180/240/360/480 introduced in July 2013?"
    },
    {
        "answer": "SELECT controller FROM table_name_37 WHERE interface = \"pcie 2.0 \u00d7 8\"",
        "context": "CREATE TABLE table_name_37 (controller VARCHAR, interface VARCHAR)",
        "question": "Which controller has an interface of pcie 2.0 \u00d7 8?"
    },
    {
        "answer": "SELECT controller FROM table_name_67 WHERE nand_type = \"25nm mlc-het\" AND seq_read_write_mb_s = \"270/210\"",
        "context": "CREATE TABLE table_name_67 (controller VARCHAR, nand_type VARCHAR, seq_read_write_mb_s VARCHAR)",
        "question": "Which controller is NAND type 25nm mlc-het with sequential read/write MB/s of 270/210?"
    },
    {
        "answer": "SELECT SUM(blackpool) FROM table_name_94 WHERE preston_north_end < 46 AND competition = \"other\" AND draw > 1",
        "context": "CREATE TABLE table_name_94 (blackpool INTEGER, draw VARCHAR, preston_north_end VARCHAR, competition VARCHAR)",
        "question": "Which Blackpool has a Preston North End smaller than 46, and a Competition of other, and a Draw larger than 1?"
    },
    {
        "answer": "SELECT winning_driver FROM table_name_96 WHERE winning_team = \"opel team holzer 1\" AND round < 9 AND fastest_lap = \"bernd schneider\"",
        "context": "CREATE TABLE table_name_96 (winning_driver VARCHAR, fastest_lap VARCHAR, winning_team VARCHAR, round VARCHAR)",
        "question": "Who was the winning driver with the winning team Opel Team Holzer 1, and a round under 9 with the fastest lap being Bernd Schneider?"
    },
    {
        "answer": "SELECT date FROM table_name_34 WHERE circuit = \"hockenheimring\" AND winning_manufacturer = \"mercedes-benz\"",
        "context": "CREATE TABLE table_name_34 (date VARCHAR, circuit VARCHAR, winning_manufacturer VARCHAR)",
        "question": "What was the date of Circuit Hockenheimring and the winning manufacturer being Mercedes-Benz?"
    },
    {
        "answer": "SELECT surface FROM table_name_99 WHERE score = \"3-6, 1-6\"",
        "context": "CREATE TABLE table_name_99 (surface VARCHAR, score VARCHAR)",
        "question": "On what Surface was the match with a Score of 3-6, 1-6 played?"
    },
    {
        "answer": "SELECT AVG(interview) FROM table_name_65 WHERE preliminaries > 8.27 AND evening_gown = 8.85 AND average < 8.842",
        "context": "CREATE TABLE table_name_65 (interview INTEGER, average VARCHAR, preliminaries VARCHAR, evening_gown VARCHAR)",
        "question": "What's the average interview with Preliminaries larger than 8.27, an Evening Gown of 8.85, and an Average smaller than 8.842?"
    },
    {
        "answer": "SELECT 2000 AS _population FROM table_name_71 WHERE state_s_ = \"ok\" AND percent_change__1990_2000_ = \"a078 +17.22%\"",
        "context": "CREATE TABLE table_name_71 (state_s_ VARCHAR, percent_change__1990_2000_ VARCHAR)",
        "question": "What is the 2000 population in OK with a 1990-2000 percent change of A078 +17.22%?"
    },
    {
        "answer": "SELECT winning_constructor FROM table_name_52 WHERE winning_driver = \"felice nazzaro\"",
        "context": "CREATE TABLE table_name_52 (winning_constructor VARCHAR, winning_driver VARCHAR)",
        "question": "Which Winning constructor has a Winning driver of felice nazzaro?"
    },
    {
        "answer": "SELECT date FROM table_name_34 WHERE winning_constructor = \"fiat\" AND winning_driver = \"louis wagner\"",
        "context": "CREATE TABLE table_name_34 (date VARCHAR, winning_constructor VARCHAR, winning_driver VARCHAR)",
        "question": "Which Date has a Winning constructor of fiat and a Winning driver of louis wagner?"
    },
    {
        "answer": "SELECT SUM(silver) FROM table_name_14 WHERE total > 14 AND gold > 16",
        "context": "CREATE TABLE table_name_14 (silver INTEGER, total VARCHAR, gold VARCHAR)",
        "question": "What is the sum of silver medals for teams with more than 14 total medals and more than 16 golds?"
    },
    {
        "answer": "SELECT games FROM table_name_70 WHERE name = \"tsegay kebede category:articles with hcards\"",
        "context": "CREATE TABLE table_name_70 (games VARCHAR, name VARCHAR)",
        "question": "Which game is named tsegay kebede category:articles with hcards?"
    },
    {
        "answer": "SELECT medal FROM table_name_73 WHERE name = \"fatuma roba category:articles with hcards\"",
        "context": "CREATE TABLE table_name_73 (medal VARCHAR, name VARCHAR)",
        "question": "What is the medal named fatuma roba category:articles with hcards for?"
    },
    {
        "answer": "SELECT games FROM table_name_15 WHERE name = \"derartu tulu category:articles with hcards\"",
        "context": "CREATE TABLE table_name_15 (games VARCHAR, name VARCHAR)",
        "question": "What is the game named derartu tulu category:articles with hcards?"
    },
    {
        "answer": "SELECT time FROM table_name_32 WHERE opponent = \"cagliari\" AND round = \"16\"",
        "context": "CREATE TABLE table_name_32 (time VARCHAR, opponent VARCHAR, round VARCHAR)",
        "question": "What time was the game played against Cagliari that lasted 16 rounds?"
    },
    {
        "answer": "SELECT MIN(date) FROM table_name_51 WHERE competition = \"league\" AND venue = \"away\" AND opponent = \"swindon wildcats\" AND attendance > 1 OFFSET 201",
        "context": "CREATE TABLE table_name_51 (date INTEGER, attendance VARCHAR, opponent VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "Whihc Date is the lowest one that has a Competition of league, and a Venue of away, and an Opponent of swindon wildcats, and an Attendance larger than 1,201?"
    },
    {
        "answer": "SELECT SUM(votes) FROM table_name_66 WHERE date = \"1956\" AND _percentage_of_national_vote > 11.47",
        "context": "CREATE TABLE table_name_66 (votes INTEGER, date VARCHAR, _percentage_of_national_vote VARCHAR)",
        "question": "How many votes were tallied in 1956 with a % of national vote larger than 11.47?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_98 WHERE home = \"penguins\" AND record = \"14\u201319\u20136\" AND points < 34",
        "context": "CREATE TABLE table_name_98 (attendance VARCHAR, points VARCHAR, home VARCHAR, record VARCHAR)",
        "question": "How many in attendance when Penguins were home with a record of 14\u201319\u20136 with less than 34 points?"
    },
    {
        "answer": "SELECT november FROM table_name_66 WHERE july = \"hope marie carlton\"",
        "context": "CREATE TABLE table_name_66 (november VARCHAR, july VARCHAR)",
        "question": "Who is the November playmate with the July playmate Hope Marie Carlton?"
    },
    {
        "answer": "SELECT yards FROM table_name_26 WHERE completion__percentage = \"64.9%\"",
        "context": "CREATE TABLE table_name_26 (yards VARCHAR, completion__percentage VARCHAR)",
        "question": "Which yard has a Completion of 64.9%?"
    },
    {
        "answer": "SELECT completion__percentage FROM table_name_57 WHERE yards = \"2,175\"",
        "context": "CREATE TABLE table_name_57 (completion__percentage VARCHAR, yards VARCHAR)",
        "question": "which Completion % has a Yards of 2,175?"
    },
    {
        "answer": "SELECT SUM(interview) FROM table_name_75 WHERE province = \"monte cristi\" AND swimsuit > 7.27",
        "context": "CREATE TABLE table_name_75 (interview INTEGER, province VARCHAR, swimsuit VARCHAR)",
        "question": "Which Interview has a Province of monte cristi and a Swimsuit larger than 7.27"
    },
    {
        "answer": "SELECT SUM(gold) FROM table_name_24 WHERE silver = 2 AND total < 7",
        "context": "CREATE TABLE table_name_24 (gold INTEGER, silver VARCHAR, total VARCHAR)",
        "question": "What is the total number of gold medals won by nations that won 2 silver medals but fewer than 7 in total?"
    },
    {
        "answer": "SELECT tournament FROM table_name_75 WHERE score = \"6\u20133, 7\u20136\"",
        "context": "CREATE TABLE table_name_75 (tournament VARCHAR, score VARCHAR)",
        "question": "Which tournament had a score of 6\u20133, 7\u20136?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_59 WHERE school = \"morris brown\"",
        "context": "CREATE TABLE table_name_59 (round VARCHAR, school VARCHAR)",
        "question": "What is the total number of round picks from the Morris Brown School?"
    },
    {
        "answer": "SELECT final_score FROM table_name_74 WHERE stadium = \"astrodome\"",
        "context": "CREATE TABLE table_name_74 (final_score VARCHAR, stadium VARCHAR)",
        "question": "What was the final score of the game at the astrodome?"
    },
    {
        "answer": "SELECT visiting_team FROM table_name_90 WHERE stadium = \"jack murphy stadium\"",
        "context": "CREATE TABLE table_name_90 (visiting_team VARCHAR, stadium VARCHAR)",
        "question": "What was the name of the Visiting team at Jack Murphy Stadium?"
    },
    {
        "answer": "SELECT team FROM table_name_21 WHERE year > 1997",
        "context": "CREATE TABLE table_name_21 (team VARCHAR, year INTEGER)",
        "question": "Are there any Teams after 1997?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_80 WHERE away_fans < 151 AND opponent = \"bury\"",
        "context": "CREATE TABLE table_name_80 (attendance INTEGER, away_fans VARCHAR, opponent VARCHAR)",
        "question": "What was the lowest attendance at a game when there were fewer than 151 away fans and an opponent of Bury?"
    },
    {
        "answer": "SELECT finished FROM table_name_91 WHERE famous_for = \"singer in atomic kitten\"",
        "context": "CREATE TABLE table_name_91 (finished VARCHAR, famous_for VARCHAR)",
        "question": "What place did the singer in atomic kitten finish?"
    },
    {
        "answer": "SELECT feature FROM table_name_64 WHERE driving_force_ex = \"no\" AND driving_force_gt = \"yes\" AND driving_force_pro = \"yes\"",
        "context": "CREATE TABLE table_name_64 (feature VARCHAR, driving_force_pro VARCHAR, driving_force_ex VARCHAR, driving_force_gt VARCHAR)",
        "question": "Driving Force EX of no, and a Driving Force GT of yes, and a Driving Force Pro of yes has what feature?"
    },
    {
        "answer": "SELECT group FROM table_name_99 WHERE height__m_ = 32 AND population = \"0\" AND island = \"faray\"",
        "context": "CREATE TABLE table_name_99 (group VARCHAR, island VARCHAR, height__m_ VARCHAR, population VARCHAR)",
        "question": "What group on the island of Faray has a Height (m) of 32 and a Population of 0?"
    },
    {
        "answer": "SELECT AVG(drawn) FROM table_name_76 WHERE position < 9 AND points < 22 AND lost < 9 AND against > 29",
        "context": "CREATE TABLE table_name_76 (drawn INTEGER, against VARCHAR, lost VARCHAR, position VARCHAR, points VARCHAR)",
        "question": "Which Drawn is the average one that has a Position smaller than 9, and Points smaller than 22, and a Lost smaller than 9, and an Against larger than 29?"
    },
    {
        "answer": "SELECT population FROM table_name_30 WHERE height__m_ = 15 AND area___ha__ = \"00017 17\"",
        "context": "CREATE TABLE table_name_30 (population VARCHAR, height__m_ VARCHAR, area___ha__ VARCHAR)",
        "question": "What is the Population of the group that has a Height (m) of 15 and an Area (ha) of 00017 17?"
    },
    {
        "answer": "SELECT AVG(frequency) FROM table_name_44 WHERE website = \"\u2022\" AND webcast = \"\u2022\" AND city_of_license = \"san antonio\"",
        "context": "CREATE TABLE table_name_44 (frequency INTEGER, city_of_license VARCHAR, website VARCHAR, webcast VARCHAR)",
        "question": "Which Frequency has a Website of \u2022, and a Webcast of \u2022in san antonio?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_39 WHERE album___song = \"speaking louder than before\"",
        "context": "CREATE TABLE table_name_39 (year INTEGER, album___song VARCHAR)",
        "question": "What year was the Album/Song Speaking louder than before?"
    },
    {
        "answer": "SELECT SUM(week) FROM table_name_97 WHERE opponent = \"houston oilers\" AND attendance > 54 OFFSET 582",
        "context": "CREATE TABLE table_name_97 (week INTEGER, opponent VARCHAR, attendance VARCHAR)",
        "question": "What is the sum of the weeks during which the Redskins played against the Houston Oilers and had more than 54,582 fans in attendance?"
    },
    {
        "answer": "SELECT numbers__quantity_ordered_ FROM table_name_96 WHERE fuel_propulsion = \"cng\" AND year < 2008 AND make__model = \"nabi 40-lfw\"",
        "context": "CREATE TABLE table_name_96 (numbers__quantity_ordered_ VARCHAR, make__model VARCHAR, fuel_propulsion VARCHAR, year VARCHAR)",
        "question": "Which Numbers (Quantity Ordered) have a Fuel Propulsion of cng, and a Year smaller than 2008, and a Make/ Model of nabi 40-lfw?"
    },
    {
        "answer": "SELECT numbers__quantity_ordered_ FROM table_name_88 WHERE make__model = \"eldorado national passport\"",
        "context": "CREATE TABLE table_name_88 (numbers__quantity_ordered_ VARCHAR, make__model VARCHAR)",
        "question": "Which Numbers (Quantity Ordered) have a Make/ Model of eldorado national passport?"
    },
    {
        "answer": "SELECT MAX(decile) FROM table_name_47 WHERE roll > 34 AND gender = \"coed\" AND authority = \"state integrated\" AND area = \"georgetown\"",
        "context": "CREATE TABLE table_name_47 (decile INTEGER, area VARCHAR, authority VARCHAR, roll VARCHAR, gender VARCHAR)",
        "question": "What is the largest decile with a Roll larger than 34, a Gender of coed, and an Authority of state integrated, and an Area of georgetown?"
    },
    {
        "answer": "SELECT score FROM table_name_19 WHERE opponent = \"@ blue jays\" AND date = \"october 6\"",
        "context": "CREATE TABLE table_name_19 (score VARCHAR, opponent VARCHAR, date VARCHAR)",
        "question": "Opponent of @ blue jays, and a Date of october 6 had what score?"
    },
    {
        "answer": "SELECT SUM(losses) FROM table_name_26 WHERE goal_difference < -2 AND club = \"cd sabadell\" AND played > 38",
        "context": "CREATE TABLE table_name_26 (losses INTEGER, played VARCHAR, goal_difference VARCHAR, club VARCHAR)",
        "question": "How many losses are there in the CD Sabadell club with a goal difference less than -2, and more than 38 played?"
    },
    {
        "answer": "SELECT AVG(played) FROM table_name_64 WHERE goals_for < 43 AND draws > 9 AND position > 17 AND points = \"30-8\"",
        "context": "CREATE TABLE table_name_64 (played INTEGER, points VARCHAR, position VARCHAR, goals_for VARCHAR, draws VARCHAR)",
        "question": "What are the average number of played with goals of less than 43, more than 9 draws, a higher position than 17 and 30-8 points?"
    },
    {
        "answer": "SELECT location FROM table_name_47 WHERE _number_found = \"4\"",
        "context": "CREATE TABLE table_name_47 (location VARCHAR, _number_found VARCHAR)",
        "question": "What is the listed Location with a # found of 4?"
    },
    {
        "answer": "SELECT country FROM table_name_37 WHERE pinnacle_height = \"metres (ft)\" AND name = \"azeri tv tower\"",
        "context": "CREATE TABLE table_name_37 (country VARCHAR, pinnacle_height VARCHAR, name VARCHAR)",
        "question": "Which Country has a Pinnacle height of metres (ft) and a Name of azeri tv tower?"
    },
    {
        "answer": "SELECT spouse FROM table_name_31 WHERE became_duchess = \"31 october 1733 husband's accession\"",
        "context": "CREATE TABLE table_name_31 (spouse VARCHAR, became_duchess VARCHAR)",
        "question": "Who is The Spouse of the Duchess that has a Became Duchess  on 31 october 1733 husband's accession?"
    },
    {
        "answer": "SELECT country FROM table_name_88 WHERE name = \"chunkath, mohan verghese\"",
        "context": "CREATE TABLE table_name_88 (country VARCHAR, name VARCHAR)",
        "question": "What country has chunkath, mohan verghese as the name?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_1 WHERE outcome = \"runner-up\" AND surface = \"hard\" AND opponents_in_the_final = \"micha\u00ebl llodra nenad zimonji\u0107\"",
        "context": "CREATE TABLE table_name_1 (score_in_the_final VARCHAR, opponents_in_the_final VARCHAR, outcome VARCHAR, surface VARCHAR)",
        "question": "Name the score in the final for runner-up and hard surface with opponents being micha\u00ebl llodra nenad zimonji\u0107"
    },
    {
        "answer": "SELECT time FROM table_name_88 WHERE machine = \"honda 1000cc\" AND rider_s_ = \"bruce anstey\"",
        "context": "CREATE TABLE table_name_88 (time VARCHAR, machine VARCHAR, rider_s_ VARCHAR)",
        "question": "What time did bruce anstey complete in a honda 1000cc?"
    },
    {
        "answer": "SELECT commissioned_or_completed_ * _ FROM table_name_60 WHERE ship = \"manhattan\"",
        "context": "CREATE TABLE table_name_60 (commissioned_or_completed_ VARCHAR, _ VARCHAR, ship VARCHAR)",
        "question": "What date was the ship named Manhattan completed?"
    },
    {
        "answer": "SELECT COUNT(agri_culture_b) FROM table_name_10 WHERE income_poverty_f < 13.6 AND mining_b = 1 AND structural_poverty_g < 7.8",
        "context": "CREATE TABLE table_name_10 (agri_culture_b VARCHAR, structural_poverty_g VARCHAR, income_poverty_f VARCHAR, mining_b VARCHAR)",
        "question": "Income poverty f smaller than 13.6, and a Mining b of 1, and a Structural poverty g smaller than 7.8, so what is the total number of agriculture?"
    },
    {
        "answer": "SELECT 2005 FROM table_name_52 WHERE tournament = \"grand slam tournaments\"",
        "context": "CREATE TABLE table_name_52 (tournament VARCHAR)",
        "question": "Which 2005 has a Tournament of grand slam tournaments?"
    },
    {
        "answer": "SELECT MIN(draws) FROM table_name_86 WHERE goal_difference > -16 AND club = \"elche cf\" AND played > 38",
        "context": "CREATE TABLE table_name_86 (draws INTEGER, played VARCHAR, goal_difference VARCHAR, club VARCHAR)",
        "question": "What was the number of draws when the Elche CF club played 38 and had a goal difference of -16?"
    },
    {
        "answer": "SELECT MAX(doctorate) FROM table_name_10 WHERE specialist = 0 AND college = \"informatics and systems\" AND masters < 2",
        "context": "CREATE TABLE table_name_10 (doctorate INTEGER, masters VARCHAR, specialist VARCHAR, college VARCHAR)",
        "question": "What is the highest number of doctorates the college of informatics and systems, which has 0 specialists and less than 2 master's degrees, have?"
    },
    {
        "answer": "SELECT displacement FROM table_name_95 WHERE year > 2002 AND power = \"220kw (299hp) @ 4000\"",
        "context": "CREATE TABLE table_name_95 (displacement VARCHAR, year VARCHAR, power VARCHAR)",
        "question": "What is the Displacement that has Power of 220kw (299hp) @ 4000, and a year larger than 2002?"
    },
    {
        "answer": "SELECT tie_no FROM table_name_66 WHERE away_team = \"slough town\"",
        "context": "CREATE TABLE table_name_66 (tie_no VARCHAR, away_team VARCHAR)",
        "question": "Which Tie # has an Away team of slough town?"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_40 WHERE year > 1996 AND championship_finish = \"1st\" AND points < 168",
        "context": "CREATE TABLE table_name_40 (wins INTEGER, points VARCHAR, year VARCHAR, championship_finish VARCHAR)",
        "question": "Which Wins is the highest one that has a Year larger than 1996, and a Championship Finish of 1st, and Points smaller than 168?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_58 WHERE team = \"walker racing\" AND wins > 1",
        "context": "CREATE TABLE table_name_58 (year INTEGER, team VARCHAR, wins VARCHAR)",
        "question": "Which Year is the highest that has a Team of walker racing, and Wins larger than 1?"
    },
    {
        "answer": "SELECT rapid FROM table_name_91 WHERE distance__km_ < 14.2 AND station = \"k\u014dmy\u014dji\"",
        "context": "CREATE TABLE table_name_91 (rapid VARCHAR, distance__km_ VARCHAR, station VARCHAR)",
        "question": "Which rapid has a distance in km smaller than 14.2, and a Station of k\u014dmy\u014dji?"
    },
    {
        "answer": "SELECT SUM(other) FROM table_name_14 WHERE name = \"simon gillett category:articles with hcards\" AND total < 34",
        "context": "CREATE TABLE table_name_14 (other INTEGER, name VARCHAR, total VARCHAR)",
        "question": "What is the sum of Other, when the Name is Simon Gillett Category:Articles with hCards, and when the Total is less than 34?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_60 WHERE name = \"simon gillett category:articles with hcards\" AND other > 3",
        "context": "CREATE TABLE table_name_60 (total INTEGER, name VARCHAR, other VARCHAR)",
        "question": "What is the average Total, when the Name is Simon Gillett Category:Articles with hCards, and when the Other is greater than 3?"
    },
    {
        "answer": "SELECT SUM(league) AS Cup FROM table_name_68 WHERE other < 1 AND name = \"gareth farrelly category:articles with hcards\" AND league > 1",
        "context": "CREATE TABLE table_name_68 (league INTEGER, other VARCHAR, name VARCHAR)",
        "question": "What is the sum of League Cup, when the Other is less than 1, when the Name is Gareth Farrelly Category:Articles with hCards, and when the League is greater than 1?"
    },
    {
        "answer": "SELECT COUNT(overall) FROM table_name_84 WHERE position = \"kicker\" AND pick__number < 6",
        "context": "CREATE TABLE table_name_84 (overall VARCHAR, position VARCHAR, pick__number VARCHAR)",
        "question": "What is the overall number for a kicker with a pick of less than 6?"
    },
    {
        "answer": "SELECT champion FROM table_name_52 WHERE year = \"2000\"",
        "context": "CREATE TABLE table_name_52 (champion VARCHAR, year VARCHAR)",
        "question": "Name the champion for 2000"
    },
    {
        "answer": "SELECT removal_treaty__year_signed_ FROM table_name_32 WHERE nation = \"chickasaw\"",
        "context": "CREATE TABLE table_name_32 (removal_treaty__year_signed_ VARCHAR, nation VARCHAR)",
        "question": "Which removal treaty covered the chickasaw nation?"
    },
    {
        "answer": "SELECT name FROM table_name_87 WHERE rank = \"lieutenant colonel\" AND begin_date = \"1904-02-22 22 february 1904\"",
        "context": "CREATE TABLE table_name_87 (name VARCHAR, rank VARCHAR, begin_date VARCHAR)",
        "question": "what name has a Rank of lieutenant colonel, and a Begin Date of 1904-02-22 22 february 1904?"
    },
    {
        "answer": "SELECT position FROM table_name_26 WHERE school_club_team = \"oklahoma state\"",
        "context": "CREATE TABLE table_name_26 (position VARCHAR, school_club_team VARCHAR)",
        "question": "Oklahoma State produced a player in which position in the draft?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_18 WHERE record = \"8\u20131\" AND week > 9",
        "context": "CREATE TABLE table_name_18 (attendance INTEGER, record VARCHAR, week VARCHAR)",
        "question": "Record of 8\u20131, and a Week larger than 9 had what highest attendance?"
    },
    {
        "answer": "SELECT MAX(silver) FROM table_name_9 WHERE total < 8 AND gold = 0 AND nation = \"qatar\" AND bronze > 2",
        "context": "CREATE TABLE table_name_9 (silver INTEGER, bronze VARCHAR, nation VARCHAR, total VARCHAR, gold VARCHAR)",
        "question": "What is the highest number of silvers for qatar with under 8 total, 0 golds, and over 2 bronzes?"
    },
    {
        "answer": "SELECT COUNT(baia_mare) FROM table_name_59 WHERE electrica_north_transylvania < 14.476 AND bistrita = 643 AND zalau < 737",
        "context": "CREATE TABLE table_name_59 (baia_mare VARCHAR, zalau VARCHAR, electrica_north_transylvania VARCHAR, bistrita VARCHAR)",
        "question": "How many Baia Mare have an Electrica North Transylvania under 14.476, Bistrita of 643, and Zalau under 737?"
    },
    {
        "answer": "SELECT filename_extension FROM table_name_26 WHERE word_wrap_support = \"yes\" AND open_standard = \"no\" AND interactivity_support = \"yes\"",
        "context": "CREATE TABLE table_name_26 (filename_extension VARCHAR, interactivity_support VARCHAR, word_wrap_support VARCHAR, open_standard VARCHAR)",
        "question": "Which Filename extension has a Word wrap support of yes, an Open standard of no, and an Interactivity support of yes?"
    },
    {
        "answer": "SELECT format FROM table_name_22 WHERE interactivity_support = \"no\" AND word_wrap_support = \"yes\" AND image_support = \"yes\" AND open_standard = \"yes\"",
        "context": "CREATE TABLE table_name_22 (format VARCHAR, open_standard VARCHAR, image_support VARCHAR, interactivity_support VARCHAR, word_wrap_support VARCHAR)",
        "question": "Which Format has an Interactivity support of no, a Word wrap support of yes, an Image support of yes, and an Open standard of yes?"
    },
    {
        "answer": "SELECT result FROM table_name_48 WHERE road_team = \"philadelphia\" AND date = \"may 14\"",
        "context": "CREATE TABLE table_name_48 (result VARCHAR, road_team VARCHAR, date VARCHAR)",
        "question": "What is the result of the game on May 14 with Philadelphia as the road team?"
    },
    {
        "answer": "SELECT road_team FROM table_name_53 WHERE home_team = \"philadelphia\" AND result = \"105-102\"",
        "context": "CREATE TABLE table_name_53 (road_team VARCHAR, home_team VARCHAR, result VARCHAR)",
        "question": "What is the road team of the game with Philadelphia as the home team with a result of 105-102?"
    },
    {
        "answer": "SELECT district FROM table_name_20 WHERE first_elected = 1856 AND incumbent = \"william kellogg\"",
        "context": "CREATE TABLE table_name_20 (district VARCHAR, first_elected VARCHAR, incumbent VARCHAR)",
        "question": "Which District has a First elected of 1856, and an Incumbent of william kellogg?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_85 WHERE rank > 11 AND nation = \"switzerland\" AND silver < 0",
        "context": "CREATE TABLE table_name_85 (total INTEGER, silver VARCHAR, rank VARCHAR, nation VARCHAR)",
        "question": "What is the average total with a Rank larger than 11, a Nation of switzerland, and a Silver smaller than 0?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_86 WHERE pick__number = 12 AND position = \"linebacker\"",
        "context": "CREATE TABLE table_name_86 (round INTEGER, pick__number VARCHAR, position VARCHAR)",
        "question": "Which is the lowest round to have a pick of 12 and position of linebacker?"
    },
    {
        "answer": "SELECT COUNT(overall) FROM table_name_97 WHERE college = \"notre dame\" AND round > 2",
        "context": "CREATE TABLE table_name_97 (overall VARCHAR, college VARCHAR, round VARCHAR)",
        "question": "How many overall values have a college of Notre Dame and rounds over 2?"
    },
    {
        "answer": "SELECT date FROM table_name_23 WHERE competition = \"2004 afc asian cup qualifier\"",
        "context": "CREATE TABLE table_name_23 (date VARCHAR, competition VARCHAR)",
        "question": "Name the date for 2004 afc asian cup qualifier"
    },
    {
        "answer": "SELECT COUNT(lost) FROM table_name_92 WHERE team = \"flamengo\" AND against < 5",
        "context": "CREATE TABLE table_name_92 (lost VARCHAR, team VARCHAR, against VARCHAR)",
        "question": "How many Lost have a Team of flamengo, and an Against smaller than 5?"
    },
    {
        "answer": "SELECT rider FROM table_name_50 WHERE final_position___tour < 50 AND final_position___vuelta < 11 AND year < 2008",
        "context": "CREATE TABLE table_name_50 (rider VARCHAR, year VARCHAR, final_position___tour VARCHAR, final_position___vuelta VARCHAR)",
        "question": "Who is the rider with less than 50 final position-tours and less than 11 final position-vuelta before 2008?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_67 WHERE final_position___tour > 72 AND final_position___vuelta < 77 AND final_position___giro < 57 AND rider = \"valdimir poelnikov\"",
        "context": "CREATE TABLE table_name_67 (year INTEGER, rider VARCHAR, final_position___giro VARCHAR, final_position___tour VARCHAR, final_position___vuelta VARCHAR)",
        "question": "What is the earliest year of Valdimir Poelnikov, who has a final position-tour bigger than 72, a final position-vuelta less than 77, and a final position-giro less than 57?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_29 WHERE final_position___tour = 88 AND final_position___giro < 11",
        "context": "CREATE TABLE table_name_29 (year INTEGER, final_position___tour VARCHAR, final_position___giro VARCHAR)",
        "question": "What year was the rider with a final position-tour of 88 and less than 11 final position-giros?"
    },
    {
        "answer": "SELECT AVG(area__km_2__) FROM table_name_14 WHERE density__inhabitants_km_2__ < 206.2 AND altitude__mslm_ < 85",
        "context": "CREATE TABLE table_name_14 (area__km_2__ INTEGER, density__inhabitants_km_2__ VARCHAR, altitude__mslm_ VARCHAR)",
        "question": "What is the average area of the city that has a density less than than 206.2 and an altitude of less than 85?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_99 WHERE opponent = \"indians\" AND record = \"13-4\"",
        "context": "CREATE TABLE table_name_99 (attendance INTEGER, opponent VARCHAR, record VARCHAR)",
        "question": "What was the highest attendance when the opponent was the Indians and the record was 13-4?"
    },
    {
        "answer": "SELECT MIN(population) FROM table_name_37 WHERE altitude__mslm_ < 197 AND city = \"alessandria\" AND density__inhabitants_km_2__ < 461.8",
        "context": "CREATE TABLE table_name_37 (population INTEGER, density__inhabitants_km_2__ VARCHAR, altitude__mslm_ VARCHAR, city VARCHAR)",
        "question": "What is the lowest population of alessandria where the altitude is less than 197 and density is less than 461.8?"
    },
    {
        "answer": "SELECT entered_service FROM table_name_32 WHERE delivered_as = \"t413\"",
        "context": "CREATE TABLE table_name_32 (entered_service VARCHAR, delivered_as VARCHAR)",
        "question": "What is the Entered service date of the T413?"
    },
    {
        "answer": "SELECT album FROM table_name_18 WHERE label = \"warp records / paper bag records\" AND title = \"i need a life\"",
        "context": "CREATE TABLE table_name_18 (album VARCHAR, label VARCHAR, title VARCHAR)",
        "question": "What album has the title I Need A Life with the label of warp records / paper bag records?"
    },
    {
        "answer": "SELECT SUM(game__number) FROM table_name_57 WHERE record = \"11-10-3\"",
        "context": "CREATE TABLE table_name_57 (game__number INTEGER, record VARCHAR)",
        "question": "Record of 11-10-3 is what sum of game #?"
    },
    {
        "answer": "SELECT SUM(high_estimate) FROM table_name_51 WHERE type = \"mass suicide\" AND location = \"france\" AND low_estimate > 16",
        "context": "CREATE TABLE table_name_51 (high_estimate INTEGER, low_estimate VARCHAR, type VARCHAR, location VARCHAR)",
        "question": "With a type of mass suicide located in France and a low estimate greater than 16, the sum of the high estimate numbers listed is what number?"
    },
    {
        "answer": "SELECT director FROM table_name_72 WHERE platform_s_ = \"gcn\" AND year > 2004 AND title = \"battalion wars 2\"",
        "context": "CREATE TABLE table_name_72 (director VARCHAR, title VARCHAR, platform_s_ VARCHAR, year VARCHAR)",
        "question": "Who was the director of Battalion Wars 2 which was released on GCN after 2004?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_7 WHERE title = \"metroid prime hunters 5\"",
        "context": "CREATE TABLE table_name_7 (year INTEGER, title VARCHAR)",
        "question": "What year was Metroid Prime Hunters 5 released?"
    },
    {
        "answer": "SELECT title FROM table_name_72 WHERE platform_s_ = \"3ds\" AND director = \"naohiko aoyama\"",
        "context": "CREATE TABLE table_name_72 (title VARCHAR, platform_s_ VARCHAR, director VARCHAR)",
        "question": "What 3ds game did Naohiko Aoyama direct?"
    },
    {
        "answer": "SELECT catalog FROM table_name_42 WHERE region = \"france\"",
        "context": "CREATE TABLE table_name_42 (catalog VARCHAR, region VARCHAR)",
        "question": "What is the Catalog number in the Region of France?"
    },
    {
        "answer": "SELECT cardinal_direction FROM table_name_90 WHERE english = \"wednesday p.m.\"",
        "context": "CREATE TABLE table_name_90 (cardinal_direction VARCHAR, english VARCHAR)",
        "question": "What is the cardinal direction of Wednesday p.m. in English?"
    },
    {
        "answer": "SELECT COUNT(seasons) FROM table_name_56 WHERE name = \"charles c. farrell\"",
        "context": "CREATE TABLE table_name_56 (seasons VARCHAR, name VARCHAR)",
        "question": "How many seasons did Charles C. Farrell coach?"
    },
    {
        "answer": "SELECT new_entries_this_round FROM table_name_71 WHERE phase = \"second phase\" AND winners_from_previous_round = \"4\"",
        "context": "CREATE TABLE table_name_71 (new_entries_this_round VARCHAR, phase VARCHAR, winners_from_previous_round VARCHAR)",
        "question": "How many new entries are there for a second phase that has 4 winners from previous rounds?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_19 WHERE margin_of_victory = \"1 stroke\" AND date = \"21 jun 1981\"",
        "context": "CREATE TABLE table_name_19 (winning_score VARCHAR, margin_of_victory VARCHAR, date VARCHAR)",
        "question": "Which Winning score has a Margin of victory of 1 stroke, and a Date of 21 jun 1981?"
    },
    {
        "answer": "SELECT points_for FROM table_name_12 WHERE drawn = \"2\" AND losing_bonus = \"5\"",
        "context": "CREATE TABLE table_name_12 (points_for VARCHAR, drawn VARCHAR, losing_bonus VARCHAR)",
        "question": "How many points drew 2 with a losing bonus of 5?"
    },
    {
        "answer": "SELECT segment_a FROM table_name_76 WHERE segment_d = \"manual motorcycle transmissions\"",
        "context": "CREATE TABLE table_name_76 (segment_a VARCHAR, segment_d VARCHAR)",
        "question": "What segment A is associated with a Segment D of manual motorcycle transmissions?"
    },
    {
        "answer": "SELECT outcome FROM table_name_44 WHERE year = 2009 AND opponent_in_final = \"chong wei feng\"",
        "context": "CREATE TABLE table_name_44 (outcome VARCHAR, year VARCHAR, opponent_in_final VARCHAR)",
        "question": "What was the outcome from the 2009 match in the final against Chong Wei Feng?"
    },
    {
        "answer": "SELECT races FROM table_name_77 WHERE points > 123 AND driver = \"fernando alonso\" AND percentage_of_possible_points = \"74.44%\"",
        "context": "CREATE TABLE table_name_77 (races VARCHAR, percentage_of_possible_points VARCHAR, points VARCHAR, driver VARCHAR)",
        "question": "Which races have points greater than 123, fernando alonso as the driver and a percentage of possible points of 74.44%?"
    },
    {
        "answer": "SELECT SUM(season) FROM table_name_31 WHERE driver = \"fernando alonso\" AND percentage_of_possible_points = \"64.12%\" AND points < 109",
        "context": "CREATE TABLE table_name_31 (season INTEGER, points VARCHAR, driver VARCHAR, percentage_of_possible_points VARCHAR)",
        "question": "How many seasons have fernando alonso as the driver, and a percentage of possible points of 64.12% and points less than 109?"
    },
    {
        "answer": "SELECT album FROM table_name_20 WHERE remixed_by = \"royal garden sound\" AND version = \"royal g's club mix\"",
        "context": "CREATE TABLE table_name_20 (album VARCHAR, remixed_by VARCHAR, version VARCHAR)",
        "question": "Which album is the royal g's club mix version, which is remixed by royal garden sound, from?"
    },
    {
        "answer": "SELECT attendance FROM table_name_78 WHERE game_site = \"griffith stadium\" AND opponent = \"philadelphia eagles\"",
        "context": "CREATE TABLE table_name_78 (attendance VARCHAR, game_site VARCHAR, opponent VARCHAR)",
        "question": "How many were in attendance at Griffith Stadium with Philadelphia Eagles as an opponent?"
    },
    {
        "answer": "SELECT 2012 FROM table_name_55 WHERE tournament = \"us open\"",
        "context": "CREATE TABLE table_name_55 (tournament VARCHAR)",
        "question": "Name the 2012 for us open"
    },
    {
        "answer": "SELECT MIN(best) FROM table_name_34 WHERE team = \"n/h/l racing\" AND name = \"graham rahal\" AND qual_2 > 59.384",
        "context": "CREATE TABLE table_name_34 (best INTEGER, qual_2 VARCHAR, team VARCHAR, name VARCHAR)",
        "question": "Graham rahal for n/h/l racing has a qual 2 greater than 59.384 and how much lowest best?"
    },
    {
        "answer": "SELECT molecular_target FROM table_name_10 WHERE marine_organism_\u03b1 = \"bacterium\"",
        "context": "CREATE TABLE table_name_10 (molecular_target VARCHAR, marine_organism_\u03b1 VARCHAR)",
        "question": "What is the molecular target of bacterium?"
    },
    {
        "answer": "SELECT tie_no FROM table_name_5 WHERE attendance = \"2 january 1999\" AND home_team = \"plymouth argyle\"",
        "context": "CREATE TABLE table_name_5 (tie_no VARCHAR, attendance VARCHAR, home_team VARCHAR)",
        "question": "For the attendance of 2 january 1999 with a home team of plymouth argyle what is the tie no. ?"
    },
    {
        "answer": "SELECT Local AS mission FROM table_name_13 WHERE local_position = \"ambassador\" AND mission = \"suriname\"",
        "context": "CREATE TABLE table_name_13 (Local VARCHAR, local_position VARCHAR, mission VARCHAR)",
        "question": "What is the local mission that has ambassador as the local position, and a mission of suriname?"
    },
    {
        "answer": "SELECT Local AS mission FROM table_name_41 WHERE local_location = \"none\" AND local_position = \"high commissioner\" AND resident_country = \"fiji\" AND mission = \"tonga\"",
        "context": "CREATE TABLE table_name_41 (Local VARCHAR, mission VARCHAR, resident_country VARCHAR, local_location VARCHAR, local_position VARCHAR)",
        "question": "What is the local mission that has none as a local location, high commissioner as a local position, fiji as a resident county, and a mission of tonga?"
    },
    {
        "answer": "SELECT venue FROM table_name_20 WHERE competition = \"european cross country championships\" AND notes = \"junior men individual 6.595km\"",
        "context": "CREATE TABLE table_name_20 (venue VARCHAR, competition VARCHAR, notes VARCHAR)",
        "question": "What venue hsoted the european cross country championships with a notes of junior men individual 6.595km?"
    },
    {
        "answer": "SELECT position FROM table_name_95 WHERE notes = \"junior men individual 5.64km\"",
        "context": "CREATE TABLE table_name_95 (position VARCHAR, notes VARCHAR)",
        "question": "What position did the person finish in with a notes of junior men individual 5.64km?"
    },
    {
        "answer": "SELECT MAX(total) FROM table_name_29 WHERE gold = 1 AND nation = \"czechoslovakia\"",
        "context": "CREATE TABLE table_name_29 (total INTEGER, gold VARCHAR, nation VARCHAR)",
        "question": "Which Total is the highest one that has a Gold of 1, and a Nation of czechoslovakia?"
    },
    {
        "answer": "SELECT COUNT(week) FROM table_name_79 WHERE venue = \"milwaukee county stadium\" AND attendance = 47 OFFSET 897",
        "context": "CREATE TABLE table_name_79 (week VARCHAR, venue VARCHAR, attendance VARCHAR)",
        "question": "What is the total number of weeks with a game at the Milwaukee County Stadium attended by 47,897?"
    },
    {
        "answer": "SELECT alignment_alignment AS :_predicts_an_alignment_, _ FROM table_name_27 WHERE link = \"linuxbinary\"",
        "context": "CREATE TABLE table_name_27 (_ VARCHAR, alignment_alignment VARCHAR, link VARCHAR)",
        "question": "What is the alignment that predicts an alignment of the linuxbinary link?"
    },
    {
        "answer": "SELECT maximum_seating_capacity FROM table_name_91 WHERE arena_venue = \"san agustin gym\"",
        "context": "CREATE TABLE table_name_91 (maximum_seating_capacity VARCHAR, arena_venue VARCHAR)",
        "question": "What is the maximum capacity of the San Agustin Gym?"
    },
    {
        "answer": "SELECT province_region FROM table_name_42 WHERE home_campus = \"holy cross of davao college\"",
        "context": "CREATE TABLE table_name_42 (province_region VARCHAR, home_campus VARCHAR)",
        "question": "Where is the Holy Cross of Davao College campus located?"
    },
    {
        "answer": "SELECT MAX(total) FROM table_name_61 WHERE finish = \"t12\"",
        "context": "CREATE TABLE table_name_61 (total INTEGER, finish VARCHAR)",
        "question": "What is the highest total with a t12 finish?"
    },
    {
        "answer": "SELECT 2008 FROM table_name_39 WHERE 2009 = \"a\" AND tournament = \"cincinnati masters\"",
        "context": "CREATE TABLE table_name_39 (tournament VARCHAR)",
        "question": "Which 2008 has a 2009 of A, and a Tournament of cincinnati masters?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_39 WHERE position = \"center\" AND pick__number < 23",
        "context": "CREATE TABLE table_name_39 (round INTEGER, position VARCHAR, pick__number VARCHAR)",
        "question": "What is the mean round number for center position when the pick number is less than 23?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_42 WHERE engine = \"ford xb\" AND team = \"project indy\"",
        "context": "CREATE TABLE table_name_42 (points INTEGER, engine VARCHAR, team VARCHAR)",
        "question": "What are the average points for the Project Indy team that has the Ford xb engine?"
    },
    {
        "answer": "SELECT COUNT(area__km_2__) FROM table_name_60 WHERE common_of = \"collegno\" AND population < 50137",
        "context": "CREATE TABLE table_name_60 (area__km_2__ VARCHAR, common_of VARCHAR, population VARCHAR)",
        "question": "How much Area (km 2) has a Common of collegno, and a Population smaller than 50137?"
    },
    {
        "answer": "SELECT MAX(population) FROM table_name_19 WHERE altitude__mslm_ < 229 AND area__km_2__ > 32.7",
        "context": "CREATE TABLE table_name_19 (population INTEGER, altitude__mslm_ VARCHAR, area__km_2__ VARCHAR)",
        "question": "Which Population is the highest one that has an Altitude (mslm) smaller than 229, and an Area (km 2) larger than 32.7?"
    },
    {
        "answer": "SELECT COUNT(grid) FROM table_name_35 WHERE bike = \"suzuki gsx-r1000 k7\" AND time = \"+13.283\"",
        "context": "CREATE TABLE table_name_35 (grid VARCHAR, bike VARCHAR, time VARCHAR)",
        "question": "What is the total number for grid with a Suzuki GSX-R1000 K7 for +13.283?"
    },
    {
        "answer": "SELECT name FROM table_name_31 WHERE circuit = \"miramas\"",
        "context": "CREATE TABLE table_name_31 (name VARCHAR, circuit VARCHAR)",
        "question": "What was the name for the race in the Miramas circuit?"
    },
    {
        "answer": "SELECT year FROM table_name_56 WHERE band = \"snow patrol\" AND lifetime_achievement_award = \"aslan\"",
        "context": "CREATE TABLE table_name_56 (year VARCHAR, band VARCHAR, lifetime_achievement_award VARCHAR)",
        "question": "In what year did Aslan receive a Lifetime Achievement Award and Snow Patrol perform?"
    },
    {
        "answer": "SELECT MAX(bronze) FROM table_name_27 WHERE event = \"1972 heidelberg\" AND total < 5",
        "context": "CREATE TABLE table_name_27 (bronze INTEGER, event VARCHAR, total VARCHAR)",
        "question": "What is the highest Bronze with the Event 1972 Heidelberg and Total less than 5?"
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_21 WHERE event = \"2004 athens\" AND gold < 20",
        "context": "CREATE TABLE table_name_21 (total INTEGER, event VARCHAR, gold VARCHAR)",
        "question": "What is the Total with the Event 2004 Athens and Gold less than 20?"
    },
    {
        "answer": "SELECT colours FROM table_name_26 WHERE head_coach = \"benedikt gu\u00f0mundsson\"",
        "context": "CREATE TABLE table_name_26 (colours VARCHAR, head_coach VARCHAR)",
        "question": "What are the colours of the team with benedikt gu\u00f0mundsson as head coach?"
    },
    {
        "answer": "SELECT date FROM table_name_98 WHERE surface = \"clay\" AND opponent_in_the_final = \"andr\u00e9s g\u00f3mez javier s\u00e1nchez\"",
        "context": "CREATE TABLE table_name_98 (date VARCHAR, surface VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "When has a Surface of clay, and an Opponent in the final of andr\u00e9s g\u00f3mez javier s\u00e1nchez?"
    },
    {
        "answer": "SELECT tournament FROM table_name_13 WHERE date = 1993 AND score_in_the_final = \"6\u20132, 2\u20136, 7\u20135\"",
        "context": "CREATE TABLE table_name_13 (tournament VARCHAR, date VARCHAR, score_in_the_final VARCHAR)",
        "question": "Which Tournament is in 1993 with a Score in the final of 6\u20132, 2\u20136, 7\u20135?"
    },
    {
        "answer": "SELECT white_hat FROM table_name_98 WHERE dakota_mission = \"t\" AND deloria_ & _boas = \"t\u02bd\" AND ullrich = \"t\u021f\"",
        "context": "CREATE TABLE table_name_98 (white_hat VARCHAR, ullrich VARCHAR, dakota_mission VARCHAR, deloria_ VARCHAR, _boas VARCHAR)",
        "question": "Dakota Mission of t, and a Deloria & Boas of t\u02bd, and a Ullrich of t\u021f had what white hat?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_85 WHERE chassis = \"maserati 250f\" AND points < 0",
        "context": "CREATE TABLE table_name_85 (year VARCHAR, chassis VARCHAR, points VARCHAR)",
        "question": "Name the total number of years for chassis of maserati 250f and points less than 0"
    },
    {
        "answer": "SELECT record FROM table_name_36 WHERE game > 15 AND points < 31 AND november = 7",
        "context": "CREATE TABLE table_name_36 (record VARCHAR, november VARCHAR, game VARCHAR, points VARCHAR)",
        "question": "Which Record has a Game larger than 15, and Points smaller than 31, and a November of 7?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_21 WHERE venue = \"antwerp, belgium\" AND result = \"2nd\"",
        "context": "CREATE TABLE table_name_21 (year VARCHAR, venue VARCHAR, result VARCHAR)",
        "question": "How many years did the team place 2nd in Antwerp, Belgium?"
    },
    {
        "answer": "SELECT competition FROM table_name_66 WHERE final_position = \"winners\" AND final_round = \"finals\"",
        "context": "CREATE TABLE table_name_66 (competition VARCHAR, final_position VARCHAR, final_round VARCHAR)",
        "question": "What competition had a final round in the finals and the final position winners?"
    },
    {
        "answer": "SELECT first_match FROM table_name_35 WHERE final_position = \"winners\" AND final_round = \"finals\"",
        "context": "CREATE TABLE table_name_35 (first_match VARCHAR, final_position VARCHAR, final_round VARCHAR)",
        "question": "On what date did the first match occur for the competition that ended with a final position of winners and the final round in the finals?"
    },
    {
        "answer": "SELECT player FROM table_name_44 WHERE date = \"31 jan. 2008\" AND transfer_fee = \"\u00a33.87m\"",
        "context": "CREATE TABLE table_name_44 (player VARCHAR, date VARCHAR, transfer_fee VARCHAR)",
        "question": "Which Player had a Date of 31 jan. 2008, and a Transfer fee of \u00a33.87m?"
    },
    {
        "answer": "SELECT record FROM table_name_53 WHERE date = \"april 8\"",
        "context": "CREATE TABLE table_name_53 (record VARCHAR, date VARCHAR)",
        "question": "What was the record on April 8?"
    },
    {
        "answer": "SELECT call_sign FROM table_name_77 WHERE erp_w > 10 AND frequency_mhz = 103.7",
        "context": "CREATE TABLE table_name_77 (call_sign VARCHAR, erp_w VARCHAR, frequency_mhz VARCHAR)",
        "question": "When the frequency is 103.7 MHz and the ERP W is more than 10, what is the call sign?"
    },
    {
        "answer": "SELECT studio_host FROM table_name_10 WHERE year = \"2006-07\"",
        "context": "CREATE TABLE table_name_10 (studio_host VARCHAR, year VARCHAR)",
        "question": "Year of 2006-07 had what studio host?"
    },
    {
        "answer": "SELECT studio_host FROM table_name_1 WHERE play_by_play = \"sean grande\" AND flagship_station = \"wrko\" AND year = \"2005-06\"",
        "context": "CREATE TABLE table_name_1 (studio_host VARCHAR, year VARCHAR, play_by_play VARCHAR, flagship_station VARCHAR)",
        "question": "Play-by-play of sean grande, and a Flagship Station of wrko, and a Year of 2005-06 had what studio host?"
    },
    {
        "answer": "SELECT play_by_play FROM table_name_38 WHERE studio_host = \"john ryder\" AND year = \"2007-08\"",
        "context": "CREATE TABLE table_name_38 (play_by_play VARCHAR, studio_host VARCHAR, year VARCHAR)",
        "question": "Studio host of john ryder, and a Year of 2007-08 had what play by play?"
    },
    {
        "answer": "SELECT player FROM table_name_12 WHERE score = 73 - 69 - 74 - 71 = 287",
        "context": "CREATE TABLE table_name_12 (player VARCHAR, score VARCHAR)",
        "question": "Name the player with score of 73-69-74-71=287"
    },
    {
        "answer": "SELECT hometown FROM table_name_79 WHERE games_started = \"4\"",
        "context": "CREATE TABLE table_name_79 (hometown VARCHAR, games_started VARCHAR)",
        "question": "Games started of 4 is in what hometown?"
    },
    {
        "answer": "SELECT date FROM table_name_98 WHERE opponent = \"chris evert\" AND surface = \"carpet\"",
        "context": "CREATE TABLE table_name_98 (date VARCHAR, opponent VARCHAR, surface VARCHAR)",
        "question": "Name the date for chris evert opponent and carpet surface"
    },
    {
        "answer": "SELECT MAX(weight) FROM table_name_33 WHERE position = \"fullback\"",
        "context": "CREATE TABLE table_name_33 (weight INTEGER, position VARCHAR)",
        "question": "Position of fullback has what highest weight?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_51 WHERE entrant = \"arrows racing team\" AND year > 1982",
        "context": "CREATE TABLE table_name_51 (points INTEGER, entrant VARCHAR, year VARCHAR)",
        "question": "What was arrows racing team's highest points after 1982?"
    },
    {
        "answer": "SELECT party FROM table_name_25 WHERE first_elected = \"1966\" AND state = \"qld\" AND member = \"donald milner cameron\"",
        "context": "CREATE TABLE table_name_25 (party VARCHAR, member VARCHAR, first_elected VARCHAR, state VARCHAR)",
        "question": "Which party has a first elected of 1966, qld as the state, and donald milner cameron as the member?"
    },
    {
        "answer": "SELECT member FROM table_name_70 WHERE first_elected = \"1972\" AND party = \"alp\" AND state = \"vic\" AND electorate = \"gellibrand\"",
        "context": "CREATE TABLE table_name_70 (member VARCHAR, electorate VARCHAR, state VARCHAR, first_elected VARCHAR, party VARCHAR)",
        "question": "Which memeber has a first elected of 1972, alp as the party, vic as the state, and an electorate of gellibrand?"
    },
    {
        "answer": "SELECT date FROM table_name_15 WHERE motogp_winner = \"casey stoner\" AND grand_prix = \"valencian grand prix\"",
        "context": "CREATE TABLE table_name_15 (date VARCHAR, motogp_winner VARCHAR, grand_prix VARCHAR)",
        "question": "Name the date for motogp winner of casey stoner and grand prix of valencian grand prix"
    },
    {
        "answer": "SELECT grand_prix FROM table_name_55 WHERE motogp_winner = \"casey stoner\" AND circuit = \"losail\"",
        "context": "CREATE TABLE table_name_55 (grand_prix VARCHAR, motogp_winner VARCHAR, circuit VARCHAR)",
        "question": "Name the grand prix for casey stoner and circuit of losail"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_27 WHERE bronze = 2 AND gold > 0 AND nation = \"ynys m\u00f4n/anglesey\" AND total > 8",
        "context": "CREATE TABLE table_name_27 (rank INTEGER, total VARCHAR, nation VARCHAR, bronze VARCHAR, gold VARCHAR)",
        "question": "Name the least rank with bronze of 2, gold more than 0 and nation of ynys m\u00f4n/anglesey with total more than 8"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_57 WHERE silver = 6 AND bronze > 5 AND gold < 4",
        "context": "CREATE TABLE table_name_57 (total VARCHAR, gold VARCHAR, silver VARCHAR, bronze VARCHAR)",
        "question": "Name the total number of total with silver of 6, bronze more than 5 and gold less than 4"
    },
    {
        "answer": "SELECT term_start FROM table_name_47 WHERE title = \"minister for agriculture, fisheries and forestry\" AND order = \"25\"",
        "context": "CREATE TABLE table_name_47 (term_start VARCHAR, title VARCHAR, order VARCHAR)",
        "question": "What was the starting date for the Minister for agriculture, fisheries and forestry that is in order number 25??"
    },
    {
        "answer": "SELECT AVG(game) FROM table_name_17 WHERE opponent = \"@ florida panthers\" AND record = \"0-1-2\" AND october > 8",
        "context": "CREATE TABLE table_name_17 (game INTEGER, october VARCHAR, opponent VARCHAR, record VARCHAR)",
        "question": "What average game has @ florida panthers as the opponent, 0-1-2 as the record, with an october greater than 8?"
    },
    {
        "answer": "SELECT MAX(mccain_number) FROM table_name_47 WHERE others_percentage = \"1.6%\" AND mccain_percentage = \"40.5%\" AND obama_number < 256 OFFSET 299",
        "context": "CREATE TABLE table_name_47 (mccain_number INTEGER, obama_number VARCHAR, others_percentage VARCHAR, mccain_percentage VARCHAR)",
        "question": "What is the highest number of votes for McCain in a county that voted 1.6% for other, 40.5% for McCain, and fewer than 256,299 votes for Obama?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_44 WHERE date = \"31 january 1987\"",
        "context": "CREATE TABLE table_name_44 (attendance VARCHAR, date VARCHAR)",
        "question": "What was the Attendance on 31 January 1987?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_62 WHERE score = \"w 89\u201386 (ot)\"",
        "context": "CREATE TABLE table_name_62 (location_attendance VARCHAR, score VARCHAR)",
        "question": "What was the location and attendance with a score of w 89\u201386 (ot)?"
    },
    {
        "answer": "SELECT name FROM table_name_13 WHERE season = \"2010-2011\" AND acquisition_via = \"free agency\" AND number = \"14\"",
        "context": "CREATE TABLE table_name_13 (name VARCHAR, number VARCHAR, season VARCHAR, acquisition_via VARCHAR)",
        "question": "What is the name of the player for the 2010-2011 season, from a Free Agency and is Number 14?"
    },
    {
        "answer": "SELECT COUNT(size__steps_) FROM table_name_44 WHERE size__cents_ = 58.54 AND just_ratio = \"28:27\" AND just__cents_ > 62.96",
        "context": "CREATE TABLE table_name_44 (size__steps_ VARCHAR, just__cents_ VARCHAR, size__cents_ VARCHAR, just_ratio VARCHAR)",
        "question": "size (steps) that has a size (cents) of 58.54, and a just ratio of 28:27, and a just (cents) larger than 62.96 is what total number?"
    },
    {
        "answer": "SELECT MAX(games_played) FROM table_name_64 WHERE draws = 3 AND loses = 5 AND points < 39",
        "context": "CREATE TABLE table_name_64 (games_played INTEGER, points VARCHAR, draws VARCHAR, loses VARCHAR)",
        "question": "What is the highest number of games played for teams with 3 draws, 5 losses, and under 39 points?"
    },
    {
        "answer": "SELECT picture_coding_types FROM table_name_57 WHERE chroma_format = \"4:2:2 or 4:2:0\" AND name = \"4:2:2 profile\"",
        "context": "CREATE TABLE table_name_57 (picture_coding_types VARCHAR, chroma_format VARCHAR, name VARCHAR)",
        "question": "What Picture Coding Types have Chroma Format of 4:2:2 or 4:2:0 and the Name of 4:2:2 profile?"
    },
    {
        "answer": "SELECT SUM(league_cup) FROM table_name_36 WHERE championship < 10 AND total < 3",
        "context": "CREATE TABLE table_name_36 (league_cup INTEGER, championship VARCHAR, total VARCHAR)",
        "question": "How many league cups associated with under 10 championships and a total of under 3?"
    },
    {
        "answer": "SELECT entered_the_house FROM table_name_82 WHERE evicted = \"day 29\" AND name = \"sla\u0111ana peji\u0107\"",
        "context": "CREATE TABLE table_name_82 (entered_the_house VARCHAR, evicted VARCHAR, name VARCHAR)",
        "question": "When did sla\u0111ana peji\u0107, who was evicted on day 29, enter the house?"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_29 WHERE grid > 8 AND points < 11 AND driver = \"will power\"",
        "context": "CREATE TABLE table_name_29 (laps VARCHAR, driver VARCHAR, grid VARCHAR, points VARCHAR)",
        "question": "How many laps are associated with a grid greater than 8, under 11 points, and will power?"
    },
    {
        "answer": "SELECT home FROM table_name_93 WHERE competition = \"uefa cup\" AND season = \"2000-2001\" AND round = \"second round\"",
        "context": "CREATE TABLE table_name_93 (home VARCHAR, round VARCHAR, competition VARCHAR, season VARCHAR)",
        "question": "What is the home team of the UEFA cup in the 2000-2001 season with a second round?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_68 WHERE rank = \"7\" AND bronze < 1",
        "context": "CREATE TABLE table_name_68 (total VARCHAR, rank VARCHAR, bronze VARCHAR)",
        "question": "Name the total number of total for rank of 7 and bronze less than 1"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_67 WHERE total > 4 AND rank < 4 AND nation = \"germany\" AND silver < 5",
        "context": "CREATE TABLE table_name_67 (bronze VARCHAR, silver VARCHAR, nation VARCHAR, total VARCHAR, rank VARCHAR)",
        "question": "How many bronze numbers had a total of more than 4 when the rank is less than four, germany is involved, and there's less than 5 silver?"
    },
    {
        "answer": "SELECT place FROM table_name_67 WHERE player = \"phil mickelson\"",
        "context": "CREATE TABLE table_name_67 (place VARCHAR, player VARCHAR)",
        "question": "Which Place has Phil Mickelson as the Player?"
    },
    {
        "answer": "SELECT AVG(height__cm_) FROM table_name_66 WHERE weight__kg_ < 91 AND position = \"d\" AND birthdate = \"july 4, 1975\"",
        "context": "CREATE TABLE table_name_66 (height__cm_ INTEGER, birthdate VARCHAR, weight__kg_ VARCHAR, position VARCHAR)",
        "question": "What is the average Height when the weight is less than 91 and the position is d, and a Birthdate of july 4, 1975?"
    },
    {
        "answer": "SELECT birthdate FROM table_name_23 WHERE height__cm_ < 191 AND weight__kg_ = 84",
        "context": "CREATE TABLE table_name_23 (birthdate VARCHAR, height__cm_ VARCHAR, weight__kg_ VARCHAR)",
        "question": "What is the Birthdate for the person with a height less than 191, and weight of 84 kg?"
    },
    {
        "answer": "SELECT gender FROM table_name_90 WHERE decile = 8 AND area = \"taradale\" AND years = \"1\u201313\"",
        "context": "CREATE TABLE table_name_90 (gender VARCHAR, years VARCHAR, decile VARCHAR, area VARCHAR)",
        "question": "Which gender has a Decile of 8, an Area of taradale, and Years of 1\u201313?"
    },
    {
        "answer": "SELECT score FROM table_name_58 WHERE opponent = \"boston celtics\"",
        "context": "CREATE TABLE table_name_58 (score VARCHAR, opponent VARCHAR)",
        "question": "What is the Score of the game against the boston celtics?"
    },
    {
        "answer": "SELECT vineyard_surface__2010_ FROM table_name_94 WHERE village = \"gevrey-chambertin\" AND grand_cru = \"latrici\u00e8res-chambertin\"",
        "context": "CREATE TABLE table_name_94 (vineyard_surface__2010_ VARCHAR, village VARCHAR, grand_cru VARCHAR)",
        "question": "What is the Vineyeard surface (2010) with a Village of Gevrey-Chambertin, and Grand Cru of Latrici\u00e8res-Chambertin?"
    },
    {
        "answer": "SELECT grand_cru FROM table_name_33 WHERE wine_style = \"red wine\" AND village = \"gevrey-chambertin\"",
        "context": "CREATE TABLE table_name_33 (grand_cru VARCHAR, wine_style VARCHAR, village VARCHAR)",
        "question": "What is the Grand Cru with a Wine Style of Red Wine and Village of Gevrey-Chambertin?"
    },
    {
        "answer": "SELECT score FROM table_name_20 WHERE opponent = \"mariners\" AND date = \"may 10\"",
        "context": "CREATE TABLE table_name_20 (score VARCHAR, opponent VARCHAR, date VARCHAR)",
        "question": "Name the score for the mariners opponent on may 10"
    },
    {
        "answer": "SELECT choreographer_s_ FROM table_name_36 WHERE chosen_by = \"mary murphy\" AND style = \"contemporary\"",
        "context": "CREATE TABLE table_name_36 (choreographer_s_ VARCHAR, chosen_by VARCHAR, style VARCHAR)",
        "question": "What is Choreographer(s), when Chosen is Mary Murphy, and when Style is Contemporary?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_5 WHERE silver < 1 AND total > 1 AND bronze < 1",
        "context": "CREATE TABLE table_name_5 (rank INTEGER, bronze VARCHAR, silver VARCHAR, total VARCHAR)",
        "question": "Name the least rank when silver is less than 1 and bronze is less than 1 with total more than 1"
    },
    {
        "answer": "SELECT MIN(top_10) FROM table_name_44 WHERE top_25 = 6 AND tournament = \"u.s. open\" AND cuts_made > 9",
        "context": "CREATE TABLE table_name_44 (top_10 INTEGER, cuts_made VARCHAR, top_25 VARCHAR, tournament VARCHAR)",
        "question": "What is the lowest Top-10 when the Top-25 is 6, and a Tournament of u.s. open, and a Cut made larger than 9?"
    },
    {
        "answer": "SELECT date FROM table_name_5 WHERE visitor = \"chicago black hawks\" AND record = \"2\u20132\"",
        "context": "CREATE TABLE table_name_5 (date VARCHAR, visitor VARCHAR, record VARCHAR)",
        "question": "What is the Date that chicago black hawks has a Record of 2\u20132?"
    },
    {
        "answer": "SELECT type_of_record FROM table_21436373_8 WHERE result_games = \"Montreal 20 @ Ottawa 10\"",
        "context": "CREATE TABLE table_21436373_8 (type_of_record VARCHAR, result_games VARCHAR)",
        "question": "What record was set when the result/game was montreal 20 @ ottawa 10?"
    },
    {
        "answer": "SELECT position FROM table_name_11 WHERE college_junior_club_team__league_ = \"estevan bruins (wchl)\" AND round = 3",
        "context": "CREATE TABLE table_name_11 (position VARCHAR, college_junior_club_team__league_ VARCHAR, round VARCHAR)",
        "question": "Which Position has a College/Junior/Club Team (League) of estevan bruins (wchl), and a Round of 3?"
    },
    {
        "answer": "SELECT int_yds FROM table_name_68 WHERE team = \"new orleans saints\" AND sacks > 0 AND solo = 71",
        "context": "CREATE TABLE table_name_68 (int_yds VARCHAR, solo VARCHAR, team VARCHAR, sacks VARCHAR)",
        "question": "What is the value for INT YDS, when the Team is New Orleans Saints, and when the value for Sacks is greater than 0, and when the vale for Solo is 71?"
    },
    {
        "answer": "SELECT SUM(episode) FROM table_name_37 WHERE performer_4 = \"chip esten\" AND performer_2 = \"christopher smith\"",
        "context": "CREATE TABLE table_name_37 (episode INTEGER, performer_4 VARCHAR, performer_2 VARCHAR)",
        "question": "What is the sum of the episode numbers where chip esten is the 4th performer and christopher smith was the 2nd performer?"
    },
    {
        "answer": "SELECT date FROM table_name_55 WHERE surface = \"clay\" AND opponent = \"andrea hlav\u00e1\u010dkov\u00e1\"",
        "context": "CREATE TABLE table_name_55 (date VARCHAR, surface VARCHAR, opponent VARCHAR)",
        "question": "What date was the match on a clay surface against Andrea Hlav\u00e1\u010dkov\u00e1?"
    },
    {
        "answer": "SELECT opponent FROM table_name_54 WHERE tournament = \"herceg novi\"",
        "context": "CREATE TABLE table_name_54 (opponent VARCHAR, tournament VARCHAR)",
        "question": "What is the name of the opponent at the Herceg Novi tournament?"
    },
    {
        "answer": "SELECT played FROM table_name_4 WHERE lost > 2 AND team = \"am\u00e9rica\"",
        "context": "CREATE TABLE table_name_4 (played VARCHAR, lost VARCHAR, team VARCHAR)",
        "question": "Which Played has a Lost larger than 2, and a Team of am\u00e9rica?"
    },
    {
        "answer": "SELECT COUNT(draws) FROM table_name_64 WHERE wins < 17 AND against < 1158",
        "context": "CREATE TABLE table_name_64 (draws VARCHAR, wins VARCHAR, against VARCHAR)",
        "question": "Which Draws has a Wins smaller than 17, and an Against smaller than 1158?"
    },
    {
        "answer": "SELECT winner FROM table_name_73 WHERE tournament = \"the tour championship\"",
        "context": "CREATE TABLE table_name_73 (winner VARCHAR, tournament VARCHAR)",
        "question": "What is the name of the winner of the tour championship tournament?"
    },
    {
        "answer": "SELECT site FROM table_name_38 WHERE sport = \"w swimming\"",
        "context": "CREATE TABLE table_name_38 (site VARCHAR, sport VARCHAR)",
        "question": "Which Site has a Sport of w swimming?"
    },
    {
        "answer": "SELECT team FROM table_name_57 WHERE position = \"guard / forward\" AND player = \"steinar kaldal\"",
        "context": "CREATE TABLE table_name_57 (team VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "What team has Steinar Kaldal, a guard / forward?"
    },
    {
        "answer": "SELECT format FROM table_name_84 WHERE region = \"united states\" AND date = \"july 23, 2002\"",
        "context": "CREATE TABLE table_name_84 (format VARCHAR, region VARCHAR, date VARCHAR)",
        "question": "What is the format for the United States dated July 23, 2002?"
    },
    {
        "answer": "SELECT status FROM table_name_75 WHERE authors = \"varricchio\"",
        "context": "CREATE TABLE table_name_75 (status VARCHAR, authors VARCHAR)",
        "question": "What is varricchio's status?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_13 WHERE tied > 8 AND games < 82 AND coach = \"bryan mclay \u2020 morris lallo \u2021 gerry moore \u2021\" AND goals_against > 322",
        "context": "CREATE TABLE table_name_13 (points INTEGER, goals_against VARCHAR, coach VARCHAR, tied VARCHAR, games VARCHAR)",
        "question": "What is the points average when the tied is greater than 8, less than 82 games and the coach of Bryan Mclay \u2020 Morris Lallo \u2021 Gerry Moore \u2021, and greater than 322 goals?"
    },
    {
        "answer": "SELECT location FROM table_name_23 WHERE loser = \"indianapolis colts\" AND result = \"24-14\"",
        "context": "CREATE TABLE table_name_23 (location VARCHAR, loser VARCHAR, result VARCHAR)",
        "question": "Where was the game that the Indianapolis Colts lost 24-14?"
    },
    {
        "answer": "SELECT TOP('4 hoops 2 clubs') FROM table_name_14 WHERE nation = \"belarus\" AND total < 38.25",
        "context": "",
        "question": "What is the highest 4 hoops, 2 clubs of Belarus, which has a total less than 38.25?"
    },
    {
        "answer": "SELECT winner FROM table_name_14 WHERE loser = \"new england patriots\" AND result = \"40-21\"",
        "context": "CREATE TABLE table_name_14 (winner VARCHAR, loser VARCHAR, result VARCHAR)",
        "question": "Which team won against the New England Patriots 40-21?"
    },
    {
        "answer": "SELECT AVG(extras) FROM table_name_38 WHERE name = \"muttiah muralitharan\" AND runs_conceded < 353",
        "context": "CREATE TABLE table_name_38 (extras INTEGER, name VARCHAR, runs_conceded VARCHAR)",
        "question": "What is the average Extras for Muttiah Muralitharan, with less than 353 Runs Conceded?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_43 WHERE pick__number > 20 AND college = \"virginia\" AND overall > 127",
        "context": "CREATE TABLE table_name_43 (round INTEGER, overall VARCHAR, pick__number VARCHAR, college VARCHAR)",
        "question": "Which average Round has a Pick # larger than 20, and a College of virginia, and an Overall larger than 127?"
    },
    {
        "answer": "SELECT \"built\" FROM table_name_41 WHERE status = \"built\" AND height = \"42 m.\"",
        "context": "CREATE TABLE table_name_41 (status VARCHAR, height VARCHAR)",
        "question": "What is the year built of the home with a built status and a 42 m. height?"
    },
    {
        "answer": "SELECT winner FROM table_name_40 WHERE score = \"274 (\u201314)\" AND location = \"tennessee\"",
        "context": "CREATE TABLE table_name_40 (winner VARCHAR, score VARCHAR, location VARCHAR)",
        "question": "What is the name of the winner when the Score was 274 (\u201314) in tennessee?"
    },
    {
        "answer": "SELECT MIN(total_foreign_born__millions_) FROM table_name_38 WHERE born_in_a_non_eu_state__millions_ = 6.415",
        "context": "CREATE TABLE table_name_38 (total_foreign_born__millions_ INTEGER, born_in_a_non_eu_state__millions_ VARCHAR)",
        "question": "What was the lowest number of Total Foreign-born (millions) people, when the number of people Born in a non EU state (millions) was 6.415?"
    },
    {
        "answer": "SELECT AVG(born_in_other_eu_state__millions_) FROM table_name_88 WHERE born_in_a_non_eu_state__millions_ = 31.368 AND total_population__millions_ > 501.098",
        "context": "CREATE TABLE table_name_88 (born_in_other_eu_state__millions_ INTEGER, born_in_a_non_eu_state__millions_ VARCHAR, total_population__millions_ VARCHAR)",
        "question": "What was the average number of people born in other EU states in millions, when the number of people born in a non EU state in millions was 31.368, and when the total population in millions was higher than 501.098?"
    },
    {
        "answer": "SELECT nationality FROM table_name_51 WHERE player = \"rudy poeschek\"",
        "context": "CREATE TABLE table_name_51 (nationality VARCHAR, player VARCHAR)",
        "question": "Which Nationality has a Player of rudy poeschek?"
    },
    {
        "answer": "SELECT position FROM table_name_81 WHERE nationality = \"canada\" AND player = \"pat janostin\"",
        "context": "CREATE TABLE table_name_81 (position VARCHAR, nationality VARCHAR, player VARCHAR)",
        "question": "Which Position has a Nationality of canada, and a Player of pat janostin?"
    },
    {
        "answer": "SELECT AVG(week) FROM table_name_65 WHERE opponent = \"baltimore colts\" AND attendance < 55 OFFSET 137",
        "context": "CREATE TABLE table_name_65 (week INTEGER, opponent VARCHAR, attendance VARCHAR)",
        "question": "Which Week has an Opponent of baltimore colts, and an Attendance smaller than 55,137?"
    },
    {
        "answer": "SELECT partner FROM table_name_45 WHERE surface = \"clay\" AND opponents = \"guillermo garc\u00eda-l\u00f3pez albert portas\"",
        "context": "CREATE TABLE table_name_45 (partner VARCHAR, surface VARCHAR, opponents VARCHAR)",
        "question": "What was the partner of the team that faced the guillermo garc\u00eda-l\u00f3pez albert portas on clay?"
    },
    {
        "answer": "SELECT year_startup FROM table_name_51 WHERE project_name = \"taq taq ph 2\"",
        "context": "CREATE TABLE table_name_51 (year_startup VARCHAR, project_name VARCHAR)",
        "question": "What year was the startup for the Project Named of taq taq ph 2?"
    },
    {
        "answer": "SELECT operator FROM table_name_89 WHERE peak = \"90\" AND year_startup = \"2010\" AND project_name = \"aosp expansion 1 (jackpine ph 1a)\"",
        "context": "CREATE TABLE table_name_89 (operator VARCHAR, project_name VARCHAR, peak VARCHAR, year_startup VARCHAR)",
        "question": "What is the operator for peak 90, in startup year 2010 for the project named Aosp expansion 1 (jackpine ph 1a)?"
    },
    {
        "answer": "SELECT partner FROM table_name_24 WHERE opponents = \"wayne arthurs sandon stolle\"",
        "context": "CREATE TABLE table_name_24 (partner VARCHAR, opponents VARCHAR)",
        "question": "Which Partner has an Opponents of wayne arthurs sandon stolle?"
    },
    {
        "answer": "SELECT occupation FROM table_name_71 WHERE hometown = \"santa monica, california\"",
        "context": "CREATE TABLE table_name_71 (occupation VARCHAR, hometown VARCHAR)",
        "question": "What is listed under occupation for someone from Santa Monica, California?"
    },
    {
        "answer": "SELECT years FROM table_name_41 WHERE decile < 6 AND area = \"te kuiti\" AND authority = \"state integrated\"",
        "context": "CREATE TABLE table_name_41 (years VARCHAR, authority VARCHAR, decile VARCHAR, area VARCHAR)",
        "question": "Which years have a Decile smaller than 6, an Area of te kuiti, and an Authority of state integrated?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_25 WHERE ground = \"ghantoot racing and polo club\"",
        "context": "CREATE TABLE table_name_25 (home_team VARCHAR, ground VARCHAR)",
        "question": "What is the home team score of the Ghantoot Racing and Polo Club Ground?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_name_18 WHERE original_title = \"monsieur hawarden\"",
        "context": "CREATE TABLE table_name_18 (film_title_used_in_nomination VARCHAR, original_title VARCHAR)",
        "question": "What is the nomination title used for the original film, Monsieur Hawarden?"
    },
    {
        "answer": "SELECT sampling_memory_upgrade_able FROM table_name_66 WHERE sampling_rate = \"16-bit 44.1khz\"",
        "context": "CREATE TABLE table_name_66 (sampling_memory_upgrade_able VARCHAR, sampling_rate VARCHAR)",
        "question": "Which Sampling Memory/Upgrade-able has a rate of 16-bit 44.1khz?"
    },
    {
        "answer": "SELECT AVG(agricultural_panel) FROM table_name_53 WHERE labour_panel < 1 AND total < 21 AND national_university_of_ireland > 0",
        "context": "CREATE TABLE table_name_53 (agricultural_panel INTEGER, national_university_of_ireland VARCHAR, labour_panel VARCHAR, total VARCHAR)",
        "question": "What is the average agricultural panel value with a Labour panel less than 1, a total value less than 21, and a National University of Ireland value greater than 0?"
    },
    {
        "answer": "SELECT MAX(labour_panel) FROM table_name_43 WHERE cultural_and_educational_panel > 1 AND university_of_dublin > 0 AND total < 60",
        "context": "CREATE TABLE table_name_43 (labour_panel INTEGER, total VARCHAR, cultural_and_educational_panel VARCHAR, university_of_dublin VARCHAR)",
        "question": "What is the highest labour panel value with a cultural and educational panel greater than 1, a University of Dublin value greater than 0, and a total value less than 60?"
    },
    {
        "answer": "SELECT locomotive FROM table_name_59 WHERE operator = \"southern shorthaul railroad\" AND entered_service = \"november 1984\"",
        "context": "CREATE TABLE table_name_59 (locomotive VARCHAR, operator VARCHAR, entered_service VARCHAR)",
        "question": "Which Locomotive Entered Service in November 1984 and has an Operator of Southern Shorthaul Railroad?"
    },
    {
        "answer": "SELECT serial_no FROM table_name_90 WHERE entered_service = \"november 1984\" AND owner = \"chicago freight car leasing australia\"",
        "context": "CREATE TABLE table_name_90 (serial_no VARCHAR, entered_service VARCHAR, owner VARCHAR)",
        "question": "What is the Serial number of the Locomotive that Entered Service in November 1984 and has an Owner of Chicago Freight Car Leasing Australia?"
    },
    {
        "answer": "SELECT serial_no FROM table_name_26 WHERE entered_service = \"october 1989\"",
        "context": "CREATE TABLE table_name_26 (serial_no VARCHAR, entered_service VARCHAR)",
        "question": "What is the Serial Number of the Locomotive that Entered Service October 1989?"
    },
    {
        "answer": "SELECT 2011 FROM table_name_64 WHERE 2008 = \"0.3\" AND member_state = \"european union\"",
        "context": "CREATE TABLE table_name_64 (member_state VARCHAR)",
        "question": "What is the 2011 value with a 2008 value of 0.3 and is a member state of the European Union?"
    },
    {
        "answer": "SELECT COUNT(position) FROM table_name_99 WHERE points > 24 AND w_l_d = \"8-5-3\"",
        "context": "CREATE TABLE table_name_99 (position VARCHAR, points VARCHAR, w_l_d VARCHAR)",
        "question": "What is the position number of the club with more than 24 points and a w-l-d of 8-5-3?"
    },
    {
        "answer": "SELECT iata FROM table_name_5 WHERE airport = \"hamburg airport\"",
        "context": "CREATE TABLE table_name_5 (iata VARCHAR, airport VARCHAR)",
        "question": "What kind of  IATA has an Airport of hamburg airport?"
    },
    {
        "answer": "SELECT lost FROM table_name_65 WHERE losing_bp = \"5\" AND try_bp = \"0\"",
        "context": "CREATE TABLE table_name_65 (lost VARCHAR, losing_bp VARCHAR, try_bp VARCHAR)",
        "question": "Can you tell me the Lost that has Losing BP of 5, and the Try BP of 0?"
    },
    {
        "answer": "SELECT MIN(overall) FROM table_name_30 WHERE position = \"cornerback\" AND pick__number < 16",
        "context": "CREATE TABLE table_name_30 (overall INTEGER, position VARCHAR, pick__number VARCHAR)",
        "question": "Which cornerback has the lowest overall and a pick number smaller than 16?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_97 WHERE position = \"cornerback\"",
        "context": "CREATE TABLE table_name_97 (round INTEGER, position VARCHAR)",
        "question": "Which cornerback has the highest round?"
    },
    {
        "answer": "SELECT location FROM table_name_42 WHERE aircraft = \"f-27-600rf\" AND tail_number = \"6o-saz\"",
        "context": "CREATE TABLE table_name_42 (location VARCHAR, aircraft VARCHAR, tail_number VARCHAR)",
        "question": "What was the location that had an accident by the F-27-600RF aircraft with tail number 6O-SAZ?"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_48 WHERE opposition = \"tipperary\" AND county = \"limerick\" AND total > 12",
        "context": "CREATE TABLE table_name_48 (rank INTEGER, total VARCHAR, opposition VARCHAR, county VARCHAR)",
        "question": "In Limerick County, what is the Rank with a Total larger than 12 and Tipperary as the Opposition?"
    },
    {
        "answer": "SELECT SUM(earnings___) AS $__ FROM table_name_70 WHERE wins > 3",
        "context": "CREATE TABLE table_name_70 (earnings___ INTEGER, wins INTEGER)",
        "question": "How many earnings have Wins larger than 3?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_55 WHERE place = \"8th\" AND draw > 8",
        "context": "CREATE TABLE table_name_55 (points INTEGER, place VARCHAR, draw VARCHAR)",
        "question": "What is the average of points for 8th place with draw more than 8?"
    },
    {
        "answer": "SELECT SUM(gold) FROM table_name_28 WHERE silver > 17 AND bronze > 24",
        "context": "CREATE TABLE table_name_28 (gold INTEGER, silver VARCHAR, bronze VARCHAR)",
        "question": "What is the sum for gold when there is more than 17 silver and more than 24 bronze?"
    },
    {
        "answer": "SELECT label FROM table_name_37 WHERE date = \"october 21, 1981\"",
        "context": "CREATE TABLE table_name_37 (label VARCHAR, date VARCHAR)",
        "question": "What is the label for October 21, 1981?"
    },
    {
        "answer": "SELECT format FROM table_name_94 WHERE date = \"july 27, 1994\"",
        "context": "CREATE TABLE table_name_94 (format VARCHAR, date VARCHAR)",
        "question": "What is the format for July 27, 1994?"
    },
    {
        "answer": "SELECT nationality FROM table_name_99 WHERE position = \"left wing\"",
        "context": "CREATE TABLE table_name_99 (nationality VARCHAR, position VARCHAR)",
        "question": "Which Nationality has a Position of left wing?"
    },
    {
        "answer": "SELECT champion FROM table_name_55 WHERE tournament_location = \"sentosa golf club\"",
        "context": "CREATE TABLE table_name_55 (champion VARCHAR, tournament_location VARCHAR)",
        "question": "Which champion has sentosa golf club as the tournament location?"
    },
    {
        "answer": "SELECT MAX(pick) FROM table_name_42 WHERE position = \"back\" AND round = 28",
        "context": "CREATE TABLE table_name_42 (pick INTEGER, position VARCHAR, round VARCHAR)",
        "question": "What is the highest pick of the back player from round 28?"
    },
    {
        "answer": "SELECT tournament FROM table_name_78 WHERE surface = \"hard\" AND opponent = \"jacob adaktusson\"",
        "context": "CREATE TABLE table_name_78 (tournament VARCHAR, surface VARCHAR, opponent VARCHAR)",
        "question": "what tournament was on a hard surface and saw jacob adaktusson as the opponent?"
    },
    {
        "answer": "SELECT round FROM table_name_94 WHERE event = \"pain and glory 2006\"",
        "context": "CREATE TABLE table_name_94 (round VARCHAR, event VARCHAR)",
        "question": "Which round has pain and glory 2006 as the event?"
    },
    {
        "answer": "SELECT record FROM table_name_49 WHERE time = \"5:00\" AND opponent = \"jess liaudin\" AND location = \"england\"",
        "context": "CREATE TABLE table_name_49 (record VARCHAR, location VARCHAR, time VARCHAR, opponent VARCHAR)",
        "question": "Which record has 5:00 as the time, jess liaudin as the opponent for the location of england?"
    },
    {
        "answer": "SELECT COUNT(enrollment) FROM table_name_34 WHERE founded = 1891 AND team_nickname = \"coyotes\"",
        "context": "CREATE TABLE table_name_34 (enrollment VARCHAR, founded VARCHAR, team_nickname VARCHAR)",
        "question": "What is the Enrollment for the Coyotes Founded in 1891?"
    },
    {
        "answer": "SELECT attendance FROM table_name_29 WHERE game_site = \"hoosier dome\" AND result = \"l 7\u201331\"",
        "context": "CREATE TABLE table_name_29 (attendance VARCHAR, game_site VARCHAR, result VARCHAR)",
        "question": "Game Site of hoosier dome, and a Result of l 7\u201331 involved what attendance?"
    },
    {
        "answer": "SELECT COUNT(weeks_on_chart__uk_) FROM table_name_30 WHERE entered_chart__uk_ = \"14 september 2002\"",
        "context": "CREATE TABLE table_name_30 (weeks_on_chart__uk_ VARCHAR, entered_chart__uk_ VARCHAR)",
        "question": "How many weeks did the single that entered the charts 14 september 2002 stay on the charts ?"
    },
    {
        "answer": "SELECT name FROM table_name_79 WHERE built_by_hm_dockyard = \"pembroke\" AND laid_down = \"may 1825\"",
        "context": "CREATE TABLE table_name_79 (name VARCHAR, built_by_hm_dockyard VARCHAR, laid_down VARCHAR)",
        "question": "What name has pembroke as the built by hm dockyard, and may 1825 as the laid down?"
    },
    {
        "answer": "SELECT name FROM table_name_54 WHERE town_city = \"anchorage\" AND type = \"multiple\"",
        "context": "CREATE TABLE table_name_54 (name VARCHAR, town_city VARCHAR, type VARCHAR)",
        "question": "What is the Name of the Multiple Type museum in Anchorage?"
    },
    {
        "answer": "SELECT tournament FROM table_name_57 WHERE date = \"9 jun 2002\"",
        "context": "CREATE TABLE table_name_57 (tournament VARCHAR, date VARCHAR)",
        "question": "Which tournament was held on 9 Jun 2002?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_93 WHERE margin_of_victory = \"4 strokes\" AND tournament = \"nec invitational\"",
        "context": "CREATE TABLE table_name_93 (winning_score VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "What is the winning score with a margin of victory of 4 strokes for the NEC Invitational tournament?"
    },
    {
        "answer": "SELECT SUM(games) FROM table_name_30 WHERE Pwin_percentage = \u2014 AND term_[c_] = \"1987\u20131988\" AND win_percentage < 0.506",
        "context": "CREATE TABLE table_name_30 (games INTEGER, win_percentage VARCHAR, Pwin_percentage VARCHAR, \u2014 VARCHAR, term_ VARCHAR, c_ VARCHAR)",
        "question": "What is the sum of the game with a PWin% of \u2014, Term [c] of 1987\u20131988, and Win% less than 0.506?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_34 WHERE album = \"live love in london\"",
        "context": "CREATE TABLE table_name_34 (year INTEGER, album VARCHAR)",
        "question": "What is the lowest Year with an Album that is live love in London?"
    },
    {
        "answer": "SELECT international_tourist_arrivals__2012_ FROM table_name_38 WHERE international_tourist_arrivals__2011_ = \"2.5 million\"",
        "context": "CREATE TABLE table_name_38 (international_tourist_arrivals__2012_ VARCHAR, international_tourist_arrivals__2011_ VARCHAR)",
        "question": "How many tourists visited the country that had 2.5 million tourists in 2011?"
    },
    {
        "answer": "SELECT opponent FROM table_name_76 WHERE game_site = \"forbes field\" AND week > 4",
        "context": "CREATE TABLE table_name_76 (opponent VARCHAR, game_site VARCHAR, week VARCHAR)",
        "question": "Which opponent was played at Forbes Field after week 4?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_24 WHERE conventional_plans = \"7%\"",
        "context": "CREATE TABLE table_name_24 (year INTEGER, conventional_plans VARCHAR)",
        "question": "How many years have a conventional plan of 7%?"
    },
    {
        "answer": "SELECT date FROM table_name_28 WHERE game_site = \"fenway park\"",
        "context": "CREATE TABLE table_name_28 (date VARCHAR, game_site VARCHAR)",
        "question": "What was the date of the game played at Fenway Park?"
    },
    {
        "answer": "SELECT conventional_plans FROM table_name_14 WHERE pos_plans = \"21%\"",
        "context": "CREATE TABLE table_name_14 (conventional_plans VARCHAR, pos_plans VARCHAR)",
        "question": "Which conventional plan has a POS plan of 21%?"
    },
    {
        "answer": "SELECT opponents FROM table_name_82 WHERE score = \"1\u20132\" AND team = \"arsenal\" AND progress = \"first round\"",
        "context": "CREATE TABLE table_name_82 (opponents VARCHAR, progress VARCHAR, score VARCHAR, team VARCHAR)",
        "question": "Which Opponents have a Score of 1\u20132, and a Team of arsenal, and Progress of first round?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_91 WHERE post = \"designer\"",
        "context": "CREATE TABLE table_name_91 (year INTEGER, post VARCHAR)",
        "question": "In what year has a Post of designer?"
    },
    {
        "answer": "SELECT visitor FROM table_name_97 WHERE home = \"boston bruins\" AND date = \"november 15\"",
        "context": "CREATE TABLE table_name_97 (visitor VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "Who is listed as the Visitor that has a Home of Boston Bruins and a Date of November 15?"
    },
    {
        "answer": "SELECT chart_peak FROM table_name_30 WHERE time = \"3:11\"",
        "context": "CREATE TABLE table_name_30 (chart_peak VARCHAR, time VARCHAR)",
        "question": "Which Chart peak has a Time of 3:11?"
    },
    {
        "answer": "SELECT country_name FROM table_name_63 WHERE numeric_code < 246 AND latin_3_letter_code = \"slv\"",
        "context": "CREATE TABLE table_name_63 (country_name VARCHAR, numeric_code VARCHAR, latin_3_letter_code VARCHAR)",
        "question": "What is the country's name with a numeric code less than 246 and a Latin 3-letter code of slv?"
    },
    {
        "answer": "SELECT MIN(place) FROM table_name_47 WHERE draw > 3 AND points = 8",
        "context": "CREATE TABLE table_name_47 (place INTEGER, draw VARCHAR, points VARCHAR)",
        "question": "Name the least place for draw more than 3 and points of 8"
    },
    {
        "answer": "SELECT method FROM table_name_57 WHERE time = \"5:00\" AND record = \"5-0\"",
        "context": "CREATE TABLE table_name_57 (method VARCHAR, time VARCHAR, record VARCHAR)",
        "question": "What is the method of resolution for the fight that had a time of 5:00 and a record of 5-0?"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_41 WHERE points < 274.4 AND name = \"roman koudelka\"",
        "context": "CREATE TABLE table_name_41 (rank INTEGER, points VARCHAR, name VARCHAR)",
        "question": "What is the average rank of Roman Koudelka, who has less than 274.4 points?"
    },
    {
        "answer": "SELECT attendance FROM table_name_75 WHERE venue = \"mandalay bay resort\"",
        "context": "CREATE TABLE table_name_75 (attendance VARCHAR, venue VARCHAR)",
        "question": "Which Attendance has Mandalay Bay Resort"
    },
    {
        "answer": "SELECT socket FROM table_name_7 WHERE frequency = \"1600mhz\" AND release_date = \"june 22, 2005\" AND voltage < 1.35",
        "context": "CREATE TABLE table_name_7 (socket VARCHAR, voltage VARCHAR, frequency VARCHAR, release_date VARCHAR)",
        "question": "What is the socket related to the processor released on June 22, 2005, having a frequency of 1600MHz and voltage under 1.35V?"
    },
    {
        "answer": "SELECT artist FROM table_name_67 WHERE label = \"reunion\" AND credit = \"guitar\" AND album = \"christmas\"",
        "context": "CREATE TABLE table_name_67 (artist VARCHAR, album VARCHAR, label VARCHAR, credit VARCHAR)",
        "question": "Who was the artist for the album, Christmas under the reunion label with the guitar?"
    },
    {
        "answer": "SELECT record FROM table_name_58 WHERE date = \"march 22\"",
        "context": "CREATE TABLE table_name_58 (record VARCHAR, date VARCHAR)",
        "question": "What was the record on March 22?"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_89 WHERE total = 4 AND silver = 1",
        "context": "CREATE TABLE table_name_89 (bronze VARCHAR, total VARCHAR, silver VARCHAR)",
        "question": "What is the total number of bronze medals of the nation with 4 total medals and 1 silver?"
    },
    {
        "answer": "SELECT season FROM table_name_62 WHERE winner = \"kanto gakuin university\" AND attendance = \"n/a\" AND title = \"37th\"",
        "context": "CREATE TABLE table_name_62 (season VARCHAR, title VARCHAR, winner VARCHAR, attendance VARCHAR)",
        "question": "What season had Kanto Gakuin University as the winner, with an attendance of n/a, and a title of 37th?"
    },
    {
        "answer": "SELECT high_assists FROM table_name_57 WHERE high_points = \"keon clark (19)\"",
        "context": "CREATE TABLE table_name_57 (high_assists VARCHAR, high_points VARCHAR)",
        "question": "What is High Assists, when High Points is Keon Clark (19)?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_29 WHERE high_assists = \"alvin williams (9)\"",
        "context": "CREATE TABLE table_name_29 (location_attendance VARCHAR, high_assists VARCHAR)",
        "question": "What is Location Attendance, when High Assists is Alvin Williams (9)?"
    },
    {
        "answer": "SELECT season FROM table_name_25 WHERE runner_up = \"waseda\" AND title = \"47th\"",
        "context": "CREATE TABLE table_name_25 (season VARCHAR, runner_up VARCHAR, title VARCHAR)",
        "question": "What season has a runner-up of waseda, and a title of 47th?"
    },
    {
        "answer": "SELECT name FROM table_name_6 WHERE street_address = \"100 w. pender st.\"",
        "context": "CREATE TABLE table_name_6 (name VARCHAR, street_address VARCHAR)",
        "question": "What name has 100 w. pender st. as the address?"
    },
    {
        "answer": "SELECT city FROM table_name_86 WHERE erp__analog__digital_ = \"600kw 500kw\"",
        "context": "CREATE TABLE table_name_86 (city VARCHAR, erp__analog__digital_ VARCHAR)",
        "question": "Which City has 600kw 500kw ERP ?"
    },
    {
        "answer": "SELECT date FROM table_name_92 WHERE record = \"67-58\"",
        "context": "CREATE TABLE table_name_92 (date VARCHAR, record VARCHAR)",
        "question": "On which date did the Indians have a record of 67-58"
    },
    {
        "answer": "SELECT package_option FROM table_name_43 WHERE hdtv = \"no\" AND language = \"italian\" AND television_service = \"cartello promozionale sky hd\"",
        "context": "CREATE TABLE table_name_43 (package_option VARCHAR, television_service VARCHAR, hdtv VARCHAR, language VARCHAR)",
        "question": "What is Package/Option, when HDTV is no, when Language is Italian, and when Television service is cartello promozionale sky hd?"
    },
    {
        "answer": "SELECT award FROM table_name_45 WHERE year < 2004 AND work = \"the clone\" AND result = \"won\" AND category = \"favourite actress\"",
        "context": "CREATE TABLE table_name_45 (award VARCHAR, category VARCHAR, result VARCHAR, year VARCHAR, work VARCHAR)",
        "question": "Which Award has a Year smaller than 2004, and a Work of the clone, and a Result of won, and a Category of favourite actress?"
    },
    {
        "answer": "SELECT time_elapsed FROM table_name_11 WHERE destination = \"jupiter\" AND closest_approach = \"4 february 2004\"",
        "context": "CREATE TABLE table_name_11 (time_elapsed VARCHAR, destination VARCHAR, closest_approach VARCHAR)",
        "question": "With the Destination of Jupiter and the Closest approach of 4 February 2004, what is the Time elapsed?"
    },
    {
        "answer": "SELECT launched FROM table_name_56 WHERE spacecraft = \"ulysses\" AND time_elapsed = \"491 days (1 yr, 4 mo, 3 d)\"",
        "context": "CREATE TABLE table_name_56 (launched VARCHAR, spacecraft VARCHAR, time_elapsed VARCHAR)",
        "question": "What Launched has both a Spacecraft of Ulysses and 491 days (1 yr, 4 mo, 3 d) as Time elapsed?"
    },
    {
        "answer": "SELECT karen_handel FROM table_name_45 WHERE eric_johnson = \"13%\" AND undecided = \"22%\"",
        "context": "CREATE TABLE table_name_45 (karen_handel VARCHAR, eric_johnson VARCHAR, undecided VARCHAR)",
        "question": "What percentage is Karen Handel at in the poll in which Eric Johnson is 13% and undecided is 22%?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_name_77 WHERE date = 1984 AND score_in_the_final = \"7\u20136, 6\u20131\"",
        "context": "CREATE TABLE table_name_77 (opponents_in_the_final VARCHAR, date VARCHAR, score_in_the_final VARCHAR)",
        "question": "What Opponents in the final had a match in 1984 with a Score in the final of 7\u20136, 6\u20131?"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_19 WHERE headquarters = \"toronto, on\" AND screens < 1 OFFSET 438",
        "context": "CREATE TABLE table_name_19 (rank INTEGER, headquarters VARCHAR, screens VARCHAR)",
        "question": "What is the rank of the cinema when the headquarters are in toronto, ON and the screens is less than 1,438?"
    },
    {
        "answer": "SELECT poll_source FROM table_name_67 WHERE john_oxendine = \"32%\"",
        "context": "CREATE TABLE table_name_67 (poll_source VARCHAR, john_oxendine VARCHAR)",
        "question": "In what poll is John Oxendine at 32%?"
    },
    {
        "answer": "SELECT MAX(races) FROM table_name_5 WHERE podiums < 6 AND series = \"formula renault 2.0 eurocup\" AND wins > 0",
        "context": "CREATE TABLE table_name_5 (races INTEGER, wins VARCHAR, podiums VARCHAR, series VARCHAR)",
        "question": "What is the largest number of races when there are less than 6 podiums, the series is the formula renault 2.0 eurocup, and there are more than 0 wins?"
    },
    {
        "answer": "SELECT SUM(year_opened) FROM table_name_13 WHERE span_feet > 1247 AND span_metres = 384",
        "context": "CREATE TABLE table_name_13 (year_opened INTEGER, span_feet VARCHAR, span_metres VARCHAR)",
        "question": "What is the sum of Year opened when the span feet is more than 1247, and the spam metres is 384?"
    },
    {
        "answer": "SELECT MIN(enrollment) FROM table_name_46 WHERE capacity > 35 OFFSET 650",
        "context": "CREATE TABLE table_name_46 (enrollment INTEGER, capacity INTEGER)",
        "question": "What is the enrollment associated with a capacity greater then 35,650?"
    },
    {
        "answer": "SELECT MAX(k_2_o) FROM table_name_40 WHERE na_2_o > 1.87 AND fe_2_o_3 > 0.07 AND objects = \"ritual disk\" AND al_2_o_3 < 0.62",
        "context": "CREATE TABLE table_name_40 (k_2_o INTEGER, al_2_o_3 VARCHAR, objects VARCHAR, na_2_o VARCHAR, fe_2_o_3 VARCHAR)",
        "question": "What is the highest K 2 O, when Na 2 O is greater than 1.87, when Fe 2 O 3 is greater than 0.07, when Objects is Ritual Disk, and when Al 2 O 3 is less than 0.62?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_name_2 WHERE manner_of_departure = \"resigned\" AND replaced_by = \"sandy clark\"",
        "context": "CREATE TABLE table_name_2 (date_of_appointment VARCHAR, manner_of_departure VARCHAR, replaced_by VARCHAR)",
        "question": "What is the date of appointment for the team with a resigned manner of departure and replaced by Sandy Clark?"
    },
    {
        "answer": "SELECT Double AS non_suited_match FROM table_name_1 WHERE non_suited_match = \"4:1\" AND house_edge = \"3.63%\"",
        "context": "CREATE TABLE table_name_1 (Double VARCHAR, non_suited_match VARCHAR, house_edge VARCHAR)",
        "question": "With a House Edge of 3.63% and a Non-Suited Match of 4:1, what is the Double Non-Suited Match?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_21 WHERE date = \"16 jan 2011\"",
        "context": "CREATE TABLE table_name_21 (winning_score VARCHAR, date VARCHAR)",
        "question": "For the tournament played on 16 Jan 2011, what was the winning score?"
    },
    {
        "answer": "SELECT driver FROM table_name_37 WHERE grid > 2 AND constructor = \"bmw sauber\" AND time_retired = \"+15.037\"",
        "context": "CREATE TABLE table_name_37 (driver VARCHAR, time_retired VARCHAR, grid VARCHAR, constructor VARCHAR)",
        "question": "Who drives a BMW Sauber with a Grid larger than 2 and a Time/Retired of +15.037?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_11 WHERE participation_as = \"actor, film editor\"",
        "context": "CREATE TABLE table_name_11 (year INTEGER, participation_as VARCHAR)",
        "question": "Participation as of actor, film editor has what average year?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_90 WHERE margin_of_victory = \"6 strokes\"",
        "context": "CREATE TABLE table_name_90 (winning_score VARCHAR, margin_of_victory VARCHAR)",
        "question": "For the tournament ending with a margin of victory of 6 strokes, what was the winning score?"
    },
    {
        "answer": "SELECT COUNT(university_of_dublin) FROM table_name_94 WHERE agricultural_panel = 0 AND nominated_by_the_taoiseach > 0 AND industrial_and_commercial_panel < 0",
        "context": "CREATE TABLE table_name_94 (university_of_dublin VARCHAR, industrial_and_commercial_panel VARCHAR, agricultural_panel VARCHAR, nominated_by_the_taoiseach VARCHAR)",
        "question": "What is the total for University of Dublin, having a panel of 0 for agricultural, was nominated by Taoiseach more than 0, and an industrial and commercial panel less than 0?"
    },
    {
        "answer": "SELECT AVG(agricultural_panel) FROM table_name_16 WHERE national_university_of_ireland < 0",
        "context": "CREATE TABLE table_name_16 (agricultural_panel INTEGER, national_university_of_ireland INTEGER)",
        "question": "What is the average for the agricultural panel that has a National University of Ireland less than 0?"
    },
    {
        "answer": "SELECT MIN(uncommitted) FROM table_name_16 WHERE total > 16 AND hillary_clinton = 2",
        "context": "CREATE TABLE table_name_16 (uncommitted INTEGER, total VARCHAR, hillary_clinton VARCHAR)",
        "question": "What is the lowest number of uncommitted superdelegates for a state with more than 16 total and 2 for Hillary Clinton?"
    },
    {
        "answer": "SELECT 2009 FROM table_name_99 WHERE tournament = \"wta premier mandatory tournaments\"",
        "context": "CREATE TABLE table_name_99 (tournament VARCHAR)",
        "question": "Name the 2009 for wta premier mandatory tournaments"
    },
    {
        "answer": "SELECT japanese FROM table_name_15 WHERE prefecture = \"ibaraki\" AND name = \"tsukuba\"",
        "context": "CREATE TABLE table_name_15 (japanese VARCHAR, prefecture VARCHAR, name VARCHAR)",
        "question": "What Japanese prefecture has Ibaraki, Tsukuba?"
    },
    {
        "answer": "SELECT COUNT(july__avg_low_) AS \u00b0f_ FROM table_name_28 WHERE january__avg_high_\u00b0f_ = \"30.4\"",
        "context": "CREATE TABLE table_name_28 (july__avg_low_ VARCHAR, january__avg_high_\u00b0f_ VARCHAR)",
        "question": "What is the july average low associated with a january average high of 30.4?"
    },
    {
        "answer": "SELECT MIN(assets__us) AS $_billion_ FROM table_name_16 WHERE company = \"piraeus bank\" AND revenues__us$_billion_ < 3.9",
        "context": "CREATE TABLE table_name_16 (assets__us INTEGER, company VARCHAR, revenues__us$_billion_ VARCHAR)",
        "question": "What are the smallest assets with a Company of piraeus bank, and a Revenue (US$ billion) smaller than 3.9?"
    },
    {
        "answer": "SELECT connection_with_australia FROM table_name_74 WHERE connection_with_america = \"born in the u.s.; mother is u.s. citizen\"",
        "context": "CREATE TABLE table_name_74 (connection_with_australia VARCHAR, connection_with_america VARCHAR)",
        "question": "What is the connection with Australia when the connection with America shows born in the u.s.; mother is u.s. citizen?"
    },
    {
        "answer": "SELECT company FROM table_name_41 WHERE market_value__us$_billion_ > 1 AND assets__us$_billion_ < 10.7 AND rank < 10 AND revenues__us$_billion_ = 9.3",
        "context": "CREATE TABLE table_name_41 (company VARCHAR, revenues__us$_billion_ VARCHAR, rank VARCHAR, market_value__us$_billion_ VARCHAR, assets__us$_billion_ VARCHAR)",
        "question": "Which company has a market value greater than 1, Assets (US$ billion) smaller than 10.7, a Rank smaller than 10, and revenue (US$ billion) of 9.3?"
    },
    {
        "answer": "SELECT AVG(market_value__us) AS $_billion_ FROM table_name_87 WHERE revenues__us$_billion_ > 6.2 AND company = \"national bank of greece\" AND rank < 1",
        "context": "CREATE TABLE table_name_87 (market_value__us INTEGER, rank VARCHAR, revenues__us$_billion_ VARCHAR, company VARCHAR)",
        "question": "What is the average market value with a revenue greater than 6.2, a Company of national bank of greece, and a Rank smaller than 1?"
    },
    {
        "answer": "SELECT notable_for FROM table_name_23 WHERE connection_with_australia = \"born in australia\" AND name = \"rick springfield\"",
        "context": "CREATE TABLE table_name_23 (notable_for VARCHAR, connection_with_australia VARCHAR, name VARCHAR)",
        "question": "What is the person born in Australia, rick springfield notable for?"
    },
    {
        "answer": "SELECT venue FROM table_name_46 WHERE result = \"eng by 6 wkts\"",
        "context": "CREATE TABLE table_name_46 (venue VARCHAR, result VARCHAR)",
        "question": "Name the venue for eng by 6 wkts"
    },
    {
        "answer": "SELECT location FROM table_name_68 WHERE tournament = \"sea pines heritage classic\"",
        "context": "CREATE TABLE table_name_68 (location VARCHAR, tournament VARCHAR)",
        "question": "What is the location of the Sea Pines Heritage Classic tournament?"
    },
    {
        "answer": "SELECT winner FROM table_name_72 WHERE points_classification = \"tony rominger\" AND stage = \"17\"",
        "context": "CREATE TABLE table_name_72 (winner VARCHAR, points_classification VARCHAR, stage VARCHAR)",
        "question": "Which winner has a points classification of Tony Rominger at stage 17?"
    },
    {
        "answer": "SELECT stage FROM table_name_93 WHERE mountains_classification = \"mariano piccoli\" AND points_classification = \"mario cipollini\" AND winner = \"laudelino cubino\"",
        "context": "CREATE TABLE table_name_93 (stage VARCHAR, winner VARCHAR, mountains_classification VARCHAR, points_classification VARCHAR)",
        "question": "Which stage has a mountains classification of Mariano Piccoli, a points classification of Mario Cipollini and was won by Laudelino Cubino?"
    },
    {
        "answer": "SELECT 2011 FROM table_name_63 WHERE tournament = \"grand slam tournaments\"",
        "context": "CREATE TABLE table_name_63 (tournament VARCHAR)",
        "question": "What is the 2011 when the Tournament was the grand slam tournaments?"
    },
    {
        "answer": "SELECT mountains_classification FROM table_name_70 WHERE general_classification = \"tony rominger\" AND winner = \"maurizio fondriest\"",
        "context": "CREATE TABLE table_name_70 (mountains_classification VARCHAR, general_classification VARCHAR, winner VARCHAR)",
        "question": "Which mountains classification has a general classification of Tony Rominger and was won by Maurizio Fondriest?"
    },
    {
        "answer": "SELECT name FROM table_name_42 WHERE height__cm_ = 175 AND birthplace = \"detroit, michigan\"",
        "context": "CREATE TABLE table_name_42 (name VARCHAR, height__cm_ VARCHAR, birthplace VARCHAR)",
        "question": "Which Name has a Height (cm) of 175 and a Birthplace of detroit, michigan"
    },
    {
        "answer": "SELECT position_in_1999 FROM table_name_71 WHERE venue = \"central, gomel\"",
        "context": "CREATE TABLE table_name_71 (position_in_1999 VARCHAR, venue VARCHAR)",
        "question": "What is the position of the team that played at the venue, Central, Gomel?"
    },
    {
        "answer": "SELECT MIN(assists) FROM table_name_71 WHERE pims = 70 AND goals < 19",
        "context": "CREATE TABLE table_name_71 (assists INTEGER, pims VARCHAR, goals VARCHAR)",
        "question": "What is the smallest number of assists with 70 Pims and less than 19 goals?"
    },
    {
        "answer": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T1.personal_name = \"Julio\"",
        "context": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, personal_name VARCHAR); CREATE TABLE Courses (course_name VARCHAR, author_id VARCHAR)",
        "question": "Find the names of courses taught by the tutor who has personal name \"Julio\"."
    },
    {
        "answer": "SELECT MAX(cargo_traffic) FROM table_name_82 WHERE airport = \"barcelona airport\" AND aircraft_movements < 290 OFFSET 004",
        "context": "CREATE TABLE table_name_82 (cargo_traffic INTEGER, airport VARCHAR, aircraft_movements VARCHAR)",
        "question": "Can you tell me the highest Cargo traffic that has the Airport of barcelona airport, and the Aircraft movements smaller than 290,004?"
    },
    {
        "answer": "SELECT 2014 FROM table_name_82 WHERE 2012 = \"garion weller\"",
        "context": "CREATE TABLE table_name_82 (Id VARCHAR)",
        "question": "Who held the same position in 2014 that Garion Weller held in 2014?"
    },
    {
        "answer": "SELECT former_local_authority FROM table_name_96 WHERE name = \"ecclesfield\"",
        "context": "CREATE TABLE table_name_96 (former_local_authority VARCHAR, name VARCHAR)",
        "question": "What is the Former local authority for Ecclesfield?"
    },
    {
        "answer": "SELECT skip FROM table_name_1 WHERE third = \"steffen walstad\"",
        "context": "CREATE TABLE table_name_1 (skip VARCHAR, third VARCHAR)",
        "question": "Which skip's third is Steffen Walstad?"
    },
    {
        "answer": "SELECT SUM(poles) FROM table_name_39 WHERE class = \"125cc\" AND team = \"matteoni racing team\" AND points > 3",
        "context": "CREATE TABLE table_name_39 (poles INTEGER, points VARCHAR, class VARCHAR, team VARCHAR)",
        "question": "How many Poles have a Class of 125cc, and a Team of matteoni racing team, and Points larger than 3?"
    },
    {
        "answer": "SELECT COUNT(wins) FROM table_name_13 WHERE podiums > 1 AND races = 9 AND season > 1984",
        "context": "CREATE TABLE table_name_13 (wins VARCHAR, season VARCHAR, podiums VARCHAR, races VARCHAR)",
        "question": "How many wins has a podiums greater than 1 and 9 as the races with a season after 1984?"
    },
    {
        "answer": "SELECT month_ & _year FROM table_name_18 WHERE title = \"bolivia special\"",
        "context": "CREATE TABLE table_name_18 (month_ VARCHAR, _year VARCHAR, title VARCHAR)",
        "question": "Which month and year held the Bolivia Special title?"
    },
    {
        "answer": "SELECT position FROM table_name_51 WHERE nationality = \"canada\" AND nhl_team = \"boston bruins\"",
        "context": "CREATE TABLE table_name_51 (position VARCHAR, nationality VARCHAR, nhl_team VARCHAR)",
        "question": "What position is the player that is from Canada and on the Boston Bruins"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_85 WHERE name = \"deutsche telekom\" AND market_value___usd_million_ > 209 OFFSET 628",
        "context": "CREATE TABLE table_name_85 (rank INTEGER, name VARCHAR, market_value___usd_million_ VARCHAR)",
        "question": "What is the lowest rank of Deutsche Telekom with a market value over 209,628?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_2 WHERE change < 44 AND centre = \"buenos aires\" AND rating > 628",
        "context": "CREATE TABLE table_name_2 (rank INTEGER, rating VARCHAR, change VARCHAR, centre VARCHAR)",
        "question": "Which Rank is the highest one that has a Change smaller than 44, and a Centre of buenos aires, and a Rating larger than 628?"
    },
    {
        "answer": "SELECT 3 AS rd_place FROM table_name_41 WHERE venue = \"pardubice\"",
        "context": "CREATE TABLE table_name_41 (venue VARCHAR)",
        "question": "Who was the 3rd place team at Pardubice?"
    },
    {
        "answer": "SELECT fibonacci FROM table_name_18 WHERE operation = \"find-min\"",
        "context": "CREATE TABLE table_name_18 (fibonacci VARCHAR, operation VARCHAR)",
        "question": "Operation of find-min has what Fibonacci?"
    },
    {
        "answer": "SELECT AVG(_number_of_phones_as__percentage_of_population) FROM table_name_15 WHERE country_or_region = \"russia\"",
        "context": "CREATE TABLE table_name_15 (_number_of_phones_as__percentage_of_population INTEGER, country_or_region VARCHAR)",
        "question": "What percent of the population has phone in Russia?"
    },
    {
        "answer": "SELECT number_of_mobile_phones FROM table_name_11 WHERE last_updated_date = \"april 2013\"",
        "context": "CREATE TABLE table_name_11 (number_of_mobile_phones VARCHAR, last_updated_date VARCHAR)",
        "question": "How many mobile phones were there as of April 2013?"
    },
    {
        "answer": "SELECT SUM(silver) FROM table_name_33 WHERE rank > 5 AND bronze > 6 AND gold < 2",
        "context": "CREATE TABLE table_name_33 (silver INTEGER, gold VARCHAR, rank VARCHAR, bronze VARCHAR)",
        "question": "How many silver medals were awarded to the Nation with less than 2 gold, more than 6 bronze and a rank higher than 5?"
    },
    {
        "answer": "SELECT entrant FROM table_name_29 WHERE engine = \"maserati straight-6\" AND year = 1952",
        "context": "CREATE TABLE table_name_29 (entrant VARCHAR, engine VARCHAR, year VARCHAR)",
        "question": "What Entrant has a 1952 maserati straight-6 engine?"
    },
    {
        "answer": "SELECT pole_position FROM table_name_75 WHERE grand_prix = \"belgian grand prix\"",
        "context": "CREATE TABLE table_name_75 (pole_position VARCHAR, grand_prix VARCHAR)",
        "question": "Name the pole position for belgian grand prix"
    },
    {
        "answer": "SELECT nhl_team FROM table_name_81 WHERE position = \"left wing\" AND college_junior_club_team = \"toronto marlboros (omjhl)\"",
        "context": "CREATE TABLE table_name_81 (nhl_team VARCHAR, position VARCHAR, college_junior_club_team VARCHAR)",
        "question": "What NHL team has a player in the position of Left Wing that came from the Toronto Marlboros (omjhl)?"
    },
    {
        "answer": "SELECT tournament FROM table_name_76 WHERE outcome = \"winner\" AND surface = \"hard\" AND date = \"august 26, 2006\"",
        "context": "CREATE TABLE table_name_76 (tournament VARCHAR, date VARCHAR, outcome VARCHAR, surface VARCHAR)",
        "question": "Which tournament had an outcome of winner, a hard surface, and happened on August 26, 2006?"
    },
    {
        "answer": "SELECT brazil_scorers FROM table_name_5 WHERE result = \"w\" AND competition = \"world cup qualifying\" AND date = \"february 28, 1954\"",
        "context": "CREATE TABLE table_name_5 (brazil_scorers VARCHAR, date VARCHAR, result VARCHAR, competition VARCHAR)",
        "question": "Which Brazil scorers have a Result of w, and a Competition of world cup qualifying, and a Date of february 28, 1954?"
    },
    {
        "answer": "SELECT location FROM table_name_90 WHERE winner = \"baltimore colts\" AND year < 1972 AND result = \"14-6\"",
        "context": "CREATE TABLE table_name_90 (location VARCHAR, result VARCHAR, winner VARCHAR, year VARCHAR)",
        "question": "What is the Location, when the Winner is the Baltimore Colts, when the Year is before 1972, and when the Result is 14-6?"
    },
    {
        "answer": "SELECT SUM(pages) FROM table_name_47 WHERE isbn = \"1-40122-328-1\"",
        "context": "CREATE TABLE table_name_47 (pages INTEGER, isbn VARCHAR)",
        "question": "How many pages does the ISBN 1-40122-328-1 have?"
    },
    {
        "answer": "SELECT MIN(jersey__number) FROM table_name_62 WHERE birthplace = \"evergreen park, illinois\" AND weight__kg_ > 86",
        "context": "CREATE TABLE table_name_62 (jersey__number INTEGER, birthplace VARCHAR, weight__kg_ VARCHAR)",
        "question": "What is the lowest jersey # that has evergreen park, illinois as the birthplace, with a weight (km) greater than 86?"
    },
    {
        "answer": "SELECT MAX(number) FROM table_name_81 WHERE long > 50 AND yards < 762",
        "context": "CREATE TABLE table_name_81 (number INTEGER, long VARCHAR, yards VARCHAR)",
        "question": "What is the highest number when there were more than 50 long and less than 762 yards?"
    },
    {
        "answer": "SELECT runner_up FROM table_name_69 WHERE winning_score = \u221220(70 - 69 - 64 - 65 = 268)",
        "context": "CREATE TABLE table_name_69 (runner_up VARCHAR, winning_score VARCHAR)",
        "question": "Which Runner-up has a Winning score of \u221220 (70-69-64-65=268)?"
    },
    {
        "answer": "SELECT intergiro_classification FROM table_name_29 WHERE trofeo_fast_team = \"gb-mg maglificio\"",
        "context": "CREATE TABLE table_name_29 (intergiro_classification VARCHAR, trofeo_fast_team VARCHAR)",
        "question": "Who held the Intergiro classificaiton when the Trofeo Fast Team is gb-mg maglificio?"
    },
    {
        "answer": "SELECT stage FROM table_name_76 WHERE intergiro_classification = \"miguel indurain\" AND points_classification = \"mario cipollini\" AND young_rider_classification = \"leonardo sierra\"",
        "context": "CREATE TABLE table_name_76 (stage VARCHAR, young_rider_classification VARCHAR, intergiro_classification VARCHAR, points_classification VARCHAR)",
        "question": "During which stage was the Intergiro classification held by Miguel Indurain, the Points classification held by Mario Cipollini, and the Young rider classification held by Leonardo Sierra?"
    },
    {
        "answer": "SELECT winner FROM table_name_10 WHERE general_classification = \"miguel indurain\" AND points_classification = \"mario cipollini\" AND mountains_classification = \"claudio chiappucci\" AND young_rider_classification = \"pavel tonkov\"",
        "context": "CREATE TABLE table_name_10 (winner VARCHAR, young_rider_classification VARCHAR, mountains_classification VARCHAR, general_classification VARCHAR, points_classification VARCHAR)",
        "question": "Who was the winner when the General classification was held by Miguel Indurain, the Points classification held by Mario Cipollini, the Mountains classification held by Claudio Chiappucci, and the Young RIder classification held by Pavel Tonkov?"
    },
    {
        "answer": "SELECT AVG(games_played) FROM table_name_5 WHERE loses = 10 AND player = \"bo oshoniyi\" AND minutes > 1170",
        "context": "CREATE TABLE table_name_5 (games_played INTEGER, minutes VARCHAR, loses VARCHAR, player VARCHAR)",
        "question": "What is the average Games Played for Bo Oshoniyi, who had more than 1170 minutes and 10 loses?"
    },
    {
        "answer": "SELECT description FROM table_name_8 WHERE year_of_issue = 1983 AND thickness = \"1.7mm\" AND weight = \"3.50grams\"",
        "context": "CREATE TABLE table_name_8 (description VARCHAR, weight VARCHAR, year_of_issue VARCHAR, thickness VARCHAR)",
        "question": "Which Description has a Year of Issue of 1983, and a Thickness of 1.7mm, and a Weight of 3.50grams?"
    },
    {
        "answer": "SELECT republican_ticket FROM table_name_65 WHERE democratic_ticket = \"arthur levitt\"",
        "context": "CREATE TABLE table_name_65 (republican_ticket VARCHAR, democratic_ticket VARCHAR)",
        "question": "Who was the Republican candidate against the Democratic candidate Arthur Levitt?"
    },
    {
        "answer": "SELECT over_total_tax_revenue__in__percentage_ FROM table_name_75 WHERE stamp_duty_reserve_tax = \"n.a.\" AND year = \"1995-96\"",
        "context": "CREATE TABLE table_name_75 (over_total_tax_revenue__in__percentage_ VARCHAR, stamp_duty_reserve_tax VARCHAR, year VARCHAR)",
        "question": "What is the Total Tax Revenue that has an n.a. Stamp Duty Reserve Tax in the years 1995-96?"
    },
    {
        "answer": "SELECT MAX(founded) FROM table_name_67 WHERE institution = \"cloud county community college\"",
        "context": "CREATE TABLE table_name_67 (founded INTEGER, institution VARCHAR)",
        "question": "What is the largest Founded with an Institution of cloud county community college?"
    },
    {
        "answer": "SELECT score FROM table_name_44 WHERE opponent = \"roger federer\" AND date = \"april 3, 2006\"",
        "context": "CREATE TABLE table_name_44 (score VARCHAR, opponent VARCHAR, date VARCHAR)",
        "question": "What was the score of the match against roger federer on April 3, 2006?"
    },
    {
        "answer": "SELECT outcome FROM table_name_78 WHERE opponent = \"andy roddick\"",
        "context": "CREATE TABLE table_name_78 (outcome VARCHAR, opponent VARCHAR)",
        "question": "What was the outcome of the match against andy roddick?"
    },
    {
        "answer": "SELECT gender FROM table_name_76 WHERE authority = \"state\" AND years = \"1\u20138\" AND decile < 10 AND roll = 36",
        "context": "CREATE TABLE table_name_76 (gender VARCHAR, roll VARCHAR, decile VARCHAR, authority VARCHAR, years VARCHAR)",
        "question": "Which gender has an Authority of state, Years of 1\u20138, and a Decile smaller than 10, and a Roll of 36?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_77 WHERE class = \"500cc\" AND wins > 0 AND year > 1974",
        "context": "CREATE TABLE table_name_77 (points INTEGER, year VARCHAR, class VARCHAR, wins VARCHAR)",
        "question": "How many points have 500cc for the class, a win greater than 0, with a year after 1974?"
    },
    {
        "answer": "SELECT COUNT(san_jose_wins) FROM table_name_43 WHERE la_goals > 6 AND la_wins < 21",
        "context": "CREATE TABLE table_name_43 (san_jose_wins VARCHAR, la_goals VARCHAR, la_wins VARCHAR)",
        "question": "How many San Jose wins have an LA goals larger than 6, and an LA wins smaller than 21?"
    },
    {
        "answer": "SELECT COUNT(fa_cup) FROM table_name_64 WHERE play_offs = 3 AND name = \"mitch cook category:articles with hcards\" AND total < 11",
        "context": "CREATE TABLE table_name_64 (fa_cup VARCHAR, total VARCHAR, play_offs VARCHAR, name VARCHAR)",
        "question": "What's the total number of FA Cup with a Play-offs of 3, and the Name of Mitch Cook Category:Articles with hCards and has a Total thats less than 11?"
    },
    {
        "answer": "SELECT voltage FROM table_name_64 WHERE frequency = \"2000mhz\" AND release_date = \"q3 2008\"",
        "context": "CREATE TABLE table_name_64 (voltage VARCHAR, frequency VARCHAR, release_date VARCHAR)",
        "question": "What kind of Voltage has a Frequency of 2000mhz, and a Release date in q3 2008?"
    },
    {
        "answer": "SELECT COUNT(league) AS Cup FROM table_name_8 WHERE play_offs > 2 AND name = \"mitch cook category:articles with hcards\"",
        "context": "CREATE TABLE table_name_8 (league VARCHAR, play_offs VARCHAR, name VARCHAR)",
        "question": "What's the total number of League Cup with a Play-off larger than 2, and a Name of Mitch Cook Category:Articles with hCards?"
    },
    {
        "answer": "SELECT AVG(channel_4_weekly_rank_a) FROM table_name_20 WHERE viewers__millions_ < 2.19 AND airdate = \"december 7, 2007\"",
        "context": "CREATE TABLE table_name_20 (channel_4_weekly_rank_a INTEGER, viewers__millions_ VARCHAR, airdate VARCHAR)",
        "question": "What is the average Channel 4 weekly rank for less than 2.19 million viewers on December 7, 2007?"
    },
    {
        "answer": "SELECT to_par FROM table_name_95 WHERE country = \"england\" AND score = 66",
        "context": "CREATE TABLE table_name_95 (to_par VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "What is the to par that has england as the country, with 66 as a score?"
    },
    {
        "answer": "SELECT owner FROM table_name_42 WHERE re_entered_service__p_ = \"11 september 1985\" AND pre_conversion = \"t326\"",
        "context": "CREATE TABLE table_name_42 (owner VARCHAR, re_entered_service__p_ VARCHAR, pre_conversion VARCHAR)",
        "question": "Who owns the item that was a T326 before conversion and re-entered service on 11 September 1985?"
    },
    {
        "answer": "SELECT pre_conversion FROM table_name_16 WHERE owner = \"v/line passenger\" AND re_entered_service__p_ = \"23 november 1984\"",
        "context": "CREATE TABLE table_name_16 (pre_conversion VARCHAR, owner VARCHAR, re_entered_service__p_ VARCHAR)",
        "question": "Which of V/Line Passenger's pre-conversions re-entered service on 23 November 1984?"
    },
    {
        "answer": "SELECT AVG(win__percentage) FROM table_name_76 WHERE gb_[d_] = \"5\"",
        "context": "CREATE TABLE table_name_76 (win__percentage INTEGER, gb_ VARCHAR, d_ VARCHAR)",
        "question": "What is the average win percentage of a season with a GB of 5?"
    },
    {
        "answer": "SELECT country FROM table_name_80 WHERE internetlists = \"\u2014\" AND onisecurityfiltering = \"\u2014\"",
        "context": "CREATE TABLE table_name_80 (country VARCHAR, internetlists VARCHAR, onisecurityfiltering VARCHAR)",
        "question": "What is the name of the country that has internetlists of \u2014, and ONIsecurityfiltering of \u2014?"
    },
    {
        "answer": "SELECT home FROM table_name_15 WHERE record = \"27\u201314\u20136\"",
        "context": "CREATE TABLE table_name_15 (home VARCHAR, record VARCHAR)",
        "question": "Who was the home team when the record was 27\u201314\u20136?"
    },
    {
        "answer": "SELECT mult FROM table_name_3 WHERE socket = \"fcbga1088\" AND voltage = \"1v\" AND part_number_s_ = \"nu80579ez600cnu80579ez600ct\"",
        "context": "CREATE TABLE table_name_3 (mult VARCHAR, part_number_s_ VARCHAR, socket VARCHAR, voltage VARCHAR)",
        "question": "Socket of fcbga1088, and a Voltage of 1v, and a Part number(s) of nu80579ez600cnu80579ez600ct is what mult?"
    },
    {
        "answer": "SELECT release_price___usd__ FROM table_name_3 WHERE release_date = \"2008 q3\" AND part_number_s_ = \"nu80579ez009c\"",
        "context": "CREATE TABLE table_name_3 (release_price___usd__ VARCHAR, release_date VARCHAR, part_number_s_ VARCHAR)",
        "question": "Release date of 2008 q3, and a Part number(s) of nu80579ez009c has what Release price ( USD )?"
    },
    {
        "answer": "SELECT player FROM table_name_41 WHERE to_par = \"\u20134\"",
        "context": "CREATE TABLE table_name_41 (player VARCHAR, to_par VARCHAR)",
        "question": "What is the name of the player with a To par of \u20134?"
    },
    {
        "answer": "SELECT score FROM table_name_22 WHERE partner = \"mashona washington\" AND date = \"january 10, 2011\"",
        "context": "CREATE TABLE table_name_22 (score VARCHAR, partner VARCHAR, date VARCHAR)",
        "question": "What is the final score for the game played on January 10, 2011 with partner Mashona Washington?"
    },
    {
        "answer": "SELECT language FROM table_name_27 WHERE film_name = \"seethaiah\"",
        "context": "CREATE TABLE table_name_27 (language VARCHAR, film_name VARCHAR)",
        "question": "what language is seethaiah in"
    },
    {
        "answer": "SELECT senior_status FROM table_name_22 WHERE reason_for_termination = \"death\" AND chief_judge = \"\u2014\"",
        "context": "CREATE TABLE table_name_22 (senior_status VARCHAR, reason_for_termination VARCHAR, chief_judge VARCHAR)",
        "question": "What was the senior status for the judge who was terminated because of death, with a Chief Judge entry of \u2014?"
    },
    {
        "answer": "SELECT field FROM table_name_99 WHERE home_away = \"away\" AND opponent = \"bayhawks\"",
        "context": "CREATE TABLE table_name_99 (field VARCHAR, home_away VARCHAR, opponent VARCHAR)",
        "question": "What Field was played at in an away game against the bayhawks?"
    },
    {
        "answer": "SELECT political_group FROM table_name_58 WHERE name = \"p. maelius capitolinus\"",
        "context": "CREATE TABLE table_name_58 (political_group VARCHAR, name VARCHAR)",
        "question": "What is the Political group for p. maelius capitolinus?"
    },
    {
        "answer": "SELECT type FROM table_name_46 WHERE name = \"l. publilius philo vulscus\"",
        "context": "CREATE TABLE table_name_46 (type VARCHAR, name VARCHAR)",
        "question": "What is the Type for l. publilius philo vulscus?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_96 WHERE year = 2004",
        "context": "CREATE TABLE table_name_96 (points INTEGER, year VARCHAR)",
        "question": "What are the lowest points in 2004?"
    },
    {
        "answer": "SELECT location FROM table_name_47 WHERE date = \"february 29, 2012\"",
        "context": "CREATE TABLE table_name_47 (location VARCHAR, date VARCHAR)",
        "question": "What is the location of the match on February 29, 2012?"
    },
    {
        "answer": "SELECT score FROM table_name_44 WHERE date = \"november 15, 2011\"",
        "context": "CREATE TABLE table_name_44 (score VARCHAR, date VARCHAR)",
        "question": "What is the score of the match on November 15, 2011?"
    },
    {
        "answer": "SELECT driver FROM table_name_40 WHERE points > 252 AND season = \"2012\" AND percentage_of_possible_points = \"55.60%\"",
        "context": "CREATE TABLE table_name_40 (driver VARCHAR, percentage_of_possible_points VARCHAR, points VARCHAR, season VARCHAR)",
        "question": "Which driver had points over 252 in the season of 2012 with a percentage of possible points at 55.60%?"
    },
    {
        "answer": "SELECT resurrection_of144, 000 FROM table_name_63 WHERE christ_madeking = \"1914\" AND separating_sheep_ & goats = \"during christ's presence\" AND judgmentof_religion = \"1878\"",
        "context": "CREATE TABLE table_name_63 (resurrection_of144 VARCHAR, judgmentof_religion VARCHAR, christ_madeking VARCHAR, separating_sheep_ VARCHAR, goats VARCHAR)",
        "question": "What is the resurrection of 144,000 date with a Christ made king date in 1914, a separting sheep & goats date during Christ's presence, and a judgment of religion date in 1878?"
    },
    {
        "answer": "SELECT title FROM table_name_89 WHERE leading_lady = \"marion burns\" AND role = \"john mason\"",
        "context": "CREATE TABLE table_name_89 (title VARCHAR, leading_lady VARCHAR, role VARCHAR)",
        "question": "Name the title for marion burns leading lady and role of john mason"
    },
    {
        "answer": "SELECT role FROM table_name_11 WHERE studio = \"rep\" AND leading_lady = \"sheila mannors\" AND title = \"westward ho\"",
        "context": "CREATE TABLE table_name_11 (role VARCHAR, title VARCHAR, studio VARCHAR, leading_lady VARCHAR)",
        "question": "Name the role for studio of rep with sheila mannors leading lady and title of westward ho"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_15 WHERE driver = \"fernando alonso\" AND percentage_of_possible_points = \"53.05%\"",
        "context": "CREATE TABLE table_name_15 (points INTEGER, driver VARCHAR, percentage_of_possible_points VARCHAR)",
        "question": "What was the average Points of the season driver Fernando Alonso had a percentage of possible points of 53.05%?"
    },
    {
        "answer": "SELECT AVG(concacaf) FROM table_name_59 WHERE merconorte > 0 AND player = \"jared borgetti\" AND superliga > 0",
        "context": "CREATE TABLE table_name_59 (concacaf INTEGER, superliga VARCHAR, merconorte VARCHAR, player VARCHAR)",
        "question": "Name the average concacaf for merconorte larger than 0 and player of jared borgetti"
    },
    {
        "answer": "SELECT SUM(goals) FROM table_name_48 WHERE team = \"torpedo moscow\" AND division = 1 AND apps < 29",
        "context": "CREATE TABLE table_name_48 (goals INTEGER, apps VARCHAR, team VARCHAR, division VARCHAR)",
        "question": "What is the sum of goals for Torpedo Moscow in division 1 with an apps value less than 29?"
    },
    {
        "answer": "SELECT remixed_by FROM table_name_51 WHERE year = 1986 AND version = \"long version\"",
        "context": "CREATE TABLE table_name_51 (remixed_by VARCHAR, year VARCHAR, version VARCHAR)",
        "question": "Which long version was remixed in 1986?"
    },
    {
        "answer": "SELECT entrant FROM table_name_95 WHERE engine = \"maserati straight-6\" AND year < 1958 AND chassis = \"maserati 250f\" AND points < 4",
        "context": "CREATE TABLE table_name_95 (entrant VARCHAR, points VARCHAR, chassis VARCHAR, engine VARCHAR, year VARCHAR)",
        "question": "What kind of Entrant has a Maserati Straight-6 Engine, built in the year 1958 or early, and has a Maserati 250f Chassis with points less than 4?"
    },
    {
        "answer": "SELECT ladies_1st_xi FROM table_21576644_2 WHERE mens_2nd_xi = \"10th, South West District 1\"",
        "context": "CREATE TABLE table_21576644_2 (ladies_1st_xi VARCHAR, mens_2nd_xi VARCHAR)",
        "question": "When 10th, south west district 1 is the mens 2nd xi what is the ladies 1st xi?"
    },
    {
        "answer": "SELECT opponent FROM table_name_37 WHERE week > 4 AND date = \"october 15, 2000\"",
        "context": "CREATE TABLE table_name_37 (opponent VARCHAR, week VARCHAR, date VARCHAR)",
        "question": "Who was the opponent in the game played after Week 4 on October 15, 2000?"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_39 WHERE time = \"collision\" AND team = \"switzerland\" AND grid < 11",
        "context": "CREATE TABLE table_name_39 (laps VARCHAR, grid VARCHAR, time VARCHAR, team VARCHAR)",
        "question": "What is the total number of Laps when collision shows for time for Switzerland and less than 11 for grid?"
    },
    {
        "answer": "SELECT AVG(bronze) FROM table_name_27 WHERE silver > 0 AND total = 6 AND gold > 0",
        "context": "CREATE TABLE table_name_27 (bronze INTEGER, gold VARCHAR, silver VARCHAR, total VARCHAR)",
        "question": "Name the average bronze with silver more than 0, total of 6 and gold more than 0"
    },
    {
        "answer": "SELECT surface FROM table_name_14 WHERE date = \"june 13, 1983\"",
        "context": "CREATE TABLE table_name_14 (surface VARCHAR, date VARCHAR)",
        "question": "Which Surface had a Date of june 13, 1983?"
    },
    {
        "answer": "SELECT date FROM table_name_7 WHERE site = \"memorial stadium \u2022 minneapolis, mn\" AND attendance = \"20,000\" AND result = \"w52-0\"",
        "context": "CREATE TABLE table_name_7 (date VARCHAR, result VARCHAR, site VARCHAR, attendance VARCHAR)",
        "question": "What is the Date at memorial stadium \u2022 minneapolis, mn with an Attendance of 20,000, and a Result of w52-0?"
    },
    {
        "answer": "SELECT opponent_number FROM table_name_25 WHERE site = \"memorial stadium \u2022 minneapolis, mn\" AND date = \"10/20/1928\"",
        "context": "CREATE TABLE table_name_25 (opponent_number VARCHAR, site VARCHAR, date VARCHAR)",
        "question": "What is the Opponent name at memorial stadium \u2022 minneapolis, mn on 10/20/1928?"
    },
    {
        "answer": "SELECT set_2 FROM table_name_14 WHERE time = \"15:33\"",
        "context": "CREATE TABLE table_name_14 (set_2 VARCHAR, time VARCHAR)",
        "question": "What set 2 has 15:33 as the time?"
    },
    {
        "answer": "SELECT attendance FROM table_name_15 WHERE opponent_number = \"purdue\"",
        "context": "CREATE TABLE table_name_15 (attendance VARCHAR, opponent_number VARCHAR)",
        "question": "What is the Attendance number when the Opponent was purdue?"
    },
    {
        "answer": "SELECT winner FROM table_name_74 WHERE venue = \"campbelltown sports stadium\"",
        "context": "CREATE TABLE table_name_74 (winner VARCHAR, venue VARCHAR)",
        "question": "Who was the Winner at Campbelltown Sports Stadium?"
    },
    {
        "answer": "SELECT second_leg FROM table_name_35 WHERE phase = \"group stage\" AND round = \"matchday 5\"",
        "context": "CREATE TABLE table_name_35 (second_leg VARCHAR, phase VARCHAR, round VARCHAR)",
        "question": "What was the second leg score from the group stage on matchday 5?"
    },
    {
        "answer": "SELECT college_junior_club_team FROM table_name_12 WHERE nhl_team = \"toronto maple leafs\" AND nationality = \"united states\"",
        "context": "CREATE TABLE table_name_12 (college_junior_club_team VARCHAR, nhl_team VARCHAR, nationality VARCHAR)",
        "question": "What College/junior/club had a player of United States nationality drafted by the Toronto Maple Leafs?"
    },
    {
        "answer": "SELECT MIN(weight) FROM table_name_78 WHERE spike < 330 AND block = 315 AND height > 187",
        "context": "CREATE TABLE table_name_78 (weight INTEGER, height VARCHAR, spike VARCHAR, block VARCHAR)",
        "question": "What is the smallest Weight, when Spike is less than 330, when Block is 315, and when Height is greater than 187?"
    },
    {
        "answer": "SELECT score FROM table_name_99 WHERE venue = \"thessaloniki (without participation)\"",
        "context": "CREATE TABLE table_name_99 (score VARCHAR, venue VARCHAR)",
        "question": "Venue of thessaloniki (without participation) had what score?"
    },
    {
        "answer": "SELECT eruptions FROM table_name_51 WHERE location = \"pacific ring of fire\" AND volcanic_explosivity_index = \"6\" AND country = \"peru\"",
        "context": "CREATE TABLE table_name_51 (eruptions VARCHAR, country VARCHAR, location VARCHAR, volcanic_explosivity_index VARCHAR)",
        "question": "Which Eruptions have a Location of pacific ring of fire, and a Volcanic Explosivity Index of 6, and a Country of peru?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_22 WHERE location = \"pacific ring of fire\" AND eruptions = \"pinatubo\"",
        "context": "CREATE TABLE table_name_22 (year INTEGER, location VARCHAR, eruptions VARCHAR)",
        "question": "How many years have a Location of pacific ring of fire, and Eruptions of pinatubo?"
    },
    {
        "answer": "SELECT chassis FROM table_name_65 WHERE points = 0 AND entrant = \"automobiles gonfaronnaises sportives\"",
        "context": "CREATE TABLE table_name_65 (chassis VARCHAR, points VARCHAR, entrant VARCHAR)",
        "question": "Which chassis used by the entrant Automobiles Gonfaronnaises Sportives scored 0 points?"
    },
    {
        "answer": "SELECT score FROM table_name_87 WHERE game < 21 AND high_rebounds = \"antonio davis (12)\"",
        "context": "CREATE TABLE table_name_87 (score VARCHAR, game VARCHAR, high_rebounds VARCHAR)",
        "question": "What is the Score for the Game less than 21, and of antonio davis (12)had the High rebounds?"
    },
    {
        "answer": "SELECT district FROM table_name_2 WHERE first_elected = 1858 AND result = \"retired republican gain\" AND incumbent = \"william millward\"",
        "context": "CREATE TABLE table_name_2 (district VARCHAR, incumbent VARCHAR, first_elected VARCHAR, result VARCHAR)",
        "question": "Which District has a First elected of 1858, and a Result of retired republican gain, and an Incumbent of william millward?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_98 WHERE engine = \"bmw str-4 t/c\" AND entrant = \"barclay nordica arrows bmw\" AND points < 1",
        "context": "CREATE TABLE table_name_98 (year INTEGER, points VARCHAR, engine VARCHAR, entrant VARCHAR)",
        "question": "How many years did barclay nordica arrows bmw enter with a bmw str-4 t/c engine with less than 1 point?"
    },
    {
        "answer": "SELECT text FROM table_name_47 WHERE traditional_characters = \"\u5fc3\u5982\u7328\u7334\"",
        "context": "CREATE TABLE table_name_47 (text VARCHAR, traditional_characters VARCHAR)",
        "question": "Which text has traditional characters of \u5fc3\u5982\u7328\u7334?"
    },
    {
        "answer": "SELECT country FROM table_name_76 WHERE airport = \"weerawila airport\"",
        "context": "CREATE TABLE table_name_76 (country VARCHAR, airport VARCHAR)",
        "question": "Which country has Weerawila Airport?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_69 WHERE performance = \"long jump\" AND competition = \"world indoor championships\" AND position = \"5th\"",
        "context": "CREATE TABLE table_name_69 (year INTEGER, position VARCHAR, performance VARCHAR, competition VARCHAR)",
        "question": "What was the earliest year in which long jump was performed in the world indoor Championships in 5th position?"
    },
    {
        "answer": "SELECT SUM(bronze) FROM table_name_47 WHERE rank > 11 AND gold < 0",
        "context": "CREATE TABLE table_name_47 (bronze INTEGER, rank VARCHAR, gold VARCHAR)",
        "question": "What is the sum of Bronze when the rank is more than 11 and gold is less than 0?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_10 WHERE engine = \"audi 3.6l turbo v8\" AND rank = \"1st\" AND chassis = \"audi r8r\"",
        "context": "CREATE TABLE table_name_10 (year VARCHAR, chassis VARCHAR, engine VARCHAR, rank VARCHAR)",
        "question": "How many years has an engine of audi 3.6l turbo v8 and 1st as the rank with an audi r8r as the chassis?"
    },
    {
        "answer": "SELECT AVG(year_won) FROM table_name_20 WHERE player = \"rich beem\" AND to_par < 17",
        "context": "CREATE TABLE table_name_20 (year_won INTEGER, player VARCHAR, to_par VARCHAR)",
        "question": "What is the average year Rich Beem had a to par less than 17?"
    },
    {
        "answer": "SELECT frame_size FROM table_name_44 WHERE audio_coding = \"pcm 4 ch/16 bit/48khz\" AND format_name = \"dvcam\" AND color_sampling = \"4:1:1\"",
        "context": "CREATE TABLE table_name_44 (frame_size VARCHAR, color_sampling VARCHAR, audio_coding VARCHAR, format_name VARCHAR)",
        "question": "What frame size has pcm 4 ch/16 bit/48khz as audio coding and dvcam as the format name and 4:1:1 as the color sampling?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_2 WHERE year_won < 2002 AND player = \"bob tway\" AND to_par > 7",
        "context": "CREATE TABLE table_name_2 (total VARCHAR, to_par VARCHAR, year_won VARCHAR, player VARCHAR)",
        "question": "What is the total for Bob Tway for the year won before 2002 with a to par bigger than 7?"
    },
    {
        "answer": "SELECT COUNT(to_par) FROM table_name_72 WHERE country = \"united states\" AND year_won > 1986 AND player = \"paul azinger\" AND total > 145",
        "context": "CREATE TABLE table_name_72 (to_par VARCHAR, total VARCHAR, player VARCHAR, country VARCHAR, year_won VARCHAR)",
        "question": "What is the to par for Paul Azinger from the United States after 1986 for a total bigger than 145?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_59 WHERE rank < 28 AND accolade = \"the 100 greatest metal albums of the decade\"",
        "context": "CREATE TABLE table_name_59 (year INTEGER, rank VARCHAR, accolade VARCHAR)",
        "question": "What is the highest Year, when Rank is less than 28, and when Accolade is \"The 100 greatest metal albums of the decade\"?"
    },
    {
        "answer": "SELECT name FROM table_name_91 WHERE area = \"balclutha\" AND decile < 7 AND roll > 186",
        "context": "CREATE TABLE table_name_91 (name VARCHAR, roll VARCHAR, area VARCHAR, decile VARCHAR)",
        "question": "What's the school name in Balclutha that has a Decile of 7 and a roll larger than 186?"
    },
    {
        "answer": "SELECT AVG(floors) FROM table_name_19 WHERE name = \"meridian condominiums\"",
        "context": "CREATE TABLE table_name_19 (floors INTEGER, name VARCHAR)",
        "question": "with name meridian condominiums what is number of floors?"
    },
    {
        "answer": "SELECT game FROM table_name_50 WHERE points = 28 AND opponent = \"tampa bay lightning\"",
        "context": "CREATE TABLE table_name_50 (game VARCHAR, points VARCHAR, opponent VARCHAR)",
        "question": "What game has 28 points, and tampa bay lightning as the opponent?"
    },
    {
        "answer": "SELECT AVG(prize_fund___us) AS $__ FROM table_name_56 WHERE owgr_pts > 20 AND dates = \"nov 6-9\"",
        "context": "CREATE TABLE table_name_56 (prize_fund___us INTEGER, owgr_pts VARCHAR, dates VARCHAR)",
        "question": "What is the average Prize fund ( US$ ), when OWGR pts is greater than 20, and when Dates is Nov 6-9?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_95 WHERE record = \"42\u201316\u20138\" AND march > 5",
        "context": "CREATE TABLE table_name_95 (points INTEGER, record VARCHAR, march VARCHAR)",
        "question": "Record of 42\u201316\u20138, and a March larger than 5 has what average points?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_63 WHERE chassis = \"dallara 3087 lola t88/50\" AND year < 1988",
        "context": "CREATE TABLE table_name_63 (points INTEGER, chassis VARCHAR, year VARCHAR)",
        "question": "Name the average points for dallara 3087 lola t88/50 and year before 1988"
    },
    {
        "answer": "SELECT manager_1 FROM table_name_29 WHERE kit_manufacturer = \"puma\" AND shirt_sponsor = \"puma\"",
        "context": "CREATE TABLE table_name_29 (manager_1 VARCHAR, kit_manufacturer VARCHAR, shirt_sponsor VARCHAR)",
        "question": "Who is the manager 1 with Puma as the kit manufacturer and Puma as the shirt sponsor?"
    },
    {
        "answer": "SELECT \"coat_of_cash\" AS _wearing_celebrity FROM table_name_92 WHERE episode_number > 1 AND musical_guest__song_performed_ = \"amy macdonald ( mr rock & roll )\"",
        "context": "CREATE TABLE table_name_92 (episode_number VARCHAR, musical_guest__song_performed_ VARCHAR)",
        "question": "WHich Coat of Cash\" Wearing Celebrity has a Episode Number larger than 1 and with amy macdonald ( mr rock & roll )?"
    },
    {
        "answer": "SELECT SUM(rec) FROM table_name_95 WHERE average < 32 AND s_touchdown < 3 AND opponent = \"oregon state\"",
        "context": "CREATE TABLE table_name_95 (rec INTEGER, opponent VARCHAR, average VARCHAR, s_touchdown VARCHAR)",
        "question": "Which Rec has an Average smaller than 32, and a Touchdown smaller than 3, and an Opponent of oregon state?"
    },
    {
        "answer": "SELECT COUNT(total_viewers) FROM table_name_84 WHERE share = \"18.8%\" AND bbc_one_weekly_ranking < 16",
        "context": "CREATE TABLE table_name_84 (total_viewers VARCHAR, share VARCHAR, bbc_one_weekly_ranking VARCHAR)",
        "question": "What is the total number of total viewers with a share of 18.8% and a weekly ranking under 16?"
    },
    {
        "answer": "SELECT opponent FROM table_name_95 WHERE yards < 197 AND average < 32 AND year = 1966",
        "context": "CREATE TABLE table_name_95 (opponent VARCHAR, year VARCHAR, yards VARCHAR, average VARCHAR)",
        "question": "Which Opponent has Yards smaller than 197, and an Average smaller than 32, and a Year of 1966?"
    },
    {
        "answer": "SELECT COUNT(s_touchdown) FROM table_name_57 WHERE rec = 10 AND opponent = \"oregon state\" AND average < 19.7",
        "context": "CREATE TABLE table_name_57 (s_touchdown VARCHAR, average VARCHAR, rec VARCHAR, opponent VARCHAR)",
        "question": "How many Touchdowns have a rec of 10, and an Opponent of oregon state, and an Average smaller than 19.7?"
    },
    {
        "answer": "SELECT points FROM table_name_44 WHERE performer = \"nigel connell\"",
        "context": "CREATE TABLE table_name_44 (points VARCHAR, performer VARCHAR)",
        "question": "How many points did Nigel Connell have?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_27 WHERE winning_score = \u201315(66 - 67 - 70 - 70 = 273)",
        "context": "CREATE TABLE table_name_27 (runner_s__up VARCHAR, winning_score VARCHAR)",
        "question": "Who was the runner-up for the event that ended with a winning score of \u201315 (66-67-70-70=273)?"
    },
    {
        "answer": "SELECT name FROM table_name_96 WHERE propulsion = \"turbojet\" AND year > 1985 AND launched_by = \"surface, sub\"",
        "context": "CREATE TABLE table_name_96 (name VARCHAR, launched_by VARCHAR, propulsion VARCHAR, year VARCHAR)",
        "question": "What is the name of the anti-ship missile that had a turbojet propulsion that was launched by a surface, sub after 1985?"
    },
    {
        "answer": "SELECT SUM(silver) FROM table_name_26 WHERE bronze > 0 AND gold < 0",
        "context": "CREATE TABLE table_name_26 (silver INTEGER, bronze VARCHAR, gold VARCHAR)",
        "question": "What is the sum of Silver with a Bronze that is larger than 0 with a Gold smaller than 0?"
    },
    {
        "answer": "SELECT make_and_model FROM table_name_67 WHERE fuel_propulsion = \"diesel\" AND floor_type = \"high\" AND bicycle_capacity\u2020 < 3 AND quantity = 4",
        "context": "CREATE TABLE table_name_67 (make_and_model VARCHAR, quantity VARCHAR, bicycle_capacity\u2020 VARCHAR, fuel_propulsion VARCHAR, floor_type VARCHAR)",
        "question": "What make and model of the diesel vehicle with a high floor type, bike capacity less than 3, and a quantity of 4?"
    },
    {
        "answer": "SELECT date FROM table_name_61 WHERE label = \"alfa records\" AND catalog = \"alca-487\"",
        "context": "CREATE TABLE table_name_61 (date VARCHAR, label VARCHAR, catalog VARCHAR)",
        "question": "What is the Date when the label was alfa records, and a Catalog of alca-487?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_81 WHERE winning_score = \u201328(66 - 67 - 68 - 64 - 67 = 332)",
        "context": "CREATE TABLE table_name_81 (runner_s__up VARCHAR, winning_score VARCHAR)",
        "question": "Who was the runner-up when the winning score was \u201328 (66-67-68-64-67=332)?"
    },
    {
        "answer": "SELECT SUM(goals) FROM table_name_8 WHERE team = \"partizan\" AND country = \"serbia\" AND division > 1",
        "context": "CREATE TABLE table_name_8 (goals INTEGER, division VARCHAR, team VARCHAR, country VARCHAR)",
        "question": "What is the total number of goals that the Partizan team from the country of serbia had that was larger than 1?"
    },
    {
        "answer": "SELECT catalog FROM table_name_1 WHERE format = \"ed remaster cd\" AND label = \"village records\" AND date = \"march 13, 2002\"",
        "context": "CREATE TABLE table_name_1 (catalog VARCHAR, date VARCHAR, format VARCHAR, label VARCHAR)",
        "question": "What is the Catalog when the format is ed remaster cd, and a Label of village records, and a Date of march 13, 2002?"
    },
    {
        "answer": "SELECT tickets_sold___available FROM table_name_4 WHERE gross_revenue__2011_ = \"$5,948,390\"",
        "context": "CREATE TABLE table_name_4 (tickets_sold___available VARCHAR, gross_revenue__2011_ VARCHAR)",
        "question": "How many tickets were sold/available when the gross revenue (2011) was $5,948,390?"
    },
    {
        "answer": "SELECT COUNT(legs_lost) FROM table_name_11 WHERE player = \"trina gulliver\" AND played > 3",
        "context": "CREATE TABLE table_name_11 (legs_lost VARCHAR, player VARCHAR, played VARCHAR)",
        "question": "How many legs were lost for Trina Gulliver with more than 3 played?"
    },
    {
        "answer": "SELECT AVG(yards) FROM table_name_2 WHERE game_time = \"2nd quarter (0:00)\" AND date = \"november 8, 1971\"",
        "context": "CREATE TABLE table_name_2 (yards INTEGER, game_time VARCHAR, date VARCHAR)",
        "question": "Game time of 2nd quarter (0:00), and a Date of november 8, 1971 has how many average yards?"
    },
    {
        "answer": "SELECT driver FROM table_name_87 WHERE chassis = \"bugatti t51\" AND entrant = \"automobiles ettore bugatti\"",
        "context": "CREATE TABLE table_name_87 (driver VARCHAR, chassis VARCHAR, entrant VARCHAR)",
        "question": "Who was the Driver, when the Chassis was Bugatti T51, and when the Entrant was Automobiles Ettore Bugatti?"
    },
    {
        "answer": "SELECT date FROM table_name_3 WHERE result = \"missed*\" AND game_time = \"2nd quarter (0:00)\" AND kicker = \"mason crosby\"",
        "context": "CREATE TABLE table_name_3 (date VARCHAR, kicker VARCHAR, result VARCHAR, game_time VARCHAR)",
        "question": "Result of missed*, and a Game time of 2nd quarter (0:00), and a Kicker of mason crosby involves what date?"
    },
    {
        "answer": "SELECT MIN(value__) AS $m_ FROM table_name_26 WHERE revenue__$m_ < 374 AND debt_as__percentageof_value = \"84\"",
        "context": "CREATE TABLE table_name_26 (value__ INTEGER, revenue__$m_ VARCHAR, debt_as__percentageof_value VARCHAR)",
        "question": "What is the lowest value of a team with revenue less than 374 and a debt of 84%?"
    },
    {
        "answer": "SELECT fcc_info FROM table_name_8 WHERE frequency_mhz < 91.9 AND city_of_license = \"dansville, ny\"",
        "context": "CREATE TABLE table_name_8 (fcc_info VARCHAR, frequency_mhz VARCHAR, city_of_license VARCHAR)",
        "question": "What's the FCC info with a Frequency MHz thats smaller than 91.9 and has a CIty of license of Dansville, NY?"
    },
    {
        "answer": "SELECT regulator FROM table_name_13 WHERE conduct_of_litigation = \"yes\" AND probate_activities = \"yes\"",
        "context": "CREATE TABLE table_name_13 (regulator VARCHAR, conduct_of_litigation VARCHAR, probate_activities VARCHAR)",
        "question": "What is Regulator, when Conduct of Litigation is Yes, and when Probate Activities is Yes?"
    },
    {
        "answer": "SELECT fcc_info FROM table_name_85 WHERE frequency_mhz < 100.3 AND city_of_license = \"lowville, ny\"",
        "context": "CREATE TABLE table_name_85 (fcc_info VARCHAR, frequency_mhz VARCHAR, city_of_license VARCHAR)",
        "question": "What's the FCC info with a Frequency MHz thats smaller than 100.3 and a City of License as Lowville, NY?"
    },
    {
        "answer": "SELECT administration_of_oaths FROM table_name_43 WHERE rights_of_audience = \"yes\" AND reserved_instruments = \"yes\"",
        "context": "CREATE TABLE table_name_43 (administration_of_oaths VARCHAR, rights_of_audience VARCHAR, reserved_instruments VARCHAR)",
        "question": "What is Administration of Oaths, when Rights of Audience is Yes, and when Reserved Instruments is Yes?"
    },
    {
        "answer": "SELECT reserved_instruments FROM table_name_19 WHERE conduct_of_litigation = \"yes\" AND probate_activities = \"yes\"",
        "context": "CREATE TABLE table_name_19 (reserved_instruments VARCHAR, conduct_of_litigation VARCHAR, probate_activities VARCHAR)",
        "question": "What is Reserved Instruments, when Conduct of Litigation is Yes, and when Probate Activities is Yes?"
    },
    {
        "answer": "SELECT probate_activities FROM table_name_6 WHERE reserved_instruments = \"no\" AND regulator = \"chartered institute of legal executives\"",
        "context": "CREATE TABLE table_name_6 (probate_activities VARCHAR, reserved_instruments VARCHAR, regulator VARCHAR)",
        "question": "What is Probate Activities, when Reserved Instruments is No, and when Regulator is Chartered Institute of Legal Executives?"
    },
    {
        "answer": "SELECT COUNT(erp_w) FROM table_name_2 WHERE frequency_mhz > 97.7",
        "context": "CREATE TABLE table_name_2 (erp_w VARCHAR, frequency_mhz INTEGER)",
        "question": "What's the sum of ERP W with a Frequency MHz that larger than 97.7?"
    },
    {
        "answer": "SELECT best_film FROM table_name_42 WHERE best_supporting_actress = \"shamaine buencamino for ni\u00f1o\"",
        "context": "CREATE TABLE table_name_42 (best_film VARCHAR, best_supporting_actress VARCHAR)",
        "question": "Which Best Film has a Best Supporting Actress of shamaine buencamino for ni\u00f1o?"
    },
    {
        "answer": "SELECT probate_activities FROM table_name_16 WHERE notarial_activities = \"no\" AND conduct_of_litigation = \"yes\" AND regulator = \"association of law costs draftsmen\"",
        "context": "CREATE TABLE table_name_16 (probate_activities VARCHAR, regulator VARCHAR, notarial_activities VARCHAR, conduct_of_litigation VARCHAR)",
        "question": "What is Probate Activities, when Notarial Activities is No, when Conduct of Litigation is Yes, and when Regulator is Association of Law Costs Draftsmen?"
    },
    {
        "answer": "SELECT COUNT(year_of_intro) FROM table_name_87 WHERE country_of_origin = \"soviet union\" AND type = \"reusable\" AND primary_cartridge = \"40mm\" AND name__designation = \"rpg-29\"",
        "context": "CREATE TABLE table_name_87 (year_of_intro VARCHAR, name__designation VARCHAR, primary_cartridge VARCHAR, country_of_origin VARCHAR, type VARCHAR)",
        "question": "What is the total number of Year of Intro(s), when Country of Origin is Soviet Union, when Type is Reusable, when Primary Cartridge is 40mm, and when Name/ Designation is RPG-29?"
    },
    {
        "answer": "SELECT country FROM table_name_39 WHERE transfer_fee = \"\u2014\" AND transfer_window = \"summer\" AND status = \"loaned out\" AND name = \"gonz\u00e1lez\"",
        "context": "CREATE TABLE table_name_39 (country VARCHAR, name VARCHAR, status VARCHAR, transfer_fee VARCHAR, transfer_window VARCHAR)",
        "question": "What country has a Transfer fee of \u2014, and a Transfer window of summer, and the Status of loaned out, and a Name of gonz\u00e1lez?"
    },
    {
        "answer": "SELECT AVG(draw) FROM table_name_68 WHERE televote < 633 AND artist = \"vilma voroblevait\u0117\" AND place > 14",
        "context": "CREATE TABLE table_name_68 (draw INTEGER, place VARCHAR, televote VARCHAR, artist VARCHAR)",
        "question": "What draw average has a televote less than 633 and Vilma Voroblevait\u0117 as artist and the place is greater than 14?"
    },
    {
        "answer": "SELECT maximum_fps AS HDRx FROM table_name_47 WHERE height > 1080 AND least_compression_at_24_fps = \"6:1\" AND least_compression_at_maximum_fps = \"7:1\"",
        "context": "CREATE TABLE table_name_47 (maximum_fps VARCHAR, least_compression_at_maximum_fps VARCHAR, height VARCHAR, least_compression_at_24_fps VARCHAR)",
        "question": "What is the maximum fps HDRx with a height larger than 1080 with a compression at 24 fps of 6:1 with a compression at maximum fps of at least 7:1?"
    },
    {
        "answer": "SELECT band FROM table_name_61 WHERE area_served = \"darwin\" AND purpose = \"commercial\"",
        "context": "CREATE TABLE table_name_61 (band VARCHAR, area_served VARCHAR, purpose VARCHAR)",
        "question": "Which band serves darwin for commercial purpose?"
    },
    {
        "answer": "SELECT combined FROM table_name_46 WHERE super_g < 10 AND overall < 4",
        "context": "CREATE TABLE table_name_46 (combined VARCHAR, super_g VARCHAR, overall VARCHAR)",
        "question": "What is Combined, when Super G is less than 10, and when Overall is less than 4?"
    },
    {
        "answer": "SELECT AVG(2006) FROM table_name_47 WHERE production_year = \"wheat\" AND 2005 > 7340",
        "context": "CREATE TABLE table_name_47 (production_year VARCHAR)",
        "question": "What is the average 2006 value for wheat with a 2005 value greater than 7340?"
    },
    {
        "answer": "SELECT in_state_area FROM table_name_30 WHERE outlet = \"colorado river\" AND _percentage_in_state = \"a038 84.8%\"",
        "context": "CREATE TABLE table_name_30 (in_state_area VARCHAR, outlet VARCHAR, _percentage_in_state VARCHAR)",
        "question": "With an outlet of Colorado River and a % instate of a038 84.8% what is in-state area?"
    },
    {
        "answer": "SELECT transfer_fee FROM table_name_97 WHERE ends = 2011 AND moving_from = \"thrasyvoulos\"",
        "context": "CREATE TABLE table_name_97 (transfer_fee VARCHAR, ends VARCHAR, moving_from VARCHAR)",
        "question": "What was the transfer fee for the player ending in 2011 and moving from Thrasyvoulos?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_54 WHERE nation = \"venezuela\" AND bronze > 9",
        "context": "CREATE TABLE table_name_54 (rank INTEGER, nation VARCHAR, bronze VARCHAR)",
        "question": "What is the highest rank of Venezuela, which has more than 9 bronze medals?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_69 WHERE bronze = 0 AND silver = 1 AND gold > 0",
        "context": "CREATE TABLE table_name_69 (rank INTEGER, gold VARCHAR, bronze VARCHAR, silver VARCHAR)",
        "question": "What is the lowest rank of the team with 0 bronze, 1 silver, and more than 0 gold?"
    },
    {
        "answer": "SELECT date FROM table_name_46 WHERE tournament = \"transitions championship\"",
        "context": "CREATE TABLE table_name_46 (date VARCHAR, tournament VARCHAR)",
        "question": "On what date was the Transitions Championship?"
    },
    {
        "answer": "SELECT nationality FROM table_name_75 WHERE position = \"left wing\" AND round > 4 AND player = \"mattia baldi\"",
        "context": "CREATE TABLE table_name_75 (nationality VARCHAR, player VARCHAR, position VARCHAR, round VARCHAR)",
        "question": "What nationality has a position of left wing, and a round greater than 4, with mattia baldi as the player?"
    },
    {
        "answer": "SELECT MAX(division) FROM table_name_25 WHERE playoffs = \"quarter finals\" AND regular_season = \"5th\"",
        "context": "CREATE TABLE table_name_25 (division INTEGER, playoffs VARCHAR, regular_season VARCHAR)",
        "question": "What is the highest Division when the playoffs were the quarter finals, with a Regular Season of 5th?"
    },
    {
        "answer": "SELECT result FROM table_name_1 WHERE goal > 6 AND score = \"1\u20130\" AND competition = \"friendly\" AND date = \"may 31, 1998\"",
        "context": "CREATE TABLE table_name_1 (result VARCHAR, date VARCHAR, competition VARCHAR, goal VARCHAR, score VARCHAR)",
        "question": "Which Result has a Goal larger than 6, and a Score of 1\u20130, and a Competition of friendly, and a Date of may 31, 1998?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_71 WHERE class = \"500cc\" AND year > 1962 AND wins < 0",
        "context": "CREATE TABLE table_name_71 (points INTEGER, wins VARCHAR, class VARCHAR, year VARCHAR)",
        "question": "What is the highest points value for the 500cc class in years after 1962 with 0 wins?"
    },
    {
        "answer": "SELECT MAX(finish) FROM table_name_17 WHERE manufacturer = \"dodge\" AND start < 9 AND year < 2008",
        "context": "CREATE TABLE table_name_17 (finish INTEGER, year VARCHAR, manufacturer VARCHAR, start VARCHAR)",
        "question": "Before 2008, if the Manufacturer is dodge and the start is under 9, what's the highest finish time?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_71 WHERE gold = 0 AND nation = \"iran\"",
        "context": "CREATE TABLE table_name_71 (total INTEGER, gold VARCHAR, nation VARCHAR)",
        "question": "What is the average Total, when Gold is 0, and when Nation is Iran?"
    },
    {
        "answer": "SELECT content FROM table_name_58 WHERE television_service = \"vesti\"",
        "context": "CREATE TABLE table_name_58 (content VARCHAR, television_service VARCHAR)",
        "question": "What is the content of the Television service of Vesti?"
    },
    {
        "answer": "SELECT COUNT(average) FROM table_name_73 WHERE sellouts < 14 AND season = \"2011-12\" AND attendance < 162 OFFSET 474",
        "context": "CREATE TABLE table_name_73 (average VARCHAR, attendance VARCHAR, sellouts VARCHAR, season VARCHAR)",
        "question": "What is the full amount of averages when the sellouts are less than 14, the season is 2011-12, and attendance is less than 162,474?"
    },
    {
        "answer": "SELECT modern_equivalent FROM table_name_88 WHERE post_1009_province = \"gyeongsang -do\" AND administrative_district = \"jinju -mok\" AND province_of_silla = \"gangju\"",
        "context": "CREATE TABLE table_name_88 (modern_equivalent VARCHAR, province_of_silla VARCHAR, post_1009_province VARCHAR, administrative_district VARCHAR)",
        "question": "What kind of Modern equivalent has a Post-1009 province of gyeongsang -do, and a Administrative district of jinju -mok, and a Province of Silla of gangju?"
    },
    {
        "answer": "SELECT SUM(against) FROM table_name_84 WHERE team = \"guarani\" AND drawn < 3",
        "context": "CREATE TABLE table_name_84 (against INTEGER, team VARCHAR, drawn VARCHAR)",
        "question": "How many games against for team guarani with under 3 draws?"
    },
    {
        "answer": "SELECT congress FROM table_name_92 WHERE _number_of_cosponsors < 23 AND date_introduced = \"june 30, 2005\"",
        "context": "CREATE TABLE table_name_92 (congress VARCHAR, _number_of_cosponsors VARCHAR, date_introduced VARCHAR)",
        "question": "What Congress had less than 23 cosponsors and had June 30, 2005 as the date of introduction of the bill?"
    },
    {
        "answer": "SELECT province_of_silla FROM table_name_33 WHERE modern_equivalent = \"south jeolla\" AND administrative_district = \"seungju\"",
        "context": "CREATE TABLE table_name_33 (province_of_silla VARCHAR, modern_equivalent VARCHAR, administrative_district VARCHAR)",
        "question": "WHich Province of Silla has a Modern equivalent of south jeolla, and a Administrative district of seungju?"
    },
    {
        "answer": "SELECT team FROM table_name_71 WHERE points = 4 AND chassis = \"march 82/83c\"",
        "context": "CREATE TABLE table_name_71 (team VARCHAR, points VARCHAR, chassis VARCHAR)",
        "question": "What team has 4 points and a Chassis of march 82/83c?"
    },
    {
        "answer": "SELECT opponent_in_final FROM table_name_88 WHERE date = \"may 22, 2006\"",
        "context": "CREATE TABLE table_name_88 (opponent_in_final VARCHAR, date VARCHAR)",
        "question": "Who is the opponent in the final of the tournament on May 22, 2006?"
    },
    {
        "answer": "SELECT MIN(average) FROM table_name_38 WHERE wickets > 265 AND career = \"1888/89-1913/14\" AND matches > 51",
        "context": "CREATE TABLE table_name_38 (average INTEGER, matches VARCHAR, wickets VARCHAR, career VARCHAR)",
        "question": "Name the least average with wickets more than 265 and career of 1888/89-1913/14 and matches more than 51"
    },
    {
        "answer": "SELECT place FROM table_name_10 WHERE to_par = \"+1\" AND player = \"dave stockton\"",
        "context": "CREATE TABLE table_name_10 (place VARCHAR, to_par VARCHAR, player VARCHAR)",
        "question": "What place was Dave Stockton when he had a to par of +1?"
    },
    {
        "answer": "SELECT COUNT(matches) FROM table_name_73 WHERE wickets < 537 AND career = \"1898/99-1919/20\" AND runs > 4476",
        "context": "CREATE TABLE table_name_73 (matches VARCHAR, runs VARCHAR, wickets VARCHAR, career VARCHAR)",
        "question": "Name the total number of matches with wickets less than 537 and career of 1898/99-1919/20 with runs more than 4476"
    },
    {
        "answer": "SELECT to_par FROM table_name_46 WHERE place = \"t4\" AND score = 75 - 69 - 74 - 72 = 290",
        "context": "CREATE TABLE table_name_46 (to_par VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "What is the to par of the player with a t4 place and a score of 75-69-74-72=290?"
    },
    {
        "answer": "SELECT engine FROM table_name_4 WHERE entrant = \"fuel injection\"",
        "context": "CREATE TABLE table_name_4 (engine VARCHAR, entrant VARCHAR)",
        "question": "What type of engine did the Fuel Injection entrant use?"
    },
    {
        "answer": "SELECT writer FROM table_name_15 WHERE year < 2008 AND notes = \"short film\" AND title = \"wallace & gromit: a close shave\"",
        "context": "CREATE TABLE table_name_15 (writer VARCHAR, title VARCHAR, year VARCHAR, notes VARCHAR)",
        "question": "Who is the writer of Wallace & Gromit: A Close Shave, a short film from before 2008?"
    },
    {
        "answer": "SELECT SUM(round) FROM table_name_74 WHERE team = \"boston cannons\"",
        "context": "CREATE TABLE table_name_74 (round INTEGER, team VARCHAR)",
        "question": "How many players were drafted from the Boston Cannons in the round?"
    },
    {
        "answer": "SELECT director FROM table_name_99 WHERE title = \"wallace & gromit: the curse of the were-rabbit\"",
        "context": "CREATE TABLE table_name_99 (director VARCHAR, title VARCHAR)",
        "question": "Who is the director of Wallace & Gromit: The Curse of the Were-Rabbit?"
    },
    {
        "answer": "SELECT laps FROM table_name_92 WHERE manufacturer = \"suzuki\" AND time_retired = \"+1:02.804\"",
        "context": "CREATE TABLE table_name_92 (laps VARCHAR, manufacturer VARCHAR, time_retired VARCHAR)",
        "question": "Name the laps for suzuki and time/retired of +1:02.804"
    },
    {
        "answer": "SELECT time_retired FROM table_name_62 WHERE laps < 66 AND grid = 15",
        "context": "CREATE TABLE table_name_62 (time_retired VARCHAR, laps VARCHAR, grid VARCHAR)",
        "question": "What was the time when the laps were smaller than 66 and the grid was 15?"
    },
    {
        "answer": "SELECT MAX(_number_of_total_votes) FROM table_name_31 WHERE _percentage_of_popular_vote = \"32.41%\" AND _number_of_seats_won > 95",
        "context": "CREATE TABLE table_name_31 (_number_of_total_votes INTEGER, _percentage_of_popular_vote VARCHAR, _number_of_seats_won VARCHAR)",
        "question": "Name the most # of total votes with % of popular vote of 32.41% and # of seats won more than 95"
    },
    {
        "answer": "SELECT start FROM table_name_72 WHERE qual = \"141.033\"",
        "context": "CREATE TABLE table_name_72 (start VARCHAR, qual VARCHAR)",
        "question": "What place did Jack McGrath start in when he received a qual score of 141.033?"
    },
    {
        "answer": "SELECT SUM(goals) FROM table_name_46 WHERE tries = 24 AND points > 96",
        "context": "CREATE TABLE table_name_46 (goals INTEGER, tries VARCHAR, points VARCHAR)",
        "question": "What is the total number of goals from 24 tries and 96 or greater points?"
    },
    {
        "answer": "SELECT term_in_office FROM table_name_27 WHERE party = \"liberal\" AND state = \"sa\" AND member = \"ian mclachlan\"",
        "context": "CREATE TABLE table_name_27 (term_in_office VARCHAR, member VARCHAR, party VARCHAR, state VARCHAR)",
        "question": "Name the term in office for liberal and state of sa for ian mclachlan"
    },
    {
        "answer": "SELECT SUM(played) FROM table_name_52 WHERE points = 38 AND bp > 5",
        "context": "CREATE TABLE table_name_52 (played INTEGER, points VARCHAR, bp VARCHAR)",
        "question": "Played that has a Points of 38, and a B.P. larger than 5 has what sum?"
    },
    {
        "answer": "SELECT MAX(rounds) FROM table_name_40 WHERE truck_s_ = \"chevrolet silverado\" AND team = \"rbr enterprises\"",
        "context": "CREATE TABLE table_name_40 (rounds INTEGER, truck_s_ VARCHAR, team VARCHAR)",
        "question": "What is the most number of rounds that the Team from RBR Enterprises and having a Chevrolet Silverado ran?"
    },
    {
        "answer": "SELECT truck_s_ FROM table_name_23 WHERE driver_s_ = \"brett moffitt\" AND team = \"hattori racing enterprises\"",
        "context": "CREATE TABLE table_name_23 (truck_s_ VARCHAR, driver_s_ VARCHAR, team VARCHAR)",
        "question": "What is the truck used by Brett Moffitt, from Hattori Racing Enterprises?"
    },
    {
        "answer": "SELECT ppv_buyrate FROM table_name_77 WHERE date = \"september 10\" AND event = \"strikeforce: heavyweight grand prix semifinals\"",
        "context": "CREATE TABLE table_name_77 (ppv_buyrate VARCHAR, date VARCHAR, event VARCHAR)",
        "question": "On September 10 during Strikeforce: Heavyweight Grand Prix Semifinals, what was the PPV buyrate?"
    },
    {
        "answer": "SELECT film FROM table_name_67 WHERE result = \"nominated\" AND year = 2001",
        "context": "CREATE TABLE table_name_67 (film VARCHAR, result VARCHAR, year VARCHAR)",
        "question": "Which Film has a Result of nominated, and a Year of 2001?"
    },
    {
        "answer": "SELECT award FROM table_name_39 WHERE group = \"c\u00e9sar awards\" AND result = \"nominated\" AND year > 2001 AND film = \"8 women (8 femmes)\"",
        "context": "CREATE TABLE table_name_39 (award VARCHAR, film VARCHAR, year VARCHAR, group VARCHAR, result VARCHAR)",
        "question": "Which Award has a Group of c\u00e9sar awards, and a Result of nominated, and a Year larger than 2001, and a Film of 8 women (8 femmes)?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_41 WHERE group = \"c\u00e9sar awards\" AND result = \"nominated\" AND award = \"best actress\" AND film = \"8 women (8 femmes)\"",
        "context": "CREATE TABLE table_name_41 (year INTEGER, film VARCHAR, award VARCHAR, group VARCHAR, result VARCHAR)",
        "question": "Which Year has a Group of c\u00e9sar awards, and a Result of nominated, and an Award of the best actress, and a Film of 8 women (8 femmes)?"
    },
    {
        "answer": "SELECT venue FROM table_name_95 WHERE competition = \"1966 fifa world cup qualification\" AND date = \"may 7, 1965\"",
        "context": "CREATE TABLE table_name_95 (venue VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "What venue held the 1966 fifa world cup qualification on may 7, 1965?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_88 WHERE goalsagainst = 285 AND season = \"2006\u201307\" AND games < 70",
        "context": "CREATE TABLE table_name_88 (points INTEGER, games VARCHAR, goalsagainst VARCHAR, season VARCHAR)",
        "question": "Goalsagainst of 285, and a Season of 2006\u201307, and a Games smaller than 70 has what average points?"
    },
    {
        "answer": "SELECT MIN(2012) FROM table_name_17 WHERE 2010 = 72 AND 2013 < 56",
        "context": "CREATE TABLE table_name_17 (Id VARCHAR)",
        "question": "What is the lowest number of participants in 2012 when there were 72 in 2010 and less than 56 in 2013?"
    },
    {
        "answer": "SELECT result FROM table_name_79 WHERE offer_team = \"new york rangers\" AND player = \"adam graves\"",
        "context": "CREATE TABLE table_name_79 (result VARCHAR, offer_team VARCHAR, player VARCHAR)",
        "question": "What is the Result that has the New York Rangers as the Offer Team and Adam Graves as the Player?"
    },
    {
        "answer": "SELECT SUM(2013) FROM table_name_99 WHERE 2010 = 5 AND country = \"russia\" AND 2012 < 4",
        "context": "CREATE TABLE table_name_99 (country VARCHAR)",
        "question": "What is the sum of participants in 2013 for Russia when there were 5 in 2010 and less than 4 in 2012?"
    },
    {
        "answer": "SELECT result FROM table_name_73 WHERE offer_team = \"philadelphia flyers\" AND player = \"chris gratton\"",
        "context": "CREATE TABLE table_name_73 (result VARCHAR, offer_team VARCHAR, player VARCHAR)",
        "question": "What is the result of Chris Gratton and Philadelphia Flyers as the Offer Team?"
    },
    {
        "answer": "SELECT date FROM table_name_26 WHERE original_team = \"vancouver canucks\" AND result = \"matched\" AND player = \"ryan kesler\"",
        "context": "CREATE TABLE table_name_26 (date VARCHAR, player VARCHAR, original_team VARCHAR, result VARCHAR)",
        "question": "What date has Vancouver Canucks as the original team, Ryan Kesler as the player, and matched as the Result?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_15 WHERE opponent = \"devil rays\" AND date = \"may 13\"",
        "context": "CREATE TABLE table_name_15 (attendance INTEGER, opponent VARCHAR, date VARCHAR)",
        "question": "How low is the Attendance that has an Opponent of devil rays and a Date of may 13?"
    },
    {
        "answer": "SELECT MAX(game) FROM table_name_16 WHERE opponent = \"new york rangers\" AND points > 55",
        "context": "CREATE TABLE table_name_16 (game INTEGER, opponent VARCHAR, points VARCHAR)",
        "question": "What's the highest game against the New York Rangers with more than 55 points?"
    },
    {
        "answer": "SELECT nationality FROM table_name_26 WHERE distance = \"500m\" AND year < 2012 AND record = \"1:37.071s\"",
        "context": "CREATE TABLE table_name_26 (nationality VARCHAR, record VARCHAR, distance VARCHAR, year VARCHAR)",
        "question": "Which nationality's distance was 500m before 2012, when the record was 1:37.071s?"
    },
    {
        "answer": "SELECT place FROM table_name_30 WHERE score > 65 AND player = \"rocco mediate\"",
        "context": "CREATE TABLE table_name_30 (place VARCHAR, score VARCHAR, player VARCHAR)",
        "question": "WHAT IS THE PLACE THAT HAS SCORE OF 65 OR BETTER, FOR ROCCO MEDIATE?"
    },
    {
        "answer": "SELECT player FROM table_name_92 WHERE place = \"t7\" AND country = \"england\"",
        "context": "CREATE TABLE table_name_92 (player VARCHAR, place VARCHAR, country VARCHAR)",
        "question": "WHAT IS THE PLAYER WITH T7 PLACE, FOR ENGLAND?"
    },
    {
        "answer": "SELECT name FROM table_name_73 WHERE laid_down = \"22 september 1939\" AND commissioned = \"30 august 1941\"",
        "context": "CREATE TABLE table_name_73 (name VARCHAR, laid_down VARCHAR, commissioned VARCHAR)",
        "question": "Tell me the name for commissioned of 30 august 1941 and laid down of 22 september 1939"
    },
    {
        "answer": "SELECT SUM(gold) FROM table_name_51 WHERE silver > 0 AND total < 3 AND nation = \"bulgaria\" AND bronze < 0",
        "context": "CREATE TABLE table_name_51 (gold INTEGER, bronze VARCHAR, nation VARCHAR, silver VARCHAR, total VARCHAR)",
        "question": "Silver larger than 0, and a Total smaller than 3, and a Nation of bulgaria, and a Bronze smaller than 0 had what sum of gold?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_59 WHERE position < 7 AND goals_for = 68 AND played < 30",
        "context": "CREATE TABLE table_name_59 (points VARCHAR, played VARCHAR, position VARCHAR, goals_for VARCHAR)",
        "question": "What is the total amount of points for a position less than 7, 68 goals for, and less than 30 played?"
    },
    {
        "answer": "SELECT AVG(goals_for) FROM table_name_53 WHERE goals_against > 59 AND club = \"real avil\u00e9s cf\" AND goal_difference > -10",
        "context": "CREATE TABLE table_name_53 (goals_for INTEGER, goal_difference VARCHAR, goals_against VARCHAR, club VARCHAR)",
        "question": "What is teh average amount of goals for club real avil\u00e9s cf, which has more than 59 goals against and a -10 goal difference?"
    },
    {
        "answer": "SELECT AVG(goal_difference) FROM table_name_63 WHERE points > 27 AND losses < 9 AND club = \"cultural leonesa\"",
        "context": "CREATE TABLE table_name_63 (goal_difference INTEGER, club VARCHAR, points VARCHAR, losses VARCHAR)",
        "question": "What is the average goal difference of club cultural leonesa, which has more than 27 points and less than 9 losses?"
    },
    {
        "answer": "SELECT position FROM table_name_63 WHERE games_played = 5 AND w_l_d = \"1-2-2\"",
        "context": "CREATE TABLE table_name_63 (position VARCHAR, games_played VARCHAR, w_l_d VARCHAR)",
        "question": "Which position had 5 games played and a record of 1-2-2?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_67 WHERE total_score = \"274\" AND country = \"united states\"",
        "context": "CREATE TABLE table_name_67 (year INTEGER, total_score VARCHAR, country VARCHAR)",
        "question": "When the United States had a total score of 274 what was the average year?"
    },
    {
        "answer": "SELECT date FROM table_name_72 WHERE format = \"cd\" AND catalog = \"alca-274\"",
        "context": "CREATE TABLE table_name_72 (date VARCHAR, format VARCHAR, catalog VARCHAR)",
        "question": "What date has the format of CD and catalog of alca-274?"
    },
    {
        "answer": "SELECT location FROM table_name_67 WHERE year < 2010 AND silver = \"hei zhi hong\"",
        "context": "CREATE TABLE table_name_67 (location VARCHAR, year VARCHAR, silver VARCHAR)",
        "question": "What is the location for the year under 2010 and the year Hei Zhi Hong won silver?"
    },
    {
        "answer": "SELECT byte_string FROM table_name_23 WHERE memory_map = \"standard\" AND decimal = \"standard\" AND floating_point = \"standard\" AND max_memory__kwords_ < 512",
        "context": "CREATE TABLE table_name_23 (byte_string VARCHAR, max_memory__kwords_ VARCHAR, floating_point VARCHAR, memory_map VARCHAR, decimal VARCHAR)",
        "question": "What is the value for the byte string when the memory map, decimal, and floating points are all standard and the max memory is smaller than 512?"
    },
    {
        "answer": "SELECT model FROM table_name_90 WHERE byte_string = \"standard\" AND floating_point = \"standard\"",
        "context": "CREATE TABLE table_name_90 (model VARCHAR, byte_string VARCHAR, floating_point VARCHAR)",
        "question": "What model has both a standard byte string and floating-point?"
    },
    {
        "answer": "SELECT decimal FROM table_name_19 WHERE byte_string = \"standard\" AND memory_map = \"standard\" AND max_memory__kwords_ = 512",
        "context": "CREATE TABLE table_name_19 (decimal VARCHAR, max_memory__kwords_ VARCHAR, byte_string VARCHAR, memory_map VARCHAR)",
        "question": "What is the decimal value when the memory map and byte string are standard, and the max memory is 512?"
    },
    {
        "answer": "SELECT SUM(_100s) FROM table_name_41 WHERE team = \"deccan chargers\" AND matches = 8 AND average > 35.57",
        "context": "",
        "question": "Can you tell me the sum of 100s that has the Team of deccan chargers, and the Match of 8, and the Average larger than 35.57?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_19 WHERE nationality = \"united states\" AND college_junior_club_team__league_ = \"breck school (ushs)\"",
        "context": "CREATE TABLE table_name_19 (round INTEGER, nationality VARCHAR, college_junior_club_team__league_ VARCHAR)",
        "question": "Which Round has a Nationality of united states, and a College/Junior/Club Team (League) of breck school (ushs)?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_34 WHERE margin_of_victory = \"1 stroke\" AND tournament = \"world seniors invitational\"",
        "context": "CREATE TABLE table_name_34 (runner_s__up VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "Which Runner(s)-up has a Margin of victory of 1 stroke, and a Tournament of world seniors invitational?"
    },
    {
        "answer": "SELECT team FROM table_name_86 WHERE high_rebounds = \"popeye jones (14)\" AND record = \"16-28\"",
        "context": "CREATE TABLE table_name_86 (team VARCHAR, high_rebounds VARCHAR, record VARCHAR)",
        "question": "What was the team that has a High rebounds of popeye jones (14), and when the Record was 16-28?"
    },
    {
        "answer": "SELECT SUM(game) FROM table_name_27 WHERE record = \"17-29\"",
        "context": "CREATE TABLE table_name_27 (game INTEGER, record VARCHAR)",
        "question": "What is the score of the scores when Game had a Record of 17-29?"
    },
    {
        "answer": "SELECT AVG(net_yards) FROM table_name_87 WHERE touchdowns = 9 AND attempts = 145 AND yards_per_attempt > 4.8",
        "context": "CREATE TABLE table_name_87 (net_yards INTEGER, yards_per_attempt VARCHAR, touchdowns VARCHAR, attempts VARCHAR)",
        "question": "What are the average net yards that have 9 as the touchdowns, 145 as the attempts, and yards per attempt greater than 4.8?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_36 WHERE industry = \"banking\" AND company = \"bank of america\" AND profits__billion_$_ > 16.47",
        "context": "CREATE TABLE table_name_36 (rank INTEGER, profits__billion_$_ VARCHAR, industry VARCHAR, company VARCHAR)",
        "question": "What is the smallest rank for an industry of banking, a company of bank of america, and profits (billion $) larger than 16.47?"
    },
    {
        "answer": "SELECT MIN(market_value__billion_) AS $_ FROM table_name_2 WHERE headquarters = \"usa\" AND rank > 3 AND assets__billion_$_ > 208.34 AND company = \"jpmorgan chase\"",
        "context": "CREATE TABLE table_name_2 (market_value__billion_ INTEGER, company VARCHAR, assets__billion_$_ VARCHAR, headquarters VARCHAR, rank VARCHAR)",
        "question": "What is the lowest market value (billion $) with a headquarter of usa , and the rank larger than 3, assets (billion$) larger than 208.34, and the company jpmorgan chase?"
    },
    {
        "answer": "SELECT date FROM table_name_37 WHERE opponent = \"rafael nadal\"",
        "context": "CREATE TABLE table_name_37 (date VARCHAR, opponent VARCHAR)",
        "question": "On what Date was Rafael Nadal the Opponent?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_36 WHERE engine = \"mugen v8\" AND chassis = \"reynard 91d\"",
        "context": "CREATE TABLE table_name_36 (points INTEGER, engine VARCHAR, chassis VARCHAR)",
        "question": "What are the lowest points that have a Mugen V8 engine and a Reynard 91D chassis?"
    },
    {
        "answer": "SELECT leftfielder FROM table_name_90 WHERE second_baseman = \"davey lopes\" AND first_baseman = \"steve garvey\" AND shortstop = \"bill russell\" AND year > 1977",
        "context": "CREATE TABLE table_name_90 (leftfielder VARCHAR, year VARCHAR, shortstop VARCHAR, second_baseman VARCHAR, first_baseman VARCHAR)",
        "question": "What is the name of the Leftfielder when Davey Lopes was the Second Baseman and first baseman was steve garvey, Shortstop of bill russell eariler than 1977?"
    },
    {
        "answer": "SELECT shortstop FROM table_name_40 WHERE catcher = \"johnny roseboro\" AND third_baseman = \"jim lefebvre\" AND second_baseman = \"nate oliver\"",
        "context": "CREATE TABLE table_name_40 (shortstop VARCHAR, second_baseman VARCHAR, catcher VARCHAR, third_baseman VARCHAR)",
        "question": "What is the name of the shortstop when the Catcher was johnny roseboro, and a Third Baseman of jim lefebvre, and a Second Baseman of nate oliver?"
    },
    {
        "answer": "SELECT leftfielder FROM table_name_25 WHERE shortstop = \"bill russell\" AND second_baseman = \"steve sax\" AND year = 1983",
        "context": "CREATE TABLE table_name_25 (leftfielder VARCHAR, year VARCHAR, shortstop VARCHAR, second_baseman VARCHAR)",
        "question": "What is the name of the Leftfielder when the Shortstop was bill russell, and the Second Baseman was steve sax in 1983?"
    },
    {
        "answer": "SELECT score FROM table_name_56 WHERE high_points = \"raymond felton (32)\"",
        "context": "CREATE TABLE table_name_56 (score VARCHAR, high_points VARCHAR)",
        "question": "Which Score has High points of raymond felton (32)?"
    },
    {
        "answer": "SELECT team FROM table_name_69 WHERE winner = \"craig lowndes\" AND circuit = \"phillip island grand prix circuit\"",
        "context": "CREATE TABLE table_name_69 (team VARCHAR, winner VARCHAR, circuit VARCHAR)",
        "question": "Which Team has a Winner of craig lowndes, and a Circuit of phillip island grand prix circuit?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_17 WHERE high_assists = \"raymond felton (5)\" AND record = \"35\u201344\"",
        "context": "CREATE TABLE table_name_17 (location_attendance VARCHAR, high_assists VARCHAR, record VARCHAR)",
        "question": "Which Location Attendance has a High assists of raymond felton (5), and a Record of 35\u201344?"
    },
    {
        "answer": "SELECT service_charge FROM table_name_42 WHERE designation = \"12-pdr light\"",
        "context": "CREATE TABLE table_name_42 (service_charge VARCHAR, designation VARCHAR)",
        "question": "What is the service chage of the boat howitzers with a 12-pdr light destination?"
    },
    {
        "answer": "SELECT bore FROM table_name_8 WHERE designation = \"12-pdr heavy\"",
        "context": "CREATE TABLE table_name_8 (bore VARCHAR, designation VARCHAR)",
        "question": "What is the bore of the boat howitzers with a 12-pdr heavy designation?"
    },
    {
        "answer": "SELECT COUNT(pick__number) FROM table_name_22 WHERE position = \"defensive end\" AND overall < 33",
        "context": "CREATE TABLE table_name_22 (pick__number VARCHAR, position VARCHAR, overall VARCHAR)",
        "question": "How many Picks have a Position of defensive end, and an Overall smaller than 33?"
    },
    {
        "answer": "SELECT moving_from FROM table_name_64 WHERE country = \"esp\" AND transfer_fee = \"youth system\"",
        "context": "CREATE TABLE table_name_64 (moving_from VARCHAR, country VARCHAR, transfer_fee VARCHAR)",
        "question": "What is moving from esp with transfer fee of youth system?"
    },
    {
        "answer": "SELECT score FROM table_name_26 WHERE partnering = \"alexander waske\" AND opponents_in_the_final = \"rafael nadal bartolom\u00e9 salv\u00e1-vidal\"",
        "context": "CREATE TABLE table_name_26 (score VARCHAR, partnering VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "What is Score, when Partnering is \"Alexander Waske\", and when Opponents In The Final is \"Rafael Nadal Bartolom\u00e9 Salv\u00e1-Vidal\"?"
    },
    {
        "answer": "SELECT MAX(gold) FROM table_name_17 WHERE silver < 7 AND bronze < 0",
        "context": "CREATE TABLE table_name_17 (gold INTEGER, silver VARCHAR, bronze VARCHAR)",
        "question": "What is the highest Gold that has a Silver less than 7 and Bronze less than 0"
    },
    {
        "answer": "SELECT points FROM table_name_86 WHERE points_for = \"points for\"",
        "context": "CREATE TABLE table_name_86 (points VARCHAR, points_for VARCHAR)",
        "question": "when points for was points for what was the points?"
    },
    {
        "answer": "SELECT surface FROM table_name_71 WHERE opponents = \"sebasti\u00e1n decoud santiago giraldo\"",
        "context": "CREATE TABLE table_name_71 (surface VARCHAR, opponents VARCHAR)",
        "question": "Opponents of sebasti\u00e1n decoud santiago giraldo had what surface?"
    },
    {
        "answer": "SELECT player FROM table_name_2 WHERE year_born < 1985 AND height < 2.02",
        "context": "CREATE TABLE table_name_2 (player VARCHAR, year_born VARCHAR, height VARCHAR)",
        "question": "Who is the player born before 1985 who is less than 2.02 tall?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_29 WHERE name = \"thomas morgenstern\" AND points > 288.7",
        "context": "CREATE TABLE table_name_29 (rank INTEGER, name VARCHAR, points VARCHAR)",
        "question": "Which Rank that a Name of thomas morgenstern, and Points larger than 288.7?"
    },
    {
        "answer": "SELECT call_sign FROM table_name_81 WHERE frequency = \"fm 105.3\"",
        "context": "CREATE TABLE table_name_81 (call_sign VARCHAR, frequency VARCHAR)",
        "question": "Which call sign has a frequency of FM 105.3?"
    },
    {
        "answer": "SELECT MIN(wind__m_s_) FROM table_name_16 WHERE nation = \"united states\" AND athlete = \"brenda morehead\"",
        "context": "CREATE TABLE table_name_16 (wind__m_s_ INTEGER, nation VARCHAR, athlete VARCHAR)",
        "question": "what is the wind speed when brenda morehead was in the united states?"
    },
    {
        "answer": "SELECT champion FROM table_name_39 WHERE course = \"richmond river\" AND date = \"june 13\"",
        "context": "CREATE TABLE table_name_39 (champion VARCHAR, course VARCHAR, date VARCHAR)",
        "question": "WHAT CHAMPION HAD RICHMOND RIVER COURSE ON JUNE 13?"
    },
    {
        "answer": "SELECT SUM(europe) FROM table_name_72 WHERE others = 0 AND league < 328 AND position = \"mf\"",
        "context": "CREATE TABLE table_name_72 (europe INTEGER, position VARCHAR, others VARCHAR, league VARCHAR)",
        "question": "What is the sum of the Europe totals for players with other appearances of 0, league appearances under 328, and a position of MF?"
    },
    {
        "answer": "SELECT investment_income FROM table_name_39 WHERE occupational_pensions = \"7%\" AND working_tax_credit = \"2%\" AND other_social_security_benefits = \"6%\"",
        "context": "CREATE TABLE table_name_39 (investment_income VARCHAR, other_social_security_benefits VARCHAR, occupational_pensions VARCHAR, working_tax_credit VARCHAR)",
        "question": "Occupational pensions of 7%, and a Working tax credit of 2%, and a Other social security benefits of 6% has what investment income?"
    },
    {
        "answer": "SELECT winner FROM table_name_95 WHERE course = \"florence to genoa\"",
        "context": "CREATE TABLE table_name_95 (winner VARCHAR, course VARCHAR)",
        "question": "Who is the winner of the Florence to Genoa course?"
    },
    {
        "answer": "SELECT investment_income FROM table_name_67 WHERE state_pensions = \"7%\" AND self_employed = \"7%\" AND other_income_sources = \"2%\"",
        "context": "CREATE TABLE table_name_67 (investment_income VARCHAR, other_income_sources VARCHAR, state_pensions VARCHAR, self_employed VARCHAR)",
        "question": "State pensions of 7%, and a Self employed of 7%, and a Other income sources of 2% has what investment income?"
    },
    {
        "answer": "SELECT occupational_pensions FROM table_name_34 WHERE other_income_sources = \"2%\" AND state_pensions = \"7%\" AND working_tax_credit = \"2%\" AND employment___salaries_ & _wages_ = \"66%\"",
        "context": "CREATE TABLE table_name_34 (occupational_pensions VARCHAR, working_tax_credit VARCHAR, employment___salaries_ VARCHAR, _wages_ VARCHAR, other_income_sources VARCHAR, state_pensions VARCHAR)",
        "question": "Other income sources of 2%, and a State pensions of 7%, and a Working tax credit of 2%, and a Employment ( salaries & wages) of 66% has what occupational pensions?"
    },
    {
        "answer": "SELECT working_tax_credit FROM table_name_20 WHERE employment___salaries_ & _wages_ = \"64%\" AND occupational_pensions = \"6%\"",
        "context": "CREATE TABLE table_name_20 (working_tax_credit VARCHAR, occupational_pensions VARCHAR, employment___salaries_ VARCHAR, _wages_ VARCHAR)",
        "question": "Employment ( salaries & wages) of 64%, and a Occupational pensions of 6% has what working tax credit?"
    },
    {
        "answer": "SELECT opponent FROM table_name_43 WHERE season = \"2008\u201309\" AND final_score = \"2\u20133 l\"",
        "context": "CREATE TABLE table_name_43 (opponent VARCHAR, season VARCHAR, final_score VARCHAR)",
        "question": "What team was the opponent in the 2008\u201309 season, with a final score of 2\u20133 l?"
    },
    {
        "answer": "SELECT SUM(bronze) FROM table_name_89 WHERE rank = 5 AND nation = \"poland\" AND gold < 0",
        "context": "CREATE TABLE table_name_89 (bronze INTEGER, gold VARCHAR, rank VARCHAR, nation VARCHAR)",
        "question": "what is the sum of bronze when the rank is 5, the nation is poland and gold is less than 0?"
    },
    {
        "answer": "SELECT losing_bp FROM table_name_72 WHERE played = \"22\" AND try_bp = \"9\"",
        "context": "CREATE TABLE table_name_72 (losing_bp VARCHAR, played VARCHAR, try_bp VARCHAR)",
        "question": "Name the Losing BP with 22 played and 9 Try BP."
    },
    {
        "answer": "SELECT time___et__ FROM table_name_3 WHERE opponent = \"new england patriots\"",
        "context": "CREATE TABLE table_name_3 (time___et__ VARCHAR, opponent VARCHAR)",
        "question": "When is the Opponent of new england patriots?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_name_27 WHERE game > 2 AND team = \"@ denver\" AND high_assists = \"kobe bryant (5)\"",
        "context": "CREATE TABLE table_name_27 (high_rebounds VARCHAR, high_assists VARCHAR, game VARCHAR, team VARCHAR)",
        "question": "Which High rebounds have a Game larger than 2, and a Team of @ denver, and High assists of kobe bryant (5)?"
    },
    {
        "answer": "SELECT AVG(sales__billion_) AS $_ FROM table_name_18 WHERE market_value__billion_$_ = 204.9 AND profits__billion_$_ < 20.6",
        "context": "CREATE TABLE table_name_18 (sales__billion_ INTEGER, market_value__billion_$_ VARCHAR, profits__billion_$_ VARCHAR)",
        "question": "What is the average sales for the company with market value of 204.9bil and profits under 20.6bil?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_82 WHERE engine = \"offenhauser l4\" AND chassis = \"kurtis kraft 500c\" AND entrant = \"federal engineering\"",
        "context": "CREATE TABLE table_name_82 (year INTEGER, entrant VARCHAR, engine VARCHAR, chassis VARCHAR)",
        "question": "Which is the latest year that has an engine of Offenhauser l4, a chassis of Kurtis Kraft 500c, and the entrant of Federal Engineering?"
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_name_15 WHERE name = \"john ayres\"",
        "context": "CREATE TABLE table_name_15 (pick__number INTEGER, name VARCHAR)",
        "question": "What is the lowest pick # of John Ayres?"
    },
    {
        "answer": "SELECT final_score FROM table_name_31 WHERE year = 2007 AND competition = \"world league\" AND town = \"novi sad\" AND opponent = \"italy\"",
        "context": "CREATE TABLE table_name_31 (final_score VARCHAR, opponent VARCHAR, town VARCHAR, year VARCHAR, competition VARCHAR)",
        "question": "What is the final score in 2007 for the world league in novi sad played against Italy?"
    },
    {
        "answer": "SELECT last_match FROM table_name_96 WHERE manner_of_departure = \"resigned\" AND date_of_vacancy = \"round 1\"",
        "context": "CREATE TABLE table_name_96 (last_match VARCHAR, manner_of_departure VARCHAR, date_of_vacancy VARCHAR)",
        "question": "What is the last match with a resigned manner of departure and a round 1 date of vacancy?"
    },
    {
        "answer": "SELECT rider FROM table_name_37 WHERE total_points < 342 AND rides < 76 AND matches = 7 AND bonus_pts > 2",
        "context": "CREATE TABLE table_name_37 (rider VARCHAR, bonus_pts VARCHAR, matches VARCHAR, total_points VARCHAR, rides VARCHAR)",
        "question": "Which rider had less than 342 points in no more than 76 rides in 7 matches with more than 2 bonus points?"
    },
    {
        "answer": "SELECT COUNT(total_viewers) FROM table_name_82 WHERE share = \"16.2%\" AND episode_no < 1",
        "context": "CREATE TABLE table_name_82 (total_viewers VARCHAR, share VARCHAR, episode_no VARCHAR)",
        "question": "How many episodes have a share of 16.2% and an episode number of less than 1?"
    },
    {
        "answer": "SELECT MIN(car__number) FROM table_name_11 WHERE current_car = \"son-e-wa\" AND year_started < 2012",
        "context": "CREATE TABLE table_name_11 (car__number INTEGER, current_car VARCHAR, year_started VARCHAR)",
        "question": "WHAT WAS THE LOWEST CAR # WITH SON-E-WA, AND 2012 START YEAR?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_89 WHERE date = \"may 7\"",
        "context": "CREATE TABLE table_name_89 (attendance INTEGER, date VARCHAR)",
        "question": "What's greatest attendance on May 7?"
    },
    {
        "answer": "SELECT left_office FROM table_name_58 WHERE years_in_office = \"2\" AND death = \"october 23, 1887\"",
        "context": "CREATE TABLE table_name_58 (left_office VARCHAR, years_in_office VARCHAR, death VARCHAR)",
        "question": "On what date did the person leave office who died on October 23, 1887 and who served 2 years?"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_1 WHERE points < 5 AND class = \"500cc\" AND team = \"norton\" AND year > 1955",
        "context": "CREATE TABLE table_name_1 (wins INTEGER, year VARCHAR, team VARCHAR, points VARCHAR, class VARCHAR)",
        "question": "What is the largest amount of wins when there are less than 5 points, the class is 500cc, the team is norton, and the year is more recent than 1955?"
    },
    {
        "answer": "SELECT crowd FROM table_name_94 WHERE away_team = \"south dragons\" AND venue = \"gold coast convention centre\"",
        "context": "CREATE TABLE table_name_94 (crowd VARCHAR, away_team VARCHAR, venue VARCHAR)",
        "question": "How big was the crowd when the South Dragons were the away team at the Gold Coast Convention Centre?"
    },
    {
        "answer": "SELECT stage FROM table_name_36 WHERE points_classification = \"daniele bennati\" AND general_classification = \"giovanni visconti\"",
        "context": "CREATE TABLE table_name_36 (stage VARCHAR, points_classification VARCHAR, general_classification VARCHAR)",
        "question": "What is teh stage with Daniele Bennati as the points classification and Giovanni VIsconti as the general classification?"
    },
    {
        "answer": "SELECT largest_metropolitan_area FROM table_name_99 WHERE name = \"central-west\"",
        "context": "CREATE TABLE table_name_99 (largest_metropolitan_area VARCHAR, name VARCHAR)",
        "question": "What is the largest metropolitan area of the Central-West?"
    },
    {
        "answer": "SELECT general_classification FROM table_name_21 WHERE points_classification = \"daniele bennati\" AND young_rider_classification = \"morris possoni\" AND stage = \"3\"",
        "context": "CREATE TABLE table_name_21 (general_classification VARCHAR, stage VARCHAR, points_classification VARCHAR, young_rider_classification VARCHAR)",
        "question": "What is the general classification of the stage 3 with Daniele Bennati as the points classification and Morris Possoni as the young rider classification."
    },
    {
        "answer": "SELECT general_classification FROM table_name_37 WHERE young_rider_classification = \"riccardo ricc\u00f2\"",
        "context": "CREATE TABLE table_name_37 (general_classification VARCHAR, young_rider_classification VARCHAR)",
        "question": "What is the general classification with riccardo ricc\u00f2 as the young rider classification?"
    },
    {
        "answer": "SELECT points_classification FROM table_name_93 WHERE young_rider_classification = \"chris anker s\u00f8rensen\" AND general_classification = \"christian vande velde\"",
        "context": "CREATE TABLE table_name_93 (points_classification VARCHAR, young_rider_classification VARCHAR, general_classification VARCHAR)",
        "question": "What is the point classification with chris anker s\u00f8rensen as the young rider classification and Christian vande velde as the general classification?"
    },
    {
        "answer": "SELECT leader_at_the_summit FROM table_name_78 WHERE stage > 14 AND category = 1 AND start = \"saint-girons\" AND finish = \"cauterets\"",
        "context": "CREATE TABLE table_name_78 (leader_at_the_summit VARCHAR, finish VARCHAR, start VARCHAR, stage VARCHAR, category VARCHAR)",
        "question": "Who was the leader at the summit when the stage was larger than 14, the category was 1, the start was Saint-Girons, and the finish was Cauterets?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_56 WHERE start = \"saint-gaudens\" AND stage < 15",
        "context": "CREATE TABLE table_name_56 (year INTEGER, start VARCHAR, stage VARCHAR)",
        "question": "What was the earliest year that had a start of Saint-Gaudens and a stage smaller than 15?"
    },
    {
        "answer": "SELECT rank FROM table_name_31 WHERE venue = \"bellerive oval , hobart\" AND margin = \"115 runs\"",
        "context": "CREATE TABLE table_name_31 (rank VARCHAR, venue VARCHAR, margin VARCHAR)",
        "question": "What is the Rank that has a Venue of bellerive oval , hobart, and a Margin of 115 runs?"
    },
    {
        "answer": "SELECT title FROM table_name_73 WHERE leading_lady = \"ann rutherford\" AND director = \"joseph kane\"",
        "context": "CREATE TABLE table_name_73 (title VARCHAR, leading_lady VARCHAR, director VARCHAR)",
        "question": "In which title was Ann Rutherford the leading lady for Joseph Kane?"
    },
    {
        "answer": "SELECT city_of_license FROM table_name_64 WHERE call_sign = \"w220ba\"",
        "context": "CREATE TABLE table_name_64 (city_of_license VARCHAR, call_sign VARCHAR)",
        "question": "Which City of license has a Call sign of w220ba?"
    },
    {
        "answer": "SELECT MAX(erp_w) FROM table_name_98 WHERE frequency_mhz = \"89.3 fm\"",
        "context": "CREATE TABLE table_name_98 (erp_w INTEGER, frequency_mhz VARCHAR)",
        "question": "Which ERP W has a Frequency MHz of 89.3 fm?"
    },
    {
        "answer": "SELECT perth FROM table_name_50 WHERE auckland = \"yes\" AND gold_coast = \"yes\"",
        "context": "CREATE TABLE table_name_50 (perth VARCHAR, auckland VARCHAR, gold_coast VARCHAR)",
        "question": "Which Perth has Auckland yes and Gold Coast yes?"
    },
    {
        "answer": "SELECT year FROM table_name_43 WHERE category = \"best female pop vocal album\" AND result = \"won\"",
        "context": "CREATE TABLE table_name_43 (year VARCHAR, category VARCHAR, result VARCHAR)",
        "question": "Name the year with the best female pop vocal album and result of won"
    },
    {
        "answer": "SELECT money___\u00a3__ FROM table_name_62 WHERE score = 68 - 67 - 69 - 71 = 275",
        "context": "CREATE TABLE table_name_62 (money___\u00a3__ VARCHAR, score VARCHAR)",
        "question": "How much money does the player with a 68-67-69-71=275 score have?"
    },
    {
        "answer": "SELECT MAX(total) FROM table_name_74 WHERE rank = 6 AND bronze = 2 AND gold > 0",
        "context": "CREATE TABLE table_name_74 (total INTEGER, gold VARCHAR, rank VARCHAR, bronze VARCHAR)",
        "question": "Which is the highest total at rank 6, bronze 2, and gold larger than 0?"
    },
    {
        "answer": "SELECT score FROM table_name_18 WHERE home_team = \"san jose\" AND venue = \"spartan stadium\"",
        "context": "CREATE TABLE table_name_18 (score VARCHAR, home_team VARCHAR, venue VARCHAR)",
        "question": "What was the score at Spartan Stadium when San Jose was the Home team?"
    },
    {
        "answer": "SELECT years FROM table_name_31 WHERE jersey_number_s_ = 41 AND player = \"elden campbell category:articles with hcards\"",
        "context": "CREATE TABLE table_name_31 (years VARCHAR, jersey_number_s_ VARCHAR, player VARCHAR)",
        "question": "What years did Elden Campbell category:articles with hcards and jersesy number of 41 play?"
    },
    {
        "answer": "SELECT city_of_license FROM table_name_71 WHERE callsign = \"kgns-dt3\"",
        "context": "CREATE TABLE table_name_71 (city_of_license VARCHAR, callsign VARCHAR)",
        "question": "In which city is the network with the callsign kgns-dt3 licensed?"
    },
    {
        "answer": "SELECT COUNT(introduced) FROM table_name_80 WHERE retired > 1994 AND manufacturer = \"fokker\"",
        "context": "CREATE TABLE table_name_80 (introduced VARCHAR, retired VARCHAR, manufacturer VARCHAR)",
        "question": "How many in the introduced segment retired later than 1994 and had Fokker as a manufacturer?"
    },
    {
        "answer": "SELECT competition FROM table_name_6 WHERE year < 2007 AND venue = \"gothenburg, sweden\"",
        "context": "CREATE TABLE table_name_6 (competition VARCHAR, year VARCHAR, venue VARCHAR)",
        "question": "What competition did he compete in before 2007 in gothenburg, sweden?"
    },
    {
        "answer": "SELECT SUM(draws) FROM table_name_19 WHERE position < 4 AND wins = 11 AND points < 38",
        "context": "CREATE TABLE table_name_19 (draws INTEGER, points VARCHAR, position VARCHAR, wins VARCHAR)",
        "question": "What was the sum of the draws for the team that had 11 wins, less than 38 points, and a position smaller than 4?"
    },
    {
        "answer": "SELECT MIN(conceded) FROM table_name_77 WHERE wins < 8 AND scored = 21 AND points < 23",
        "context": "CREATE TABLE table_name_77 (conceded INTEGER, points VARCHAR, wins VARCHAR, scored VARCHAR)",
        "question": "What is the lowest number conceded for the team that had less than 8 wins, scored 21, and had less than 23 points?"
    },
    {
        "answer": "SELECT pos FROM table_name_20 WHERE tier > 1 AND cup_competitions = \"pokal slovenije 1. round\"",
        "context": "CREATE TABLE table_name_20 (pos VARCHAR, tier VARCHAR, cup_competitions VARCHAR)",
        "question": "What is the pos with more than 1 tier during Pokal Slovenije 1. round?"
    },
    {
        "answer": "SELECT manager_1 FROM table_name_24 WHERE captain = \"neil redfearn\"",
        "context": "CREATE TABLE table_name_24 (manager_1 VARCHAR, captain VARCHAR)",
        "question": "Who was the manager for the team with captain Neil Redfearn?"
    },
    {
        "answer": "SELECT captain FROM table_name_56 WHERE team = \"crystal palace\"",
        "context": "CREATE TABLE table_name_56 (captain VARCHAR, team VARCHAR)",
        "question": "Who was the team captain for Crystal Palace?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_60 WHERE school = \"washington state university\"",
        "context": "CREATE TABLE table_name_60 (round INTEGER, school VARCHAR)",
        "question": "What is the highest round that has a draftee from Washington State University?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_42 WHERE entrant = \"peter whitehead\" AND chassis = \"ferrari 125\"",
        "context": "CREATE TABLE table_name_42 (points INTEGER, entrant VARCHAR, chassis VARCHAR)",
        "question": "What is the total number of Points that Peter Whitehead earned in a Ferrari 125?"
    },
    {
        "answer": "SELECT record FROM table_name_32 WHERE score = \"1\u20133\" AND visitor = \"chicago black hawks\" AND date = \"november 15\"",
        "context": "CREATE TABLE table_name_32 (record VARCHAR, date VARCHAR, score VARCHAR, visitor VARCHAR)",
        "question": "What is the Record of the game on November 15 against Visitor Chicago Black Hawks with a Score of 1\u20133?"
    },
    {
        "answer": "SELECT AVG(_percentage_2006) FROM table_name_70 WHERE seats_2001 > 15 AND _percentage_2001 > 100",
        "context": "CREATE TABLE table_name_70 (_percentage_2006 INTEGER, seats_2001 VARCHAR, _percentage_2001 VARCHAR)",
        "question": "When seats for 2001 is greater than 15 and % 2001 is greater than 100, what is the % 2006?"
    },
    {
        "answer": "SELECT circumstances FROM table_name_18 WHERE nature_of_incident = \"hostile\" AND location = \"road to jalalabad\"",
        "context": "CREATE TABLE table_name_18 (circumstances VARCHAR, nature_of_incident VARCHAR, location VARCHAR)",
        "question": "What were the circumstances of the Hostile incident on the road to Jalalabad?"
    },
    {
        "answer": "SELECT record FROM table_name_32 WHERE location_attendance = \"madison square garden 19,009\"",
        "context": "CREATE TABLE table_name_32 (record VARCHAR, location_attendance VARCHAR)",
        "question": "What is Record, when Location Attendance, is Madison Square Garden 19,009?"
    },
    {
        "answer": "SELECT Chinese AS name FROM table_name_51 WHERE status = \"eliminated\" AND country = \"singapore\" AND index = \"f9\"",
        "context": "CREATE TABLE table_name_51 (Chinese VARCHAR, index VARCHAR, status VARCHAR, country VARCHAR)",
        "question": "What is the Chinese name of the Eliminated player from Singapore in Index f9?"
    },
    {
        "answer": "SELECT name FROM table_name_67 WHERE country = \"malaysia, kuala lumpur\" AND index = \"f8\"",
        "context": "CREATE TABLE table_name_67 (name VARCHAR, country VARCHAR, index VARCHAR)",
        "question": "What is the name of the player from Malaysia, Kuala Lumpur in Index f8?"
    },
    {
        "answer": "SELECT placing FROM table_name_58 WHERE beat_by = \"won\" AND distance = \"8gf\"",
        "context": "CREATE TABLE table_name_58 (placing VARCHAR, beat_by VARCHAR, distance VARCHAR)",
        "question": "What was the placing of the race in which Chic won by 8gf?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_95 WHERE winner = \"ivanovic\" AND \"ivanovic\" > 4 AND round = \"r16\"",
        "context": "CREATE TABLE table_name_95 (year INTEGER, round VARCHAR, winner VARCHAR)",
        "question": "What year did Ivanovic win with Ivanovic greater than 4 and round of R16?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_38 WHERE remixed_by = \"laurent boutonnat\"",
        "context": "CREATE TABLE table_name_38 (year INTEGER, remixed_by VARCHAR)",
        "question": "What the highest Year with a Remixed by Laurent Boutonnat?"
    },
    {
        "answer": "SELECT AVG(inhabitants) FROM table_name_36 WHERE party = \"south tyrolean people's party\" AND municipality = \"bruneck\" AND election > 2010",
        "context": "CREATE TABLE table_name_36 (inhabitants INTEGER, election VARCHAR, party VARCHAR, municipality VARCHAR)",
        "question": "Which Inhabitants has a Party of south tyrolean people's party, a Municipality of bruneck, and an Election larger than 2010?"
    },
    {
        "answer": "SELECT award FROM table_name_94 WHERE result = \"won\" AND category = \"choice tv villain\" AND year > 2008",
        "context": "CREATE TABLE table_name_94 (award VARCHAR, year VARCHAR, result VARCHAR, category VARCHAR)",
        "question": "Name the award won for category of choice tv villain in years after 2008"
    },
    {
        "answer": "SELECT SUM(week) FROM table_name_35 WHERE result = \"w 40\u201362\"",
        "context": "CREATE TABLE table_name_35 (week INTEGER, result VARCHAR)",
        "question": "What is the number week with a result of w 40\u201362?"
    },
    {
        "answer": "SELECT adelaide FROM table_name_31 WHERE sydney = \"yes\" AND melbourne = \"yes\" AND perth = \"no\"",
        "context": "CREATE TABLE table_name_31 (adelaide VARCHAR, perth VARCHAR, sydney VARCHAR, melbourne VARCHAR)",
        "question": "Which Adelaide has Sydney yes, Melbourne yes, and Perth no?"
    },
    {
        "answer": "SELECT perth FROM table_name_56 WHERE gold_coast = \"yes\" AND sydney = \"yes\" AND melbourne = \"yes\" AND adelaide = \"yes\"",
        "context": "CREATE TABLE table_name_56 (perth VARCHAR, adelaide VARCHAR, melbourne VARCHAR, gold_coast VARCHAR, sydney VARCHAR)",
        "question": "Which Perth has Gold Coast yes, Sydney yes, Melbourne yes, and Adelaide yes?"
    },
    {
        "answer": "SELECT melbourne FROM table_name_11 WHERE gold_coast = \"yes\" AND perth = \"cancelled\" AND adelaide = \"cancelled\"",
        "context": "CREATE TABLE table_name_11 (melbourne VARCHAR, adelaide VARCHAR, gold_coast VARCHAR, perth VARCHAR)",
        "question": "Which Melbourne has Gold Coast yes, Perth cancelled, and Adelaide cancelled?"
    },
    {
        "answer": "SELECT gross FROM table_name_33 WHERE territory = \"united kingdom\"",
        "context": "CREATE TABLE table_name_33 (gross VARCHAR, territory VARCHAR)",
        "question": "What is the gross in the United Kingdom?"
    },
    {
        "answer": "SELECT condition FROM table_name_41 WHERE partial_thromboplastin_time = \"prolonged\" AND platelet_count = \"unaffected\" AND bleeding_time = \"prolonged\"",
        "context": "CREATE TABLE table_name_41 (condition VARCHAR, bleeding_time VARCHAR, partial_thromboplastin_time VARCHAR, platelet_count VARCHAR)",
        "question": "Name the condition for partial thromboplastin time of prolonged and platelet count of unaffected with bleeding time of prolonged"
    },
    {
        "answer": "SELECT AVG(popular_vote) FROM table_name_32 WHERE liberal_leader = \"king\" AND seats_won > 116 AND year = \"1921\"",
        "context": "CREATE TABLE table_name_32 (popular_vote INTEGER, year VARCHAR, liberal_leader VARCHAR, seats_won VARCHAR)",
        "question": "Which Popular vote has a Liberal leader of king, and Seats won larger than 116, and a Year of 1921?"
    },
    {
        "answer": "SELECT COUNT(liberal_candidates) FROM table_name_94 WHERE liberal_leader = \"pearson\" AND _percentage_of_popular_vote = \"40.2%\" AND seats_won < 131",
        "context": "CREATE TABLE table_name_94 (liberal_candidates VARCHAR, seats_won VARCHAR, liberal_leader VARCHAR, _percentage_of_popular_vote VARCHAR)",
        "question": "How many Liberal candidates have a Liberal leader of pearson, and a % of popular vote of 40.2%, and Seats won smaller than 131?"
    },
    {
        "answer": "SELECT condition FROM table_name_52 WHERE platelet_count = \"unaffected\" AND bleeding_time = \"unaffected\" AND prothrombin_time = \"prolonged\" AND partial_thromboplastin_time = \"prolonged\"",
        "context": "CREATE TABLE table_name_52 (condition VARCHAR, partial_thromboplastin_time VARCHAR, prothrombin_time VARCHAR, platelet_count VARCHAR, bleeding_time VARCHAR)",
        "question": "Name the condition with platelet count of unaffected and bleeding time of unaffected with prothrombin time of prolonged and partial thromboplastin time of prolonged"
    },
    {
        "answer": "SELECT score FROM table_name_25 WHERE game < 61 AND february < 11 AND opponent = \"@ buffalo sabres\"",
        "context": "CREATE TABLE table_name_25 (score VARCHAR, opponent VARCHAR, game VARCHAR, february VARCHAR)",
        "question": "What is Score, when Game is less than 61, when February is less than 11, and when Opponent is \"@ Buffalo Sabres\"?"
    },
    {
        "answer": "SELECT score FROM table_name_77 WHERE runner_up = \"utc\" AND winners = \"saint-gaudens bears\"",
        "context": "CREATE TABLE table_name_77 (score VARCHAR, runner_up VARCHAR, winners VARCHAR)",
        "question": "What is the score of the match with UTC as the runner-up and Saint-Gaudens Bears as the winners?"
    },
    {
        "answer": "SELECT year FROM table_name_3 WHERE runner_up = \"utc\" AND winners = \"saint-gaudens bears\"",
        "context": "CREATE TABLE table_name_3 (year VARCHAR, runner_up VARCHAR, winners VARCHAR)",
        "question": "Which year had UTC as the runner-up and Saint-Gaudens Bears as the winners?"
    },
    {
        "answer": "SELECT COUNT(draws) FROM table_name_12 WHERE name = \"ali said gouled\"",
        "context": "CREATE TABLE table_name_12 (draws VARCHAR, name VARCHAR)",
        "question": "what is the number of draws for ali said gouled?"
    },
    {
        "answer": "SELECT position FROM table_name_50 WHERE nationality = \"united states\" AND jersey_number_s_ = \"12\" AND player = \"tom black category:articles with hcards\"",
        "context": "CREATE TABLE table_name_50 (position VARCHAR, player VARCHAR, nationality VARCHAR, jersey_number_s_ VARCHAR)",
        "question": "What is Postition, when Nationality is United States, when Jersey Number(s) is 12, and when Player is Tom Black Category:Articles With hCards?"
    },
    {
        "answer": "SELECT school_colors FROM table_name_66 WHERE main_campus_location = \"overland park\"",
        "context": "CREATE TABLE table_name_66 (school_colors VARCHAR, main_campus_location VARCHAR)",
        "question": "What are the school colors for the college whose main campus is overland park?"
    },
    {
        "answer": "SELECT recopa_sudamericana_1996 FROM table_name_10 WHERE copa_conmebol_1996 = \"did not qualify\" AND team = \"flamengo\"",
        "context": "CREATE TABLE table_name_10 (recopa_sudamericana_1996 VARCHAR, copa_conmebol_1996 VARCHAR, team VARCHAR)",
        "question": "What is the recoupa sudaamericana 1996 result of team flamengo, which did not qualify for the copa conmebol 1996?"
    },
    {
        "answer": "SELECT tier FROM table_name_59 WHERE opponent_in_the_final = \"annalisa bona\"",
        "context": "CREATE TABLE table_name_59 (tier VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "What was the tier versus Annalisa bona?"
    },
    {
        "answer": "SELECT version FROM table_name_82 WHERE format = \"cd\" AND date = \"june 12, 2008\" AND region = \"cyprus\"",
        "context": "CREATE TABLE table_name_82 (version VARCHAR, region VARCHAR, format VARCHAR, date VARCHAR)",
        "question": "What is the Version of the CD release on June 12, 2008 in Cyprus?"
    },
    {
        "answer": "SELECT MIN(game) FROM table_name_14 WHERE inning = \"6th\" AND opposing_pitcher = \"cliff curtis\"",
        "context": "CREATE TABLE table_name_14 (game INTEGER, inning VARCHAR, opposing_pitcher VARCHAR)",
        "question": "What is the lowest Game where Inning is 6th, and the Opposing Pitcher is cliff curtis?"
    },
    {
        "answer": "SELECT nominating_festival FROM table_name_93 WHERE film = \"un cartus de kent si un pachet de cafea\"",
        "context": "CREATE TABLE table_name_93 (nominating_festival VARCHAR, film VARCHAR)",
        "question": "Name the nominating festival for un cartus de kent si un pachet de cafea"
    },
    {
        "answer": "SELECT result_f___a FROM table_name_22 WHERE round = \"round 5\"",
        "context": "CREATE TABLE table_name_22 (result_f___a VARCHAR, round VARCHAR)",
        "question": "What was the result F-A for round 5?"
    },
    {
        "answer": "SELECT event FROM table_name_32 WHERE city = \"copenhagen\"",
        "context": "CREATE TABLE table_name_32 (event VARCHAR, city VARCHAR)",
        "question": "What was the Event in the city of copenhagen?"
    },
    {
        "answer": "SELECT result FROM table_name_69 WHERE year = 1994 AND award = \"song of the year\"",
        "context": "CREATE TABLE table_name_69 (result VARCHAR, year VARCHAR, award VARCHAR)",
        "question": "What was the result for song of the year award in 1994?"
    },
    {
        "answer": "SELECT money___$__ FROM table_name_77 WHERE player = \"trevor immelman\"",
        "context": "CREATE TABLE table_name_77 (money___$__ VARCHAR, player VARCHAR)",
        "question": "what is the money for trevor immelman?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_59 WHERE manager = \"marty berghammer\" AND finish = \"1st\"",
        "context": "CREATE TABLE table_name_59 (year INTEGER, manager VARCHAR, finish VARCHAR)",
        "question": "Manager of marty berghammer, and a Finish of 1st involved what lowest year?"
    },
    {
        "answer": "SELECT location FROM table_name_67 WHERE game > 2 AND time = \"2:56\"",
        "context": "CREATE TABLE table_name_67 (location VARCHAR, game VARCHAR, time VARCHAR)",
        "question": "What location has more than 2 games with 2:56?"
    },
    {
        "answer": "SELECT SUM(seats_2006) FROM table_name_33 WHERE parties_and_voter_communities = \"voter turnout in %\" AND _percentage_2006 > 51.5",
        "context": "CREATE TABLE table_name_33 (seats_2006 INTEGER, parties_and_voter_communities VARCHAR, _percentage_2006 VARCHAR)",
        "question": "what is the total number of seats 2006 that has parties and voter turnout in % and whose %2006 is greater than 51.5?"
    },
    {
        "answer": "SELECT SUM(seats_2001) FROM table_name_91 WHERE parties_and_voter_communities = \"cdu\" AND seats_2006 > 10",
        "context": "CREATE TABLE table_name_91 (seats_2001 INTEGER, parties_and_voter_communities VARCHAR, seats_2006 VARCHAR)",
        "question": "what is the total number of seats 2001 with seats 2006 more than 10 and voter communities of cdu?"
    },
    {
        "answer": "SELECT company FROM table_name_69 WHERE price_in_usd = \"free / negotiable\"",
        "context": "CREATE TABLE table_name_69 (company VARCHAR, price_in_usd VARCHAR)",
        "question": "Name the Company which has a Price in USD of free / negotiable?"
    },
    {
        "answer": "SELECT attribute FROM table_name_15 WHERE cancelable = \"yes\" AND bubbles = \"yes\"",
        "context": "CREATE TABLE table_name_15 (attribute VARCHAR, cancelable VARCHAR, bubbles VARCHAR)",
        "question": "Which of the attributes has is cancelable and an answer of yes for bubbles?"
    },
    {
        "answer": "SELECT COUNT(*) AS $__ FROM table_name_15 WHERE country = \"united states\" AND score < 271 AND year > 1964 AND winner = \"bobby mitchell\"",
        "context": "",
        "question": "What is the total number of 1st prize ($) that has a United States country with a score lower than 271 and in a year after 1964 with a winner of Bobby Mitchell?"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_89 WHERE finish = \"30\"",
        "context": "CREATE TABLE table_name_89 (laps INTEGER, finish VARCHAR)",
        "question": "What is the highest laps with a 30 finish?"
    },
    {
        "answer": "SELECT MAX(Champions) AS league FROM table_name_48 WHERE total = 6 AND position = \"midfielder\"",
        "context": "CREATE TABLE table_name_48 (Champions INTEGER, total VARCHAR, position VARCHAR)",
        "question": "What is the most Champions League assists for those with a total of 6 and position of Midfielder?"
    },
    {
        "answer": "SELECT others FROM table_name_10 WHERE szdsz = \"4%\" AND fidesz = \"60%\"",
        "context": "CREATE TABLE table_name_10 (others VARCHAR, szdsz VARCHAR, fidesz VARCHAR)",
        "question": "What percentage of others have an SZDSZ of 4% and a Fidesz of 60%?"
    },
    {
        "answer": "SELECT AVG(fac___lc_apps) FROM table_name_46 WHERE cl_g > 0 AND pl_apps < 33 AND fac___lc_g = 0 AND fa_yc < 2",
        "context": "CREATE TABLE table_name_46 (fac___lc_apps INTEGER, fa_yc VARCHAR, fac___lc_g VARCHAR, cl_g VARCHAR, pl_apps VARCHAR)",
        "question": "What is the average FAC/LC apps with a CL G greater than 0, less than 33 PL apps, a FAC/LC G of 0, and less than 2 FA YC?"
    },
    {
        "answer": "SELECT date FROM table_name_14 WHERE others = \"5%\" AND szdsz = \"5%\"",
        "context": "CREATE TABLE table_name_14 (date VARCHAR, others VARCHAR, szdsz VARCHAR)",
        "question": "On what date do others have 5% with an SZDSZ of 5%?"
    },
    {
        "answer": "SELECT COUNT(pl_g) FROM table_name_74 WHERE cl_g < 7 AND cl_apps < 7 AND fa_yc = 0 AND player = \"pennant\"",
        "context": "CREATE TABLE table_name_74 (pl_g VARCHAR, player VARCHAR, fa_yc VARCHAR, cl_g VARCHAR, cl_apps VARCHAR)",
        "question": "What is the total PL G of player pennant, who has less than 7 CL G, less than 7 CL apps, and a FA YC of 0?"
    },
    {
        "answer": "SELECT original_title FROM table_name_10 WHERE film_title_used_in_nomination = \"dersu uzala\"",
        "context": "CREATE TABLE table_name_10 (original_title VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What is the original title of the film for which Dersu Uzala was nominated?"
    },
    {
        "answer": "SELECT outcome FROM table_name_34 WHERE opponents = \"darija jurak ana\u00efs laurendon\"",
        "context": "CREATE TABLE table_name_34 (outcome VARCHAR, opponents VARCHAR)",
        "question": "What was the outcome when darija jurak ana\u00efs laurendon was the opponent?"
    },
    {
        "answer": "SELECT date FROM table_name_49 WHERE outcome = \"runner-up\" AND score = \"4\u20136, 3\u20136\"",
        "context": "CREATE TABLE table_name_49 (date VARCHAR, outcome VARCHAR, score VARCHAR)",
        "question": "When was the outcome runner-up with a score of 4\u20136, 3\u20136?"
    },
    {
        "answer": "SELECT engine FROM table_name_21 WHERE rank = \"1st\" AND entrant = \"adt champion racing\"",
        "context": "CREATE TABLE table_name_21 (engine VARCHAR, rank VARCHAR, entrant VARCHAR)",
        "question": "What engine what in the vehicle when adt champion racing ranked in 1st place?"
    },
    {
        "answer": "SELECT built FROM table_name_48 WHERE sr_number < 2033 AND lb & sc_number < 18 AND notes = \"i2\" AND withdrawal = \"cannot handle non-empty timestamp argument! 1935\"",
        "context": "CREATE TABLE table_name_48 (built VARCHAR, withdrawal VARCHAR, notes VARCHAR, sr_number VARCHAR, lb VARCHAR, sc_number VARCHAR)",
        "question": "what is the built when s.r. number is less than 2033, lb&sc number is less than 18, notes is i2 and withdrawal is cannot handle non-empty timestamp argument! 1935?"
    },
    {
        "answer": "SELECT class FROM table_name_2 WHERE points < 206 AND chassis = \"audi r8\" AND entrant = \"adt champion racing\" AND rank = \"1st\"",
        "context": "CREATE TABLE table_name_2 (class VARCHAR, rank VARCHAR, entrant VARCHAR, points VARCHAR, chassis VARCHAR)",
        "question": "What was the class when adt champion racing ranked 1st with an audi r8 chassis, and less than 206 points?"
    },
    {
        "answer": "SELECT AVG(partial_failures) FROM table_name_87 WHERE rocket = \"ariane 5\"",
        "context": "CREATE TABLE table_name_87 (partial_failures INTEGER, rocket VARCHAR)",
        "question": "What were the average partial failures when the rocket was Ariane 5?"
    },
    {
        "answer": "SELECT winner_nominee_s_ FROM table_name_44 WHERE result = \"nominated\" AND film = \"rugrats go wild\"",
        "context": "CREATE TABLE table_name_44 (winner_nominee_s_ VARCHAR, result VARCHAR, film VARCHAR)",
        "question": "Who is nominated for the film Rugrats Go Wild?"
    },
    {
        "answer": "SELECT MIN(ovrs) FROM table_name_68 WHERE wkts > 13 AND econ < 3.21",
        "context": "CREATE TABLE table_name_68 (ovrs INTEGER, wkts VARCHAR, econ VARCHAR)",
        "question": "What is the lowest Ovrs, when Wkts is greater than 13, and when Econ is less than 3.21?"
    },
    {
        "answer": "SELECT MIN(failures) FROM table_name_28 WHERE launches = 1 AND partial_failures < 0",
        "context": "CREATE TABLE table_name_28 (failures INTEGER, launches VARCHAR, partial_failures VARCHAR)",
        "question": "What is the least amount of failures with 1 launch and 0 partial failures?"
    },
    {
        "answer": "SELECT to_par FROM table_name_71 WHERE score = 73 - 71 = 144",
        "context": "CREATE TABLE table_name_71 (to_par VARCHAR, score VARCHAR)",
        "question": "What is the to par for the score 73-71=144?"
    },
    {
        "answer": "SELECT distance FROM table_name_67 WHERE jockey = \"p. carbery\" AND result = \"2nd\"",
        "context": "CREATE TABLE table_name_67 (distance VARCHAR, jockey VARCHAR, result VARCHAR)",
        "question": "How far did p. carbery run to get 2nd?"
    },
    {
        "answer": "SELECT race FROM table_name_15 WHERE group = \"na\" AND result = \"4th\"",
        "context": "CREATE TABLE table_name_15 (race VARCHAR, group VARCHAR, result VARCHAR)",
        "question": "What was the race of the jockey in na group in 4th place?"
    },
    {
        "answer": "SELECT AVG(launches) FROM table_name_3 WHERE failures = 0 AND rocket = \"soyuz\" AND successes < 12",
        "context": "CREATE TABLE table_name_3 (launches INTEGER, successes VARCHAR, failures VARCHAR, rocket VARCHAR)",
        "question": "What are average launches with 0 failures, rocket of Soyuz, and less than 12 successes?"
    },
    {
        "answer": "SELECT venue FROM table_name_60 WHERE margin < 66 AND opponent = \"north queensland cowboys\"",
        "context": "CREATE TABLE table_name_60 (venue VARCHAR, margin VARCHAR, opponent VARCHAR)",
        "question": "Name the venue for margin less than 66 and opponent of north queensland cowboys"
    },
    {
        "answer": "SELECT name FROM table_name_9 WHERE opened__closing_date_if_defunct_ = \"1995\" AND length = \"miles (m)\" AND state = \"illinois\"",
        "context": "CREATE TABLE table_name_9 (name VARCHAR, state VARCHAR, opened__closing_date_if_defunct_ VARCHAR, length VARCHAR)",
        "question": "What is the Name with an Opened (closing date if defunct) of 1995 and has a Length of miles (m), in Illinois?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_67 WHERE final_position___tour = 54 AND final_position___vuelta > 55",
        "context": "CREATE TABLE table_name_67 (year INTEGER, final_position___tour VARCHAR, final_position___vuelta VARCHAR)",
        "question": "What is the average year that has a final Tour position of 54 and a final Vuelta position over 55?"
    },
    {
        "answer": "SELECT COUNT(final_position___giro) FROM table_name_45 WHERE year = 1971 AND final_position___tour > 50",
        "context": "CREATE TABLE table_name_45 (final_position___giro VARCHAR, year VARCHAR, final_position___tour VARCHAR)",
        "question": "How many Giro positions are associated with the year 1971 and Tour final positions over 50?"
    },
    {
        "answer": "SELECT qual_2 FROM table_name_27 WHERE best = \"1:27.642\"",
        "context": "CREATE TABLE table_name_27 (qual_2 VARCHAR, best VARCHAR)",
        "question": "What is Qual 2, when Best is 1:27.642?"
    },
    {
        "answer": "SELECT competition FROM table_name_71 WHERE venue = \"klfa stadium, cheras\" AND score = \"3-3\"",
        "context": "CREATE TABLE table_name_71 (competition VARCHAR, venue VARCHAR, score VARCHAR)",
        "question": "Venue of klfa stadium, cheras, and a Score of 3-3 had what competition?"
    },
    {
        "answer": "SELECT authority FROM table_name_64 WHERE roll < 254 AND decile = \"8\" AND area = \"te akau\"",
        "context": "CREATE TABLE table_name_64 (authority VARCHAR, area VARCHAR, roll VARCHAR, decile VARCHAR)",
        "question": "Name the authority for te akau with roll less than 254 and decile of 8"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_39 WHERE built < 2007 AND building = \"howard johnson hotel bucharest\"",
        "context": "CREATE TABLE table_name_39 (rank INTEGER, built VARCHAR, building VARCHAR)",
        "question": "What is the sum of Rank with a build year earlier than 2007 for the howard johnson hotel bucharest?"
    },
    {
        "answer": "SELECT score FROM table_name_39 WHERE home = \"boston bruins\" AND date = \"april 11\"",
        "context": "CREATE TABLE table_name_39 (score VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "What is the score of the Boston Bruins game from April 11?"
    },
    {
        "answer": "SELECT position FROM table_name_38 WHERE goals = \"0\" AND tries < 1 AND player = \"matt james\"",
        "context": "CREATE TABLE table_name_38 (position VARCHAR, player VARCHAR, goals VARCHAR, tries VARCHAR)",
        "question": "With 0 Goals and less than 1 Tries, what is Matt James position?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_91 WHERE school = \"university of southern california\"",
        "context": "CREATE TABLE table_name_91 (round INTEGER, school VARCHAR)",
        "question": "What is the earliest round drafted for a University of Southern California player?"
    },
    {
        "answer": "SELECT date_of_polling FROM table_name_2 WHERE polling_firm = \"forum research\" AND green = 7 AND liberal < 30",
        "context": "CREATE TABLE table_name_2 (date_of_polling VARCHAR, liberal VARCHAR, polling_firm VARCHAR, green VARCHAR)",
        "question": "On what date of polling was the Polling Firm forum research with 7 green and less than 30 liberals?"
    },
    {
        "answer": "SELECT polling_firm FROM table_name_96 WHERE link = \"html\" AND liberal < 36 AND green < 8 AND date_of_polling = \"september 26\u201328, 2011\"",
        "context": "CREATE TABLE table_name_96 (polling_firm VARCHAR, date_of_polling VARCHAR, green VARCHAR, link VARCHAR, liberal VARCHAR)",
        "question": "Which september 26\u201328, 2011 polling firm had a Link of html, less than 36 liberals,  and less than 8 green?"
    },
    {
        "answer": "SELECT 1 AS st_leg FROM table_name_3 WHERE team_1 = \"us mbila nzambi\"",
        "context": "CREATE TABLE table_name_3 (team_1 VARCHAR)",
        "question": "What is the 1st leg score when US Mbila Nzambi is team 1?"
    },
    {
        "answer": "SELECT MIN(against) FROM table_name_17 WHERE drawn < 2 AND points = 10 AND lost < 4",
        "context": "CREATE TABLE table_name_17 (against INTEGER, lost VARCHAR, drawn VARCHAR, points VARCHAR)",
        "question": "What is the lowest against value with less than 2 draws, 10 points, and less than 4 lost?"
    },
    {
        "answer": "SELECT score FROM table_name_83 WHERE visitor = \"toronto st. pats\" AND home = \"montreal canadiens\" AND record = \"3\u20132\u20130\"",
        "context": "CREATE TABLE table_name_83 (score VARCHAR, record VARCHAR, visitor VARCHAR, home VARCHAR)",
        "question": "Which Score has a Visitor of toronto st. pats, and a Home of montreal canadiens, and a Record of 3\u20132\u20130?"
    },
    {
        "answer": "SELECT player FROM table_name_2 WHERE pick > 24 AND nba_years_[a_] = \"9\"",
        "context": "CREATE TABLE table_name_2 (player VARCHAR, pick VARCHAR, nba_years_ VARCHAR, a_ VARCHAR)",
        "question": "What is Player, when Pick is greater than 24, and when NBA years [a ] is \"9\"?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_95 WHERE playoffs = \"did not qualify\" AND open_cup = \"2nd round\"",
        "context": "CREATE TABLE table_name_95 (year INTEGER, playoffs VARCHAR, open_cup VARCHAR)",
        "question": "When is the latest year that Real Colorado Foxes did not qualify for the playoffs but make it to Open Cup 2nd Round?"
    },
    {
        "answer": "SELECT open_cup FROM table_name_61 WHERE playoffs = \"conference semifinal\" AND year = 2012",
        "context": "CREATE TABLE table_name_61 (open_cup VARCHAR, playoffs VARCHAR, year VARCHAR)",
        "question": "In 2012, which round in the Open Cup did Real Colorado Foxes make it to the conference semifinal?"
    },
    {
        "answer": "SELECT date_aired FROM table_name_90 WHERE network = \"rtl televizija\"",
        "context": "CREATE TABLE table_name_90 (date_aired VARCHAR, network VARCHAR)",
        "question": "Which date was the show aired on the RTL Televizija network?"
    },
    {
        "answer": "SELECT MIN(diameter__km_) FROM table_name_78 WHERE latitude = \"52.0s\"",
        "context": "CREATE TABLE table_name_78 (diameter__km_ INTEGER, latitude VARCHAR)",
        "question": "WHAT IS THE LOWEST DIAMETER FOR A LATITIDE OF 52.0S?"
    },
    {
        "answer": "SELECT city FROM table_name_42 WHERE type_of_game = \"friendly\" AND opponent = \"tunisia\"",
        "context": "CREATE TABLE table_name_42 (city VARCHAR, type_of_game VARCHAR, opponent VARCHAR)",
        "question": "what city has a game of friendly and an opponent of tunisia?"
    },
    {
        "answer": "SELECT date FROM table_name_66 WHERE casualties = \"1 wia\" AND circumstances = \"ied\" AND location = \"15km nw of pol-e khomri\"",
        "context": "CREATE TABLE table_name_66 (date VARCHAR, location VARCHAR, casualties VARCHAR, circumstances VARCHAR)",
        "question": "When was the location 15km NW of Pol-E Khomri, the circumstaances IED and the casualties of 1 WIA?"
    },
    {
        "answer": "SELECT mwehl_team FROM table_name_29 WHERE player = \"ben johnson\"",
        "context": "CREATE TABLE table_name_29 (mwehl_team VARCHAR, player VARCHAR)",
        "question": "Which MWEHL team has player Ben Johnson?"
    },
    {
        "answer": "SELECT result FROM table_name_32 WHERE competition = \"2006 fifa world cup qualifier\" AND venue = \"warner park sporting complex, bassaterre\"",
        "context": "CREATE TABLE table_name_32 (result VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "What is the result when the competition was the 2006 fifa world cup qualifier, and a Venue of warner park sporting complex, bassaterre?"
    },
    {
        "answer": "SELECT venue FROM table_name_21 WHERE score = \"5\u20130\" AND competition = \"2007 caribbean cup qualifier\"",
        "context": "CREATE TABLE table_name_21 (venue VARCHAR, score VARCHAR, competition VARCHAR)",
        "question": "What is the name of the venue when the score was 5\u20130, and a Competition of 2007 caribbean cup qualifier?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_16 WHERE entrant = \"scuderia scribante\" AND chassis = \"brabham bt11\" AND year < 1968",
        "context": "CREATE TABLE table_name_16 (points INTEGER, year VARCHAR, entrant VARCHAR, chassis VARCHAR)",
        "question": "What are the average points of Scuderia Scribante with a Brabham bt11 chassis before 1968?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_20 WHERE year > 1972 AND chassis = \"mclaren m23\"",
        "context": "CREATE TABLE table_name_20 (points VARCHAR, year VARCHAR, chassis VARCHAR)",
        "question": "How many points are there for a Mclaren m23 chassis later than 1972?"
    },
    {
        "answer": "SELECT MAX(score) FROM table_name_1 WHERE country = \"france\" AND venue = \"bokskogens\"",
        "context": "CREATE TABLE table_name_1 (score INTEGER, country VARCHAR, venue VARCHAR)",
        "question": "What was France's highest score when the venue was Bokskogens?"
    },
    {
        "answer": "SELECT AVG(top_25) FROM table_name_31 WHERE events < 0",
        "context": "CREATE TABLE table_name_31 (top_25 INTEGER, events INTEGER)",
        "question": "Name the averae top 25 with events less than 0"
    },
    {
        "answer": "SELECT AVG(value__) AS $m_ FROM table_name_95 WHERE country = \"england\" AND operating_income_$m_ > -5 AND revenue__$m_ < 103",
        "context": "CREATE TABLE table_name_95 (value__ INTEGER, revenue__$m_ VARCHAR, country VARCHAR, operating_income_$m_ VARCHAR)",
        "question": "What was the average Value ($M) when the Country was England, the Operating income($m) was greater than -5, and the Revenue ($M) was smaller than 103?"
    },
    {
        "answer": "SELECT COUNT(value__) AS $m_ FROM table_name_54 WHERE country = \"spain\" AND rank = 19 AND debt_as__percentageof_value > 159",
        "context": "CREATE TABLE table_name_54 (value__ VARCHAR, debt_as__percentageof_value VARCHAR, country VARCHAR, rank VARCHAR)",
        "question": "What was the total amount of Value ($M), when the Country was Spain, the Rank was 19, and the Debt as % of value was larger than 159?"
    },
    {
        "answer": "SELECT SUM(revenue__) AS $m_ FROM table_name_35 WHERE debt_as__percentageof_value > 27 AND operating_income_$m_ = 77",
        "context": "CREATE TABLE table_name_35 (revenue__ INTEGER, debt_as__percentageof_value VARCHAR, operating_income_$m_ VARCHAR)",
        "question": "What was the sum of Revenue ($M), when the Debt as % of value was higher than 27, and the Operating income($m) was 77?"
    },
    {
        "answer": "SELECT finish FROM table_name_72 WHERE engine = \"cosworth\" AND team = \"team scandia\"",
        "context": "CREATE TABLE table_name_72 (finish VARCHAR, engine VARCHAR, team VARCHAR)",
        "question": "What position did team scandia finish when their engine was cosworth?"
    },
    {
        "answer": "SELECT MAX(date) FROM table_name_19 WHERE partner = \"nicklas kulti\" AND score = \"3\u20136, 7\u20136, 6\u20134\"",
        "context": "CREATE TABLE table_name_19 (date INTEGER, partner VARCHAR, score VARCHAR)",
        "question": "When was the most recent game that he partnered with nicklas kulti and they scored 3\u20136, 7\u20136, 6\u20134?"
    },
    {
        "answer": "SELECT call_sign FROM table_name_95 WHERE city_of_license = \"higgston, ga\"",
        "context": "CREATE TABLE table_name_95 (call_sign VARCHAR, city_of_license VARCHAR)",
        "question": "What Call sign has a City of license of higgston, ga?"
    },
    {
        "answer": "SELECT recipient_s_ FROM table_name_5 WHERE result = \"nominated\" AND category = \"most popular drama\" AND year > 2004",
        "context": "CREATE TABLE table_name_5 (recipient_s_ VARCHAR, year VARCHAR, result VARCHAR, category VARCHAR)",
        "question": "Who was the recipient when the show was nominated for Most Popular Drama after 2004?"
    },
    {
        "answer": "SELECT opponents FROM table_name_84 WHERE competition = \"football league trophy\"",
        "context": "CREATE TABLE table_name_84 (opponents VARCHAR, competition VARCHAR)",
        "question": "Who was the opponent at the Football League Trophy competition?"
    },
    {
        "answer": "SELECT player FROM table_name_64 WHERE place = \"t2\" AND score = 74 - 70 - 68 = 212",
        "context": "CREATE TABLE table_name_64 (player VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "What is the Player that has a Place of t2, and a Score of 74-70-68=212?"
    },
    {
        "answer": "SELECT general_classification FROM table_name_97 WHERE young_rider_classification = \"roman kreuziger\" AND points_classification = \"fabian cancellara\"",
        "context": "CREATE TABLE table_name_97 (general_classification VARCHAR, young_rider_classification VARCHAR, points_classification VARCHAR)",
        "question": "Name the general classification with roman kreuziger and points classification of fabian cancellara"
    },
    {
        "answer": "SELECT date FROM table_name_14 WHERE nationality = \"united kingdom\" AND type = \"freighter\" AND displacement = \"5,145 t\"",
        "context": "CREATE TABLE table_name_14 (date VARCHAR, displacement VARCHAR, nationality VARCHAR, type VARCHAR)",
        "question": "what is the date when the nationality is united kingdom, the type is freighter and the displacement is 5,145 t?"
    },
    {
        "answer": "SELECT SUM(*) FROM table_name_51 WHERE air_date = \"june 25, 2009\" AND order > 29",
        "context": "",
        "question": "What is the sum of numbers listed in 18-49 for the episode that aired on June 25, 2009 with an order larger than 29?"
    },
    {
        "answer": "SELECT appointed_by FROM table_name_15 WHERE title = \"envoy extraordinary and minister plenipotentiary\" AND termination_of_mission = \"march 16, 1905\"",
        "context": "CREATE TABLE table_name_15 (appointed_by VARCHAR, title VARCHAR, termination_of_mission VARCHAR)",
        "question": "Who was appointed with the title of envoy extraordinary and minister plenipotentiary, and a termination of mission of march 16, 1905?"
    },
    {
        "answer": "SELECT gdp__billion_us$_ FROM table_name_29 WHERE gdp_per_capita__us$_ = \"8,861\"",
        "context": "CREATE TABLE table_name_29 (gdp__billion_us$_ VARCHAR, gdp_per_capita__us$_ VARCHAR)",
        "question": "What is the GDP (billion US$) of the country that has a GDP per capita (US$) of 8,861?"
    },
    {
        "answer": "SELECT SUM(final_year) FROM table_name_15 WHERE notes = \"replaced by i-96\"",
        "context": "CREATE TABLE table_name_15 (final_year INTEGER, notes VARCHAR)",
        "question": "What is the total of Final year that has a Notes of replaced by i-96?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_2 WHERE date = \"may 29, 1977\"",
        "context": "CREATE TABLE table_name_2 (winning_score VARCHAR, date VARCHAR)",
        "question": "What was the Winning Score on May 29, 1977?"
    },
    {
        "answer": "SELECT date FROM table_name_62 WHERE runner_s__up = \"patty sheehan\"",
        "context": "CREATE TABLE table_name_62 (date VARCHAR, runner_s__up VARCHAR)",
        "question": "On what Date was Patty Sheehan Runner(s)-up?"
    },
    {
        "answer": "SELECT number_of_votes FROM table_name_74 WHERE candidate = \"edward mahama\" AND election < 2004 AND share_of_votes = \"3.0%\"",
        "context": "CREATE TABLE table_name_74 (number_of_votes VARCHAR, share_of_votes VARCHAR, candidate VARCHAR, election VARCHAR)",
        "question": "What is the number of the votes of the election before 2004 with edward mahama as the candidate with 3.0% share of votes?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_name_22 WHERE counties_represented = \"anne arundel\" AND district = \"30\" AND committee = \"ways and means\"",
        "context": "CREATE TABLE table_name_22 (first_elected VARCHAR, committee VARCHAR, counties_represented VARCHAR, district VARCHAR)",
        "question": "What is the total number of First Elected that has counties represented of Anne Arundel, District of 30, and a Ways and Means Committee?"
    },
    {
        "answer": "SELECT notes FROM table_name_30 WHERE language = \"hindi\" AND title = \"miley naa miley hum\"",
        "context": "CREATE TABLE table_name_30 (notes VARCHAR, language VARCHAR, title VARCHAR)",
        "question": "What is the note section for the role with a language of hindi and a title of miley naa miley hum?"
    },
    {
        "answer": "SELECT attendance FROM table_name_31 WHERE away_team = \"dynamo kyiv\" AND home_team = \"torpedo zaporizhia\"",
        "context": "CREATE TABLE table_name_31 (attendance VARCHAR, away_team VARCHAR, home_team VARCHAR)",
        "question": "How many people attended the game when the away team was dynamo kyiv, and a Home team of torpedo zaporizhia?"
    },
    {
        "answer": "SELECT white FROM table_name_80 WHERE moves > 19 AND black = \"kasparov\" AND year < 2000 AND opening = \"e93 king's indian defence\"",
        "context": "CREATE TABLE table_name_80 (white VARCHAR, opening VARCHAR, year VARCHAR, moves VARCHAR, black VARCHAR)",
        "question": "What's the white of E93 King's Indian Defence when Kasparov was black, moves were greater than 19, and happened before 2000?"
    },
    {
        "answer": "SELECT COUNT(roll) FROM table_name_98 WHERE decile = 7 AND authority = \"state\" AND area = \"macraes flat\"",
        "context": "CREATE TABLE table_name_98 (roll VARCHAR, area VARCHAR, decile VARCHAR, authority VARCHAR)",
        "question": "What is the total roll with a decile less than 7, and an authority of state, in the Macraes Flat area?"
    },
    {
        "answer": "SELECT school_club_team FROM table_name_51 WHERE nationality = \"united states\" AND years_for_grizzlies = \"1995-1996\"",
        "context": "CREATE TABLE table_name_51 (school_club_team VARCHAR, nationality VARCHAR, years_for_grizzlies VARCHAR)",
        "question": "What's the United States team that played for the Grizzlies in 1995-1996?"
    },
    {
        "answer": "SELECT points_against FROM table_name_91 WHERE played = \"22\" AND points = \"52\" AND tries_against = \"51\"",
        "context": "CREATE TABLE table_name_91 (points_against VARCHAR, tries_against VARCHAR, played VARCHAR, points VARCHAR)",
        "question": "Name the points against when tries against is 51 and points is 52 with played of 22"
    },
    {
        "answer": "SELECT points_against FROM table_name_27 WHERE club = \"cwmllynfell rfc\"",
        "context": "CREATE TABLE table_name_27 (points_against VARCHAR, club VARCHAR)",
        "question": "Name the points against for cwmllynfell rfc"
    },
    {
        "answer": "SELECT lead FROM table_name_8 WHERE polling_firm = \"election results\" AND psoe = \"39.6% 175\"",
        "context": "CREATE TABLE table_name_8 (lead VARCHAR, polling_firm VARCHAR, psoe VARCHAR)",
        "question": "What is lead for the Election Results polling firm and has a PSOE of 39.6% 175?"
    },
    {
        "answer": "SELECT position FROM table_name_64 WHERE overall < 254 AND round < 5 AND pick__number < 13",
        "context": "CREATE TABLE table_name_64 (position VARCHAR, pick__number VARCHAR, overall VARCHAR, round VARCHAR)",
        "question": "Which was the position for overall less than 254, round less than 5 and pick number less than 13?"
    },
    {
        "answer": "SELECT MIN(field_goals) FROM table_name_68 WHERE points = 10 AND touchdowns > 2",
        "context": "CREATE TABLE table_name_68 (field_goals INTEGER, points VARCHAR, touchdowns VARCHAR)",
        "question": "Who had the lowest field goals but had 10 points and more than 2 touchdowns?"
    },
    {
        "answer": "SELECT SUM(top_25) FROM table_name_71 WHERE top_5 > 9 AND wins < 11",
        "context": "CREATE TABLE table_name_71 (top_25 INTEGER, top_5 VARCHAR, wins VARCHAR)",
        "question": "Which Top-25 has a Top-5 larger than 9, and Wins smaller than 11?"
    },
    {
        "answer": "SELECT opponent FROM table_name_25 WHERE outcome = \"runner-up\" AND date = \"19 september 1994\"",
        "context": "CREATE TABLE table_name_25 (opponent VARCHAR, outcome VARCHAR, date VARCHAR)",
        "question": "What is the opponent with the outcome of runner-up with a date of 19 september 1994?"
    },
    {
        "answer": "SELECT AVG(total_medals) FROM table_name_99 WHERE gold_medals = 0 AND ensemble = \"roland hayes school\"",
        "context": "CREATE TABLE table_name_99 (total_medals INTEGER, gold_medals VARCHAR, ensemble VARCHAR)",
        "question": "What was the average total medals received by Roland Hayes School when there were 0 gold medals?"
    },
    {
        "answer": "SELECT SUM(games) FROM table_name_27 WHERE team = \"iurbentia bilbao\" AND rebounds > 212",
        "context": "CREATE TABLE table_name_27 (games INTEGER, team VARCHAR, rebounds VARCHAR)",
        "question": "How many games did team iurbentia bilbao have with rebounds higher than 212?"
    },
    {
        "answer": "SELECT home_team FROM table_name_68 WHERE score = \"1\u20131\" AND away_team = \"tottenham hotspur\"",
        "context": "CREATE TABLE table_name_68 (home_team VARCHAR, score VARCHAR, away_team VARCHAR)",
        "question": "Which Home team has a Score of 1\u20131, and an Away team of tottenham hotspur?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_36 WHERE notes = \"5000 m\" AND competition = \"world junior championships in athletics\"",
        "context": "CREATE TABLE table_name_36 (year VARCHAR, notes VARCHAR, competition VARCHAR)",
        "question": "what is the year when the notes is 5000 m and the competition is world junior championships in athletics?"
    },
    {
        "answer": "SELECT authority FROM table_name_93 WHERE gender = \"coed\" AND area = \"kelvin grove\" AND name = \"tkkm o manawatu\"",
        "context": "CREATE TABLE table_name_93 (authority VARCHAR, name VARCHAR, gender VARCHAR, area VARCHAR)",
        "question": "In the tkkm o manawatu coed school in kelvin grove, what is the Authority listed/"
    },
    {
        "answer": "SELECT authority FROM table_name_49 WHERE gender = \"coed\" AND decile > 4 AND roll = \"150\"",
        "context": "CREATE TABLE table_name_49 (authority VARCHAR, roll VARCHAR, gender VARCHAR, decile VARCHAR)",
        "question": "which Authority has a coed school with a decile greater than 4, with a 150 roll?"
    },
    {
        "answer": "SELECT release_date FROM table_name_22 WHERE dvd_title = \"ben 10: alien force volume 9\"",
        "context": "CREATE TABLE table_name_22 (release_date VARCHAR, dvd_title VARCHAR)",
        "question": "What is the release date for Ben 10: Alien Force Volume 9 on DVD?"
    },
    {
        "answer": "SELECT episode_count FROM table_name_90 WHERE dvd_title = \"ben 10: alien force volume 8\"",
        "context": "CREATE TABLE table_name_90 (episode_count VARCHAR, dvd_title VARCHAR)",
        "question": "What the episode count for Ben 10: Alien Force Volume 8 on DVD?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_54 WHERE rank > 2 AND bronze = 1 AND silver > 0 AND gold < 0",
        "context": "CREATE TABLE table_name_54 (total INTEGER, gold VARCHAR, silver VARCHAR, rank VARCHAR, bronze VARCHAR)",
        "question": "What is the Total with 0 Silver and Gold, 1 Bronze and Rank larger than 2?"
    },
    {
        "answer": "SELECT sideline_reporters FROM table_name_84 WHERE color_commentator = \"john harkes\" AND pregame_analysts = \"alexi lalas and steve mcmanaman\"",
        "context": "CREATE TABLE table_name_84 (sideline_reporters VARCHAR, color_commentator VARCHAR, pregame_analysts VARCHAR)",
        "question": "When John Harkes was the color commentator, and Alexi Lalas and Steve McManaman were the pregame analysts, who were the sideline reporters?"
    },
    {
        "answer": "SELECT pregame_analysts FROM table_name_74 WHERE color_commentator = \"taylor twellman\" AND network = \"tsn2\"",
        "context": "CREATE TABLE table_name_74 (pregame_analysts VARCHAR, color_commentator VARCHAR, network VARCHAR)",
        "question": "Who does pregame analysts for TSN2 network when Taylor Twellman is the color commentator?"
    },
    {
        "answer": "SELECT order FROM table_name_26 WHERE family = \"vespertilionidae\" AND name = \"northern long-eared myotis\"",
        "context": "CREATE TABLE table_name_26 (order VARCHAR, family VARCHAR, name VARCHAR)",
        "question": "which order of bat belongs to the family of vespertilionidae and includes the northern long-eared myotis?"
    },
    {
        "answer": "SELECT points FROM table_name_58 WHERE club = \"newport rfc\"",
        "context": "CREATE TABLE table_name_58 (points VARCHAR, club VARCHAR)",
        "question": "How many points did Newport RFC get?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_87 WHERE school_club_team = \"alabama\" AND pick > 43",
        "context": "CREATE TABLE table_name_87 (round INTEGER, school_club_team VARCHAR, pick VARCHAR)",
        "question": "Which Round is the lowest one that has a School/Club Team of alabama, and a Pick larger than 43?"
    },
    {
        "answer": "SELECT class FROM table_name_35 WHERE call_sign = \"w254ah\"",
        "context": "CREATE TABLE table_name_35 (class VARCHAR, call_sign VARCHAR)",
        "question": "\\What is the class of the station with the call sign w254ah?"
    },
    {
        "answer": "SELECT SUM(position) FROM table_name_63 WHERE club = \"melilla cf\" AND goal_difference < -10",
        "context": "CREATE TABLE table_name_63 (position INTEGER, club VARCHAR, goal_difference VARCHAR)",
        "question": "What is the position of club Melilla CF, with a goal difference smaller than -10?"
    },
    {
        "answer": "SELECT AVG(max_height__ft_) FROM table_name_24 WHERE time_to_ft__m__at_25\u00b0__seconds_ = \"10.1\" AND shell__lb_ < 12.5",
        "context": "CREATE TABLE table_name_24 (max_height__ft_ INTEGER, time_to_ft__m__at_25\u00b0__seconds_ VARCHAR, shell__lb_ VARCHAR)",
        "question": "What is the average maximum height of the shell smaller than 12.5 lb that reached its maximum height at 25\u00b0 in 10.1 seconds?"
    },
    {
        "answer": "SELECT state FROM table_name_63 WHERE talent = \"classical piano\" AND hometown = \"lancaster, ny\"",
        "context": "CREATE TABLE table_name_63 (state VARCHAR, talent VARCHAR, hometown VARCHAR)",
        "question": "What is the state having a contestant with a talent of classical piano and a hometown from Lancaster, NY?"
    },
    {
        "answer": "SELECT type FROM table_name_51 WHERE location = \"los angeles, california\"",
        "context": "CREATE TABLE table_name_51 (type VARCHAR, location VARCHAR)",
        "question": "What was the school type for Los Angeles, California?"
    },
    {
        "answer": "SELECT MIN(took_office) FROM table_name_70 WHERE name = \"yvette alexander\" AND up_for_reelection > 2016",
        "context": "CREATE TABLE table_name_70 (took_office INTEGER, name VARCHAR, up_for_reelection VARCHAR)",
        "question": "What was the earliest year that Yvette Alexander took office and was up for reelection after 2016?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_90 WHERE game > 7 AND record = \"5-2-1\"",
        "context": "CREATE TABLE table_name_90 (location_attendance VARCHAR, game VARCHAR, record VARCHAR)",
        "question": "What is the location and attendance of the game with a game number greater than 7 and a record of 5-2-1?"
    },
    {
        "answer": "SELECT location FROM table_name_83 WHERE score = \"269 (\u201319)\" AND tournament = \"tallahassee open\"",
        "context": "CREATE TABLE table_name_83 (location VARCHAR, score VARCHAR, tournament VARCHAR)",
        "question": "What is the location of the tallahassee open, with a Score of 269 (\u201319)?"
    },
    {
        "answer": "SELECT frequency FROM table_name_23 WHERE branding = \"your cure for corporate radio\"",
        "context": "CREATE TABLE table_name_23 (frequency VARCHAR, branding VARCHAR)",
        "question": "What Frequency's Branding is Your Cure for Corporate Radio?"
    },
    {
        "answer": "SELECT call_sign FROM table_name_19 WHERE branding = \"106.9 the x\"",
        "context": "CREATE TABLE table_name_19 (call_sign VARCHAR, branding VARCHAR)",
        "question": "What is the Call sign of the Frequency 106.9 the X?"
    },
    {
        "answer": "SELECT intra_molecular_structure FROM table_name_76 WHERE comparative = \"no\" AND name = \"mitarget\"",
        "context": "CREATE TABLE table_name_76 (intra_molecular_structure VARCHAR, comparative VARCHAR, name VARCHAR)",
        "question": "Which Intra-molecular structure has a Comparative of no, and a Name of mitarget?"
    },
    {
        "answer": "SELECT cdt___5_utc_ FROM table_name_71 WHERE edt___4_utc_ = \"4:55 a.m.\"",
        "context": "CREATE TABLE table_name_71 (cdt___5_utc_ VARCHAR, edt___4_utc_ VARCHAR)",
        "question": "What time is CDT when EDT is 4:55 a.m.?"
    },
    {
        "answer": "SELECT COUNT(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = \"Eric\" AND t3.lname = \"Tai\"",
        "context": "CREATE TABLE student (stuid VARCHAR, fname VARCHAR, lname VARCHAR); CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR); CREATE TABLE club (clubname VARCHAR, clubid VARCHAR)",
        "question": "How many clubs does the student named \"Eric Tai\" belong to?"
    },
    {
        "answer": "SELECT area__km\u00b2_ FROM table_name_11 WHERE gdp_per_capita__us$_ = \"11,929\"",
        "context": "CREATE TABLE table_name_11 (area__km\u00b2_ VARCHAR, gdp_per_capita__us$_ VARCHAR)",
        "question": "What is the area of the nation with GDP per capita (US$) of 11,929?"
    },
    {
        "answer": "SELECT mdt___6_utc_ FROM table_name_58 WHERE edt___4_utc_ = \"set\" AND pdt___7_utc_ = \"6:00 a.m.\"",
        "context": "CREATE TABLE table_name_58 (mdt___6_utc_ VARCHAR, edt___4_utc_ VARCHAR, pdt___7_utc_ VARCHAR)",
        "question": "What time is MDT when EDT is set and PDT is 6:00 a.m.?"
    },
    {
        "answer": "SELECT SUM(number_of_districts__kecamatan_) FROM table_name_4 WHERE geographical_unit = \"java\" AND number_of_regencies__kabupaten_ > 4 AND villages < 8 OFFSET 577",
        "context": "CREATE TABLE table_name_4 (number_of_districts__kecamatan_ INTEGER, villages VARCHAR, geographical_unit VARCHAR, number_of_regencies__kabupaten_ VARCHAR)",
        "question": "What is the sum of the number of districts (kecamatan) in the geographical unit of java with more than 4 recencies (kabupaten) and less than 8,577 villages?"
    },
    {
        "answer": "SELECT driver_s_ FROM table_name_57 WHERE owner_s_ = \"bob keselowski\"",
        "context": "CREATE TABLE table_name_57 (driver_s_ VARCHAR, owner_s_ VARCHAR)",
        "question": "Who is the Driver on Bob Keselowski's team?"
    },
    {
        "answer": "SELECT margin_of_victory FROM table_name_29 WHERE country = \"south africa\"",
        "context": "CREATE TABLE table_name_29 (margin_of_victory VARCHAR, country VARCHAR)",
        "question": "What is south africa's margin of victory?"
    },
    {
        "answer": "SELECT 2009 FROM table_name_5 WHERE 2005 = \"a\" AND tournament = \"australian open\"",
        "context": "CREATE TABLE table_name_5 (tournament VARCHAR)",
        "question": "What was the value in 2009 when 2005 was A for the Australian Open?"
    },
    {
        "answer": "SELECT score FROM table_name_83 WHERE home = \"quebec nordiques\" AND date = \"april 16\"",
        "context": "CREATE TABLE table_name_83 (score VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "Which Score has a Home of quebec nordiques on april 16?"
    },
    {
        "answer": "SELECT COUNT(to_par) FROM table_name_33 WHERE money___$__ < 387 AND player = \"al brosch\"",
        "context": "CREATE TABLE table_name_33 (to_par VARCHAR, money___$__ VARCHAR, player VARCHAR)",
        "question": "What is the total number of To Par, when Money ( $ ) is less than 387, and when Player is \"Al Brosch\"?"
    },
    {
        "answer": "SELECT score FROM table_name_67 WHERE location = \"clemson, sc\" AND winner = \"clemson\" AND date = \"november 11, 2006\"",
        "context": "CREATE TABLE table_name_67 (score VARCHAR, date VARCHAR, location VARCHAR, winner VARCHAR)",
        "question": "What is the Score, when the Location is Clemson, SC, when the Winner is Clemson, and when the Date is November 11, 2006?"
    },
    {
        "answer": "SELECT result FROM table_name_83 WHERE date = \"november 16, 1969\"",
        "context": "CREATE TABLE table_name_83 (result VARCHAR, date VARCHAR)",
        "question": "What was the game result on November 16, 1969?"
    },
    {
        "answer": "SELECT points_classification FROM table_name_55 WHERE young_rider_classification = \"lech piasecki\" AND general_classification = \"stephen roche\" AND winner = \"carrera jeans-vagabond\"",
        "context": "CREATE TABLE table_name_55 (points_classification VARCHAR, winner VARCHAR, young_rider_classification VARCHAR, general_classification VARCHAR)",
        "question": "How many points did lech piasecki, stephen roche, and carrera jeans-vagabond have?"
    },
    {
        "answer": "SELECT payment FROM table_name_31 WHERE type = \"2d\" AND release_date = \"january 2003\"",
        "context": "CREATE TABLE table_name_31 (payment VARCHAR, type VARCHAR, release_date VARCHAR)",
        "question": "Which Payment has a Type of 2d, and a Release date of january 2003?"
    },
    {
        "answer": "SELECT d_43 FROM table_name_92 WHERE d_41 = \"r 16\"",
        "context": "CREATE TABLE table_name_92 (d_43 VARCHAR, d_41 VARCHAR)",
        "question": "What is the D43 associated with a D41 of r 16?"
    },
    {
        "answer": "SELECT place FROM table_name_2 WHERE event = \"4000 m individual pursuit\"",
        "context": "CREATE TABLE table_name_2 (place VARCHAR, event VARCHAR)",
        "question": "what is the place when the event is 4000 m individual pursuit?"
    },
    {
        "answer": "SELECT result FROM table_name_49 WHERE week > 11 AND date = \"december 13, 1964\"",
        "context": "CREATE TABLE table_name_49 (result VARCHAR, week VARCHAR, date VARCHAR)",
        "question": "After week 11, what was the Result on December 13, 1964?"
    },
    {
        "answer": "SELECT player FROM table_name_1 WHERE place = \"2\"",
        "context": "CREATE TABLE table_name_1 (player VARCHAR, place VARCHAR)",
        "question": "What is the Place 2 Player?"
    },
    {
        "answer": "SELECT opponents FROM table_name_51 WHERE date = \"26 october 1889\"",
        "context": "CREATE TABLE table_name_51 (opponents VARCHAR, date VARCHAR)",
        "question": "what was the opponent on 26 october 1889?"
    },
    {
        "answer": "SELECT MIN(1996)[2] FROM table_name_80 WHERE 1950 > 80 AND 1960 = 196 AND 1990 > 131",
        "context": "CREATE TABLE table_name_80 (Id VARCHAR)",
        "question": "1950 larger than 80, and a 1960 of 196, and a 1990 larger than 131 what is the lowest 1996[2]?"
    },
    {
        "answer": "SELECT elevator FROM table_name_25 WHERE elevated = \"1378, september 18\" AND order = \"cardinal-priest\" AND elector = \"poncello orsini\"",
        "context": "CREATE TABLE table_name_25 (elevator VARCHAR, elector VARCHAR, elevated VARCHAR, order VARCHAR)",
        "question": "What's the Elevator that has Elevated: 1378, September 18, an Order of Cardinal-Priest, and an Elector of Poncello Orsini?"
    },
    {
        "answer": "SELECT championship FROM table_name_55 WHERE outcome = \"runner-up\" AND opponents_in_final = \"gigi fern\u00e1ndez natalia zvereva\"",
        "context": "CREATE TABLE table_name_55 (championship VARCHAR, outcome VARCHAR, opponents_in_final VARCHAR)",
        "question": "What is Championship, when Outcome is \"runner-up\", and when Opponents In Final is \"Gigi Fern\u00e1ndez Natalia Zvereva\"?"
    },
    {
        "answer": "SELECT COUNT(games) FROM table_name_13 WHERE points = 10 AND drawn > 2",
        "context": "CREATE TABLE table_name_13 (games VARCHAR, points VARCHAR, drawn VARCHAR)",
        "question": "How many games have more than 10 points and more than 2 draws?"
    },
    {
        "answer": "SELECT range__varies_with_payload_weight_ FROM table_name_71 WHERE name_designation = \"shahab-4\"",
        "context": "CREATE TABLE table_name_71 (range__varies_with_payload_weight_ VARCHAR, name_designation VARCHAR)",
        "question": "What is the range (varies by payload weight) for Shahab-4?"
    },
    {
        "answer": "SELECT range__varies_with_payload_weight_ FROM table_name_34 WHERE payload = \"unknown\"",
        "context": "CREATE TABLE table_name_34 (range__varies_with_payload_weight_ VARCHAR, payload VARCHAR)",
        "question": "What is the range (varies by payload weight) for the unknown player?"
    },
    {
        "answer": "SELECT payload FROM table_name_12 WHERE class = \"mrbm\" AND range__varies_with_payload_weight_ = \"1,930km\"",
        "context": "CREATE TABLE table_name_12 (payload VARCHAR, class VARCHAR, range__varies_with_payload_weight_ VARCHAR)",
        "question": "What is the payload for Class MRBM, and a range of 1,930km?"
    },
    {
        "answer": "SELECT SUM(votes) FROM table_name_93 WHERE draw < 4 AND artist = \"yvetta kadakas & ivo linna\"",
        "context": "CREATE TABLE table_name_93 (votes INTEGER, draw VARCHAR, artist VARCHAR)",
        "question": "How many votes did Yvetta Kadakas & Ivo Linna, who had less than 4 draws, have?"
    },
    {
        "answer": "SELECT SUM(february) FROM table_name_88 WHERE opponent = \"montreal canadiens\"",
        "context": "CREATE TABLE table_name_88 (february INTEGER, opponent VARCHAR)",
        "question": "What's the February for the game against the Montreal Canadiens?"
    },
    {
        "answer": "SELECT venue FROM table_name_94 WHERE event = \"marathon\" AND year > 1995 AND position = \"4th\"",
        "context": "CREATE TABLE table_name_94 (venue VARCHAR, position VARCHAR, event VARCHAR, year VARCHAR)",
        "question": "Which Venue has an Event of marathon, and a Year larger than 1995, and a Position of 4th?"
    },
    {
        "answer": "SELECT position FROM table_name_8 WHERE event = \"10,000 m\" AND competition = \"world championships\" AND year > 1993",
        "context": "CREATE TABLE table_name_8 (position VARCHAR, year VARCHAR, event VARCHAR, competition VARCHAR)",
        "question": "Which Position has an Event of 10,000 m, and a Competition of world championships, and a Year larger than 1993?"
    },
    {
        "answer": "SELECT winner FROM table_name_30 WHERE score = \"1 \u2013 0\" AND season = \"2011\u201312\"",
        "context": "CREATE TABLE table_name_30 (winner VARCHAR, score VARCHAR, season VARCHAR)",
        "question": "Which Winner has a Score of 1 \u2013 0, and a Season of 2011\u201312?"
    },
    {
        "answer": "SELECT frequency FROM table_name_75 WHERE purpose = \"commercial\" AND on_air_id = \"radio tab\" AND callsign = \"4tab\"",
        "context": "CREATE TABLE table_name_75 (frequency VARCHAR, callsign VARCHAR, purpose VARCHAR, on_air_id VARCHAR)",
        "question": "4tab of commercial broadcaster Radio Tab broadcasts at what frequency?"
    },
    {
        "answer": "SELECT company FROM table_name_20 WHERE business = \"energy\" AND date = \"unknown\"",
        "context": "CREATE TABLE table_name_20 (company VARCHAR, business VARCHAR, date VARCHAR)",
        "question": "What company has an unknown date and is an energy business?"
    },
    {
        "answer": "SELECT date FROM table_name_88 WHERE country = \"united kingdom\"",
        "context": "CREATE TABLE table_name_88 (date VARCHAR, country VARCHAR)",
        "question": "For the United Kingdom, what's the date?"
    },
    {
        "answer": "SELECT country FROM table_name_15 WHERE date = \"unknown\" AND company = \"enernoc australia pty ltd\"",
        "context": "CREATE TABLE table_name_15 (country VARCHAR, date VARCHAR, company VARCHAR)",
        "question": "For the Enernoc Australia Pty Ltd, what's the country with an unknown date?"
    },
    {
        "answer": "SELECT record FROM table_name_53 WHERE december < 28 AND points < 38 AND game < 26 AND score = \"0\u20131 ot\"",
        "context": "CREATE TABLE table_name_53 (record VARCHAR, score VARCHAR, game VARCHAR, december VARCHAR, points VARCHAR)",
        "question": "Which Record has a December smaller than 28, and Points smaller than 38, and a Game smaller than 26, and a Score of 0\u20131 ot?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_86 WHERE chassis = \"kurtis kraft 500a\"",
        "context": "CREATE TABLE table_name_86 (year INTEGER, chassis VARCHAR)",
        "question": "What is the year with a kurtis kraft 500a chassis?"
    },
    {
        "answer": "SELECT launched FROM table_name_31 WHERE date_of_commission = \"3 may 2001\"",
        "context": "CREATE TABLE table_name_31 (launched VARCHAR, date_of_commission VARCHAR)",
        "question": "What is the Launched which is on 3 may 2001?"
    },
    {
        "answer": "SELECT MIN(silver) FROM table_name_72 WHERE total > 3 AND bronze > 22 AND gold < 395 AND nation = \"austria\"",
        "context": "CREATE TABLE table_name_72 (silver INTEGER, nation VARCHAR, gold VARCHAR, total VARCHAR, bronze VARCHAR)",
        "question": "What is the lowest number of silver medals received by Austria when they receive more than 3 total medals, more than 22 bronze medals, and fewer than 395 gold medals?"
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_96 WHERE player = \"andy north\"",
        "context": "CREATE TABLE table_name_96 (total INTEGER, player VARCHAR)",
        "question": "How many totals have andy north as the player?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_39 WHERE nation = \"switzerland\" AND total > 2",
        "context": "CREATE TABLE table_name_39 (rank VARCHAR, nation VARCHAR, total VARCHAR)",
        "question": "How many ranks are for Switzerland with more than 2 total medals?"
    },
    {
        "answer": "SELECT score FROM table_name_21 WHERE country = \"united states\" AND money___$__ > 24 OFFSET 542",
        "context": "CREATE TABLE table_name_21 (score VARCHAR, country VARCHAR, money___$__ VARCHAR)",
        "question": "What is the score of the United States, which has more than $24,542?"
    },
    {
        "answer": "SELECT COUNT(episode) FROM table_name_53 WHERE segment_d = \"goalie masks (part 2)\"",
        "context": "CREATE TABLE table_name_53 (episode VARCHAR, segment_d VARCHAR)",
        "question": "How many episodes have a segment d that is goalie masks (part 2)?"
    },
    {
        "answer": "SELECT co_drivers FROM table_name_81 WHERE year = 2008",
        "context": "CREATE TABLE table_name_81 (co_drivers VARCHAR, year VARCHAR)",
        "question": "Who were the co-drivers in 2008?"
    },
    {
        "answer": "SELECT callsign FROM table_name_97 WHERE webcast = \"listen live\" AND frequency < 1210 AND brand = \"newsradio 740 ktrh\"",
        "context": "CREATE TABLE table_name_97 (callsign VARCHAR, brand VARCHAR, webcast VARCHAR, frequency VARCHAR)",
        "question": "Which Callsign includes a frequency under 1210, Newsradio 740 KTRH, and webcasts with listen live?"
    },
    {
        "answer": "SELECT website FROM table_name_53 WHERE city_of_license = \"san antonio\" AND webcast = \"listen live\" AND frequency = 680",
        "context": "CREATE TABLE table_name_53 (website VARCHAR, frequency VARCHAR, city_of_license VARCHAR, webcast VARCHAR)",
        "question": "Which website includes a webcast of listen live, a frequency under 680, and was licensed in the city of San Antonio."
    },
    {
        "answer": "SELECT quantity_preserved FROM table_name_68 WHERE manufacturer = \"alco -schenectady\" AND class = \"b-3\"",
        "context": "CREATE TABLE table_name_68 (quantity_preserved VARCHAR, manufacturer VARCHAR, class VARCHAR)",
        "question": "How many did alco -schenectady preserve of class b-3?"
    },
    {
        "answer": "SELECT SUM(round) FROM table_name_39 WHERE name = \"fred smoot\" AND pick > 14",
        "context": "CREATE TABLE table_name_39 (round INTEGER, name VARCHAR, pick VARCHAR)",
        "question": "What is the sum of the round of Fred Smoot, who has a pick number greater than 14?"
    },
    {
        "answer": "SELECT MIN(first_elected) FROM table_name_47 WHERE result = \"re-elected\" AND incumbent = \"sylvester c. smith\"",
        "context": "CREATE TABLE table_name_47 (first_elected INTEGER, result VARCHAR, incumbent VARCHAR)",
        "question": "What was the lowest re-elected result for Sylvester C. Smith?"
    },
    {
        "answer": "SELECT MAX(lost) FROM table_name_37 WHERE played = 2 AND first_game > 1997 AND drawn > 0",
        "context": "CREATE TABLE table_name_37 (lost INTEGER, drawn VARCHAR, played VARCHAR, first_game VARCHAR)",
        "question": "What is the highest number of losses associated with 2 matches played, a first game after 1997, and more than 0 draws?"
    },
    {
        "answer": "SELECT party FROM table_name_32 WHERE result = \"retired democratic hold\" AND first_elected < 1884 AND incumbent = \"samuel dibble\"",
        "context": "CREATE TABLE table_name_32 (party VARCHAR, incumbent VARCHAR, result VARCHAR, first_elected VARCHAR)",
        "question": "Which party had a result of retired democratic hold and a first elected earlier than 1884 with an incumbent of samuel dibble?"
    },
    {
        "answer": "SELECT record FROM table_name_12 WHERE method = \"tko (elbows)\"",
        "context": "CREATE TABLE table_name_12 (record VARCHAR, method VARCHAR)",
        "question": "What was the record when the TKO (elbows) method was used?"
    },
    {
        "answer": "SELECT nation FROM table_name_64 WHERE name = \"carolina hermann / daniel hermann\"",
        "context": "CREATE TABLE table_name_64 (nation VARCHAR, name VARCHAR)",
        "question": "What nation are carolina hermann / daniel hermann from?"
    },
    {
        "answer": "SELECT airport FROM table_name_35 WHERE country = \"egypt\" AND icao = \"heba\"",
        "context": "CREATE TABLE table_name_35 (airport VARCHAR, country VARCHAR, icao VARCHAR)",
        "question": "What is Airport, when Country is \"Egypt\", and when ICAO is \"Heba\"?"
    },
    {
        "answer": "SELECT performer_4 FROM table_name_76 WHERE performer_1 = \"greg proops\" AND date = \"25 august 1995\"",
        "context": "CREATE TABLE table_name_76 (performer_4 VARCHAR, performer_1 VARCHAR, date VARCHAR)",
        "question": "Performer 1 of greg proops, and a Date of 25 august 1995 is what performer 4?"
    },
    {
        "answer": "SELECT AVG(episode) FROM table_name_74 WHERE performer_1 = \"greg proops\" AND performer_3 = \"ryan stiles\" AND date = \"25 august 1995\"",
        "context": "CREATE TABLE table_name_74 (episode INTEGER, date VARCHAR, performer_1 VARCHAR, performer_3 VARCHAR)",
        "question": "Performer 1 of greg proops, and a Performer 3 of ryan stiles, and a Date of 25 august 1995 is which average episode?"
    },
    {
        "answer": "SELECT performer_3 FROM table_name_79 WHERE performer_1 = \"stephen frost\" AND performer_2 = \"josie lawrence\" AND date = \"15 september 1995\"",
        "context": "CREATE TABLE table_name_79 (performer_3 VARCHAR, date VARCHAR, performer_1 VARCHAR, performer_2 VARCHAR)",
        "question": "Performer 1 of Stephen Frost, and a Performer 2 of Josie Lawrence, and a Date of 15 September 1995 is what performer 3?"
    },
    {
        "answer": "SELECT mountains_classification FROM table_name_99 WHERE asian_team_classification = \"seoul cycling team\" AND winner = \"alexandre usov\"",
        "context": "CREATE TABLE table_name_99 (mountains_classification VARCHAR, asian_team_classification VARCHAR, winner VARCHAR)",
        "question": "WHich Mountains classification has an Asian team classification of seoul cycling team, and a Winner of alexandre usov?"
    },
    {
        "answer": "SELECT general_classification FROM table_name_1 WHERE asian_rider_classification = \"shinichi fukushima\" AND winner = \"jeremy hunt\"",
        "context": "CREATE TABLE table_name_1 (general_classification VARCHAR, asian_rider_classification VARCHAR, winner VARCHAR)",
        "question": "WHich General classification has an Asian rider classification of shinichi fukushima, and a Winner of jeremy hunt?"
    },
    {
        "answer": "SELECT l2_cache FROM table_name_42 WHERE frequency = \"1333 mhz\" AND model_number = \"c3 1.3a\"",
        "context": "CREATE TABLE table_name_42 (l2_cache VARCHAR, frequency VARCHAR, model_number VARCHAR)",
        "question": "Which L2-Cache has a Frequency of 1333\u2009mhz, and a Model Number of c3 1.3a?"
    },
    {
        "answer": "SELECT AVG(econ) FROM table_name_2 WHERE ovrs > 25.5 AND runs > 703",
        "context": "CREATE TABLE table_name_2 (econ INTEGER, ovrs VARCHAR, runs VARCHAR)",
        "question": "Name the average econ for runs more than 703 and ovrs more than 25.5"
    },
    {
        "answer": "SELECT SUM(grid) FROM table_name_54 WHERE laps = 30 AND rider = \"toni elias\"",
        "context": "CREATE TABLE table_name_54 (grid INTEGER, laps VARCHAR, rider VARCHAR)",
        "question": "Can you tell me the sum of Grid that has the Laps of 30, and the Rider of toni elias?"
    },
    {
        "answer": "SELECT COUNT(females___percentage_) FROM table_name_1 WHERE females_rank < 21 AND state = \"kerala\" AND males_rank > 1",
        "context": "CREATE TABLE table_name_1 (females___percentage_ VARCHAR, males_rank VARCHAR, females_rank VARCHAR, state VARCHAR)",
        "question": "How many Females (%) have Females Rank smaller than 21, and a State of kerala, and Males Rank larger than 1?"
    },
    {
        "answer": "SELECT SUM(females___percentage_) FROM table_name_71 WHERE hiv_awareness__males_percentage_ > 92 AND females_rank > 2 AND males_rank < 3",
        "context": "CREATE TABLE table_name_71 (females___percentage_ INTEGER, males_rank VARCHAR, hiv_awareness__males_percentage_ VARCHAR, females_rank VARCHAR)",
        "question": "Which Females (%) has an HIV awareness (males%) larger than 92, and Females Rank larger than 2, and Males Rank smaller than 3?"
    },
    {
        "answer": "SELECT fleet_series__quantity_ FROM table_name_60 WHERE order_year = \"2010\" AND model = \"de40lfr\"",
        "context": "CREATE TABLE table_name_60 (fleet_series__quantity_ VARCHAR, order_year VARCHAR, model VARCHAR)",
        "question": "Which Fleet Series (Quantity) has an Order Year of 2010, and a Model of de40lfr?"
    },
    {
        "answer": "SELECT COUNT(roll) FROM table_name_31 WHERE authority = \"state\" AND name = \"stanley avenue school\" AND decile > 5",
        "context": "CREATE TABLE table_name_31 (roll VARCHAR, decile VARCHAR, authority VARCHAR, name VARCHAR)",
        "question": "Name the total number of roll for state authority and stanley avenue school with decile more than 5"
    },
    {
        "answer": "SELECT score FROM table_name_66 WHERE outcome = \"winner\" AND date = \"4 november 1990\"",
        "context": "CREATE TABLE table_name_66 (score VARCHAR, outcome VARCHAR, date VARCHAR)",
        "question": "Which Score has aN Outcome of winner on 4 november 1990?"
    },
    {
        "answer": "SELECT rider FROM table_name_14 WHERE manufacturer = \"aprilia\" AND laps < 18 AND grid = 17",
        "context": "CREATE TABLE table_name_14 (rider VARCHAR, grid VARCHAR, manufacturer VARCHAR, laps VARCHAR)",
        "question": "What rider is on an aprilia that went under 18 laps with a grid total of 17?"
    },
    {
        "answer": "SELECT MAX(reign) FROM table_name_66 WHERE date = \"march 10, 2007\"",
        "context": "CREATE TABLE table_name_66 (reign INTEGER, date VARCHAR)",
        "question": "What's the highest reign on march 10, 2007?"
    },
    {
        "answer": "SELECT capacity FROM table_name_84 WHERE model_engine = \"2.0 duratorq\"",
        "context": "CREATE TABLE table_name_84 (capacity VARCHAR, model_engine VARCHAR)",
        "question": "Name the capacity for the engine of 2.0 duratorq"
    },
    {
        "answer": "SELECT COUNT(goals) FROM table_name_98 WHERE nationality = \"england\" AND position = \"df\" AND crewe_alexandra_career = \"1958\u20131962\" AND appearances < 170",
        "context": "CREATE TABLE table_name_98 (goals VARCHAR, appearances VARCHAR, crewe_alexandra_career VARCHAR, nationality VARCHAR, position VARCHAR)",
        "question": "What is the total number of Goals with a nationality of England, and position of DF, and a Crewe Alexandra career is 1958\u20131962, and less than 170 appearances?"
    },
    {
        "answer": "SELECT AVG(goal_ratio) FROM table_name_71 WHERE goals > 1 AND games > 161 AND debut_in_europe < 1985",
        "context": "CREATE TABLE table_name_71 (goal_ratio INTEGER, debut_in_europe VARCHAR, goals VARCHAR, games VARCHAR)",
        "question": "What's the average goal ratio with Goals larger than 1, Games larger than 161, and a Debut in Europe smaller than 1985?"
    },
    {
        "answer": "SELECT SUM(game) FROM table_name_87 WHERE opponent = \"@ chicago stags\"",
        "context": "CREATE TABLE table_name_87 (game INTEGER, opponent VARCHAR)",
        "question": "what is the game when the opponent is @ chicago stags?"
    },
    {
        "answer": "SELECT score FROM table_name_90 WHERE decision = \"niittymaki\" AND home = \"carolina\"",
        "context": "CREATE TABLE table_name_90 (score VARCHAR, decision VARCHAR, home VARCHAR)",
        "question": "What was the score in the game where Carolina was the home team and Niittymaki received the decision?"
    },
    {
        "answer": "SELECT score FROM table_name_52 WHERE visitor = \"ottawa senators\" AND date = \"december 11\"",
        "context": "CREATE TABLE table_name_52 (score VARCHAR, visitor VARCHAR, date VARCHAR)",
        "question": "What was the score for the December 11 game against the Ottawa Senators?"
    },
    {
        "answer": "SELECT project FROM table_name_40 WHERE length_overall_in_meters__without_bowsprit_ = 25 AND name = \"levante\"",
        "context": "CREATE TABLE table_name_40 (project VARCHAR, length_overall_in_meters__without_bowsprit_ VARCHAR, name VARCHAR)",
        "question": "Name the project with length overall being 25 and name of levante"
    },
    {
        "answer": "SELECT score FROM table_name_83 WHERE opponent = \"buffalo sabres\"",
        "context": "CREATE TABLE table_name_83 (score VARCHAR, opponent VARCHAR)",
        "question": "What was the Score in the game against the Buffalo Sabres?"
    },
    {
        "answer": "SELECT episode FROM table_name_16 WHERE season < 25 AND directed_by = \"bob anderson\" AND production_code = \"kabf16\"",
        "context": "CREATE TABLE table_name_16 (episode VARCHAR, production_code VARCHAR, season VARCHAR, directed_by VARCHAR)",
        "question": "Which episode was directed by Bob Anderson with a production code of KABF16 and a season before than 25?"
    },
    {
        "answer": "SELECT name FROM table_name_78 WHERE position < 4 AND lost = 2",
        "context": "CREATE TABLE table_name_78 (name VARCHAR, position VARCHAR, lost VARCHAR)",
        "question": "Which name was in a position less than 4 with 2 losses?"
    },
    {
        "answer": "SELECT athlete FROM table_name_92 WHERE date = \"10 july 2009\"",
        "context": "CREATE TABLE table_name_92 (athlete VARCHAR, date VARCHAR)",
        "question": "Date of 10 july 2009 includes what athlete?"
    },
    {
        "answer": "SELECT opponent FROM table_name_47 WHERE venue = \"launceston cricket club ground, launceston\" AND season = \"1853/54\"",
        "context": "CREATE TABLE table_name_47 (opponent VARCHAR, venue VARCHAR, season VARCHAR)",
        "question": "Who was the opponent that played at Launceston Cricket Club Ground, launceston during the season of 1853/54?"
    },
    {
        "answer": "SELECT status FROM table_name_62 WHERE issn = \"0149-1830\"",
        "context": "CREATE TABLE table_name_62 (status VARCHAR, issn VARCHAR)",
        "question": "What is the status for a journal with the ISSN of 0149-1830?"
    },
    {
        "answer": "SELECT college FROM table_name_42 WHERE round = 11 AND position = \"wr\"",
        "context": "CREATE TABLE table_name_42 (college VARCHAR, round VARCHAR, position VARCHAR)",
        "question": "Which College has a Round of 11, and a Position of wr?"
    },
    {
        "answer": "SELECT region_1_release FROM table_name_39 WHERE region_2_release = \"july 20, 2009\"",
        "context": "CREATE TABLE table_name_39 (region_1_release VARCHAR, region_2_release VARCHAR)",
        "question": "What is the region 1 release that has july 20, 2009 as the region 2?"
    },
    {
        "answer": "SELECT born_died FROM table_name_74 WHERE left_office = \"1021\" AND throne_name = \"315\"",
        "context": "CREATE TABLE table_name_74 (born_died VARCHAR, left_office VARCHAR, throne_name VARCHAR)",
        "question": "What is teh born-died dates of the king with a throne name 315 and left office in 1021?"
    },
    {
        "answer": "SELECT date FROM table_name_70 WHERE location = \"polo grounds\" AND winner = \"philadelphia eagles\" AND year = 1948",
        "context": "CREATE TABLE table_name_70 (date VARCHAR, year VARCHAR, location VARCHAR, winner VARCHAR)",
        "question": "What is Date, when Location is Polo Grounds, when Winner is Philadelphia Eagles, and when Year is 1948?"
    },
    {
        "answer": "SELECT opponents FROM table_name_80 WHERE surface = \"hard\" AND outcome = \"runner-up\" AND partner = \"jarmila gajdo\u0161ov\u00e1\"",
        "context": "CREATE TABLE table_name_80 (opponents VARCHAR, partner VARCHAR, surface VARCHAR, outcome VARCHAR)",
        "question": "Which Opponents have a Surface of hard, and an Outcome of runner-up, and a Partner of jarmila gajdo\u0161ov\u00e1?"
    },
    {
        "answer": "SELECT result FROM table_name_31 WHERE year = 1948 AND date = \"november 7\"",
        "context": "CREATE TABLE table_name_31 (result VARCHAR, year VARCHAR, date VARCHAR)",
        "question": "What is Result, when Year is 1948, and when Date is November 7?"
    },
    {
        "answer": "SELECT opponent FROM table_name_93 WHERE game > 72 AND record = \"39-27-9\"",
        "context": "CREATE TABLE table_name_93 (opponent VARCHAR, game VARCHAR, record VARCHAR)",
        "question": "Who did the Rangers play in a game that was later than 72 when the team record was 39-27-9?"
    },
    {
        "answer": "SELECT catalogue FROM table_name_46 WHERE label = \"essential, castle music\"",
        "context": "CREATE TABLE table_name_46 (catalogue VARCHAR, label VARCHAR)",
        "question": "Which catalogue has essential, castle music as it's label?"
    },
    {
        "answer": "SELECT COUNT(overall) FROM table_name_6 WHERE position = \"defensive tackle\"",
        "context": "CREATE TABLE table_name_6 (overall VARCHAR, position VARCHAR)",
        "question": "Name the total number of overall for defensive tackle"
    },
    {
        "answer": "SELECT name FROM table_name_55 WHERE rank > 2 AND lane = 1 AND nationality = \"hong kong\"",
        "context": "CREATE TABLE table_name_55 (name VARCHAR, nationality VARCHAR, rank VARCHAR, lane VARCHAR)",
        "question": "Which one has a rank bigger than 2, lane of 1, and is from Hong Kong?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_52 WHERE nationality = \"japan\" AND lane < 7 AND heat < 3",
        "context": "CREATE TABLE table_name_52 (rank INTEGER, heat VARCHAR, nationality VARCHAR, lane VARCHAR)",
        "question": "What rank is from Japan, has a lane smaller than 7 and a heat smaller than 3?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_54 WHERE opponent = \"at boston patriots\" AND week > 3",
        "context": "CREATE TABLE table_name_54 (attendance INTEGER, opponent VARCHAR, week VARCHAR)",
        "question": "Opponent of at boston patriots, and a Week larger than 3 had what average attendance?"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_name_63 WHERE mls_team = \"real salt lake\" AND affiliation = \"ucla los angeles storm\"",
        "context": "CREATE TABLE table_name_63 (pick__number INTEGER, mls_team VARCHAR, affiliation VARCHAR)",
        "question": "Name the most pick number for real salt lake and affiliation of ucla los angeles storm"
    },
    {
        "answer": "SELECT outcome FROM table_name_38 WHERE opponents_in_the_final = \"marius c\u0103lug\u0103ru ciprian petre porumb\"",
        "context": "CREATE TABLE table_name_38 (outcome VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "What was the outcome of the match opponents in the final of Marius C\u0103lug\u0103ru Ciprian Petre Porumb?"
    },
    {
        "answer": "SELECT COUNT(game) FROM table_name_13 WHERE opponent = \"detroit red wings\" AND march < 12",
        "context": "CREATE TABLE table_name_13 (game VARCHAR, opponent VARCHAR, march VARCHAR)",
        "question": "Which Game has an Opponent of detroit red wings, and a March smaller than 12?"
    },
    {
        "answer": "SELECT tournament FROM table_name_46 WHERE court_surface = \"clay\" AND began = 1892",
        "context": "CREATE TABLE table_name_46 (tournament VARCHAR, court_surface VARCHAR, began VARCHAR)",
        "question": "what is the tournament when the court surface is clay and began in 1892?"
    },
    {
        "answer": "SELECT visiting_team FROM table_name_59 WHERE date = \"december 23\"",
        "context": "CREATE TABLE table_name_59 (visiting_team VARCHAR, date VARCHAR)",
        "question": "Which Visiting Team is on december 23?"
    },
    {
        "answer": "SELECT segment_c FROM table_name_58 WHERE segment_b = \"refrigerators\"",
        "context": "CREATE TABLE table_name_58 (segment_c VARCHAR, segment_b VARCHAR)",
        "question": "Which segment c's segment b is refrigerators?"
    },
    {
        "answer": "SELECT MAX(area__km_2__) FROM table_name_28 WHERE density__inhabitants_km_2__ > 9.4 AND name = \"cape agulhas\" AND population__2011_ < 33 OFFSET 038",
        "context": "CREATE TABLE table_name_28 (area__km_2__ INTEGER, population__2011_ VARCHAR, density__inhabitants_km_2__ VARCHAR, name VARCHAR)",
        "question": "What is the area in km2 for Cape Agulhas, whose density is larger than 9.4 inhabitants/km2 and whose population in 2011 was less than 33,038?"
    },
    {
        "answer": "SELECT SUM(partial_failures) FROM table_name_35 WHERE successes < 6 AND launches > 1 AND failures = 2",
        "context": "CREATE TABLE table_name_35 (partial_failures INTEGER, failures VARCHAR, successes VARCHAR, launches VARCHAR)",
        "question": "Successes smaller than 6, and Launches larger than 1, and a Failures of 2 is what sum of the partial failures?"
    },
    {
        "answer": "SELECT points FROM table_name_91 WHERE chassis = \"lancia d50\" AND year = 1954",
        "context": "CREATE TABLE table_name_91 (points VARCHAR, chassis VARCHAR, year VARCHAR)",
        "question": "What is the Point of Chassis of Lancia d50 in 1954"
    },
    {
        "answer": "SELECT SUM(matches) FROM table_name_26 WHERE high_score = \"299\" AND innings < 412",
        "context": "CREATE TABLE table_name_26 (matches INTEGER, high_score VARCHAR, innings VARCHAR)",
        "question": "What is the match total for a score over 299 and under 412 innings?"
    },
    {
        "answer": "SELECT place FROM table_name_43 WHERE score < 74 AND to_par = \"e\"",
        "context": "CREATE TABLE table_name_43 (place VARCHAR, score VARCHAR, to_par VARCHAR)",
        "question": "What place had a score smaller than 74 and a par of e?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_34 WHERE position = \"wide receiver\" AND overall < 222",
        "context": "CREATE TABLE table_name_34 (round INTEGER, position VARCHAR, overall VARCHAR)",
        "question": "Which Round is the lowest one that has a Position of wide receiver, and an Overall smaller than 222?"
    },
    {
        "answer": "SELECT score FROM table_name_64 WHERE high_assists = \"rajon rondo (12)\" AND high_points = \"paul pierce (27)\"",
        "context": "CREATE TABLE table_name_64 (score VARCHAR, high_assists VARCHAR, high_points VARCHAR)",
        "question": "What is Score, when High Assists is \"Rajon Rondo (12)\", and when High Points is \"Paul Pierce (27)\"?"
    },
    {
        "answer": "SELECT opponent FROM table_name_55 WHERE game > 23 AND december > 8 AND record = \"8-10-7\"",
        "context": "CREATE TABLE table_name_55 (opponent VARCHAR, record VARCHAR, game VARCHAR, december VARCHAR)",
        "question": "Which opponent has a game larger than 23, December larger than 8, and record of 8-10-7?"
    },
    {
        "answer": "SELECT representative FROM table_name_32 WHERE presentation_of_credentials = \"february 23, 1854\"",
        "context": "CREATE TABLE table_name_32 (representative VARCHAR, presentation_of_credentials VARCHAR)",
        "question": "Who is the representative with a presentation of credentials date on February 23, 1854?"
    },
    {
        "answer": "SELECT title FROM table_name_52 WHERE appointed_by = \"james k. polk\"",
        "context": "CREATE TABLE table_name_52 (title VARCHAR, appointed_by VARCHAR)",
        "question": "What is the title of the representative appointed by James K. Polk?"
    },
    {
        "answer": "SELECT architect FROM table_name_43 WHERE built < 1915 AND building = \"electric railway chambers\"",
        "context": "CREATE TABLE table_name_43 (architect VARCHAR, built VARCHAR, building VARCHAR)",
        "question": "Who was the architect that built the Electric Railway Chambers before 1915?"
    },
    {
        "answer": "SELECT MAX(up) AS :down_ratio FROM table_name_72 WHERE upstream = \"4 mbit/s\"",
        "context": "CREATE TABLE table_name_72 (up INTEGER, upstream VARCHAR)",
        "question": "What is the highest up:down ratio with 4 mbit/s upstream?"
    },
    {
        "answer": "SELECT company_or_product_name FROM table_name_25 WHERE money_requested__\u00a3_ = \"75,000\" AND entrepreneur_s_ = \"geoff and colette bell\"",
        "context": "CREATE TABLE table_name_25 (company_or_product_name VARCHAR, money_requested__\u00a3_ VARCHAR, entrepreneur_s_ VARCHAR)",
        "question": "What was the Company or Product name where Entrepreneurs Geoff and Colette Bell requested \u00a375,000?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_1 WHERE home = \"calgary\"",
        "context": "CREATE TABLE table_name_1 (attendance INTEGER, home VARCHAR)",
        "question": "For all games with calgary as home, what is the average number of attendees?"
    },
    {
        "answer": "SELECT time FROM table_name_7 WHERE event = \"200 m butterfly\"",
        "context": "CREATE TABLE table_name_7 (time VARCHAR, event VARCHAR)",
        "question": "Which Time has an Event of 200 m butterfly?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_70 WHERE surface = \"clay\" AND tournament = \"dortmund\"",
        "context": "CREATE TABLE table_name_70 (score_in_the_final VARCHAR, surface VARCHAR, tournament VARCHAR)",
        "question": "Played on Clay Surface, what was the Score of the Dortmund Tournament?"
    },
    {
        "answer": "SELECT date FROM table_name_92 WHERE week < 14 AND opponent = \"san francisco 49ers\"",
        "context": "CREATE TABLE table_name_92 (date VARCHAR, week VARCHAR, opponent VARCHAR)",
        "question": "Which date  has a Week smaller than 14, and an Opponent of san francisco 49ers?"
    },
    {
        "answer": "SELECT rank FROM table_name_3 WHERE qual = \"141.471\"",
        "context": "CREATE TABLE table_name_3 (rank VARCHAR, qual VARCHAR)",
        "question": "What is the rank of the qual 141.471?"
    },
    {
        "answer": "SELECT time FROM table_name_61 WHERE method = \"tko\"",
        "context": "CREATE TABLE table_name_61 (time VARCHAR, method VARCHAR)",
        "question": "What was the time when the method was TKO?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_85 WHERE class = \"350cc\" AND rank = \"16th\" AND wins > 0",
        "context": "CREATE TABLE table_name_85 (year INTEGER, wins VARCHAR, class VARCHAR, rank VARCHAR)",
        "question": "What year was she on a 350cc class bike, ranked 16th, with over 0 wins?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_59 WHERE name = \"karen pickering\" AND time < 55.71",
        "context": "CREATE TABLE table_name_59 (rank INTEGER, name VARCHAR, time VARCHAR)",
        "question": "What is the highest Rank of Karen Pickering when she had a time of less than 55.71?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_34 WHERE opponent = \"rockies\" AND record = \"32-30\"",
        "context": "CREATE TABLE table_name_34 (attendance INTEGER, opponent VARCHAR, record VARCHAR)",
        "question": "How much Attendance has an Opponent of rockies, and a Record of 32-30?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_89 WHERE name = \"omni nashville hotel\"",
        "context": "CREATE TABLE table_name_89 (rank INTEGER, name VARCHAR)",
        "question": "What is the rank for Omni nashville hotel?"
    },
    {
        "answer": "SELECT AVG(goals_for) FROM table_name_81 WHERE points > 9 AND goals_against < 14 AND goal_difference < 17",
        "context": "CREATE TABLE table_name_81 (goals_for INTEGER, goal_difference VARCHAR, points VARCHAR, goals_against VARCHAR)",
        "question": "What is the average number of goals with more than 9 points, less than 14 goals against, and a goal difference less than 17?"
    },
    {
        "answer": "SELECT rules FROM table_name_2 WHERE event = \"n/a\" AND result = \"loss\" AND location = \"winsford england\"",
        "context": "CREATE TABLE table_name_2 (rules VARCHAR, location VARCHAR, event VARCHAR, result VARCHAR)",
        "question": "Which rule has The Event of n/a, The Result of loss, and The Location of winsford england?"
    },
    {
        "answer": "SELECT opponent FROM table_name_38 WHERE round = \"3\" AND time = \"n/a\" AND rules = \"n/a\"",
        "context": "CREATE TABLE table_name_38 (opponent VARCHAR, rules VARCHAR, round VARCHAR, time VARCHAR)",
        "question": "Which Opponent has a Round of 3, a Time of n/a, and a Rules of n/a?"
    },
    {
        "answer": "SELECT title FROM table_name_69 WHERE lyricist_s_ = \"yarosake\" AND composer_s_ = \"yarosake\"",
        "context": "CREATE TABLE table_name_69 (title VARCHAR, lyricist_s_ VARCHAR, composer_s_ VARCHAR)",
        "question": "What is the Title, when the Lyricist(s) is Yarosake, and when the Composer(s) is Yarosake?"
    },
    {
        "answer": "SELECT composer_s_ FROM table_name_96 WHERE arranger_s_ = \"banana boat\" AND length = \"4:25\"",
        "context": "CREATE TABLE table_name_96 (composer_s_ VARCHAR, arranger_s_ VARCHAR, length VARCHAR)",
        "question": "Who is/are the Composer(s), when the Arranger(s) is Banana Boat, and when the Length is 4:25?"
    },
    {
        "answer": "SELECT hypertransport_version FROM table_name_51 WHERE max_aggregate_bandwidth__bi_directional_ = \"22.4 gb/s\"",
        "context": "CREATE TABLE table_name_51 (hypertransport_version VARCHAR, max_aggregate_bandwidth__bi_directional_ VARCHAR)",
        "question": "What Hyper Transport version has 22.4 gb/s of Max. Aggregate bandwidth?"
    },
    {
        "answer": "SELECT max_aggregate_bandwidth__bi_directional_ FROM table_name_17 WHERE hypertransport_version = 2",
        "context": "CREATE TABLE table_name_17 (max_aggregate_bandwidth__bi_directional_ VARCHAR, hypertransport_version VARCHAR)",
        "question": "What is the Max Aggregate bandwidth with a HyperTransport of 2?"
    },
    {
        "answer": "SELECT COUNT(erp___power_w) FROM table_name_34 WHERE frequency = \"89.3 fm\" AND facility_id < 40430",
        "context": "CREATE TABLE table_name_34 (erp___power_w VARCHAR, frequency VARCHAR, facility_id VARCHAR)",
        "question": "Name the total number of ERP/Power W for frequency of 89.3 fm and facility ID less than 40430"
    },
    {
        "answer": "SELECT performer_2 FROM table_name_83 WHERE performer_4 = \"josie lawrence\" AND date = \"9 april 1993\"",
        "context": "CREATE TABLE table_name_83 (performer_2 VARCHAR, performer_4 VARCHAR, date VARCHAR)",
        "question": "Who is performer 2 of the episode on 9 April 1993 with Josie Lawrence as performer 4?"
    },
    {
        "answer": "SELECT date FROM table_name_26 WHERE performer_2 = \"ryan stiles\" AND performer_3 = \"colin mochrie\" AND performer_4 = \"tony slattery\"",
        "context": "CREATE TABLE table_name_26 (date VARCHAR, performer_4 VARCHAR, performer_2 VARCHAR, performer_3 VARCHAR)",
        "question": "What is the date of the episode with Ryan Stiles as performer 2, Colin Mochrie as performer 3, and Tony Slattery as performer 4?"
    },
    {
        "answer": "SELECT performer_4 FROM table_name_86 WHERE performer_1 = \"jim sweeney\" AND episode = 3",
        "context": "CREATE TABLE table_name_86 (performer_4 VARCHAR, performer_1 VARCHAR, episode VARCHAR)",
        "question": "Who is performer 4 on episode 3, where Jim Sweeney was performer 1?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_10 WHERE college_junior_club_team__league_ = \"torpedo yaroslavl (rus)\"",
        "context": "CREATE TABLE table_name_10 (round INTEGER, college_junior_club_team__league_ VARCHAR)",
        "question": "Which Round is the highest one that has a College/Junior/Club Team (League) of torpedo yaroslavl (rus)?"
    },
    {
        "answer": "SELECT score FROM table_name_11 WHERE surface = \"clay\" AND date = \"19 may 2008\"",
        "context": "CREATE TABLE table_name_11 (score VARCHAR, surface VARCHAR, date VARCHAR)",
        "question": "What was Olga Govortsova's score when she played on a clay surface on 19 May 2008?"
    },
    {
        "answer": "SELECT title FROM table_name_61 WHERE remark = \"#21 us [riaa certified gold january 3, 1990]\"",
        "context": "CREATE TABLE table_name_61 (title VARCHAR, remark VARCHAR)",
        "question": "What title had a remark of #21 us [riaa certified gold january 3, 1990]?"
    },
    {
        "answer": "SELECT location FROM table_name_41 WHERE mountain_range = \"coast mountains\" AND rank < 18 AND mountain_peak = \"skihist mountain\"",
        "context": "CREATE TABLE table_name_41 (location VARCHAR, mountain_peak VARCHAR, mountain_range VARCHAR, rank VARCHAR)",
        "question": "Which location includes Coast Mountains with a rank less than 18 at Skihist Mountain?"
    },
    {
        "answer": "SELECT AVG(week) FROM table_name_12 WHERE opponent = \"baltimore colts\" AND attendance < 41 OFFSET 062",
        "context": "CREATE TABLE table_name_12 (week INTEGER, opponent VARCHAR, attendance VARCHAR)",
        "question": "What is the average week for the game against baltimore colts with less than 41,062 in attendance?"
    },
    {
        "answer": "SELECT SUM(goals_scored) FROM table_name_40 WHERE points < 27 AND team = \"c.d. atl\u00e9tico balboa\"",
        "context": "CREATE TABLE table_name_40 (goals_scored INTEGER, points VARCHAR, team VARCHAR)",
        "question": "What's the total of Goals Scored with Points that's smaller than 27, and a Team of C.D. Atl\u00e9tico Balboa?"
    },
    {
        "answer": "SELECT AVG(extra_points_1_point) FROM table_name_22 WHERE total_points < 30 AND touchdowns__5_points_ = 5",
        "context": "CREATE TABLE table_name_22 (extra_points_1_point INTEGER, total_points VARCHAR, touchdowns__5_points_ VARCHAR)",
        "question": "Which Extra points 1 point has a Total Points smaller than 30, and Touchdowns (5 points) of 5?"
    },
    {
        "answer": "SELECT COUNT(field_goals__5_points_) FROM table_name_59 WHERE total_points = 123 AND touchdowns__5_points_ > 13",
        "context": "CREATE TABLE table_name_59 (field_goals__5_points_ VARCHAR, total_points VARCHAR, touchdowns__5_points_ VARCHAR)",
        "question": "How many Field goals (5 points) have a Total Points of 123, and Touchdowns (5 points) larger than 13?"
    },
    {
        "answer": "SELECT score FROM table_name_66 WHERE home_team = \"saskatoon accelerators\" AND date = \"january 6, 2008\"",
        "context": "CREATE TABLE table_name_66 (score VARCHAR, home_team VARCHAR, date VARCHAR)",
        "question": "What was Saskatoon Accelerators score on January 6, 2008?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_94 WHERE country = \"soviet union\" AND total < 19",
        "context": "CREATE TABLE table_name_94 (rank INTEGER, country VARCHAR, total VARCHAR)",
        "question": "Which Rank is the Country of soviet union with a Total smaller than 19?"
    },
    {
        "answer": "SELECT AVG(popular_votes) FROM table_name_2 WHERE office = \"us representative 4\" AND percentage = \"1.59%\" AND year > 1992",
        "context": "CREATE TABLE table_name_2 (popular_votes INTEGER, year VARCHAR, office VARCHAR, percentage VARCHAR)",
        "question": "How many votes for the candidate after 1992, 1.59% of the vote, and the office of us representative 4?"
    },
    {
        "answer": "SELECT years FROM table_name_36 WHERE representative = \"j. smith young\"",
        "context": "CREATE TABLE table_name_36 (years VARCHAR, representative VARCHAR)",
        "question": "What years did J. Smith Young serve as a Representative?"
    },
    {
        "answer": "SELECT part_number_s_ FROM table_name_71 WHERE l2_cache = \"512 kb\" AND release_date = \"june 2001\" AND sspec_number = \"sl5lv, sl5pu, sl6bw, sl6jm\"",
        "context": "CREATE TABLE table_name_71 (part_number_s_ VARCHAR, sspec_number VARCHAR, l2_cache VARCHAR, release_date VARCHAR)",
        "question": "what is the part number(s) when l2 cache is 512 kb, release date is june 2001 and sSpec number is sl5lv, sl5pu, sl6bw, sl6jm?"
    },
    {
        "answer": "SELECT nation FROM table_name_50 WHERE name = \"chris witty\"",
        "context": "CREATE TABLE table_name_50 (nation VARCHAR, name VARCHAR)",
        "question": "What country did Chris Witty represent?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_35 WHERE winner = \"new york jets\" AND location = \"harvard stadium\"",
        "context": "CREATE TABLE table_name_35 (year INTEGER, winner VARCHAR, location VARCHAR)",
        "question": "What is the earliest year the new york jets won at harvard stadium?"
    },
    {
        "answer": "SELECT loser FROM table_name_89 WHERE location = \"schaefer stadium\" AND winner = \"new england patriots\" AND date = \"october 18\"",
        "context": "CREATE TABLE table_name_89 (loser VARCHAR, date VARCHAR, location VARCHAR, winner VARCHAR)",
        "question": "Who lost at schaefer stadium when the Winner was new england patriots, and a Date of october 18?"
    },
    {
        "answer": "SELECT manager FROM table_name_90 WHERE shirt_sponsor = \"arke\"",
        "context": "CREATE TABLE table_name_90 (manager VARCHAR, shirt_sponsor VARCHAR)",
        "question": "Which manager sponsor arke shirt?"
    },
    {
        "answer": "SELECT tries_for FROM table_name_12 WHERE losing_bonus = \"3\" AND points = \"45\"",
        "context": "CREATE TABLE table_name_12 (tries_for VARCHAR, losing_bonus VARCHAR, points VARCHAR)",
        "question": "How many tries for did the club with a 3 losing bonus and 45 points have?"
    },
    {
        "answer": "SELECT lost FROM table_name_1 WHERE played = \"22\" AND points_against = \"334\"",
        "context": "CREATE TABLE table_name_1 (lost VARCHAR, played VARCHAR, points_against VARCHAR)",
        "question": "How many losses did the club with 22 played and 334 points against have?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_46 WHERE record = \"1-6\"",
        "context": "CREATE TABLE table_name_46 (attendance INTEGER, record VARCHAR)",
        "question": "What attendance does 1-6 record have?"
    },
    {
        "answer": "SELECT position FROM table_name_67 WHERE school_previous_club_team_country = \"kentucky\"",
        "context": "CREATE TABLE table_name_67 (position VARCHAR, school_previous_club_team_country VARCHAR)",
        "question": "What is Position, when School/Previous Club Team/Country is Kentucky?"
    },
    {
        "answer": "SELECT pick__number FROM table_name_49 WHERE college_junior_club_team = \"edmonton oil kings (wchl)\" AND position = \"defence\"",
        "context": "CREATE TABLE table_name_49 (pick__number VARCHAR, college_junior_club_team VARCHAR, position VARCHAR)",
        "question": "What is the Pick # for the College/junior/club team of edmonton oil kings (wchl), and the position if defence?"
    },
    {
        "answer": "SELECT series FROM table_name_39 WHERE season > 2008 AND format = \"super leg final\" AND conference = \"conference v\"",
        "context": "CREATE TABLE table_name_39 (series VARCHAR, conference VARCHAR, season VARCHAR, format VARCHAR)",
        "question": "What series has a season after 2008, super leg final as the format, and conference v as the conference?"
    },
    {
        "answer": "SELECT margin FROM table_name_26 WHERE winning_score = \u20137(71 - 72 - 67 - 71 = 281)",
        "context": "CREATE TABLE table_name_26 (margin VARCHAR, winning_score VARCHAR)",
        "question": "Which Margin has a Winning score of \u20137 (71-72-67-71=281)?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_42 WHERE winning_score = \u20134(69 - 72 - 70 - 69 = 280)",
        "context": "CREATE TABLE table_name_42 (year INTEGER, winning_score VARCHAR)",
        "question": "Which Year has a Winning score of \u20134 (69-72-70-69=280)?"
    },
    {
        "answer": "SELECT type FROM table_name_1 WHERE award = \"song of the year\" AND position = \"3rd place\"",
        "context": "CREATE TABLE table_name_1 (type VARCHAR, award VARCHAR, position VARCHAR)",
        "question": "What was the type that had an award for song of the year and the position of 3rd place?"
    },
    {
        "answer": "SELECT country FROM table_name_77 WHERE score = 73 - 71 - 70 = 214",
        "context": "CREATE TABLE table_name_77 (country VARCHAR, score VARCHAR)",
        "question": "The score of 73-71-70=214 belongs to what country?"
    },
    {
        "answer": "SELECT venue FROM table_name_15 WHERE batting_team = \"india\" AND batting_partners = \"sachin tendulkar and rahul dravid\"",
        "context": "CREATE TABLE table_name_15 (venue VARCHAR, batting_team VARCHAR, batting_partners VARCHAR)",
        "question": "In what venue was the Batting team India who featured partners Sachin Tendulkar and Rahul Dravid?"
    },
    {
        "answer": "SELECT COUNT(floors) FROM table_name_3 WHERE height * _m__ft_ = \"300 / 985\" AND rank < 3",
        "context": "CREATE TABLE table_name_3 (floors VARCHAR, rank VARCHAR, height VARCHAR, _m__ft_ VARCHAR)",
        "question": "How many floors were there with a building rank of less than 3 and a height of 300 / 985 m (ft)?"
    },
    {
        "answer": "SELECT conference FROM table_name_94 WHERE division = \"east\" AND home_stadium = \"fedexfield\"",
        "context": "CREATE TABLE table_name_94 (conference VARCHAR, division VARCHAR, home_stadium VARCHAR)",
        "question": "At which Conference was the Division in the East, and the Home Stadium named fedexfield?"
    },
    {
        "answer": "SELECT home_stadium FROM table_name_64 WHERE division = \"south\" AND conference = \"national\" AND city = \"charlotte, north carolina\"",
        "context": "CREATE TABLE table_name_64 (home_stadium VARCHAR, city VARCHAR, division VARCHAR, conference VARCHAR)",
        "question": "What is the name of the Home Stadium in which the Division is in the south, and Conference is national, as well as being in the city named charlotte, North Carolina?"
    },
    {
        "answer": "SELECT player FROM table_name_92 WHERE long > 28 AND yards = 222",
        "context": "CREATE TABLE table_name_92 (player VARCHAR, long VARCHAR, yards VARCHAR)",
        "question": "Can you tell me the Player that has the Long larger than 28, and the Yards of 222?"
    },
    {
        "answer": "SELECT venue FROM table_name_64 WHERE weight__kg_ > 55 AND result = \"won\"",
        "context": "CREATE TABLE table_name_64 (venue VARCHAR, weight__kg_ VARCHAR, result VARCHAR)",
        "question": "What venue has a weight (kg) greater than 55, and won as the result?"
    },
    {
        "answer": "SELECT AVG(pick__number) FROM table_name_44 WHERE position = \"tight end\" AND college = \"oklahoma state\" AND round > 1",
        "context": "CREATE TABLE table_name_44 (pick__number INTEGER, round VARCHAR, position VARCHAR, college VARCHAR)",
        "question": "A Round larger than 1, a College of Oklahoma state, and a average Pick # that has a Position of tight end is what?"
    },
    {
        "answer": "SELECT MIN(january) FROM table_name_13 WHERE opponent = \"florida panthers\" AND points < 59",
        "context": "CREATE TABLE table_name_13 (january INTEGER, opponent VARCHAR, points VARCHAR)",
        "question": "Which January is the lowest one that has an Opponent of florida panthers, and Points smaller than 59?"
    },
    {
        "answer": "SELECT score FROM table_name_18 WHERE january > 21 AND points = 63",
        "context": "CREATE TABLE table_name_18 (score VARCHAR, january VARCHAR, points VARCHAR)",
        "question": "Which Score has a January larger than 21, and Points of 63?"
    },
    {
        "answer": "SELECT score FROM table_name_39 WHERE champion = \"ken rosewall\" AND year = \"1957\"",
        "context": "CREATE TABLE table_name_39 (score VARCHAR, champion VARCHAR, year VARCHAR)",
        "question": "What is the score of champion Ken Rosewall in 1957?"
    },
    {
        "answer": "SELECT AVG(total_population__2005_estimate_) FROM table_name_78 WHERE province = \"west kalimantan (kalimantan barat)\" AND area__km_2__ < 147 OFFSET 307.00",
        "context": "CREATE TABLE table_name_78 (total_population__2005_estimate_ INTEGER, province VARCHAR, area__km_2__ VARCHAR)",
        "question": "Which Total population (2005 estimate) has a Province of west kalimantan (kalimantan barat), and an Area (km 2) smaller than 147,307.00?"
    },
    {
        "answer": "SELECT report FROM table_name_16 WHERE away_team = \"sydney spirit\" AND score = \"96-87\"",
        "context": "CREATE TABLE table_name_16 (report VARCHAR, away_team VARCHAR, score VARCHAR)",
        "question": "What was the report for an away team of Sydney Spirit and score of 96-87?"
    },
    {
        "answer": "SELECT schwaben FROM table_name_98 WHERE oberbayern = \"fc ingolstadt 04\" AND mittelfranken = \"sv seligenporten\"",
        "context": "CREATE TABLE table_name_98 (schwaben VARCHAR, oberbayern VARCHAR, mittelfranken VARCHAR)",
        "question": "Which Schwaben has an Oberbayern of fc ingolstadt 04 and a Mittelfranken of sv seligenporten"
    },
    {
        "answer": "SELECT schwaben FROM table_name_15 WHERE oberbayern = \"fc bayern munich ii\" AND mittelfranken = \"1. fc nuremberg ii\"",
        "context": "CREATE TABLE table_name_15 (schwaben VARCHAR, oberbayern VARCHAR, mittelfranken VARCHAR)",
        "question": "Which Schwaben has a Oberbayern of fc bayern munich ii and a Mittelfranken of 1. fc nuremberg ii?"
    },
    {
        "answer": "SELECT episode FROM table_name_50 WHERE challenge_winner = \"berto\"",
        "context": "CREATE TABLE table_name_50 (episode VARCHAR, challenge_winner VARCHAR)",
        "question": "Which episode has a Challenge Winner of berto?"
    },
    {
        "answer": "SELECT result FROM table_name_33 WHERE alternate = \"sun yue\" AND event = \"2007 wcc\"",
        "context": "CREATE TABLE table_name_33 (result VARCHAR, alternate VARCHAR, event VARCHAR)",
        "question": "What was the result for the 2007 WCC when Sun Yue was the alternate?"
    },
    {
        "answer": "SELECT MIN(election) FROM table_name_69 WHERE _number_of_candidates_nominated > 7 AND _percentage_of_popular_vote = \"2.75%\" AND _number_of_seats_won < 0",
        "context": "CREATE TABLE table_name_69 (election INTEGER, _number_of_seats_won VARCHAR, _number_of_candidates_nominated VARCHAR, _percentage_of_popular_vote VARCHAR)",
        "question": "What is the earliest election with more than 7 candidates nominated, a percentage of the popular vote of 2.75%, and 0 seats won?"
    },
    {
        "answer": "SELECT event FROM table_name_75 WHERE alternate = \"sun yue\" AND skip = \"wang bingyu(3rd)\"",
        "context": "CREATE TABLE table_name_75 (event VARCHAR, alternate VARCHAR, skip VARCHAR)",
        "question": "What event was Sun Yue the alternate and wang bingyu(3rd) the skip?"
    },
    {
        "answer": "SELECT team FROM table_name_18 WHERE game = 49",
        "context": "CREATE TABLE table_name_18 (team VARCHAR, game VARCHAR)",
        "question": "Which team has a Game of 49?"
    },
    {
        "answer": "SELECT MAX(total_cargo__metric_tonnes_) FROM table_name_66 WHERE rank < 4 AND airport = \"shanghai pudong international airport\"",
        "context": "CREATE TABLE table_name_66 (total_cargo__metric_tonnes_ INTEGER, rank VARCHAR, airport VARCHAR)",
        "question": "Which Total Cargo (Metric Tonnes) is the highest one that has a Rank smaller than 4, and an Airport of shanghai pudong international airport?"
    },
    {
        "answer": "SELECT MAX(facility_id) FROM table_name_15 WHERE city_of_license = \"springfield, ma\" AND erp___power_w < 230",
        "context": "CREATE TABLE table_name_15 (facility_id INTEGER, city_of_license VARCHAR, erp___power_w VARCHAR)",
        "question": "Which Facility ID has a City of license of springfield, ma, and a ERP / Power W smaller than 230?"
    },
    {
        "answer": "SELECT COUNT(*) FROM table_name_81 WHERE name = \"martin schmitt\" AND points < 235.7",
        "context": "",
        "question": "What is the total number of 1sts that Martin Schmitt had where he less than 235.7 points?"
    },
    {
        "answer": "SELECT nation FROM table_name_69 WHERE total < 63 AND silver < 2 AND bronze > 2 AND rank = \"8\"",
        "context": "CREATE TABLE table_name_69 (nation VARCHAR, rank VARCHAR, bronze VARCHAR, total VARCHAR, silver VARCHAR)",
        "question": "Which nation has total medals under 63, less than 2 silver, more than 2 bronze, and a rank of 8?"
    },
    {
        "answer": "SELECT SUM(division_titles) FROM table_name_87 WHERE playoff_appearances = 23 AND conference_titles > 1",
        "context": "CREATE TABLE table_name_87 (division_titles INTEGER, playoff_appearances VARCHAR, conference_titles VARCHAR)",
        "question": "How many division titles does the team with 23 playoff appearances and more than 1 conference titles have?"
    },
    {
        "answer": "SELECT AVG(seasons_completed) FROM table_name_97 WHERE division_titles < 1 AND playoff_appearances = 0 AND finals_appearances > 0",
        "context": "CREATE TABLE table_name_97 (seasons_completed INTEGER, finals_appearances VARCHAR, division_titles VARCHAR, playoff_appearances VARCHAR)",
        "question": "What is the average number of seasons completed of the team with less than 1 division titles, 0 playoff appearances, and more than 0 finals appearances?"
    },
    {
        "answer": "SELECT AVG(yards) FROM table_name_53 WHERE average < 4 AND long = 12 AND attempts < 29",
        "context": "CREATE TABLE table_name_53 (yards INTEGER, attempts VARCHAR, average VARCHAR, long VARCHAR)",
        "question": "What is the average Yards with an average of less than 4 and the long is 12 with less than 29 attempts?"
    },
    {
        "answer": "SELECT SUM(matches) FROM table_name_58 WHERE goalkeeper = \"carlos kameni\" AND average > 1.27",
        "context": "CREATE TABLE table_name_58 (matches INTEGER, goalkeeper VARCHAR, average VARCHAR)",
        "question": "How many matches did Carlos Kameni play in, who had an average larger than 1.27?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_62 WHERE tournament = \"german masters\"",
        "context": "CREATE TABLE table_name_62 (winning_score VARCHAR, tournament VARCHAR)",
        "question": "What was Olazabal's winning score in the German Masters?"
    },
    {
        "answer": "SELECT tie_no FROM table_name_88 WHERE home_team = \"altrincham\"",
        "context": "CREATE TABLE table_name_88 (tie_no VARCHAR, home_team VARCHAR)",
        "question": "What is the number of ties when Altrincham is the home team?"
    },
    {
        "answer": "SELECT MAX(pick) FROM table_name_27 WHERE nfl_club = \"baltimore colts\" AND round > 10",
        "context": "CREATE TABLE table_name_27 (pick INTEGER, nfl_club VARCHAR, round VARCHAR)",
        "question": "What is the largest pick by the Baltimore Colts in a round later than 10?"
    },
    {
        "answer": "SELECT country FROM table_name_95 WHERE label = \"toshiba-emi\" AND catalog = \"vjcp-68403\"",
        "context": "CREATE TABLE table_name_95 (country VARCHAR, label VARCHAR, catalog VARCHAR)",
        "question": "Which Country has a Label of Toshiba-emi and a Catalog of vjcp-68403?"
    },
    {
        "answer": "SELECT label FROM table_name_89 WHERE format = \"cd\" AND country = \"japan\" AND catalog = \"vjcp-68403\"",
        "context": "CREATE TABLE table_name_89 (label VARCHAR, catalog VARCHAR, format VARCHAR, country VARCHAR)",
        "question": "Which Label has a Format of cd, a Country of Japan and a Catalog of vjcp-68403?"
    },
    {
        "answer": "SELECT competition FROM table_name_26 WHERE opponent = \"peterborough phantoms\" AND date = 2",
        "context": "CREATE TABLE table_name_26 (competition VARCHAR, opponent VARCHAR, date VARCHAR)",
        "question": "What was the name of the competition that had Peterborough Phantoms as an opponent and a date of 2?"
    },
    {
        "answer": "SELECT height_metres___ft FROM table_name_23 WHERE town = \"rouen\"",
        "context": "CREATE TABLE table_name_23 (height_metres___ft VARCHAR, town VARCHAR)",
        "question": "What is the height in Rouen?"
    },
    {
        "answer": "SELECT lema_sublema FROM table_name_22 WHERE votes < 218656 AND ch_of_deputies = \"0\"",
        "context": "CREATE TABLE table_name_22 (lema_sublema VARCHAR, votes VARCHAR, ch_of_deputies VARCHAR)",
        "question": "Which LEMA/SUBLEMA that has Votes smaller than 218656, and a Ch of Deputies of 0?"
    },
    {
        "answer": "SELECT tournament FROM table_name_22 WHERE score_in_the_final = \"6\u20137, 6\u20132, 6\u20134\"",
        "context": "CREATE TABLE table_name_22 (tournament VARCHAR, score_in_the_final VARCHAR)",
        "question": "what tornament had the scores 6\u20137, 6\u20132, 6\u20134?"
    },
    {
        "answer": "SELECT SUM(pick) FROM table_name_70 WHERE school_club_team = \"maryland-eastern shore\" AND round < 2",
        "context": "CREATE TABLE table_name_70 (pick INTEGER, school_club_team VARCHAR, round VARCHAR)",
        "question": "What is the pick for the Maryland-Eastern Shore team with a round lower than 2?"
    },
    {
        "answer": "SELECT school_club_team FROM table_name_47 WHERE round < 4 AND player = \"jan van breda kolff\"",
        "context": "CREATE TABLE table_name_47 (school_club_team VARCHAR, round VARCHAR, player VARCHAR)",
        "question": "Which team has fewer than 4 rounds for Jan Van Breda Kolff?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_65 WHERE class = \"125cc\" AND team = \"mv agusta\" AND year > 1957",
        "context": "CREATE TABLE table_name_65 (points INTEGER, year VARCHAR, class VARCHAR, team VARCHAR)",
        "question": "Name the most points for class of 125cc and team of mv agusta with year more than 1957"
    },
    {
        "answer": "SELECT name FROM table_name_87 WHERE proposed = \"12/30/1982\" AND county = \"rockingham\" AND cerclis_id = \"nhd062004569\"",
        "context": "CREATE TABLE table_name_87 (name VARCHAR, cerclis_id VARCHAR, proposed VARCHAR, county VARCHAR)",
        "question": "What name was proposed on 12/30/1982 in rockingham county with a CERCLIS ID of nhd062004569?"
    },
    {
        "answer": "SELECT attendance FROM table_name_37 WHERE venue = \"lakeside park\"",
        "context": "CREATE TABLE table_name_37 (attendance VARCHAR, venue VARCHAR)",
        "question": "What was the attendance number for the venue of Lakeside Park?"
    },
    {
        "answer": "SELECT name FROM table_name_73 WHERE county = \"hillsborough\" AND proposed = \"09/08/1983\"",
        "context": "CREATE TABLE table_name_73 (name VARCHAR, county VARCHAR, proposed VARCHAR)",
        "question": "What name was proposed on 09/08/1983 in hillsborough county?"
    },
    {
        "answer": "SELECT first FROM table_name_86 WHERE bats = \"r\" AND throws = \"l\" AND dob = \"12 october 1977\"",
        "context": "CREATE TABLE table_name_86 (first VARCHAR, dob VARCHAR, bats VARCHAR, throws VARCHAR)",
        "question": "Which First has Bats of r, and Throws of l, and a DOB of 12 october 1977?"
    },
    {
        "answer": "SELECT AVG(enrollment) FROM table_name_55 WHERE team_nickname = \"wolverines\" AND founded > 1817",
        "context": "CREATE TABLE table_name_55 (enrollment INTEGER, team_nickname VARCHAR, founded VARCHAR)",
        "question": "what is the average enrollment when the team nickname is wolverines and founded is after 1817?"
    },
    {
        "answer": "SELECT director_s_ FROM table_name_44 WHERE writer_s_ = \"dana dorian\"",
        "context": "CREATE TABLE table_name_44 (director_s_ VARCHAR, writer_s_ VARCHAR)",
        "question": "Who was the director that worked with Dana Dorian as the writer?"
    },
    {
        "answer": "SELECT SUM(december) FROM table_name_59 WHERE opponent = \"vancouver canucks\" AND game < 33",
        "context": "CREATE TABLE table_name_59 (december INTEGER, opponent VARCHAR, game VARCHAR)",
        "question": "What is the sum for December against the vancouver canucks earlier than game 33?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_96 WHERE award_ceremony = \"drama desk award\" AND category = \"outstanding featured actress in a musical\"",
        "context": "CREATE TABLE table_name_96 (year INTEGER, award_ceremony VARCHAR, category VARCHAR)",
        "question": "What year is associated with a drama desk award ceremony and a Category of outstanding featured actress in a musical?"
    },
    {
        "answer": "SELECT AVG(loss) FROM table_name_26 WHERE long > 12 AND name = \"opponents\" AND gain > 1751",
        "context": "CREATE TABLE table_name_26 (loss INTEGER, gain VARCHAR, long VARCHAR, name VARCHAR)",
        "question": "What is the average Loss for the long of more than 12 with a name of opponents with a Gain larger than 1751?"
    },
    {
        "answer": "SELECT tie_no FROM table_name_10 WHERE date = \"18 february 1956\" AND home_team = \"charlton athletic\"",
        "context": "CREATE TABLE table_name_10 (tie_no VARCHAR, date VARCHAR, home_team VARCHAR)",
        "question": "What is Tie No, when Date is 18 February 1956, and when Home Team is Charlton Athletic?"
    },
    {
        "answer": "SELECT begin FROM table_name_18 WHERE state_territory = \"victoria\" AND icao = \"ymml\"",
        "context": "CREATE TABLE table_name_18 (begin VARCHAR, state_territory VARCHAR, icao VARCHAR)",
        "question": "What begin has victoria as the state/territory and a ICA0 of ymml?"
    },
    {
        "answer": "SELECT MIN(lost) FROM table_name_23 WHERE points_1 = \"53\" AND goals_for > 73",
        "context": "CREATE TABLE table_name_23 (lost INTEGER, points_1 VARCHAR, goals_for VARCHAR)",
        "question": "What is the fewest losses for teams with points of 53 and more than 73 goals for?"
    },
    {
        "answer": "SELECT MIN(drawn) FROM table_name_45 WHERE goal_difference = \"0\" AND goals_against < 55",
        "context": "CREATE TABLE table_name_45 (drawn INTEGER, goal_difference VARCHAR, goals_against VARCHAR)",
        "question": "What is the fewest draws for teams with a 0 goal difference and under 55 goals against?"
    },
    {
        "answer": "SELECT MIN(ofsted_number) FROM table_name_72 WHERE type = \"primary\" AND faith = \"ce\" AND intake = 30 AND dcsf_number < 3349",
        "context": "CREATE TABLE table_name_72 (ofsted_number INTEGER, dcsf_number VARCHAR, intake VARCHAR, type VARCHAR, faith VARCHAR)",
        "question": "What is the lowest Ofsted number for a primary with a CE faith, intake of 30 and a DCSF number lower than 3349?"
    },
    {
        "answer": "SELECT COUNT(against) FROM table_name_1 WHERE lost = 3 AND played < 6",
        "context": "CREATE TABLE table_name_1 (against VARCHAR, lost VARCHAR, played VARCHAR)",
        "question": "What is the sum of against scores when there are 3 losses and less than 6 games played?"
    },
    {
        "answer": "SELECT date FROM table_name_93 WHERE undecided = \"\u2013\" AND martin = \"7\u20139%\"",
        "context": "CREATE TABLE table_name_93 (date VARCHAR, undecided VARCHAR, martin VARCHAR)",
        "question": "What is the Date that has MARTIN of 7\u20139% and no Undecided?"
    },
    {
        "answer": "SELECT length__female_ FROM table_name_15 WHERE common_name = \"panther chameleon\"",
        "context": "CREATE TABLE table_name_15 (length__female_ VARCHAR, common_name VARCHAR)",
        "question": "What is the length of the Panther Chameleon?"
    },
    {
        "answer": "SELECT engine FROM table_name_8 WHERE year > 2006 AND power = \"bhp (kw)\"",
        "context": "CREATE TABLE table_name_8 (engine VARCHAR, year VARCHAR, power VARCHAR)",
        "question": "Which Engine has a Year that's Larger than 2006 and Power of BHP (KW)?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_name_61 WHERE surface = \"carpet\" AND tournament = \"milan , italy\"",
        "context": "CREATE TABLE table_name_61 (opponents_in_the_final VARCHAR, surface VARCHAR, tournament VARCHAR)",
        "question": "What is Opponents In The Final, when Surface is \"Carpet\", and when Tournament is \"Milan , Italy\"?"
    },
    {
        "answer": "SELECT MAX(inflation_index__2000) = 100 AS _ FROM table_name_34 WHERE year < 1980",
        "context": "CREATE TABLE table_name_34 (year INTEGER, inflation_index__2000 INTEGER)",
        "question": "What year before 1980 has is the highest Inflation Index (2000=100)?"
    },
    {
        "answer": "SELECT MAX(earnings___) AS $__ FROM table_name_26 WHERE player = \"tom watson\" AND rank > 2",
        "context": "CREATE TABLE table_name_26 (earnings___ INTEGER, player VARCHAR, rank VARCHAR)",
        "question": "What is the highest earnings for Tom watson who had a ranking larger than 2?"
    },
    {
        "answer": "SELECT date_to_[h_] FROM table_name_38 WHERE position_[f_] = \"defender\" AND goals < 3 AND appearances > 113 AND date_from_[g_] = \"1997\"",
        "context": "CREATE TABLE table_name_38 (date_to_ VARCHAR, h_ VARCHAR, appearances VARCHAR, date_from_ VARCHAR, g_ VARCHAR, goals VARCHAR, position_ VARCHAR, f_ VARCHAR)",
        "question": "What is Date to [H], when Position [F] is \"Defender\", when Goals is less than 3, when Appearances is greater than 113, and when Date From [G] is \"1997\"?"
    },
    {
        "answer": "SELECT club_source_[i_] FROM table_name_14 WHERE name = \"andrew mccombie category:articles with hcards\"",
        "context": "CREATE TABLE table_name_14 (club_source_ VARCHAR, i_ VARCHAR, name VARCHAR)",
        "question": "What is Club Source [I ], when Name is \"Andrew McCombie Category:Articles With hCards\"?"
    },
    {
        "answer": "SELECT MAX(effic) FROM table_name_56 WHERE avg_g < 305.6 AND gp_gs = \"13-13\"",
        "context": "CREATE TABLE table_name_56 (effic INTEGER, avg_g VARCHAR, gp_gs VARCHAR)",
        "question": "Which Effic is the highest one that has an Avg/G smaller than 305.6, and a GP-GS of 13-13?"
    },
    {
        "answer": "SELECT SUM(money___) AS $__ FROM table_name_59 WHERE country = \"united states\" AND to_par = \"e\" AND score = 72 - 75 - 70 - 71 = 288",
        "context": "CREATE TABLE table_name_59 (money___ INTEGER, country VARCHAR, to_par VARCHAR, score VARCHAR)",
        "question": "How much is the money ($) when the country is united states, to par is e and the score is 72-75-70-71=288?"
    },
    {
        "answer": "SELECT tournament FROM table_name_93 WHERE date = \"may 31, 1987\"",
        "context": "CREATE TABLE table_name_93 (tournament VARCHAR, date VARCHAR)",
        "question": "What tournament was on May 31, 1987?"
    },
    {
        "answer": "SELECT venue FROM table_name_41 WHERE date = \"23 october 1966\"",
        "context": "CREATE TABLE table_name_41 (venue VARCHAR, date VARCHAR)",
        "question": "What is the venue of the game that was played on 23 October 1966?"
    },
    {
        "answer": "SELECT SUM(tujia_population) FROM table_name_20 WHERE prefecture = \"zhangjiajie\" AND county = \"sangzhi\"",
        "context": "CREATE TABLE table_name_20 (tujia_population INTEGER, prefecture VARCHAR, county VARCHAR)",
        "question": "What is the sum of Tujia population with the Zhangjiajie prefecture in Sangzhi county?"
    },
    {
        "answer": "SELECT 2010 FROM table_name_30 WHERE 2006 = \"a\" AND 2011 = \"a\"",
        "context": "CREATE TABLE table_name_30 (Id VARCHAR)",
        "question": "What 2010 has an A 2006 & 2011?"
    },
    {
        "answer": "SELECT MIN(Severe) AS tropical_cyclones FROM table_name_88 WHERE strongest_storm = \"tiffany\" AND tropical_lows > 10",
        "context": "CREATE TABLE table_name_88 (Severe INTEGER, strongest_storm VARCHAR, tropical_lows VARCHAR)",
        "question": "What is the least number of tropical cyclones when the strongest storm was Tiffany and less than 10 tropical lows."
    },
    {
        "answer": "SELECT MIN(tropical_lows) FROM table_name_41 WHERE season = \"1993\u201394\" AND tropical_cyclones < 11",
        "context": "CREATE TABLE table_name_41 (tropical_lows INTEGER, season VARCHAR, tropical_cyclones VARCHAR)",
        "question": "What is the least amount of tropical lows for the 1993\u201394 season with less than 11 tropical cyclones"
    },
    {
        "answer": "SELECT AVG(week) FROM table_name_46 WHERE opponent = \"bye\"",
        "context": "CREATE TABLE table_name_46 (week INTEGER, opponent VARCHAR)",
        "question": "What week was the bye week?"
    },
    {
        "answer": "SELECT MIN(frequency__khz_) FROM table_name_61 WHERE licensed_location = \"longview\"",
        "context": "CREATE TABLE table_name_61 (frequency__khz_ INTEGER, licensed_location VARCHAR)",
        "question": "What is the smallest frequency (kHz) that is in the location of Longview?"
    },
    {
        "answer": "SELECT COUNT(length_feet) FROM table_name_97 WHERE parish = \"clarendon\" AND km_from_kingston = 71.2 AND length_meters < 21.3",
        "context": "CREATE TABLE table_name_97 (length_feet VARCHAR, length_meters VARCHAR, parish VARCHAR, km_from_kingston VARCHAR)",
        "question": "What is the total number of Length Feet, when Parish is Clarendon, when Km From Kingston is 71.2, and when Length Meters is less than 21.3?"
    },
    {
        "answer": "SELECT length_feet FROM table_name_28 WHERE mi_from_kingston > 84.5 AND length_meters > 55.5 AND name = \"unnamed\"",
        "context": "CREATE TABLE table_name_28 (length_feet VARCHAR, name VARCHAR, mi_from_kingston VARCHAR, length_meters VARCHAR)",
        "question": "What is Lenth Feet, when Mi From Kingston is greater than 84.5, when Length Meters is greater than 55.5, and when Name is Unnamed?"
    },
    {
        "answer": "SELECT fractievoorzitter FROM table_name_80 WHERE lijsttrekker = \"no elections\" AND year > 2005",
        "context": "CREATE TABLE table_name_80 (fractievoorzitter VARCHAR, lijsttrekker VARCHAR, year VARCHAR)",
        "question": "What is Fractievoorzitter, when Lijsttrekker is \"No Elections\", and when Year is after 2005?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_name_19 WHERE surface = \"hard\" AND date = \"january 5, 2003\"",
        "context": "CREATE TABLE table_name_19 (opponents_in_the_final VARCHAR, surface VARCHAR, date VARCHAR)",
        "question": "Who was the opponents in the final on January 5, 2003, on a hard surface?"
    },
    {
        "answer": "SELECT cabinet FROM table_name_79 WHERE year < 2001 AND lijsttrekker = \"no elections\" AND fractievoorzitter = \"hans van mierlo\" AND chair = \"s. van der loo\"",
        "context": "CREATE TABLE table_name_79 (cabinet VARCHAR, chair VARCHAR, fractievoorzitter VARCHAR, year VARCHAR, lijsttrekker VARCHAR)",
        "question": "What is Cabinet, when Year is before 2001, when Lijsttrekker is \"No Elections\", when Fractievoorzitter is \"Hans Van Mierlo\", and when Chair is \"S. Van Der Loo\"?"
    },
    {
        "answer": "SELECT tennis FROM table_name_78 WHERE golf = \"yes\" AND soccer = \"yes\" AND swimming = \"yes\" AND school = \"cleveland state\"",
        "context": "CREATE TABLE table_name_78 (tennis VARCHAR, school VARCHAR, swimming VARCHAR, golf VARCHAR, soccer VARCHAR)",
        "question": "What is the status for tennis at cleveland state who has yes for swimming, golf and soccer?"
    },
    {
        "answer": "SELECT AVG(pick) FROM table_name_70 WHERE school_club_team = \"florida state\"",
        "context": "CREATE TABLE table_name_70 (pick INTEGER, school_club_team VARCHAR)",
        "question": "What is the average pick for Florida State?"
    },
    {
        "answer": "SELECT at_neutral_site FROM table_name_87 WHERE overall_record = \"mu, 15-8\"",
        "context": "CREATE TABLE table_name_87 (at_neutral_site VARCHAR, overall_record VARCHAR)",
        "question": "With an overall record of MU, 15-8 what is the at neutral site?"
    },
    {
        "answer": "SELECT current_streak FROM table_name_28 WHERE last_10_meetings = \"ku, 8-2\"",
        "context": "CREATE TABLE table_name_28 (current_streak VARCHAR, last_10_meetings VARCHAR)",
        "question": "For what current streak is KU, 8-2 under last 10 meetings?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_37 WHERE player = \"ahmad fouzee masuri\" AND fa_cup > 0",
        "context": "CREATE TABLE table_name_37 (total VARCHAR, player VARCHAR, fa_cup VARCHAR)",
        "question": "How many totals have a Player of ahmad fouzee masuri, and an FA Cup larger than 0?"
    },
    {
        "answer": "SELECT SUM(fa_cup) FROM table_name_44 WHERE malaysia_cup > 0 AND total = 8",
        "context": "CREATE TABLE table_name_44 (fa_cup INTEGER, malaysia_cup VARCHAR, total VARCHAR)",
        "question": "Which FA Cup has a Malaysia Cup larger than 0, and a Total of 8?"
    },
    {
        "answer": "SELECT opponent FROM table_name_84 WHERE round = \"sf\"",
        "context": "CREATE TABLE table_name_84 (opponent VARCHAR, round VARCHAR)",
        "question": "What team was the opponent when the round was sf?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_99 WHERE venue = \"a\" AND scorers = \"di matteo, m. hughes\"",
        "context": "CREATE TABLE table_name_99 (attendance INTEGER, venue VARCHAR, scorers VARCHAR)",
        "question": "What is the number of people in attendance when venue shows A, and Di Matteo, M. Hughes were the scorers?"
    },
    {
        "answer": "SELECT score FROM table_name_80 WHERE player = \"craig stadler\"",
        "context": "CREATE TABLE table_name_80 (score VARCHAR, player VARCHAR)",
        "question": "What was Craig Stadler's score?"
    },
    {
        "answer": "SELECT player FROM table_name_83 WHERE total > 285 AND finish = \"t30\"",
        "context": "CREATE TABLE table_name_83 (player VARCHAR, total VARCHAR, finish VARCHAR)",
        "question": "Total larger than 285, and a Finish of t30 belongs to what player?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_name_38 WHERE record = \"18-20\"",
        "context": "CREATE TABLE table_name_38 (high_rebounds VARCHAR, record VARCHAR)",
        "question": "Which player for a team with an 18-20 record had the most rebounds in a game?"
    },
    {
        "answer": "SELECT to_par FROM table_name_3 WHERE place = \"t6\" AND country = \"united states\" AND player = \"leonard thompson\"",
        "context": "CREATE TABLE table_name_3 (to_par VARCHAR, player VARCHAR, place VARCHAR, country VARCHAR)",
        "question": "What is the to par for Leonard Thompson from the United States with a place of T6?"
    },
    {
        "answer": "SELECT score FROM table_name_49 WHERE home = \"toronto maple leafs\" AND date = \"november 10\"",
        "context": "CREATE TABLE table_name_49 (score VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "What's the score for Toronto Maple Leafs on November 10?"
    },
    {
        "answer": "SELECT SUM(run_2) FROM table_name_24 WHERE country = \"russia\" AND athlete = \"maria orlova\"",
        "context": "CREATE TABLE table_name_24 (run_2 INTEGER, country VARCHAR, athlete VARCHAR)",
        "question": "What is the run 2 of athlete Maria Orlova from Russia?"
    },
    {
        "answer": "SELECT MIN(d__max_) FROM table_name_47 WHERE morse_taper_number < 0",
        "context": "CREATE TABLE table_name_47 (d__max_ INTEGER, morse_taper_number INTEGER)",
        "question": "What is the minimum D (max) when the Morse Taper number is less than 0?"
    },
    {
        "answer": "SELECT finale FROM table_name_62 WHERE premiere = \"september 24, 2002\"",
        "context": "CREATE TABLE table_name_62 (finale VARCHAR, premiere VARCHAR)",
        "question": "When was the finale played when the show premiered on September 24, 2002?"
    },
    {
        "answer": "SELECT MIN(average_points_per_race_entered) FROM table_name_3 WHERE driver = \"kimi r\u00e4ikk\u00f6nen\" AND entries > 194",
        "context": "CREATE TABLE table_name_3 (average_points_per_race_entered INTEGER, driver VARCHAR, entries VARCHAR)",
        "question": "What is the lowest average points per race entered of driver kimi r\u00e4ikk\u00f6nen, who has more than 194 entries?"
    },
    {
        "answer": "SELECT MAX(average_points_per_race_entered) FROM table_name_75 WHERE points < 969 AND average_pre_2010 < 0",
        "context": "CREATE TABLE table_name_75 (average_points_per_race_entered INTEGER, points VARCHAR, average_pre_2010 VARCHAR)",
        "question": "What is the highest average points per race of the driver with less than 969 points and an average pre-2010 less than 0?"
    },
    {
        "answer": "SELECT losses FROM table_name_95 WHERE season > 1941 AND team = \"hamilton wildcats\" AND ties = 0",
        "context": "CREATE TABLE table_name_95 (losses VARCHAR, ties VARCHAR, season VARCHAR, team VARCHAR)",
        "question": "Which Losses have a Season larger than 1941, and a Team of hamilton wildcats, and Ties of 0?"
    },
    {
        "answer": "SELECT score FROM table_name_30 WHERE home_team = \"windsor & eton\"",
        "context": "CREATE TABLE table_name_30 (score VARCHAR, home_team VARCHAR)",
        "question": "Which Score has a Home team of windsor & eton?"
    },
    {
        "answer": "SELECT to_par FROM table_name_79 WHERE score = 71 - 71 - 70 - 73 = 285",
        "context": "CREATE TABLE table_name_79 (to_par VARCHAR, score VARCHAR)",
        "question": "In the game that has a score of 71-71-70-73=285 what is the to par?"
    },
    {
        "answer": "SELECT MIN(*) FROM table_name_2 WHERE points = 145 AND played < 114",
        "context": "",
        "question": "What is the lowest 1994-1995, when Points is 145, and when Played is less than 114?"
    },
    {
        "answer": "SELECT opponent FROM table_name_17 WHERE date = \"april 14\"",
        "context": "CREATE TABLE table_name_17 (opponent VARCHAR, date VARCHAR)",
        "question": "Which opponent was present on April 14?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_37 WHERE winner = \"rafael cavalcante\"",
        "context": "CREATE TABLE table_name_37 (round INTEGER, winner VARCHAR)",
        "question": "What is the average number of rounds for winner Rafael Cavalcante?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_67 WHERE lost = 0 AND games > 8",
        "context": "CREATE TABLE table_name_67 (points INTEGER, lost VARCHAR, games VARCHAR)",
        "question": "What is the sum of points values that are associated with 0 losses and more than 8 games?"
    },
    {
        "answer": "SELECT points_difference FROM table_name_97 WHERE points > 2 AND lost < 3 AND drawn < 1",
        "context": "CREATE TABLE table_name_97 (points_difference VARCHAR, drawn VARCHAR, points VARCHAR, lost VARCHAR)",
        "question": "What is the difference associated with more than 2 points, fewer than 3 losses, and fewer than 1 draw?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_99 WHERE detroit__dtw_ = \"$307.29\"",
        "context": "CREATE TABLE table_name_99 (year INTEGER, detroit__dtw_ VARCHAR)",
        "question": "For how many years did Detroit have a passenger fare of $307.29?"
    },
    {
        "answer": "SELECT club FROM table_name_74 WHERE league_cup_goals = 0 AND league_goals = \"11\" AND scorer = \"joe laidlaw\"",
        "context": "CREATE TABLE table_name_74 (club VARCHAR, scorer VARCHAR, league_cup_goals VARCHAR, league_goals VARCHAR)",
        "question": "Which Club has a League Cup goals of 0, and a League goals of 11, and a Scorer of joe laidlaw?"
    },
    {
        "answer": "SELECT MAX(league_cup_goals) FROM table_name_93 WHERE scorer = \"ken houghton\" AND fa_cup_goals < 0",
        "context": "CREATE TABLE table_name_93 (league_cup_goals INTEGER, scorer VARCHAR, fa_cup_goals VARCHAR)",
        "question": "Which League Cup goals have a Scorer of ken houghton, and an FA Cup goals smaller than 0?"
    },
    {
        "answer": "SELECT COUNT(played) FROM table_name_57 WHERE against > 11 AND team = \"botafogo\" AND position < 2",
        "context": "CREATE TABLE table_name_57 (played VARCHAR, position VARCHAR, against VARCHAR, team VARCHAR)",
        "question": "How much Played has an Against larger than 11, and a Team of botafogo, and a Position smaller than 2?"
    },
    {
        "answer": "SELECT association FROM table_name_39 WHERE nominee = \"indonesian idol\" AND year > 2005 AND result = \"nominated\"",
        "context": "CREATE TABLE table_name_39 (association VARCHAR, result VARCHAR, nominee VARCHAR, year VARCHAR)",
        "question": "What was the association for Indonesian Idol after 2005 with a Nominated Result?"
    },
    {
        "answer": "SELECT COUNT(lost) FROM table_name_61 WHERE drawn > 1 AND points < 14 AND against > 10",
        "context": "CREATE TABLE table_name_61 (lost VARCHAR, against VARCHAR, drawn VARCHAR, points VARCHAR)",
        "question": "How much Lost has a Drawn larger than 1, and Points smaller than 14, and an Against larger than 10?"
    },
    {
        "answer": "SELECT loss FROM table_name_56 WHERE opponent = \"chinatrust whales\" AND save = \"miguel saladin\"",
        "context": "CREATE TABLE table_name_56 (loss VARCHAR, opponent VARCHAR, save VARCHAR)",
        "question": "What's the loss of who has a Save of Miguel Saladin and played against Chinatrust Whales?"
    },
    {
        "answer": "SELECT attendance FROM table_name_8 WHERE record = \"86-71\"",
        "context": "CREATE TABLE table_name_8 (attendance VARCHAR, record VARCHAR)",
        "question": "what game had a score of 86-71"
    },
    {
        "answer": "SELECT position_in_1998 FROM table_name_10 WHERE team = \"slavia\"",
        "context": "CREATE TABLE table_name_10 (position_in_1998 VARCHAR, team VARCHAR)",
        "question": "What was the position of the Slavia team in 1998?"
    },
    {
        "answer": "SELECT rider FROM table_name_67 WHERE grid < 16 AND laps = 21 AND manufacturer = \"honda\" AND time = \"+10.583\"",
        "context": "CREATE TABLE table_name_67 (rider VARCHAR, time VARCHAR, manufacturer VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "What is Rider, when Grid is less than 16, when Laps is 21, when Manufacturer is Honda, and when Time is +10.583?"
    },
    {
        "answer": "SELECT finalist FROM table_name_69 WHERE semi_finalists = \"monica seles conchita mart\u00ednez\"",
        "context": "CREATE TABLE table_name_69 (finalist VARCHAR, semi_finalists VARCHAR)",
        "question": "Which Finalist has a Semi finalists of monica seles conchita mart\u00ednez?"
    },
    {
        "answer": "SELECT tournament FROM table_name_62 WHERE semi_finalists = \"martina hingis joannette kruger\"",
        "context": "CREATE TABLE table_name_62 (tournament VARCHAR, semi_finalists VARCHAR)",
        "question": "Which Tournament has a Semi finalists of martina hingis joannette kruger?"
    },
    {
        "answer": "SELECT player_name FROM table_name_64 WHERE position = \"linebacker\" AND college = \"tennessee\"",
        "context": "CREATE TABLE table_name_64 (player_name VARCHAR, position VARCHAR, college VARCHAR)",
        "question": "Who was a linebacker at Tennessee?"
    },
    {
        "answer": "SELECT fleet_number_s_ FROM table_name_95 WHERE quantity_preserved = \"0\" AND quantity_made = \"1\" AND class = \"z\"",
        "context": "CREATE TABLE table_name_95 (fleet_number_s_ VARCHAR, class VARCHAR, quantity_preserved VARCHAR, quantity_made VARCHAR)",
        "question": "What is Fleet Number(s), when Quantity Preserved is \"0\", when Quantity Made is 1, and when Class is \"Z\"?"
    },
    {
        "answer": "SELECT result FROM table_name_92 WHERE venue = \"afg arena, st. gallen\" AND score = \"1\u20130\"",
        "context": "CREATE TABLE table_name_92 (result VARCHAR, venue VARCHAR, score VARCHAR)",
        "question": "What is the Result of the AFG Arena, St. Gallen Competition with a Score of 1\u20130?"
    },
    {
        "answer": "SELECT winning_team FROM table_name_46 WHERE winning_pitcher = \"chris young\" AND location = \"arlington\"",
        "context": "CREATE TABLE table_name_46 (winning_team VARCHAR, winning_pitcher VARCHAR, location VARCHAR)",
        "question": "Which winning team has a winning pitcher of Chris Young and was played in Arlington?"
    },
    {
        "answer": "SELECT semi_final_dual_television_commentator FROM table_name_96 WHERE grand_final_television_commentator = \"pierre tchernia\" AND spokesperson = \"unknown\"",
        "context": "CREATE TABLE table_name_96 (semi_final_dual_television_commentator VARCHAR, grand_final_television_commentator VARCHAR, spokesperson VARCHAR)",
        "question": "What is the semi-final dual television commentator status of the year with Pierre Tchernia as the grand final television commentator and an unknown spokesperson?"
    },
    {
        "answer": "SELECT semi_final_television_commentator FROM table_name_54 WHERE spokesperson = \"unknown\" AND year_s_ = 1962",
        "context": "CREATE TABLE table_name_54 (semi_final_television_commentator VARCHAR, spokesperson VARCHAR, year_s_ VARCHAR)",
        "question": "What is the semi-final television commentator status in 1962 with an unknown spokesperson?"
    },
    {
        "answer": "SELECT AVG(elevation__ft_) FROM table_name_77 WHERE range = \"unaka mountains\" AND peak_name = \"roan high bluff\" AND isolation > 1.54",
        "context": "CREATE TABLE table_name_77 (elevation__ft_ INTEGER, isolation VARCHAR, range VARCHAR, peak_name VARCHAR)",
        "question": "WHAT IS THE ELEVATION OF THE UNAKA MOUNTAINS, IN ROAN HIGH BLUFF PEAK, AND ISOLATION LARGER THAN 1.54?"
    },
    {
        "answer": "SELECT grand_final_television_commentator FROM table_name_20 WHERE year_s_ > 1959 AND grand_final_dual_television_commentator = \"dave\" AND spokesperson = \"marie myriam\"",
        "context": "CREATE TABLE table_name_20 (grand_final_television_commentator VARCHAR, spokesperson VARCHAR, year_s_ VARCHAR, grand_final_dual_television_commentator VARCHAR)",
        "question": "What is the grand final television commentator status after 1959 when Dave was the grand final dual television commentator and Marie Myriam was the spokesperson?"
    },
    {
        "answer": "SELECT rank FROM table_name_52 WHERE bronze < 1 AND silver < 1",
        "context": "CREATE TABLE table_name_52 (rank VARCHAR, bronze VARCHAR, silver VARCHAR)",
        "question": "what is the rank when bronze is less than 1 and silver is less than 1?"
    },
    {
        "answer": "SELECT production_code FROM table_22347090_6 WHERE us_viewers__million_ = \"1.32\"",
        "context": "CREATE TABLE table_22347090_6 (production_code VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "What is the production code for the episode that had 1.32 million U.S. viewers?"
    },
    {
        "answer": "SELECT COUNT(enrollment) FROM table_name_43 WHERE affiliation = \"public\" AND founded < 1866",
        "context": "CREATE TABLE table_name_43 (enrollment VARCHAR, affiliation VARCHAR, founded VARCHAR)",
        "question": "What is the total enrollment for an affiliation of public, and was founded before 1866?"
    },
    {
        "answer": "SELECT away_captain FROM table_name_5 WHERE venue = \"adelaide oval\"",
        "context": "CREATE TABLE table_name_5 (away_captain VARCHAR, venue VARCHAR)",
        "question": "What is the name of the away captain when the game was at Adelaide Oval?"
    },
    {
        "answer": "SELECT COUNT(enrollment) FROM table_name_1 WHERE affiliation = \"private/catholic\" AND founded > 1842",
        "context": "CREATE TABLE table_name_1 (enrollment VARCHAR, affiliation VARCHAR, founded VARCHAR)",
        "question": "What is the total enrollment for a private/catholic affiliation and founded after 1842?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_42 WHERE runner_s__up = \"beth daniel\" AND margin_of_victory = \"7 strokes\"",
        "context": "CREATE TABLE table_name_42 (winning_score VARCHAR, runner_s__up VARCHAR, margin_of_victory VARCHAR)",
        "question": "What was the winning score when the runner-up was Beth Daniel and the margin of victory was 7 strokes?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_4 WHERE margin_of_victory = \"playoff\" AND tournament = \"safeco classic\"",
        "context": "CREATE TABLE table_name_4 (winning_score VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "What was the winning score when the margin of victory was a playoff for the Tournament of safeco classic?"
    },
    {
        "answer": "SELECT became_duchess FROM table_name_77 WHERE name = \"eleonor magdalene of the palatinate-neuburg\"",
        "context": "CREATE TABLE table_name_77 (became_duchess VARCHAR, name VARCHAR)",
        "question": "When did eleonor magdalene of the palatinate-neuburg become duchess?"
    },
    {
        "answer": "SELECT player FROM table_name_88 WHERE place = \"t5\" AND score = 69 - 72 = 141",
        "context": "CREATE TABLE table_name_88 (player VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "What is Player, when Place is \"T5\", and when Score is \"69-72=141\"?"
    },
    {
        "answer": "SELECT type FROM table_name_62 WHERE location = \"nova scotia\" AND disaster = \"rms atlantic\"",
        "context": "CREATE TABLE table_name_62 (type VARCHAR, location VARCHAR, disaster VARCHAR)",
        "question": "What type of disaster is rms atlantic categorized in that was located in Nova Scotia?"
    },
    {
        "answer": "SELECT bike FROM table_name_36 WHERE time = \"accident\" AND laps < 9 AND grid = 5",
        "context": "CREATE TABLE table_name_36 (bike VARCHAR, grid VARCHAR, time VARCHAR, laps VARCHAR)",
        "question": "What bike has an accident time, less than 9 laps, and a 5 grid?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_94 WHERE producer = \"star cinema\" AND director = \"rory quintos\" AND title = \"kay tagal kang hinintay\"",
        "context": "CREATE TABLE table_name_94 (year VARCHAR, title VARCHAR, producer VARCHAR, director VARCHAR)",
        "question": "How many years was Kay Tagal Kang Hinintay directed by Rory Quintos and produced by Star Cinema?"
    },
    {
        "answer": "SELECT MAX(first_elected) FROM table_name_37 WHERE counties_represented = \"baltimore county, howard\" AND committee = \"environmental matters (vice-chair)\"",
        "context": "CREATE TABLE table_name_37 (first_elected INTEGER, counties_represented VARCHAR, committee VARCHAR)",
        "question": "When Baltimore County, Howard are represented, what's the first elected when the committee is environmental matters (vice-chair)?"
    },
    {
        "answer": "SELECT party FROM table_name_50 WHERE counties_represented = \"howard\" AND delegate = \"turner, frank s. frank s. turner\"",
        "context": "CREATE TABLE table_name_50 (party VARCHAR, counties_represented VARCHAR, delegate VARCHAR)",
        "question": "What party is the delegate of Turner, Frank S. Frank S. Turner of Howard County?"
    },
    {
        "answer": "SELECT worldwide_gross FROM table_name_43 WHERE rank > 8 AND studio = \"columbia pictures\" AND director_s_ = \"martin campbell\"",
        "context": "CREATE TABLE table_name_43 (worldwide_gross VARCHAR, director_s_ VARCHAR, rank VARCHAR, studio VARCHAR)",
        "question": "For the movie directed by Martin Campbell at Columbia pictures with a ranking larger than 8, what is its worldwide gross?"
    },
    {
        "answer": "SELECT event FROM table_name_67 WHERE method = \"submission (armbar)\" AND opponent = \"jeff gibson\"",
        "context": "CREATE TABLE table_name_67 (event VARCHAR, method VARCHAR, opponent VARCHAR)",
        "question": "What is the event when the method was submission (armbar), and Jeff Gibson was the opponent?"
    },
    {
        "answer": "SELECT player FROM table_name_78 WHERE matches = \"9\"",
        "context": "CREATE TABLE table_name_78 (player VARCHAR, matches VARCHAR)",
        "question": "what player matched up with 9"
    },
    {
        "answer": "SELECT 2 AS nd_leg FROM table_name_48 WHERE team_1 = \"internacional\"",
        "context": "CREATE TABLE table_name_48 (team_1 VARCHAR)",
        "question": "What is the 2nd leg of the Internacional Team 1?"
    },
    {
        "answer": "SELECT highest_attendance FROM table_name_69 WHERE rank = 90 AND venue_name = \"infineon raceway\"",
        "context": "CREATE TABLE table_name_69 (highest_attendance VARCHAR, rank VARCHAR, venue_name VARCHAR)",
        "question": "What is Highest Attendance, when Rank is 90, and when Venue Name is Infineon Raceway?"
    },
    {
        "answer": "SELECT record FROM table_name_9 WHERE visitor = \"vancouver\"",
        "context": "CREATE TABLE table_name_9 (record VARCHAR, visitor VARCHAR)",
        "question": "What was the record when Vancouver was the visitor?"
    },
    {
        "answer": "SELECT place FROM table_name_97 WHERE to_par = \"+1\" AND score = 74 - 70 - 69 - 72 = 285",
        "context": "CREATE TABLE table_name_97 (place VARCHAR, to_par VARCHAR, score VARCHAR)",
        "question": "What is the Place of the Player with a To par of +1 and Score of 74-70-69-72=285?"
    },
    {
        "answer": "SELECT COUNT(episode) FROM table_name_70 WHERE performer_3 = \"hugh laurie\"",
        "context": "CREATE TABLE table_name_70 (episode VARCHAR, performer_3 VARCHAR)",
        "question": "What is the total number of episodes where hugh laurie was the 3rd performer?"
    },
    {
        "answer": "SELECT MIN(drawn) FROM table_name_38 WHERE position < 7 AND against = 19",
        "context": "CREATE TABLE table_name_38 (drawn INTEGER, position VARCHAR, against VARCHAR)",
        "question": "What is the smallest amount of draws when the position is less than 7 and the against is 19?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_43 WHERE lost < 4 AND against < 16",
        "context": "CREATE TABLE table_name_43 (points INTEGER, lost VARCHAR, against VARCHAR)",
        "question": "What is the least amount of points when there were less than 4 losses and less than 16 against?"
    },
    {
        "answer": "SELECT score FROM table_name_52 WHERE home = \"quebec nordiques\" AND visitor = \"vancouver blazers\" AND date = \"february 28\"",
        "context": "CREATE TABLE table_name_52 (score VARCHAR, date VARCHAR, home VARCHAR, visitor VARCHAR)",
        "question": "Which Score has a Home of quebec nordiques, and a Visitor of vancouver blazers on february 28?"
    },
    {
        "answer": "SELECT home FROM table_name_62 WHERE visitor = \"quebec nordiques\" AND score = \"3\u20134\" AND record = \"8\u20138\u20131\"",
        "context": "CREATE TABLE table_name_62 (home VARCHAR, record VARCHAR, visitor VARCHAR, score VARCHAR)",
        "question": "Which Home has a Visitor of quebec nordiques, and a Score of 3\u20134, and a Record of 8\u20138\u20131?"
    },
    {
        "answer": "SELECT date FROM table_name_84 WHERE opponent = \"@ carolina hurricanes\"",
        "context": "CREATE TABLE table_name_84 (date VARCHAR, opponent VARCHAR)",
        "question": "What is Date, when Opponent is @ Carolina Hurricanes?"
    },
    {
        "answer": "SELECT MIN(game) FROM table_name_68 WHERE location = \"philips arena\" AND attendance < 15 OFFSET 619",
        "context": "CREATE TABLE table_name_68 (game INTEGER, location VARCHAR, attendance VARCHAR)",
        "question": "What is the lowest Game, when Location is Philips Arena, and when Attendance is less than 15,619?"
    },
    {
        "answer": "SELECT democratic FROM table_name_99 WHERE district < 7 AND republican = \"dan mansell\"",
        "context": "CREATE TABLE table_name_99 (democratic VARCHAR, district VARCHAR, republican VARCHAR)",
        "question": "Which Democratic has a District smaller than 7, and a Republican of dan mansell?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_10 WHERE high_assists = \"luke ridnour (10)\" AND date = \"december 3\"",
        "context": "CREATE TABLE table_name_10 (location_attendance VARCHAR, high_assists VARCHAR, date VARCHAR)",
        "question": "Can you tell me the Location Attendance that has the High assists of luke ridnour (10), and the Date of december 3?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_98 WHERE high_points = \"andrew bogut (17)\"",
        "context": "CREATE TABLE table_name_98 (location_attendance VARCHAR, high_points VARCHAR)",
        "question": "Can you tell me Location Attendance that has the High points of andrew bogut (17)?"
    },
    {
        "answer": "SELECT state FROM table_name_23 WHERE major_series = \"imsa gt\" AND track = \"new orleans\"",
        "context": "CREATE TABLE table_name_23 (state VARCHAR, major_series VARCHAR, track VARCHAR)",
        "question": "What is the State with the imsa gt as the Major Series and a track in new orleans?"
    },
    {
        "answer": "SELECT place FROM table_name_15 WHERE country = \"united states\" AND to_par = \"+1\" AND player = \"tim herron\"",
        "context": "CREATE TABLE table_name_15 (place VARCHAR, player VARCHAR, country VARCHAR, to_par VARCHAR)",
        "question": "What is the place of plyaer Tim Herron from the United States with a to par of +1?"
    },
    {
        "answer": "SELECT MAX(unfavorable) FROM table_name_34 WHERE favorable = 34 AND date = \"1953 august\" AND no_opinion > 24",
        "context": "CREATE TABLE table_name_34 (unfavorable INTEGER, no_opinion VARCHAR, favorable VARCHAR, date VARCHAR)",
        "question": "What is the most unfavorable that is favorable of 34 during 1953 August and has a no opinion score larger than 24?"
    },
    {
        "answer": "SELECT city_of_license FROM table_name_43 WHERE frequency_mhz < 95.9 AND call_sign = \"w223au\"",
        "context": "CREATE TABLE table_name_43 (city_of_license VARCHAR, frequency_mhz VARCHAR, call_sign VARCHAR)",
        "question": "What City of license has a Frequency MHz smaller than 95.9 with w223au as the call sign?"
    },
    {
        "answer": "SELECT finalist FROM table_name_20 WHERE surface = \"clay\" AND semifinalists = \"yevgeny kafelnikov juan carlos ferrero (2)\"",
        "context": "CREATE TABLE table_name_20 (finalist VARCHAR, surface VARCHAR, semifinalists VARCHAR)",
        "question": "Who is the Finalist, when the Surface is Clay, and when the Semifinalist is Yevgeny Kafelnikov Juan Carlos Ferrero (2)?"
    },
    {
        "answer": "SELECT south_dakota FROM table_name_17 WHERE oklahoma = \"bush\"",
        "context": "CREATE TABLE table_name_17 (south_dakota VARCHAR, oklahoma VARCHAR)",
        "question": "What  South Dakota has Bush of Oklahoma?"
    },
    {
        "answer": "SELECT train_name FROM table_name_61 WHERE frequency__inbound_outbound_ = \"daily\" AND destination = \"jammutawi\"",
        "context": "CREATE TABLE table_name_61 (train_name VARCHAR, frequency__inbound_outbound_ VARCHAR, destination VARCHAR)",
        "question": "What is the train name of the rail with a daily frequency and Jammutawi as the destination?"
    },
    {
        "answer": "SELECT MIN(tries) FROM table_name_84 WHERE player = \"matt diskin\" AND points > 16",
        "context": "CREATE TABLE table_name_84 (tries INTEGER, player VARCHAR, points VARCHAR)",
        "question": "What is the smallest number of tries when Matt Diskin is the player and there are more than 16 points?"
    },
    {
        "answer": "SELECT position FROM table_name_58 WHERE points > 4 AND tries < 12 AND squad_no > 1 AND player = \"ali lauitiiti\"",
        "context": "CREATE TABLE table_name_58 (position VARCHAR, player VARCHAR, squad_no VARCHAR, points VARCHAR, tries VARCHAR)",
        "question": "Which position has more than 4 points, less than 12 tries, a squad number of more than 1, and where Ali Lauitiiti is a player?"
    },
    {
        "answer": "SELECT MAX(games) FROM table_name_58 WHERE points < 4 AND drawn = 1 AND lost < 6",
        "context": "CREATE TABLE table_name_58 (games INTEGER, lost VARCHAR, points VARCHAR, drawn VARCHAR)",
        "question": "What is the highest games from a game with points less than 4, drawn of 1 and a lost less than 6?"
    },
    {
        "answer": "SELECT country FROM table_name_90 WHERE player = \"david gilford\"",
        "context": "CREATE TABLE table_name_90 (country VARCHAR, player VARCHAR)",
        "question": "What country does david gilford play for?"
    },
    {
        "answer": "SELECT score FROM table_name_24 WHERE visitor = \"chicago black hawks\" AND date = \"november 12\"",
        "context": "CREATE TABLE table_name_24 (score VARCHAR, visitor VARCHAR, date VARCHAR)",
        "question": "What is the score of the game on November 12 with the Chicago Black Hawks as the visitor team?"
    },
    {
        "answer": "SELECT AVG(position) FROM table_name_69 WHERE points < 54 AND equipment = \"husaberg-bsu\"",
        "context": "CREATE TABLE table_name_69 (position INTEGER, points VARCHAR, equipment VARCHAR)",
        "question": "What is the average position for a driver with less than 54 points and husaberg-bsu as equipment?"
    },
    {
        "answer": "SELECT class_aAAA FROM table_name_76 WHERE school_year = \"2000-01\"",
        "context": "CREATE TABLE table_name_76 (class_aAAA VARCHAR, school_year VARCHAR)",
        "question": "Name the clas AAAA of school year 2000-01"
    },
    {
        "answer": "SELECT COUNT(goals) FROM table_name_62 WHERE transfer_fee = \"\u00a32,500,000\"",
        "context": "CREATE TABLE table_name_62 (goals VARCHAR, transfer_fee VARCHAR)",
        "question": "how many times is the transfer fee \u00a32,500,000?"
    },
    {
        "answer": "SELECT crew_chief FROM table_name_81 WHERE car_s_ = \"chevrolet monte carlo\" AND team = \"joe gibbs racing\" AND primary_sponsor_s_ = \"fedex\"",
        "context": "CREATE TABLE table_name_81 (crew_chief VARCHAR, primary_sponsor_s_ VARCHAR, car_s_ VARCHAR, team VARCHAR)",
        "question": "Who is the crew chief of team Joe Gibbs Racing, which has a Chevrolet Monte Carlo and Fedex as the primary sponsor?"
    },
    {
        "answer": "SELECT driver_s_ FROM table_name_16 WHERE crew_chief = \"derrick finley\"",
        "context": "CREATE TABLE table_name_16 (driver_s_ VARCHAR, crew_chief VARCHAR)",
        "question": "Who is the driver of the team with the crew chief Derrick Finley?"
    },
    {
        "answer": "SELECT crew_chief FROM table_name_10 WHERE team = \"chip ganassi racing with felix sabates\" AND driver_s_ = \"casey mears\"",
        "context": "CREATE TABLE table_name_10 (crew_chief VARCHAR, team VARCHAR, driver_s_ VARCHAR)",
        "question": "Who is the crew chief of team Chip Ganassi Racing with Felix Sabates, which has Casey Mears as the driver?"
    },
    {
        "answer": "SELECT record FROM table_name_26 WHERE visitor = \"quebec nordiques\" AND date = \"april 22\"",
        "context": "CREATE TABLE table_name_26 (record VARCHAR, visitor VARCHAR, date VARCHAR)",
        "question": "What is the record when the visiting team was the Quebec Nordiques on April 22?"
    },
    {
        "answer": "SELECT country FROM table_name_21 WHERE score = 66 - 70 - 69 = 205",
        "context": "CREATE TABLE table_name_21 (country VARCHAR, score VARCHAR)",
        "question": "What is the country with a 66-70-69=205 score?"
    },
    {
        "answer": "SELECT objectnumber FROM table_name_95 WHERE location = \"barrow hill\" AND wheels = \"4-4-0\"",
        "context": "CREATE TABLE table_name_95 (objectnumber VARCHAR, location VARCHAR, wheels VARCHAR)",
        "question": "What is the Object Number for the item with wheels 4-4-0 and a location of Barrow Hill?"
    },
    {
        "answer": "SELECT SUM(long) FROM table_name_58 WHERE loss > 2 AND gain = 157 AND avg_g < 129",
        "context": "CREATE TABLE table_name_58 (long INTEGER, avg_g VARCHAR, loss VARCHAR, gain VARCHAR)",
        "question": "How much Long has a Loss larger than 2, and a Gain of 157, and an Avg/G smaller than 129?"
    },
    {
        "answer": "SELECT country FROM table_name_93 WHERE player = \"ian woosnam\"",
        "context": "CREATE TABLE table_name_93 (country VARCHAR, player VARCHAR)",
        "question": "What is the country of player ian woosnam?"
    },
    {
        "answer": "SELECT team_nickname FROM table_name_68 WHERE joined_tschl = 2010 AND home_arena = \"kettering rec center\" AND team_website = \"dayton hockey\"",
        "context": "CREATE TABLE table_name_68 (team_nickname VARCHAR, team_website VARCHAR, joined_tschl VARCHAR, home_arena VARCHAR)",
        "question": "what is the team nickname when joined tschl is 2010 and home arena is kettering rec center and the team website is dayton hockey?"
    },
    {
        "answer": "SELECT result FROM table_name_94 WHERE week > 3 AND opponent = \"new york giants\"",
        "context": "CREATE TABLE table_name_94 (result VARCHAR, week VARCHAR, opponent VARCHAR)",
        "question": "What was the result of the game after week 3 against the New York Giants?"
    },
    {
        "answer": "SELECT driver FROM table_name_74 WHERE grid < 24 AND laps < 61 AND constructor = \"ferrari\"",
        "context": "CREATE TABLE table_name_74 (driver VARCHAR, constructor VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "Who has a grid smaller than 24, less than 61 laps, and a ferrari constructor?"
    },
    {
        "answer": "SELECT year_built FROM table_name_54 WHERE current_status = \"tbsc\" AND boat_builder = \"j. jones, trearddur bay\"",
        "context": "CREATE TABLE table_name_54 (year_built VARCHAR, current_status VARCHAR, boat_builder VARCHAR)",
        "question": "What year did J. Jones, trearddur bay build a boat with a current status of tbsc?"
    },
    {
        "answer": "SELECT date FROM table_name_58 WHERE location = \"florida\" AND tournament = \"monsanto open\"",
        "context": "CREATE TABLE table_name_58 (date VARCHAR, location VARCHAR, tournament VARCHAR)",
        "question": "What date was the Monsanto open located in Florida?"
    },
    {
        "answer": "SELECT boat_builder FROM table_name_42 WHERE year_built = \"1910/11\" AND number = 39",
        "context": "CREATE TABLE table_name_42 (boat_builder VARCHAR, year_built VARCHAR, number VARCHAR)",
        "question": "What is the boat builder for a boat built in 1910/11 and a number of 39?"
    },
    {
        "answer": "SELECT COUNT(week) FROM table_name_64 WHERE date = \"november 30, 1958\" AND attendance > 33 OFFSET 240",
        "context": "CREATE TABLE table_name_64 (week VARCHAR, date VARCHAR, attendance VARCHAR)",
        "question": "What is the Week number on November 30, 1958 with more than 33,240 in Attendance?"
    },
    {
        "answer": "SELECT tatsuhito_takaiwa FROM table_name_50 WHERE ryusuke_taguchi = \"taguchi (14:31)\"",
        "context": "CREATE TABLE table_name_50 (tatsuhito_takaiwa VARCHAR, ryusuke_taguchi VARCHAR)",
        "question": "Name for me the tatsuhito takaiwa for Ryusuke Taguchi of taguchi (14:31)"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_98 WHERE ground = \"telstra dome\"",
        "context": "CREATE TABLE table_name_98 (home_team VARCHAR, ground VARCHAR)",
        "question": "What is the home team score for the team that has a home field of the Telstra Dome?"
    },
    {
        "answer": "SELECT sensor FROM table_name_53 WHERE sensor_resolution = \"355x288\" AND camera = \"naturalpoint trackir 3\"",
        "context": "CREATE TABLE table_name_53 (sensor VARCHAR, sensor_resolution VARCHAR, camera VARCHAR)",
        "question": "What was the sensor with a resolution of 355x288 for a Naturalpoint Trackir 3?"
    },
    {
        "answer": "SELECT sensor FROM table_name_21 WHERE sensor_resolution = \"640x480\" AND cpu_usage = \"small\" AND output = \"jpeg compressed\" AND camera = \"sony playstation eyetoy\"",
        "context": "CREATE TABLE table_name_21 (sensor VARCHAR, camera VARCHAR, output VARCHAR, sensor_resolution VARCHAR, cpu_usage VARCHAR)",
        "question": "What sensor has a resolution of 640x480 with small CPU usage, jpeg compressed output and a camera of sony playstation eyetoy?"
    },
    {
        "answer": "SELECT AVG(week) FROM table_name_96 WHERE result = \"w 21\u20137\"",
        "context": "CREATE TABLE table_name_96 (week INTEGER, result VARCHAR)",
        "question": "Result of w 21\u20137 had what average week?"
    },
    {
        "answer": "SELECT MIN(her_age) FROM table_name_60 WHERE year_of_marriage < 1853 AND _number_of_children < 8 AND name = \"eliza maria partridge\"",
        "context": "CREATE TABLE table_name_60 (her_age INTEGER, name VARCHAR, year_of_marriage VARCHAR, _number_of_children VARCHAR)",
        "question": "What is the lowest figure for her age when the year of marriage is before 1853, the number of children is less than 8, and the bride was Eliza Maria Partridge?"
    },
    {
        "answer": "SELECT SUM(her_age) FROM table_name_84 WHERE his_age < 33 AND name = \"diontha walker\" AND _number_of_children < 0",
        "context": "CREATE TABLE table_name_84 (her_age INTEGER, _number_of_children VARCHAR, his_age VARCHAR, name VARCHAR)",
        "question": "What is the total number of her age figures where his age is less than 33, the bride was diontha walker, and the number of children was less than 0?"
    },
    {
        "answer": "SELECT loss FROM table_name_90 WHERE opponent = \"california angels\" AND attendance = \"10,886\"",
        "context": "CREATE TABLE table_name_90 (loss VARCHAR, opponent VARCHAR, attendance VARCHAR)",
        "question": "Who took the loss against the California Angels when the attendance was 10,886?"
    },
    {
        "answer": "SELECT opponent FROM table_name_13 WHERE october < 20 AND points = 8",
        "context": "CREATE TABLE table_name_13 (opponent VARCHAR, october VARCHAR, points VARCHAR)",
        "question": "What opponent has october less than 20, and 8 for points?"
    },
    {
        "answer": "SELECT date FROM table_name_56 WHERE opponent = \"luxembourg\"",
        "context": "CREATE TABLE table_name_56 (date VARCHAR, opponent VARCHAR)",
        "question": "What day did Yugoslavia play Luxembourg?"
    },
    {
        "answer": "SELECT partner FROM table_name_38 WHERE score = \"7\u20136, 6\u20133\"",
        "context": "CREATE TABLE table_name_38 (partner VARCHAR, score VARCHAR)",
        "question": "Which Partner has a Score of 7\u20136, 6\u20133?"
    },
    {
        "answer": "SELECT uci_rating FROM table_name_81 WHERE location = \"italy\" AND team = \"progetto ciclismo alplast\"",
        "context": "CREATE TABLE table_name_81 (uci_rating VARCHAR, location VARCHAR, team VARCHAR)",
        "question": "What is the UCI rating of the race in Italy with the progetto ciclismo alplast team?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_78 WHERE year > 1966 AND wins > 1",
        "context": "CREATE TABLE table_name_78 (points INTEGER, year VARCHAR, wins VARCHAR)",
        "question": "Which Points have a Year larger than 1966, and Wins larger than 1?"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_37 WHERE time_retired = \"engine\" AND grid = 5",
        "context": "CREATE TABLE table_name_37 (laps INTEGER, time_retired VARCHAR, grid VARCHAR)",
        "question": "Name the highest laps for time/retired of engine and grid of 5"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_33 WHERE constructor = \"maserati\" AND time_retired = \"+6 laps\" AND grid > 11",
        "context": "CREATE TABLE table_name_33 (laps INTEGER, grid VARCHAR, constructor VARCHAR, time_retired VARCHAR)",
        "question": "Name the highest laps for maserati and +6 laps for grid more than 11"
    },
    {
        "answer": "SELECT themed_area FROM table_name_12 WHERE name = \"troublesome trucks runaway coaster\"",
        "context": "CREATE TABLE table_name_12 (themed_area VARCHAR, name VARCHAR)",
        "question": "Which Themed Area has a Name of troublesome trucks runaway coaster?"
    },
    {
        "answer": "SELECT manufacturer FROM table_name_31 WHERE style = \"steel sit down\" AND opened > 2008",
        "context": "CREATE TABLE table_name_31 (manufacturer VARCHAR, style VARCHAR, opened VARCHAR)",
        "question": "Which Manufacturer has a Style of steel sit down, and an Opened larger than 2008?"
    },
    {
        "answer": "SELECT original_broadway_production FROM table_name_52 WHERE first_us_national_tour = \"roger bart\"",
        "context": "CREATE TABLE table_name_52 (original_broadway_production VARCHAR, first_us_national_tour VARCHAR)",
        "question": "Which Original Broadway production has a First US National Tour of roger bart?"
    },
    {
        "answer": "SELECT AVG(crowd) FROM table_name_94 WHERE away_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_94 (crowd INTEGER, away_team VARCHAR)",
        "question": "What is the crowd with Away team of hawthorn?"
    },
    {
        "answer": "SELECT stadium FROM table_name_72 WHERE location = \"carrick-on-shannon\"",
        "context": "CREATE TABLE table_name_72 (stadium VARCHAR, location VARCHAR)",
        "question": "What Gaelic Athletic Association stadium is located in Carrick-on-Shannon?"
    },
    {
        "answer": "SELECT AVG(crowd) FROM table_name_72 WHERE home_team = \"south melbourne\"",
        "context": "CREATE TABLE table_name_72 (crowd INTEGER, home_team VARCHAR)",
        "question": "Which average Crowd has a Home team of south melbourne?"
    },
    {
        "answer": "SELECT AVG(gross_tonnage) FROM table_name_35 WHERE delivery_date = \"2001 2001\"",
        "context": "CREATE TABLE table_name_35 (gross_tonnage INTEGER, delivery_date VARCHAR)",
        "question": "with delivery date of 2001 2001 what is gross tonnage?"
    },
    {
        "answer": "SELECT venue FROM table_name_6 WHERE competition = \"friendly\" AND result = \"2-3\"",
        "context": "CREATE TABLE table_name_6 (venue VARCHAR, competition VARCHAR, result VARCHAR)",
        "question": "What is the location of the game that was friendly and resulted in 2-3?"
    },
    {
        "answer": "SELECT dob FROM table_name_25 WHERE throws = \"r\" AND position = \"c\" AND first = \"torey\"",
        "context": "CREATE TABLE table_name_25 (dob VARCHAR, first VARCHAR, throws VARCHAR, position VARCHAR)",
        "question": "Which DOB has Throws of r, and a Position of c, and a First of torey?"
    },
    {
        "answer": "SELECT SUM(grid) FROM table_name_86 WHERE constructor = \"alfa romeo\" AND driver = \"toulo de graffenried\"",
        "context": "CREATE TABLE table_name_86 (grid INTEGER, constructor VARCHAR, driver VARCHAR)",
        "question": "Tell me the sum of the grid with alfa romeo and toulo de graffenried"
    },
    {
        "answer": "SELECT cancelable FROM table_name_97 WHERE bubbles = \"no\" AND category = \"miscellaneous\" AND type = \"propertychange\"",
        "context": "CREATE TABLE table_name_97 (cancelable VARCHAR, type VARCHAR, bubbles VARCHAR, category VARCHAR)",
        "question": "When Bubbles of no, and a Category of miscellaneous, and a Type of propertychange, what was the Cancelable?"
    },
    {
        "answer": "SELECT SUM(laps) FROM table_name_77 WHERE grid > 4 AND driver = \"nick heidfeld\"",
        "context": "CREATE TABLE table_name_77 (laps INTEGER, grid VARCHAR, driver VARCHAR)",
        "question": "How many laps did Nick Heidfeld drive on grids larger than 4?"
    },
    {
        "answer": "SELECT MIN(pick) FROM table_name_51 WHERE position = \"back\" AND player = \"chuck morris\"",
        "context": "CREATE TABLE table_name_51 (pick INTEGER, position VARCHAR, player VARCHAR)",
        "question": "When was chuck morris, back, drafted?"
    },
    {
        "answer": "SELECT council_area FROM table_name_51 WHERE urban_sub_area = \"larkhall\"",
        "context": "CREATE TABLE table_name_51 (council_area VARCHAR, urban_sub_area VARCHAR)",
        "question": "What is the council area for the Larkhall urban sub-area?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_17 WHERE fastest_lap = \"damon hill\" AND pole_position = \"michael schumacher\" AND grand_prix = \"hungarian grand prix\"",
        "context": "CREATE TABLE table_name_17 (round VARCHAR, grand_prix VARCHAR, fastest_lap VARCHAR, pole_position VARCHAR)",
        "question": "During the hungarian grand prix where the pole position was michael schumacher and the fastest lap was driven by damon hill, what's the total number of rounds of races matching these standards?"
    },
    {
        "answer": "SELECT nationality FROM table_name_44 WHERE college_junior_club_team__league_ = \"northwood school (n.y.)\"",
        "context": "CREATE TABLE table_name_44 (nationality VARCHAR, college_junior_club_team__league_ VARCHAR)",
        "question": "What nationality is Northwood School (N.Y.)?"
    },
    {
        "answer": "SELECT AVG(gold) FROM table_name_2 WHERE total < 12 AND bronze < 1 AND sport = \"wushu\" AND silver > 3",
        "context": "CREATE TABLE table_name_2 (gold INTEGER, silver VARCHAR, sport VARCHAR, total VARCHAR, bronze VARCHAR)",
        "question": "I want to know the average Gold for total smaller 12 and bronze less than 1 and wushu with silver more than 3"
    },
    {
        "answer": "SELECT MIN(gold) FROM table_name_98 WHERE silver = 2 AND sport = \"electronic sports\"",
        "context": "CREATE TABLE table_name_98 (gold INTEGER, silver VARCHAR, sport VARCHAR)",
        "question": "I want the lowest Gold for silver being 2 and electronic sports"
    },
    {
        "answer": "SELECT first_elected FROM table_name_28 WHERE party = \"republican\" AND incumbent = \"joseph mckenna\"",
        "context": "CREATE TABLE table_name_28 (first_elected VARCHAR, party VARCHAR, incumbent VARCHAR)",
        "question": "When was republican incumbent Joseph McKenna first elected?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_16 WHERE sport = \"vovinam\" AND bronze < 3",
        "context": "CREATE TABLE table_name_16 (total VARCHAR, sport VARCHAR, bronze VARCHAR)",
        "question": "Tell me the total number of total for vovinam and bronze less than 3"
    },
    {
        "answer": "SELECT college_junior_club_team FROM table_name_81 WHERE position = \"defence\" AND player = \"rory fitzpatrick\"",
        "context": "CREATE TABLE table_name_81 (college_junior_club_team VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "What college, junior, or club team did defence player Rory Fitzpatrick play for?"
    },
    {
        "answer": "SELECT COUNT(width__inches_) FROM table_name_11 WHERE engine = \"navistar t444e\" AND retired = \"2005\" AND length__feet_ < 25",
        "context": "CREATE TABLE table_name_11 (width__inches_ VARCHAR, length__feet_ VARCHAR, engine VARCHAR, retired VARCHAR)",
        "question": "For a vehicle below 25 feet, that was retired in 2005 and had a navistar t444e engine, what was the total width?"
    },
    {
        "answer": "SELECT score FROM table_name_99 WHERE home = \"atlanta\"",
        "context": "CREATE TABLE table_name_99 (score VARCHAR, home VARCHAR)",
        "question": "What was the score of the game when the home was Atlanta?"
    },
    {
        "answer": "SELECT SUM(mintage) FROM table_name_61 WHERE artist = \"pierre leduc\"",
        "context": "CREATE TABLE table_name_61 (mintage INTEGER, artist VARCHAR)",
        "question": "What is the sum of all mintage created by Pierre Leduc?"
    },
    {
        "answer": "SELECT d_46_\u221a FROM table_name_3 WHERE d_44_\u221a = \"\u2190 majority\"",
        "context": "CREATE TABLE table_name_3 (d_46_\u221a VARCHAR, d_44_\u221a VARCHAR)",
        "question": "What is the D 46 \u221a when the D 44 \u221a is \u2190 majority?"
    },
    {
        "answer": "SELECT 2006 FROM table_name_15 WHERE 2004 = \"a\" AND 2002 = \"not tier i\"",
        "context": "CREATE TABLE table_name_15 (Id VARCHAR)",
        "question": "Which 2006 Tournament has a 2004, and a 2002 of not tier i?"
    },
    {
        "answer": "SELECT hanzi FROM table_name_71 WHERE launch < 2009 AND language = \"tibetan\" AND name = \"qinghai tibetian general channel\"",
        "context": "CREATE TABLE table_name_71 (hanzi VARCHAR, name VARCHAR, launch VARCHAR, language VARCHAR)",
        "question": "Which hanzi's launch is before 2009, when the language was tibetan, and the name was qinghai tibetian general channel?"
    },
    {
        "answer": "SELECT MAX(average) FROM table_name_56 WHERE evening_gown > 9.449 AND state = \"kansas\"",
        "context": "CREATE TABLE table_name_56 (average INTEGER, evening_gown VARCHAR, state VARCHAR)",
        "question": "What is the highest average for a contestant with an evening gown larger than 9.449 from Kansas?"
    },
    {
        "answer": "SELECT MIN(interview) FROM table_name_60 WHERE swimsuit > 9.021 AND average < 9.513 AND state = \"north carolina\" AND evening_gown > 9.5",
        "context": "CREATE TABLE table_name_60 (interview INTEGER, evening_gown VARCHAR, state VARCHAR, swimsuit VARCHAR, average VARCHAR)",
        "question": "What is the lowest interview for a contestant from North Carolina with a swimsuit larger than 9.021, an average smaller than 9.513, and an evening gown larger than 9.5?"
    },
    {
        "answer": "SELECT AVG(division) FROM table_name_36 WHERE reg_season = \"1st, western\" AND playoffs = \"champions\" AND year < 2013",
        "context": "CREATE TABLE table_name_36 (division INTEGER, year VARCHAR, reg_season VARCHAR, playoffs VARCHAR)",
        "question": "Which Division that has a Reg Season of 1st, western, and Playoffs of champions, and a Year smaller than 2013?"
    },
    {
        "answer": "SELECT launch_vehicle FROM table_name_59 WHERE institutional_authority = \"ndc\"",
        "context": "CREATE TABLE table_name_59 (launch_vehicle VARCHAR, institutional_authority VARCHAR)",
        "question": "Name the launch vehicle with Institutional authority of ndc"
    },
    {
        "answer": "SELECT date FROM table_name_31 WHERE opponent = \"norway\" AND results\u00b9 = \"1:1\"",
        "context": "CREATE TABLE table_name_31 (date VARCHAR, opponent VARCHAR, results\u00b9 VARCHAR)",
        "question": "What was the date of the game against Norway with a 1:1 result?"
    },
    {
        "answer": "SELECT COUNT(ngc_number) FROM table_name_86 WHERE constellation = \"sagittarius\" AND object_type = \"diffuse nebula\" AND declination___j2000__ = \"\u00b002\u2032\"",
        "context": "CREATE TABLE table_name_86 (ngc_number VARCHAR, declination___j2000__ VARCHAR, constellation VARCHAR, object_type VARCHAR)",
        "question": "Name the total number of NGC number for sagittarius and diffuse nebula with declination of \u00b002\u2032"
    },
    {
        "answer": "SELECT right_ascension___j2000__ FROM table_name_78 WHERE constellation = \"sagittarius\" AND ngc_number > 6522 AND object_type = \"open cluster\" AND declination___j2000__ = \"\u00b022\u2032\"",
        "context": "CREATE TABLE table_name_78 (right_ascension___j2000__ VARCHAR, declination___j2000__ VARCHAR, object_type VARCHAR, constellation VARCHAR, ngc_number VARCHAR)",
        "question": "Name the right ascension for sagittarius and NGC number larger than 6522 for open cluster and declination of \u00b022\u2032"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_69 WHERE opponent = \"astros\" AND date = \"april 29\"",
        "context": "CREATE TABLE table_name_69 (attendance INTEGER, opponent VARCHAR, date VARCHAR)",
        "question": "What attendance has astros as the opponent, and april 29 as the date?"
    },
    {
        "answer": "SELECT region FROM table_name_8 WHERE most_populous_city_town = \"clonmel\" AND irish_name = \"tiobraid \u00e1rann (contae thiobraid \u00e1rann)\"",
        "context": "CREATE TABLE table_name_8 (region VARCHAR, most_populous_city_town VARCHAR, irish_name VARCHAR)",
        "question": "Most populous city/town of clonmel, and a Irish name of tiobraid \u00e1rann (contae thiobraid \u00e1rann) is which region?"
    },
    {
        "answer": "SELECT name FROM table_name_71 WHERE event = \"men's featherweight\" AND sport = \"weightlifting\"",
        "context": "CREATE TABLE table_name_71 (name VARCHAR, event VARCHAR, sport VARCHAR)",
        "question": "Tell me the name for men's featherweight and sport of weightlifting"
    },
    {
        "answer": "SELECT SUM(earnings__) AS $__ FROM table_name_63 WHERE rank < 1",
        "context": "CREATE TABLE table_name_63 (earnings__ INTEGER, rank INTEGER)",
        "question": "Tell me the sum of earnings for rank less than 1"
    },
    {
        "answer": "SELECT norwegian_title FROM table_name_37 WHERE pages = 218 AND translated_title = \"breaking dawn\"",
        "context": "CREATE TABLE table_name_37 (norwegian_title VARCHAR, pages VARCHAR, translated_title VARCHAR)",
        "question": "What Norwegian title has 218 pages and Translated Title of Breaking Dawn?"
    },
    {
        "answer": "SELECT winning_party_2007 FROM table_name_60 WHERE result = \"labour hold\" AND swing_to_gain < 7.11 AND constituency = \"wrexham\"",
        "context": "CREATE TABLE table_name_60 (winning_party_2007 VARCHAR, constituency VARCHAR, result VARCHAR, swing_to_gain VARCHAR)",
        "question": "Name the winning party 2007 for result of labour hold and swing to gain less than 7.11 for wrexham"
    },
    {
        "answer": "SELECT score FROM table_name_81 WHERE home = \"vancouver\" AND date = \"february 16\"",
        "context": "CREATE TABLE table_name_81 (score VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "What score has vancouver as the home, and february 16 as the date?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_88 WHERE against < 53 AND drawn < 10 AND played < 38",
        "context": "CREATE TABLE table_name_88 (points INTEGER, played VARCHAR, against VARCHAR, drawn VARCHAR)",
        "question": "Against smaller than 53, and a Drawn smaller than 10, and a Played smaller than 38 has what average points?"
    },
    {
        "answer": "SELECT report FROM table_name_49 WHERE score = \"0-0\" AND away_team = \"sydney fc\"",
        "context": "CREATE TABLE table_name_49 (report VARCHAR, score VARCHAR, away_team VARCHAR)",
        "question": "What report has a score of 0-0 with Sydney FC?"
    },
    {
        "answer": "SELECT SUM(grid) FROM table_name_91 WHERE laps > 14 AND driver = \"alain prost\"",
        "context": "CREATE TABLE table_name_91 (grid INTEGER, laps VARCHAR, driver VARCHAR)",
        "question": "What is the grid total for alain prost with over 14 laps?"
    },
    {
        "answer": "SELECT chipset_based_on FROM table_name_18 WHERE digital_analog_signal = \"analog\" AND available_interface = \"agp\" AND retail_name = \"all-in-wonder 9800\"",
        "context": "CREATE TABLE table_name_18 (chipset_based_on VARCHAR, retail_name VARCHAR, digital_analog_signal VARCHAR, available_interface VARCHAR)",
        "question": "What is the Chipset based on with a Digital/analog signal of analog, with an Available interface of agp, with Retail name with all-in-wonder 9800?"
    },
    {
        "answer": "SELECT specific_orbital_energy FROM table_name_73 WHERE orbital_period = \"89 to 128 min\"",
        "context": "CREATE TABLE table_name_73 (specific_orbital_energy VARCHAR, orbital_period VARCHAR)",
        "question": "Orbital period of 89 to 128 min has what specific orbital energy?"
    },
    {
        "answer": "SELECT orbital_period FROM table_name_69 WHERE center_to_center_distance = \"6,900 to 46,300 km\"",
        "context": "CREATE TABLE table_name_69 (orbital_period VARCHAR, center_to_center_distance VARCHAR)",
        "question": "center-to-center distance of 6,900 to 46,300 km involves which orbital period?"
    },
    {
        "answer": "SELECT MIN(malaysia_cup) FROM table_name_74 WHERE player = \"zamri hassan\" AND fa_cup < 0",
        "context": "CREATE TABLE table_name_74 (malaysia_cup INTEGER, player VARCHAR, fa_cup VARCHAR)",
        "question": "What is Zamri Hassan's lowest Malaysia Cup when there were an FA Cup of 0?"
    },
    {
        "answer": "SELECT MIN(bronze) FROM table_name_75 WHERE nation = \"switzerland\" AND silver < 3",
        "context": "CREATE TABLE table_name_75 (bronze INTEGER, nation VARCHAR, silver VARCHAR)",
        "question": "How many Bronze medals did Switzerland with less than 3 Silver medals receive?"
    },
    {
        "answer": "SELECT format FROM table_name_48 WHERE year > 2000 AND label = \"myuzyk\" AND catalog_number = \"mzykn08\"",
        "context": "CREATE TABLE table_name_48 (format VARCHAR, catalog_number VARCHAR, year VARCHAR, label VARCHAR)",
        "question": "Tell me the format with year more than 2000 and label of myuzyk with catalog number of mzykn08"
    },
    {
        "answer": "SELECT score FROM table_name_49 WHERE competition = \"world cup qualifying\" AND date = \"october 15, 2008\"",
        "context": "CREATE TABLE table_name_49 (score VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "Name the sscore for world cup qualifying october 15, 2008"
    },
    {
        "answer": "SELECT date FROM table_name_87 WHERE h___a = \"whalley range\"",
        "context": "CREATE TABLE table_name_87 (date VARCHAR, h___a VARCHAR)",
        "question": "When did the game in whalley range take place?"
    },
    {
        "answer": "SELECT district FROM table_name_82 WHERE party = \"republican\" AND result = \"lost re-election democratic gain\"",
        "context": "CREATE TABLE table_name_82 (district VARCHAR, party VARCHAR, result VARCHAR)",
        "question": "Which District has a Party of republican and a Result of lost re-election democratic gain?"
    },
    {
        "answer": "SELECT AVG(floors) FROM table_name_6 WHERE rank > 30 AND year < 1977 AND name = \"100 van ness avenue\"",
        "context": "CREATE TABLE table_name_6 (floors INTEGER, name VARCHAR, rank VARCHAR, year VARCHAR)",
        "question": "What is the average amount of floors of the building that is ranked larger than 30, a year prior to 1977 and an address of 100 Van Ness Avenue?"
    },
    {
        "answer": "SELECT episode__number FROM table_name_34 WHERE original_airdate = \"july 23, 2000\"",
        "context": "CREATE TABLE table_name_34 (episode__number VARCHAR, original_airdate VARCHAR)",
        "question": "Name the episode number that aired on july 23, 2000"
    },
    {
        "answer": "SELECT wheel_arrangement FROM table_name_95 WHERE number = \"6 or 4\"",
        "context": "CREATE TABLE table_name_95 (wheel_arrangement VARCHAR, number VARCHAR)",
        "question": "What is the wheel arrangement of the locomotive with number 6 or 4?"
    },
    {
        "answer": "SELECT set_1 FROM table_name_37 WHERE date = \"24 may\" AND total = \"57\u201375\"",
        "context": "CREATE TABLE table_name_37 (set_1 VARCHAR, date VARCHAR, total VARCHAR)",
        "question": "Which Set 1 has a Date of 24 may, and a Total of 57\u201375?"
    },
    {
        "answer": "SELECT SUM(silver) FROM table_name_67 WHERE gold > 21 AND bronze = 76 AND total < 291",
        "context": "CREATE TABLE table_name_67 (silver INTEGER, total VARCHAR, gold VARCHAR, bronze VARCHAR)",
        "question": "What team had less than 291 total points whole having 76 bronze and over 21 gold?"
    },
    {
        "answer": "SELECT result FROM table_name_49 WHERE game_site = \"tampa stadium\" AND opponent = \"detroit lions\"",
        "context": "CREATE TABLE table_name_49 (result VARCHAR, game_site VARCHAR, opponent VARCHAR)",
        "question": "When they were playing the detroit lions at tampa stadium, what was the score?"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_25 WHERE total > 1 AND nation = \"east germany\" AND silver > 1",
        "context": "CREATE TABLE table_name_25 (bronze VARCHAR, silver VARCHAR, total VARCHAR, nation VARCHAR)",
        "question": "How many times was the total more than 1, the nation was east germany and silver was more than 1?"
    },
    {
        "answer": "SELECT ihsaa_class FROM table_name_97 WHERE city = \"batesville\"",
        "context": "CREATE TABLE table_name_97 (ihsaa_class VARCHAR, city VARCHAR)",
        "question": "What is the IHSAA class in Batesville?"
    },
    {
        "answer": "SELECT outgoing_manager FROM table_name_57 WHERE date_of_appointment = \"19 february\"",
        "context": "CREATE TABLE table_name_57 (outgoing_manager VARCHAR, date_of_appointment VARCHAR)",
        "question": "I want the outgoing manager for 19 february"
    },
    {
        "answer": "SELECT team FROM table_name_24 WHERE replaced_by = \"csaba l\u00e1szl\u00f3\"",
        "context": "CREATE TABLE table_name_24 (team VARCHAR, replaced_by VARCHAR)",
        "question": "I want the team with replaced by being csaba l\u00e1szl\u00f3"
    },
    {
        "answer": "SELECT MAX(vertices) FROM table_name_28 WHERE dual_archimedean_solid = \"truncated dodecahedron\"",
        "context": "CREATE TABLE table_name_28 (vertices INTEGER, dual_archimedean_solid VARCHAR)",
        "question": "Which Vertices have a Dual Archimedean solid of truncated dodecahedron?"
    },
    {
        "answer": "SELECT AVG(faces) FROM table_name_39 WHERE dual_archimedean_solid = \"truncated icosahedron\" AND vertices > 32",
        "context": "CREATE TABLE table_name_39 (faces INTEGER, dual_archimedean_solid VARCHAR, vertices VARCHAR)",
        "question": "Which Faces have a Dual Archimedean solid of truncated icosahedron, and Vertices larger than 32?"
    },
    {
        "answer": "SELECT set_3 FROM table_name_86 WHERE score = \"3\u20132\" AND set_2 = \"25\u201323\" AND time = \"19:00\"",
        "context": "CREATE TABLE table_name_86 (set_3 VARCHAR, time VARCHAR, score VARCHAR, set_2 VARCHAR)",
        "question": "Which Set 3 has a Score of 3\u20132, and a Set 2 of 25\u201323, and a Time of 19:00?"
    },
    {
        "answer": "SELECT named AS after FROM table_name_87 WHERE longitude < 270.7 AND latitude > -47.1 AND diameter__km_ < 7.2 AND name = \"ayashe\"",
        "context": "CREATE TABLE table_name_87 (named VARCHAR, name VARCHAR, diameter__km_ VARCHAR, longitude VARCHAR, latitude VARCHAR)",
        "question": "What is the namesake of Ayashe at a longitude less than 270.7, latitude more than -47.1, and a diameter less than 7.2?"
    },
    {
        "answer": "SELECT driver FROM table_name_6 WHERE rounds = \"all\" AND entrant = \"motor racing developments\"",
        "context": "CREATE TABLE table_name_6 (driver VARCHAR, rounds VARCHAR, entrant VARCHAR)",
        "question": "Which driver was in all rounds as an entrant of Motor Racing Developments?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_11 WHERE round = 9 AND nationality = \"canada\"",
        "context": "CREATE TABLE table_name_11 (college_junior_club_team__league_ VARCHAR, round VARCHAR, nationality VARCHAR)",
        "question": "What college or club did the round 9 draft pick from Canada come from?"
    },
    {
        "answer": "SELECT MAX(november) FROM table_name_80 WHERE record = \"11-7-3\" AND game > 21",
        "context": "CREATE TABLE table_name_80 (november INTEGER, record VARCHAR, game VARCHAR)",
        "question": "When in November were they 11-7-3 with over 21 games?"
    },
    {
        "answer": "SELECT COUNT(national_university_of_ireland) FROM table_name_34 WHERE agricultural_panel = 0 AND labour_panel > 0",
        "context": "CREATE TABLE table_name_34 (national_university_of_ireland VARCHAR, agricultural_panel VARCHAR, labour_panel VARCHAR)",
        "question": "I want to know the total number of national university of ireland with agricultural panel of 0 and labour panel more than 0"
    },
    {
        "answer": "SELECT COUNT(administrative_panel) FROM table_name_59 WHERE labour_panel > 2 AND total = 28 AND nominated_by_the_taoiseach > 6",
        "context": "CREATE TABLE table_name_59 (administrative_panel VARCHAR, nominated_by_the_taoiseach VARCHAR, labour_panel VARCHAR, total VARCHAR)",
        "question": "Tell me the total number of administrative panel with labour panel more than 2, nominated by taoiseach more than 6 and total of 28"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_28 WHERE home_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_28 (away_team VARCHAR, home_team VARCHAR)",
        "question": "What was the away team score at Hawthorn's home game?"
    },
    {
        "answer": "SELECT MIN(game) FROM table_name_69 WHERE date = \"february 20\"",
        "context": "CREATE TABLE table_name_69 (game INTEGER, date VARCHAR)",
        "question": "What is the lowest game number on February 20?"
    },
    {
        "answer": "SELECT gymnast FROM table_name_91 WHERE balance_beam > 8.687 AND total < 38.049 AND floor_exercise < 9.462 AND vault < 9.275",
        "context": "CREATE TABLE table_name_91 (gymnast VARCHAR, vault VARCHAR, floor_exercise VARCHAR, balance_beam VARCHAR, total VARCHAR)",
        "question": "Which gymnast had a balance beam larger than 8.687, had a total less than 38.049, had a floor exercise less than 9.462, and a vault less than 9.275?"
    },
    {
        "answer": "SELECT MIN(laps) FROM table_name_20 WHERE time_retired = \"engine\" AND grid > 8 AND driver = \"george eaton\"",
        "context": "CREATE TABLE table_name_20 (laps INTEGER, driver VARCHAR, time_retired VARCHAR, grid VARCHAR)",
        "question": "What's the least amount of laps that George Eaton completed that has a time/retired engine and a grid larger than 8?"
    },
    {
        "answer": "SELECT grantee FROM table_name_34 WHERE concession = \"san ysidro\"",
        "context": "CREATE TABLE table_name_34 (grantee VARCHAR, concession VARCHAR)",
        "question": "Tell me the Grantee for san ysidro"
    },
    {
        "answer": "SELECT AVG(laps) FROM table_name_85 WHERE time_retired = \"+1 lap\" AND driver = \"mark blundell\"",
        "context": "CREATE TABLE table_name_85 (laps INTEGER, time_retired VARCHAR, driver VARCHAR)",
        "question": "how many laps have a time/retired of +1 lap and mark blundell is the driver?"
    },
    {
        "answer": "SELECT MAX(grid) FROM table_name_95 WHERE time_retired = \"fuel pump\" AND laps > 26",
        "context": "CREATE TABLE table_name_95 (grid INTEGER, time_retired VARCHAR, laps VARCHAR)",
        "question": "what is the highest grid when the time/retired is fuel pump and the laps is more than 26?"
    },
    {
        "answer": "SELECT SUM(total_games) FROM table_name_68 WHERE conference = \"big ten\" AND lost < 488 AND team = \"nebraska\" AND pct < 0.7014",
        "context": "CREATE TABLE table_name_68 (total_games INTEGER, pct VARCHAR, team VARCHAR, conference VARCHAR, lost VARCHAR)",
        "question": "What were the total games in the Big Ten conference when Nebraska lost fewer than 488 games and had a Pct less than 0.7014?"
    },
    {
        "answer": "SELECT MAX(grid) FROM table_name_14 WHERE driver = \"maurice trintignant\" AND laps < 87",
        "context": "CREATE TABLE table_name_14 (grid INTEGER, driver VARCHAR, laps VARCHAR)",
        "question": "Tell me the highest Grid for Maurice Trintignant and laps less than 87"
    },
    {
        "answer": "SELECT score FROM table_name_43 WHERE surface = \"clay\" AND year > 2006 AND opponent = \"david ferrer\"",
        "context": "CREATE TABLE table_name_43 (score VARCHAR, opponent VARCHAR, surface VARCHAR, year VARCHAR)",
        "question": "What was the score on a clay surface in a year later than 2006 with David Ferrer as an opponent?"
    },
    {
        "answer": "SELECT championship FROM table_name_36 WHERE opponent = \"roger federer\" AND surface = \"clay\" AND year < 2007",
        "context": "CREATE TABLE table_name_36 (championship VARCHAR, year VARCHAR, opponent VARCHAR, surface VARCHAR)",
        "question": "Which championship has Roger Federer as an opponent on a clay surface in a year earlier than 2007?"
    },
    {
        "answer": "SELECT first_class_team FROM table_name_15 WHERE bowling_style = \"left arm orthodox spin\"",
        "context": "CREATE TABLE table_name_15 (first_class_team VARCHAR, bowling_style VARCHAR)",
        "question": "What is the name of the First Class Team in which the player has a bowling style of left arm orthodox spin?"
    },
    {
        "answer": "SELECT MIN(goals) FROM table_name_92 WHERE matches = \"16\" AND scorer = \"park sang-in\"",
        "context": "CREATE TABLE table_name_92 (goals INTEGER, matches VARCHAR, scorer VARCHAR)",
        "question": "Which Goals is the lowest one that has Matches of 16, and a Scorer of park sang-in?"
    },
    {
        "answer": "SELECT MAX(lost) FROM table_name_75 WHERE seasons = 2 AND goals_against > 43",
        "context": "CREATE TABLE table_name_75 (lost INTEGER, seasons VARCHAR, goals_against VARCHAR)",
        "question": "Which Lost has Seasons of 2, and Goals against larger than 43?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_48 WHERE position = \"right wing\" AND round < 3",
        "context": "CREATE TABLE table_name_48 (college_junior_club_team__league_ VARCHAR, position VARCHAR, round VARCHAR)",
        "question": "Which College/Junior/Club Team (League) has a Position of right wing, and a Round smaller than 3?"
    },
    {
        "answer": "SELECT SUM(failures) FROM table_name_33 WHERE orbital_regime = \"heliocentric orbit\" AND launches < 1",
        "context": "CREATE TABLE table_name_33 (failures INTEGER, orbital_regime VARCHAR, launches VARCHAR)",
        "question": "What is the total failures of heliocentric orbit orbital regimes and launches less than 1?"
    },
    {
        "answer": "SELECT surface FROM table_name_24 WHERE partner = \"david martin\" AND score = \"4\u20136, 6\u20137 (4-7)\"",
        "context": "CREATE TABLE table_name_24 (surface VARCHAR, partner VARCHAR, score VARCHAR)",
        "question": "On what Surface was the game with Partner David Martin played Scoring 4\u20136, 6\u20137 (4-7)?"
    },
    {
        "answer": "SELECT record FROM table_name_83 WHERE leading_scorer = \"glenn robinson (16)\"",
        "context": "CREATE TABLE table_name_83 (record VARCHAR, leading_scorer VARCHAR)",
        "question": "What record has Glenn Robinson (16) as the leading scorer?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_95 WHERE opponent = \"arsenal\"",
        "context": "CREATE TABLE table_name_95 (attendance INTEGER, opponent VARCHAR)",
        "question": "Whose attendance was the highest when the team played Arsenal?"
    },
    {
        "answer": "SELECT AVG(genes) FROM table_name_84 WHERE reference = \"2009\" AND strain = \"rku-1\"",
        "context": "CREATE TABLE table_name_84 (genes INTEGER, reference VARCHAR, strain VARCHAR)",
        "question": "what is the average genes when the reference is 2009 and the strain is rku-1?"
    },
    {
        "answer": "SELECT date FROM table_name_47 WHERE results\u00b9 = \"4:0\"",
        "context": "CREATE TABLE table_name_47 (date VARCHAR, results\u00b9 VARCHAR)",
        "question": "On what Date were the Results\u00b9 4:0?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_37 WHERE venue = \"princes park\"",
        "context": "CREATE TABLE table_name_37 (away_team VARCHAR, venue VARCHAR)",
        "question": "What was the away teams score at Princes Park?"
    },
    {
        "answer": "SELECT home FROM table_name_42 WHERE visitor = \"ny rangers\" AND series = \"flyers win 4\u20133\"",
        "context": "CREATE TABLE table_name_42 (home VARCHAR, visitor VARCHAR, series VARCHAR)",
        "question": "Which Home has a Visitor of ny rangers, and a Series of flyers win 4\u20133?"
    },
    {
        "answer": "SELECT college FROM table_name_79 WHERE hometown = \"fort lauderdale, fl\"",
        "context": "CREATE TABLE table_name_79 (college VARCHAR, hometown VARCHAR)",
        "question": "What college did the player from Fort Lauderdale, FL attend?"
    },
    {
        "answer": "SELECT frequency_mhz FROM table_name_44 WHERE erp_w = \"850 watts\"",
        "context": "CREATE TABLE table_name_44 (frequency_mhz VARCHAR, erp_w VARCHAR)",
        "question": "Name the frequency mhz for ERP W of 850 watts"
    },
    {
        "answer": "SELECT MAX(att) FROM table_name_24 WHERE long = 27 AND yards > 27",
        "context": "CREATE TABLE table_name_24 (att INTEGER, long VARCHAR, yards VARCHAR)",
        "question": "Tell me the most Att with a long of 27 with yards longer than 27"
    },
    {
        "answer": "SELECT points FROM table_name_64 WHERE time_retired = \"1:44:59.557\"",
        "context": "CREATE TABLE table_name_64 (points VARCHAR, time_retired VARCHAR)",
        "question": "How many points were scored in 1:44:59.557 of time?"
    },
    {
        "answer": "SELECT date FROM table_name_31 WHERE result = \"l 21\u201334\"",
        "context": "CREATE TABLE table_name_31 (date VARCHAR, result VARCHAR)",
        "question": "What Date has a Result of l 21\u201334?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_39 WHERE mintage = \"n/a\" AND issue_price = \"$89.95\"",
        "context": "CREATE TABLE table_name_39 (year INTEGER, mintage VARCHAR, issue_price VARCHAR)",
        "question": "What is the latest year that has an n/a mintage and an Issue Price of $89.95?"
    },
    {
        "answer": "SELECT MAX(total_cargo__metric_tonnes_) FROM table_name_18 WHERE code__iata_icao_ = \"bkk/vtbs\" AND rank > 19",
        "context": "CREATE TABLE table_name_18 (total_cargo__metric_tonnes_ INTEGER, code__iata_icao_ VARCHAR, rank VARCHAR)",
        "question": "What is the highest total cargo of an airport ranked larger than 19 with a code of BKK/VTBS?"
    },
    {
        "answer": "SELECT new_team FROM table_name_27 WHERE round = \"compensation-a\" AND player = \"frank catalanotto\"",
        "context": "CREATE TABLE table_name_27 (new_team VARCHAR, round VARCHAR, player VARCHAR)",
        "question": "Which new team has a compensation-a round, and Frank Catalanotto as a player?"
    },
    {
        "answer": "SELECT artist FROM table_name_53 WHERE issue_price__bu_[_clarification_needed_] = \"n/a\" AND year > 2004 AND mintage__proof_ = \"25,000\"",
        "context": "CREATE TABLE table_name_53 (artist VARCHAR, mintage__proof_ VARCHAR, year VARCHAR, issue_price__bu_ VARCHAR, _clarification_needed_ VARCHAR)",
        "question": "Who is the Artist with an Issue Price (BU) [Clarification Needed] of n/a along with  a Year larger than 2004, and Mintage (Proof) of 25,000?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_19 WHERE issue_price__proof_ = \"$49.95\" AND artist = \"w.h.j. blakemore\"",
        "context": "CREATE TABLE table_name_19 (year INTEGER, issue_price__proof_ VARCHAR, artist VARCHAR)",
        "question": "What's the average Year with an Issue Price (Proof) of $49.95, and Artist of W.H.J. Blakemore?"
    },
    {
        "answer": "SELECT MIN(quantity) FROM table_name_60 WHERE name = \"raison blue\" AND nicotine > 0.30000000000000004",
        "context": "CREATE TABLE table_name_60 (quantity INTEGER, name VARCHAR, nicotine VARCHAR)",
        "question": "For Raison Blue with a nicotine larger than 0.30000000000000004, what's the lowest quantity?"
    },
    {
        "answer": "SELECT height_m__ft_ FROM table_name_77 WHERE rank > 10 AND name = \"tameer tower\"",
        "context": "CREATE TABLE table_name_77 (height_m__ft_ VARCHAR, rank VARCHAR, name VARCHAR)",
        "question": "What is the height for rank greater than 10 in Tameer Tower?"
    },
    {
        "answer": "SELECT SUM(laps) FROM table_name_76 WHERE driver = \"satrio hermanto\"",
        "context": "CREATE TABLE table_name_76 (laps INTEGER, driver VARCHAR)",
        "question": "How many Laps have a Driver of satrio hermanto?"
    },
    {
        "answer": "SELECT SUM(swing_to_gain) FROM table_name_70 WHERE winning_party_2007 = \"conservative\" AND rank < 5",
        "context": "CREATE TABLE table_name_70 (swing_to_gain INTEGER, winning_party_2007 VARCHAR, rank VARCHAR)",
        "question": "What's the sum of swing to gain with a winning party 2007 of Conservative with a rank smaller than 5?"
    },
    {
        "answer": "SELECT title FROM table_name_16 WHERE director = \"rouben mamoulian\" AND year > 1940 AND leading_lady = \"linda darnell\"",
        "context": "CREATE TABLE table_name_16 (title VARCHAR, leading_lady VARCHAR, director VARCHAR, year VARCHAR)",
        "question": "What title has rouben mamoulian directing after 1940 with linda darnell as the leading lady?"
    },
    {
        "answer": "SELECT MAX(_3_balls_2_ribbons) FROM table_name_16 WHERE nation = \"bulgaria\" AND place > 1",
        "context": "",
        "question": "Nation of bulgaria, and a Place larger than 1 had what highest 3 Balls, 2 Ribbons?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_96 WHERE grid < 22 AND laps < 33 AND driver = \"john surtees\"",
        "context": "CREATE TABLE table_name_96 (time_retired VARCHAR, driver VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "I want the time/retired with grid less than 22 and Laps less than 33 for john surtees"
    },
    {
        "answer": "SELECT voice_actor__japanese_ FROM table_name_59 WHERE character_name = \"tien\"",
        "context": "CREATE TABLE table_name_59 (voice_actor__japanese_ VARCHAR, character_name VARCHAR)",
        "question": "what voice acter played tien"
    },
    {
        "answer": "SELECT score FROM table_name_79 WHERE competition = \"1996 emarate cup\" AND date = \"march 25, 1996\"",
        "context": "CREATE TABLE table_name_79 (score VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "What is the score of the 1996 Emarate cup on March 25, 1996?"
    },
    {
        "answer": "SELECT competition FROM table_name_42 WHERE date = \"august 11, 1996\"",
        "context": "CREATE TABLE table_name_42 (competition VARCHAR, date VARCHAR)",
        "question": "Which competition was on August 11, 1996?"
    },
    {
        "answer": "SELECT race FROM table_name_51 WHERE fastest_lap = \"mike hawthorn\" AND winning_driver = \"peter collins\"",
        "context": "CREATE TABLE table_name_51 (race VARCHAR, fastest_lap VARCHAR, winning_driver VARCHAR)",
        "question": "During what race did Mike Hawthorn have the Fastest Lap and Peter Collins win?"
    },
    {
        "answer": "SELECT name FROM table_name_9 WHERE overall > 164 AND pick__number > 2 AND position = \"running back\" AND round = 16",
        "context": "CREATE TABLE table_name_9 (name VARCHAR, round VARCHAR, position VARCHAR, overall VARCHAR, pick__number VARCHAR)",
        "question": "Which name has an overall number of more than 164, when the pick number is more than 2, the position is running back, and the round is 16?"
    },
    {
        "answer": "SELECT class FROM table_name_45 WHERE position = \"qb\" AND name = \"josh riddell\"",
        "context": "CREATE TABLE table_name_45 (class VARCHAR, position VARCHAR, name VARCHAR)",
        "question": "What is the class of the qb, Josh Riddell?"
    },
    {
        "answer": "SELECT venue FROM table_name_91 WHERE score = \"1\u20130\" AND competition = \"2002 world cup qualifier\"",
        "context": "CREATE TABLE table_name_91 (venue VARCHAR, score VARCHAR, competition VARCHAR)",
        "question": "Which venue has a Score of 1\u20130, and a Competition of 2002 world cup qualifier?"
    },
    {
        "answer": "SELECT date FROM table_name_41 WHERE surface = \"grass\" AND opponent_in_the_final = \"nathan healey\"",
        "context": "CREATE TABLE table_name_41 (date VARCHAR, surface VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "What is the date for the grass surface final against Nathan Healey?"
    },
    {
        "answer": "SELECT tyres FROM table_name_27 WHERE engine_s_ = \"ford dfz v8\" AND chassis = \"coloni fc187\"",
        "context": "CREATE TABLE table_name_27 (tyres VARCHAR, engine_s_ VARCHAR, chassis VARCHAR)",
        "question": "What is the Tyres with a ford dfz v8 engine(s) with a chassis of coloni fc187?"
    },
    {
        "answer": "SELECT competition FROM table_name_4 WHERE date = \"2 june 1992\"",
        "context": "CREATE TABLE table_name_4 (competition VARCHAR, date VARCHAR)",
        "question": "What competition was played on 2 June 1992?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_87 WHERE location = \"las vegas, nevada\" AND method = \"decision (unanimous)\" AND event = \"k-1 world grand prix 2003 in las vegas ii\"",
        "context": "CREATE TABLE table_name_87 (round INTEGER, event VARCHAR, location VARCHAR, method VARCHAR)",
        "question": "What is the lowest Round with the Location, Las Vegas, Nevada, the Method, Decision (unanimous), and the Event, K-1 World Grand Prix 2003 in Las Vegas II?"
    },
    {
        "answer": "SELECT AVG(silver) FROM table_name_15 WHERE rank = 2 AND bronze > 1",
        "context": "CREATE TABLE table_name_15 (silver INTEGER, rank VARCHAR, bronze VARCHAR)",
        "question": "What is the average number of silver medals for rank 2 and more than 1 bronze medal?"
    },
    {
        "answer": "SELECT years FROM table_name_47 WHERE authority = \"state integrated\" AND name = \"our lady sacred heart school\"",
        "context": "CREATE TABLE table_name_47 (years VARCHAR, authority VARCHAR, name VARCHAR)",
        "question": "What years does Our Lady Sacred Heart School, which is state integrated, have?"
    },
    {
        "answer": "SELECT constructor FROM table_name_40 WHERE rounds = \"10-12\" AND chassis = \"m7a\"",
        "context": "CREATE TABLE table_name_40 (constructor VARCHAR, rounds VARCHAR, chassis VARCHAR)",
        "question": "Which constructor has 10-12 rounds and a M7A chassis?"
    },
    {
        "answer": "SELECT COUNT(entries) FROM table_name_55 WHERE season = \"2001\" AND front_row_starts < 13",
        "context": "CREATE TABLE table_name_55 (entries VARCHAR, season VARCHAR, front_row_starts VARCHAR)",
        "question": "What were the total number of entries in 2001 that had a front row smaller than 13?"
    },
    {
        "answer": "SELECT driver FROM table_name_18 WHERE tyre = \"g\" AND rounds = \"2-12\" AND chassis = \"m7a\"",
        "context": "CREATE TABLE table_name_18 (driver VARCHAR, chassis VARCHAR, tyre VARCHAR, rounds VARCHAR)",
        "question": "Which driver has a G tyre, rounds of 2-12 and a M7A chassis?"
    },
    {
        "answer": "SELECT COUNT(runs) FROM table_name_51 WHERE average > 31.25 AND innings < 24",
        "context": "CREATE TABLE table_name_51 (runs VARCHAR, average VARCHAR, innings VARCHAR)",
        "question": "What is the total number of runs when the average was less than 31.25 and there were fewer than 24 innings?"
    },
    {
        "answer": "SELECT MAX(byes) FROM table_name_80 WHERE against < 1647 AND ntfa_div_2 = \"fingal valley\" AND wins < 14",
        "context": "CREATE TABLE table_name_80 (byes INTEGER, wins VARCHAR, against VARCHAR, ntfa_div_2 VARCHAR)",
        "question": "Which Byes have an Against smaller than 1647, and an NTFA Div 2 of fingal valley, and Wins smaller than 14?"
    },
    {
        "answer": "SELECT nationality___opponent FROM table_name_63 WHERE competition = \"welsh rugby union challenge trophy\" AND result = \"38-29\"",
        "context": "CREATE TABLE table_name_63 (nationality___opponent VARCHAR, competition VARCHAR, result VARCHAR)",
        "question": "Name the Nationality / Opponent of the Competition of welsh rugby union challenge trophy and a Result of 38-29?"
    },
    {
        "answer": "SELECT position FROM table_name_80 WHERE pick__number < 16 AND name = \"tommy nobis\"",
        "context": "CREATE TABLE table_name_80 (position VARCHAR, pick__number VARCHAR, name VARCHAR)",
        "question": "What is Tommy Nobis' position that has fewer than 16 picks?"
    },
    {
        "answer": "SELECT chipset FROM table_name_97 WHERE graphics = \"pci express\" AND model = \"precision t3400\"",
        "context": "CREATE TABLE table_name_97 (chipset VARCHAR, graphics VARCHAR, model VARCHAR)",
        "question": "What type of chipset is in the Precision t3400 model with the PCI Express graphics?"
    },
    {
        "answer": "SELECT competition FROM table_name_64 WHERE nationality___opponent = \"rosario\"",
        "context": "CREATE TABLE table_name_64 (competition VARCHAR, nationality___opponent VARCHAR)",
        "question": "Name the Nationality / Opponent of rosario?"
    },
    {
        "answer": "SELECT SUM(pos) FROM table_name_41 WHERE make = \"chevrolet\" AND driver = \"jack sprague\" AND car__number < 2",
        "context": "CREATE TABLE table_name_41 (pos INTEGER, car__number VARCHAR, make VARCHAR, driver VARCHAR)",
        "question": "Which Pos has a Make of chevrolet, and a Driver of jack sprague, and a Car # smaller than 2?"
    },
    {
        "answer": "SELECT pick FROM table_name_15 WHERE school = \"lamar high school\"",
        "context": "CREATE TABLE table_name_15 (pick VARCHAR, school VARCHAR)",
        "question": "Which pick was from Lamar High School?"
    },
    {
        "answer": "SELECT MAX(pos) FROM table_name_64 WHERE team = \"circle bar racing\" AND car__number < 14",
        "context": "CREATE TABLE table_name_64 (pos INTEGER, team VARCHAR, car__number VARCHAR)",
        "question": "Which Pos has a Team of circle bar racing, and a Car # smaller than 14?"
    },
    {
        "answer": "SELECT result FROM table_name_49 WHERE year < 2010 AND tournament = \"hypo-meeting\"",
        "context": "CREATE TABLE table_name_49 (result VARCHAR, year VARCHAR, tournament VARCHAR)",
        "question": "What is the result of the hypo-meeting before 2010?"
    },
    {
        "answer": "SELECT circuit FROM table_name_64 WHERE round > 2 AND state_territory = \"victoria\"",
        "context": "CREATE TABLE table_name_64 (circuit VARCHAR, round VARCHAR, state_territory VARCHAR)",
        "question": "What circuit was after round 2 in Victoria?"
    },
    {
        "answer": "SELECT COUNT(national_titles) FROM table_name_2 WHERE mascot = \"doane tigers\"",
        "context": "CREATE TABLE table_name_2 (national_titles VARCHAR, mascot VARCHAR)",
        "question": "What is the total number of national titles for the team with doane tigers as the mascot?"
    },
    {
        "answer": "SELECT year FROM table_name_63 WHERE crew = \"varsity 8+\" AND record = \"7-3\"",
        "context": "CREATE TABLE table_name_63 (year VARCHAR, crew VARCHAR, record VARCHAR)",
        "question": "Which year's crew is varsity 8+ when the record is 7-3?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_74 WHERE home_team = \"footscray\"",
        "context": "CREATE TABLE table_name_74 (away_team VARCHAR, home_team VARCHAR)",
        "question": "During footscray's home game, how much did the away team score?"
    },
    {
        "answer": "SELECT name FROM table_name_17 WHERE floors = 23 AND street_address_in_detroit = \"144 west congress street\"",
        "context": "CREATE TABLE table_name_17 (name VARCHAR, floors VARCHAR, street_address_in_detroit VARCHAR)",
        "question": "Which place has 23 floors and a street address in Detroit of 144 west congress street?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_97 WHERE pick__number > 10 AND position = \"tight end\" AND overall < 132",
        "context": "CREATE TABLE table_name_97 (round INTEGER, overall VARCHAR, pick__number VARCHAR, position VARCHAR)",
        "question": "Which Round is the lowest one that has a Pick # larger than 10, and a Position of tight end, and an Overall smaller than 132?"
    },
    {
        "answer": "SELECT report FROM table_name_8 WHERE circuit = \"kyalami\" AND race_name = \"south african republic trophy\"",
        "context": "CREATE TABLE table_name_8 (report VARCHAR, circuit VARCHAR, race_name VARCHAR)",
        "question": "Name the report for circuit of kyalami for south african republic trophy"
    },
    {
        "answer": "SELECT COUNT(highest_position) FROM table_name_14 WHERE issue_date < 9 AND album_title = \"where we belong\"",
        "context": "CREATE TABLE table_name_14 (highest_position VARCHAR, issue_date VARCHAR, album_title VARCHAR)",
        "question": "What is the highest position the album Where we belong, which had an issue date higher than 9, had?"
    },
    {
        "answer": "SELECT country FROM table_name_77 WHERE series_premiere = \"september 4, 2006\"",
        "context": "CREATE TABLE table_name_77 (country VARCHAR, series_premiere VARCHAR)",
        "question": "Which country had a series that premiered on September 4, 2006?"
    },
    {
        "answer": "SELECT car_model FROM table_name_35 WHERE manufacturer = \"saab\" AND driver = \"dean randle\"",
        "context": "CREATE TABLE table_name_35 (car_model VARCHAR, manufacturer VARCHAR, driver VARCHAR)",
        "question": "What Car Model has the Manufacturer of Saab, and Driver Dean Randle?"
    },
    {
        "answer": "SELECT driver FROM table_name_1 WHERE team = \"p & l mechanical services\"",
        "context": "CREATE TABLE table_name_1 (driver VARCHAR, team VARCHAR)",
        "question": "Who is the Driver with the Team of P & L Mechanical Services?"
    },
    {
        "answer": "SELECT MAX(region) FROM table_name_9 WHERE name = \"saint-simon-les-mines\" AND population < 458",
        "context": "CREATE TABLE table_name_9 (region INTEGER, name VARCHAR, population VARCHAR)",
        "question": "Which region in Saint-Simon-Les-Mines has a population smaller than 458?"
    },
    {
        "answer": "SELECT SUM(region) FROM table_name_99 WHERE name = \"saint-agapit\" AND code < 33045",
        "context": "CREATE TABLE table_name_99 (region INTEGER, name VARCHAR, code VARCHAR)",
        "question": "What is total population of Saint-Agapit (code 33045)?"
    },
    {
        "answer": "SELECT AVG(area__km_2__) FROM table_name_91 WHERE code > 19025 AND region < 12",
        "context": "CREATE TABLE table_name_91 (area__km_2__ INTEGER, code VARCHAR, region VARCHAR)",
        "question": "What is the average area larger than Code 19025 but a smaller region than 12?"
    },
    {
        "answer": "SELECT msdn_integration FROM table_name_16 WHERE load_testing = \"no\" AND test_impact_analysis = \"no\"",
        "context": "CREATE TABLE table_name_16 (msdn_integration VARCHAR, load_testing VARCHAR, test_impact_analysis VARCHAR)",
        "question": "which MSDN integration has a Load testing of no, and a Test impact analysis of no?"
    },
    {
        "answer": "SELECT intellitrace FROM table_name_10 WHERE extensions = \"no\" AND windows_phone_development = \"no\"",
        "context": "CREATE TABLE table_name_10 (intellitrace VARCHAR, extensions VARCHAR, windows_phone_development VARCHAR)",
        "question": "Which Intelli Trace has a No Extension and Windows Phone development of no?"
    },
    {
        "answer": "SELECT projects_templates FROM table_name_39 WHERE intellitrace = \"no\" AND windows_phone_development = \"yes\" AND test_impact_analysis = \"no\"",
        "context": "CREATE TABLE table_name_39 (projects_templates VARCHAR, test_impact_analysis VARCHAR, intellitrace VARCHAR, windows_phone_development VARCHAR)",
        "question": "Which Projects template has an IntelliTrace of no, and a Windows Phone development of yes, and a Test impact analysis of no?"
    },
    {
        "answer": "SELECT AVG(population) FROM table_name_19 WHERE regional_county_municipality = \"le domaine-du-roy\" AND type = \"m\" AND region < 2",
        "context": "CREATE TABLE table_name_19 (population INTEGER, region VARCHAR, regional_county_municipality VARCHAR, type VARCHAR)",
        "question": "what is the average population when the regional county municipality is le domaine-du-roy, the type is m and the region is less than 2?"
    },
    {
        "answer": "SELECT year_clubhouse_constructed FROM table_name_3 WHERE sign_in_bicker = \"bicker\" AND name = \"cannon club\"",
        "context": "CREATE TABLE table_name_3 (year_clubhouse_constructed VARCHAR, sign_in_bicker VARCHAR, name VARCHAR)",
        "question": "When was the Clubhouse built with a Sign-in/Bicker of bicker, and Named cannon club?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_45 WHERE surface = \"clay\" AND score = \"4 : 0\"",
        "context": "CREATE TABLE table_name_45 (year VARCHAR, surface VARCHAR, score VARCHAR)",
        "question": "How many years have a Surface of clay, and a Score of 4 : 0?"
    },
    {
        "answer": "SELECT club FROM table_name_8 WHERE replacement = \"alberto malesani\"",
        "context": "CREATE TABLE table_name_8 (club VARCHAR, replacement VARCHAR)",
        "question": "Tell me the club with a replacement of alberto malesani"
    },
    {
        "answer": "SELECT home FROM table_name_92 WHERE visitor = \"chicago black hawks\" AND date = \"april 20\"",
        "context": "CREATE TABLE table_name_92 (home VARCHAR, visitor VARCHAR, date VARCHAR)",
        "question": "What team did the Chicago Black Hawks visit on April 20?"
    },
    {
        "answer": "SELECT date FROM table_name_78 WHERE high_assists = \"delonte west earl watson (6)\"",
        "context": "CREATE TABLE table_name_78 (date VARCHAR, high_assists VARCHAR)",
        "question": "On which date was the high assists Delonte West Earl Watson (6)?"
    },
    {
        "answer": "SELECT date FROM table_name_70 WHERE visiting_team = \"new york giants\" AND final_score = \"37-34\"",
        "context": "CREATE TABLE table_name_70 (date VARCHAR, visiting_team VARCHAR, final_score VARCHAR)",
        "question": "What is the date the new york giants were the visiting team and the Final Score was 37-34?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_19 WHERE venue = \"athens, greece\"",
        "context": "CREATE TABLE table_name_19 (year INTEGER, venue VARCHAR)",
        "question": "What year is the event in athens, greece?"
    },
    {
        "answer": "SELECT undecided FROM table_name_22 WHERE roy_barnes = \"47%\"",
        "context": "CREATE TABLE table_name_22 (undecided VARCHAR, roy_barnes VARCHAR)",
        "question": "What was the undecided with Roy Barnes at 47%?"
    },
    {
        "answer": "SELECT COUNT(week) FROM table_name_2 WHERE date = \"october 29, 2000\"",
        "context": "CREATE TABLE table_name_2 (week VARCHAR, date VARCHAR)",
        "question": "What week was October 29, 2000?"
    },
    {
        "answer": "SELECT engine_configuration_ & _notes_0_100km_h FROM table_name_49 WHERE engine_type = \"b5252 fs\"",
        "context": "CREATE TABLE table_name_49 (engine_configuration_ VARCHAR, _notes_0_100km_h VARCHAR, engine_type VARCHAR)",
        "question": "What is the engine configuration & notes 0-100km/h with an engine type with b5252 fs?"
    },
    {
        "answer": "SELECT max_1_min_wind_mph__km_h_ FROM table_name_26 WHERE dates_active = \"september22\u2013 september28\"",
        "context": "CREATE TABLE table_name_26 (max_1_min_wind_mph__km_h_ VARCHAR, dates_active VARCHAR)",
        "question": "Which Max 1-min wind mph (km/h) that has Dates active on september22\u2013 september28?"
    },
    {
        "answer": "SELECT min_press___mbar__ FROM table_name_68 WHERE deaths = \"none\" AND storm_name = \"seven\"",
        "context": "CREATE TABLE table_name_68 (min_press___mbar__ VARCHAR, deaths VARCHAR, storm_name VARCHAR)",
        "question": "Which Min press has none Death and seven Storm names?"
    },
    {
        "answer": "SELECT damage__millions_usd__ FROM table_name_36 WHERE min_press___mbar__ = \"972\" AND deaths = \"52\"",
        "context": "CREATE TABLE table_name_36 (damage__millions_usd__ VARCHAR, min_press___mbar__ VARCHAR, deaths VARCHAR)",
        "question": "What is the cost of 972 Min Press caused 52 death?"
    },
    {
        "answer": "SELECT AVG(interview) FROM table_name_79 WHERE average > 9.233 AND swimsuit = 9.473 AND evening_gown > 9.671",
        "context": "CREATE TABLE table_name_79 (interview INTEGER, evening_gown VARCHAR, average VARCHAR, swimsuit VARCHAR)",
        "question": "Which mean interview number had an average of more than 9.233, a swimsuit stat of more than 9.473, and an evening gown score of more than 9.671?"
    },
    {
        "answer": "SELECT MIN(evening_gown) FROM table_name_63 WHERE interview > 9.164 AND swimsuit < 9.35 AND average < 9.233",
        "context": "CREATE TABLE table_name_63 (evening_gown INTEGER, average VARCHAR, interview VARCHAR, swimsuit VARCHAR)",
        "question": "Which is the smallest evening gown score when the interview score was more than 9.164, the swimsuit stat was less than 9.35, and the average is less than 9.233?"
    },
    {
        "answer": "SELECT SUM(interview) FROM table_name_59 WHERE evening_gown = 9.543 AND average > 9.521",
        "context": "CREATE TABLE table_name_59 (interview INTEGER, evening_gown VARCHAR, average VARCHAR)",
        "question": "What is the total number of interview scores that have an evening gown score of 9.543 and an average that is bigger than 9.521?"
    },
    {
        "answer": "SELECT AVG(average) FROM table_name_52 WHERE evening_gown > 9.35 AND state = \"south carolina\" AND swimsuit > 9.4",
        "context": "CREATE TABLE table_name_52 (average INTEGER, swimsuit VARCHAR, evening_gown VARCHAR, state VARCHAR)",
        "question": "What is the mean average score when the evening gown score is more than 9.35, the state is South Carolina, and the swimsuit score is more than 9.4?"
    },
    {
        "answer": "SELECT third FROM table_name_52 WHERE skip = \"sandra peterson\" AND second = \"joan mccusker\" AND events = \"1995 stoh\"",
        "context": "CREATE TABLE table_name_52 (third VARCHAR, events VARCHAR, skip VARCHAR, second VARCHAR)",
        "question": "IN EVENTS 1995 STOH, WHO WAS THE THIRD WITH SKIP SANDRA PETERSON AND SECOND JOAN MCCUSKER?"
    },
    {
        "answer": "SELECT venue FROM table_name_22 WHERE result = \"3\u20130\" AND competition = \"2006 fifa world cup qualifier\" AND score = \"3\u20130\"",
        "context": "CREATE TABLE table_name_22 (venue VARCHAR, score VARCHAR, result VARCHAR, competition VARCHAR)",
        "question": "What is the Venue with a Result of 3\u20130, and a Competition with 2006 fifa world cup qualifier, and with a Score of 3\u20130?"
    },
    {
        "answer": "SELECT date FROM table_name_93 WHERE winning_score = \u201314(66 - 64 - 68 - 68 = 266)",
        "context": "CREATE TABLE table_name_93 (date VARCHAR, winning_score VARCHAR)",
        "question": "Which Date has a Winning score of \u201314 (66-64-68-68=266)?"
    },
    {
        "answer": "SELECT state FROM table_name_99 WHERE council_votes < 4",
        "context": "CREATE TABLE table_name_99 (state VARCHAR, council_votes INTEGER)",
        "question": "Which country has less than 4 votes?"
    },
    {
        "answer": "SELECT engine FROM table_name_68 WHERE year < 1996 AND points = 5",
        "context": "CREATE TABLE table_name_68 (engine VARCHAR, year VARCHAR, points VARCHAR)",
        "question": "what was the engine used before 1996 with 5 points?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_90 WHERE entrant = \"red bull sauber petronas\" AND points > 6",
        "context": "CREATE TABLE table_name_90 (year VARCHAR, entrant VARCHAR, points VARCHAR)",
        "question": "What number of years did the red bull sauber petronas have greater than 6 points?"
    },
    {
        "answer": "SELECT AVG(area__km_2__) FROM table_name_81 WHERE location = \"rhode island\" AND area__sq_mi_ > 38",
        "context": "CREATE TABLE table_name_81 (area__km_2__ INTEGER, location VARCHAR, area__sq_mi_ VARCHAR)",
        "question": "What is the area located in Rhode Island with more than 38 sq mi area?"
    },
    {
        "answer": "SELECT trofeo_fast_team FROM table_name_23 WHERE points_classification = \"claudio chiappucci\" AND stage = \"final\"",
        "context": "CREATE TABLE table_name_23 (trofeo_fast_team VARCHAR, points_classification VARCHAR, stage VARCHAR)",
        "question": "Which team had a final stage when Claudio Chiappucci had the points?"
    },
    {
        "answer": "SELECT stage FROM table_name_78 WHERE trofeo_fast_team = \"carrera jeans-tassoni\" AND winner = \"mario cipollini\" AND points_classification = \"claudio chiappucci\"",
        "context": "CREATE TABLE table_name_78 (stage VARCHAR, points_classification VARCHAR, trofeo_fast_team VARCHAR, winner VARCHAR)",
        "question": "What stage did team Carrera Jeans-Tassoni have when Mario Cipollini won and Claudio Chiappucci had the points?"
    },
    {
        "answer": "SELECT MAX(drawn) FROM table_name_39 WHERE against > 15 AND points < 15 AND lost < 9",
        "context": "CREATE TABLE table_name_39 (drawn INTEGER, lost VARCHAR, against VARCHAR, points VARCHAR)",
        "question": "Which Drawn is the highest one that has an Against larger than 15, and Points smaller than 15, and a Lost smaller than 9?"
    },
    {
        "answer": "SELECT COUNT(population_estimate_2005) FROM table_name_86 WHERE capital = \"majene\"",
        "context": "CREATE TABLE table_name_86 (population_estimate_2005 VARCHAR, capital VARCHAR)",
        "question": "how many population estimate 2005 are for majene?"
    },
    {
        "answer": "SELECT AVG(population_estimate_2005) FROM table_name_89 WHERE area__km_2__ = 3 OFFSET 034.08",
        "context": "CREATE TABLE table_name_89 (population_estimate_2005 INTEGER, area__km_2__ VARCHAR)",
        "question": "what is the population estimate 2005 for the with the area (km2) 3,034.08?"
    },
    {
        "answer": "SELECT COUNT(population_estimate_2005) FROM table_name_26 WHERE area__km_2__ > 8 OFFSET 023.74",
        "context": "CREATE TABLE table_name_26 (population_estimate_2005 VARCHAR, area__km_2__ INTEGER)",
        "question": "how many times was the population estimate 2005 have an area (km2) more than 8,023.74?"
    },
    {
        "answer": "SELECT score FROM table_name_16 WHERE visitor = \"pacers\" AND date = \"14 april 2008\"",
        "context": "CREATE TABLE table_name_16 (score VARCHAR, visitor VARCHAR, date VARCHAR)",
        "question": "Name the score for pacers visitor on 14 april 2008"
    },
    {
        "answer": "SELECT street_address FROM table_name_27 WHERE name = \"union bank of california tower\"",
        "context": "CREATE TABLE table_name_27 (street_address VARCHAR, name VARCHAR)",
        "question": "What's the address of the union bank of California tower?"
    },
    {
        "answer": "SELECT genre FROM table_name_95 WHERE number_of_episodes > 20 AND english_title__chinese_title_ = \"wong fei hung - master of kung fu \u6211\u5e2b\u5085\u4fc2\u9ec3\u98db\u9d3b\"",
        "context": "CREATE TABLE table_name_95 (genre VARCHAR, number_of_episodes VARCHAR, english_title__chinese_title_ VARCHAR)",
        "question": "What genre has over 20 episodes, with an English title (Chinese title) of wong fei hung - master of kung fu \u6211\u5e2b\u5085\u4fc2\u9ec3\u98db\u9d3b?"
    },
    {
        "answer": "SELECT MAX(frequency_mhz) FROM table_name_52 WHERE erp_w > 205 AND call_sign = \"k230ap\"",
        "context": "CREATE TABLE table_name_52 (frequency_mhz INTEGER, erp_w VARCHAR, call_sign VARCHAR)",
        "question": "Which Frequency MHz that has a ERP W larger than 205, and a Call sign of k230ap?"
    },
    {
        "answer": "SELECT _kah__atau_tidak_ FROM table_name_98 WHERE \"basikal\" = \"basikal\" AND language_dialect = \"malay language (informal)\"",
        "context": "CREATE TABLE table_name_98 (_kah__atau_tidak_ VARCHAR, language_dialect VARCHAR)",
        "question": "what is -kah (atau tidak when basikal is basikal and language dialect is malay language (informal)?"
    },
    {
        "answer": "SELECT COUNT(pocona_municipality) FROM table_name_98 WHERE totora_municipality = 72 AND pojo_municipality > 74",
        "context": "CREATE TABLE table_name_98 (pocona_municipality VARCHAR, totora_municipality VARCHAR, pojo_municipality VARCHAR)",
        "question": "What is Pocona Municipalities with 72 Totora municipalities and more than 74 pojo municipalities?"
    },
    {
        "answer": "SELECT runner_up FROM table_name_35 WHERE winner = \"janice yan (\u95bb\u5955\u683c)\"",
        "context": "CREATE TABLE table_name_35 (runner_up VARCHAR, winner VARCHAR)",
        "question": "Name the runner-up for janice yan (\u95bb\u5955\u683c)"
    },
    {
        "answer": "SELECT AVG(games_played) FROM table_name_57 WHERE team = \"ottawa hockey club\" AND wins > 5",
        "context": "CREATE TABLE table_name_57 (games_played INTEGER, team VARCHAR, wins VARCHAR)",
        "question": "Which average games played number has the Ottawa Hockey Club as a team and a number of wins bigger than 5?"
    },
    {
        "answer": "SELECT team FROM table_name_28 WHERE conmebol_1995 = \"round 1\"",
        "context": "CREATE TABLE table_name_28 (team VARCHAR, conmebol_1995 VARCHAR)",
        "question": "Which Team  has a round 1  CONMEBOL 1995?"
    },
    {
        "answer": "SELECT COUNT(wins) FROM table_name_4 WHERE goals_for > 35 AND team = \"montreal hockey club\" AND losses < 2",
        "context": "CREATE TABLE table_name_4 (wins VARCHAR, losses VARCHAR, goals_for VARCHAR, team VARCHAR)",
        "question": "What is the sum of wins when the goals for number was bigger than 35, the team was the Montreal Hockey Club, and the number of losses was less than 2?"
    },
    {
        "answer": "SELECT game_site FROM table_name_1 WHERE date = \"october 17, 1999\"",
        "context": "CREATE TABLE table_name_1 (game_site VARCHAR, date VARCHAR)",
        "question": "Which Game Site has a Date of october 17, 1999?"
    },
    {
        "answer": "SELECT SUM(seats_2001) FROM table_name_7 WHERE seats_2006 = 2 AND _percentage_2001 > 7.6",
        "context": "CREATE TABLE table_name_7 (seats_2001 INTEGER, seats_2006 VARCHAR, _percentage_2001 VARCHAR)",
        "question": "There are communities listed that a percentage larger than 7.6 in 2001, but none of them has 2 seats listed in 2006."
    },
    {
        "answer": "SELECT player FROM table_name_19 WHERE goals = 0 AND tries = 1 AND points = 4 AND position = \"prop\"",
        "context": "CREATE TABLE table_name_19 (player VARCHAR, position VARCHAR, points VARCHAR, goals VARCHAR, tries VARCHAR)",
        "question": "Which player has 0 goals, 1 tries, 4 points, and plays in the Prop position?"
    },
    {
        "answer": "SELECT frequency_mhz FROM table_name_79 WHERE city_of_license = \"surfside beach, sc\"",
        "context": "CREATE TABLE table_name_79 (frequency_mhz VARCHAR, city_of_license VARCHAR)",
        "question": "What is surfside beach, SC frequency?"
    },
    {
        "answer": "SELECT type FROM table_name_65 WHERE project = \"igmdp\" AND weight__kg_ = \"16,000\"",
        "context": "CREATE TABLE table_name_65 (type VARCHAR, project VARCHAR, weight__kg_ VARCHAR)",
        "question": "Name the typ for project of igmdp and weight of 16,000"
    },
    {
        "answer": "SELECT group_position FROM table_name_2 WHERE opponents = \"juventus\" AND attendance > 47 OFFSET 786",
        "context": "CREATE TABLE table_name_2 (group_position VARCHAR, opponents VARCHAR, attendance VARCHAR)",
        "question": "What group of juventus had an attendance larger than 47,786?"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_11 WHERE class = \"250cc\" AND year = 1971",
        "context": "CREATE TABLE table_name_11 (wins INTEGER, class VARCHAR, year VARCHAR)",
        "question": "What are the most wins in 1971 in 250cc class?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_49 WHERE points < 45 AND team = \"yamaha\" AND rank = \"21st\"",
        "context": "CREATE TABLE table_name_49 (year INTEGER, rank VARCHAR, points VARCHAR, team VARCHAR)",
        "question": "What is the earliest year with less than 45 points for Yamaha team in 21st rank?"
    },
    {
        "answer": "SELECT constructor FROM table_name_88 WHERE time_retired = \"1:34:12.912\"",
        "context": "CREATE TABLE table_name_88 (constructor VARCHAR, time_retired VARCHAR)",
        "question": "Who built the car that has a Time/Retired of 1:34:12.912?"
    },
    {
        "answer": "SELECT current_status FROM table_name_64 WHERE make = \"gm advanced design\" AND number_of_seats > 41",
        "context": "CREATE TABLE table_name_64 (current_status VARCHAR, make VARCHAR, number_of_seats VARCHAR)",
        "question": "What is the current status for GM Advanced Design with more than 41 seats?"
    },
    {
        "answer": "SELECT constellation FROM table_name_54 WHERE right_ascension___j2000__ = \"18h17m41.1s\"",
        "context": "CREATE TABLE table_name_54 (constellation VARCHAR, right_ascension___j2000__ VARCHAR)",
        "question": "Tell me the constellation which has a right ascension of 18h17m41.1s"
    },
    {
        "answer": "SELECT COUNT(since) FROM table_name_57 WHERE goals > 6 AND name = \"deco\"",
        "context": "CREATE TABLE table_name_57 (since VARCHAR, goals VARCHAR, name VARCHAR)",
        "question": "What is the total number of Since with a Goals larger than 6, and a Name with deco?"
    },
    {
        "answer": "SELECT overall FROM table_name_91 WHERE position = \"running back\"",
        "context": "CREATE TABLE table_name_91 (overall VARCHAR, position VARCHAR)",
        "question": "What is the overall of the running back player?"
    },
    {
        "answer": "SELECT constructor FROM table_name_2 WHERE grid > 14 AND laps > 93 AND rank > 25",
        "context": "CREATE TABLE table_name_2 (constructor VARCHAR, rank VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "Which constructor had a grid number bigger than 14, laps of more than 93, and rank higher than 25?"
    },
    {
        "answer": "SELECT award FROM table_name_27 WHERE result = \"won\" AND category = \"most popular star\" AND year = 2007",
        "context": "CREATE TABLE table_name_27 (award VARCHAR, year VARCHAR, result VARCHAR, category VARCHAR)",
        "question": "For the category of most popular star with a result of won for 2007, what was the award?"
    },
    {
        "answer": "SELECT main_colour_s_ FROM table_name_36 WHERE main_sponsor_s_ = \"marlboro\"",
        "context": "CREATE TABLE table_name_36 (main_colour_s_ VARCHAR, main_sponsor_s_ VARCHAR)",
        "question": "What is the main color(s) for marlboro?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_33 WHERE date = \"october 30, 1938\"",
        "context": "CREATE TABLE table_name_33 (attendance INTEGER, date VARCHAR)",
        "question": "What was the average attendance on October 30, 1938?"
    },
    {
        "answer": "SELECT engine_s_ FROM table_name_7 WHERE year = 1992",
        "context": "CREATE TABLE table_name_7 (engine_s_ VARCHAR, year VARCHAR)",
        "question": "What engines have the year 1992?"
    },
    {
        "answer": "SELECT opponent FROM table_name_90 WHERE results\u00b9 = \"2:3\"",
        "context": "CREATE TABLE table_name_90 (opponent VARCHAR, results\u00b9 VARCHAR)",
        "question": "Who did Yugoslavia play against that led to a result of 2:3?"
    },
    {
        "answer": "SELECT score_in_final FROM table_name_75 WHERE outcome = \"runner-up\" AND date = \"9 february 1992\"",
        "context": "CREATE TABLE table_name_75 (score_in_final VARCHAR, outcome VARCHAR, date VARCHAR)",
        "question": "What is the final score of the runner-up on 9 February 1992?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_39 WHERE location = \"veterans stadium\" AND game > 3 AND time = \"2:21\"",
        "context": "CREATE TABLE table_name_39 (attendance INTEGER, time VARCHAR, location VARCHAR, game VARCHAR)",
        "question": "what is the attendance when the location is veterans stadium, the game is more than 3 and the time is 2:21?"
    },
    {
        "answer": "SELECT COUNT(game) FROM table_name_95 WHERE location = \"memorial stadium\" AND time = \"2:27\"",
        "context": "CREATE TABLE table_name_95 (game VARCHAR, location VARCHAR, time VARCHAR)",
        "question": "how many games have a location of memorial stadium and a time of 2:27?"
    },
    {
        "answer": "SELECT time FROM table_name_27 WHERE opponent = \"stephanie palmer\"",
        "context": "CREATE TABLE table_name_27 (time VARCHAR, opponent VARCHAR)",
        "question": "What is the time when the opponent is stephanie palmer?"
    },
    {
        "answer": "SELECT date FROM table_name_36 WHERE tournament = \"z\u00fcrich, switzerland\"",
        "context": "CREATE TABLE table_name_36 (date VARCHAR, tournament VARCHAR)",
        "question": "What date is the z\u00fcrich, switzerland tournament?"
    },
    {
        "answer": "SELECT venue FROM table_name_72 WHERE result = \"5-1\" AND score = \"1-0\"",
        "context": "CREATE TABLE table_name_72 (venue VARCHAR, result VARCHAR, score VARCHAR)",
        "question": "Which Venue has a Result of 5-1, and a Score of 1-0?"
    },
    {
        "answer": "SELECT COUNT(works_number) FROM table_name_51 WHERE type = \"0-6-4t\" AND name = \"gowrie\" AND date > 1908",
        "context": "CREATE TABLE table_name_51 (works_number VARCHAR, date VARCHAR, type VARCHAR, name VARCHAR)",
        "question": "What is the total work number of Gowrie with a 0-6-4t type after 1908?"
    },
    {
        "answer": "SELECT network FROM table_name_29 WHERE model = \"nforce professional 3400 mcp\"",
        "context": "CREATE TABLE table_name_29 (network VARCHAR, model VARCHAR)",
        "question": "Which network has model nForce Professional 3400 MCP?"
    },
    {
        "answer": "SELECT score FROM table_name_7 WHERE couple = \"cristi\u00e1n & cheryl\" AND style = \"cha-cha-cha\"",
        "context": "CREATE TABLE table_name_7 (score VARCHAR, couple VARCHAR, style VARCHAR)",
        "question": "Which Score has a Couple of cristi\u00e1n & cheryl, and a Style of cha-cha-cha?"
    },
    {
        "answer": "SELECT name FROM table_name_23 WHERE date = \"5 may 1943\" AND nationality = \"united kingdom\" AND sunk_by\u2026 = \"u-266\" AND casualties = \"0\"",
        "context": "CREATE TABLE table_name_23 (name VARCHAR, casualties VARCHAR, sunk_by\u2026 VARCHAR, date VARCHAR, nationality VARCHAR)",
        "question": "What is the name of the ship sunk on 5 May 1943 from the United Kingdom sunk by an u-266 with 0 casualties?"
    },
    {
        "answer": "SELECT right_ascension___j2000__ FROM table_name_14 WHERE ngc_number < 6995 AND object_type = \"diffuse nebula\" AND declination___j2000__ = \"\u00b042\u203230\u2033\"",
        "context": "CREATE TABLE table_name_14 (right_ascension___j2000__ VARCHAR, declination___j2000__ VARCHAR, ngc_number VARCHAR, object_type VARCHAR)",
        "question": "What is the Right Ascension with a Diffuse Nebula Object Type has a \u00b042\u203230\u2033 Declination and a NGC less than 6995?"
    },
    {
        "answer": "SELECT object_type FROM table_name_81 WHERE ngc_number > 6995 AND right_ascension___j2000__ = \"21h01m37.7s\"",
        "context": "CREATE TABLE table_name_81 (object_type VARCHAR, ngc_number VARCHAR, right_ascension___j2000__ VARCHAR)",
        "question": "What Object Type has a 21h01m37.7s Right Ascension (J2000) and 6995 or greater NGC?"
    },
    {
        "answer": "SELECT new_zealand_kennel_club_toy_group FROM table_name_26 WHERE australian_national_kennel_council_toy_dogs_group = \"papillon\"",
        "context": "CREATE TABLE table_name_26 (new_zealand_kennel_club_toy_group VARCHAR, australian_national_kennel_council_toy_dogs_group VARCHAR)",
        "question": "What is the New Zealand Kennel Club Toy Group with papillon as the Australian National Kennel Council Toy Dogs Group breed?"
    },
    {
        "answer": "SELECT date FROM table_name_43 WHERE venue = \"pro player stadium\" AND score = \"4-1\"",
        "context": "CREATE TABLE table_name_43 (date VARCHAR, venue VARCHAR, score VARCHAR)",
        "question": "What is the date of the game at the Pro Player Stadium that had a score of 4-1?"
    },
    {
        "answer": "SELECT surname FROM table_name_12 WHERE first = \"donovan\"",
        "context": "CREATE TABLE table_name_12 (surname VARCHAR, first VARCHAR)",
        "question": "What is donovan's surname?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_94 WHERE position = \"left wing\" AND player = \"yanick dupre\"",
        "context": "CREATE TABLE table_name_94 (college_junior_club_team__league_ VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "In what League is Left Wing Yanick Dupre?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_31 WHERE position = \"right wing\" AND round = \"6\"",
        "context": "CREATE TABLE table_name_31 (college_junior_club_team__league_ VARCHAR, position VARCHAR, round VARCHAR)",
        "question": "In what League in Round 6 is the Position Right Wing?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_2 WHERE away_team = \"richmond\"",
        "context": "CREATE TABLE table_name_2 (away_team VARCHAR)",
        "question": "When Richmond is the Away team, what did they score?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_96 WHERE constructor = \"renault\" AND laps = \"40\"",
        "context": "CREATE TABLE table_name_96 (time_retired VARCHAR, constructor VARCHAR, laps VARCHAR)",
        "question": "What was the time of the car having a constructor of Renault, which went 40 laps?"
    },
    {
        "answer": "SELECT title FROM table_name_67 WHERE track < 7 AND translation = \"an island\"",
        "context": "CREATE TABLE table_name_67 (title VARCHAR, track VARCHAR, translation VARCHAR)",
        "question": "Which title has tracks smaller than 7 with translation of an island?"
    },
    {
        "answer": "SELECT position FROM table_name_81 WHERE school_club_team = \"east carolina\"",
        "context": "CREATE TABLE table_name_81 (position VARCHAR, school_club_team VARCHAR)",
        "question": "What's the position listed for the east carolina team?"
    },
    {
        "answer": "SELECT name FROM table_name_57 WHERE marriage = \"disputed\"",
        "context": "CREATE TABLE table_name_57 (name VARCHAR, marriage VARCHAR)",
        "question": "Who had a disputed marriage?"
    },
    {
        "answer": "SELECT high_assists FROM table_name_98 WHERE high_points = \"dorell wright (20)\"",
        "context": "CREATE TABLE table_name_98 (high_assists VARCHAR, high_points VARCHAR)",
        "question": "What was the high assists from a high points of dorell wright (20)?"
    },
    {
        "answer": "SELECT brooklyn FROM table_name_53 WHERE richmond_[staten_is] = \"2,293\"",
        "context": "CREATE TABLE table_name_53 (brooklyn VARCHAR, richmond_ VARCHAR, staten_is VARCHAR)",
        "question": "When Richmond had a total count of 2,293, what was the total count of Brooklyn?"
    },
    {
        "answer": "SELECT fuel_propulsion FROM table_name_41 WHERE year = 1975 AND numbers__quantity_ordered_ = \"4756-4788 (33 buses)\"",
        "context": "CREATE TABLE table_name_41 (fuel_propulsion VARCHAR, year VARCHAR, numbers__quantity_ordered_ VARCHAR)",
        "question": "For the year 1975, what is Propulsion, with a Number (quantity ordered) of 4756-4788 (33 buses)?"
    },
    {
        "answer": "SELECT year AS Retired FROM table_name_2 WHERE fuel_propulsion = \"diesel\" AND length = \"40'\" AND numbers__quantity_ordered_ = \"3701-3729 (29 buses)\"",
        "context": "CREATE TABLE table_name_2 (year VARCHAR, numbers__quantity_ordered_ VARCHAR, fuel_propulsion VARCHAR, length VARCHAR)",
        "question": "What year was the diesel fuel propulsion, with a length of 40', and numbers (quanity ordered) of 3701-3729 (29 buses), retired?"
    },
    {
        "answer": "SELECT COUNT(events) FROM table_name_42 WHERE player = \"al geiberger\" AND earnings___$__ > 527 OFFSET 033",
        "context": "CREATE TABLE table_name_42 (events VARCHAR, player VARCHAR, earnings___$__ VARCHAR)",
        "question": "What is the total number of events that Al Geiberger has played with earnings larger than 527,033?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_52 WHERE date = \"february 25\"",
        "context": "CREATE TABLE table_name_52 (location_attendance VARCHAR, date VARCHAR)",
        "question": "What is the location attendance of the game on February 25?"
    },
    {
        "answer": "SELECT MAX(fall_08) FROM table_name_96 WHERE fall_09 < 82 AND fall_06 = 5 AND fall_05 < 3",
        "context": "CREATE TABLE table_name_96 (fall_08 INTEGER, fall_05 VARCHAR, fall_09 VARCHAR, fall_06 VARCHAR)",
        "question": "What's the largest Fall 08 number when fall 09 is less than 82, fall 06 is 5, and fall 05 is less than 3?"
    },
    {
        "answer": "SELECT school FROM table_name_71 WHERE round > 3 AND player = \"jason odom\"",
        "context": "CREATE TABLE table_name_71 (school VARCHAR, round VARCHAR, player VARCHAR)",
        "question": "Which school has more than 3 rounds with jason odom?"
    },
    {
        "answer": "SELECT SUM(number_of_seasons_in_top_division) FROM table_name_48 WHERE position_in_2012_13 = \"009 9th\" AND number_of_seasons_in_the_premier_league < 3",
        "context": "CREATE TABLE table_name_48 (number_of_seasons_in_top_division INTEGER, position_in_2012_13 VARCHAR, number_of_seasons_in_the_premier_league VARCHAR)",
        "question": "I want the sum of number of seasons in top division for position in 2012-13 of 009 9th and number of seasons in premier league less than 3"
    },
    {
        "answer": "SELECT new_classification FROM table_name_69 WHERE location = \"la mirada, california\"",
        "context": "CREATE TABLE table_name_69 (new_classification VARCHAR, location VARCHAR)",
        "question": "What is the new classification for La Mirada, California?"
    },
    {
        "answer": "SELECT player FROM table_name_8 WHERE school_club_team = \"stanford\"",
        "context": "CREATE TABLE table_name_8 (player VARCHAR, school_club_team VARCHAR)",
        "question": "Who is the player who went to Stanford?"
    },
    {
        "answer": "SELECT host_city FROM table_name_24 WHERE venue = \"singapore indoor stadium\" AND theme = \"valentine's day\"",
        "context": "CREATE TABLE table_name_24 (host_city VARCHAR, venue VARCHAR, theme VARCHAR)",
        "question": "What is the host city of the Singapore Indoor Stadium venue and a Valentine's Day theme?"
    },
    {
        "answer": "SELECT date FROM table_name_21 WHERE margin_of_victory = \"1 stroke\" AND runner_s__up = \"greg kraft\"",
        "context": "CREATE TABLE table_name_21 (date VARCHAR, margin_of_victory VARCHAR, runner_s__up VARCHAR)",
        "question": "What date has a margin of victory of 1 stroke over Greg Kraft?"
    },
    {
        "answer": "SELECT object_type FROM table_name_53 WHERE ngc_number > 6357 AND declination___j2000__ = \"\u00b045\u203234\u2033\"",
        "context": "CREATE TABLE table_name_53 (object_type VARCHAR, ngc_number VARCHAR, declination___j2000__ VARCHAR)",
        "question": "Which object type had an NGC number greater than 6357 and a declination (J2000) of \u00b045\u203234\u2033?"
    },
    {
        "answer": "SELECT declination___j2000__ FROM table_name_53 WHERE constellation = \"scorpius\" AND object_type = \"planetary nebula\"",
        "context": "CREATE TABLE table_name_53 (declination___j2000__ VARCHAR, constellation VARCHAR, object_type VARCHAR)",
        "question": "For the constellation scorpius and object of planetary nebula, what was the declination (J2000)?"
    },
    {
        "answer": "SELECT MIN(code) FROM table_name_92 WHERE most_spoken_language = \"xhosa\" AND place = \"addo elephant national park\" AND area__km_2__ < 1.08",
        "context": "CREATE TABLE table_name_92 (code INTEGER, area__km_2__ VARCHAR, most_spoken_language VARCHAR, place VARCHAR)",
        "question": "What's the lowest Code that's got a Most Spoke Language of Xhosa, a Place of Addo Elephant National Park, and an Area (KM 2) that's smaller than 1.08?"
    },
    {
        "answer": "SELECT command_set FROM table_name_35 WHERE fdd_capacity__each_ = \"270kb\" AND sides = \"ds\" AND _number_fdd > 1",
        "context": "CREATE TABLE table_name_35 (command_set VARCHAR, _number_fdd VARCHAR, fdd_capacity__each_ VARCHAR, sides VARCHAR)",
        "question": "Tell me the command set with FDD capacity of 270kb and sides of ds with #FDD more than 1"
    },
    {
        "answer": "SELECT score FROM table_name_41 WHERE visitor = \"philadelphia\" AND date = \"december 1\"",
        "context": "CREATE TABLE table_name_41 (score VARCHAR, visitor VARCHAR, date VARCHAR)",
        "question": "What's the score on December 1 when Philadelphia visited?"
    },
    {
        "answer": "SELECT year_10_6th_quad FROM table_name_7 WHERE open_2nd_viii = \"acgs\" AND year_11_2nd_viii = \"nc\"",
        "context": "CREATE TABLE table_name_7 (year_10_6th_quad VARCHAR, open_2nd_viii VARCHAR, year_11_2nd_viii VARCHAR)",
        "question": "What is the Year 10 6th Quads for the Open 2nd VIII of ACGS and a Year 11 2nd VIII NC?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_26 WHERE opponent = \"brewers\" AND date = \"july 25\"",
        "context": "CREATE TABLE table_name_26 (attendance INTEGER, opponent VARCHAR, date VARCHAR)",
        "question": "On July 25 what is the lowest attendance with the Brewers as the opponent?"
    },
    {
        "answer": "SELECT MAX(car__number) FROM table_name_98 WHERE make = \"toyota\" AND pos = 7",
        "context": "CREATE TABLE table_name_98 (car__number INTEGER, make VARCHAR, pos VARCHAR)",
        "question": "Which Car # has a Make of toyota, and a Pos of 7?"
    },
    {
        "answer": "SELECT record FROM table_name_55 WHERE date = \"december 18\"",
        "context": "CREATE TABLE table_name_55 (record VARCHAR, date VARCHAR)",
        "question": "Which Record has a Date on december 18?"
    },
    {
        "answer": "SELECT surface FROM table_name_1 WHERE opponents_in_the_final = \"kathleen horvath marcella mesker\"",
        "context": "CREATE TABLE table_name_1 (surface VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "On what surface was the tournament with opponents kathleen horvath marcella mesker in the finals?"
    },
    {
        "answer": "SELECT host_interface FROM table_name_34 WHERE digital = \"dvb-t (cx22702)\" AND model = \"nova-t pci (90002)\"",
        "context": "CREATE TABLE table_name_34 (host_interface VARCHAR, digital VARCHAR, model VARCHAR)",
        "question": "Tell me the Host interface for digital of dvb-t (cx22702) and model of nova-t pci (90002)"
    },
    {
        "answer": "SELECT director FROM table_name_93 WHERE year__ceremony_ = 2001",
        "context": "CREATE TABLE table_name_93 (director VARCHAR, year__ceremony_ VARCHAR)",
        "question": "What was the Director with a Ceremony of 2001?"
    },
    {
        "answer": "SELECT tuner FROM table_name_32 WHERE type = \"hybrid video recorder\" AND digital = \"dvb-t (zl10353)\" AND model = \"hvr-900\"",
        "context": "CREATE TABLE table_name_32 (tuner VARCHAR, model VARCHAR, type VARCHAR, digital VARCHAR)",
        "question": "I want the tuner for hybrid video recorder and Digital of dvb-t (zl10353), and a Model of hvr-900"
    },
    {
        "answer": "SELECT type FROM table_name_89 WHERE host_interface = \"pci saa7146 tmx320av7111\"",
        "context": "CREATE TABLE table_name_89 (type VARCHAR, host_interface VARCHAR)",
        "question": "I want the type for host interface of pci saa7146 tmx320av7111"
    },
    {
        "answer": "SELECT score FROM table_name_8 WHERE opponent = \"boston red sox\" AND save = \"sager\"",
        "context": "CREATE TABLE table_name_8 (score VARCHAR, opponent VARCHAR, save VARCHAR)",
        "question": "Which Score has a Opponent of Boston red sox and a Save of sager?"
    },
    {
        "answer": "SELECT SUM(swimsuit) FROM table_name_25 WHERE evening_gown > 9.257 AND interview = 9.357",
        "context": "CREATE TABLE table_name_25 (swimsuit INTEGER, evening_gown VARCHAR, interview VARCHAR)",
        "question": "What is the number for swimsuit when the evening gown number is larger than 9.257 and the interview number is 9.357?"
    },
    {
        "answer": "SELECT length FROM table_name_25 WHERE junctions = \"i-35 us 83\" AND route_name = \"us 83 bus.\"",
        "context": "CREATE TABLE table_name_25 (length VARCHAR, junctions VARCHAR, route_name VARCHAR)",
        "question": "What is the length of the highway with junctions i-35 us 83 and named us 83 bus.?"
    },
    {
        "answer": "SELECT date_of_inauguration FROM table_name_78 WHERE length_of_retirement = \"00,624 days\"",
        "context": "CREATE TABLE table_name_78 (date_of_inauguration VARCHAR, length_of_retirement VARCHAR)",
        "question": "What is the date of the inauguration with a Length of retirement of 00,624 days?"
    },
    {
        "answer": "SELECT SUM(extra_points) FROM table_name_92 WHERE touchdowns = 1 AND player = \"ross kidston\" AND points < 5",
        "context": "CREATE TABLE table_name_92 (extra_points INTEGER, points VARCHAR, touchdowns VARCHAR, player VARCHAR)",
        "question": "How many Extra points have Touchdowns of 1, and a Player of ross kidston, and Points smaller than 5?"
    },
    {
        "answer": "SELECT MAX(wk_9) FROM table_name_13 WHERE wk_6 = \"7\" AND wk_10 > 2 AND wk_7 = \"5\" AND wk_11 < 2",
        "context": "CREATE TABLE table_name_13 (wk_9 INTEGER, wk_11 VARCHAR, wk_7 VARCHAR, wk_6 VARCHAR, wk_10 VARCHAR)",
        "question": "What is the highest week 9 that had a week 6 of 7, a week 10 of greater than 2, a week 7 of 5, and a week 11 less than 2?"
    },
    {
        "answer": "SELECT week_14_nov_24 FROM table_name_44 WHERE week_11_nov_3 = \"usc (6-2)\"",
        "context": "CREATE TABLE table_name_44 (week_14_nov_24 VARCHAR, week_11_nov_3 VARCHAR)",
        "question": "What is Week 14 Nov 24, that has Week 11 Nov 3 of USC (6-2)?"
    },
    {
        "answer": "SELECT name FROM table_name_43 WHERE order < 997 AND goals > 5 AND games = 215",
        "context": "CREATE TABLE table_name_43 (name VARCHAR, games VARCHAR, order VARCHAR, goals VARCHAR)",
        "question": "Which name has an Order smaller than 997,more than 5 goals, and 215 games?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_66 WHERE venue = \"annecy, france\"",
        "context": "CREATE TABLE table_name_66 (year INTEGER, venue VARCHAR)",
        "question": "What is the latest year in Annecy, France?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_96 WHERE score = \"3 \u2013 2\" AND date = \"january 10\"",
        "context": "CREATE TABLE table_name_96 (attendance VARCHAR, score VARCHAR, date VARCHAR)",
        "question": "How many people attended the game on january 10 with a Score of 3 \u2013 2?"
    },
    {
        "answer": "SELECT date FROM table_name_47 WHERE competition = \"friendly match\" AND result = \"2\u20131\"",
        "context": "CREATE TABLE table_name_47 (date VARCHAR, competition VARCHAR, result VARCHAR)",
        "question": "When is the Competition of friendly match with a Result of 2\u20131?"
    },
    {
        "answer": "SELECT constructor FROM table_name_53 WHERE grid < 24 AND laps > 77 AND driver = \"jean-pierre beltoise\"",
        "context": "CREATE TABLE table_name_53 (constructor VARCHAR, driver VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "Which Constructor has a Grid smaller than 24, more than 77 laps, and a Driver of jean-pierre beltoise?"
    },
    {
        "answer": "SELECT driver FROM table_name_34 WHERE constructor = \"maserati\" AND laps < 18 AND grid < 14 AND time_retired = \"oil leak\"",
        "context": "CREATE TABLE table_name_34 (driver VARCHAR, time_retired VARCHAR, grid VARCHAR, constructor VARCHAR, laps VARCHAR)",
        "question": "Who drove the maserati under 18 laps with an oil leak that had a grid of under 14?"
    },
    {
        "answer": "SELECT haat FROM table_name_17 WHERE channels_tv___rf = \"31 (psip) 44 (uhf)\"",
        "context": "CREATE TABLE table_name_17 (haat VARCHAR, channels_tv___rf VARCHAR)",
        "question": "Which HAAT has a Channels TV / RF of 31 (psip) 44 (uhf)"
    },
    {
        "answer": "SELECT winner FROM table_name_81 WHERE type = \"mountain stage\" AND date = \"22 may\"",
        "context": "CREATE TABLE table_name_81 (winner VARCHAR, type VARCHAR, date VARCHAR)",
        "question": "Who was the winner with a mountain stage type on 22 May?"
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_name_39 WHERE player = \"jesse alexander\"",
        "context": "CREATE TABLE table_name_39 (pick__number INTEGER, player VARCHAR)",
        "question": "What is the pick number of Jesse Alexander?"
    },
    {
        "answer": "SELECT city_of_license FROM table_name_3 WHERE channels_tv___rf = \"36 (psip) 36 (uhf)\"",
        "context": "CREATE TABLE table_name_3 (city_of_license VARCHAR, channels_tv___rf VARCHAR)",
        "question": "Which City of license has a Channels TV / RF of 36 (psip) 36 (uhf)? Question 5"
    },
    {
        "answer": "SELECT english_title__chinese_title_ FROM table_name_67 WHERE airing_date = \"18 dec 2006- 10 feb 2007\"",
        "context": "CREATE TABLE table_name_67 (english_title__chinese_title_ VARCHAR, airing_date VARCHAR)",
        "question": "Which title aired on 18 dec 2006- 10 feb 2007?"
    },
    {
        "answer": "SELECT date FROM table_name_21 WHERE label = \"hydra head records\" AND format = \"cd\"",
        "context": "CREATE TABLE table_name_21 (date VARCHAR, label VARCHAR, format VARCHAR)",
        "question": "What is the date for Hydra Head Records with a CD format?"
    },
    {
        "answer": "SELECT displacement FROM table_name_28 WHERE version = \"db\"",
        "context": "CREATE TABLE table_name_28 (displacement VARCHAR, version VARCHAR)",
        "question": "I want the displacement for version of db"
    },
    {
        "answer": "SELECT venue FROM table_name_27 WHERE competition = \"european indoor championships\" AND year > 1979",
        "context": "CREATE TABLE table_name_27 (venue VARCHAR, competition VARCHAR, year VARCHAR)",
        "question": "After 1979, where was the European Indoor Championships held?"
    },
    {
        "answer": "SELECT position FROM table_name_78 WHERE competition = \"european indoor championships\" AND year < 1979",
        "context": "CREATE TABLE table_name_78 (position VARCHAR, competition VARCHAR, year VARCHAR)",
        "question": "Before 1979, what position was the European Indoor Championships?"
    },
    {
        "answer": "SELECT MAX(played) FROM table_name_80 WHERE scored = 15 AND draws < 1",
        "context": "CREATE TABLE table_name_80 (played INTEGER, scored VARCHAR, draws VARCHAR)",
        "question": "What's the highest Played with a Scored of 15, and Draws that's less than 1?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_63 WHERE film_name = \"rang barse\"",
        "context": "CREATE TABLE table_name_63 (year VARCHAR, film_name VARCHAR)",
        "question": "Which year was the film Rang Barse introduced?"
    },
    {
        "answer": "SELECT production_code FROM table_name_75 WHERE season__number > 23 AND series__number < 126 AND written_by = \"gary sturgis\"",
        "context": "CREATE TABLE table_name_75 (production_code VARCHAR, written_by VARCHAR, season__number VARCHAR, series__number VARCHAR)",
        "question": "What is the production code of the episode written by Gary Sturgis that is bigger than season number 23 and smaller than series number 126?"
    },
    {
        "answer": "SELECT opponent FROM table_name_69 WHERE surface = \"clay\" AND score = \"6\u20133, 2\u20136, [10\u20138]\"",
        "context": "CREATE TABLE table_name_69 (opponent VARCHAR, surface VARCHAR, score VARCHAR)",
        "question": "With the score of 6\u20133, 2\u20136, [10\u20138] and played on clay who was the opponent?"
    },
    {
        "answer": "SELECT constructor FROM table_name_57 WHERE grid > 4 AND driver = \"heinz-harald frentzen\"",
        "context": "CREATE TABLE table_name_57 (constructor VARCHAR, grid VARCHAR, driver VARCHAR)",
        "question": "Tell me the constructor for Grid more than 4 and drivers being heinz-harald frentzen"
    },
    {
        "answer": "SELECT name FROM table_name_79 WHERE city = \"shenzhen\" AND completion < 2017 AND floors < 115",
        "context": "CREATE TABLE table_name_79 (name VARCHAR, floors VARCHAR, city VARCHAR, completion VARCHAR)",
        "question": "What building is in Shenzhen, have less than 115 floors, and was completed before 2017?"
    },
    {
        "answer": "SELECT AVG(code) FROM table_name_35 WHERE regional_county_municipality = \"matawinie\" AND type = \"p\" AND name = \"saint-damien\"",
        "context": "CREATE TABLE table_name_35 (code INTEGER, name VARCHAR, regional_county_municipality VARCHAR, type VARCHAR)",
        "question": "What is the code for Saint-Damien in Matawinie with a type p?"
    },
    {
        "answer": "SELECT purpose FROM table_name_37 WHERE elevation_ + _height = \"0 + metres (ft)\" AND location = \"bikini, namu (charlie)\" AND yield = \"220 kt\"",
        "context": "CREATE TABLE table_name_37 (purpose VARCHAR, yield VARCHAR, location VARCHAR, elevation_ VARCHAR, _height VARCHAR)",
        "question": "Which Purpose has an Elevation + Height of 0 + metres (ft), a Location of bikini, namu (charlie), and a Yield of 220 kt?"
    },
    {
        "answer": "SELECT colour_commentator_s_ FROM table_name_1 WHERE play_by_play = \"bob cole\"",
        "context": "CREATE TABLE table_name_1 (colour_commentator_s_ VARCHAR, play_by_play VARCHAR)",
        "question": "Who was the colour commmentator that broadcasted along with the Play-by-play of bob cole?"
    },
    {
        "answer": "SELECT score FROM table_name_17 WHERE game > 7 AND points < 14",
        "context": "CREATE TABLE table_name_17 (score VARCHAR, game VARCHAR, points VARCHAR)",
        "question": "Which Score has a Game larger than 7, and Points smaller than 14?"
    },
    {
        "answer": "SELECT AVG(events) FROM table_name_50 WHERE rank = 1 AND wins > 3",
        "context": "CREATE TABLE table_name_50 (events INTEGER, rank VARCHAR, wins VARCHAR)",
        "question": "What is the mean number of events where the rank is 1 and there are more than 3 wins?"
    },
    {
        "answer": "SELECT recopa_1994 FROM table_name_54 WHERE supercopa_1994 = \"1st round\" AND team = \"argentinos juniors\"",
        "context": "CREATE TABLE table_name_54 (recopa_1994 VARCHAR, supercopa_1994 VARCHAR, team VARCHAR)",
        "question": "Which Recopa 1994 has a Supercopa 1994 of 1st round, and a Team of argentinos juniors?"
    },
    {
        "answer": "SELECT state FROM table_name_50 WHERE born > 1955 AND name = \"maria cantwell\"",
        "context": "CREATE TABLE table_name_50 (state VARCHAR, born VARCHAR, name VARCHAR)",
        "question": "What state was maria cantwell born in after 1955?"
    },
    {
        "answer": "SELECT name FROM table_name_8 WHERE term_expires = \"december 31, 2020\" AND appointing_governor = \"terry branstad\"",
        "context": "CREATE TABLE table_name_8 (name VARCHAR, term_expires VARCHAR, appointing_governor VARCHAR)",
        "question": "Which person has an expiring term of December 31, 2020, and has Terry Branstad as the appointing governor?"
    },
    {
        "answer": "SELECT MAX(total) FROM table_name_15 WHERE tournament > 0 AND regular_season > 8",
        "context": "CREATE TABLE table_name_15 (total INTEGER, tournament VARCHAR, regular_season VARCHAR)",
        "question": "Name the highest total for the tournament more than 0 and regular season after 8"
    },
    {
        "answer": "SELECT circuit FROM table_name_16 WHERE fastest_lap = \"juan manuel fangio\" AND race = \"german grand prix\"",
        "context": "CREATE TABLE table_name_16 (circuit VARCHAR, fastest_lap VARCHAR, race VARCHAR)",
        "question": "What circuit did Juan Manuel Fangio have the fastest lap at the german grand prix?"
    },
    {
        "answer": "SELECT second FROM table_name_18 WHERE third = \"mikkel krause\"",
        "context": "CREATE TABLE table_name_18 (second VARCHAR, third VARCHAR)",
        "question": "Who is the second when Mikkel Krause is the third?"
    },
    {
        "answer": "SELECT skip FROM table_name_83 WHERE third = \"alasdair guthrie\"",
        "context": "CREATE TABLE table_name_83 (skip VARCHAR, third VARCHAR)",
        "question": "Who is the Skip when Alasdair Guthrie is the third?"
    },
    {
        "answer": "SELECT clive_churchill_medal FROM table_name_27 WHERE losingteam = \"sydney roosters\" AND season = 2010",
        "context": "CREATE TABLE table_name_27 (clive_churchill_medal VARCHAR, losingteam VARCHAR, season VARCHAR)",
        "question": "Who wins the clive churchill medal when the losing team is the sydney roosters in 2010?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_50 WHERE home = \"detroit\" AND decision = \"hasek\"",
        "context": "CREATE TABLE table_name_50 (attendance VARCHAR, home VARCHAR, decision VARCHAR)",
        "question": "What is the total attendance for Detroit on hasek?"
    },
    {
        "answer": "SELECT score FROM table_name_49 WHERE year < 2008 AND result = \"loss\" AND location = \"antalya\" AND competition = \"europe/africa zone, group i, round robin\"",
        "context": "CREATE TABLE table_name_49 (score VARCHAR, competition VARCHAR, location VARCHAR, year VARCHAR, result VARCHAR)",
        "question": "What is the score of a year less than 2008 with loss as the result, in Antalya and a Competition of europe/africa zone, group i, round robin?"
    },
    {
        "answer": "SELECT date FROM table_name_19 WHERE competition = \"europe/africa zone, group i, round robin\" AND result = \"loss\" AND location = \"antalya\" AND score = \"1\u20132\"",
        "context": "CREATE TABLE table_name_19 (date VARCHAR, score VARCHAR, location VARCHAR, competition VARCHAR, result VARCHAR)",
        "question": "What date was the Competition of europe/africa zone, group i, round robin, with a result of loss, in Antalya, and a Score of 1\u20132?"
    },
    {
        "answer": "SELECT venue FROM table_name_69 WHERE away_team = \"essendon\"",
        "context": "CREATE TABLE table_name_69 (venue VARCHAR, away_team VARCHAR)",
        "question": "Where did Essendon play as the away team?"
    },
    {
        "answer": "SELECT date FROM table_name_50 WHERE visitor = \"montreal\"",
        "context": "CREATE TABLE table_name_50 (date VARCHAR, visitor VARCHAR)",
        "question": "What date was Montreal the visitor?"
    },
    {
        "answer": "SELECT preliminaries FROM table_name_99 WHERE swimsuit < 8.948 AND interview = 8.997",
        "context": "CREATE TABLE table_name_99 (preliminaries VARCHAR, swimsuit VARCHAR, interview VARCHAR)",
        "question": "What is the preliminaries of the contestant with a swimsuit less than 8.948 and an interview of 8.997?"
    },
    {
        "answer": "SELECT COUNT(evening_gown) FROM table_name_79 WHERE preliminaries < 8.647 AND state = \"district of columbia\"",
        "context": "CREATE TABLE table_name_79 (evening_gown VARCHAR, preliminaries VARCHAR, state VARCHAR)",
        "question": "What is the evening gown score of the contestant from the District of Columbia with preliminaries smaller than 8.647?"
    },
    {
        "answer": "SELECT record FROM table_name_97 WHERE date = \"december 9\"",
        "context": "CREATE TABLE table_name_97 (record VARCHAR, date VARCHAR)",
        "question": "What is the Record with a Date with december 9?"
    },
    {
        "answer": "SELECT venue FROM table_name_62 WHERE race = \"carfax 250\"",
        "context": "CREATE TABLE table_name_62 (venue VARCHAR, race VARCHAR)",
        "question": "What is the venue of teh carfax 250 race?"
    },
    {
        "answer": "SELECT mac_os_x FROM table_name_98 WHERE haiku = \"no\" AND client = \"dc++\"",
        "context": "CREATE TABLE table_name_98 (mac_os_x VARCHAR, haiku VARCHAR, client VARCHAR)",
        "question": "Which Mac OSX had no haiku and a client that was dc++?"
    },
    {
        "answer": "SELECT copa_mercosur_1999 FROM table_name_51 WHERE copa_libertadores_1999 = \"did not qualify\" AND copa_conmebol_1999 = \"did not qualify\" AND team = \"gr\u00eamio\"",
        "context": "CREATE TABLE table_name_51 (copa_mercosur_1999 VARCHAR, team VARCHAR, copa_libertadores_1999 VARCHAR, copa_conmebol_1999 VARCHAR)",
        "question": "What is the copa mercosur 1999 result for team gr\u00eamio, who did not qualify for the Copa Libertadores 1999 and Copa Conmebol 1999?"
    },
    {
        "answer": "SELECT gnu_linux FROM table_name_60 WHERE haiku = \"no\" AND client = \"airdc++\"",
        "context": "CREATE TABLE table_name_60 (gnu_linux VARCHAR, haiku VARCHAR, client VARCHAR)",
        "question": "Which GNU/Linux had no haiku and a client of airdc++?"
    },
    {
        "answer": "SELECT MAX(earnings__) AS $__ FROM table_name_41 WHERE player = \"dave stockton\"",
        "context": "CREATE TABLE table_name_41 (earnings__ INTEGER, player VARCHAR)",
        "question": "How much has dave stockton earned?"
    },
    {
        "answer": "SELECT attendance FROM table_name_61 WHERE competition = \"league\" AND venue = \"away\" AND date = 22",
        "context": "CREATE TABLE table_name_61 (attendance VARCHAR, date VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "How many people attended the away league competition with a date of 22?"
    },
    {
        "answer": "SELECT SUM(game) FROM table_name_30 WHERE series = \"bruins lead 3\u20131\"",
        "context": "CREATE TABLE table_name_30 (game INTEGER, series VARCHAR)",
        "question": "Which Game has a Series of bruins lead 3\u20131?"
    },
    {
        "answer": "SELECT rank FROM table_name_1 WHERE first_quarter = \"industrial and commercial bank of china 277,236\"",
        "context": "CREATE TABLE table_name_1 (rank VARCHAR, first_quarter VARCHAR)",
        "question": "What is the Rank of industrial and commercial bank of china 277,236?"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_92 WHERE season < 2007 AND team = \"silverstone motorsport academy\"",
        "context": "CREATE TABLE table_name_92 (wins INTEGER, season VARCHAR, team VARCHAR)",
        "question": "What is the largest amount of wins that was before the 2007 season, as well as the Team being silverstone motorsport academy?"
    },
    {
        "answer": "SELECT MAX(season) FROM table_name_65 WHERE podiums = 0 AND races = 1 AND wins > 0",
        "context": "CREATE TABLE table_name_65 (season INTEGER, wins VARCHAR, podiums VARCHAR, races VARCHAR)",
        "question": "What is the newest Season in which had 0 Podiums, and having 1 total of Races, as well as total wins larger than 0?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_16 WHERE home_team = \"st kilda\"",
        "context": "CREATE TABLE table_name_16 (away_team VARCHAR, home_team VARCHAR)",
        "question": "If the Home team was st kilda, what was the score of the Away team they played?"
    },
    {
        "answer": "SELECT category FROM table_name_55 WHERE result = \"nominated\" AND nominee = \"william ivey long\"",
        "context": "CREATE TABLE table_name_55 (category VARCHAR, result VARCHAR, nominee VARCHAR)",
        "question": "Which category was william ivey long a nominee and nominated in?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_28 WHERE games < 5",
        "context": "CREATE TABLE table_name_28 (points VARCHAR, games INTEGER)",
        "question": "What is the total points with less than 5 games?"
    },
    {
        "answer": "SELECT model FROM table_name_51 WHERE chipset = \"intel q43\"",
        "context": "CREATE TABLE table_name_51 (model VARCHAR, chipset VARCHAR)",
        "question": "What model number had a chipset of intel q43?"
    },
    {
        "answer": "SELECT visitor FROM table_name_96 WHERE leading_scorer = \"rudy gay (18)\"",
        "context": "CREATE TABLE table_name_96 (visitor VARCHAR, leading_scorer VARCHAR)",
        "question": "What is the visitor team of the game with Rudy Gay (18) as the leading scorer?"
    },
    {
        "answer": "SELECT district FROM table_name_69 WHERE party = \"democratic\" AND incumbent = \"francis c. le blond\"",
        "context": "CREATE TABLE table_name_69 (district VARCHAR, party VARCHAR, incumbent VARCHAR)",
        "question": "What district is the democratic Francis C. Le Blond from?"
    },
    {
        "answer": "SELECT SUM(first_elected) FROM table_name_66 WHERE result = \"re-elected\" AND district = \"ohio 4\"",
        "context": "CREATE TABLE table_name_66 (first_elected INTEGER, result VARCHAR, district VARCHAR)",
        "question": "In the Ohio 4 district, that is the first elected date that has a result of re-elected?"
    },
    {
        "answer": "SELECT score FROM table_name_21 WHERE visitor = \"grizzlies\" AND date = \"30 december 2007\"",
        "context": "CREATE TABLE table_name_21 (score VARCHAR, visitor VARCHAR, date VARCHAR)",
        "question": "What is the score of the game with Grizzlies as the visitor team on 30 December 2007?"
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_57 WHERE t_score > 8 AND e_score < 8.4",
        "context": "CREATE TABLE table_name_57 (total INTEGER, t_score VARCHAR, e_score VARCHAR)",
        "question": "What is the total of the team with a T score greater than 8 and an E score less than 8.4?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_97 WHERE nation = \"poland\" AND e_score > 7.725",
        "context": "CREATE TABLE table_name_97 (total VARCHAR, nation VARCHAR, e_score VARCHAR)",
        "question": "What is the total of Poland, which has an E score greater than 7.725?"
    },
    {
        "answer": "SELECT date FROM table_name_56 WHERE competition = \"2012 afc challenge cup\" AND venue = \"dasarath rangasala stadium, kathmandu\"",
        "context": "CREATE TABLE table_name_56 (date VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "What date has a competition of 2012 afc challenge cup, and dasarath rangasala stadium, kathmandu as the venue?"
    },
    {
        "answer": "SELECT gender FROM table_name_16 WHERE decile > 1 AND name = \"south auckland seventh-day adventist school\"",
        "context": "CREATE TABLE table_name_16 (gender VARCHAR, decile VARCHAR, name VARCHAR)",
        "question": "Which gender had a decile of more than 1 and featured the South Auckland Seventh-Day Adventist School?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_20 WHERE school_club_team = \"virginia\"",
        "context": "CREATE TABLE table_name_20 (round INTEGER, school_club_team VARCHAR)",
        "question": "Which Round is the lowest one that has a School/Club Team of virginia?"
    },
    {
        "answer": "SELECT year FROM table_name_59 WHERE borough = \"harrogate\" AND rank < 6 AND definition = \"civil parish\"",
        "context": "CREATE TABLE table_name_59 (year VARCHAR, definition VARCHAR, borough VARCHAR, rank VARCHAR)",
        "question": "Which Year has a Borough of harrogate, and a Rank smaller than 6, and a Definition of civil parish?"
    },
    {
        "answer": "SELECT score FROM table_name_91 WHERE date = \"1978-12-16\"",
        "context": "CREATE TABLE table_name_91 (score VARCHAR, date VARCHAR)",
        "question": "Tell me the score on 1978-12-16"
    },
    {
        "answer": "SELECT score FROM table_name_49 WHERE save = \"||25,354||63\u201343\"",
        "context": "CREATE TABLE table_name_49 (score VARCHAR, save VARCHAR)",
        "question": "What was the score when a save of ||25,354||63\u201343 occurred?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_89 WHERE grid < 10 AND laps > 20 AND constructor = \"talbot-lago - talbot\"",
        "context": "CREATE TABLE table_name_89 (time_retired VARCHAR, constructor VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "What is the Time/Retired for a Grid smaller than 10, a Laps larger than 20, and a Constructor of talbot-lago - talbot?"
    },
    {
        "answer": "SELECT date FROM table_name_41 WHERE tournament = \"konica san jose classic\"",
        "context": "CREATE TABLE table_name_41 (date VARCHAR, tournament VARCHAR)",
        "question": "When is the tournament of konica san jose classic?"
    },
    {
        "answer": "SELECT tournament FROM table_name_49 WHERE margin_of_victory = \"playoff\"",
        "context": "CREATE TABLE table_name_49 (tournament VARCHAR, margin_of_victory VARCHAR)",
        "question": "Which tournament had a playoff with a margin of victory?"
    },
    {
        "answer": "SELECT dance FROM table_name_52 WHERE worst_dancer_s_ = \"marissa jaret winokur\"",
        "context": "CREATE TABLE table_name_52 (dance VARCHAR, worst_dancer_s_ VARCHAR)",
        "question": "Which dance has the worst dancer(s) as marissa jaret winokur?"
    },
    {
        "answer": "SELECT MAX(crowd) FROM table_name_48 WHERE venue = \"western oval\"",
        "context": "CREATE TABLE table_name_48 (crowd INTEGER, venue VARCHAR)",
        "question": "What was the highest crowd size at the Western Oval?"
    },
    {
        "answer": "SELECT date FROM table_name_23 WHERE game > 5",
        "context": "CREATE TABLE table_name_23 (date VARCHAR, game INTEGER)",
        "question": "On what date was the game more than 5?"
    },
    {
        "answer": "SELECT SUM(highest_average_point_ratings) FROM table_name_29 WHERE genre = \"modern suspense\" AND number_of_episodes = 21",
        "context": "CREATE TABLE table_name_29 (highest_average_point_ratings INTEGER, genre VARCHAR, number_of_episodes VARCHAR)",
        "question": "What was the highest average point rating for a modern suspense show with 21 episodes?"
    },
    {
        "answer": "SELECT venue FROM table_name_85 WHERE scored > 1",
        "context": "CREATE TABLE table_name_85 (venue VARCHAR, scored INTEGER)",
        "question": "Where was the game with a higher score than 1 played?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_18 WHERE bronze > 0 AND nation = \"switzerland\" AND gold < 1",
        "context": "CREATE TABLE table_name_18 (total INTEGER, gold VARCHAR, bronze VARCHAR, nation VARCHAR)",
        "question": "What is the lowest metal total when the Bronze metals are larger than 0, the Gold medals are smaller than 1, and the nation is Switzerland?"
    },
    {
        "answer": "SELECT MAX(bronze) FROM table_name_71 WHERE gold > 1 AND silver < 0",
        "context": "CREATE TABLE table_name_71 (bronze INTEGER, gold VARCHAR, silver VARCHAR)",
        "question": "What is the highest Bronze medal count when the Gold medals are larger than 1 and the silver are smaller than 0?"
    },
    {
        "answer": "SELECT MIN(drawn) FROM table_name_5 WHERE nationality = \"england\" AND matches < 510 AND lost = 4 AND win__percentage < 28.6",
        "context": "CREATE TABLE table_name_5 (drawn INTEGER, win__percentage VARCHAR, lost VARCHAR, nationality VARCHAR, matches VARCHAR)",
        "question": "Nationality of england, and a Matches smaller than 510, and a Lost of 4, and a Win % smaller than 28.6 had what lowest drawn?"
    },
    {
        "answer": "SELECT 2 AS nd_leg FROM table_name_49 WHERE team__number1 = \"kk bosna\"",
        "context": "CREATE TABLE table_name_49 (team__number1 VARCHAR)",
        "question": "What is the second leg that has kk bosna?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_96 WHERE team = \"yamaha\" AND wins = 0 AND rank = \"8th\" AND points > 22",
        "context": "CREATE TABLE table_name_96 (year VARCHAR, points VARCHAR, rank VARCHAR, team VARCHAR, wins VARCHAR)",
        "question": "What year did team Yamaha have 0 wins, a rank of 8th, and more than 22 points?"
    },
    {
        "answer": "SELECT points_difference FROM table_name_51 WHERE lost = 2 AND points < 10",
        "context": "CREATE TABLE table_name_51 (points_difference VARCHAR, lost VARCHAR, points VARCHAR)",
        "question": "What is the difference related to 2 losses and fewer than 10 points?"
    },
    {
        "answer": "SELECT race FROM table_name_36 WHERE circuit = \"las vegas motor speedway\" AND length = \"2 hours\"",
        "context": "CREATE TABLE table_name_36 (race VARCHAR, circuit VARCHAR, length VARCHAR)",
        "question": "Which race was on the Las Vegas Motor Speedway for 2 hours?"
    },
    {
        "answer": "SELECT date FROM table_name_98 WHERE class = \"gts\" AND circuit = \"mosport international raceway\"",
        "context": "CREATE TABLE table_name_98 (date VARCHAR, class VARCHAR, circuit VARCHAR)",
        "question": "Which date was a GTS class on the Mosport International Raceway?"
    },
    {
        "answer": "SELECT MIN(1992) FROM table_name_12 WHERE 1977 < 385577 AND 2011 > 340310 AND 2002 > 300123 AND 1948 > 280524",
        "context": "CREATE TABLE table_name_12 (Id VARCHAR)",
        "question": "Which 1992 is the lowest one that has a 1977 smaller than 385577, and a 2011 larger than 340310, and a 2002 larger than 300123, and a 1948 larger than 280524?"
    },
    {
        "answer": "SELECT game_site FROM table_name_23 WHERE attendance = \"54,040\"",
        "context": "CREATE TABLE table_name_23 (game_site VARCHAR, attendance VARCHAR)",
        "question": "What is the site of the game that had an attendance of 54,040?"
    },
    {
        "answer": "SELECT film_name FROM table_name_50 WHERE year > 1972 AND language = \"hindi\" AND lyricist = \"ravindra jain\" AND music_director = \"ravindra jain\"",
        "context": "CREATE TABLE table_name_50 (film_name VARCHAR, music_director VARCHAR, lyricist VARCHAR, year VARCHAR, language VARCHAR)",
        "question": "What 1972 Hindi film had Ravindra Jain directing the music?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_name_63 WHERE partner = \"katarina srebotnik\" AND championship = \"wimbledon (4)\"",
        "context": "CREATE TABLE table_name_63 (opponents_in_the_final VARCHAR, partner VARCHAR, championship VARCHAR)",
        "question": "Which opponent in the final had a partner of Katarina Srebotnik and a championship of wimbledon (4)?"
    },
    {
        "answer": "SELECT partner FROM table_name_30 WHERE surface = \"hard\" AND championship = \"us open\"",
        "context": "CREATE TABLE table_name_30 (partner VARCHAR, surface VARCHAR, championship VARCHAR)",
        "question": "Who was the partner when the championship was us open on a hard surface?"
    },
    {
        "answer": "SELECT visitor FROM table_name_49 WHERE home = \"anaheim\" AND date = \"april 12\"",
        "context": "CREATE TABLE table_name_49 (visitor VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "Who was the Visitor when the Home team was Anaheim on the Date of April 12?"
    },
    {
        "answer": "SELECT venue FROM table_name_57 WHERE away_team = \"fitzroy\"",
        "context": "CREATE TABLE table_name_57 (venue VARCHAR, away_team VARCHAR)",
        "question": "Which venue does Fitzroy play as an away team?"
    },
    {
        "answer": "SELECT SUM(overall) FROM table_name_76 WHERE college = \"florida state\" AND round > 2",
        "context": "CREATE TABLE table_name_76 (overall INTEGER, college VARCHAR, round VARCHAR)",
        "question": "Which Overall has a College of florida state, and a Round larger than 2?"
    },
    {
        "answer": "SELECT player FROM table_name_79 WHERE nationality = \"united states\" AND overall = \"61 (from boston)\"",
        "context": "CREATE TABLE table_name_79 (player VARCHAR, nationality VARCHAR, overall VARCHAR)",
        "question": "Which Player has a Nationality of united states, and an Overall of 61 (from boston)?"
    },
    {
        "answer": "SELECT position FROM table_name_62 WHERE round = \"t\" AND team = \"minneapolis lakers\"",
        "context": "CREATE TABLE table_name_62 (position VARCHAR, round VARCHAR, team VARCHAR)",
        "question": "What was the position of the team Minneapolis Lakers during round T?"
    },
    {
        "answer": "SELECT theatre, _studio, _or_network FROM table_name_8 WHERE role = \"peter p. peters\"",
        "context": "CREATE TABLE table_name_8 (theatre VARCHAR, _studio VARCHAR, _or_network VARCHAR, role VARCHAR)",
        "question": "What was the theatre where Peter P. Peters is the role?"
    },
    {
        "answer": "SELECT constructor FROM table_name_84 WHERE q1_pos < 8 AND q1_time = \"1:15.038\"",
        "context": "CREATE TABLE table_name_84 (constructor VARCHAR, q1_pos VARCHAR, q1_time VARCHAR)",
        "question": "Who was the constructor of the car that had a Q1 pos of less than 8 and a Q1 time of 1:15.038?"
    },
    {
        "answer": "SELECT epicenter FROM table_name_10 WHERE intensity = \"unknown\" AND date = \"march 2, 1825\"",
        "context": "CREATE TABLE table_name_10 (epicenter VARCHAR, intensity VARCHAR, date VARCHAR)",
        "question": "What is the epicenter of the earthquake on March 2, 1825 with an unknown intensity?"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_6 WHERE 2012 = 219 OFFSET 721",
        "context": "CREATE TABLE table_name_6 (rank INTEGER)",
        "question": "What is the average rank of a nation that had 219,721 in 2012?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_77 WHERE result = \"1-0\" AND venue = \"a\" AND opponent = \"newcastle united\"",
        "context": "CREATE TABLE table_name_77 (attendance INTEGER, opponent VARCHAR, result VARCHAR, venue VARCHAR)",
        "question": "Which Attendance has a Result of 1-0, and a Venue of A, and an Opponent of newcastle united?"
    },
    {
        "answer": "SELECT SUM(byes) FROM table_name_24 WHERE wins < 16 AND losses = 8 AND mininera_dfl = \"penshurst\" AND against < 1405",
        "context": "CREATE TABLE table_name_24 (byes INTEGER, against VARCHAR, mininera_dfl VARCHAR, wins VARCHAR, losses VARCHAR)",
        "question": "WHAT ARE THE BYES WITH A WIN SMALLER THAN 16, 8 LOSSES, AND AT PENSHURST, WITH AGAINST SMALLER THAN 1405?"
    },
    {
        "answer": "SELECT AVG(byes) FROM table_name_76 WHERE draws = 1 AND mininera_dfl = \"smw rovers\" AND wins > 6",
        "context": "CREATE TABLE table_name_76 (byes INTEGER, wins VARCHAR, draws VARCHAR, mininera_dfl VARCHAR)",
        "question": "WHAT ARE THE BYES WITH A DRAWS OF 1, SMW ROVERS, AND WINS LARGER THAN 6?"
    },
    {
        "answer": "SELECT SUM(killeen_rate) FROM table_name_8 WHERE reported_offenses > 216 AND us_rate < 3274 AND texas_rate < 2688.9 AND crime = \"violent crime\"",
        "context": "CREATE TABLE table_name_8 (killeen_rate INTEGER, crime VARCHAR, texas_rate VARCHAR, reported_offenses VARCHAR, us_rate VARCHAR)",
        "question": "Reported Offenses larger than 216, and a U.S. Rate smaller than 3274, and a Texas Rate smaller than 2688.9, and a Crime of violent crime has what killeen rate?"
    },
    {
        "answer": "SELECT year_born__age_ FROM table_name_93 WHERE height > 2.04 AND current_club = \"los angeles clippers\"",
        "context": "CREATE TABLE table_name_93 (year_born__age_ VARCHAR, height VARCHAR, current_club VARCHAR)",
        "question": "What is the Year born (Age) for the player who is taller than 2.04 and currently plays for the Los Angeles Clippers?"
    },
    {
        "answer": "SELECT attribute FROM table_name_81 WHERE category = \"mutation\" AND type = \"domcharacterdatamodified\"",
        "context": "CREATE TABLE table_name_81 (attribute VARCHAR, category VARCHAR, type VARCHAR)",
        "question": "Name the attribute for mutation and domcharacterdatamodified"
    },
    {
        "answer": "SELECT tournament FROM table_name_54 WHERE surface = \"clay\" AND opponent = \"sofia shapatava\"",
        "context": "CREATE TABLE table_name_54 (tournament VARCHAR, surface VARCHAR, opponent VARCHAR)",
        "question": "What is the tournament with a clay surface and sofia shapatava as the opponent?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_30 WHERE score = \"l 92\u2013116\"",
        "context": "CREATE TABLE table_name_30 (location_attendance VARCHAR, score VARCHAR)",
        "question": "What location attendance had a score of l 92\u2013116?"
    },
    {
        "answer": "SELECT MAX(wins__total_) FROM table_name_68 WHERE wins__indoor_ = 0 AND wins__outdoor_ = 1 AND rank < 7",
        "context": "CREATE TABLE table_name_68 (wins__total_ INTEGER, rank VARCHAR, wins__indoor_ VARCHAR, wins__outdoor_ VARCHAR)",
        "question": "Name the most wins total with wins indoor of 0 and wins outdoor of 1 with rank less than 7"
    },
    {
        "answer": "SELECT series_4 FROM table_name_70 WHERE series_1 = \"sarah newman\"",
        "context": "CREATE TABLE table_name_70 (series_4 VARCHAR, series_1 VARCHAR)",
        "question": "What is the series 4 with sarah newman in series 1?"
    },
    {
        "answer": "SELECT MAX(losses) FROM table_name_85 WHERE goals_against > 31 AND goals_for = 38 AND club = \"cf calvo sotelo\" AND played < 30",
        "context": "CREATE TABLE table_name_85 (losses INTEGER, played VARCHAR, club VARCHAR, goals_against VARCHAR, goals_for VARCHAR)",
        "question": "What is the highest number of losses of club cf calvo sotelo, which has more than 31 goals against, 38 goals for, and less than 30 played?"
    },
    {
        "answer": "SELECT COUNT(population) FROM table_name_5 WHERE former_local_authority = \"cockermouth rural district\" AND name = \"plumbland\"",
        "context": "CREATE TABLE table_name_5 (population VARCHAR, former_local_authority VARCHAR, name VARCHAR)",
        "question": "What is the population of the Parish, Plumbland, that had a former local authority of Cockermouth Rural District?"
    },
    {
        "answer": "SELECT pick FROM table_name_37 WHERE round = \"6\" AND nationality = \"canada\" AND draft > 1983 AND player = \"ed ward category:articles with hcards\"",
        "context": "CREATE TABLE table_name_37 (pick VARCHAR, player VARCHAR, draft VARCHAR, round VARCHAR, nationality VARCHAR)",
        "question": "What is Pick, when Round is \"6\", when Nationality is \"Canada\", when Draft is greater than 1983, and when Player is \"Ed Ward Category:Articles with hCards\"?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_44 WHERE entrant = \"lola motorsport\" AND points > 0",
        "context": "CREATE TABLE table_name_44 (year INTEGER, entrant VARCHAR, points VARCHAR)",
        "question": "What year featured lola motorsport as an entrant with over 0 points?"
    },
    {
        "answer": "SELECT name FROM table_name_89 WHERE year_built = 1857",
        "context": "CREATE TABLE table_name_89 (name VARCHAR, year_built VARCHAR)",
        "question": "What was built in 1857?"
    },
    {
        "answer": "SELECT 2011 FROM table_name_16 WHERE tournament = \"french open\"",
        "context": "CREATE TABLE table_name_16 (tournament VARCHAR)",
        "question": "What was the result in 2011 for the French Open tournament?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_1 WHERE runner_s__up = \"steve stricker\"",
        "context": "CREATE TABLE table_name_1 (winning_score VARCHAR, runner_s__up VARCHAR)",
        "question": "What was the winning score when Steve Stricker was runner-up?"
    },
    {
        "answer": "SELECT margin_of_victory FROM table_name_2 WHERE winning_score = \u221214(63 - 67 - 73 - 67 = 270)",
        "context": "CREATE TABLE table_name_2 (margin_of_victory VARCHAR, winning_score VARCHAR)",
        "question": "What was the margin of victory when the winning score was \u221214 (63-67-73-67=270)?"
    },
    {
        "answer": "SELECT pick FROM table_name_78 WHERE nationality = \"united states\" AND college_high_school_club = \"north carolina\" AND position = \"sf\"",
        "context": "CREATE TABLE table_name_78 (pick VARCHAR, position VARCHAR, nationality VARCHAR, college_high_school_club VARCHAR)",
        "question": "What was the pick number for the person from the United States who as drafted to the SF position from North Carolina?"
    },
    {
        "answer": "SELECT record FROM table_name_90 WHERE nfl_recap = \"recap\" AND opponent = \"new england patriots\"",
        "context": "CREATE TABLE table_name_90 (record VARCHAR, nfl_recap VARCHAR, opponent VARCHAR)",
        "question": "What is the record for the game against the New England Patriots with a recap?"
    },
    {
        "answer": "SELECT original_title FROM table_name_67 WHERE film_title_used_in_nomination = \"gypsy magic\"",
        "context": "CREATE TABLE table_name_67 (original_title VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What is the original title of the Gypsy Magic film title used in nomination?"
    },
    {
        "answer": "SELECT location FROM table_name_11 WHERE event = \"conquista fight 1\"",
        "context": "CREATE TABLE table_name_11 (location VARCHAR, event VARCHAR)",
        "question": "What is the location of the Conquista Fight 1?"
    },
    {
        "answer": "SELECT SUM(long) FROM table_name_19 WHERE loss > 24 AND gain > 273 AND avg_g = 207.8",
        "context": "CREATE TABLE table_name_19 (long INTEGER, avg_g VARCHAR, loss VARCHAR, gain VARCHAR)",
        "question": "What's the total long for more than 24 loss, a gain over 273, and an avg/g of 207.8?"
    },
    {
        "answer": "SELECT MIN(pocona_municipality___percentage_) FROM table_name_61 WHERE puerto_villarroel_municipality___percentage_ < 14.6 AND chimor\u00e9_municipality___percentage_ = 5.1 AND entre_r\u00edos_municipality___percentage_ < 0.9",
        "context": "CREATE TABLE table_name_61 (pocona_municipality___percentage_ INTEGER, entre_r\u00edos_municipality___percentage_ VARCHAR, puerto_villarroel_municipality___percentage_ VARCHAR, chimor\u00e9_municipality___percentage_ VARCHAR)",
        "question": "Which Pocona Municipality (%) is the lowest one that has a Puerto Villarroel Municipality (%) smaller than 14.6, and a Chimor\u00e9 Municipality (%) of 5.1, and an Entre R\u00edos Municipality (%) smaller than 0.9?"
    },
    {
        "answer": "SELECT MIN(puerto_villarroel_municipality___percentage_) FROM table_name_94 WHERE ethnic_group = \"not indigenous\" AND totora_municipality___percentage_ < 4.4",
        "context": "CREATE TABLE table_name_94 (puerto_villarroel_municipality___percentage_ INTEGER, ethnic_group VARCHAR, totora_municipality___percentage_ VARCHAR)",
        "question": "Which Puerto Villarroel Municipality (%) is the lowest one that has an Ethnic group of not indigenous, and a Totora Municipality (%) smaller than 4.4?"
    },
    {
        "answer": "SELECT SUM(pocona_municipality___percentage_) FROM table_name_6 WHERE puerto_villarroel_municipality___percentage_ > 14.6 AND pojo_municipality___percentage_ < 88.5",
        "context": "CREATE TABLE table_name_6 (pocona_municipality___percentage_ INTEGER, puerto_villarroel_municipality___percentage_ VARCHAR, pojo_municipality___percentage_ VARCHAR)",
        "question": "Which Pocona Municipality (%) has a Puerto Villarroel Municipality (%) larger than 14.6, and a Pojo Municipality (%) smaller than 88.5?"
    },
    {
        "answer": "SELECT MAX(totora_municipality___percentage_) FROM table_name_72 WHERE chimor\u00e9_municipality___percentage_ = 5.1 AND pocona_municipality___percentage_ < 0.2",
        "context": "CREATE TABLE table_name_72 (totora_municipality___percentage_ INTEGER, chimor\u00e9_municipality___percentage_ VARCHAR, pocona_municipality___percentage_ VARCHAR)",
        "question": "Which Totora Municipality (%) is the highest one that has a Chimor\u00e9 Municipality (%) of 5.1, and a Pocona Municipality (%) smaller than 0.2?"
    },
    {
        "answer": "SELECT SUM(pos) FROM table_name_32 WHERE team = \"roush fenway racing\" AND car__number = 99",
        "context": "CREATE TABLE table_name_32 (pos INTEGER, team VARCHAR, car__number VARCHAR)",
        "question": "Which Pos has a Team of roush fenway racing, and a Car # of 99?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_32 WHERE nationality = \"aut\" AND name = \"thomas morgenstern\"",
        "context": "CREATE TABLE table_name_32 (points INTEGER, nationality VARCHAR, name VARCHAR)",
        "question": "Which Points is the highest one that has a Nationality of aut, and a Name of thomas morgenstern?"
    },
    {
        "answer": "SELECT SUM(capacity__mw_) FROM table_name_31 WHERE size__mw_ = \"0.85\" AND wind_farm = \"carrigh\" AND turbines > 3",
        "context": "CREATE TABLE table_name_31 (capacity__mw_ INTEGER, turbines VARCHAR, size__mw_ VARCHAR, wind_farm VARCHAR)",
        "question": "What is the sum of the capacities for Carrigh wind warm that has a size of 0.85 MW and more than 3 turbines?"
    },
    {
        "answer": "SELECT size__mw_ FROM table_name_87 WHERE turbines > 19 AND turbine_vendor = \"enercon\" AND county = \"wexford\"",
        "context": "CREATE TABLE table_name_87 (size__mw_ VARCHAR, county VARCHAR, turbines VARCHAR, turbine_vendor VARCHAR)",
        "question": "What is the size of the windfarm in wexford that has more than 19 turbines and a vendor of Enercon?"
    },
    {
        "answer": "SELECT turbine_vendor FROM table_name_85 WHERE turbines < 6 AND county = \"donegal\" AND size__mw_ = \"0.85\" AND wind_farm = \"meenadreen\"",
        "context": "CREATE TABLE table_name_85 (turbine_vendor VARCHAR, wind_farm VARCHAR, size__mw_ VARCHAR, turbines VARCHAR, county VARCHAR)",
        "question": "Who is the turbine vendor for Meenadreen in Donegal county with less than 6 turbines with a size of 0.85 MW?"
    },
    {
        "answer": "SELECT ship FROM table_name_18 WHERE nationality = \"norway\"",
        "context": "CREATE TABLE table_name_18 (ship VARCHAR, nationality VARCHAR)",
        "question": "What ship has a norway nationality?"
    },
    {
        "answer": "SELECT county FROM table_name_3 WHERE median_family_income = \"$79,331\"",
        "context": "CREATE TABLE table_name_3 (county VARCHAR, median_family_income VARCHAR)",
        "question": "What County has a Median Family Income of $79,331?"
    },
    {
        "answer": "SELECT AVG(number_of_households) FROM table_name_59 WHERE per_capita_income = \"$21,345\"",
        "context": "CREATE TABLE table_name_59 (number_of_households INTEGER, per_capita_income VARCHAR)",
        "question": "What is the Number of Households that have a Per Capita Income of $21,345?"
    },
    {
        "answer": "SELECT COUNT(gold) FROM table_name_80 WHERE nation = \"australia\"",
        "context": "CREATE TABLE table_name_80 (gold VARCHAR, nation VARCHAR)",
        "question": "How many total gold medals did Australia receive?"
    },
    {
        "answer": "SELECT MAX(population) FROM table_name_41 WHERE median_family_income = \"$53,946\"",
        "context": "CREATE TABLE table_name_41 (population INTEGER, median_family_income VARCHAR)",
        "question": "Which Population has a Median family income of $53,946?"
    },
    {
        "answer": "SELECT 1997 FROM table_name_57 WHERE 1991 = \"a\" AND tournament = \"australian open\"",
        "context": "CREATE TABLE table_name_57 (tournament VARCHAR)",
        "question": "Which 1997's accompanying 1991 was a when the tournament was the australian open?"
    },
    {
        "answer": "SELECT whitten FROM table_name_12 WHERE stuart = \"bass\" AND paul_mccartney = \"electric guitar\"",
        "context": "CREATE TABLE table_name_12 (whitten VARCHAR, stuart VARCHAR, paul_mccartney VARCHAR)",
        "question": "Which Whitten has a Stuart of bass, and a Paul McCartney of electric guitar?"
    },
    {
        "answer": "SELECT SUM(events) FROM table_name_66 WHERE cuts_made > 12 AND top_5 > 2 AND top_10 > 11",
        "context": "CREATE TABLE table_name_66 (events INTEGER, top_10 VARCHAR, cuts_made VARCHAR, top_5 VARCHAR)",
        "question": "How many total events have cuts made over 12, more than 2 top-5s, and more than 11 top-10s?"
    },
    {
        "answer": "SELECT year_s__won FROM table_name_30 WHERE country = \"new zealand\"",
        "context": "CREATE TABLE table_name_30 (year_s__won VARCHAR, country VARCHAR)",
        "question": "What years did New Zealand win?"
    },
    {
        "answer": "SELECT record FROM table_name_81 WHERE attendance = \"26,236\"",
        "context": "CREATE TABLE table_name_81 (record VARCHAR, attendance VARCHAR)",
        "question": "For the game with 26,236 attendance, what was the record?"
    },
    {
        "answer": "SELECT score FROM table_name_37 WHERE points = 22 AND opponent = \"capitals\"",
        "context": "CREATE TABLE table_name_37 (score VARCHAR, points VARCHAR, opponent VARCHAR)",
        "question": "What is the score of the game with 22 points and the capitals as the opponent?"
    },
    {
        "answer": "SELECT scores_by_each_individual_judge FROM table_name_76 WHERE total_score_week = \"51/60\" AND co_contestant__yaar_vs_pyaar_ = \"tina sachdev\"",
        "context": "CREATE TABLE table_name_76 (scores_by_each_individual_judge VARCHAR, total_score_week VARCHAR, co_contestant__yaar_vs_pyaar_ VARCHAR)",
        "question": "What Scores by each individual judge has a Total score/week of 51/60, and a Co-contestant (Yaar vs. Pyaar) of tina sachdev?"
    },
    {
        "answer": "SELECT date_performed FROM table_name_19 WHERE scores_by_each_individual_judge = 10 + 10 + 10 = 30 AND main_contestant = \"karanvir bohra\"",
        "context": "CREATE TABLE table_name_19 (date_performed VARCHAR, main_contestant VARCHAR, scores_by_each_individual_judge VARCHAR)",
        "question": "What Date performed has a Scores by each individual judge of 10 + 10 + 10 = 30, and a Main contestant of karanvir bohra?"
    },
    {
        "answer": "SELECT scores_by_each_individual_judge FROM table_name_67 WHERE status = \"current\" AND co_contestant__yaar_vs_pyaar_ = \"krushna abhishek\"",
        "context": "CREATE TABLE table_name_67 (scores_by_each_individual_judge VARCHAR, status VARCHAR, co_contestant__yaar_vs_pyaar_ VARCHAR)",
        "question": "What Scores by each individual judge has a Status of current, and a Co-contestant (Yaar vs. Pyaar) of krushna abhishek?"
    },
    {
        "answer": "SELECT COUNT(number_of_electorates__2009_) FROM table_name_56 WHERE district = \"jhajjar\" AND reserved_for___sc___st__none_ = \"sc\" AND constituency_number < 66",
        "context": "CREATE TABLE table_name_56 (number_of_electorates__2009_ VARCHAR, constituency_number VARCHAR, district VARCHAR, reserved_for___sc___st__none_ VARCHAR)",
        "question": "Which Number of electorates (2009) has a District of jhajjar, and a Reserved for (SC/ST/None) of sc, and a Constituency number smaller than 66?"
    },
    {
        "answer": "SELECT MIN(taijiquan) FROM table_name_90 WHERE taijijian = 9.7 AND total > 19.34",
        "context": "CREATE TABLE table_name_90 (taijiquan INTEGER, taijijian VARCHAR, total VARCHAR)",
        "question": "What is the lowest Taijiquan of the athlete who has a Taijijian of 9.7 and a total more than 19.34?"
    },
    {
        "answer": "SELECT score FROM table_name_57 WHERE home_team = \"burnley\"",
        "context": "CREATE TABLE table_name_57 (score VARCHAR, home_team VARCHAR)",
        "question": "What is the Score of the Burnley Home game?"
    },
    {
        "answer": "SELECT score FROM table_name_48 WHERE set_2 = \"15:21\"",
        "context": "CREATE TABLE table_name_48 (score VARCHAR, set_2 VARCHAR)",
        "question": "What is the score for Set 2 at 15:21?"
    },
    {
        "answer": "SELECT record FROM table_name_4 WHERE game = 7",
        "context": "CREATE TABLE table_name_4 (record VARCHAR, game VARCHAR)",
        "question": "What is the record of game 7?"
    },
    {
        "answer": "SELECT COUNT(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = \"sesame\"",
        "context": "CREATE TABLE product_characteristics (product_id VARCHAR); CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)",
        "question": "How many characteristics does the product named \"sesame\" have?"
    },
    {
        "answer": "SELECT score FROM table_name_58 WHERE opposition = \"leicestershire\" AND year > 1906",
        "context": "CREATE TABLE table_name_58 (score VARCHAR, opposition VARCHAR, year VARCHAR)",
        "question": "What score has Leicestershire as the opponent after 1906?"
    },
    {
        "answer": "SELECT SUM(earnings___) AS $__ FROM table_name_97 WHERE wins > 2 AND events < 25",
        "context": "CREATE TABLE table_name_97 (earnings___ INTEGER, wins VARCHAR, events VARCHAR)",
        "question": "What is the number of earning for more than 2 wins and less than 25 events?"
    },
    {
        "answer": "SELECT COUNT(jianshu) FROM table_name_76 WHERE total > 19.16 AND athlete = \"nguyen huy thanh ( vie )\" AND qiangshu > 9.66",
        "context": "CREATE TABLE table_name_76 (jianshu VARCHAR, qiangshu VARCHAR, total VARCHAR, athlete VARCHAR)",
        "question": "What is the number of Jianshu when the total is more than 19.16, for Nguyen Huy Thanh ( vie ), and Qiangshu is more than 9.66?"
    },
    {
        "answer": "SELECT place FROM table_name_22 WHERE country = \"australia\" AND player = \"ian baker-finch\"",
        "context": "CREATE TABLE table_name_22 (place VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "Can you tell me the Place that has the Country of australia, and the Player of ian baker-finch?"
    },
    {
        "answer": "SELECT results\u00b9 FROM table_name_65 WHERE type_of_game = \"euro '64 qualifying\"",
        "context": "CREATE TABLE table_name_65 (results\u00b9 VARCHAR, type_of_game VARCHAR)",
        "question": "What was the result of the Euro '64 qualifying game?"
    },
    {
        "answer": "SELECT role FROM table_name_91 WHERE year = \"2001\"",
        "context": "CREATE TABLE table_name_91 (role VARCHAR, year VARCHAR)",
        "question": "What was the role in 2001?"
    },
    {
        "answer": "SELECT AVG(goals_against) FROM table_name_45 WHERE wins = 13 AND goals_for > 42 AND losses > 9",
        "context": "CREATE TABLE table_name_45 (goals_against INTEGER, losses VARCHAR, wins VARCHAR, goals_for VARCHAR)",
        "question": "Which Goals against has Wins of 13, and Goals for larger than 42, and more than 9 Losses?"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_88 WHERE total = 64 AND silver > 16",
        "context": "CREATE TABLE table_name_88 (bronze VARCHAR, total VARCHAR, silver VARCHAR)",
        "question": "What is the number of Bronze medals of the Nation with 64 total and silver greater than 16?"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_79 WHERE gold > \"14\" AND rank = \"14\" AND silver > 25",
        "context": "CREATE TABLE table_name_79 (bronze VARCHAR, silver VARCHAR, gold VARCHAR, rank VARCHAR)",
        "question": "How many bronzes for the nation ranked 14th, with over 14 golds and over 25 silvers?"
    },
    {
        "answer": "SELECT role FROM table_name_78 WHERE closing_broadway_cast = \"adam grupper\"",
        "context": "CREATE TABLE table_name_78 (role VARCHAR, closing_broadway_cast VARCHAR)",
        "question": "Which role had a closing broadway cast of Adam Grupper?"
    },
    {
        "answer": "SELECT SUM(score) FROM table_name_9 WHERE to_par = \"\u20135\" AND player = \"peter jacobsen\"",
        "context": "CREATE TABLE table_name_9 (score INTEGER, to_par VARCHAR, player VARCHAR)",
        "question": "What is the score when the to par was \u20135, for Peter Jacobsen?"
    },
    {
        "answer": "SELECT SUM(run_4) FROM table_name_78 WHERE country = \"united states\" AND athlete = \"bree schaaf emily azevedo\" AND run_3 < 58.04",
        "context": "CREATE TABLE table_name_78 (run_4 INTEGER, run_3 VARCHAR, country VARCHAR, athlete VARCHAR)",
        "question": "Which Run 4 has a Country of united states, and an Athlete of bree schaaf emily azevedo, and a Run 3 smaller than 58.04?"
    },
    {
        "answer": "SELECT SUM(run_4) FROM table_name_32 WHERE run_1 = 57.37 AND run_3 < 57.45",
        "context": "CREATE TABLE table_name_32 (run_4 INTEGER, run_1 VARCHAR, run_3 VARCHAR)",
        "question": "Which Run 4 has a Run 1 of 57.37, and a Run 3 smaller than 57.45?"
    },
    {
        "answer": "SELECT SUM(first_exercise) FROM table_name_2 WHERE second_exercise = 18",
        "context": "CREATE TABLE table_name_2 (first_exercise INTEGER, second_exercise VARCHAR)",
        "question": "What is the total for the first exercise and has 18 as the second exercise?"
    },
    {
        "answer": "SELECT MIN(place) FROM table_name_10 WHERE draw = 6 AND goals_conceded = 18 AND goals_scored > 26",
        "context": "CREATE TABLE table_name_10 (place INTEGER, goals_scored VARCHAR, draw VARCHAR, goals_conceded VARCHAR)",
        "question": "What is the lowest place with more than 26 goals scored, 18 goals conceded, and a draw entry of 6?"
    },
    {
        "answer": "SELECT district FROM table_name_19 WHERE reserved_for___sc___st__none_ = \"none\" AND constituency_number = \"242\"",
        "context": "CREATE TABLE table_name_19 (district VARCHAR, reserved_for___sc___st__none_ VARCHAR, constituency_number VARCHAR)",
        "question": "Name the  District that has a Reserved for ( SC / ST /None) of none and a Constituency number of 242?"
    },
    {
        "answer": "SELECT MIN(number_of_electorates__2009_) FROM table_name_40 WHERE reserved_for___sc___st__none_ = \"none\" AND name = \"jahanabad\"",
        "context": "CREATE TABLE table_name_40 (number_of_electorates__2009_ INTEGER, reserved_for___sc___st__none_ VARCHAR, name VARCHAR)",
        "question": "Name the Number of electorates (2009 which has a Reserved for ( SC / ST /None) of none, and a Name of jahanabad?"
    },
    {
        "answer": "SELECT international_tourism_expenditure__2012_ FROM table_name_65 WHERE international_tourism_expenditure__2011_ = \"$33.3 billion\"",
        "context": "CREATE TABLE table_name_65 (international_tourism_expenditure__2012_ VARCHAR, international_tourism_expenditure__2011_ VARCHAR)",
        "question": "Which International tourism expenditure (2012) has an International tourism expenditure (2011) of $33.3 billion?"
    },
    {
        "answer": "SELECT score FROM table_name_25 WHERE date = \"11 september 2010\"",
        "context": "CREATE TABLE table_name_25 (score VARCHAR, date VARCHAR)",
        "question": "What Score has a Date of 11 september 2010?"
    },
    {
        "answer": "SELECT international_tourism_expenditure__2011_ FROM table_name_4 WHERE country = \"china\"",
        "context": "CREATE TABLE table_name_4 (international_tourism_expenditure__2011_ VARCHAR, country VARCHAR)",
        "question": "What is China's  International tourism expenditure (2011)?"
    },
    {
        "answer": "SELECT COUNT(games_played) FROM table_name_33 WHERE goals_scored < 40 AND loses = 9 AND goals_conceded = 39 AND draws > 2",
        "context": "CREATE TABLE table_name_33 (games_played VARCHAR, draws VARCHAR, goals_conceded VARCHAR, goals_scored VARCHAR, loses VARCHAR)",
        "question": "What is the total number of games played of the club with less than 40 goals scored, 9 losses, 39 goals conceded, and more than 2 draws?"
    },
    {
        "answer": "SELECT date FROM table_name_11 WHERE week < 3 AND opponent = \"houston oilers\"",
        "context": "CREATE TABLE table_name_11 (date VARCHAR, week VARCHAR, opponent VARCHAR)",
        "question": "What is the date for the game with an opponent of the Houston Oilers from before week 3?"
    },
    {
        "answer": "SELECT home_team FROM table_name_49 WHERE date = \"6 december 1986\" AND tie_no = \"4\"",
        "context": "CREATE TABLE table_name_49 (home_team VARCHAR, date VARCHAR, tie_no VARCHAR)",
        "question": "What is Home Team, when Date is \"6 December 1986\", and when Tie No is \"4\"?"
    },
    {
        "answer": "SELECT republican_ticket FROM table_name_63 WHERE workers_ticket = \"edward lindgren\"",
        "context": "CREATE TABLE table_name_63 (republican_ticket VARCHAR, workers_ticket VARCHAR)",
        "question": "What is the name on the Republican ticket when the Workers ticket is edward lindgren?"
    },
    {
        "answer": "SELECT socialist_ticket FROM table_name_74 WHERE law_preservation_ticket = \"(none)\" AND socialist_labor_ticket = \"belle j. rosen\"",
        "context": "CREATE TABLE table_name_74 (socialist_ticket VARCHAR, law_preservation_ticket VARCHAR, socialist_labor_ticket VARCHAR)",
        "question": "Who's the Socialist ticket with a Law Preservation ticket of (none), and a Socialist Labor ticket of belle j. rosen?"
    },
    {
        "answer": "SELECT district FROM table_name_3 WHERE weblink = \"http://www.annauniv.edu\" AND college_or_campus_name = \"anna university - tiruchirappalli campus\"",
        "context": "CREATE TABLE table_name_3 (district VARCHAR, weblink VARCHAR, college_or_campus_name VARCHAR)",
        "question": "In which district is anna university - tiruchirappalli campus, whose website is http://www.annauniv.edu, located?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_46 WHERE draft > 1980 AND player = \"shane doan category:articles with hcards\"",
        "context": "CREATE TABLE table_name_46 (round INTEGER, draft VARCHAR, player VARCHAR)",
        "question": "What is the highest Round, when Draft is greater than 1980, and when Player is \"Shane Doan Category:Articles with hCards\"?"
    },
    {
        "answer": "SELECT MIN(lost) FROM table_name_46 WHERE team = \"s\u00e3o paulo railway\" AND points > 21",
        "context": "CREATE TABLE table_name_46 (lost INTEGER, team VARCHAR, points VARCHAR)",
        "question": "What is the lowest Lost for s\u00e3o paulo railway, Points more than 21?"
    },
    {
        "answer": "SELECT MIN(draft) FROM table_name_7 WHERE nationality = \"canada\" AND player = \"shane doan category:articles with hcards\" AND round < 1",
        "context": "CREATE TABLE table_name_7 (draft INTEGER, round VARCHAR, nationality VARCHAR, player VARCHAR)",
        "question": "What is the lowest Draft, when Nationality is \"Canada\", when Player is \"Shane Doan Category:Articles with hCards\", and when Round is less than 1?"
    },
    {
        "answer": "SELECT MIN(draft) FROM table_name_74 WHERE player = \"dave christian category:articles with hcards\"",
        "context": "CREATE TABLE table_name_74 (draft INTEGER, player VARCHAR)",
        "question": "What is the lowest Draft, when Player is \"Dave Christian Category:Articles with hCards\"?"
    },
    {
        "answer": "SELECT SUM(fleet_size) FROM table_name_4 WHERE iata = \"pr\" AND commenced_operations < 1941",
        "context": "CREATE TABLE table_name_4 (fleet_size INTEGER, iata VARCHAR, commenced_operations VARCHAR)",
        "question": "What is the of Fleet size with a IATA of pr, and a Commenced operations smaller than 1941?"
    },
    {
        "answer": "SELECT lead_envoy FROM table_name_10 WHERE ry\u016bky\u016ban_king = \"sh\u014d kei\" AND mission_type = \"congratulation\" AND year = 1718",
        "context": "CREATE TABLE table_name_10 (lead_envoy VARCHAR, year VARCHAR, ry\u016bky\u016ban_king VARCHAR, mission_type VARCHAR)",
        "question": "Who was the lead envoy of the congratulation mission in 1718 with the Ry\u016bky\u016ban King sh\u014d kei?"
    },
    {
        "answer": "SELECT home FROM table_name_95 WHERE score = \"103-93\"",
        "context": "CREATE TABLE table_name_95 (home VARCHAR, score VARCHAR)",
        "question": "What is Home, when Score is 103-93?"
    },
    {
        "answer": "SELECT position FROM table_name_46 WHERE name = \"martina wood\"",
        "context": "CREATE TABLE table_name_46 (position VARCHAR, name VARCHAR)",
        "question": "What is Martina Wood's Position?"
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_93 WHERE bronze > 4",
        "context": "CREATE TABLE table_name_93 (total INTEGER, bronze INTEGER)",
        "question": "How many totals had more than 4 bronze?"
    },
    {
        "answer": "SELECT country FROM table_name_21 WHERE score = 71 - 69 - 70 - 69 = 279",
        "context": "CREATE TABLE table_name_21 (country VARCHAR, score VARCHAR)",
        "question": "What is the country of the player whose score is 71-69-70-69=279?"
    },
    {
        "answer": "SELECT SUM(no_result) FROM table_name_63 WHERE matches > 16 AND wins < 46",
        "context": "CREATE TABLE table_name_63 (no_result INTEGER, matches VARCHAR, wins VARCHAR)",
        "question": "How many total No Results occured when the team had less than 46 wins and more than 16 matches?"
    },
    {
        "answer": "SELECT second FROM table_name_2 WHERE fifth = \"western australia\" AND sixth = \"south australia\" AND fourth = \"tasmania\"",
        "context": "CREATE TABLE table_name_2 (second VARCHAR, fourth VARCHAR, fifth VARCHAR, sixth VARCHAR)",
        "question": "What team placed second during the season where Western Australia placed fifth, South Australia placed sixth, and Tasmania placed fourth?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_90 WHERE difference = \"2\" AND position < 4",
        "context": "CREATE TABLE table_name_90 (points VARCHAR, difference VARCHAR, position VARCHAR)",
        "question": "How many points occurred with a difference of 2 for position less than 4?"
    },
    {
        "answer": "SELECT team__number2 FROM table_name_89 WHERE team__number1 = \"hapoel tel aviv\"",
        "context": "CREATE TABLE table_name_89 (team__number2 VARCHAR, team__number1 VARCHAR)",
        "question": "Who played against Hapoel tel aviv when they were team #1?"
    },
    {
        "answer": "SELECT region FROM table_name_16 WHERE date = \"2005\" AND label = \"playground music scandinavia\"",
        "context": "CREATE TABLE table_name_16 (region VARCHAR, date VARCHAR, label VARCHAR)",
        "question": "What region has the date of 2005 and Playground Music Scandinavia as a label?"
    },
    {
        "answer": "SELECT date FROM table_name_8 WHERE opponent = \"bye\"",
        "context": "CREATE TABLE table_name_8 (date VARCHAR, opponent VARCHAR)",
        "question": "When did the Texans play BYE?"
    },
    {
        "answer": "SELECT venue FROM table_name_38 WHERE status = \"five nations\" AND against = 0",
        "context": "CREATE TABLE table_name_38 (venue VARCHAR, status VARCHAR, against VARCHAR)",
        "question": "What is the venue for the Status of Five Nations and 0 againts?"
    },
    {
        "answer": "SELECT MAX(ccbs) FROM table_name_13 WHERE payload_to_gto = \"\u2013\" AND upper_stage = \"sec\"",
        "context": "CREATE TABLE table_name_13 (ccbs INTEGER, payload_to_gto VARCHAR, upper_stage VARCHAR)",
        "question": "What is the greatest CCBs with a Payload to GTO of \u2013, and an Upper stage of sec?"
    },
    {
        "answer": "SELECT years_in_orlando FROM table_name_10 WHERE nationality = \"united states\" AND position = \"center\" AND player = \"jawann oldham\"",
        "context": "CREATE TABLE table_name_10 (years_in_orlando VARCHAR, player VARCHAR, nationality VARCHAR, position VARCHAR)",
        "question": "Which Years in Orlando has a Nationality of united states, a Position of center, and a Player of jawann oldham?"
    },
    {
        "answer": "SELECT simplified_chinese FROM table_name_43 WHERE standard_order > 4 AND transcription__based_on_pinyin_ = \"bei hui feng\"",
        "context": "CREATE TABLE table_name_43 (simplified_chinese VARCHAR, standard_order VARCHAR, transcription__based_on_pinyin_ VARCHAR)",
        "question": "What is the simplified Chinese with a standard order over 4, and the transcription of Bei Hui Feng?"
    },
    {
        "answer": "SELECT works_number FROM table_name_76 WHERE builder = \"avonside engine company\" AND type = \"4-6-0\" AND number < 12 AND date = \"december 1871\"",
        "context": "CREATE TABLE table_name_76 (works_number VARCHAR, date VARCHAR, number VARCHAR, builder VARCHAR, type VARCHAR)",
        "question": "Which Works number has a Builder of avonside engine company, and a Type of 4-6-0, and a Number smaller than 12, and a Date of december 1871?"
    },
    {
        "answer": "SELECT acquis_chapters_open_closed FROM table_name_44 WHERE membership_application = \"2009-04-28\"",
        "context": "CREATE TABLE table_name_44 (acquis_chapters_open_closed VARCHAR, membership_application VARCHAR)",
        "question": "What is the acquis chapter open/closed dates with a membership application in 2009-04-28?"
    },
    {
        "answer": "SELECT association_agreement FROM table_name_69 WHERE state = \"bosnia and herzegovina\"",
        "context": "CREATE TABLE table_name_69 (association_agreement VARCHAR, state VARCHAR)",
        "question": "What is the association agreement for bosnia and herzegovina?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_91 WHERE date = \"december 23\"",
        "context": "CREATE TABLE table_name_91 (attendance INTEGER, date VARCHAR)",
        "question": "What was the highest attendance on December 23?"
    },
    {
        "answer": "SELECT name FROM table_name_56 WHERE district = \"nagpur\" AND reserved_for___sc___st__none_ = \"none\" AND constituency_number = \"59\"",
        "context": "CREATE TABLE table_name_56 (name VARCHAR, constituency_number VARCHAR, district VARCHAR, reserved_for___sc___st__none_ VARCHAR)",
        "question": "What is the name for Nagpur district, with a reserved for ( SC / ST /None) of none, and a Constituency number of 59?"
    },
    {
        "answer": "SELECT nickname FROM table_name_42 WHERE colors = \"blue and gold\"",
        "context": "CREATE TABLE table_name_42 (nickname VARCHAR, colors VARCHAR)",
        "question": "What is the nickname of the team that has the colors blue and gold?"
    },
    {
        "answer": "SELECT channel FROM table_name_10 WHERE analogue_terrestrial_channel = \"n/a\" AND internet = \"itv.com\" AND position > 6 AND digital_terrestrial_channel = \"6 27 (+1)\"",
        "context": "CREATE TABLE table_name_10 (channel VARCHAR, digital_terrestrial_channel VARCHAR, position VARCHAR, analogue_terrestrial_channel VARCHAR, internet VARCHAR)",
        "question": "What is the channel when the analogue terrestrial channel shows n/a, and the internet is itv.com, with a position larger than 6, and digital terrestrial channel is 6 27 (+1)?"
    },
    {
        "answer": "SELECT notes FROM table_name_74 WHERE method = \"decision\"",
        "context": "CREATE TABLE table_name_74 (notes VARCHAR, method VARCHAR)",
        "question": "What are the Notes when the Method is decision?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_39 WHERE club = \"nev\u0117\u017eis-2 k\u0117dainiai\" AND goals_conceded > 35",
        "context": "CREATE TABLE table_name_39 (points INTEGER, club VARCHAR, goals_conceded VARCHAR)",
        "question": "What is the sum of the points of club nev\u0117\u017eis-2 k\u0117dainiai, which has more than 35 goals conceded?"
    },
    {
        "answer": "SELECT SUM(losses) FROM table_name_56 WHERE against > 1412 AND wins = 10 AND draws < 0",
        "context": "CREATE TABLE table_name_56 (losses INTEGER, draws VARCHAR, against VARCHAR, wins VARCHAR)",
        "question": "What is the total losses against 1412, and 10 wins, but draws less than 0?"
    },
    {
        "answer": "SELECT perpetrator FROM table_name_54 WHERE country = \"uganda\" AND location = \"kampala\" AND killed = \"12\"",
        "context": "CREATE TABLE table_name_54 (perpetrator VARCHAR, killed VARCHAR, country VARCHAR, location VARCHAR)",
        "question": "Who is the perpetrator in Uganda who killed 12 in Kampala?"
    },
    {
        "answer": "SELECT winner FROM table_name_37 WHERE country = \"scotland\"",
        "context": "CREATE TABLE table_name_37 (winner VARCHAR, country VARCHAR)",
        "question": "What is Scotland's winner?"
    },
    {
        "answer": "SELECT semi_final_second_television_commentator FROM table_name_51 WHERE final_television_commentator = \"graham norton\" AND spokesperson = \"scott mills\" AND year_s_ < 2013",
        "context": "CREATE TABLE table_name_51 (semi_final_second_television_commentator VARCHAR, year_s_ VARCHAR, final_television_commentator VARCHAR, spokesperson VARCHAR)",
        "question": "Who is the semi-final second television commentator with graham norton as the final television commentator and scott mills as the spokesperson before 2013?"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_48 WHERE losses < 11 AND mininera_dfl = \"caramut\" AND byes < 2",
        "context": "CREATE TABLE table_name_48 (wins INTEGER, byes VARCHAR, losses VARCHAR, mininera_dfl VARCHAR)",
        "question": "How many wins for the Caramut team with fewer than 11 losses and fewer than 2 byes?"
    },
    {
        "answer": "SELECT language FROM table_name_23 WHERE hdtv = \"no\" AND package_option = \"sky famiglia\" AND television_service = \"national geographic channel\"",
        "context": "CREATE TABLE table_name_23 (language VARCHAR, television_service VARCHAR, hdtv VARCHAR, package_option VARCHAR)",
        "question": "What language has NO, as the HDTV, sky famiglia as the package/option, and national geographic channel as the television service?"
    },
    {
        "answer": "SELECT latitude FROM table_name_94 WHERE diameter__km_ = \"13km\" AND longitude = \"72.9\u00b0 e\"",
        "context": "CREATE TABLE table_name_94 (latitude VARCHAR, diameter__km_ VARCHAR, longitude VARCHAR)",
        "question": "What is the Latitude when the Diameter (km) is 13km, and the Longitude is 72.9\u00b0 e?"
    },
    {
        "answer": "SELECT COUNT(against) FROM table_name_66 WHERE losses < 52 AND matches > 4 AND draw < 2",
        "context": "CREATE TABLE table_name_66 (against VARCHAR, draw VARCHAR, losses VARCHAR, matches VARCHAR)",
        "question": "What is the total number of Against, when Losses is less than 52, when Matches is greater than 4, and when Draw is less than 2?"
    },
    {
        "answer": "SELECT MIN(_number_of_episodes) FROM table_name_55 WHERE mole = \"craig slike\"",
        "context": "CREATE TABLE table_name_55 (_number_of_episodes INTEGER, mole VARCHAR)",
        "question": "Which # of Episodes has a Mole of craig slike?"
    },
    {
        "answer": "SELECT singapore_gross FROM table_name_72 WHERE producer = \"2000\"",
        "context": "CREATE TABLE table_name_72 (singapore_gross VARCHAR, producer VARCHAR)",
        "question": "What is the Singapore Gross with a Producer that is 2000?"
    },
    {
        "answer": "SELECT AVG(height) FROM table_name_82 WHERE weight < 93 AND spike < 336 AND block = 305",
        "context": "CREATE TABLE table_name_82 (height INTEGER, block VARCHAR, weight VARCHAR, spike VARCHAR)",
        "question": "What is Average Height, when Weight is less than 93, when Spike is less than 336, and when Block is 305?"
    },
    {
        "answer": "SELECT MAX(season) FROM table_name_77 WHERE mole = \"frederique van der wal\"",
        "context": "CREATE TABLE table_name_77 (season INTEGER, mole VARCHAR)",
        "question": "Which Season has a Mole of frederique van der wal?"
    },
    {
        "answer": "SELECT COUNT(block) FROM table_name_41 WHERE spike < 341 AND weight > 82 AND name = \"theodoros baev\"",
        "context": "CREATE TABLE table_name_41 (block VARCHAR, name VARCHAR, spike VARCHAR, weight VARCHAR)",
        "question": "What is the total number of Block(s), when Spike is less than 341, when Weight is greater than 82, and when Name is Theodoros Baev?"
    },
    {
        "answer": "SELECT name FROM table_name_98 WHERE spike > 343 AND date_of_birth = \"02.03.1973\"",
        "context": "CREATE TABLE table_name_98 (name VARCHAR, spike VARCHAR, date_of_birth VARCHAR)",
        "question": "What is Name, when Spike is greater than 343, and when Date of Birth is 02.03.1973?"
    },
    {
        "answer": "SELECT record FROM table_name_31 WHERE location = \"des moines, iowa , united states\" AND method = \"submission (arm-triangle choke)\"",
        "context": "CREATE TABLE table_name_31 (record VARCHAR, location VARCHAR, method VARCHAR)",
        "question": "What is Record, when Location is \"Des Moines, Iowa , United States\", and when Method is \"Submission (arm-triangle choke)\"?"
    },
    {
        "answer": "SELECT date FROM table_name_95 WHERE tournament = \"paco rabanne open de france\"",
        "context": "CREATE TABLE table_name_95 (date VARCHAR, tournament VARCHAR)",
        "question": "What was the date of the Paco Rabanne Open de France?"
    },
    {
        "answer": "SELECT home_team FROM table_name_51 WHERE away_team = \"armthorpe welfare\"",
        "context": "CREATE TABLE table_name_51 (home_team VARCHAR, away_team VARCHAR)",
        "question": "Who was the home team that played against Armthorpe Welfare?"
    },
    {
        "answer": "SELECT championship FROM table_name_23 WHERE year < 2012 AND opponents_in_final = \"stephane houdet michael jeremiasz\"",
        "context": "CREATE TABLE table_name_23 (championship VARCHAR, year VARCHAR, opponents_in_final VARCHAR)",
        "question": "What was the championship before 2012 that had Stephane Houdet Michael Jeremiasz as opponents?"
    },
    {
        "answer": "SELECT score_in_final FROM table_name_84 WHERE opponents_in_final = \"shingo kunieda satoshi saida\"",
        "context": "CREATE TABLE table_name_84 (score_in_final VARCHAR, opponents_in_final VARCHAR)",
        "question": "What was the score when the Shingo Kunieda Satoshi Saida were the opponents?"
    },
    {
        "answer": "SELECT date FROM table_name_33 WHERE away_captain = \"arthur jones\" AND venue = \"sydney cricket ground\"",
        "context": "CREATE TABLE table_name_33 (date VARCHAR, away_captain VARCHAR, venue VARCHAR)",
        "question": "On what date was Arthur Jones the away captain at Sydney Cricket Ground?"
    },
    {
        "answer": "SELECT to_par FROM table_name_52 WHERE money___\u00a3__ = \"40,850\" AND score = 72 - 74 - 70 - 70 = 286",
        "context": "CREATE TABLE table_name_52 (to_par VARCHAR, money___\u00a3__ VARCHAR, score VARCHAR)",
        "question": "What is the to par of the golfer with winnings of 40,850 and a score of 72-74-70-70=286?"
    },
    {
        "answer": "SELECT total FROM table_name_57 WHERE set_2 = \"25-19\" AND date = \"jun 17\"",
        "context": "CREATE TABLE table_name_57 (total VARCHAR, set_2 VARCHAR, date VARCHAR)",
        "question": "What is the total with a 25-19 set 2 on Jun 17?"
    },
    {
        "answer": "SELECT to_par FROM table_name_6 WHERE country = \"australia\" AND player = \"robert allenby\"",
        "context": "CREATE TABLE table_name_6 (to_par VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "What is the To par for Robert Allenby from Australia"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_26 WHERE home_team = \"welling united\"",
        "context": "CREATE TABLE table_name_26 (attendance INTEGER, home_team VARCHAR)",
        "question": "What is the lowest Attendance, when Home Team is \"Welling United\"?"
    },
    {
        "answer": "SELECT place FROM table_name_50 WHERE country = \"united states\" AND player = \"andy bean\"",
        "context": "CREATE TABLE table_name_50 (place VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "Which place is Andy Bean from the United States?"
    },
    {
        "answer": "SELECT league FROM table_name_99 WHERE open_cup = \"1st round\" AND year = 2009",
        "context": "CREATE TABLE table_name_99 (league VARCHAR, open_cup VARCHAR, year VARCHAR)",
        "question": "Which League that has a Open Cup of 1st round, and a Year of 2009?"
    },
    {
        "answer": "SELECT MAX(loses) FROM table_name_93 WHERE points_against < 956 AND club = \"high park demons\" AND points < 16",
        "context": "CREATE TABLE table_name_93 (loses INTEGER, points VARCHAR, points_against VARCHAR, club VARCHAR)",
        "question": "What are the highest losses that have points agaisnt less than 956, high park demons as the club, and points less than 16?"
    },
    {
        "answer": "SELECT COUNT(loses) FROM table_name_45 WHERE points_against > 592 AND club = \"high park demons\" AND points_for > 631",
        "context": "CREATE TABLE table_name_45 (loses VARCHAR, points_for VARCHAR, points_against VARCHAR, club VARCHAR)",
        "question": "How many losses have points against greater than 592, with high park demons as the club, and points for greater than 631?"
    },
    {
        "answer": "SELECT loses FROM table_name_84 WHERE points_for < 1175 AND wins > 2 AND points_against > 894 AND points = 24",
        "context": "CREATE TABLE table_name_84 (loses VARCHAR, points VARCHAR, points_against VARCHAR, points_for VARCHAR, wins VARCHAR)",
        "question": "What losses have points for less than 1175, wins greater than 2, points against greater than 894, and 24 as the points?"
    },
    {
        "answer": "SELECT wards__branches_in_arkansas FROM table_name_89 WHERE stake = \"fort smith arkansas\"",
        "context": "CREATE TABLE table_name_89 (wards__branches_in_arkansas VARCHAR, stake VARCHAR)",
        "question": "What is the wards/branches of the fort smith Arkansas stake?"
    },
    {
        "answer": "SELECT MIN(total_wins) FROM table_name_92 WHERE season < 1989 AND runners_up = \"tianjin\" AND number_of_clubs > 8",
        "context": "CREATE TABLE table_name_92 (total_wins INTEGER, number_of_clubs VARCHAR, season VARCHAR, runners_up VARCHAR)",
        "question": "What is the lowest total number of wins in a season before 1989 with tianjin as the runners-up and more than 8 clubs?"
    },
    {
        "answer": "SELECT interview_subject FROM table_name_89 WHERE pictorials = \"christie brinkley\"",
        "context": "CREATE TABLE table_name_89 (interview_subject VARCHAR, pictorials VARCHAR)",
        "question": "Who was the Interview Subject on the Date when there were Pictorials of Christie Brinkley?"
    },
    {
        "answer": "SELECT death_date FROM table_name_49 WHERE place_of_death_or_residence = \"united states\" AND age__as_of_1_february_2014_ = \"111 years, 61 days\"",
        "context": "CREATE TABLE table_name_49 (death_date VARCHAR, place_of_death_or_residence VARCHAR, age__as_of_1_february_2014_ VARCHAR)",
        "question": "Which Death date has a Place of death or residence of united states, and an Age (as of 1 February 2014) of 111 years, 61 days?"
    },
    {
        "answer": "SELECT MAX(goal_difference) FROM table_name_77 WHERE points = 28 AND club = \"cd cartagena\" AND losses > 15",
        "context": "CREATE TABLE table_name_77 (goal_difference INTEGER, losses VARCHAR, points VARCHAR, club VARCHAR)",
        "question": "Which Goal Difference has 28 Points, and a Club of cd cartagena, more than 15 losses?"
    },
    {
        "answer": "SELECT SUM(goal_difference) FROM table_name_22 WHERE losses < 9 AND draws = 8 AND points > 40",
        "context": "CREATE TABLE table_name_22 (goal_difference INTEGER, points VARCHAR, losses VARCHAR, draws VARCHAR)",
        "question": "How much Goal Difference has less than 9 Losses, and 8 Draws, and more than 40 points?"
    },
    {
        "answer": "SELECT longest_span_in_s_metre___feet__ FROM table_name_40 WHERE location = \"villeneuve-sur-lot\"",
        "context": "CREATE TABLE table_name_40 (longest_span_in_s_metre___feet__ VARCHAR, location VARCHAR)",
        "question": "How long is the bridge in Villeneuve-sur-Lot?"
    },
    {
        "answer": "SELECT nationality FROM table_name_57 WHERE player = \"keith bogans\" AND years_in_orlando = \"2006\u20132009\"",
        "context": "CREATE TABLE table_name_57 (nationality VARCHAR, player VARCHAR, years_in_orlando VARCHAR)",
        "question": "Which Nationality has a Player of keith bogans, and a Years in Orlando of 2006\u20132009?"
    },
    {
        "answer": "SELECT location FROM table_name_93 WHERE previous_champion_s_ = \"mike webb and nick fahrenheit\"",
        "context": "CREATE TABLE table_name_93 (location VARCHAR, previous_champion_s_ VARCHAR)",
        "question": "Which location had previous champions of Mike Webb and Nick Fahrenheit?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_95 WHERE drawn < 2 AND team = \"paulistano\" AND against < 15",
        "context": "CREATE TABLE table_name_95 (points VARCHAR, against VARCHAR, drawn VARCHAR, team VARCHAR)",
        "question": "What number of Points are shown for Team Paulistano where the Drawn is less than 2 and the Against is less than 15?"
    },
    {
        "answer": "SELECT score FROM table_name_32 WHERE to_par = \"\u20137\" AND player = \"justin leonard\"",
        "context": "CREATE TABLE table_name_32 (score VARCHAR, to_par VARCHAR, player VARCHAR)",
        "question": "What is Justin Leonard with a To par of \u20137's Score?"
    },
    {
        "answer": "SELECT progressive_ticket FROM table_name_63 WHERE republican_ticket = \"frank m. williams\"",
        "context": "CREATE TABLE table_name_63 (progressive_ticket VARCHAR, republican_ticket VARCHAR)",
        "question": "With the Republican ticket of Frank M. Williams who was the Progressive ticket?"
    },
    {
        "answer": "SELECT socialist_labor_ticket FROM table_name_78 WHERE office = \"secretary of state\"",
        "context": "CREATE TABLE table_name_78 (socialist_labor_ticket VARCHAR, office VARCHAR)",
        "question": "Which Socialist Labor ticket has a Office of secretary of state?"
    },
    {
        "answer": "SELECT MIN(grid) FROM table_name_46 WHERE rider = \"colin edwards\"",
        "context": "CREATE TABLE table_name_46 (grid INTEGER, rider VARCHAR)",
        "question": "What is the lowest grid number when Colin Edwards is the rider?"
    },
    {
        "answer": "SELECT SUM(no_specimens) FROM table_name_1 WHERE abbr = \"sant\"",
        "context": "CREATE TABLE table_name_1 (no_specimens INTEGER, abbr VARCHAR)",
        "question": "How many specimens does the SANT institution have?"
    },
    {
        "answer": "SELECT 1 AS st_party FROM table_name_10 WHERE election = \"1893 by-election\"",
        "context": "CREATE TABLE table_name_10 (election VARCHAR)",
        "question": "Which 1st Party has an Election of 1893 by-election?"
    },
    {
        "answer": "SELECT apogee FROM table_name_48 WHERE inclination = \"65\u00b0\" AND launch_date_time___gmt__ = \"15 february 1973, 01:11\"",
        "context": "CREATE TABLE table_name_48 (apogee VARCHAR, inclination VARCHAR, launch_date_time___gmt__ VARCHAR)",
        "question": "What is Apogee, when Inclination is 65\u00b0, and when Launch Date/Time is ( GMT ) is 15 February 1973, 01:11?"
    },
    {
        "answer": "SELECT player FROM table_name_49 WHERE place = \"t1\" AND country = \"united states\"",
        "context": "CREATE TABLE table_name_49 (player VARCHAR, place VARCHAR, country VARCHAR)",
        "question": "Which player had a position of t1 and played in the united states?"
    },
    {
        "answer": "SELECT incumbent FROM table_name_90 WHERE results = \"re-elected\" AND first_elected < 1996",
        "context": "CREATE TABLE table_name_90 (incumbent VARCHAR, results VARCHAR, first_elected VARCHAR)",
        "question": "Who is the incumbent that has been in office since before 1996 and was again re-elected?"
    },
    {
        "answer": "SELECT MAX(block) FROM table_name_76 WHERE date_of_birth = \"15.09.1981\" AND height > 202",
        "context": "CREATE TABLE table_name_76 (block INTEGER, date_of_birth VARCHAR, height VARCHAR)",
        "question": "What is the highest block that has 15.09.1981 as the date, and a height greater than 202?"
    },
    {
        "answer": "SELECT sub_parish__sogn_ FROM table_name_41 WHERE year_built > 1916 AND location_of_the_church = \"ortnevik\"",
        "context": "CREATE TABLE table_name_41 (sub_parish__sogn_ VARCHAR, year_built VARCHAR, location_of_the_church VARCHAR)",
        "question": "WHAT IS THE SUB-PARISH WITH A YEAR AFTER 1916, IN  ortnevik?"
    },
    {
        "answer": "SELECT 2009 AS _season FROM table_name_17 WHERE group = \"group b\" AND stadium = \"cancha del mystic\" AND club = \"el tecal\"",
        "context": "CREATE TABLE table_name_17 (club VARCHAR, group VARCHAR, stadium VARCHAR)",
        "question": "When in 2009 season has a Group of group b, and cancha del mystic with a Club of el tecal?"
    },
    {
        "answer": "SELECT date FROM table_name_55 WHERE matches < 32 AND round = \"fifth round proper\"",
        "context": "CREATE TABLE table_name_55 (date VARCHAR, matches VARCHAR, round VARCHAR)",
        "question": "What is Date, when Matches is less than 32, and when Round is Fifth Round Proper?"
    },
    {
        "answer": "SELECT COUNT(matches) FROM table_name_16 WHERE clubs = \"588 \u2192 406\"",
        "context": "CREATE TABLE table_name_16 (matches VARCHAR, clubs VARCHAR)",
        "question": "What is the total number of Matches, when Clubs is 588 \u2192 406?"
    },
    {
        "answer": "SELECT record FROM table_name_51 WHERE location_attendance = \"ford center\" AND game > 30 AND score = \"87\u201379\"",
        "context": "CREATE TABLE table_name_51 (record VARCHAR, score VARCHAR, location_attendance VARCHAR, game VARCHAR)",
        "question": "Which Record has a Location/Attendance of ford center, a Game larger than 30, and a Score of 87\u201379?"
    },
    {
        "answer": "SELECT nat FROM table_name_92 WHERE ends > 2010 AND since = 2006 AND name = \"paligeorgos\"",
        "context": "CREATE TABLE table_name_92 (nat VARCHAR, name VARCHAR, ends VARCHAR, since VARCHAR)",
        "question": "What is Nat., when Ends is greater than 2010, when Since is 2006, and when Name is Paligeorgos?"
    },
    {
        "answer": "SELECT COUNT(cultural_and_educational_panel) FROM table_name_9 WHERE labour_panel > 5 AND industrial_and_commercial_panel > 9",
        "context": "CREATE TABLE table_name_9 (cultural_and_educational_panel VARCHAR, labour_panel VARCHAR, industrial_and_commercial_panel VARCHAR)",
        "question": "Which Cultural and Educational Panel has a Labour Panel larger than 5, and an Industrial and Commercial Panel larger than 9?"
    },
    {
        "answer": "SELECT MIN(administrative_panel) FROM table_name_52 WHERE nominated_by_the_taoiseach < 0",
        "context": "CREATE TABLE table_name_52 (administrative_panel INTEGER, nominated_by_the_taoiseach INTEGER)",
        "question": "Which Administrative Panel has a Nominated by the Taoiseach smaller than 0?"
    },
    {
        "answer": "SELECT AVG(labour_panel) FROM table_name_46 WHERE industrial_and_commercial_panel = 9 AND university_of_dublin < 3",
        "context": "CREATE TABLE table_name_46 (labour_panel INTEGER, industrial_and_commercial_panel VARCHAR, university_of_dublin VARCHAR)",
        "question": "Which Labour Panel has an Industrial and Commercial Panel of 9, and a University of Dublin smaller than 3?"
    },
    {
        "answer": "SELECT MIN(olympics_so_far) FROM table_name_80 WHERE sailors > 1 AND first_og > 1948 AND class = \"flying dutchman\"",
        "context": "CREATE TABLE table_name_80 (olympics_so_far INTEGER, class VARCHAR, sailors VARCHAR, first_og VARCHAR)",
        "question": "What is the lowest value for Olympics, when Sailors is greater than 1, when First OG is after 1948, and when Class is \"Flying Dutchman\"?"
    },
    {
        "answer": "SELECT elevator FROM table_name_89 WHERE elevated = \"april 12, 1281\" AND nationality = \"french\" AND elector = \"jean cholet\"",
        "context": "CREATE TABLE table_name_89 (elevator VARCHAR, elector VARCHAR, elevated VARCHAR, nationality VARCHAR)",
        "question": "Which Elevator has Elevated of april 12, 1281, a Nationality of french, and an Elector of jean cholet?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_51 WHERE margin_of_victory = \"1 stroke\" AND tournament = \"joburg open 1\"",
        "context": "CREATE TABLE table_name_51 (runner_s__up VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "What is Runner(s)-Up, when Margin of Victory is 1 Stroke, and when Tournament is Joburg Open 1?"
    },
    {
        "answer": "SELECT elevator FROM table_name_29 WHERE title = \"bishop of palestrina\"",
        "context": "CREATE TABLE table_name_29 (elevator VARCHAR, title VARCHAR)",
        "question": "Which Elevator has a Title of bishop of palestrina?"
    },
    {
        "answer": "SELECT SUM(poles) FROM table_name_13 WHERE team = \"la fili\u00e8re\" AND points < 162",
        "context": "CREATE TABLE table_name_13 (poles INTEGER, team VARCHAR, points VARCHAR)",
        "question": "What is the sum of the poles of Team la fili\u00e8re, which has less than 162 points?"
    },
    {
        "answer": "SELECT SUM(cultural_and_educational_panel) FROM table_name_3 WHERE administrative_panel > 1 AND agricultural_panel = 11 AND university_of_dublin < 3",
        "context": "CREATE TABLE table_name_3 (cultural_and_educational_panel INTEGER, university_of_dublin VARCHAR, administrative_panel VARCHAR, agricultural_panel VARCHAR)",
        "question": "What is the sum of the Cultural and Educational Panels that have an Administrative Panel greater than 1, an Agricultural Panel of 11 and a University of Dublin smaller than 3?"
    },
    {
        "answer": "SELECT SUM(agricultural_panel) FROM table_name_46 WHERE industrial_and_commercial_panel < 0",
        "context": "CREATE TABLE table_name_46 (agricultural_panel INTEGER, industrial_and_commercial_panel INTEGER)",
        "question": "What is the sum of Agricultural panels that have an Industrial and Commercial Panel smaller than 0?"
    },
    {
        "answer": "SELECT MIN(national_university_of_ireland) FROM table_name_49 WHERE cultural_and_educational_panel = 0 AND labour_panel < 1",
        "context": "CREATE TABLE table_name_49 (national_university_of_ireland INTEGER, cultural_and_educational_panel VARCHAR, labour_panel VARCHAR)",
        "question": "What is the lowest number of National University of Ireland that has a Cultural and Educational Panel of 0, and a Labour Panel smaller than 1?"
    },
    {
        "answer": "SELECT COUNT(industrial_and_commercial_panel) FROM table_name_45 WHERE labour_panel > 1 AND nominated_by_the_taoiseach < 11 AND cultural_and_educational_panel < 0",
        "context": "CREATE TABLE table_name_45 (industrial_and_commercial_panel VARCHAR, cultural_and_educational_panel VARCHAR, labour_panel VARCHAR, nominated_by_the_taoiseach VARCHAR)",
        "question": "What is the total of Industrial and Commercial Panels that have a Labour Panel greater than 1, a Nominated by the Taoiseach lesss than 11 and a Cultural and Educational Panel smaller than 0"
    },
    {
        "answer": "SELECT COUNT(assists) FROM table_name_21 WHERE position = \"striker\" AND goals < 4 AND player = \"edmundo rodriguez\" AND minutes < 473",
        "context": "CREATE TABLE table_name_21 (assists VARCHAR, minutes VARCHAR, player VARCHAR, position VARCHAR, goals VARCHAR)",
        "question": "What is the total number of assists when Edmundo Rodriguez is playing the position of striker, less than 4 goals were scored, and the minutes were less than 473?"
    },
    {
        "answer": "SELECT AVG(to_par) FROM table_name_63 WHERE player = \"jack nicklaus\" AND total < 146",
        "context": "CREATE TABLE table_name_63 (to_par INTEGER, player VARCHAR, total VARCHAR)",
        "question": "Which To par has a Player of jack nicklaus, and a Total smaller than 146?"
    },
    {
        "answer": "SELECT AVG(points_for_higher) FROM table_name_25 WHERE points_for_ordinary = 0 AND grade = \"ng\" AND points_for_foundation < 0",
        "context": "CREATE TABLE table_name_25 (points_for_higher INTEGER, points_for_foundation VARCHAR, points_for_ordinary VARCHAR, grade VARCHAR)",
        "question": "What average points for highers has 0 has points for ordinary, and Ng as the grade, and less than 0 as points for foundation?"
    },
    {
        "answer": "SELECT team FROM table_name_80 WHERE points = 0 AND time_retired = \"contact\" AND laps = 71",
        "context": "CREATE TABLE table_name_80 (team VARCHAR, laps VARCHAR, points VARCHAR, time_retired VARCHAR)",
        "question": "What team has 0 points and a contact tired/retired, and 71 laps?"
    },
    {
        "answer": "SELECT AVG(laps) FROM table_name_92 WHERE manufacturer = \"ktm\" AND time_retired = \"+56.440\" AND grid < 11",
        "context": "CREATE TABLE table_name_92 (laps INTEGER, grid VARCHAR, manufacturer VARCHAR, time_retired VARCHAR)",
        "question": "What was the average number of laps completed by KTM riders, with times of +56.440 and grid values under 11?"
    },
    {
        "answer": "SELECT MAX(grid) FROM table_name_22 WHERE manufacturer = \"aprilia\" AND time_retired = \"+1.660\"",
        "context": "CREATE TABLE table_name_22 (grid INTEGER, manufacturer VARCHAR, time_retired VARCHAR)",
        "question": "What was the highest grid value for riders with manufacturer of Aprilia and time of +1.660?"
    },
    {
        "answer": "SELECT team FROM table_name_39 WHERE player = \"oliver dobbins\"",
        "context": "CREATE TABLE table_name_39 (team VARCHAR, player VARCHAR)",
        "question": "What team does Oliver Dobbins play for?"
    },
    {
        "answer": "SELECT year_s__won FROM table_name_4 WHERE country = \"united states\" AND total = 278",
        "context": "CREATE TABLE table_name_4 (year_s__won VARCHAR, country VARCHAR, total VARCHAR)",
        "question": "What year did the United States win with a total of 278?"
    },
    {
        "answer": "SELECT to_par FROM table_name_97 WHERE total > 288",
        "context": "CREATE TABLE table_name_97 (to_par VARCHAR, total INTEGER)",
        "question": "What is the to par when the total is larger than 288?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_21 WHERE tournament = \"merrill lynch/golf digest commemorative pro-am\"",
        "context": "CREATE TABLE table_name_21 (runner_s__up VARCHAR, tournament VARCHAR)",
        "question": "Who was the Runner-up for the merrill lynch/golf digest commemorative pro-am tournament?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_11 WHERE placement_in_miss_world = \"did not place\" AND delegate = \"daisy garcia reyes\"",
        "context": "CREATE TABLE table_name_11 (year INTEGER, placement_in_miss_world VARCHAR, delegate VARCHAR)",
        "question": "What's the latest year that daisy garcia reyes did not place in miss world?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_86 WHERE margin_of_victory = \"2 strokes\" AND tournament = \"mazda senior tournament players championship\"",
        "context": "CREATE TABLE table_name_86 (runner_s__up VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "Who was the runner-up for the mazda senior tournament players championship tournament when the margin of victory was 2 strokes?"
    },
    {
        "answer": "SELECT week_of FROM table_name_2 WHERE semi_finalists = \"anke huber chanda rubin\" AND runner_up = \"meredith mcgrath larisa savchenko\"",
        "context": "CREATE TABLE table_name_2 (week_of VARCHAR, semi_finalists VARCHAR, runner_up VARCHAR)",
        "question": "What is the Week when anke huber chanda rubin shows for Semi finalists, and the Runner-up is meredith mcgrath larisa savchenko?"
    },
    {
        "answer": "SELECT opponent FROM table_name_7 WHERE method = \"tko\" AND location = \"elgin, illinois, usa\" AND date = \"2001-02-11\"",
        "context": "CREATE TABLE table_name_7 (opponent VARCHAR, date VARCHAR, method VARCHAR, location VARCHAR)",
        "question": "Which Opponent has a Method of tko, and a Location of elgin, illinois, usa on 2001-02-11?"
    },
    {
        "answer": "SELECT party FROM table_name_17 WHERE established > 1797 AND election = 2007",
        "context": "CREATE TABLE table_name_17 (party VARCHAR, established VARCHAR, election VARCHAR)",
        "question": "What party established in 1797 won an election in 2007?"
    },
    {
        "answer": "SELECT MAX(height__m_) FROM table_name_98 WHERE prominence__m_ = 3 OFFSET 118",
        "context": "CREATE TABLE table_name_98 (height__m_ INTEGER, prominence__m_ VARCHAR)",
        "question": "What is the largest height when the prominence is 3,118?"
    },
    {
        "answer": "SELECT SUM(population) FROM table_name_21 WHERE county = \"mississippi\" AND number_of_households < 17 OFFSET 741",
        "context": "CREATE TABLE table_name_21 (population INTEGER, county VARCHAR, number_of_households VARCHAR)",
        "question": "Which Population has a County of mississippi, and a Number of households smaller than 17,741?"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_75 WHERE name = \"he yingqin\" AND birth < 1890",
        "context": "CREATE TABLE table_name_75 (rank INTEGER, name VARCHAR, birth VARCHAR)",
        "question": "What rank is He Yingqin who was born before 1890?"
    },
    {
        "answer": "SELECT MAX(crude_death_rate__per_1000_) FROM table_name_16 WHERE deaths = \"3 433\" AND average_population__x_1000_ > 298",
        "context": "CREATE TABLE table_name_16 (crude_death_rate__per_1000_ INTEGER, deaths VARCHAR, average_population__x_1000_ VARCHAR)",
        "question": "What is the highest crude death rate when deaths are 3 433 and average population is greater than 298?"
    },
    {
        "answer": "SELECT live_births FROM table_name_79 WHERE crude_birth_rate__per_1000_ > 15.7 AND average_population__x_1000_ < 297 AND deaths = \"4 686\"",
        "context": "CREATE TABLE table_name_79 (live_births VARCHAR, deaths VARCHAR, crude_birth_rate__per_1000_ VARCHAR, average_population__x_1000_ VARCHAR)",
        "question": "How many live births where the crude birth rate is lore than 15.7, average population is less than 297 and deaths are al 4 686?"
    },
    {
        "answer": "SELECT natural_change FROM table_name_96 WHERE crude_birth_rate__per_1000_ < 11.4 AND crude_death_rate__per_1000_ > 12.1 AND deaths = \"4 376\"",
        "context": "CREATE TABLE table_name_96 (natural_change VARCHAR, deaths VARCHAR, crude_birth_rate__per_1000_ VARCHAR, crude_death_rate__per_1000_ VARCHAR)",
        "question": "What is the national change where crude birth rate is less than 11.4, crude death rate is more than 12.1 and deaths are 4 376?"
    },
    {
        "answer": "SELECT AVG(average_population__x_1000_) FROM table_name_40 WHERE deaths = \"3 557\" AND crude_death_rate__per_1000_ < 11.9",
        "context": "CREATE TABLE table_name_40 (average_population__x_1000_ INTEGER, deaths VARCHAR, crude_death_rate__per_1000_ VARCHAR)",
        "question": "What is the average population when deaths are 3 557 and crude death date is less than 11.9?"
    },
    {
        "answer": "SELECT venue FROM table_name_23 WHERE competition = \"2002 fifa world cup qualifier\" AND result = \"8-2\"",
        "context": "CREATE TABLE table_name_23 (venue VARCHAR, competition VARCHAR, result VARCHAR)",
        "question": "What is the Venue for the 2002 fifa world cup qualifier, and a Result of 8-2?"
    },
    {
        "answer": "SELECT covalent__single_bond_ FROM table_name_21 WHERE name = \"sodium\"",
        "context": "CREATE TABLE table_name_21 (covalent__single_bond_ VARCHAR, name VARCHAR)",
        "question": "What is the covalent (single bond) value of sodium?"
    },
    {
        "answer": "SELECT MAX(goals_scored) FROM table_name_87 WHERE wins < 13 AND goals_conceded > 86 AND loses > 32",
        "context": "CREATE TABLE table_name_87 (goals_scored INTEGER, loses VARCHAR, wins VARCHAR, goals_conceded VARCHAR)",
        "question": "What is the maximum goals score with less than 13 wins, greater than 86 goals were conceded, and more than 32 games lost?"
    },
    {
        "answer": "SELECT surface FROM table_name_32 WHERE score = \"2\u20136, 6\u20133, 6\u20134\"",
        "context": "CREATE TABLE table_name_32 (surface VARCHAR, score VARCHAR)",
        "question": "On what surface was the match played with a score of 2\u20136, 6\u20133, 6\u20134?"
    },
    {
        "answer": "SELECT 02 AS _03 FROM table_name_33 WHERE school_year = \"% learning in latvian\"",
        "context": "CREATE TABLE table_name_33 (school_year VARCHAR)",
        "question": "What is 02-03, when School Year is % Learning In Latvian?"
    },
    {
        "answer": "SELECT opponent_in_the_final FROM table_name_93 WHERE tournament = \"taipei, taiwan\" AND date = \"november 14, 1994\"",
        "context": "CREATE TABLE table_name_93 (opponent_in_the_final VARCHAR, tournament VARCHAR, date VARCHAR)",
        "question": "Who was the final opponent in the tournament in Taipei, Taiwan on November 14, 1994?"
    },
    {
        "answer": "SELECT inhabitants FROM table_name_26 WHERE party = \"lega lombarda\" AND election > 2010",
        "context": "CREATE TABLE table_name_26 (inhabitants VARCHAR, party VARCHAR, election VARCHAR)",
        "question": "Which inhabitants have lega lombarda as the party, with an election greater than 2010?"
    },
    {
        "answer": "SELECT MIN(election) FROM table_name_4 WHERE municipality = \"cinisello balsamo\"",
        "context": "CREATE TABLE table_name_4 (election INTEGER, municipality VARCHAR)",
        "question": "What is the lowest election that has cinisello balsamo as the municipality?"
    },
    {
        "answer": "SELECT opponent_in_the_final FROM table_name_17 WHERE date = \"november 14, 1994\"",
        "context": "CREATE TABLE table_name_17 (opponent_in_the_final VARCHAR, date VARCHAR)",
        "question": "Who was played against in the final on November 14, 1994?"
    },
    {
        "answer": "SELECT AVG(lost) FROM table_name_21 WHERE place < 10 AND points < 23 AND team = \"chorrillo\" AND goals_conceded < 26",
        "context": "CREATE TABLE table_name_21 (lost INTEGER, goals_conceded VARCHAR, team VARCHAR, place VARCHAR, points VARCHAR)",
        "question": "What is the average of lost for place less than 10, less than 23 points, and goals conceded less than 26 for the Chorrillo team?"
    },
    {
        "answer": "SELECT eliminated FROM table_name_28 WHERE entered < 4 AND wrestler = \"shawn michaels\"",
        "context": "CREATE TABLE table_name_28 (eliminated VARCHAR, entered VARCHAR, wrestler VARCHAR)",
        "question": "What is the Eliminated when there are less than 4 entered and the wrestler was shawn michaels?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_56 WHERE nation = \"new zealand\" AND bronze < 1",
        "context": "CREATE TABLE table_name_56 (rank INTEGER, nation VARCHAR, bronze VARCHAR)",
        "question": "What is the total rank for New Zealand, when less than 1 bronze medals were won?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_8 WHERE nation = \"netherlands\" AND silver > 2",
        "context": "CREATE TABLE table_name_8 (rank VARCHAR, nation VARCHAR, silver VARCHAR)",
        "question": "What is the total rank for the Netherlands when more than 2 silver medals were won?"
    },
    {
        "answer": "SELECT MAX(poll_wins) FROM table_name_49 WHERE poll_losses > 2 AND advocate = \"andy kindler\" AND ties < 0",
        "context": "CREATE TABLE table_name_49 (poll_wins INTEGER, ties VARCHAR, poll_losses VARCHAR, advocate VARCHAR)",
        "question": "What is the highest poll of the advocate Andy Kindler with poll losses greater than 2 and ties less than 0?"
    },
    {
        "answer": "SELECT losses FROM table_name_51 WHERE conference = \"western\" AND season = \"2004\u201305\"",
        "context": "CREATE TABLE table_name_51 (losses VARCHAR, conference VARCHAR, season VARCHAR)",
        "question": "What is the Losses at the western conference and the 2004\u201305 season?"
    },
    {
        "answer": "SELECT current_club FROM table_name_87 WHERE height < 1.9500000000000002 AND position = \"pg/sg\"",
        "context": "CREATE TABLE table_name_87 (current_club VARCHAR, height VARCHAR, position VARCHAR)",
        "question": "What is the Current Club of the PG/SG player with a Height of less than 1.9500000000000002?"
    },
    {
        "answer": "SELECT round FROM table_name_20 WHERE event = \"jiu-jitsu vs martial arts\"",
        "context": "CREATE TABLE table_name_20 (round VARCHAR, event VARCHAR)",
        "question": "What is the Round for the jiu-jitsu vs martial arts?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_70 WHERE winning_team = \"atlanta braves\" AND losing_team = \"st. louis cardinals\"",
        "context": "CREATE TABLE table_name_70 (year INTEGER, winning_team VARCHAR, losing_team VARCHAR)",
        "question": "What was the latest year that the Atlanta Braves won and the St. Louis Cardinals lost?"
    },
    {
        "answer": "SELECT winning_team FROM table_name_92 WHERE losing_team = \"san francisco giants\"",
        "context": "CREATE TABLE table_name_92 (winning_team VARCHAR, losing_team VARCHAR)",
        "question": "Who won the series when the San Francisco Giants lost?"
    },
    {
        "answer": "SELECT third_member FROM table_name_2 WHERE second_party = \"liberal\" AND third_party = \"conservative\" AND second_member = \"humphrey mildmay\"",
        "context": "CREATE TABLE table_name_2 (third_member VARCHAR, second_member VARCHAR, second_party VARCHAR, third_party VARCHAR)",
        "question": "Who is the third member of the Liberal Party, a third party conservative, the second member Humphrey Mildmay?"
    },
    {
        "answer": "SELECT to_par FROM table_name_42 WHERE country = \"united states\" AND player = \"dave stockton\"",
        "context": "CREATE TABLE table_name_42 (to_par VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "which To par has a Country of united states, and a Player of dave stockton?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_81 WHERE finish = \"t59\"",
        "context": "CREATE TABLE table_name_81 (total INTEGER, finish VARCHAR)",
        "question": "Which Total has a Finish of t59?"
    },
    {
        "answer": "SELECT MAX(election) FROM table_name_97 WHERE third_member = \"sir robert price, bt\" AND first_party = \"conservative\"",
        "context": "CREATE TABLE table_name_97 (election INTEGER, third_member VARCHAR, first_party VARCHAR)",
        "question": "What was the highest election with third party member Sir Robert Price, BT, and first party member conservative?"
    },
    {
        "answer": "SELECT place FROM table_name_64 WHERE money___$__ = 82 AND player = \"al watrous\"",
        "context": "CREATE TABLE table_name_64 (place VARCHAR, money___$__ VARCHAR, player VARCHAR)",
        "question": "Which ranking has money of $82 and Al Watrous as the player?"
    },
    {
        "answer": "SELECT english FROM table_name_3 WHERE \"german\" = \"german\"",
        "context": "CREATE TABLE table_name_3 (english VARCHAR)",
        "question": "What English word has the same meaning as the German word \"german\"?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_99 WHERE rank < 132 AND name = \"biodiversity richness\"",
        "context": "CREATE TABLE table_name_99 (year INTEGER, rank VARCHAR, name VARCHAR)",
        "question": "Can you tell me the lowest Year that has the Rank smaller the 132, and the Name of biodiversity richness?"
    },
    {
        "answer": "SELECT out_of FROM table_name_31 WHERE source = \"united nations\" AND rank > 47 AND year < 2003",
        "context": "CREATE TABLE table_name_31 (out_of VARCHAR, year VARCHAR, source VARCHAR, rank VARCHAR)",
        "question": "Can you tell me the Out of that has the Source of united nations, and the Rank larger than 47, and the Year smaller than 2003?"
    },
    {
        "answer": "SELECT 2007 FROM table_name_32 WHERE 2006 = \"grand slam tournaments\"",
        "context": "CREATE TABLE table_name_32 (Id VARCHAR)",
        "question": "What is the 2007 that has a grand slam tournaments in 2006."
    },
    {
        "answer": "SELECT fate FROM table_name_4 WHERE nationality = \"united kingdom\" AND tonnage = \"1,809\"",
        "context": "CREATE TABLE table_name_4 (fate VARCHAR, nationality VARCHAR, tonnage VARCHAR)",
        "question": "Which Fate has a Nationality of united kingdom, and a Tonnage of 1,809?"
    },
    {
        "answer": "SELECT COUNT(pos) FROM table_name_51 WHERE points < 10 AND qualifying > 7 AND race_1 = \"ret\" AND driver = \"jonathan grant\"",
        "context": "CREATE TABLE table_name_51 (pos VARCHAR, driver VARCHAR, race_1 VARCHAR, points VARCHAR, qualifying VARCHAR)",
        "question": "What is the total number of positions with less than 10 points, more than 7 qualifying, ret value in Race 1, and Jonathan Grant driving?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_31 WHERE played > 20",
        "context": "CREATE TABLE table_name_31 (points INTEGER, played INTEGER)",
        "question": "What points average has a played greater than 20?"
    },
    {
        "answer": "SELECT population FROM table_name_75 WHERE status = \"rural community\"",
        "context": "CREATE TABLE table_name_75 (population VARCHAR, status VARCHAR)",
        "question": "What is the Population of the Rural Community"
    },
    {
        "answer": "SELECT SUM(round) FROM table_name_84 WHERE method = \"submission (ankle lock)\" AND location = \"tokyo, japan\" AND record = \"13-5-2\"",
        "context": "CREATE TABLE table_name_84 (round INTEGER, record VARCHAR, method VARCHAR, location VARCHAR)",
        "question": "What is the total number of Round with a Method of submission (ankle lock), a Location of tokyo, japan, and a Record of 13-5-2?"
    },
    {
        "answer": "SELECT nation FROM table_name_77 WHERE silver < 16 AND bronze > 6 AND gold = 2",
        "context": "CREATE TABLE table_name_77 (nation VARCHAR, gold VARCHAR, silver VARCHAR, bronze VARCHAR)",
        "question": "Which Nation has Silver smaller than 16, Bronze larger than 6, and Gold of 2?"
    },
    {
        "answer": "SELECT position FROM table_name_64 WHERE competition = \"world indoor championships\" AND year > 2008",
        "context": "CREATE TABLE table_name_64 (position VARCHAR, competition VARCHAR, year VARCHAR)",
        "question": "Which position was the World Indoor Championships in a year later than 2008?"
    },
    {
        "answer": "SELECT assists FROM table_name_29 WHERE team = \"florida\" AND total_points = \"75\"",
        "context": "CREATE TABLE table_name_29 (assists VARCHAR, team VARCHAR, total_points VARCHAR)",
        "question": "What is the assists for the Team of Florida and the total points of 75?"
    },
    {
        "answer": "SELECT score FROM table_name_91 WHERE competition = \"2014 world cup qualification\"",
        "context": "CREATE TABLE table_name_91 (score VARCHAR, competition VARCHAR)",
        "question": "What was the score of the 2014 World Cup Qualification?"
    },
    {
        "answer": "SELECT winning_driver FROM table_name_7 WHERE fastest_lap = \"ryan hunter-reay\" AND most_laps_led = \"ryan briscoe\"",
        "context": "CREATE TABLE table_name_7 (winning_driver VARCHAR, fastest_lap VARCHAR, most_laps_led VARCHAR)",
        "question": "What is Winning Driver, when Fastest Lap is Ryan Hunter-Reay, and when Most Laps Led is Ryan Briscoe?"
    },
    {
        "answer": "SELECT race FROM table_name_91 WHERE winning_team = \"chip ganassi racing\" AND pole_position = \"ryan briscoe\" AND most_laps_led = \"scott dixon\"",
        "context": "CREATE TABLE table_name_91 (race VARCHAR, most_laps_led VARCHAR, winning_team VARCHAR, pole_position VARCHAR)",
        "question": "What is Race, when Winning Team is Chip Ganassi Racing, when Pole Position is Ryan Briscoe, and when Most Laps Led is Scott Dixon?"
    },
    {
        "answer": "SELECT SUM(bronze) FROM table_name_9 WHERE rank = \"10\" AND gold < 0",
        "context": "CREATE TABLE table_name_9 (bronze INTEGER, rank VARCHAR, gold VARCHAR)",
        "question": "How many bronzes had a rank of 10 and 0 gold?"
    },
    {
        "answer": "SELECT SUM(cuts_made) FROM table_name_95 WHERE events > 72",
        "context": "CREATE TABLE table_name_95 (cuts_made INTEGER, events INTEGER)",
        "question": "What is the sum of Cuts made when there were more than 72 events?"
    },
    {
        "answer": "SELECT AVG(top_5) FROM table_name_98 WHERE tournament = \"the open championship\" AND top_10 < 2",
        "context": "CREATE TABLE table_name_98 (top_5 INTEGER, tournament VARCHAR, top_10 VARCHAR)",
        "question": "What is the average Top-5 for the open championship, and a Top-10 smaller than 2?"
    },
    {
        "answer": "SELECT MIN(water__sqmi_) FROM table_name_2 WHERE land___sqmi__ > 34.864 AND township = \"pierce\" AND geo_id > 3800362460",
        "context": "CREATE TABLE table_name_2 (water__sqmi_ INTEGER, geo_id VARCHAR, land___sqmi__ VARCHAR, township VARCHAR)",
        "question": "What is the smallest amount of water having landmass over 34.864 sqmi, in Pierce township, with a GEO ID over 3800362460?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_21 WHERE silver = 40 AND gold < 39",
        "context": "CREATE TABLE table_name_21 (total VARCHAR, silver VARCHAR, gold VARCHAR)",
        "question": "How many totals have a Silver of 40, and a Gold smaller than 39?"
    },
    {
        "answer": "SELECT opponent FROM table_name_32 WHERE time = \"3:24\"",
        "context": "CREATE TABLE table_name_32 (opponent VARCHAR, time VARCHAR)",
        "question": "Who's the opponent with a time of 3:24?"
    },
    {
        "answer": "SELECT record FROM table_name_64 WHERE time = \"4:00\" AND opponent = \"krzysztof soszynski\"",
        "context": "CREATE TABLE table_name_64 (record VARCHAR, time VARCHAR, opponent VARCHAR)",
        "question": "What's the record that had an opponent of Krzysztof Soszynski and a time of 4:00?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_66 WHERE name = \"area of permanent crops\" AND out_of < 181",
        "context": "CREATE TABLE table_name_66 (rank INTEGER, name VARCHAR, out_of VARCHAR)",
        "question": "What is the lowest Rank for the Name, \"area of permanent crops\", Out of a number smaller than 181?"
    },
    {
        "answer": "SELECT authors FROM table_name_90 WHERE novelty = \"gen nov\" AND location = \"south africa\" AND name = \"criocephalosaurus\"",
        "context": "CREATE TABLE table_name_90 (authors VARCHAR, name VARCHAR, novelty VARCHAR, location VARCHAR)",
        "question": "What is Authors, when Novelty is Gen Nov, when Location is South Africa, and when Name is Criocephalosaurus?"
    },
    {
        "answer": "SELECT authors FROM table_name_13 WHERE novelty = \"gen et sp nov\" AND name = \"lanthanocephalus\"",
        "context": "CREATE TABLE table_name_13 (authors VARCHAR, novelty VARCHAR, name VARCHAR)",
        "question": "What is Authors, when Novelty is Gen Et Sp Nov, and when Name is Lanthanocephalus?"
    },
    {
        "answer": "SELECT COUNT(voltage__kv_) FROM table_name_44 WHERE country = \"argentina\" AND power__mw_ > 30 AND supply_point = \"yacyret\u00e1\"",
        "context": "CREATE TABLE table_name_44 (voltage__kv_ VARCHAR, supply_point VARCHAR, country VARCHAR, power__mw_ VARCHAR)",
        "question": "How much Voltage (kV) has a Country of argentina, and a Power (MW) larger than 30, and a Supply point of yacyret\u00e1?"
    },
    {
        "answer": "SELECT name FROM table_name_24 WHERE status = \"valid\" AND authors = \"maisch\" AND location = \"tanzania\" AND novelty = \"gen et sp nov\"",
        "context": "CREATE TABLE table_name_24 (name VARCHAR, novelty VARCHAR, location VARCHAR, status VARCHAR, authors VARCHAR)",
        "question": "What is Name, when Status is Valid, when Authors is Maisch, when Location is Tanzania, and when Novelty is Gen Et Sp Nov?"
    },
    {
        "answer": "SELECT date FROM table_name_53 WHERE opponent = \"flavia pennetta\"",
        "context": "CREATE TABLE table_name_53 (date VARCHAR, opponent VARCHAR)",
        "question": "What is the Date with an Opponent that is flavia pennetta?"
    },
    {
        "answer": "SELECT AVG(debut_year) FROM table_name_6 WHERE games < 54 AND years_at_club = \"1989\" AND goals < 8",
        "context": "CREATE TABLE table_name_6 (debut_year INTEGER, goals VARCHAR, games VARCHAR, years_at_club VARCHAR)",
        "question": "What is the debut year for the player with fewer than 54 games, fewer than 8 goals and 1989 at club?"
    },
    {
        "answer": "SELECT name FROM table_name_41 WHERE indication = \"autoimmune disease and inflammation\"",
        "context": "CREATE TABLE table_name_41 (name VARCHAR, indication VARCHAR)",
        "question": "Which study included autoimmune disease and inflammation?"
    },
    {
        "answer": "SELECT AVG(water__sqmi_) FROM table_name_8 WHERE pop__2010_ > 47 AND township = \"brenna\" AND longitude < -97.171507",
        "context": "CREATE TABLE table_name_8 (water__sqmi_ INTEGER, longitude VARCHAR, pop__2010_ VARCHAR, township VARCHAR)",
        "question": "what is the average water sqmi with a population (2010) more than 47 in the Brenna Township with Longitude less than -97.171507"
    },
    {
        "answer": "SELECT MAX(ansi_code) FROM table_name_98 WHERE latitude > 47.623288 AND geo_id > 3805508060 AND land___sqmi__ > 35.66 AND longitude < -102.054248",
        "context": "CREATE TABLE table_name_98 (ansi_code INTEGER, longitude VARCHAR, land___sqmi__ VARCHAR, latitude VARCHAR, geo_id VARCHAR)",
        "question": "what is the highest ANSI code with a latitude more than 47.623288 and a geo id more than 3805508060 with land (sqmi) more than 35.66 and a longitude less than -102.054248"
    },
    {
        "answer": "SELECT class_to_1928 FROM table_name_16 WHERE quantity < 440 AND seats = \"29/29\"",
        "context": "CREATE TABLE table_name_16 (class_to_1928 VARCHAR, quantity VARCHAR, seats VARCHAR)",
        "question": "What Class to 1928 has the Quantity smaller than 440 and Seats of 29/29?"
    },
    {
        "answer": "SELECT AVG(goals) FROM table_name_94 WHERE matches = 644 AND rank > 3",
        "context": "CREATE TABLE table_name_94 (goals INTEGER, matches VARCHAR, rank VARCHAR)",
        "question": "How many goals on average had 644 matches and a rank bigger than 3?"
    },
    {
        "answer": "SELECT constituency_number FROM table_name_86 WHERE reserved_for___sc___st__none_ = \"none\" AND name = \"badnawar\"",
        "context": "CREATE TABLE table_name_86 (constituency_number VARCHAR, reserved_for___sc___st__none_ VARCHAR, name VARCHAR)",
        "question": "When the name is badnawar, and the reserved for (sc / st /none) of none what is the constituency number?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_98 WHERE opponent = \"new york jets\"",
        "context": "CREATE TABLE table_name_98 (attendance INTEGER, opponent VARCHAR)",
        "question": "What is the average attendance for the New York Jets?"
    },
    {
        "answer": "SELECT party FROM table_name_95 WHERE position = \"member\" AND name = \"alicia hughes\"",
        "context": "CREATE TABLE table_name_95 (party VARCHAR, position VARCHAR, name VARCHAR)",
        "question": "What Party is Member Alicia Hughes from?"
    },
    {
        "answer": "SELECT champion FROM table_name_25 WHERE year < 2012 AND runner_up__average_in_final_ = \"steve beaton (97.16)\"",
        "context": "CREATE TABLE table_name_25 (champion VARCHAR, year VARCHAR, runner_up__average_in_final_ VARCHAR)",
        "question": "who is the champion when the year is earlier than 2012, the runner-up (average in final) is steve beaton (97.16)?"
    },
    {
        "answer": "SELECT location FROM table_name_99 WHERE country = \"australia\" AND event = \"havaianas beachley classic\"",
        "context": "CREATE TABLE table_name_99 (location VARCHAR, country VARCHAR, event VARCHAR)",
        "question": "What was the location of the Havaianas Beachley Classic, held in Australia?"
    },
    {
        "answer": "SELECT venue FROM table_name_6 WHERE runner_up__average_in_final_ = \"wayne jones (94.64)\"",
        "context": "CREATE TABLE table_name_6 (venue VARCHAR, runner_up__average_in_final_ VARCHAR)",
        "question": "what is the venue when the runner-up (average in final) is wayne jones (94.64)?"
    },
    {
        "answer": "SELECT city FROM table_name_10 WHERE region = \"east\" AND venue = \"university hall (university of virginia)\"",
        "context": "CREATE TABLE table_name_10 (city VARCHAR, region VARCHAR, venue VARCHAR)",
        "question": "What city is east region venue University Hall (University of Virginia) in?"
    },
    {
        "answer": "SELECT record FROM table_name_92 WHERE attendance = \"70,604\"",
        "context": "CREATE TABLE table_name_92 (record VARCHAR, attendance VARCHAR)",
        "question": "What is the Record of the game with an Attendance of 70,604?"
    },
    {
        "answer": "SELECT margin_of_victory FROM table_name_55 WHERE tournament = \"pocono northeast classic\"",
        "context": "CREATE TABLE table_name_55 (margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "What's the margin of victory during the Pocono Northeast Classic?"
    },
    {
        "answer": "SELECT name FROM table_name_9 WHERE year > 2001 AND length = \"52 x 20 mins\"",
        "context": "CREATE TABLE table_name_9 (name VARCHAR, year VARCHAR, length VARCHAR)",
        "question": "Which Name has a Year larger than 2001, and a Length of 52 x 20 mins?"
    },
    {
        "answer": "SELECT consistency_ & _participation FROM table_name_83 WHERE pareto_efficiency = \"yes\" AND condorcet = \"no\"",
        "context": "CREATE TABLE table_name_83 (consistency_ VARCHAR, _participation VARCHAR, pareto_efficiency VARCHAR, condorcet VARCHAR)",
        "question": "what is the consistency & participation when pareto efficiency is yes and condorcet is no?"
    },
    {
        "answer": "SELECT reversal_symmetry FROM table_name_1 WHERE non_dictatorship = \"yes\" AND consistency_ & _participation = \"no\" AND clone_independence = \"yes\"",
        "context": "CREATE TABLE table_name_1 (reversal_symmetry VARCHAR, clone_independence VARCHAR, non_dictatorship VARCHAR, consistency_ VARCHAR, _participation VARCHAR)",
        "question": "what is the reversal symmetry when non-dictatorship is yes, consistency & participation is no, and clone independence is yes?"
    },
    {
        "answer": "SELECT military_and_or_civilian_wounded FROM table_name_39 WHERE civilian_deaths = \"unknown\" AND total_deaths__not_including_foreigners_ = \"unknown\"",
        "context": "CREATE TABLE table_name_39 (military_and_or_civilian_wounded VARCHAR, civilian_deaths VARCHAR, total_deaths__not_including_foreigners_ VARCHAR)",
        "question": "How many military or civilians were wounded in the conflict that had an unknown number of civilian and total deaths?"
    },
    {
        "answer": "SELECT servedby FROM table_name_1 WHERE local_authority_[a_] = \"thurrock\" AND station = \"ockendon\"",
        "context": "CREATE TABLE table_name_1 (servedby VARCHAR, station VARCHAR, local_authority_ VARCHAR, a_ VARCHAR)",
        "question": "Which Servedby has a Local authority [a ] of thurrock, and a Station of ockendon?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_name_44 WHERE tournament = \"puebla\"",
        "context": "CREATE TABLE table_name_44 (opponents_in_the_final VARCHAR, tournament VARCHAR)",
        "question": "What is the Opponents from the final with a Tournament that is puebla?"
    },
    {
        "answer": "SELECT SUM(bronze) FROM table_name_28 WHERE silver = 0 AND rank = \"1\" AND nation = \"brazil (bra)\" AND gold < 2",
        "context": "CREATE TABLE table_name_28 (bronze INTEGER, gold VARCHAR, nation VARCHAR, silver VARCHAR, rank VARCHAR)",
        "question": "What is the total bronze medals when the silver medals is 0, and 1 is the rank, Brazil (BRA) is the nation, and the gold medals is less than 2?"
    },
    {
        "answer": "SELECT content FROM table_name_94 WHERE country = \"united kingdom\" AND television_service = \"ewtn\"",
        "context": "CREATE TABLE table_name_94 (content VARCHAR, country VARCHAR, television_service VARCHAR)",
        "question": "What is the content of the television service ewtn in the United Kingdom?"
    },
    {
        "answer": "SELECT japanese_title FROM table_name_42 WHERE tv_station = \"ntv\" AND romaji_title = \"kuitan 2\"",
        "context": "CREATE TABLE table_name_42 (japanese_title VARCHAR, tv_station VARCHAR, romaji_title VARCHAR)",
        "question": "What is the Japanese Title of the Episode on NTV Station with a Romaji Title of Kuitan 2?"
    },
    {
        "answer": "SELECT package_option FROM table_name_68 WHERE content = \"religione\" AND country = \"italy\"",
        "context": "CREATE TABLE table_name_68 (package_option VARCHAR, content VARCHAR, country VARCHAR)",
        "question": "What is the package/option in Italy when the content is religione?"
    },
    {
        "answer": "SELECT average_ratings FROM table_name_32 WHERE episodes = \"11\" AND tv_station = \"fuji tv\" AND japanese_title = \"\u30d7\u30ed\u30dd\u30fc\u30ba\u5927\u4f5c\u6226\"",
        "context": "CREATE TABLE table_name_32 (average_ratings VARCHAR, japanese_title VARCHAR, episodes VARCHAR, tv_station VARCHAR)",
        "question": "What are the Ratings of Japanese Title \u30d7\u30ed\u30dd\u30fc\u30ba\u5927\u4f5c\u6226 episode 11 on Fuji TV station?"
    },
    {
        "answer": "SELECT MAX(bronze) FROM table_name_78 WHERE gold < 1 AND rank = \"17\" AND nation = \"china\"",
        "context": "CREATE TABLE table_name_78 (bronze INTEGER, nation VARCHAR, gold VARCHAR, rank VARCHAR)",
        "question": "Which Bronze has a Gold smaller than 1, and a Rank of 17, and a Nation of china?"
    },
    {
        "answer": "SELECT manufacturer FROM table_name_22 WHERE year_made = \"4-6-0 \u2014 ooooo \u2014 ten-wheeler\"",
        "context": "CREATE TABLE table_name_22 (manufacturer VARCHAR, year_made VARCHAR)",
        "question": "Which manufacturer has a year made of 4-6-0 \u2014 ooooo \u2014 ten-wheeler?"
    },
    {
        "answer": "SELECT player FROM table_name_72 WHERE score < 66 AND place = \"t2\" AND country = \"united states\"",
        "context": "CREATE TABLE table_name_72 (player VARCHAR, country VARCHAR, score VARCHAR, place VARCHAR)",
        "question": "What player has a score less than 66, and a Place of t2, in the United States?"
    },
    {
        "answer": "SELECT AVG(season) FROM table_name_64 WHERE venue = \"circuit de nevers magny-cours\" AND drivers > 30",
        "context": "CREATE TABLE table_name_64 (season INTEGER, venue VARCHAR, drivers VARCHAR)",
        "question": "What is the average Season when the venue was circuit de nevers magny-cours, and Drivers was more than 30?"
    },
    {
        "answer": "SELECT AVG(percentage) FROM table_name_80 WHERE wins > 0 AND points_against > 481 AND losses = 8 AND points_for > 826",
        "context": "CREATE TABLE table_name_80 (percentage INTEGER, points_for VARCHAR, losses VARCHAR, wins VARCHAR, points_against VARCHAR)",
        "question": "What is the average Percentage when there are more than 0 wins, Points Against is more than 481, Losses of 8, and a Points For larger than 826?"
    },
    {
        "answer": "SELECT MAX(bronze) FROM table_name_49 WHERE total > 1 AND rank > 1 AND gold > 1",
        "context": "CREATE TABLE table_name_49 (bronze INTEGER, gold VARCHAR, total VARCHAR, rank VARCHAR)",
        "question": "What is the most number of Bronze medals won among the countries that have won more than 1 medal, more than 1 gold medal, and have a rank bigger than 1?"
    },
    {
        "answer": "SELECT county FROM table_name_74 WHERE latitude > 48.581299 AND ansi_code > 1037103 AND geo_id = 3801985060",
        "context": "CREATE TABLE table_name_74 (county VARCHAR, geo_id VARCHAR, latitude VARCHAR, ansi_code VARCHAR)",
        "question": "what is the county when the latitude is more than 48.581299, ansi code is more than 1037103 and the geo id is 3801985060?"
    },
    {
        "answer": "SELECT result FROM table_name_40 WHERE competition = \"south american championship\" AND date = \"december 13, 1925\"",
        "context": "CREATE TABLE table_name_40 (result VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "What was the score for the South American Championship dated December 13, 1925?"
    },
    {
        "answer": "SELECT l3_cache FROM table_name_88 WHERE sspec_number = \"sr0r2(l1)sr0t6(l1)\"",
        "context": "CREATE TABLE table_name_88 (l3_cache VARCHAR, sspec_number VARCHAR)",
        "question": "What is the l3 cache when the sspec number is sr0r2(l1)sr0t6(l1)?"
    },
    {
        "answer": "SELECT proto_austronesian FROM table_name_53 WHERE proto_polynesian = \"*tui\"",
        "context": "CREATE TABLE table_name_53 (proto_austronesian VARCHAR, proto_polynesian VARCHAR)",
        "question": "What is the Proto-Austronesian word for the Proto-Polynesian word *tui?"
    },
    {
        "answer": "SELECT year_joined FROM table_name_63 WHERE enrollment < 438 AND ihsaa_class = \"aa\"",
        "context": "CREATE TABLE table_name_63 (year_joined VARCHAR, enrollment VARCHAR, ihsaa_class VARCHAR)",
        "question": "What year joined had an enrollment less than 438 and an AA as the IHSAA Class?"
    },
    {
        "answer": "SELECT coverage_area FROM table_name_65 WHERE genre = \"music\" AND station = \"muzik fm\"",
        "context": "CREATE TABLE table_name_65 (coverage_area VARCHAR, genre VARCHAR, station VARCHAR)",
        "question": "What is the coverage area of muzik fm station, which has a music genre?"
    },
    {
        "answer": "SELECT date FROM table_name_39 WHERE week > 3 AND attendance = \"bye\"",
        "context": "CREATE TABLE table_name_39 (date VARCHAR, week VARCHAR, attendance VARCHAR)",
        "question": "What is the Date when the week is more than 3 and the attendance shows bye?"
    },
    {
        "answer": "SELECT result FROM table_name_33 WHERE week > 9 AND attendance = \"65,858\"",
        "context": "CREATE TABLE table_name_33 (result VARCHAR, week VARCHAR, attendance VARCHAR)",
        "question": "What is the Result when the week is later than 9, and there are 65,858 people in attendance?"
    },
    {
        "answer": "SELECT record FROM table_name_15 WHERE event = \"3000 m\"",
        "context": "CREATE TABLE table_name_15 (record VARCHAR, event VARCHAR)",
        "question": "What is the Record of the 3000 M?"
    },
    {
        "answer": "SELECT club_province FROM table_name_44 WHERE caps > 9 AND player = \"ben franks\"",
        "context": "CREATE TABLE table_name_44 (club_province VARCHAR, caps VARCHAR, player VARCHAR)",
        "question": "Which club/province has more than 9 caps and Ben Franks as a player?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_name_4 WHERE manner_of_departure = \"contract terminated\" AND position_in_table = \"23rd\" AND date_of_appointment = \"31 december 2008\"",
        "context": "CREATE TABLE table_name_4 (date_of_vacancy VARCHAR, date_of_appointment VARCHAR, manner_of_departure VARCHAR, position_in_table VARCHAR)",
        "question": "what is the date of vacancy when the manner of departure is contract terminated, the position in table is 23rd and the date of appointment is 31 december 2008?"
    },
    {
        "answer": "SELECT MAX(population) FROM table_name_34 WHERE median_household_income = \"$32,902\" AND number_of_households < 11 OFFSET 125",
        "context": "CREATE TABLE table_name_34 (population INTEGER, median_household_income VARCHAR, number_of_households VARCHAR)",
        "question": "What is the highest Population that has a Median household income of $32,902 with a number of households less than 11,125"
    },
    {
        "answer": "SELECT genre FROM table_name_17 WHERE game_modes = \"single-player\" AND chinese_title = \"\u6478\u6478\u74e6\u529b\u6b27\u5236\u9020\"",
        "context": "CREATE TABLE table_name_17 (genre VARCHAR, game_modes VARCHAR, chinese_title VARCHAR)",
        "question": "What is the genre of the Chinese title \u6478\u6478\u74e6\u529b\u6b27\u5236\u9020, which has a single-player game mode?"
    },
    {
        "answer": "SELECT western_title FROM table_name_56 WHERE genre = \"puzzle\"",
        "context": "CREATE TABLE table_name_56 (western_title VARCHAR, genre VARCHAR)",
        "question": "What is the western title for the puzzle genre?"
    },
    {
        "answer": "SELECT stage AS winner FROM table_name_99 WHERE stage > 10 AND yellow_jersey = \"joseph planckaert\"",
        "context": "CREATE TABLE table_name_99 (stage VARCHAR, yellow_jersey VARCHAR)",
        "question": "Who was the stage winner when the stage was more than 10 and yellow jersey was Joseph Planckaert?"
    },
    {
        "answer": "SELECT republican_ticket FROM table_name_32 WHERE communist_ticket = \"elizabeth gurley flynn\"",
        "context": "CREATE TABLE table_name_32 (republican_ticket VARCHAR, communist_ticket VARCHAR)",
        "question": "Who's the Republican ticket with a Communist ticket of elizabeth gurley flynn?"
    },
    {
        "answer": "SELECT republican_ticket FROM table_name_62 WHERE democratic_ticket = \"flora d. johnson\"",
        "context": "CREATE TABLE table_name_62 (republican_ticket VARCHAR, democratic_ticket VARCHAR)",
        "question": "Who's the Republican ticket with a Democratic ticket of flora d. johnson?"
    },
    {
        "answer": "SELECT republican_ticket FROM table_name_8 WHERE communist_ticket = \"(none)\" AND socialist_ticket = \"joseph g. glass\"",
        "context": "CREATE TABLE table_name_8 (republican_ticket VARCHAR, communist_ticket VARCHAR, socialist_ticket VARCHAR)",
        "question": "Who's the Republican ticket with a Communist ticket of (none), and a Socialist ticket of joseph g. glass?"
    },
    {
        "answer": "SELECT to_par FROM table_name_21 WHERE country = \"united states\" AND total = 145 AND year_s__won = \"2004\"",
        "context": "CREATE TABLE table_name_21 (to_par VARCHAR, year_s__won VARCHAR, country VARCHAR, total VARCHAR)",
        "question": "What is the To par  of the United States, when the Total was 145, in 2004?"
    },
    {
        "answer": "SELECT COUNT(television_channels) FROM table_23143607_1 WHERE radio_stations = \"Radio Nou Si Radio Radio Nou M\u00fasica\"",
        "context": "CREATE TABLE table_23143607_1 (television_channels VARCHAR, radio_stations VARCHAR)",
        "question": "If the radio stations is radio nou si radio radio nou m\u00fasica; what were the total number of television channels?"
    },
    {
        "answer": "SELECT MIN(tally) FROM table_name_9 WHERE venue = \"vasil levski national stadium, sofia, bulgaria\"",
        "context": "CREATE TABLE table_name_9 (tally INTEGER, venue VARCHAR)",
        "question": "What is the fewest tally for the game played at Vasil Levski National Stadium, Sofia, Bulgaria?"
    },
    {
        "answer": "SELECT date FROM table_name_45 WHERE athlete = \"yelena isinbayeva\" AND record = \"4.90m(16ft0\u00bein)\"",
        "context": "CREATE TABLE table_name_45 (date VARCHAR, athlete VARCHAR, record VARCHAR)",
        "question": "What is the Date when yelena isinbayeva was the Athlete, with a Record of 4.90m(16ft0\u00bein)?"
    },
    {
        "answer": "SELECT COUNT(vuelta_wins) FROM table_name_67 WHERE points > 0 AND country = \"spain\" AND name = \"jos\u00e9 p\u00e9rez-franc\u00e9s\"",
        "context": "CREATE TABLE table_name_67 (vuelta_wins VARCHAR, name VARCHAR, points VARCHAR, country VARCHAR)",
        "question": "How many times is vuelta wins when points is more than 0, country is spain and the name is jos\u00e9 p\u00e9rez-franc\u00e9s?"
    },
    {
        "answer": "SELECT reserved_for___sc___st__none_ FROM table_name_76 WHERE constituency_number = \"132\"",
        "context": "CREATE TABLE table_name_76 (reserved_for___sc___st__none_ VARCHAR, constituency_number VARCHAR)",
        "question": "What is the reserved for value for constituency number 132?"
    },
    {
        "answer": "SELECT MAX(against) FROM table_name_62 WHERE difference = \"58\" AND played > 22",
        "context": "CREATE TABLE table_name_62 (against INTEGER, difference VARCHAR, played VARCHAR)",
        "question": "What was the highest number of against when the difference was 58 and the total played was more than 22?"
    },
    {
        "answer": "SELECT MAX(week) FROM table_name_32 WHERE result = \"l 24\u201320\" AND opponent = \"at new england patriots\"",
        "context": "CREATE TABLE table_name_32 (week INTEGER, result VARCHAR, opponent VARCHAR)",
        "question": "In what Week has a Result of l 24\u201320, and a Opponent of at new england patriots?"
    },
    {
        "answer": "SELECT MIN(seats) FROM table_name_6 WHERE share_of_votes = \"18%\" AND share_of_seats = \"3%\" AND general_election < 1992",
        "context": "CREATE TABLE table_name_6 (seats INTEGER, general_election VARCHAR, share_of_votes VARCHAR, share_of_seats VARCHAR)",
        "question": "Which Seatshave a Share of votes of 18%, and a Share of seats of 3%, and a General election smaller than 1992?"
    },
    {
        "answer": "SELECT MAX(seats) FROM table_name_62 WHERE share_of_votes = \"18%\" AND share_of_seats = \"3%\" AND general_election > 1992",
        "context": "CREATE TABLE table_name_62 (seats INTEGER, general_election VARCHAR, share_of_votes VARCHAR, share_of_seats VARCHAR)",
        "question": "Which Seats have a Share of votes of 18%, and a Share of seats of 3%, and a General election larger than 1992?"
    },
    {
        "answer": "SELECT l2_cache FROM table_name_92 WHERE sspec_number = \"slbmm(c2)slbsr(k0)\"",
        "context": "CREATE TABLE table_name_92 (l2_cache VARCHAR, sspec_number VARCHAR)",
        "question": "What is the L2 cache with ec number of slbmm(c2)slbsr(k0)?"
    },
    {
        "answer": "SELECT frequency FROM table_name_4 WHERE i_o_bus = \"dmi\" AND voltage = \"0.725\u20131.4v\" AND part_number_s_ = \"cn80617004458ab\"",
        "context": "CREATE TABLE table_name_4 (frequency VARCHAR, part_number_s_ VARCHAR, i_o_bus VARCHAR, voltage VARCHAR)",
        "question": "What is the frequency for I/O bus of DMI, voltage of 0.725\u20131.4v and part cn80617004458ab?"
    },
    {
        "answer": "SELECT memory FROM table_name_13 WHERE release_date = \"january 2010\" AND socket = \"bga-1288\"",
        "context": "CREATE TABLE table_name_13 (memory VARCHAR, release_date VARCHAR, socket VARCHAR)",
        "question": "What is the memory when release date is January 2010 and socket is BGA-1288?"
    },
    {
        "answer": "SELECT matches FROM table_name_89 WHERE rank = 1",
        "context": "CREATE TABLE table_name_89 (matches VARCHAR, rank VARCHAR)",
        "question": "Can you tell me the Matches that has the Rank of 1?"
    },
    {
        "answer": "SELECT SUM(number) FROM table_name_65 WHERE type = \"driving van trailer\"",
        "context": "CREATE TABLE table_name_65 (number INTEGER, type VARCHAR)",
        "question": "What is the sum of numbers that had a type of Driving Van Trailer?"
    },
    {
        "answer": "SELECT location FROM table_name_21 WHERE _number___county = \"68 randolph\" AND enrollment = 316",
        "context": "CREATE TABLE table_name_21 (location VARCHAR, _number___county VARCHAR, enrollment VARCHAR)",
        "question": "What is the location with enrollment of 316 and county is 68 Randolph?"
    },
    {
        "answer": "SELECT MAX(gold) FROM table_name_42 WHERE silver < 0",
        "context": "CREATE TABLE table_name_42 (gold INTEGER, silver INTEGER)",
        "question": "What is the most gold where silver is 0?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_53 WHERE category = \"best international newcomer\"",
        "context": "CREATE TABLE table_name_53 (year VARCHAR, category VARCHAR)",
        "question": "What year had the category of best international newcomer?"
    },
    {
        "answer": "SELECT MAX(not_usable) FROM table_name_30 WHERE launch_failures > 0 AND retired < 30 AND block = \"block i\"",
        "context": "CREATE TABLE table_name_30 (not_usable INTEGER, block VARCHAR, launch_failures VARCHAR, retired VARCHAR)",
        "question": "What is the highest number of not usable satellites when there are more than 0 launch failures, less than 30 retired, and the block is I?"
    },
    {
        "answer": "SELECT general_classification FROM table_name_36 WHERE mountains_classification = \"stefano garzelli\" AND points_classification = \"danilo di luca\" AND winner = \"ignatas konovalovas\"",
        "context": "CREATE TABLE table_name_36 (general_classification VARCHAR, winner VARCHAR, mountains_classification VARCHAR, points_classification VARCHAR)",
        "question": "What's the general classification of Ignatas Konovalovas when the mountains classification was Stefano Garzelli and points classification was Danilo Di Luca?"
    },
    {
        "answer": "SELECT mountains_classification FROM table_name_26 WHERE points_classification = \"alessandro petacchi\" AND general_classification = \"danilo di luca\"",
        "context": "CREATE TABLE table_name_26 (mountains_classification VARCHAR, points_classification VARCHAR, general_classification VARCHAR)",
        "question": "What's the mountains classification when the points classification is Alessandro Petacchi and the general classification is Danilo Di Luca?"
    },
    {
        "answer": "SELECT winner FROM table_name_60 WHERE general_classification = \"danilo di luca\" AND stage = \"9\"",
        "context": "CREATE TABLE table_name_60 (winner VARCHAR, general_classification VARCHAR, stage VARCHAR)",
        "question": "Who was the winner of Stage 9 when then general classification was Danilo Di Luca?"
    },
    {
        "answer": "SELECT kickoff___et__ FROM table_name_31 WHERE opponent = \"miami dolphins\"",
        "context": "CREATE TABLE table_name_31 (kickoff___et__ VARCHAR, opponent VARCHAR)",
        "question": "What time was the kickoff when the miami dolphins were the opponent?"
    },
    {
        "answer": "SELECT SUM(place) FROM table_name_30 WHERE machine = \"yamaha\" AND speed = \"89.85mph\"",
        "context": "CREATE TABLE table_name_30 (place INTEGER, machine VARCHAR, speed VARCHAR)",
        "question": "How many places have yamaha as the machine, and 89.85mph as the speed?"
    },
    {
        "answer": "SELECT musical_guest_song_performed FROM table_name_85 WHERE original_airdate = \"january 2008\"",
        "context": "CREATE TABLE table_name_85 (musical_guest_song_performed VARCHAR, original_airdate VARCHAR)",
        "question": "What is the Musical Guest/Song with an original airdate of january 2008?"
    },
    {
        "answer": "SELECT wins FROM table_name_68 WHERE finishes < 7 AND starts > 1 AND points = 1",
        "context": "CREATE TABLE table_name_68 (wins VARCHAR, points VARCHAR, finishes VARCHAR, starts VARCHAR)",
        "question": "What is the number of wins associated with 1 point, more than 1 start, and under 7 finishes?"
    },
    {
        "answer": "SELECT acquisition_via FROM table_name_79 WHERE position = \"forward\" AND school_club_team = \"state\"",
        "context": "CREATE TABLE table_name_79 (acquisition_via VARCHAR, position VARCHAR, school_club_team VARCHAR)",
        "question": "Which acquisition via has a position of forward and is on the state school or club?"
    },
    {
        "answer": "SELECT designated_home FROM table_name_34 WHERE date = \"october 28\" AND designated_visitors = \"new england patriots\"",
        "context": "CREATE TABLE table_name_34 (designated_home VARCHAR, date VARCHAR, designated_visitors VARCHAR)",
        "question": "Who was the home team on October 28 when the new england patriots were the visitors?"
    },
    {
        "answer": "SELECT designated_visitors FROM table_name_42 WHERE designated_home = \"atlanta falcons\"",
        "context": "CREATE TABLE table_name_42 (designated_visitors VARCHAR, designated_home VARCHAR)",
        "question": "Who were the visitors when the Atlanta Falcons were the home team?"
    },
    {
        "answer": "SELECT designated_home FROM table_name_53 WHERE television = \"fox\" AND year > 2007 AND date = \"october 23\"",
        "context": "CREATE TABLE table_name_53 (designated_home VARCHAR, date VARCHAR, television VARCHAR, year VARCHAR)",
        "question": "Who were the home team during the game that aired on Fox after 2007 on October 23?"
    },
    {
        "answer": "SELECT outcome FROM table_name_40 WHERE tournament = \"san diego\" AND opponent = \"ann grossman\"",
        "context": "CREATE TABLE table_name_40 (outcome VARCHAR, tournament VARCHAR, opponent VARCHAR)",
        "question": "what is the outcome when the tournament is san diego and the opponent is ann grossman?"
    },
    {
        "answer": "SELECT film FROM table_name_47 WHERE ceremony = \"19th\" AND name = \"jerome kern\"",
        "context": "CREATE TABLE table_name_47 (film VARCHAR, ceremony VARCHAR, name VARCHAR)",
        "question": "What is the Film with winner Jerome Kern in the 19th Ceremony?"
    },
    {
        "answer": "SELECT zaaps___ziips FROM table_name_36 WHERE model = \"e64\"",
        "context": "CREATE TABLE table_name_36 (zaaps___ziips VARCHAR, model VARCHAR)",
        "question": "For Model e64 what is the zAAPs/zIIPs?"
    },
    {
        "answer": "SELECT date FROM table_name_36 WHERE margin_of_victory = \"playoff\" AND tournament = \"shirley englehorn invitational\"",
        "context": "CREATE TABLE table_name_36 (date VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "What date was there a playoff on the margin of victory during the Shirley Englehorn Invitational?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_10 WHERE margin_of_victory = \"3 strokes\" AND tournament = \"lady carling open\"",
        "context": "CREATE TABLE table_name_10 (runner_s__up VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "Who is the runner(s)-up for the Lady Carling Open with 3 strokes margin of victory?"
    },
    {
        "answer": "SELECT set_2 FROM table_name_48 WHERE set_1 = \"25-23\" AND set_5 = \"17-19\"",
        "context": "CREATE TABLE table_name_48 (set_2 VARCHAR, set_1 VARCHAR, set_5 VARCHAR)",
        "question": "What is the set 2 with a 25-23 set 1 and a 17-19 set 5?"
    },
    {
        "answer": "SELECT MAX(pick) FROM table_name_13 WHERE college = \"fairmont state\" AND round > 10",
        "context": "CREATE TABLE table_name_13 (pick INTEGER, college VARCHAR, round VARCHAR)",
        "question": "Who had the high pick of the round of 10 for Fairmont State college?"
    },
    {
        "answer": "SELECT acl_qualification FROM table_name_11 WHERE finals_qualification = \"dnq\" AND minor_ladder_position = \"5th\"",
        "context": "CREATE TABLE table_name_11 (acl_qualification VARCHAR, finals_qualification VARCHAR, minor_ladder_position VARCHAR)",
        "question": "What's the ACL qualification when the minor ladder position is 5th and the finals qualifications were DNQ?"
    },
    {
        "answer": "SELECT date FROM table_name_80 WHERE location = \"michie stadium \u2022 west point, ny\"",
        "context": "CREATE TABLE table_name_80 (date VARCHAR, location VARCHAR)",
        "question": "What is the Date for the game at michie stadium \u2022 west point, ny?"
    },
    {
        "answer": "SELECT opponent_in_the_final FROM table_name_43 WHERE date = \"24 november 2008\"",
        "context": "CREATE TABLE table_name_43 (opponent_in_the_final VARCHAR, date VARCHAR)",
        "question": "Who is the opponent in the final on 24 November 2008?"
    },
    {
        "answer": "SELECT tournament FROM table_name_96 WHERE winning_score = 67 - 61 - 68 - 67 = 263",
        "context": "CREATE TABLE table_name_96 (tournament VARCHAR, winning_score VARCHAR)",
        "question": "Which tournament had a winning score of 67-61-68-67=263?"
    },
    {
        "answer": "SELECT AVG(week) FROM table_name_30 WHERE opponent = \"seattle seahawks\"",
        "context": "CREATE TABLE table_name_30 (week INTEGER, opponent VARCHAR)",
        "question": "What is the Week of the game against Seattle Seahawks?"
    },
    {
        "answer": "SELECT miss_air__1st_runner_up_ FROM table_name_35 WHERE year < 2007 AND miss_water__2nd_runner_up_ = \"catherine untalan\"",
        "context": "CREATE TABLE table_name_35 (miss_air__1st_runner_up_ VARCHAR, year VARCHAR, miss_water__2nd_runner_up_ VARCHAR)",
        "question": "Who won Miss Air (1st Runner-up) when Catherine Untalan was Miss Water (2nd Runner-up) earlier than 2007?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_86 WHERE location = \"groves stadium \u2022 winston-salem, nc\" AND result = \"l 0-14\"",
        "context": "CREATE TABLE table_name_86 (attendance VARCHAR, location VARCHAR, result VARCHAR)",
        "question": "What was the attendance for the game at groves stadium \u2022 winston-salem, nc with a result of L 0-14?"
    },
    {
        "answer": "SELECT height FROM table_name_99 WHERE locale = \"nepean sea road\" AND floors > 30 AND sr_no = 58",
        "context": "CREATE TABLE table_name_99 (height VARCHAR, sr_no VARCHAR, locale VARCHAR, floors VARCHAR)",
        "question": "what is the height when the locale is nepean sea road, floors is more than 30 and sr no is 58?"
    },
    {
        "answer": "SELECT competition_description FROM table_name_94 WHERE rank_qualifying = \"1st\" AND apparatus = \"ball\"",
        "context": "CREATE TABLE table_name_94 (competition_description VARCHAR, rank_qualifying VARCHAR, apparatus VARCHAR)",
        "question": "What competition had a Rank-Qualifying of 1st and a ball apparatus?"
    },
    {
        "answer": "SELECT MAX(tonnage) FROM table_name_13 WHERE nationality = \"great britain\" AND ship = \"newton ash\"",
        "context": "CREATE TABLE table_name_13 (tonnage INTEGER, nationality VARCHAR, ship VARCHAR)",
        "question": "What is the highest tonnage for a ship from Great Britain named Newton Ash?"
    },
    {
        "answer": "SELECT bowl_game FROM table_name_77 WHERE conference_matchups = \"ohio state vs. texas\"",
        "context": "CREATE TABLE table_name_77 (bowl_game VARCHAR, conference_matchups VARCHAR)",
        "question": "Which bowl game had a conference matchup of Ohio State vs. Texas?"
    },
    {
        "answer": "SELECT comp FROM table_name_3 WHERE score = \"489.5\"",
        "context": "CREATE TABLE table_name_3 (comp VARCHAR, score VARCHAR)",
        "question": "What is the Comp of the Shooter with a Score of 489.5?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_83 WHERE gold < 3 AND silver < 0",
        "context": "CREATE TABLE table_name_83 (total INTEGER, gold VARCHAR, silver VARCHAR)",
        "question": "What is the average total for countries with under 3 golds and 0 silvers?"
    },
    {
        "answer": "SELECT SUM(points_against) FROM table_name_37 WHERE team = \"harlequins\" AND tries_against < 8",
        "context": "CREATE TABLE table_name_37 (points_against INTEGER, team VARCHAR, tries_against VARCHAR)",
        "question": "How many Points against that have a Team of harlequins and Tries against smaller than 8?"
    },
    {
        "answer": "SELECT city_of_license FROM table_name_77 WHERE class = \"c1\" AND identifier = \"cbcd-fm\"",
        "context": "CREATE TABLE table_name_77 (city_of_license VARCHAR, class VARCHAR, identifier VARCHAR)",
        "question": "Which city has a C1 class and Identifier of CBCD-FM?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_54 WHERE heat > 3 AND nationality = \"switzerland\"",
        "context": "CREATE TABLE table_name_54 (rank INTEGER, heat VARCHAR, nationality VARCHAR)",
        "question": "What is the highest rank of an athlete from Switzerland in a heat larger than 3?"
    },
    {
        "answer": "SELECT MAX(goals) FROM table_name_29 WHERE debut_year = 1902 AND player = \"jack trehey\" AND games < 1",
        "context": "CREATE TABLE table_name_29 (goals INTEGER, games VARCHAR, debut_year VARCHAR, player VARCHAR)",
        "question": "What are the most goals listed when Jack Trehey was the player, with the listed debut year of 1902, games less than 1?"
    },
    {
        "answer": "SELECT years_at_club FROM table_name_5 WHERE goals > 0 AND debut_year > 1904 AND games > 136 AND player = \"wally johnson\"",
        "context": "CREATE TABLE table_name_5 (years_at_club VARCHAR, player VARCHAR, games VARCHAR, goals VARCHAR, debut_year VARCHAR)",
        "question": "For player Wally Johnson, with goals larger than 0, the debut year later than 1904, and games greater than 136, what were the years at club?"
    },
    {
        "answer": "SELECT japanese_title FROM table_name_67 WHERE average_ratings = \"9.1%\"",
        "context": "CREATE TABLE table_name_67 (japanese_title VARCHAR, average_ratings VARCHAR)",
        "question": "What Japanese title had average ratings at 9.1%?"
    },
    {
        "answer": "SELECT motion_picture FROM table_name_70 WHERE year > 2003 AND result = \"nominated\" AND actor = \"viola davis\" AND award = \"best supporting actress\"",
        "context": "CREATE TABLE table_name_70 (motion_picture VARCHAR, award VARCHAR, actor VARCHAR, year VARCHAR, result VARCHAR)",
        "question": "What Motion Picture after 2003 had Viola Davis nominated for Best Supporting Actress?"
    },
    {
        "answer": "SELECT MIN(week) FROM table_name_19 WHERE date = \"november 30, 2003\"",
        "context": "CREATE TABLE table_name_19 (week INTEGER, date VARCHAR)",
        "question": "What is the lowest week that has November 30, 2003 as the date?"
    },
    {
        "answer": "SELECT package_option FROM table_name_51 WHERE language = \"italian\" AND television_service = \"sky radio\"",
        "context": "CREATE TABLE table_name_51 (package_option VARCHAR, language VARCHAR, television_service VARCHAR)",
        "question": "What is Package/Option, when Language is Italian, and when Television Service is Sky Radio?"
    },
    {
        "answer": "SELECT hdtv FROM table_name_82 WHERE language = \"english\" AND television_service = \"mtv dance\"",
        "context": "CREATE TABLE table_name_82 (hdtv VARCHAR, language VARCHAR, television_service VARCHAR)",
        "question": "What is HDTV, when Language is English, and when Television Service is MTV Dance?"
    },
    {
        "answer": "SELECT part_number_s_ FROM table_name_71 WHERE l3_cache = \"8 mb\" AND sspec_number = \"sr0pl(e1)\"",
        "context": "CREATE TABLE table_name_71 (part_number_s_ VARCHAR, l3_cache VARCHAR, sspec_number VARCHAR)",
        "question": "Which Part number(s) has a L3 cache of 8 mb and a sSpec number of sr0pl(e1)?"
    },
    {
        "answer": "SELECT release_price___usd__ FROM table_name_20 WHERE gpu_frequency = \"650\u20131150 mhz\" AND sspec_number = \"sr0pq(e1)\"",
        "context": "CREATE TABLE table_name_20 (release_price___usd__ VARCHAR, gpu_frequency VARCHAR, sspec_number VARCHAR)",
        "question": "Which Release price (USD ) has a GPU frequency of 650\u20131150 mhz and a sSpec number of sr0pq(e1)?"
    },
    {
        "answer": "SELECT release_price___usd__ FROM table_name_90 WHERE release_date = \"april 2012\" AND part_number_s_ = \"cm8063701211900bx80637i73770s\"",
        "context": "CREATE TABLE table_name_90 (release_price___usd__ VARCHAR, release_date VARCHAR, part_number_s_ VARCHAR)",
        "question": "Which Release price (USD ) that has a Release date on april 2012 and a Part number(s) of cm8063701211900bx80637i73770s?"
    },
    {
        "answer": "SELECT 1999 AS _2000_team FROM table_name_93 WHERE height__cm_ < 187 AND birthplace = \"cloquet, minnesota\"",
        "context": "CREATE TABLE table_name_93 (height__cm_ VARCHAR, birthplace VARCHAR)",
        "question": "What is the 1999-2000 team, when the Height (cm) is less than 187, and when the Birthplace is Cloquet, Minnesota?"
    },
    {
        "answer": "SELECT game FROM table_name_33 WHERE platform_s_ = \"playstation 3\" AND genre = \"platform game\"",
        "context": "CREATE TABLE table_name_33 (game VARCHAR, platform_s_ VARCHAR, genre VARCHAR)",
        "question": "What game has a platform(s) of playstation 3, when the genre is platform game?"
    },
    {
        "answer": "SELECT game FROM table_name_89 WHERE genre = \"fighting\"",
        "context": "CREATE TABLE table_name_89 (game VARCHAR, genre VARCHAR)",
        "question": "When the genre is fighting what is the game?"
    },
    {
        "answer": "SELECT score FROM table_name_31 WHERE country = \"united states\" AND player = \"lucas glover\"",
        "context": "CREATE TABLE table_name_31 (score VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "What is the score for Lucas Glover of the United States?"
    },
    {
        "answer": "SELECT airline FROM table_name_51 WHERE notes = \"aoc 135\"",
        "context": "CREATE TABLE table_name_51 (airline VARCHAR, notes VARCHAR)",
        "question": "What is the Airline when the notes show aoc 135?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_38 WHERE nominated_by_the_taoiseach = 0 AND agricultural_panel > 5",
        "context": "CREATE TABLE table_name_38 (total INTEGER, nominated_by_the_taoiseach VARCHAR, agricultural_panel VARCHAR)",
        "question": "What is the average total 0 are nominated by the Taoiseach and the agricultural panel is greater than 5?"
    },
    {
        "answer": "SELECT SUM(cultural_and_educational_panel) FROM table_name_90 WHERE industrial_and_commercial_panel = 0 AND agricultural_panel > 0",
        "context": "CREATE TABLE table_name_90 (cultural_and_educational_panel INTEGER, industrial_and_commercial_panel VARCHAR, agricultural_panel VARCHAR)",
        "question": "What is the total of the cultural and educational panel when the industrial and commercial panel is 0 and the agricultural panel is greater than 0?"
    },
    {
        "answer": "SELECT tonnage FROM table_name_54 WHERE u_boats_destroyed__kuk_ = \"2\" AND ships_sunk__pola_ = \"(not recorded)\"",
        "context": "CREATE TABLE table_name_54 (tonnage VARCHAR, u_boats_destroyed__kuk_ VARCHAR, ships_sunk__pola_ VARCHAR)",
        "question": "What is the listed Tonnage that has U-boats destroyed (KuK) of 2 and Ships sunk (Pola) of (not recorded)?"
    },
    {
        "answer": "SELECT COUNT(*) FROM table_name_56 WHERE distance = \"1075km\"",
        "context": "CREATE TABLE table_name_56 (distance VARCHAR)",
        "question": "What is the number of passengers in millions that have traveled a distance of 1075km?"
    },
    {
        "answer": "SELECT termination FROM table_name_2 WHERE earpads = \"comfort pads\" AND us_msrp = \"$150\"",
        "context": "CREATE TABLE table_name_2 (termination VARCHAR, earpads VARCHAR, us_msrp VARCHAR)",
        "question": "What was the termination type for the headphones with comfort pads and selling for $150?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_32 WHERE col__m_ = 0 AND peak = \"aoraki/mount cook\" AND prominence__m_ > 3 OFFSET 755",
        "context": "CREATE TABLE table_name_32 (rank INTEGER, prominence__m_ VARCHAR, col__m_ VARCHAR, peak VARCHAR)",
        "question": "Which Rank has a Col (m) of 0, and a Peak of aoraki/mount cook, and a Prominence (m) larger than 3,755?"
    },
    {
        "answer": "SELECT young_classification FROM table_name_26 WHERE general_classification = \"christian vande velde\" AND team_classification = \"team columbia\" AND sprint_classification = \"mark cavendish\"",
        "context": "CREATE TABLE table_name_26 (young_classification VARCHAR, sprint_classification VARCHAR, general_classification VARCHAR, team_classification VARCHAR)",
        "question": "Which young classification has general classification of Christian Vande Velde for Team Columbia and Mark Cavendish?"
    },
    {
        "answer": "SELECT mountains_classification FROM table_name_80 WHERE general_classification = \"mark cavendish\" AND team_classification = \"garmin-chipotle-h30\"",
        "context": "CREATE TABLE table_name_80 (mountains_classification VARCHAR, general_classification VARCHAR, team_classification VARCHAR)",
        "question": "What mountains classification corresponds to Mark Cavendish and the Garmin-Chipotle-H30?"
    },
    {
        "answer": "SELECT stage__winner_ FROM table_name_42 WHERE sprint_classification = \"mark cavendish\" AND team_classification = \"garmin-chipotle-h30\" AND young_classification = \"mark cavendish\"",
        "context": "CREATE TABLE table_name_42 (stage__winner_ VARCHAR, young_classification VARCHAR, sprint_classification VARCHAR, team_classification VARCHAR)",
        "question": "Who was the winner for a Sprint Classification and Young Classification to Mark Cavendish and Garmin-Chipotle-H30 for team?"
    },
    {
        "answer": "SELECT turbo FROM table_name_62 WHERE part_number_s_ = \"cm8062300834302bx80623i72600bxc80623i72600\"",
        "context": "CREATE TABLE table_name_62 (turbo VARCHAR, part_number_s_ VARCHAR)",
        "question": "what is the turbo when the part number is cm8062300834302bx80623i72600bxc80623i72600?"
    },
    {
        "answer": "SELECT format FROM table_name_78 WHERE catalog = \"vcrd 103\"",
        "context": "CREATE TABLE table_name_78 (format VARCHAR, catalog VARCHAR)",
        "question": "What is the Format with a Catalog that is vcrd 103?"
    },
    {
        "answer": "SELECT gpu_model FROM table_name_8 WHERE frequency = \"3.4 ghz\" AND sspec_number = \"sr00b(d2)\"",
        "context": "CREATE TABLE table_name_8 (gpu_model VARCHAR, frequency VARCHAR, sspec_number VARCHAR)",
        "question": "what is the gpu model when the frequency is 3.4 ghz and the sspec number is sr00b(d2)?"
    },
    {
        "answer": "SELECT place_of_birth FROM table_name_7 WHERE elevator = \"nicholas iv\" AND elector = \"napoleone orsini frangipani\"",
        "context": "CREATE TABLE table_name_7 (place_of_birth VARCHAR, elevator VARCHAR, elector VARCHAR)",
        "question": "What is the place of birth when the elevator is Nicholas IV, and elector is Napoleone Orsini Frangipani?"
    },
    {
        "answer": "SELECT elevator FROM table_name_21 WHERE elevated = \"may 16, 1288\" AND cardinalatial_title = \"deacon of s. adriano\"",
        "context": "CREATE TABLE table_name_21 (elevator VARCHAR, elevated VARCHAR, cardinalatial_title VARCHAR)",
        "question": "What is the elevator when elevated is May 16, 1288, and cardinalatial title shows Deacon of S. Adriano?"
    },
    {
        "answer": "SELECT margin FROM table_name_86 WHERE match_date = \"oct 17, 2007\"",
        "context": "CREATE TABLE table_name_86 (margin VARCHAR, match_date VARCHAR)",
        "question": "What is Margin, when Match Date is Oct 17, 2007?"
    },
    {
        "answer": "SELECT place_of_birth FROM table_name_78 WHERE elevated = \"may 16, 1288\" AND cardinalatial_title = \"deacon of s. eustachio\"",
        "context": "CREATE TABLE table_name_78 (place_of_birth VARCHAR, elevated VARCHAR, cardinalatial_title VARCHAR)",
        "question": "What is the place of birth when elevated is May 16, 1288, and cardinalatial title is Deacon of S. Eustachio?"
    },
    {
        "answer": "SELECT COUNT(s_no) FROM table_name_88 WHERE margin = \"16 runs\"",
        "context": "CREATE TABLE table_name_88 (s_no VARCHAR, margin VARCHAR)",
        "question": "What is the total number of S No(s), when the Margin is 16 runs?"
    },
    {
        "answer": "SELECT catalog FROM table_name_20 WHERE format = \"lp\" AND date = \"april 12, 1968\"",
        "context": "CREATE TABLE table_name_20 (catalog VARCHAR, format VARCHAR, date VARCHAR)",
        "question": "Released on April 12, 1968 in LP format, what was the catalog?"
    },
    {
        "answer": "SELECT MAX(s_no) FROM table_name_8 WHERE match_date = \"nov 1, 2003\"",
        "context": "CREATE TABLE table_name_8 (s_no INTEGER, match_date VARCHAR)",
        "question": "What is the highest S No, when the Match Date is Nov 1, 2003?"
    },
    {
        "answer": "SELECT SUM(draws) FROM table_name_27 WHERE el_zamalek_wins < 36 AND total > 2 AND al_ahly_wins > 37",
        "context": "CREATE TABLE table_name_27 (draws INTEGER, al_ahly_wins VARCHAR, el_zamalek_wins VARCHAR, total VARCHAR)",
        "question": "What is the sum of draws for El Zamalek wins under 36, total over 2, and Al Ahly wins over 37?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_15 WHERE team = \"s\u00e3o paulo athletic\" AND position > 5",
        "context": "CREATE TABLE table_name_15 (points INTEGER, team VARCHAR, position VARCHAR)",
        "question": "Which Points has a Team of s\u00e3o paulo athletic, and a Position larger than 5?"
    },
    {
        "answer": "SELECT MAX(lane) FROM table_name_99 WHERE athlete = \"david payne\" AND time > 13.17",
        "context": "CREATE TABLE table_name_99 (lane INTEGER, athlete VARCHAR, time VARCHAR)",
        "question": "What is the greatest lane that David Payne was in when he ran longer than 13.17?"
    },
    {
        "answer": "SELECT MIN(pick) FROM table_name_13 WHERE position = \"of\" AND team = \"san francisco giants\" AND player = \"arturo mcdowell\"",
        "context": "CREATE TABLE table_name_13 (pick INTEGER, player VARCHAR, position VARCHAR, team VARCHAR)",
        "question": "What is the lowest pick number for Arturo McDowell, who plays the OF position for the San Francisco Giants?"
    },
    {
        "answer": "SELECT round_of_32 FROM table_name_10 WHERE finals = \"did not advance\" AND semifinals = \"did not advance\" AND quarterfinals = \"did not advance\" AND event = \"56kg\"",
        "context": "CREATE TABLE table_name_10 (round_of_32 VARCHAR, event VARCHAR, quarterfinals VARCHAR, finals VARCHAR, semifinals VARCHAR)",
        "question": "What's the round of 32 during the 56kg when the quarterfinals, semifinals, and finals did not advance?"
    },
    {
        "answer": "SELECT round_of_16 FROM table_name_16 WHERE event = \"69kg\"",
        "context": "CREATE TABLE table_name_16 (round_of_16 VARCHAR, event VARCHAR)",
        "question": "What's the 69kg of Round 16?"
    },
    {
        "answer": "SELECT date FROM table_name_5 WHERE title = \"homecoming\"",
        "context": "CREATE TABLE table_name_5 (date VARCHAR, title VARCHAR)",
        "question": "When did the Issue with the Title Homecoming come out?"
    },
    {
        "answer": "SELECT COUNT(place) FROM table_name_10 WHERE artist = \"rosie hunter\" AND draw > 1",
        "context": "CREATE TABLE table_name_10 (place VARCHAR, artist VARCHAR, draw VARCHAR)",
        "question": "What is the Place of the Song by Artist Rosie Hunter with a Draw of 1 or larger?"
    },
    {
        "answer": "SELECT bronze FROM table_name_65 WHERE total > 7 AND silver = 3 AND games = \"summer\" AND gold = 5",
        "context": "CREATE TABLE table_name_65 (bronze VARCHAR, gold VARCHAR, games VARCHAR, total VARCHAR, silver VARCHAR)",
        "question": "Which Bronze has a Total larger than 7 and a Silver of 3, and a Games of summer, and a Gold of 5?"
    },
    {
        "answer": "SELECT semi_final_heat_host FROM table_name_24 WHERE national_final_main_host = \"terry wogan\" AND national_final_co_host = \"gaby roslin\"",
        "context": "CREATE TABLE table_name_24 (semi_final_heat_host VARCHAR, national_final_main_host VARCHAR, national_final_co_host VARCHAR)",
        "question": "What was the host for the semi final heat, when Terry Wogan was the National Final main host, and Gaby Roslin was the National Final co-host?"
    },
    {
        "answer": "SELECT national_final_main_host FROM table_name_83 WHERE semi_final_heat_host = \"internal selection\" AND year_s_ = \"2011\"",
        "context": "CREATE TABLE table_name_83 (national_final_main_host VARCHAR, semi_final_heat_host VARCHAR, year_s_ VARCHAR)",
        "question": "What is the name of the national final main host when the semi final/heat host shows internal selection in 2011?"
    },
    {
        "answer": "SELECT national_final_co_host FROM table_name_85 WHERE national_final_main_host = \"david jacobs\" AND selection_show = \"a song for europe\" AND year_s_ = \"1966\"",
        "context": "CREATE TABLE table_name_85 (national_final_co_host VARCHAR, year_s_ VARCHAR, national_final_main_host VARCHAR, selection_show VARCHAR)",
        "question": "What is the name of the national final co host when David Jacobs was the National final main host, and the selection show was a song for europe in 1966?"
    },
    {
        "answer": "SELECT national_final_main_host FROM table_name_75 WHERE venue = \"bbc television centre\" AND selection_show = \"eurovision: your country needs you\"",
        "context": "CREATE TABLE table_name_75 (national_final_main_host VARCHAR, venue VARCHAR, selection_show VARCHAR)",
        "question": "What is the name of the national final main host at BBC Television Centre, and the selection show was Eurovision: Your Country Needs You?"
    },
    {
        "answer": "SELECT nation FROM table_name_48 WHERE year = 2012 AND competition = \"preseason\" AND result = \"w 0\u20133\"",
        "context": "CREATE TABLE table_name_48 (nation VARCHAR, result VARCHAR, year VARCHAR, competition VARCHAR)",
        "question": "What is the Nation with 2012 as the year, and a Competition of preseason, and a Result of w 0\u20133?"
    },
    {
        "answer": "SELECT competition FROM table_name_94 WHERE club = \"costa rica u-20\"",
        "context": "CREATE TABLE table_name_94 (competition VARCHAR, club VARCHAR)",
        "question": "What is the Competition when the Club was costa rica u-20?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_28 WHERE competition = \"friendly\" AND club = \"everton\"",
        "context": "CREATE TABLE table_name_28 (year INTEGER, competition VARCHAR, club VARCHAR)",
        "question": "What is the average Year when the Competition was friendly, and a Club of everton?"
    },
    {
        "answer": "SELECT total FROM table_name_31 WHERE a_score > 6.4 AND b_score < 9.025",
        "context": "CREATE TABLE table_name_31 (total VARCHAR, a_score VARCHAR, b_score VARCHAR)",
        "question": "Can you tell me the Total that has the A Score larger than 6.4, and the B Score smaller than 9.025?"
    },
    {
        "answer": "SELECT television_service FROM table_name_41 WHERE content = \"programmi per adulti 24h/24\" AND hdtv = \"no\"",
        "context": "CREATE TABLE table_name_41 (television_service VARCHAR, content VARCHAR, hdtv VARCHAR)",
        "question": "Which television service has programmi per adulti 24h/24 content and no HDTV?"
    },
    {
        "answer": "SELECT MIN(poles) FROM table_name_84 WHERE position = \"nc\" AND team = \"comtec racing\"",
        "context": "CREATE TABLE table_name_84 (poles INTEGER, position VARCHAR, team VARCHAR)",
        "question": "What is the lowest poles of team comtec racing, which has a nc position?"
    },
    {
        "answer": "SELECT date FROM table_name_21 WHERE saros > 124 AND type = \"total\" AND magnitude > 1.0535 AND time__greatest_ = \"20:55:28\"",
        "context": "CREATE TABLE table_name_21 (date VARCHAR, time__greatest_ VARCHAR, magnitude VARCHAR, saros VARCHAR, type VARCHAR)",
        "question": "what is the date when saros is more than 124, the type is total, the magnitude is more than 1.0535 and the time (greatest) is 20:55:28?"
    },
    {
        "answer": "SELECT SUM(member) FROM table_name_11 WHERE saros > 127 AND gamma < 1.1508 AND magnitude = 0.742",
        "context": "CREATE TABLE table_name_11 (member INTEGER, magnitude VARCHAR, saros VARCHAR, gamma VARCHAR)",
        "question": "what is the sum of the member when the saros is more than 127, gamma is less than 1.1508 and the magnitude is 0.742?"
    },
    {
        "answer": "SELECT MIN(draws) FROM table_name_94 WHERE ballarat_fl = \"sunbury\" AND byes > 2",
        "context": "CREATE TABLE table_name_94 (draws INTEGER, ballarat_fl VARCHAR, byes VARCHAR)",
        "question": "What was the lowest draw from Ballarat FL of sunbury, and byes larger than 2?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_66 WHERE result = \"nominated\" AND series = \"room 222\"",
        "context": "CREATE TABLE table_name_66 (year VARCHAR, result VARCHAR, series VARCHAR)",
        "question": "What year gave a nominated result for the room 222 series?"
    },
    {
        "answer": "SELECT series FROM table_name_82 WHERE year < 1993 AND actor = \"teresa graves\"",
        "context": "CREATE TABLE table_name_82 (series VARCHAR, year VARCHAR, actor VARCHAR)",
        "question": "What was actor Teresa Graves's series before the year 1993?"
    },
    {
        "answer": "SELECT a_league FROM table_name_7 WHERE saves = 39",
        "context": "CREATE TABLE table_name_7 (a_league VARCHAR, saves VARCHAR)",
        "question": "What is the A-league with 39 saves?"
    },
    {
        "answer": "SELECT AVG(2008) FROM table_name_74 WHERE airport = \"julius nyerere international airport\"",
        "context": "CREATE TABLE table_name_74 (airport VARCHAR)",
        "question": "Which 2008 has an Airport of julius nyerere international airport?"
    },
    {
        "answer": "SELECT capacity FROM table_name_95 WHERE opened < 1937 AND region = \"champagne-ardenne\"",
        "context": "CREATE TABLE table_name_95 (capacity VARCHAR, opened VARCHAR, region VARCHAR)",
        "question": "What capacity opened lessed than 1937 and is located in the region of champagne-ardenne?"
    },
    {
        "answer": "SELECT result FROM table_name_78 WHERE director = \"mirza idrizovi\u0107 category:articles with hcards\"",
        "context": "CREATE TABLE table_name_78 (result VARCHAR, director VARCHAR)",
        "question": "What is Result, when Director is Mirza Idrizovi\u0107 category:articles with hcards?"
    },
    {
        "answer": "SELECT result FROM table_name_46 WHERE director = \"veljko bulaji\u0107 category:articles with hcards\" AND original_title = \"sarajevski atentat\"",
        "context": "CREATE TABLE table_name_46 (result VARCHAR, director VARCHAR, original_title VARCHAR)",
        "question": "What is Result, when Director is Veljko Bulaji\u0107 category:articles with hcards, and when Original title is Sarajevski Atentat?"
    },
    {
        "answer": "SELECT original_title FROM table_name_35 WHERE director = \"veljko bulaji\u0107 category:articles with hcards\" AND film_title_used_in_nomination = \"train without a timetable\"",
        "context": "CREATE TABLE table_name_35 (original_title VARCHAR, director VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What is Original title, when Director is Veljko Bulaji\u0107 category:articles with hcards, and when Film title used in nomination is Train Without A Timetable?"
    },
    {
        "answer": "SELECT MIN(losses) FROM table_name_64 WHERE club = \"south warrnambool\" AND wins > 8",
        "context": "CREATE TABLE table_name_64 (losses INTEGER, club VARCHAR, wins VARCHAR)",
        "question": "When South warrnambool has more than 8 wins, what is the least amount of losses?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_name_25 WHERE score = \"l 108\u2013114 (ot)\"",
        "context": "CREATE TABLE table_name_25 (high_rebounds VARCHAR, score VARCHAR)",
        "question": "What is the name of the player with the High rebounds when there was a Score of l 108\u2013114 (ot)?"
    },
    {
        "answer": "SELECT season FROM table_name_63 WHERE lead = \"don bartlett\" AND third = \"don walchuk\" AND second = \"carter rycroft\"",
        "context": "CREATE TABLE table_name_63 (season VARCHAR, second VARCHAR, lead VARCHAR, third VARCHAR)",
        "question": "What is the Season when the Lead was don bartlett, and the third was don walchuk, and a Second of carter rycroft?"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_79 WHERE lane = 1",
        "context": "CREATE TABLE table_name_79 (rank INTEGER, lane VARCHAR)",
        "question": "What is the average rank of a swimmer in lane 1?"
    },
    {
        "answer": "SELECT score FROM table_name_38 WHERE country = \"united states\" AND place = \"t3\" AND player = \"chris riley\"",
        "context": "CREATE TABLE table_name_38 (score VARCHAR, player VARCHAR, country VARCHAR, place VARCHAR)",
        "question": "What is the Score, when the Country is United States, when the Place is T3, and when the Player is Chris Riley?"
    },
    {
        "answer": "SELECT tournament FROM table_name_35 WHERE date = \"13 november 2000\"",
        "context": "CREATE TABLE table_name_35 (tournament VARCHAR, date VARCHAR)",
        "question": "What is the name of the tournament played 13 November 2000?"
    },
    {
        "answer": "SELECT bronze FROM table_name_27 WHERE gold < 39 AND silver = 3 AND rank < 35 AND nation = \"spain\"",
        "context": "CREATE TABLE table_name_27 (bronze VARCHAR, nation VARCHAR, rank VARCHAR, gold VARCHAR, silver VARCHAR)",
        "question": "What's the bronze medal count of Spain that has less than 39 Gold, 3 silver, and a rank better than 35?"
    },
    {
        "answer": "SELECT country FROM table_name_88 WHERE place = \"t6\" AND player = \"sean o'hair\"",
        "context": "CREATE TABLE table_name_88 (country VARCHAR, place VARCHAR, player VARCHAR)",
        "question": "What country has t6 as the place, with sean o'hair as the player?"
    },
    {
        "answer": "SELECT SUM(week) FROM table_name_66 WHERE attendance = \"67,968\"",
        "context": "CREATE TABLE table_name_66 (week INTEGER, attendance VARCHAR)",
        "question": "What is the sum of Week when there were 67,968 people in attendance?"
    },
    {
        "answer": "SELECT MIN(water__sqmi_) FROM table_name_13 WHERE county = \"benson\" AND ansi_code < 1759243",
        "context": "CREATE TABLE table_name_13 (water__sqmi_ INTEGER, county VARCHAR, ansi_code VARCHAR)",
        "question": "Which Water (sqmi) has a County of benson, and an ANSI code smaller than 1759243?"
    },
    {
        "answer": "SELECT AVG(pop__2010_) FROM table_name_21 WHERE ansi_code < 1036864 AND longitude > -98.46611 AND land___sqmi__ < 36.238 AND latitude < 48.144102",
        "context": "CREATE TABLE table_name_21 (pop__2010_ INTEGER, latitude VARCHAR, land___sqmi__ VARCHAR, ansi_code VARCHAR, longitude VARCHAR)",
        "question": "Which Pop (2010) has an ANSI code smaller than 1036864, and a Longitude larger than -98.46611, and a Land (sqmi) smaller than 36.238, and a Latitude smaller than 48.144102?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_87 WHERE performer = \"se\u00e1n monaghan\" AND draw < 7",
        "context": "CREATE TABLE table_name_87 (points INTEGER, performer VARCHAR, draw VARCHAR)",
        "question": "Which Points have a Performer of se\u00e1n monaghan and a Draw smaller than 7?"
    },
    {
        "answer": "SELECT actor FROM table_name_47 WHERE soap_opera = \"onderweg naar morgen\" AND character = \"aafke couwenberg\"",
        "context": "CREATE TABLE table_name_47 (actor VARCHAR, soap_opera VARCHAR, character VARCHAR)",
        "question": "What actor has onderweg naar morgen, as the soap opera, with aafke couwenberg as the character?"
    },
    {
        "answer": "SELECT home_team FROM table_name_34 WHERE away_team = \"ipswich town\"",
        "context": "CREATE TABLE table_name_34 (home_team VARCHAR, away_team VARCHAR)",
        "question": "who is the home team when the away team is ipswich town?"
    },
    {
        "answer": "SELECT result FROM table_name_41 WHERE nfl_recap = \"recap\" AND game_site = \"bank of america stadium\"",
        "context": "CREATE TABLE table_name_41 (result VARCHAR, nfl_recap VARCHAR, game_site VARCHAR)",
        "question": "What is the Result with an NFL Recap, played at bank of america stadium?"
    },
    {
        "answer": "SELECT COUNT(sales) FROM table_name_49 WHERE rank < 6 AND certification = \"2x platinum\" AND peak_position = \"2\"",
        "context": "CREATE TABLE table_name_49 (sales VARCHAR, peak_position VARCHAR, rank VARCHAR, certification VARCHAR)",
        "question": "how many times is the rank less than 6, certification 2x platinum and the peak position 2?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_82 WHERE peak_position = \"2\" AND certification = \"platinum\" AND album = \"my december\"",
        "context": "CREATE TABLE table_name_82 (rank INTEGER, album VARCHAR, peak_position VARCHAR, certification VARCHAR)",
        "question": "what is the lowest rank when the peak position is 2, certification is platinum and the album is my december?"
    },
    {
        "answer": "SELECT COUNT(sales) FROM table_name_88 WHERE artist = \"kelly clarkson\"",
        "context": "CREATE TABLE table_name_88 (sales VARCHAR, artist VARCHAR)",
        "question": "What is the sales when the artist is kelly clarkson?"
    },
    {
        "answer": "SELECT rank FROM table_name_85 WHERE album = \"sean kingston\"",
        "context": "CREATE TABLE table_name_85 (rank VARCHAR, album VARCHAR)",
        "question": "what is the rank when the album is sean kingston?"
    },
    {
        "answer": "SELECT liberal FROM table_name_36 WHERE polling_firm = \"corporate research associates\" AND prog_cons = \"32%\" AND dates = \"august 2007\"",
        "context": "CREATE TABLE table_name_36 (liberal VARCHAR, dates VARCHAR, polling_firm VARCHAR, prog_cons VARCHAR)",
        "question": "According to the August 2007 poll by the Corporate Research Associates that reported 32% Prog. Cons., what percentage aligned with the Liberal party?"
    },
    {
        "answer": "SELECT liberal FROM table_name_37 WHERE new_democratic = \"36%\" AND dates = \"august 2008\"",
        "context": "CREATE TABLE table_name_37 (liberal VARCHAR, new_democratic VARCHAR, dates VARCHAR)",
        "question": "According to the August 2008 poll that reported 36% New Demcratic, what percentage aligned with the Liberal party?"
    },
    {
        "answer": "SELECT AVG(staterooms) FROM table_name_28 WHERE guests > 210",
        "context": "CREATE TABLE table_name_28 (staterooms INTEGER, guests INTEGER)",
        "question": "What is the number of staterooms when guests was larger than 210?"
    },
    {
        "answer": "SELECT AVG(guests) FROM table_name_46 WHERE ship_name = \"viking ingvar\" AND year_built < 1990",
        "context": "CREATE TABLE table_name_46 (guests INTEGER, ship_name VARCHAR, year_built VARCHAR)",
        "question": "What is the number of guests for the Viking Ingvar, built earlier than 1990?"
    },
    {
        "answer": "SELECT date FROM table_name_9 WHERE label = \"dos or die recordings\"",
        "context": "CREATE TABLE table_name_9 (date VARCHAR, label VARCHAR)",
        "question": "What is the date of the label Dos or Die Recordings?"
    },
    {
        "answer": "SELECT winners FROM table_name_90 WHERE runners_up = \"united states\" AND venue = \"st. germain golf club\"",
        "context": "CREATE TABLE table_name_90 (winners VARCHAR, runners_up VARCHAR, venue VARCHAR)",
        "question": "What is the Winners when the United States is the runner-up at st. germain golf club?"
    },
    {
        "answer": "SELECT episode FROM table_name_10 WHERE nominee_s_ = \"gary murphy and neil thompson\" AND year = 2003",
        "context": "CREATE TABLE table_name_10 (episode VARCHAR, nominee_s_ VARCHAR, year VARCHAR)",
        "question": "Which episode in year 2003 that have Gary Murphy and Neil Thompson?"
    },
    {
        "answer": "SELECT result FROM table_name_37 WHERE award = \"drama desk award\" AND nominee = \"tom hewitt\"",
        "context": "CREATE TABLE table_name_37 (result VARCHAR, award VARCHAR, nominee VARCHAR)",
        "question": "What was the result of the Award of Drama desk award nominee Tom Hewitt."
    },
    {
        "answer": "SELECT COUNT(fa_cup_goals) FROM table_name_41 WHERE name = \"jimmy nicholson\" AND league_cup_goals > 0",
        "context": "CREATE TABLE table_name_41 (fa_cup_goals VARCHAR, name VARCHAR, league_cup_goals VARCHAR)",
        "question": "How many FA cup goals have Jimmy Nicholson as the name, and league cup goals greater than 0?"
    },
    {
        "answer": "SELECT points_against___tests__ FROM table_name_16 WHERE year_s_ = 2001 AND games_won___tests__ = \"5 (3)\"",
        "context": "CREATE TABLE table_name_16 (points_against___tests__ VARCHAR, year_s_ VARCHAR, games_won___tests__ VARCHAR)",
        "question": "What are the points against for 2001, and games won of 5 (3)?"
    },
    {
        "answer": "SELECT points_against___tests__ FROM table_name_16 WHERE year_s_ = 2000 AND games_won___tests__ = \"4 (1)\"",
        "context": "CREATE TABLE table_name_16 (points_against___tests__ VARCHAR, year_s_ VARCHAR, games_won___tests__ VARCHAR)",
        "question": "What are the points against for 2000, when games won is 4 (1)?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_6 WHERE accolade = \"50 best albums of the year\" AND rank = \"#3\"",
        "context": "CREATE TABLE table_name_6 (year INTEGER, accolade VARCHAR, rank VARCHAR)",
        "question": "How many years have an accolade of 50 best albums of the year, with #3 as the rank?"
    },
    {
        "answer": "SELECT games_lost___tests__ FROM table_name_73 WHERE games_played___tests__ = \"2\" AND year_s_ < 1999 AND points_for___tests__ = \"24\"",
        "context": "CREATE TABLE table_name_73 (games_lost___tests__ VARCHAR, points_for___tests__ VARCHAR, games_played___tests__ VARCHAR, year_s_ VARCHAR)",
        "question": "What is the games lost when games played was 2, year was earlier than 1999, and points for was 24?"
    },
    {
        "answer": "SELECT the_tradition FROM table_name_14 WHERE year > 1998 AND senior_players_championship = \"mark o'meara\"",
        "context": "CREATE TABLE table_name_14 (the_tradition VARCHAR, year VARCHAR, senior_players_championship VARCHAR)",
        "question": "When Mark O'meara was the senior player champion in a year greater than 1998, who was the tradition?"
    },
    {
        "answer": "SELECT japanese_title FROM table_name_24 WHERE romaji_title = \"atsu-hime\"",
        "context": "CREATE TABLE table_name_24 (japanese_title VARCHAR, romaji_title VARCHAR)",
        "question": "What's the Japanese title when the Romaji Title was Atsu-Hime?"
    },
    {
        "answer": "SELECT location FROM table_name_68 WHERE position_in_2012_13 = \"13th, third division\"",
        "context": "CREATE TABLE table_name_68 (location VARCHAR, position_in_2012_13 VARCHAR)",
        "question": "When the position in 2012-13 is 13th, third division what is the location?"
    },
    {
        "answer": "SELECT MAX(week) FROM table_name_17 WHERE points_for > 19 AND opponent = \"philadelphia eagles\" AND points_against > 7",
        "context": "CREATE TABLE table_name_17 (week INTEGER, points_against VARCHAR, points_for VARCHAR, opponent VARCHAR)",
        "question": "Which Week has Points For larger than 19, and an Opponent of philadelphia eagles, and Points Against larger than 7?"
    },
    {
        "answer": "SELECT MAX(league) AS Cup FROM table_name_18 WHERE fa_cup = 5 AND club = \"boston united\" AND league < 16",
        "context": "CREATE TABLE table_name_18 (league INTEGER, fa_cup VARCHAR, club VARCHAR)",
        "question": "Which League Cup has a FA Cup of 5, and a Club of boston united, and a League smaller than 16?"
    },
    {
        "answer": "SELECT club FROM table_name_27 WHERE position_in_2012_13 = \"4th, second division\"",
        "context": "CREATE TABLE table_name_27 (club VARCHAR, position_in_2012_13 VARCHAR)",
        "question": "When the position in 2012-23 is 4th, second division what is the club?"
    },
    {
        "answer": "SELECT location FROM table_name_2 WHERE home_ground = \"n/a\" AND position_in_2012_13 = \"13th, third division\"",
        "context": "CREATE TABLE table_name_2 (location VARCHAR, home_ground VARCHAR, position_in_2012_13 VARCHAR)",
        "question": "What location has a home ground of n/a, and position in 2012-13 of 13th, third division?"
    },
    {
        "answer": "SELECT location FROM table_name_84 WHERE name = \"zhongornis\"",
        "context": "CREATE TABLE table_name_84 (location VARCHAR, name VARCHAR)",
        "question": "Where has a Name of zhongornis?"
    },
    {
        "answer": "SELECT COUNT(number_of_electorates__2009_) FROM table_name_94 WHERE district = \"sheopur\" AND constituency_number = \"1\"",
        "context": "CREATE TABLE table_name_94 (number_of_electorates__2009_ VARCHAR, district VARCHAR, constituency_number VARCHAR)",
        "question": "Which Number of electorates (2009) has a District of sheopur, and a Constituency number of 1?"
    },
    {
        "answer": "SELECT name FROM table_name_96 WHERE reserved_for___sc___st__none_ = \"none\" AND constituency_number = \"7\"",
        "context": "CREATE TABLE table_name_96 (name VARCHAR, reserved_for___sc___st__none_ VARCHAR, constituency_number VARCHAR)",
        "question": "Which Name has a Reserved for of none, and a Constituency number of 7?"
    },
    {
        "answer": "SELECT week FROM table_name_59 WHERE date = \"december 21, 2003\"",
        "context": "CREATE TABLE table_name_59 (week VARCHAR, date VARCHAR)",
        "question": "Which week was the December 21, 2003 game?"
    },
    {
        "answer": "SELECT record FROM table_name_72 WHERE arena = \"arrowhead pond of anaheim\" AND opponent = \"sharks\"",
        "context": "CREATE TABLE table_name_72 (record VARCHAR, arena VARCHAR, opponent VARCHAR)",
        "question": "What was the record after the game against the Sharks at Arrowhead Pond of Anaheim?"
    },
    {
        "answer": "SELECT MIN(mpg_us_combined) FROM table_name_90 WHERE green_rating = \"e\" AND mpg_uk_combined < 42.2 AND manufacturer = \"volkswagen\" AND transmission = \"m6\"",
        "context": "CREATE TABLE table_name_90 (mpg_us_combined INTEGER, transmission VARCHAR, manufacturer VARCHAR, green_rating VARCHAR, mpg_uk_combined VARCHAR)",
        "question": "What is the lowest MPG-US combined for a green rating of E, mpg in the UK- combined of under 42.2, manufacturer of Volkswagen, and an M6 transmission?"
    },
    {
        "answer": "SELECT mpg_uk_urban__cold_ FROM table_name_8 WHERE fuel_type = \"diesel\" AND mpg_uk_extra_urban > 68.9 AND engine_capacity = 1422 AND l_100km_urban__cold_ > 5.1",
        "context": "CREATE TABLE table_name_8 (mpg_uk_urban__cold_ VARCHAR, l_100km_urban__cold_ VARCHAR, engine_capacity VARCHAR, fuel_type VARCHAR, mpg_uk_extra_urban VARCHAR)",
        "question": "What is the mpg-UK urban (cold) for a fuel type of diesel, extraurban MPG in the UK over 68.9, engine capacity of 1422, and L/100km urban (cold) over 5.1?"
    },
    {
        "answer": "SELECT green_rating FROM table_name_68 WHERE l_100km_urban__cold_ > 10.9 AND mpg_us_urban > 14.1 AND manufacturer = \"volkswagen\" AND engine_capacity < 3189",
        "context": "CREATE TABLE table_name_68 (green_rating VARCHAR, engine_capacity VARCHAR, manufacturer VARCHAR, l_100km_urban__cold_ VARCHAR, mpg_us_urban VARCHAR)",
        "question": "What is the green rating for the vehicle with L/100km urban (cold) over 10.9, mpg in the US (urban) over 14.1, manufacturer of Volkswagen, and engine capacity under 3189?"
    },
    {
        "answer": "SELECT AVG(l_100km_urban__cold_) FROM table_name_27 WHERE engine_capacity > 1910 AND mpg_us_urban < 25.3 AND mpg_uk_combined > 27.2 AND mpg_uk_urban__cold_ = 22.4",
        "context": "CREATE TABLE table_name_27 (l_100km_urban__cold_ INTEGER, mpg_uk_urban__cold_ VARCHAR, mpg_uk_combined VARCHAR, engine_capacity VARCHAR, mpg_us_urban VARCHAR)",
        "question": "What is the average L/100km urban (cold) for engine capacities over 1910, mpg in the US (urban) under 25.3, mpg in the UK (combined) over 27.2, and mpg in the UK (urban, cold) of 22.4?"
    },
    {
        "answer": "SELECT MIN(mpg_us_combined) FROM table_name_11 WHERE transmission = \"a6\" AND co_2_g_km < 303 AND engine_capacity > 2461 AND l_100km_urban__cold_ = 15.9",
        "context": "CREATE TABLE table_name_11 (mpg_us_combined INTEGER, l_100km_urban__cold_ VARCHAR, engine_capacity VARCHAR, transmission VARCHAR, co_2_g_km VARCHAR)",
        "question": "What is the lowest combined mpg in the US for the A6 transmission, a CO2 g/km under 303, engine capacity over 2461, and L/100km urban (cold) of 15.9?"
    },
    {
        "answer": "SELECT SUM(silver) FROM table_name_19 WHERE total < \"6\" AND rank = \"6\" AND nation = \"bulgaria\"",
        "context": "CREATE TABLE table_name_19 (silver INTEGER, nation VARCHAR, total VARCHAR, rank VARCHAR)",
        "question": "What is the sum of Silver when the total is less than 6, the rank is 6 and the Bulgaria is the nation?"
    },
    {
        "answer": "SELECT 20 AS _29 FROM table_name_69 WHERE season = \"2008\"",
        "context": "CREATE TABLE table_name_69 (season VARCHAR)",
        "question": "What 20-29 was in season 2008?"
    },
    {
        "answer": "SELECT cores FROM table_name_58 WHERE l3_cache = \"8 mb\" AND frequency = \"2.5 ghz\"",
        "context": "CREATE TABLE table_name_58 (cores VARCHAR, l3_cache VARCHAR, frequency VARCHAR)",
        "question": "What is the cores when the L3 cache is 8 mb, and the frequency is 2.5 ghz?"
    },
    {
        "answer": "SELECT model_number FROM table_name_2 WHERE release_price___usd__ = \"$303\" AND sspec_number = \"sr14q(c0)\"",
        "context": "CREATE TABLE table_name_2 (model_number VARCHAR, release_price___usd__ VARCHAR, sspec_number VARCHAR)",
        "question": "What is the model number with a release price of $303, and a sSpec number of sr14q(c0)?"
    },
    {
        "answer": "SELECT turbo FROM table_name_78 WHERE l2_cache = \"4 \u00d7 256 kb\" AND release_date = \"june 2013\" AND model_number = \"core i7-4770s\"",
        "context": "CREATE TABLE table_name_78 (turbo VARCHAR, model_number VARCHAR, l2_cache VARCHAR, release_date VARCHAR)",
        "question": "What turbo has a L2 cache of 4 \u00d7 256 kb, a release date of June 2013, and a Model number of core i7-4770s?"
    },
    {
        "answer": "SELECT position FROM table_name_13 WHERE club_team = \"warroad lakers\" AND name = \"roger christian\"",
        "context": "CREATE TABLE table_name_13 (position VARCHAR, club_team VARCHAR, name VARCHAR)",
        "question": "What is the Postion, when the Club/Team is Warroad Lakers, and when the Name is Roger Christian?"
    },
    {
        "answer": "SELECT date FROM table_name_23 WHERE country = \"indonesia\"",
        "context": "CREATE TABLE table_name_23 (date VARCHAR, country VARCHAR)",
        "question": "What was the date of the tournament held in Indonesia?"
    },
    {
        "answer": "SELECT constituency_number FROM table_name_11 WHERE reserved_for___sc___st__none_ = \"st\" AND name = \"bikhangaon\"",
        "context": "CREATE TABLE table_name_11 (constituency_number VARCHAR, reserved_for___sc___st__none_ VARCHAR, name VARCHAR)",
        "question": "What is the Constituency number for Bikhangaon with a Reserved for ( SC / ST /None) of st?"
    },
    {
        "answer": "SELECT date FROM table_name_56 WHERE name = \"orangeville\"",
        "context": "CREATE TABLE table_name_56 (date VARCHAR, name VARCHAR)",
        "question": "What is the date for Orangeville?"
    },
    {
        "answer": "SELECT builder FROM table_name_16 WHERE works_number = \"2534\"",
        "context": "CREATE TABLE table_name_16 (builder VARCHAR, works_number VARCHAR)",
        "question": "Who is the builder with a works number of 2534?"
    },
    {
        "answer": "SELECT 1 AS st_round FROM table_name_56 WHERE team_1 = \"stade lavallois (d2)\"",
        "context": "CREATE TABLE table_name_56 (team_1 VARCHAR)",
        "question": "what is the 1st round when team 1 is stade lavallois (d2)?"
    },
    {
        "answer": "SELECT MIN(time) FROM table_name_35 WHERE react > 0.183 AND athlete = \"david neville\"",
        "context": "CREATE TABLE table_name_35 (time INTEGER, react VARCHAR, athlete VARCHAR)",
        "question": "What is the shortest Time for David Neville when his React time was greater than 0.183?"
    },
    {
        "answer": "SELECT release_date FROM table_name_16 WHERE director = \"robert mckimson\" AND series = \"mm\" AND production_number = \"1665\"",
        "context": "CREATE TABLE table_name_16 (release_date VARCHAR, production_number VARCHAR, director VARCHAR, series VARCHAR)",
        "question": "What is the Release date of the Filmography directed by Robert McKimson in MM Series with Production Number 1665?"
    },
    {
        "answer": "SELECT AVG(jersey__number) FROM table_name_71 WHERE name = \"steve griffith\" AND weight__kg_ < 84",
        "context": "CREATE TABLE table_name_71 (jersey__number INTEGER, name VARCHAR, weight__kg_ VARCHAR)",
        "question": "What was the average Jersey # of Steve Griffith, when his Weight (kg) was less than 84?"
    },
    {
        "answer": "SELECT position FROM table_name_59 WHERE date_of_birth__age_ = \"example\" AND player = \"mark spencer\"",
        "context": "CREATE TABLE table_name_59 (position VARCHAR, date_of_birth__age_ VARCHAR, player VARCHAR)",
        "question": "What is Postition, when Date of Birth (Age) is Example, and when Player is Mark Spencer?"
    },
    {
        "answer": "SELECT caps FROM table_name_49 WHERE province___club = \"drfc\" AND position = \"center\"",
        "context": "CREATE TABLE table_name_49 (caps VARCHAR, province___club VARCHAR, position VARCHAR)",
        "question": "What is Caps, when Province / Club is DRFC, and when Position is Center?"
    },
    {
        "answer": "SELECT position FROM table_name_52 WHERE province___club = \"example\" AND date_of_birth__age_ = \"example\" AND player = \"michael elumeze\"",
        "context": "CREATE TABLE table_name_52 (position VARCHAR, player VARCHAR, province___club VARCHAR, date_of_birth__age_ VARCHAR)",
        "question": "What is Position, when Province / Club is Example, when Date of Birth (Age) is Example, and when Player is Michael Elumeze?"
    },
    {
        "answer": "SELECT MAX(col__m_) FROM table_name_91 WHERE rank < 7 AND peak = \"puncak jaya (carstensz pyramid)\" AND prominence__m_ < 4 OFFSET 884",
        "context": "CREATE TABLE table_name_91 (col__m_ INTEGER, prominence__m_ VARCHAR, rank VARCHAR, peak VARCHAR)",
        "question": "What is the highest col in m of the puncak jaya (carstensz pyramid) peak, which is ranked lower than 7 and has a prominence less than 4,884 m?"
    },
    {
        "answer": "SELECT MAX(elevation__m_) FROM table_name_11 WHERE col__m_ > 0 AND peak = \"bon irau\" AND prominence__m_ < 1 OFFSET 900",
        "context": "CREATE TABLE table_name_11 (elevation__m_ INTEGER, prominence__m_ VARCHAR, col__m_ VARCHAR, peak VARCHAR)",
        "question": "What is the highest elevation in m of the bon irau peak, which has a col greater than 0 m and a prominence less than 1,900 m?"
    },
    {
        "answer": "SELECT place_of_birth FROM table_name_51 WHERE elevator = \"alexander iii\" AND elector = \"ruggiero di san severino\"",
        "context": "CREATE TABLE table_name_51 (place_of_birth VARCHAR, elevator VARCHAR, elector VARCHAR)",
        "question": "What's the Place of birth listed that has an Elevator of ALexander III, and an Elector of Ruggiero Di San Severino?"
    },
    {
        "answer": "SELECT earpads FROM table_name_43 WHERE construction = \"plastic\" AND sensitivity__db_ = \"unknown\" AND succeeded_by = \"sr325\"",
        "context": "CREATE TABLE table_name_43 (earpads VARCHAR, succeeded_by VARCHAR, construction VARCHAR, sensitivity__db_ VARCHAR)",
        "question": "What are the earpads of the headphone with a plastic construction, an unknown sensitivity, and was succeeded by sr325?"
    },
    {
        "answer": "SELECT release_date FROM table_name_98 WHERE sspec_number = \"sr15h(c0)\"",
        "context": "CREATE TABLE table_name_98 (release_date VARCHAR, sspec_number VARCHAR)",
        "question": "what is the release date when the sspec number is sr15h(c0)?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_21 WHERE heat = 9 AND nation = \"great britain\"",
        "context": "CREATE TABLE table_name_21 (rank INTEGER, heat VARCHAR, nation VARCHAR)",
        "question": "what is the rank when heat is 9 and the nation is great britain?"
    },
    {
        "answer": "SELECT COUNT(march) FROM table_name_83 WHERE january < 8.77 AND december > 1.69 AND average_monthly_additions_in_millions_ < 5.35 AND year < 2004",
        "context": "CREATE TABLE table_name_83 (march VARCHAR, year VARCHAR, average_monthly_additions_in_millions_ VARCHAR, january VARCHAR, december VARCHAR)",
        "question": "What was the total number for March with less than 8.77 in January, more than 1.69 in December, an average monthly addition less than 5.35, and before 2004?"
    },
    {
        "answer": "SELECT MIN(gold) FROM table_name_64 WHERE nation = \"australia\" AND bronze < 1",
        "context": "CREATE TABLE table_name_64 (gold INTEGER, nation VARCHAR, bronze VARCHAR)",
        "question": "Name the Gold which has a Nation of australia, and a Bronze smaller than 1?"
    },
    {
        "answer": "SELECT COUNT(july) FROM table_name_12 WHERE october < 8.05 AND december > 4.46 AND november > 6.79",
        "context": "CREATE TABLE table_name_12 (july VARCHAR, november VARCHAR, october VARCHAR, december VARCHAR)",
        "question": "What is the total number for July with less than 8.05 in October, more than 4.46 in December, and more than 6.79 in November?"
    },
    {
        "answer": "SELECT MAX(bronze) FROM table_name_63 WHERE nation = \"czech republic\" AND total < 4",
        "context": "CREATE TABLE table_name_63 (bronze INTEGER, nation VARCHAR, total VARCHAR)",
        "question": "Which the highest Bronze of czech republic with a Total smaller than 4?"
    },
    {
        "answer": "SELECT MAX(sfc_in_g__kn) AS \u00b7s_ FROM table_name_12 WHERE engine_type = \"rolls-royce/snecma olympus 593\" AND sfc_in_lb__lbf\u00b7h_ < 1.195",
        "context": "CREATE TABLE table_name_12 (sfc_in_g__kn INTEGER, engine_type VARCHAR, sfc_in_lb__lbf\u00b7h_ VARCHAR)",
        "question": "What is the highest SFC in g/(kN*s) for Rolls-Royce/Snecma Olympus 593 engines and SFCs under 1.195 lb/(lbf*h)?"
    },
    {
        "answer": "SELECT winner FROM table_name_70 WHERE week_of = \"8 may\" AND semi_finalists = \"helena sukov\u00e1 mary pierce\" AND runner_up = \"conchita mart\u00ednez patricia tarabini\"",
        "context": "CREATE TABLE table_name_70 (winner VARCHAR, runner_up VARCHAR, week_of VARCHAR, semi_finalists VARCHAR)",
        "question": "What is Winner, when Week is 8 May, when Semi Finalists is Helena Sukov\u00e1 Mary Pierce, and when Runner-Up is Conchita Mart\u00ednez Patricia Tarabini?"
    },
    {
        "answer": "SELECT AVG(week) FROM table_name_51 WHERE result = \"w 14-13\" AND attendance > 53 OFFSET 295",
        "context": "CREATE TABLE table_name_51 (week INTEGER, result VARCHAR, attendance VARCHAR)",
        "question": "what is the week when the result is w 14-13 and the attendance is higher than 53,295?"
    },
    {
        "answer": "SELECT animal FROM table_name_11 WHERE ap_duration__ms_ = \"1.0\" AND conduction_speed__m_s_ = \"7\u201330\"",
        "context": "CREATE TABLE table_name_11 (animal VARCHAR, ap_duration__ms_ VARCHAR, conduction_speed__m_s_ VARCHAR)",
        "question": "Which animal has an AP duration of 1.0 and a conduction speed of 7\u201330?"
    },
    {
        "answer": "SELECT ap_increase__mv_ FROM table_name_68 WHERE ap_duration__ms_ = \"0.75\"",
        "context": "CREATE TABLE table_name_68 (ap_increase__mv_ VARCHAR, ap_duration__ms_ VARCHAR)",
        "question": "What AP increase has an AP duration of 0.75?"
    },
    {
        "answer": "SELECT borough_or_a[\u203a_] AS _census_area FROM table_name_81 WHERE name_a[\u203a_] = \"jerome lake dam\"",
        "context": "CREATE TABLE table_name_81 (borough_or_a VARCHAR, \u203a_ VARCHAR, name_a VARCHAR)",
        "question": "what is the borough or A[\u203a] Census area when the Name A[\u203a] is jerome lake dam?"
    },
    {
        "answer": "SELECT AVG(goals) FROM table_name_91 WHERE name = \"jimmy greaves\" AND matches > 516",
        "context": "CREATE TABLE table_name_91 (goals INTEGER, name VARCHAR, matches VARCHAR)",
        "question": "What is the average goals for Jimmy Greaves, and matches more than 516?"
    },
    {
        "answer": "SELECT original_air_date FROM table_name_85 WHERE production_code = \"07-00-107\"",
        "context": "CREATE TABLE table_name_85 (original_air_date VARCHAR, production_code VARCHAR)",
        "question": "What is the Original air date for the episode with a Production code of 07-00-107?"
    },
    {
        "answer": "SELECT original_air_date FROM table_name_35 WHERE directed_by = \"lev l. spiro\" AND production_code = \"07-00-109\"",
        "context": "CREATE TABLE table_name_35 (original_air_date VARCHAR, directed_by VARCHAR, production_code VARCHAR)",
        "question": "What is the Original air date for the episode directed by lev l. spiro, with a Production code of 07-00-109?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_54 WHERE chassis = \"lola thl1\" AND year > 1986",
        "context": "CREATE TABLE table_name_54 (points INTEGER, chassis VARCHAR, year VARCHAR)",
        "question": "What is the most points for a vehicle with a lola thl1, chassis later than 1986?"
    },
    {
        "answer": "SELECT game_modes FROM table_name_13 WHERE pinyin = \"ch\u0101oj\u00ed m\u01cel\u00ec\u014du sh\u00ecji\u00e8\"",
        "context": "CREATE TABLE table_name_13 (game_modes VARCHAR, pinyin VARCHAR)",
        "question": "Which game modes have Pinyin of ch\u0101oj\u00ed m\u01cel\u00ec\u014du sh\u00ecji\u00e8?"
    },
    {
        "answer": "SELECT score FROM table_name_32 WHERE date = \"24 february 2013\"",
        "context": "CREATE TABLE table_name_32 (score VARCHAR, date VARCHAR)",
        "question": "What was the score on 24 February 2013?"
    },
    {
        "answer": "SELECT population_density__per_km\u00b2_ FROM table_name_81 WHERE name = \"antigua and barbuda\" AND capital = \"st. john's\"",
        "context": "CREATE TABLE table_name_81 (population_density__per_km\u00b2_ VARCHAR, name VARCHAR, capital VARCHAR)",
        "question": "What is Population density (per km\u00b2), when Name is Antigua and Barbuda, and when Capital is St. John's?"
    },
    {
        "answer": "SELECT opponents FROM table_name_61 WHERE surface = \"grass\" AND partner = \"mark woodforde\" AND outcome = \"winner\" AND year > 1996",
        "context": "CREATE TABLE table_name_61 (opponents VARCHAR, year VARCHAR, outcome VARCHAR, surface VARCHAR, partner VARCHAR)",
        "question": "Who were the opponents on grass when playing with Mark Woodforde, and the outcome of winner, and a year greater than 1996?"
    },
    {
        "answer": "SELECT opponents FROM table_name_10 WHERE surface = \"grass\" AND year > 1993 AND partner = \"jonas bj\u00f6rkman\"",
        "context": "CREATE TABLE table_name_10 (opponents VARCHAR, partner VARCHAR, surface VARCHAR, year VARCHAR)",
        "question": "When playing on grass who was the opponents in a year greater than 1993, and playing with Jonas Bj\u00f6rkman?"
    },
    {
        "answer": "SELECT icao FROM table_name_35 WHERE country = \"saudi arabia\" AND city = \"riyadh\"",
        "context": "CREATE TABLE table_name_35 (icao VARCHAR, country VARCHAR, city VARCHAR)",
        "question": "What is the ICAO for Riyadh, Saudi Arabia?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_94 WHERE gold = 0 AND bronze > 1 AND silver < 1",
        "context": "CREATE TABLE table_name_94 (total VARCHAR, silver VARCHAR, gold VARCHAR, bronze VARCHAR)",
        "question": "How many totals have 0 as Gold, a bronze greater than 1, and a silver less than 1?"
    },
    {
        "answer": "SELECT MAX(goals) FROM table_name_51 WHERE name = \"lee smith\" AND appearances < 364",
        "context": "CREATE TABLE table_name_51 (goals INTEGER, name VARCHAR, appearances VARCHAR)",
        "question": "What was Lee Smith's highest number of goals when he made fewer than 364 appearances?"
    },
    {
        "answer": "SELECT driver FROM table_name_69 WHERE zan_2 = \"5\"",
        "context": "CREATE TABLE table_name_69 (driver VARCHAR, zan_2 VARCHAR)",
        "question": "What driver has 5 as the zan 2?"
    },
    {
        "answer": "SELECT away_captain FROM table_name_72 WHERE result = \"draw\" AND venue = \"lord's\"",
        "context": "CREATE TABLE table_name_72 (away_captain VARCHAR, result VARCHAR, venue VARCHAR)",
        "question": "What is the Away captain when the Result was draw, and a Venue of lord's?"
    },
    {
        "answer": "SELECT lane FROM table_name_4 WHERE rank < 4 AND nationality = \"netherlands\"",
        "context": "CREATE TABLE table_name_4 (lane VARCHAR, rank VARCHAR, nationality VARCHAR)",
        "question": "Which lane ranked less than 4 for the Netherlands?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_35 WHERE tournament = \"alfred dunhill links championship\"",
        "context": "CREATE TABLE table_name_35 (winning_score VARCHAR, tournament VARCHAR)",
        "question": "What was the winning score in the Alfred Dunhill links championship?"
    },
    {
        "answer": "SELECT score FROM table_name_48 WHERE surface = \"clay\" AND outcome = \"winner\" AND tournament = \"ciudad ju\u00e1rez\" AND opponent_in_the_final = \"estefania craci\u00fan\"",
        "context": "CREATE TABLE table_name_48 (score VARCHAR, opponent_in_the_final VARCHAR, tournament VARCHAR, surface VARCHAR, outcome VARCHAR)",
        "question": "What is the Score of the match on a clay surface with an outcome of winner, at the tournament ciudad ju\u00e1rez, and an Opponent in the final of estefania craci\u00fan?"
    },
    {
        "answer": "SELECT frequency FROM table_name_8 WHERE model_number = \"turion 64 x2 tl-62\"",
        "context": "CREATE TABLE table_name_8 (frequency VARCHAR, model_number VARCHAR)",
        "question": "What is the frequency of the Turion 64 X2 TL-62?"
    },
    {
        "answer": "SELECT socket FROM table_name_66 WHERE multiplier_1 = \"11.5x\"",
        "context": "CREATE TABLE table_name_66 (socket VARCHAR, multiplier_1 VARCHAR)",
        "question": "What is the socket type for the processor with a multiplier 1 of 11.5x?"
    },
    {
        "answer": "SELECT lner_class FROM table_name_44 WHERE wa = \"0-6-0st\" AND no_built = 2",
        "context": "CREATE TABLE table_name_44 (lner_class VARCHAR, wa VARCHAR, no_built VARCHAR)",
        "question": "What LINER class has a W.A. of 0-6-0st with a 2 No. Built?"
    },
    {
        "answer": "SELECT points_for FROM table_name_50 WHERE club = \"cambrian welfare rfc\"",
        "context": "CREATE TABLE table_name_50 (points_for VARCHAR, club VARCHAR)",
        "question": "How many pints does the Cambrian Welfare RFC have?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_68 WHERE density < 376.37 AND province = \"valverde\" AND area > 823",
        "context": "CREATE TABLE table_name_68 (rank INTEGER, area VARCHAR, density VARCHAR, province VARCHAR)",
        "question": "What is the highest Rank with a density less than 376.37, the province was valverde, and an Area larger than 823?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_67 WHERE name = \"protestants population\"",
        "context": "CREATE TABLE table_name_67 (rank INTEGER, name VARCHAR)",
        "question": "What is the lowest rank that the protestants population holds?"
    },
    {
        "answer": "SELECT saturday_shani__saturn_ FROM table_name_41 WHERE sunday_surya__the_sun_ = \"\u0930\u0935\u093f\u0935\u093e\u0930 raviv\u0101r\" AND tuesday_mangala__mars_ = \"\u092e\u0902\u0917\u0933\u0935\u093e\u0930 manga\u1e37av\u0101r\"",
        "context": "CREATE TABLE table_name_41 (saturday_shani__saturn_ VARCHAR, sunday_surya__the_sun_ VARCHAR, tuesday_mangala__mars_ VARCHAR)",
        "question": "What is the result on Saturday when it's \u0930\u0935\u093f\u0935\u093e\u0930 raviv\u0101r on Sunday and \u092e\u0902\u0917\u0933\u0935\u093e\u0930 manga\u1e37av\u0101r on Tuesday?"
    },
    {
        "answer": "SELECT sunday_surya__the_sun_ FROM table_name_29 WHERE monday_soma__the_moon_ = \"\u0938\u094b\u092e\u0935\u093e\u0930 somav\u0101r\" AND tuesday_mangala__mars_ = \"\u092e\u0902\u0917\u0932\u0935\u093e\u0930 mangalav\u0101r\"",
        "context": "CREATE TABLE table_name_29 (sunday_surya__the_sun_ VARCHAR, monday_soma__the_moon_ VARCHAR, tuesday_mangala__mars_ VARCHAR)",
        "question": "What is the result on Sunday that's \u0938\u094b\u092e\u0935\u093e\u0930 somav\u0101r on Monday and \u092e\u0902\u0917\u0932\u0935\u093e\u0930 mangalav\u0101r on Tuesday?"
    },
    {
        "answer": "SELECT result FROM table_name_99 WHERE year > 2009 AND category = \"album of the year\"",
        "context": "CREATE TABLE table_name_99 (result VARCHAR, year VARCHAR, category VARCHAR)",
        "question": "What was album of the year after 2009?"
    },
    {
        "answer": "SELECT points_against FROM table_name_54 WHERE try_bonus = \"4\" AND lost = \"10\"",
        "context": "CREATE TABLE table_name_54 (points_against VARCHAR, try_bonus VARCHAR, lost VARCHAR)",
        "question": "For a Lost of 10 and a Try Bonus of 4, what are the points against them?"
    },
    {
        "answer": "SELECT nhl_rights, _if_any FROM table_name_7 WHERE birthplace = \"downers grove, illinois\"",
        "context": "CREATE TABLE table_name_7 (nhl_rights VARCHAR, _if_any VARCHAR, birthplace VARCHAR)",
        "question": "Which player is the NHL right, who was born in Downers Grove, Illinois?"
    },
    {
        "answer": "SELECT nationality FROM table_name_43 WHERE school_club_team = \"louisville\"",
        "context": "CREATE TABLE table_name_43 (nationality VARCHAR, school_club_team VARCHAR)",
        "question": "What is the nationality of the School/Club team of Louisville?"
    },
    {
        "answer": "SELECT SUM(population_112008) FROM table_name_62 WHERE urban_area = \"t\u00f8nsberg\" AND population_112006 > 45.447",
        "context": "CREATE TABLE table_name_62 (population_112008 INTEGER, urban_area VARCHAR, population_112006 VARCHAR)",
        "question": "Name the sum of population 1.1.2008 for t\u00f8nsberg and population 1.1.2006 more than 45.447"
    },
    {
        "answer": "SELECT nation FROM table_name_65 WHERE silver > 2 AND gold < 4",
        "context": "CREATE TABLE table_name_65 (nation VARCHAR, silver VARCHAR, gold VARCHAR)",
        "question": "Which country had more than 2 silvers and less than 4 golds?"
    },
    {
        "answer": "SELECT AVG(races) FROM table_name_98 WHERE final_placing = \"15th\" AND season = \"2005\"",
        "context": "CREATE TABLE table_name_98 (races INTEGER, final_placing VARCHAR, season VARCHAR)",
        "question": "In the 2005 season, how many races did the 15th place team complete?"
    },
    {
        "answer": "SELECT structure_height_[m] FROM table_name_93 WHERE year < 1968 AND type = \"te\" AND country = \"united states\" AND name = \"fort peck dam\"",
        "context": "CREATE TABLE table_name_93 (structure_height_ VARCHAR, m VARCHAR, name VARCHAR, country VARCHAR, year VARCHAR, type VARCHAR)",
        "question": "What is the height of the fort peck dam which was built before 1968, is located in the united states and has a dam type of TE ?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_19 WHERE points = \"2\"",
        "context": "CREATE TABLE table_name_19 (year INTEGER, points VARCHAR)",
        "question": "in what year were 2 points scored?"
    },
    {
        "answer": "SELECT location FROM table_name_23 WHERE individual = \"jos\u00e9 maria ca\u00f1izares\"",
        "context": "CREATE TABLE table_name_23 (location VARCHAR, individual VARCHAR)",
        "question": "What is the Location when the individual was jos\u00e9 maria ca\u00f1izares?"
    },
    {
        "answer": "SELECT COUNT(2009) FROM table_name_49 WHERE 1999 < 1 AND 2006 > 0 AND 1997 < 0",
        "context": "CREATE TABLE table_name_49 (Id VARCHAR)",
        "question": "How many countries in 2009 have fewer than 1 in 1999, more than 0 in 2006 and none in 1997?"
    },
    {
        "answer": "SELECT last_performance FROM table_name_7 WHERE style = \"ballet\" AND name = \"rhys kosakowski\"",
        "context": "CREATE TABLE table_name_7 (last_performance VARCHAR, style VARCHAR, name VARCHAR)",
        "question": "What is the date of the Last Ballet Style Performance of Rhys kosakowski as Billy Elliot?"
    },
    {
        "answer": "SELECT year FROM table_name_96 WHERE tournament_name = \"grand prix passing shot bordeaux\" AND runners_up = \"diego nargiso\"",
        "context": "CREATE TABLE table_name_96 (year VARCHAR, tournament_name VARCHAR, runners_up VARCHAR)",
        "question": "What year was the Grand Prix Passing Shot Bordeaux that had Runners-up of Diego Nargiso?"
    },
    {
        "answer": "SELECT score FROM table_name_65 WHERE year > 1989 AND tournament_name = \"grand prix passing shot\" AND runners_up = \"jeff tarango\"",
        "context": "CREATE TABLE table_name_65 (score VARCHAR, runners_up VARCHAR, year VARCHAR, tournament_name VARCHAR)",
        "question": "After 1989, what was the score of the Grand Prix Passing Shot where the Runners-up were Jeff Tarango?"
    },
    {
        "answer": "SELECT engine FROM table_name_50 WHERE entrant = \"garvey team lotus\"",
        "context": "CREATE TABLE table_name_50 (engine VARCHAR, entrant VARCHAR)",
        "question": "What engine does Garvey Team Lotus use?"
    },
    {
        "answer": "SELECT constitutional_ticket FROM table_name_95 WHERE socialist_ticket = \"william karlin\"",
        "context": "CREATE TABLE table_name_95 (constitutional_ticket VARCHAR, socialist_ticket VARCHAR)",
        "question": "Who was the constitutional ticket when william karlin was the socialist ticket?"
    },
    {
        "answer": "SELECT venue FROM table_name_80 WHERE competition = \"pan american games\"",
        "context": "CREATE TABLE table_name_80 (venue VARCHAR, competition VARCHAR)",
        "question": "Where were the Pan American Games held?"
    },
    {
        "answer": "SELECT MIN(game) FROM table_name_93 WHERE date = \"october 17\" AND attendance > 49 OFFSET 347",
        "context": "CREATE TABLE table_name_93 (game INTEGER, date VARCHAR, attendance VARCHAR)",
        "question": "What game, played on October 17 in front of 49,347 fans, had the lowest score?"
    },
    {
        "answer": "SELECT MAX(total_foreign_born__1000_) FROM table_name_53 WHERE born_in_a_non_eu_state__1000_ = 685 AND total_population__1000_ > 10 OFFSET 666",
        "context": "CREATE TABLE table_name_53 (total_foreign_born__1000_ INTEGER, born_in_a_non_eu_state__1000_ VARCHAR, total_population__1000_ VARCHAR)",
        "question": "What is the highest Total Foreign-born (1000) from a non EU state (1000) of 685 and a population (1000) smaller than 10,666?"
    },
    {
        "answer": "SELECT MAX(born_in_a_non_eu_state__1000_) FROM table_name_20 WHERE country = \"denmark\" AND total_population__1000_ < 5 OFFSET 534",
        "context": "CREATE TABLE table_name_20 (born_in_a_non_eu_state__1000_ INTEGER, country VARCHAR, total_population__1000_ VARCHAR)",
        "question": "What is the highest number born in a none EU state (1000) from Denmark with a total population (1000) less than 5,534?"
    },
    {
        "answer": "SELECT MAX(total_population__1000_) FROM table_name_79 WHERE country = \"sweden\" AND born_in_a_non_eu_state__1000_ < 859",
        "context": "CREATE TABLE table_name_79 (total_population__1000_ INTEGER, country VARCHAR, born_in_a_non_eu_state__1000_ VARCHAR)",
        "question": "What is the greatest Total population (1000) from Sweden and born in a non EU state (1000) less than 859?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_94 WHERE matches = 367 AND goals > 216",
        "context": "CREATE TABLE table_name_94 (rank INTEGER, matches VARCHAR, goals VARCHAR)",
        "question": "How many ranks had 367 matches and more than 216 goals?"
    },
    {
        "answer": "SELECT COUNT(episode_number) FROM table_name_80 WHERE audience_share__average_ = \"10%\"",
        "context": "CREATE TABLE table_name_80 (episode_number VARCHAR, audience_share__average_ VARCHAR)",
        "question": "What episode number has an audience share of 10%?"
    },
    {
        "answer": "SELECT country FROM table_name_21 WHERE city = \"yerevan\"",
        "context": "CREATE TABLE table_name_21 (country VARCHAR, city VARCHAR)",
        "question": "What country is Yerevan located in?"
    },
    {
        "answer": "SELECT year FROM table_name_73 WHERE points < 1 AND engine = \"cosworth v8\" AND entrant = \"jolly club switzerland\"",
        "context": "CREATE TABLE table_name_73 (year VARCHAR, entrant VARCHAR, points VARCHAR, engine VARCHAR)",
        "question": "When were there less than 1 point with a cosworth v8 engine in jolly club switzerland?"
    },
    {
        "answer": "SELECT overall FROM table_name_74 WHERE plyff = \"(0-0)\" AND home = \"(0-1)\" AND opponent = \"green bay blizzard\"",
        "context": "CREATE TABLE table_name_74 (overall VARCHAR, opponent VARCHAR, plyff VARCHAR, home VARCHAR)",
        "question": "Which team has an overall playoff of (0-0), a home record of (0-1) and played the Green Bay Blizzard team?"
    },
    {
        "answer": "SELECT MAX(fa_cup) FROM table_name_74 WHERE championship = 18 AND total = 19",
        "context": "CREATE TABLE table_name_74 (fa_cup INTEGER, championship VARCHAR, total VARCHAR)",
        "question": "Name the most FA cup for championship of 18 and total of 19"
    },
    {
        "answer": "SELECT fourth_district FROM table_name_72 WHERE second_district = \"bob springstead\"",
        "context": "CREATE TABLE table_name_72 (fourth_district VARCHAR, second_district VARCHAR)",
        "question": "Who's Fourth District has a Second District of bob springstead?"
    },
    {
        "answer": "SELECT AVG(first_round) FROM table_name_29 WHERE weight < 229 AND team = \"utah jazz\"",
        "context": "CREATE TABLE table_name_29 (first_round INTEGER, weight VARCHAR, team VARCHAR)",
        "question": "What is the average first round for Utah Jazz team, with a weight smaller than 229?"
    },
    {
        "answer": "SELECT month, _year FROM table_name_24 WHERE german_submarines_lost < 5 AND sunk_by_warship_or_raider < 6893 AND sunk_by_aircraft < 133746 AND sunk_by_u_boat > 111263",
        "context": "CREATE TABLE table_name_24 (month VARCHAR, _year VARCHAR, sunk_by_u_boat VARCHAR, sunk_by_aircraft VARCHAR, german_submarines_lost VARCHAR, sunk_by_warship_or_raider VARCHAR)",
        "question": "What is the month and year less than 5 German submarines were lost, less than 6893 were sunk by warship or raider, less than 133746 were sunk by aircraft, and more than 111263 were sunk by U-boat?"
    },
    {
        "answer": "SELECT month, _year FROM table_name_73 WHERE sunk_by_aircraft < 106005 AND sunk_by_warship_or_raider = 61857",
        "context": "CREATE TABLE table_name_73 (month VARCHAR, _year VARCHAR, sunk_by_aircraft VARCHAR, sunk_by_warship_or_raider VARCHAR)",
        "question": "What is the month and year less than 106005 were sunk by aircraft and 61857 were sunk by warship or raider?"
    },
    {
        "answer": "SELECT AVG(example_code__huc_) FROM table_name_35 WHERE example_name = \"lower snake\" AND digits = 6 AND level < 3",
        "context": "CREATE TABLE table_name_35 (example_code__huc_ INTEGER, level VARCHAR, example_name VARCHAR, digits VARCHAR)",
        "question": "What is the mean huc example code when the example name's lower snake, there are 6 digits, and less than 3 levels?"
    },
    {
        "answer": "SELECT AVG(level) FROM table_name_42 WHERE example_name = \"lower snake\" AND number_of_hus__approximate_ < 370",
        "context": "CREATE TABLE table_name_42 (level INTEGER, example_name VARCHAR, number_of_hus__approximate_ VARCHAR)",
        "question": "What is the mean level number when the example name is lower snake and the approximate number is hus is less than 370?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_59 WHERE game_site = \"veterans stadium\" AND week < 1",
        "context": "CREATE TABLE table_name_59 (attendance VARCHAR, game_site VARCHAR, week VARCHAR)",
        "question": "How many attendance numbers are associated with the site of Veterans Stadium before week 1?"
    },
    {
        "answer": "SELECT date FROM table_name_6 WHERE surface = \"clay\" AND score = \"6\u20131, 6\u20132\" AND outcome = \"runner-up\"",
        "context": "CREATE TABLE table_name_6 (date VARCHAR, outcome VARCHAR, surface VARCHAR, score VARCHAR)",
        "question": "Name the date when the surface was clay and the score was 6\u20131, 6\u20132 and runner-up"
    },
    {
        "answer": "SELECT tournament FROM table_name_61 WHERE outcome = \"winner\" AND surface = \"clay\" AND opponent = \"aranza salut\"",
        "context": "CREATE TABLE table_name_61 (tournament VARCHAR, opponent VARCHAR, outcome VARCHAR, surface VARCHAR)",
        "question": "Name the tournament for outcome of winner and clay surface with opponent of aranza salut"
    },
    {
        "answer": "SELECT series FROM table_name_16 WHERE launch_date = \"23 february 2013\"",
        "context": "CREATE TABLE table_name_16 (series VARCHAR, launch_date VARCHAR)",
        "question": "What is Series, when Launch Date is 23 February 2013?"
    },
    {
        "answer": "SELECT MAX(days) FROM table_name_16 WHERE launch_date = \"23 january 2010\"",
        "context": "CREATE TABLE table_name_16 (days INTEGER, launch_date VARCHAR)",
        "question": "What is Highest Days, when Launch Date is 23 January 2010?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_60 WHERE name = \"jeremiah massey\" AND games < 20",
        "context": "CREATE TABLE table_name_60 (rank INTEGER, name VARCHAR, games VARCHAR)",
        "question": "What is the lowest Rank, when Name is Jeremiah Massey, and when Games is less than 20?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_26 WHERE opponent = \"atlanta braves\" AND date = \"september 9\"",
        "context": "CREATE TABLE table_name_26 (attendance INTEGER, opponent VARCHAR, date VARCHAR)",
        "question": "Name the attendance for atlanta braves opponent for september 9"
    },
    {
        "answer": "SELECT country FROM table_name_45 WHERE transfer_window = \"winter\" AND ends > 2009 AND moving_from = \"bolton wanderers\"",
        "context": "CREATE TABLE table_name_45 (country VARCHAR, moving_from VARCHAR, transfer_window VARCHAR, ends VARCHAR)",
        "question": "What is the name of the country that has a transfer window of winter with an end after 2009 and moving from Bolton Wanderers?"
    },
    {
        "answer": "SELECT type FROM table_name_65 WHERE source = \"leeds united\" AND transfer_window = \"winter\" AND moving_from = \"northampton town\"",
        "context": "CREATE TABLE table_name_65 (type VARCHAR, moving_from VARCHAR, source VARCHAR, transfer_window VARCHAR)",
        "question": "What is the type of the Leeds United source, winter transfer window and moving from Northampton town?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_75 WHERE position = 2 AND drawn > 3",
        "context": "CREATE TABLE table_name_75 (points INTEGER, position VARCHAR, drawn VARCHAR)",
        "question": "What is the highest Points in Position 2 with more than 3 Drawn games?"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_6 WHERE bronze = 1 AND silver > 1 AND nation = \"finland\" AND gold < 0",
        "context": "CREATE TABLE table_name_6 (rank INTEGER, gold VARCHAR, nation VARCHAR, bronze VARCHAR, silver VARCHAR)",
        "question": "What is the average rank Finland, which has 1 bronze, more than 1 silver, and less than 0 gold, has?"
    },
    {
        "answer": "SELECT SUM(score) FROM table_name_18 WHERE player = \"vijay singh\"",
        "context": "CREATE TABLE table_name_18 (score INTEGER, player VARCHAR)",
        "question": "What is Sum of Score, when Player is Vijay Singh?"
    },
    {
        "answer": "SELECT 2009 FROM table_name_1 WHERE 2000 = \"1r\" AND 1998 = \"3r\"",
        "context": "CREATE TABLE table_name_1 (Id VARCHAR)",
        "question": "What is 2009, when 2000 is 1R, and when 1998 is 3R?"
    },
    {
        "answer": "SELECT tournament FROM table_name_56 WHERE margin_of_victory = \"2 strokes\" AND date = \"sep 20, 1981\"",
        "context": "CREATE TABLE table_name_56 (tournament VARCHAR, margin_of_victory VARCHAR, date VARCHAR)",
        "question": "What is the name of the tournament played on Sep 20, 1981, ending with a margin of vicroty of 2 strokes?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_60 WHERE tournament = \"andy williams-san diego open invitational\"",
        "context": "CREATE TABLE table_name_60 (winning_score VARCHAR, tournament VARCHAR)",
        "question": "What was the winning score for the Andy Williams-San Diego Open Invitational tournament?"
    },
    {
        "answer": "SELECT MAX(year_born) FROM table_name_31 WHERE position = \"guard\" AND player = \"tony parker\"",
        "context": "CREATE TABLE table_name_31 (year_born INTEGER, position VARCHAR, player VARCHAR)",
        "question": "When was tony parker (guard) born?"
    },
    {
        "answer": "SELECT kit_manufacturer FROM table_name_63 WHERE shirt_sponsor = \"walkers\"",
        "context": "CREATE TABLE table_name_63 (kit_manufacturer VARCHAR, shirt_sponsor VARCHAR)",
        "question": "Who was the Kit manufacturer that was has shirts sponsored by Walkers?"
    },
    {
        "answer": "SELECT total FROM table_name_62 WHERE set_4 = \"na\" AND score = \"3-0\" AND set_2 = \"26-24\"",
        "context": "CREATE TABLE table_name_62 (total VARCHAR, set_2 VARCHAR, set_4 VARCHAR, score VARCHAR)",
        "question": "What is the total of NA for set 4, a score of 3-0 and a 26-24 for set 2?"
    },
    {
        "answer": "SELECT score FROM table_name_92 WHERE competition = \"1997 dunhill cup malaysia\" AND date = \"february 23, 1997\"",
        "context": "CREATE TABLE table_name_92 (score VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "Which score has a competition of 1997 dunhill cup malaysia and february 23, 1997 as the date?"
    },
    {
        "answer": "SELECT fastest_lap FROM table_name_8 WHERE winning_team = \"team brm\" AND race = 1 AND pole_position = \"leanne tander\" AND circuit = \"phillip island\"",
        "context": "CREATE TABLE table_name_8 (fastest_lap VARCHAR, circuit VARCHAR, pole_position VARCHAR, winning_team VARCHAR, race VARCHAR)",
        "question": "What is Fastest Lap, when Winning Team is Team BRM, when Race is 1, when Pole Position is Leanne Tander, and when Circuit is Phillip Island?"
    },
    {
        "answer": "SELECT result FROM table_name_77 WHERE category = \"directorial debut of the year\"",
        "context": "CREATE TABLE table_name_77 (result VARCHAR, category VARCHAR)",
        "question": "What is the result of the directorial debut of the year award?"
    },
    {
        "answer": "SELECT date FROM table_name_81 WHERE fastest_lap = \"james winslow\" AND race = 1 AND winning_driver = \"leanne tander\"",
        "context": "CREATE TABLE table_name_81 (date VARCHAR, winning_driver VARCHAR, fastest_lap VARCHAR, race VARCHAR)",
        "question": "What is Date, when Fastest Lap is James Winslow, when Race is 1, and when Winning Driver is Leanne Tander?"
    },
    {
        "answer": "SELECT democratic_ticket FROM table_name_99 WHERE socialist_labor_ticket = \"john emanuel\"",
        "context": "CREATE TABLE table_name_99 (democratic_ticket VARCHAR, socialist_labor_ticket VARCHAR)",
        "question": "When John Emanuel ran under the Socialist Labor ticket who ran under the Democratic ticket?"
    },
    {
        "answer": "SELECT office FROM table_name_55 WHERE socialist_workers_ticket = \"sylvia weinstein\"",
        "context": "CREATE TABLE table_name_55 (office VARCHAR, socialist_workers_ticket VARCHAR)",
        "question": "What was the office up for election when Sylvia Weinstein ran under the Socialist Workers ticket?"
    },
    {
        "answer": "SELECT SUM(area_km_2) FROM table_name_70 WHERE pop_density_people_km_2 > 91 AND member_state = \"italy\" AND population_in_millions < 58.8",
        "context": "CREATE TABLE table_name_70 (area_km_2 INTEGER, population_in_millions VARCHAR, pop_density_people_km_2 VARCHAR, member_state VARCHAR)",
        "question": "What is the area km2 of the area with a pop density people/km2 larger than 91, is a member state of Italy, and had less than 58.8 population in millions?"
    },
    {
        "answer": "SELECT loan_club FROM table_name_57 WHERE country = \"eng\" AND ended = \"22 february\"",
        "context": "CREATE TABLE table_name_57 (loan_club VARCHAR, country VARCHAR, ended VARCHAR)",
        "question": "What is the Loan Club from Eng that ended on 22 February?"
    },
    {
        "answer": "SELECT SUM(pop_density_people_km_2) FROM table_name_47 WHERE population__percentage_of_eu = \"0.1%\" AND area__percentage_of_eu = \"0.1%\" AND population_in_millions > 0.5",
        "context": "CREATE TABLE table_name_47 (pop_density_people_km_2 INTEGER, population_in_millions VARCHAR, population__percentage_of_eu VARCHAR, area__percentage_of_eu VARCHAR)",
        "question": "What is the sum of the pop density people/km2 with a population % of EU of 0.1%, an area % of EU of 0.1%, and has more than 0.5 population in millions?"
    },
    {
        "answer": "SELECT MIN(area_km_2) FROM table_name_61 WHERE member_state = \"czech republic\" AND population_in_millions < 10.3",
        "context": "CREATE TABLE table_name_61 (area_km_2 INTEGER, member_state VARCHAR, population_in_millions VARCHAR)",
        "question": "What is the lowest area km2 of the member state of the Czech Republic and has a population in millions lesss than 10.3?"
    },
    {
        "answer": "SELECT name FROM table_name_11 WHERE games < 38 AND rank < 4 AND points = 357",
        "context": "CREATE TABLE table_name_11 (name VARCHAR, points VARCHAR, games VARCHAR, rank VARCHAR)",
        "question": "What is Name, when Games are less than 38, when Rank is less than 4, and when Points are 357?"
    },
    {
        "answer": "SELECT MAX(lost) FROM table_name_40 WHERE season > 1979 AND avg_attend = 16 OFFSET 605",
        "context": "CREATE TABLE table_name_40 (lost INTEGER, season VARCHAR, avg_attend VARCHAR)",
        "question": "What is the maximum number of losses that the Minnesota Kicks had after 1979 with an average attendance of 16,605?"
    },
    {
        "answer": "SELECT commercial_operation FROM table_name_95 WHERE gross_capacity = \"1,126 mw\" AND unit = \"tianwan-4\"",
        "context": "CREATE TABLE table_name_95 (commercial_operation VARCHAR, gross_capacity VARCHAR, unit VARCHAR)",
        "question": "What commercial operation that has a gross capacity of 1,126 mw, and a unit of tianwan-4?"
    },
    {
        "answer": "SELECT date FROM table_name_93 WHERE result = \"won\" AND score = \"2-1\" AND competition = \"2004 tiger cup third place match\"",
        "context": "CREATE TABLE table_name_93 (date VARCHAR, competition VARCHAR, result VARCHAR, score VARCHAR)",
        "question": "What date has won as the result and 2-1 as the score with a competition of 2004 tiger cup third place match?"
    },
    {
        "answer": "SELECT red_list FROM table_name_22 WHERE order = \"artiodactyla\" AND family = \"cervidae\" AND species_authority = \"odocoileus virginianus zimmermann, 1780\"",
        "context": "CREATE TABLE table_name_22 (red_list VARCHAR, species_authority VARCHAR, order VARCHAR, family VARCHAR)",
        "question": "What red list is in the artiodactyla order and the cervidae family with a Species Authority of odocoileus virginianus zimmermann, 1780?"
    },
    {
        "answer": "SELECT MIN(appearances) FROM table_name_85 WHERE goals = 4 AND nationality = \"new zealand\"",
        "context": "CREATE TABLE table_name_85 (appearances INTEGER, goals VARCHAR, nationality VARCHAR)",
        "question": "What is the least amount of appearances by new zealand when they scored 4 goals?"
    },
    {
        "answer": "SELECT AVG(area) FROM table_name_34 WHERE capital = \"valpara\u00edso\"",
        "context": "CREATE TABLE table_name_34 (area INTEGER, capital VARCHAR)",
        "question": "What is the average area with valpara\u00edso as the capital?"
    },
    {
        "answer": "SELECT date_made FROM table_name_46 WHERE notes = \"45/48 renumbered 15/16; two sold to sl&ncr\"",
        "context": "CREATE TABLE table_name_46 (date_made VARCHAR, notes VARCHAR)",
        "question": "When has a Note of 45/48 renumbered 15/16; two sold to sl&ncr?"
    },
    {
        "answer": "SELECT gershausen FROM table_name_46 WHERE willingshain = \"243\" AND reckerode_ * * * * = \"224\"",
        "context": "CREATE TABLE table_name_46 (gershausen VARCHAR, willingshain VARCHAR, reckerode_ VARCHAR)",
        "question": "What Gershausen has a Willingshain of 243 and Reckerode of 224?"
    },
    {
        "answer": "SELECT republican_ticket FROM table_name_5 WHERE american_labor_ticket = \"matthew j. merritt\"",
        "context": "CREATE TABLE table_name_5 (republican_ticket VARCHAR, american_labor_ticket VARCHAR)",
        "question": "Which Republican ran against the American Labor candidate Matthew J. Merritt?"
    },
    {
        "answer": "SELECT AVG(events) FROM table_name_27 WHERE top_10 = 0 AND tournament = \"pga championship\" AND top_5 < 0",
        "context": "CREATE TABLE table_name_27 (events INTEGER, top_5 VARCHAR, top_10 VARCHAR, tournament VARCHAR)",
        "question": "What is the average number of events of PGA Championship tournaments with a top-5 less than 0?"
    },
    {
        "answer": "SELECT MIN(percentage_of_marine_area__foreez_) FROM table_name_50 WHERE ecozone = \"pacific marine\" AND percentage_of_total_area__foreez_ > 3.1",
        "context": "CREATE TABLE table_name_50 (percentage_of_marine_area__foreez_ INTEGER, ecozone VARCHAR, percentage_of_total_area__foreez_ VARCHAR)",
        "question": "What is the smallest percentage of marine area for Pacific Marine ecozone and percentage of total area greater than 3.1?"
    },
    {
        "answer": "SELECT COUNT(percentage_of_marine_area__foreez_) FROM table_name_78 WHERE ecozone = \"atlantic marine\" AND area__km\u00b2__exclusive_economic_zone < 996 OFFSET 439",
        "context": "CREATE TABLE table_name_78 (percentage_of_marine_area__foreez_ VARCHAR, ecozone VARCHAR, area__km\u00b2__exclusive_economic_zone VARCHAR)",
        "question": "How many values for percentage of marine area are for the Atlantic marine ecozone with an exclusive economic zone area less than 996,439?"
    },
    {
        "answer": "SELECT source FROM table_name_94 WHERE clinton = \"39%\" AND undecided = \"7%\"",
        "context": "CREATE TABLE table_name_94 (source VARCHAR, clinton VARCHAR, undecided VARCHAR)",
        "question": "Which Source has a Clinton of 39% and a Undecided of 7%?"
    },
    {
        "answer": "SELECT date FROM table_name_83 WHERE margin_of_victory = \"1 stroke\" AND tournament = \"legend financial group classic\"",
        "context": "CREATE TABLE table_name_83 (date VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "Name the date with margin of victory of 1 stroke and tournament of legend financial group classic"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_10 WHERE margin_of_victory = \"1 stroke\" AND tournament = \"legend financial group classic\"",
        "context": "CREATE TABLE table_name_10 (runner_s__up VARCHAR, margin_of_victory VARCHAR, tournament VARCHAR)",
        "question": "Name the runner-up for margin of victory of 1 stroke and tournament of legend financial group classic"
    },
    {
        "answer": "SELECT astc_member FROM table_name_39 WHERE state = \"arkansas\" AND aam_member = \"no\" AND aam_accredited = \"yes\"",
        "context": "CREATE TABLE table_name_39 (astc_member VARCHAR, aam_accredited VARCHAR, state VARCHAR, aam_member VARCHAR)",
        "question": "What is ASTC Member, when State is Arkansas, when AAM Member is No, and when AAM Accredited is Yes?"
    },
    {
        "answer": "SELECT office FROM table_name_9 WHERE party = \"rep\" AND representative = \"brian bosma\"",
        "context": "CREATE TABLE table_name_9 (office VARCHAR, party VARCHAR, representative VARCHAR)",
        "question": "Which Office has a Party of rep, and a Representative of brian bosma?"
    },
    {
        "answer": "SELECT city FROM table_name_30 WHERE state = \"california\" AND aam_accredited = \"no\" AND astc_member = \"yes\" AND aam_member = \"no\"",
        "context": "CREATE TABLE table_name_30 (city VARCHAR, aam_member VARCHAR, astc_member VARCHAR, state VARCHAR, aam_accredited VARCHAR)",
        "question": "What is City, when State is California, when AAM Accredited is No, when ASTC Member is Yes, and when AAM Member is No?"
    },
    {
        "answer": "SELECT main_span_metres FROM table_name_23 WHERE year_to_open = 2013 AND country = \"china\" AND main_span_feet = \"2,585\"",
        "context": "CREATE TABLE table_name_23 (main_span_metres VARCHAR, main_span_feet VARCHAR, year_to_open VARCHAR, country VARCHAR)",
        "question": "What is the Main span of the bridge from China with a Year to open of 2013 and Main span feet of 2,585?"
    },
    {
        "answer": "SELECT office FROM table_name_8 WHERE socialist_labor_ticket = \"(none)\" AND liberal_ticket = \"stanley h. fuld\"",
        "context": "CREATE TABLE table_name_8 (office VARCHAR, socialist_labor_ticket VARCHAR, liberal_ticket VARCHAR)",
        "question": "What office has (none) as the socialist labor ticket, and stanley h. fuld as the liberal ticket?"
    },
    {
        "answer": "SELECT fatalities FROM table_name_53 WHERE tail_number = \"unknown\" AND location = \"kabul\"",
        "context": "CREATE TABLE table_name_53 (fatalities VARCHAR, tail_number VARCHAR, location VARCHAR)",
        "question": "What is the Fatalities when the tail number was unknown and in Kabul>"
    },
    {
        "answer": "SELECT director FROM table_name_66 WHERE film_title_used_in_nomination = \"nick carter in prague\"",
        "context": "CREATE TABLE table_name_66 (director VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "Who is the Director that has a Film title of nick carter in prague?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_name_10 WHERE original_name = \"mig og charly\"",
        "context": "CREATE TABLE table_name_10 (film_title_used_in_nomination VARCHAR, original_name VARCHAR)",
        "question": "What is the Film title used in nomination of Mig Og Charly?"
    },
    {
        "answer": "SELECT original_name FROM table_name_17 WHERE film_title_used_in_nomination = \"empire of passion\"",
        "context": "CREATE TABLE table_name_17 (original_name VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What is the Original name of empire of passion?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_69 WHERE margin_of_victory = \"2 strokes\" AND runner_s__up = \"pat bradley\"",
        "context": "CREATE TABLE table_name_69 (winning_score VARCHAR, margin_of_victory VARCHAR, runner_s__up VARCHAR)",
        "question": "What was the winning score when the margin of victory was 2 strokes and the runner-up was Pat Bradley?"
    },
    {
        "answer": "SELECT race_1 FROM table_name_25 WHERE round = \"round 2\"",
        "context": "CREATE TABLE table_name_25 (race_1 VARCHAR, round VARCHAR)",
        "question": "What is the Race 1 result of Round 2?"
    },
    {
        "answer": "SELECT week FROM table_name_40 WHERE home_team = \"detroit\" AND divisional_record = \"(3-0)\" AND overall_record = \"(5-1)\" AND away_team = \"minnesota\"",
        "context": "CREATE TABLE table_name_40 (week VARCHAR, away_team VARCHAR, overall_record VARCHAR, home_team VARCHAR, divisional_record VARCHAR)",
        "question": "Can you tell me the Week that has the Home Team of detroit, and the Divisional Record of (3-0), and the Overall Record of (5-1), and the Away Team of minnesota?"
    },
    {
        "answer": "SELECT to_par FROM table_name_7 WHERE winning_score = 71 - 71 - 70 - 69 = 281",
        "context": "CREATE TABLE table_name_7 (to_par VARCHAR, winning_score VARCHAR)",
        "question": "When the Winning is 71-71-70-69=281, what is the To par?"
    },
    {
        "answer": "SELECT AVG(_2nd_place) FROM table_name_16 WHERE years_active = \"2000\" AND titles > 0",
        "context": "",
        "question": "What is the average number of 2nd place finishes for racers active in the year 2000 and more than 0 titles?"
    },
    {
        "answer": "SELECT attendance FROM table_name_39 WHERE week < 16 AND opponent = \"washington redskins\"",
        "context": "CREATE TABLE table_name_39 (attendance VARCHAR, week VARCHAR, opponent VARCHAR)",
        "question": "Which attendance number was taken in a week less than 16 when the Washington Redskins were the opponents?"
    },
    {
        "answer": "SELECT country FROM table_name_76 WHERE score = 71 - 67 = 138",
        "context": "CREATE TABLE table_name_76 (country VARCHAR, score VARCHAR)",
        "question": "What Country had a Score of 71-67=138?"
    },
    {
        "answer": "SELECT SUM(innings) FROM table_name_35 WHERE average < 6.33 AND sr < 71.43 AND balls_faced > 36 AND runs_scored < 19",
        "context": "CREATE TABLE table_name_35 (innings INTEGER, runs_scored VARCHAR, balls_faced VARCHAR, average VARCHAR, sr VARCHAR)",
        "question": "How many total innings have an average under 6.33, strike rate under 71.43, balls faced over 36, and smaller than 19 runs scored?"
    },
    {
        "answer": "SELECT SUM(balls_faced) FROM table_name_99 WHERE sr > 48.28 AND innings = 3 AND average < 5",
        "context": "CREATE TABLE table_name_99 (balls_faced INTEGER, average VARCHAR, sr VARCHAR, innings VARCHAR)",
        "question": "What is the sum of balls faced associated with a strike rate over 48.28, 3 innings, and an average under 5?"
    },
    {
        "answer": "SELECT season FROM table_name_79 WHERE final_placing = \"8th\" AND podiums = \"8\"",
        "context": "CREATE TABLE table_name_79 (season VARCHAR, final_placing VARCHAR, podiums VARCHAR)",
        "question": "Which Season has a Final Place of 8th and 8 Podiums?"
    },
    {
        "answer": "SELECT SUM(frequency) FROM table_name_66 WHERE status = \"owned by cumulus media\" AND format = \"news\"",
        "context": "CREATE TABLE table_name_66 (frequency INTEGER, status VARCHAR, format VARCHAR)",
        "question": "What is the total frequency have a Status of owned by cumulus media, and a Format of news?"
    },
    {
        "answer": "SELECT content FROM table_name_13 WHERE package_option = \"qualsiasi\" AND television_service = \"sky primafila 14\"",
        "context": "CREATE TABLE table_name_13 (content VARCHAR, package_option VARCHAR, television_service VARCHAR)",
        "question": "What is the content when the package/option is qualsiasi and sky primafila 14 is the television service?"
    },
    {
        "answer": "SELECT hdtv FROM table_name_26 WHERE content = \"general television\" AND television_service = \"tv 8 mont blanc\"",
        "context": "CREATE TABLE table_name_26 (hdtv VARCHAR, content VARCHAR, television_service VARCHAR)",
        "question": "What is the HDTV that has television service of tv 8 mont blanc and content is general television?"
    },
    {
        "answer": "SELECT entrant FROM table_name_22 WHERE year > 1987 AND chassis = \"benetton b188\" AND points = 12",
        "context": "CREATE TABLE table_name_22 (entrant VARCHAR, points VARCHAR, year VARCHAR, chassis VARCHAR)",
        "question": "which entrant after 1987 had 12 points and a benetton b188 chassis?"
    },
    {
        "answer": "SELECT secondary_military_speciality FROM table_name_58 WHERE primary_military_speciality = \"astral assault tactics\"",
        "context": "CREATE TABLE table_name_58 (secondary_military_speciality VARCHAR, primary_military_speciality VARCHAR)",
        "question": "With a Primary military speciality of astral assault tactics, what is the Secondary military speciality?"
    },
    {
        "answer": "SELECT birthplace FROM table_name_79 WHERE position = \"d\" AND height__cm_ = 190 AND jersey_number = 11",
        "context": "CREATE TABLE table_name_79 (birthplace VARCHAR, jersey_number VARCHAR, position VARCHAR, height__cm_ VARCHAR)",
        "question": "What is the birthplace of the player who is 190 CM tall, plays the D position, and wears number 11?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_3 WHERE year > 1974 AND entrant = \"walter wolf racing\"",
        "context": "CREATE TABLE table_name_3 (points INTEGER, year VARCHAR, entrant VARCHAR)",
        "question": "What's the least amount of points that Walter Wolf Racing had after 1974?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_68 WHERE position = \"6th\" AND competition = \"commonwealth games\"",
        "context": "CREATE TABLE table_name_68 (year INTEGER, position VARCHAR, competition VARCHAR)",
        "question": "What is the sum of Year(s), when Postion is 6th, and when Competition is Commonwealth Games?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_60 WHERE year < 1971 AND entrant = \"scuderia ferrari\" AND engine = \"ferrari v12\"",
        "context": "CREATE TABLE table_name_60 (points INTEGER, engine VARCHAR, year VARCHAR, entrant VARCHAR)",
        "question": "What's the total points that Scuderia Ferrari with a Ferrari V12 engine have before 1971?"
    },
    {
        "answer": "SELECT MIN(weight__kg_) FROM table_name_62 WHERE jersey__number > 22 AND position = \"f\" AND birthdate = \"march 19, 1980\"",
        "context": "CREATE TABLE table_name_62 (weight__kg_ INTEGER, birthdate VARCHAR, jersey__number VARCHAR, position VARCHAR)",
        "question": "What is the lightest Weight (kg), when the Jersey # is greater than 22, when the Position is F, and when the Birthdate is March 19, 1980?"
    },
    {
        "answer": "SELECT birthplace FROM table_name_24 WHERE jersey__number < 18 AND height__cm_ > 185 AND birthdate = \"march 3, 1980\"",
        "context": "CREATE TABLE table_name_24 (birthplace VARCHAR, birthdate VARCHAR, jersey__number VARCHAR, height__cm_ VARCHAR)",
        "question": "What is the Birthplace, when the Jersey # is less than 18, when the Height (cm) is higher than 185, and when the Birthdate is March 3, 1980?"
    },
    {
        "answer": "SELECT golden_point_s__scorer FROM table_name_53 WHERE away = \"sydney roosters\" AND home = \"cronulla sharks\"",
        "context": "CREATE TABLE table_name_53 (golden_point_s__scorer VARCHAR, away VARCHAR, home VARCHAR)",
        "question": "What Golden point(s) scorer has the Away Sydney Roosters and Home Cronulla Sharks?"
    },
    {
        "answer": "SELECT 2009 FROM table_name_5 WHERE 2001 = \"not masters series\"",
        "context": "CREATE TABLE table_name_5 (Id VARCHAR)",
        "question": "What was 2009, when 2001 was, \"not masters series\"?"
    },
    {
        "answer": "SELECT COUNT(grid) FROM table_name_71 WHERE rider = \"mike di meglio\"",
        "context": "CREATE TABLE table_name_71 (grid VARCHAR, rider VARCHAR)",
        "question": "The rider mike di meglio had a total of how many grids?"
    },
    {
        "answer": "SELECT republican_ticket FROM table_name_61 WHERE socialist_ticket = \"frank r. crosswaith\"",
        "context": "CREATE TABLE table_name_61 (republican_ticket VARCHAR, socialist_ticket VARCHAR)",
        "question": "Who's the Republican ticket with a Socialist ticket of frank r. crosswaith?"
    },
    {
        "answer": "SELECT MAX(roll) FROM table_name_49 WHERE years = \"1\u20138\" AND name = \"dorie school\" AND decile > 9",
        "context": "CREATE TABLE table_name_49 (roll INTEGER, decile VARCHAR, years VARCHAR, name VARCHAR)",
        "question": "What is the largest roll with Years 1\u20138, a Name of dorie school, and a Decile larger than 9?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_22 WHERE opponent = \"caroline garcia\"",
        "context": "CREATE TABLE table_name_22 (year INTEGER, opponent VARCHAR)",
        "question": "what year was the opponent caroline garcia?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_50 WHERE event = \"wimbledon\" AND opponent = \"zheng jie\"",
        "context": "CREATE TABLE table_name_50 (year INTEGER, event VARCHAR, opponent VARCHAR)",
        "question": "what's the earliest year that the wimbledon opponent was zheng jie?"
    },
    {
        "answer": "SELECT season FROM table_name_26 WHERE school_club_team = \"far eastern\" AND number = 26",
        "context": "CREATE TABLE table_name_26 (season VARCHAR, school_club_team VARCHAR, number VARCHAR)",
        "question": "What season did the player who had the number 26 play on who came from far eastern?"
    },
    {
        "answer": "SELECT the_prize FROM table_name_19 WHERE tv_channel = \"ant1\" AND the_presenter = \"andreas mikroutsikos\" AND launch_date = \"march 10, 2003\"",
        "context": "CREATE TABLE table_name_19 (the_prize VARCHAR, launch_date VARCHAR, tv_channel VARCHAR, the_presenter VARCHAR)",
        "question": "What was the prize when the show was aired on Ant1, was presented by Andreas Mikroutsikos, and was launched on March 10, 2003?"
    },
    {
        "answer": "SELECT construction_completed FROM table_name_9 WHERE listed = \"09/21/1984\" AND deleted = \"11/04/1999\"",
        "context": "CREATE TABLE table_name_9 (construction_completed VARCHAR, listed VARCHAR, deleted VARCHAR)",
        "question": "When was construction completed that was listed on 09/21/1984 and a Deleted of 11/04/1999?"
    },
    {
        "answer": "SELECT COUNT(transfer_fee___) AS \u20ac_million_ FROM table_name_13 WHERE player = \"afonso alves\" AND year > 2008",
        "context": "CREATE TABLE table_name_13 (transfer_fee___ VARCHAR, player VARCHAR, year VARCHAR)",
        "question": "How many transfer fees did Afonso Alves have after 2008?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_78 WHERE margin_of_victory = \"3 strokes\" AND winning_score = \u201313(68 - 70 - 66 - 71 = 275)",
        "context": "CREATE TABLE table_name_78 (runner_s__up VARCHAR, margin_of_victory VARCHAR, winning_score VARCHAR)",
        "question": "Which runner(s)-up had a Winning score of \u201313 (68-70-66-71=275) and a Margin of victory of 3 strokes?"
    },
    {
        "answer": "SELECT margin_of_victory FROM table_name_66 WHERE winning_score = \u20139(69 - 72 - 68 - 70 = 279)",
        "context": "CREATE TABLE table_name_66 (margin_of_victory VARCHAR, winning_score VARCHAR)",
        "question": "When the Winning score was \u20139 (69-72-68-70=279), what was the Margin of victory?"
    },
    {
        "answer": "SELECT height FROM table_name_2 WHERE floor_count < 25",
        "context": "CREATE TABLE table_name_2 (height VARCHAR, floor_count INTEGER)",
        "question": "What height has a floor count less than 25?"
    },
    {
        "answer": "SELECT year FROM table_name_90 WHERE points < 1.5 AND entrant = \"escuderia bandeirantes\" AND engine = \"maserati straight-4\"",
        "context": "CREATE TABLE table_name_90 (year VARCHAR, engine VARCHAR, points VARCHAR, entrant VARCHAR)",
        "question": "What year were there less than 1.5 points and an Entrant of escuderia bandeirantes, and a maserati straight-4 engine?"
    },
    {
        "answer": "SELECT losses FROM table_name_40 WHERE matches = \"5\"",
        "context": "CREATE TABLE table_name_40 (losses VARCHAR, matches VARCHAR)",
        "question": "What is the losses for the 5 matches?"
    },
    {
        "answer": "SELECT COUNT(moroccan_population) FROM table_name_30 WHERE name = \"sebt saiss\" AND population__2004_ > 11212",
        "context": "CREATE TABLE table_name_30 (moroccan_population VARCHAR, name VARCHAR, population__2004_ VARCHAR)",
        "question": "What is the number for the Moroccan population when the name is Sebt Saiss and the 2004 population is more than 11212?"
    },
    {
        "answer": "SELECT brazil_scorers FROM table_name_18 WHERE competition = \"world cup\" AND score = \"1-2\"",
        "context": "CREATE TABLE table_name_18 (brazil_scorers VARCHAR, competition VARCHAR, score VARCHAR)",
        "question": "Who were the Brazil scorers for the World Cup Competition with a 1-2 score?"
    },
    {
        "answer": "SELECT original_title FROM table_name_72 WHERE director = \"lene gr\u00f8nlykke and sven gr\u00f8nlykke\"",
        "context": "CREATE TABLE table_name_72 (original_title VARCHAR, director VARCHAR)",
        "question": "What was the original title of the film directed by Lene Gr\u00f8nlykke and Sven Gr\u00f8nlykke?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_name_26 WHERE country = \"south korea\"",
        "context": "CREATE TABLE table_name_26 (film_title_used_in_nomination VARCHAR, country VARCHAR)",
        "question": "What is the film title used in nomination for the film from South Korea?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_name_89 WHERE director = \"gheorghe vitanidis\"",
        "context": "CREATE TABLE table_name_89 (film_title_used_in_nomination VARCHAR, director VARCHAR)",
        "question": "What was the film title used in nomination for the film directed by Gheorghe Vitanidis?"
    },
    {
        "answer": "SELECT MIN(seats__acs_) FROM table_name_57 WHERE election_winner = \"inc\" AND incumbent = \"bjp\"",
        "context": "CREATE TABLE table_name_57 (seats__acs_ INTEGER, election_winner VARCHAR, incumbent VARCHAR)",
        "question": "What is the smallest number of seats with INC as an election winner and BJP incumbent?"
    },
    {
        "answer": "SELECT career_win_loss FROM table_name_65 WHERE 2008 = \"q1\" AND tournament = \"australian open\"",
        "context": "CREATE TABLE table_name_65 (career_win_loss VARCHAR, tournament VARCHAR)",
        "question": "What is the win-loss when 2008 has a value of Q1 at Australian Open?"
    },
    {
        "answer": "SELECT tournament FROM table_name_77 WHERE 2012 = \"3r\" AND 2011 = \"qf\"",
        "context": "CREATE TABLE table_name_77 (tournament VARCHAR)",
        "question": "what is the tournament when the performance in 2012 is 3r and 2011 is qf?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_70 WHERE entrant = \"spirit tom's racing\" AND points > 3",
        "context": "CREATE TABLE table_name_70 (year INTEGER, entrant VARCHAR, points VARCHAR)",
        "question": "What is the year when Spirit Tom's Racing had more than 3 points?"
    },
    {
        "answer": "SELECT AVG(week) FROM table_name_17 WHERE attendance = 75 OFFSET 111",
        "context": "CREATE TABLE table_name_17 (week INTEGER, attendance VARCHAR)",
        "question": "Name the average week for attendance of 75,111"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_53 WHERE year > 1993 AND entrant = \"sasol jordan\"",
        "context": "CREATE TABLE table_name_53 (points INTEGER, year VARCHAR, entrant VARCHAR)",
        "question": "For the Entrant of Sasol Jordan, add up all the points with a Year larger than 1993."
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_64 WHERE chassis = \"jordan 194\"",
        "context": "CREATE TABLE table_name_64 (points INTEGER, chassis VARCHAR)",
        "question": "Give the most points that features jordan 194 in the Chassis column."
    },
    {
        "answer": "SELECT original_title FROM table_name_66 WHERE result = \"not nominated\" AND year__ceremony_ = \"2012 (85th)\"",
        "context": "CREATE TABLE table_name_66 (original_title VARCHAR, result VARCHAR, year__ceremony_ VARCHAR)",
        "question": "In the 2012 (85th) Ceremony, what was the Original title of the film not nominated?"
    },
    {
        "answer": "SELECT date FROM table_name_92 WHERE opponent = \"diamondbacks\" AND score = \"2-7\"",
        "context": "CREATE TABLE table_name_92 (date VARCHAR, opponent VARCHAR, score VARCHAR)",
        "question": "What day did the Diamondbacks go 2-7?"
    },
    {
        "answer": "SELECT COUNT(pick) FROM table_name_26 WHERE pba_team = \"san miguel beermen\" AND player = \"rommel daep\"",
        "context": "CREATE TABLE table_name_26 (pick VARCHAR, pba_team VARCHAR, player VARCHAR)",
        "question": "What is the total number of picks for PBA team san miguel beermen who picked rommel daep?"
    },
    {
        "answer": "SELECT result FROM table_name_39 WHERE year > 2007 AND runners_up = \"seoul samsung thunders\" AND champions = \"jeonju kcc egis\"",
        "context": "CREATE TABLE table_name_39 (result VARCHAR, champions VARCHAR, year VARCHAR, runners_up VARCHAR)",
        "question": "What is the result for the champions jeonju kcc egis with runners-up seoul samsung thunders after 2007?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_93 WHERE winning_team = \"europe\" AND usa_captain = \"kathy whitworth\"",
        "context": "CREATE TABLE table_name_93 (year INTEGER, winning_team VARCHAR, usa_captain VARCHAR)",
        "question": "What is the highest year that Europe won, when the USA's Captain was Kathy Whitworth?"
    },
    {
        "answer": "SELECT division_iII FROM table_name_97 WHERE division_v = \"bishop brady\" AND division_iV = hanover",
        "context": "CREATE TABLE table_name_97 (division_iII VARCHAR, division_v VARCHAR, division_iV VARCHAR, hanover VARCHAR)",
        "question": "What Division III has Bishop Brady in Division V and Hanover in Division IV?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_86 WHERE entrant = \"beta team march\" AND year = 1975 AND chassis = \"march 751\"",
        "context": "CREATE TABLE table_name_86 (points VARCHAR, chassis VARCHAR, entrant VARCHAR, year VARCHAR)",
        "question": "Name the total number of points for beta team march 1975 and chassis of march 751"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_57 WHERE surface = \"hard\" AND date = \"june 13, 2011\"",
        "context": "CREATE TABLE table_name_57 (score_in_the_final VARCHAR, surface VARCHAR, date VARCHAR)",
        "question": "What score in the final has hard as the surface, and june 13, 2011 as the date?"
    },
    {
        "answer": "SELECT surface FROM table_name_53 WHERE opponents = \"amer delic robert kendrick\"",
        "context": "CREATE TABLE table_name_53 (surface VARCHAR, opponents VARCHAR)",
        "question": "Which type of surface do Amer Delic Robert Kendrick's opponents have?"
    },
    {
        "answer": "SELECT score FROM table_name_35 WHERE opponents = \"diego junqueira gabriel trujillo-soler\"",
        "context": "CREATE TABLE table_name_35 (score VARCHAR, opponents VARCHAR)",
        "question": "What is Diego Junqueira Gabriel Trujillo-Soler's opponent's score?"
    },
    {
        "answer": "SELECT surface FROM table_name_18 WHERE opponents = \"thomas oger nicolas tourte\"",
        "context": "CREATE TABLE table_name_18 (surface VARCHAR, opponents VARCHAR)",
        "question": "Which surface do opponents of Thomas Oger Nicolas Tourte have?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_18 WHERE role = \"alvin seville simon seville david 'dave' seville\" AND title = \"alvin and the chipmunks meet the wolfman\"",
        "context": "CREATE TABLE table_name_18 (year INTEGER, role VARCHAR, title VARCHAR)",
        "question": "What's the earliest year with a role of alvin seville simon seville david 'dave' seville, and a Title of alvin and the chipmunks meet the wolfman?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_30 WHERE role = \"alvin seville simon seville david 'dave' seville\" AND title = \"the chipmunk adventure\"",
        "context": "CREATE TABLE table_name_30 (year INTEGER, role VARCHAR, title VARCHAR)",
        "question": "What's the average year for the Role of alvin seville simon seville david 'dave' seville, and a Title of the chipmunk adventure?"
    },
    {
        "answer": "SELECT result FROM table_name_14 WHERE h___a = \"a\" AND kick_off = \"1992-10-31 16:00\"",
        "context": "CREATE TABLE table_name_14 (result VARCHAR, h___a VARCHAR, kick_off VARCHAR)",
        "question": "What is the result of the match with a H/A of A and a kick off at 1992-10-31 16:00?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_58 WHERE game < 3 AND score = \"2 \u2013 5\"",
        "context": "CREATE TABLE table_name_58 (attendance INTEGER, game VARCHAR, score VARCHAR)",
        "question": "Which Attendance  has a Game score less than 3, and a Score of 2 \u2013 5?"
    },
    {
        "answer": "SELECT presentation_of_credentials FROM table_name_55 WHERE appointed_by = \"benjamin harrison\"",
        "context": "CREATE TABLE table_name_55 (presentation_of_credentials VARCHAR, appointed_by VARCHAR)",
        "question": "Which Presentation of Credentials is listed for the Appointed by Benjamin Harrison?"
    },
    {
        "answer": "SELECT termination_of_mission FROM table_name_37 WHERE title = \"ambassador extraordinary and plenipotentiary\" AND representative = \"reynold e. carlson\"",
        "context": "CREATE TABLE table_name_37 (termination_of_mission VARCHAR, title VARCHAR, representative VARCHAR)",
        "question": "What is the Termination of Mission with a Title of Ambassador Extraordinary and Plenipotentiary with a Representative of Reynold E. Carlson?"
    },
    {
        "answer": "SELECT MIN(avg_g) FROM table_name_86 WHERE effic > 34.36 AND name = \"wesley carroll\"",
        "context": "CREATE TABLE table_name_86 (avg_g INTEGER, effic VARCHAR, name VARCHAR)",
        "question": "What is the lowest avg/g that has an effic greater than 34.36, with wesley carroll as the name?"
    },
    {
        "answer": "SELECT course FROM table_name_5 WHERE stage = \"1\"",
        "context": "CREATE TABLE table_name_5 (course VARCHAR, stage VARCHAR)",
        "question": "What course are they running on stage 1?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_42 WHERE _aramac_ = 832 AND population__total_ < 3 OFFSET 762",
        "context": "CREATE TABLE table_name_42 (year INTEGER, _aramac_ VARCHAR, population__total_ VARCHAR)",
        "question": "What Year has an (Aramac) of 832 and a Population (Total) less than 3,762?"
    },
    {
        "answer": "SELECT year FROM table_name_37 WHERE genre = \"jazz\" AND label = \"columbia\" AND result = \"nominated\" AND title = \"trio jeepy\"",
        "context": "CREATE TABLE table_name_37 (year VARCHAR, title VARCHAR, result VARCHAR, genre VARCHAR, label VARCHAR)",
        "question": "Which year's genre was jazz under the columbia label when it was nominated for the title Trio jeepy?"
    },
    {
        "answer": "SELECT company FROM table_name_7 WHERE principal_activities = \"engine overhaul\"",
        "context": "CREATE TABLE table_name_7 (company VARCHAR, principal_activities VARCHAR)",
        "question": "What company focuses on Engine Overhaul for their principal activity?"
    },
    {
        "answer": "SELECT date FROM table_name_86 WHERE game > 4 AND team = \"san antonio\" AND record = \"4-3\"",
        "context": "CREATE TABLE table_name_86 (date VARCHAR, record VARCHAR, game VARCHAR, team VARCHAR)",
        "question": "When Date has a Game larger than 4 and a Team of san antonio, and a Record of 4-3?"
    },
    {
        "answer": "SELECT winner FROM table_name_59 WHERE runner_up = \"kimberly kim\" AND country = \"united states\"",
        "context": "CREATE TABLE table_name_59 (winner VARCHAR, runner_up VARCHAR, country VARCHAR)",
        "question": "Who was the winner from the United States the year Kimberly Kim was runner-up?"
    },
    {
        "answer": "SELECT opponent FROM table_name_67 WHERE type = \"tko\" AND round = \"2 (6)\" AND date = \"2006-09-20\"",
        "context": "CREATE TABLE table_name_67 (opponent VARCHAR, date VARCHAR, type VARCHAR, round VARCHAR)",
        "question": "Which Opponent has a Type of tko, and a Round of 2 (6) on 2006-09-20?"
    },
    {
        "answer": "SELECT MIN(perigee__km_) FROM table_name_30 WHERE launch_date = \"1970-08-26\"",
        "context": "CREATE TABLE table_name_30 (perigee__km_ INTEGER, launch_date VARCHAR)",
        "question": "What is the lowest Perigee with a Launch date of 1970-08-26?"
    },
    {
        "answer": "SELECT score FROM table_name_73 WHERE surface = \"hard\" AND opponent_in_the_final = \"alicia pillay\"",
        "context": "CREATE TABLE table_name_73 (score VARCHAR, surface VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "What is the Score when the opponent in the final is alicia pillay on a hard surface?"
    },
    {
        "answer": "SELECT data_limit__gb FROM table_name_18 WHERE company = \"t-mobile\" AND plan_name = \"internet basic\"",
        "context": "CREATE TABLE table_name_18 (data_limit__gb VARCHAR, company VARCHAR, plan_name VARCHAR)",
        "question": "What is the data limit for a T-Mobile internet basic plan?"
    },
    {
        "answer": "SELECT opponent_in_the_final FROM table_name_92 WHERE outcome = \"winner\" AND date = \"14-may-2007\"",
        "context": "CREATE TABLE table_name_92 (opponent_in_the_final VARCHAR, outcome VARCHAR, date VARCHAR)",
        "question": "What is the Opponent in the final with an outcome of winner on 14-may-2007?"
    },
    {
        "answer": "SELECT maximum_download_speed__kbps FROM table_name_5 WHERE technology = \"3g\" AND plan_name = \"internet premium\"",
        "context": "CREATE TABLE table_name_5 (maximum_download_speed__kbps VARCHAR, technology VARCHAR, plan_name VARCHAR)",
        "question": "What is the maximum download speed for the Internet premium 3G plan?"
    },
    {
        "answer": "SELECT to_par FROM table_name_42 WHERE player = \"gene littler\"",
        "context": "CREATE TABLE table_name_42 (to_par VARCHAR, player VARCHAR)",
        "question": "What is the to par for Gene Littler?"
    },
    {
        "answer": "SELECT set_5 FROM table_name_65 WHERE date = \"jun 7\" AND set_4 = \"21-25\"",
        "context": "CREATE TABLE table_name_65 (set_5 VARCHAR, date VARCHAR, set_4 VARCHAR)",
        "question": "What is the set 5 if the Date is jun 7, and a Set 4 is 21-25?"
    },
    {
        "answer": "SELECT nation FROM table_name_24 WHERE sport = \"weightlifting\" AND pinyin = \"k\u00f9k\u00e8 q\u00fand\u01ceo\"",
        "context": "CREATE TABLE table_name_24 (nation VARCHAR, sport VARCHAR, pinyin VARCHAR)",
        "question": "What nation has a sport of weightlifting and a pinyin of k\u00f9k\u00e8 q\u00fand\u01ceo?"
    },
    {
        "answer": "SELECT date FROM table_name_34 WHERE team = \"glentoran\" AND venue = \"windsor park, belfast\"",
        "context": "CREATE TABLE table_name_34 (date VARCHAR, team VARCHAR, venue VARCHAR)",
        "question": "What day did Glentoran play at Windsor Park, Belfast?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_72 WHERE position = \"outside linebacker\"",
        "context": "CREATE TABLE table_name_72 (round INTEGER, position VARCHAR)",
        "question": "In what round was the first outside linebacker picked?"
    },
    {
        "answer": "SELECT home_captain FROM table_name_25 WHERE result = \"aus by 4 wkts\"",
        "context": "CREATE TABLE table_name_25 (home_captain VARCHAR, result VARCHAR)",
        "question": "Who was the Home Captain and the Result for AUS by 4 wkts?"
    },
    {
        "answer": "SELECT MAX(match) FROM table_name_53 WHERE opponent_team = \"dalian shide siwu\" AND home_away = \"away\"",
        "context": "CREATE TABLE table_name_53 (match INTEGER, opponent_team VARCHAR, home_away VARCHAR)",
        "question": "What was the highest match when the away opponent was Dalian Shide Siwu?"
    },
    {
        "answer": "SELECT MIN(revenue__) AS $m_ FROM table_name_73 WHERE country = \"england\" AND team = \"chelsea\" AND rank < 7",
        "context": "CREATE TABLE table_name_73 (revenue__ INTEGER, rank VARCHAR, country VARCHAR, team VARCHAR)",
        "question": "Name the least revenue for chelsea of england with rank less than 7"
    },
    {
        "answer": "SELECT venue FROM table_name_35 WHERE result = \"win\" AND score = \"5-0\"",
        "context": "CREATE TABLE table_name_35 (venue VARCHAR, result VARCHAR, score VARCHAR)",
        "question": "What is the Venue with a Result that is win, and a Score that is 5-0?"
    },
    {
        "answer": "SELECT competition FROM table_name_91 WHERE result = \"win\" AND score = \"1-0\"",
        "context": "CREATE TABLE table_name_91 (competition VARCHAR, result VARCHAR, score VARCHAR)",
        "question": "What is the Competition with a Result of win with a Score that is 1-0?"
    },
    {
        "answer": "SELECT date FROM table_name_63 WHERE decision = \"osgood\" AND score = \"3 \u2013 4\"",
        "context": "CREATE TABLE table_name_63 (date VARCHAR, decision VARCHAR, score VARCHAR)",
        "question": "What date has a Decision of osgood, and a Score of 3 \u2013 4?"
    },
    {
        "answer": "SELECT 2005 FROM table_name_31 WHERE ship_size = \"all product carriers\"",
        "context": "CREATE TABLE table_name_31 (ship_size VARCHAR)",
        "question": "What was the cargo value in 2005 with a ship size of all product carriers?"
    },
    {
        "answer": "SELECT AVG(goals) / games FROM table_name_66 WHERE name = \"rummenigge, karl-heinz\" AND goals < 162",
        "context": "CREATE TABLE table_name_66 (games VARCHAR, goals INTEGER, name VARCHAR)",
        "question": "What is the average Goals/Games for Rummenigge, Karl-Heinz, with Goals less than 162?"
    },
    {
        "answer": "SELECT SUM(games) FROM table_name_53 WHERE name = \"allofs, klaus\" AND goals < 177",
        "context": "CREATE TABLE table_name_53 (games INTEGER, name VARCHAR, goals VARCHAR)",
        "question": "What is the sum of Games for Allofs, Klaus, with Goals less than 177?"
    },
    {
        "answer": "SELECT initial_release_date FROM table_name_41 WHERE publisher = \"banpresto\" AND japanese_title = \"ranma \u00bd: netsuretsu kakutouhen\"",
        "context": "CREATE TABLE table_name_41 (initial_release_date VARCHAR, publisher VARCHAR, japanese_title VARCHAR)",
        "question": "When was Ranma \u00bd: netsuretsu kakutouhen first release by Banpresto?"
    },
    {
        "answer": "SELECT genre FROM table_name_34 WHERE developer = \"banpresto\" AND japanese_title = \"ranma \u00bd: netsuretsu kakutouhen\"",
        "context": "CREATE TABLE table_name_34 (genre VARCHAR, developer VARCHAR, japanese_title VARCHAR)",
        "question": "What genre is the Banpresto game tittled Ranma \u00bd: netsuretsu kakutouhen?"
    },
    {
        "answer": "SELECT director_s_ FROM table_name_92 WHERE film_title_used_in_nomination = \"cannibal vegetarian\"",
        "context": "CREATE TABLE table_name_92 (director_s_ VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "Who is the director of Cannibal vegetarian, which is the film title used in nomination?"
    },
    {
        "answer": "SELECT MIN(first_game) FROM table_name_60 WHERE played > 11 AND lost = 12",
        "context": "CREATE TABLE table_name_60 (first_game INTEGER, played VARCHAR, lost VARCHAR)",
        "question": "When was the earliest first game with 11 played and 12 games lost?"
    },
    {
        "answer": "SELECT SUM(first_game) FROM table_name_85 WHERE played = 5 AND lost < 3",
        "context": "CREATE TABLE table_name_85 (first_game INTEGER, played VARCHAR, lost VARCHAR)",
        "question": "How many first games are associated with 5 games played and under 3 games lost?"
    },
    {
        "answer": "SELECT MAX(points_for) FROM table_name_25 WHERE record = \"12\u20132\" AND points_against > 6",
        "context": "CREATE TABLE table_name_25 (points_for INTEGER, record VARCHAR, points_against VARCHAR)",
        "question": "What is the highest Points when the record was 12\u20132, and the Points Against are larger than 6?"
    },
    {
        "answer": "SELECT partial_thromboplastin_time FROM table_name_76 WHERE prothrombin_time = \"prolonged\" AND condition = \"factor v deficiency\"",
        "context": "CREATE TABLE table_name_76 (partial_thromboplastin_time VARCHAR, prothrombin_time VARCHAR, condition VARCHAR)",
        "question": "Which Partial thromboplastin time has a Prothrombin time of prolonged and a Condition of factor v deficiency?"
    },
    {
        "answer": "SELECT prothrombin_time FROM table_name_6 WHERE partial_thromboplastin_time = \"unaffected\" AND condition = \"thrombocytopenia\"",
        "context": "CREATE TABLE table_name_6 (prothrombin_time VARCHAR, partial_thromboplastin_time VARCHAR, condition VARCHAR)",
        "question": "Which Prothrombin time that has a Partial thromboplastin time of unaffected, and a Condition of thrombocytopenia?"
    },
    {
        "answer": "SELECT condition FROM table_name_75 WHERE bleeding_time = \"unaffected\" AND prothrombin_time = \"prolonged\"",
        "context": "CREATE TABLE table_name_75 (condition VARCHAR, bleeding_time VARCHAR, prothrombin_time VARCHAR)",
        "question": "Which Condition has a Bleeding time of unaffected and a Prothrombin time of prolonged?"
    },
    {
        "answer": "SELECT partial_thromboplastin_time FROM table_name_1 WHERE prothrombin_time = \"prolonged\" AND bleeding_time = \"unaffected\" AND condition = \"vitamin k deficiency or warfarin\"",
        "context": "CREATE TABLE table_name_1 (partial_thromboplastin_time VARCHAR, condition VARCHAR, prothrombin_time VARCHAR, bleeding_time VARCHAR)",
        "question": "Which Partial thromboplastin time has a Prothrombin time of prolonged, and a Bleeding time of unaffected, and a Condition of vitamin k deficiency or warfarin? Question 6"
    },
    {
        "answer": "SELECT notes FROM table_name_11 WHERE authors = \"zhou & zhang\"",
        "context": "CREATE TABLE table_name_11 (notes VARCHAR, authors VARCHAR)",
        "question": "What are the notes where the authors are Zhou & Zhang?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_51 WHERE performer_s_ = \"louis armstrong\"",
        "context": "CREATE TABLE table_name_51 (year VARCHAR, performer_s_ VARCHAR)",
        "question": "How many years was Louis Armstrong performing?"
    },
    {
        "answer": "SELECT tournament FROM table_name_12 WHERE runner_s__up = \"scott hoch & kenny perry\"",
        "context": "CREATE TABLE table_name_12 (tournament VARCHAR, runner_s__up VARCHAR)",
        "question": "What tournament had a runner(s)-up of Scott Hoch & Kenny Perry?"
    },
    {
        "answer": "SELECT MIN(kerry__number) FROM table_name_65 WHERE others__percentage = \"0.8%\" AND kerry__percentage = \"70.4%\"",
        "context": "CREATE TABLE table_name_65 (kerry__number INTEGER, others__percentage VARCHAR, kerry__percentage VARCHAR)",
        "question": "What was Kerry's lowest number of votes where Other received 0.8% and Kerry 70.4%?"
    },
    {
        "answer": "SELECT COUNT(others__number) FROM table_name_65 WHERE kerry__percentage = \"44.6%\" AND bush__number > 163 OFFSET 650",
        "context": "CREATE TABLE table_name_65 (others__number VARCHAR, kerry__percentage VARCHAR, bush__number VARCHAR)",
        "question": "How many votes did Others receive where Kerry has 44.6%, and Bush more than 163,650 votes?"
    },
    {
        "answer": "SELECT appointed_by FROM table_name_45 WHERE presentation_of_credentials = \"november 22, 1990\"",
        "context": "CREATE TABLE table_name_45 (appointed_by VARCHAR, presentation_of_credentials VARCHAR)",
        "question": "Which Appointed has a Presentation of Credentials on November 22, 1990"
    },
    {
        "answer": "SELECT termination_of_mission FROM table_name_5 WHERE presentation_of_credentials = \"october 29, 1981\"",
        "context": "CREATE TABLE table_name_5 (termination_of_mission VARCHAR, presentation_of_credentials VARCHAR)",
        "question": "Which Termination of Mission has a Presentation of Credentials on October 29, 1981"
    },
    {
        "answer": "SELECT area_of_operation FROM table_name_19 WHERE services = \"drilling\" AND years_of_operation = \"1999\"",
        "context": "CREATE TABLE table_name_19 (area_of_operation VARCHAR, services VARCHAR, years_of_operation VARCHAR)",
        "question": "Where is the area of operation that had drilling during the year 1999?"
    },
    {
        "answer": "SELECT stage__winner_ FROM table_name_69 WHERE team_classification = \"quick step\" AND young_rider_classification = \"trent lowe\"",
        "context": "CREATE TABLE table_name_69 (stage__winner_ VARCHAR, team_classification VARCHAR, young_rider_classification VARCHAR)",
        "question": "What stage (winner) has quick step as the team classification, and trent lowe as the young rider classification?"
    },
    {
        "answer": "SELECT stage__winner_ FROM table_name_3 WHERE general_classification = \"thor hushovd\" AND young_rider_classification = \"trent lowe\"",
        "context": "CREATE TABLE table_name_3 (stage__winner_ VARCHAR, general_classification VARCHAR, young_rider_classification VARCHAR)",
        "question": "What stage (winner) has thor hushovd as a general classification, and trent lowe as a rider classification?"
    },
    {
        "answer": "SELECT gold_coast FROM table_name_36 WHERE melbourne = \"yes\" AND perth = \"yes\" AND auckland = \"no\" AND sydney = \"no\"",
        "context": "CREATE TABLE table_name_36 (gold_coast VARCHAR, sydney VARCHAR, auckland VARCHAR, melbourne VARCHAR, perth VARCHAR)",
        "question": "Which gold Coast has a Melbourne of yes, a Perth of yes, an Auckland of no, and a Sydney of no?"
    },
    {
        "answer": "SELECT adelaide FROM table_name_76 WHERE auckland = \"no\" AND melbourne = \"no\"",
        "context": "CREATE TABLE table_name_76 (adelaide VARCHAR, auckland VARCHAR, melbourne VARCHAR)",
        "question": "Which Adelaide has an Auckland of no and a Melbourne of no?"
    },
    {
        "answer": "SELECT MIN(division) FROM table_name_79 WHERE goals < 10 AND team = \"dalian shide\" AND apps < 17 AND season = \"2007\"",
        "context": "CREATE TABLE table_name_79 (division INTEGER, season VARCHAR, apps VARCHAR, goals VARCHAR, team VARCHAR)",
        "question": "What is the lowest Division, when Goals are less than 10, when Team is Dalian Shide, when Apps are less than 17, and when Season is 2007?"
    },
    {
        "answer": "SELECT MIN(area) FROM table_name_75 WHERE density > 234.77 AND rank = 32 AND population < 965 OFFSET 040",
        "context": "CREATE TABLE table_name_75 (area INTEGER, population VARCHAR, density VARCHAR, rank VARCHAR)",
        "question": "What is the lowest area when the density is greater than 234.77, the population is less than 965,040, and the rank is 32?"
    },
    {
        "answer": "SELECT analog FROM table_name_9 WHERE callsign = \"wxmi\"",
        "context": "CREATE TABLE table_name_9 (analog VARCHAR, callsign VARCHAR)",
        "question": "what is the analog type for wxmi?"
    },
    {
        "answer": "SELECT adelaide FROM table_name_30 WHERE sydney = \"yes\" AND perth = \"no\" AND melbourne = \"yes\" AND auckland = \"no\"",
        "context": "CREATE TABLE table_name_30 (adelaide VARCHAR, auckland VARCHAR, melbourne VARCHAR, sydney VARCHAR, perth VARCHAR)",
        "question": "Which Adelaide has a Sydney of yes, a Perth of no, a Melbourne of yes, and an Auckland of no?"
    },
    {
        "answer": "SELECT COUNT(gold) FROM table_name_17 WHERE bronze < 3 AND rank < 11 AND silver > 0",
        "context": "CREATE TABLE table_name_17 (gold VARCHAR, silver VARCHAR, bronze VARCHAR, rank VARCHAR)",
        "question": "What is the total number of gold medals for the skater with less than 3 bronze medals, more than 0 silver medals and a rank smaller than 11?"
    },
    {
        "answer": "SELECT COUNT(chart) AS run FROM table_name_18 WHERE debut_position > 7 AND peak_position = 11",
        "context": "CREATE TABLE table_name_18 (chart VARCHAR, debut_position VARCHAR, peak_position VARCHAR)",
        "question": "How many chart runs had a debut position of more than 7 when peak position was 11?"
    },
    {
        "answer": "SELECT SUM(issue) FROM table_name_44 WHERE artist = \"mort drucker\" AND spoofed_title = \"route 67\"",
        "context": "CREATE TABLE table_name_44 (issue INTEGER, artist VARCHAR, spoofed_title VARCHAR)",
        "question": "Which issue was the Spoofed title Route 67 for which Mort Drucker was the artist?"
    },
    {
        "answer": "SELECT category FROM table_name_60 WHERE film = \"(a) torzija\"",
        "context": "CREATE TABLE table_name_60 (category VARCHAR, film VARCHAR)",
        "question": "(A) Torzija was nominated in which category?"
    },
    {
        "answer": "SELECT SUM(losses) FROM table_name_11 WHERE wins = 12 AND points = \"40-4\" AND goals_for > 57",
        "context": "CREATE TABLE table_name_11 (losses INTEGER, goals_for VARCHAR, wins VARCHAR, points VARCHAR)",
        "question": "How many losses altogether were had by teams that won 12 times, had 40-4 points, and more than 57 goals?"
    },
    {
        "answer": "SELECT COUNT(silver) FROM table_name_43 WHERE gold > 2 AND bronze < 35 AND nation = \"china\" AND total > 26",
        "context": "CREATE TABLE table_name_43 (silver VARCHAR, total VARCHAR, nation VARCHAR, gold VARCHAR, bronze VARCHAR)",
        "question": "How many silvers have a gold greater than 2, a bronze less than 35, china as the nation, with a total greater than 26?"
    },
    {
        "answer": "SELECT MIN(wins) FROM table_name_25 WHERE country = \"new zealand\" AND last_title > 1968",
        "context": "CREATE TABLE table_name_25 (wins INTEGER, country VARCHAR, last_title VARCHAR)",
        "question": "Which Wins has a Country of new zealand and a Last title larger than 1968?"
    },
    {
        "answer": "SELECT COUNT(last_title) FROM table_name_79 WHERE wins < 71 AND first_title > 1968 AND country = \"fiji\"",
        "context": "CREATE TABLE table_name_79 (last_title VARCHAR, country VARCHAR, wins VARCHAR, first_title VARCHAR)",
        "question": "What is the total of Last title that has Wins smaller than 71 and a First title larger than 1968 and a Country of fiji?"
    },
    {
        "answer": "SELECT AVG(winners) FROM table_name_2 WHERE wins = 1 AND country = \"fiji\" AND first_title < 2004",
        "context": "CREATE TABLE table_name_2 (winners INTEGER, first_title VARCHAR, wins VARCHAR, country VARCHAR)",
        "question": "How many Winners have Wins of 1 and a Country of fiji and a First title smaller than 2004?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_41 WHERE chassis = \"gordini t16\" AND year < 1954",
        "context": "CREATE TABLE table_name_41 (points INTEGER, chassis VARCHAR, year VARCHAR)",
        "question": "What are the highest points with a Chassis of gordini t16, and a Year smaller than 1954?"
    },
    {
        "answer": "SELECT date FROM table_name_97 WHERE partner = \"christophe rochus\" AND score = \"2\u20136, 7\u20136 (7\u20135) , 0\u20136\"",
        "context": "CREATE TABLE table_name_97 (date VARCHAR, partner VARCHAR, score VARCHAR)",
        "question": "What is the Date when christophe rochus was partner, and the score was 2\u20136, 7\u20136 (7\u20135) , 0\u20136?"
    },
    {
        "answer": "SELECT entrant FROM table_name_77 WHERE year < 1960 AND engine = \"veritas straight-6\"",
        "context": "CREATE TABLE table_name_77 (entrant VARCHAR, year VARCHAR, engine VARCHAR)",
        "question": "What entrant has a year earlier than 1960 and a veritas straight-6 engine?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_73 WHERE chassis = \"veritas rs\" AND points > 0",
        "context": "CREATE TABLE table_name_73 (year INTEGER, chassis VARCHAR, points VARCHAR)",
        "question": "What is the average Year with a Veritas rs chassis and more than 0 points?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_74 WHERE entrant = \"wolfgang seidel\" AND chassis = \"cooper t45\" AND year > 1960",
        "context": "CREATE TABLE table_name_74 (points VARCHAR, year VARCHAR, entrant VARCHAR, chassis VARCHAR)",
        "question": "What is the number of points for the Entrant of wolfgang seidel and a Cooper t45 chassis later than 1960?"
    },
    {
        "answer": "SELECT inf_stem FROM table_name_13 WHERE subj_pres = \"a\" AND plur_pret = \"uo\"",
        "context": "CREATE TABLE table_name_13 (inf_stem VARCHAR, subj_pres VARCHAR, plur_pret VARCHAR)",
        "question": "What is the infinitive stem that is associated with a subjunctive present of a and a plural preterite of uo?"
    },
    {
        "answer": "SELECT placement FROM table_name_58 WHERE votes < 208 AND candidate = \"jordan turner\"",
        "context": "CREATE TABLE table_name_58 (placement VARCHAR, votes VARCHAR, candidate VARCHAR)",
        "question": "What is the Placement when the Votes are fewer than 208, and when the Candidate is Jordan Turner?"
    },
    {
        "answer": "SELECT placement FROM table_name_96 WHERE candidate = \"jean-patrick berthiaume\"",
        "context": "CREATE TABLE table_name_96 (placement VARCHAR, candidate VARCHAR)",
        "question": "What is the Placement when the Candidate is Jean-Patrick Berthiaume?"
    },
    {
        "answer": "SELECT date FROM table_name_90 WHERE sport = \"luge - men's doubles\" AND record = \"start\"",
        "context": "CREATE TABLE table_name_90 (date VARCHAR, sport VARCHAR, record VARCHAR)",
        "question": "What is the Date, when the Sport is luge - men's doubles, and when the Record is, \"start\"?"
    },
    {
        "answer": "SELECT date FROM table_name_38 WHERE result = \"2\u20130\" AND score = \"2 \u2013 0\"",
        "context": "CREATE TABLE table_name_38 (date VARCHAR, result VARCHAR, score VARCHAR)",
        "question": "When has Result of 2\u20130, and a Score of 2 \u2013 0?"
    },
    {
        "answer": "SELECT date FROM table_name_95 WHERE venue = \"melbourne cricket ground\" AND result = \"eng by inns&225 runs\"",
        "context": "CREATE TABLE table_name_95 (date VARCHAR, venue VARCHAR, result VARCHAR)",
        "question": "What is Date, when Venue is Melbourne Cricket Ground, and when Result is Eng By Inns&225 Runs?"
    },
    {
        "answer": "SELECT result FROM table_name_31 WHERE venue = \"sydney cricket ground\" AND date = \"23,24,26,27,28,29 feb, 1 mar 1912\"",
        "context": "CREATE TABLE table_name_31 (result VARCHAR, venue VARCHAR, date VARCHAR)",
        "question": "What is Result, when Venue is Sydney Cricket Ground, and when Date is 23,24,26,27,28,29 Feb, 1 Mar 1912?"
    },
    {
        "answer": "SELECT margin_of_victory FROM table_name_38 WHERE winning_score = 71 - 69 - 71 - 70 = 281",
        "context": "CREATE TABLE table_name_38 (margin_of_victory VARCHAR, winning_score VARCHAR)",
        "question": "What was the margin of victory for the win with a score of 71-69-71-70=281?"
    },
    {
        "answer": "SELECT MAX(opened_in) FROM table_name_93 WHERE manufacture = \"zamperla\" AND type = \"convoy ride\" AND ride_name = \"tiny truckers\"",
        "context": "CREATE TABLE table_name_93 (opened_in INTEGER, ride_name VARCHAR, manufacture VARCHAR, type VARCHAR)",
        "question": "What is the latest year a ride opened that was manufactured by Zamperla, was a convoy ride, and had a name of Tiny Truckers?"
    },
    {
        "answer": "SELECT COUNT(number_of_seasons_in_meistriliiga) FROM table_name_17 WHERE club = \"kuressaare\" AND first_season_in_top_division > 2000",
        "context": "CREATE TABLE table_name_17 (number_of_seasons_in_meistriliiga VARCHAR, club VARCHAR, first_season_in_top_division VARCHAR)",
        "question": "How many seasons in Meistriliiga when the club was kuressaare also had a first season in top division of more than 2000?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_37 WHERE engine = \"cosworth v8\"",
        "context": "CREATE TABLE table_name_37 (year INTEGER, engine VARCHAR)",
        "question": "What year did the Cosworth v8 engine participate in?"
    },
    {
        "answer": "SELECT time FROM table_name_44 WHERE heat < 3 AND lane > 2 AND name = \"jean luc razakarivony\"",
        "context": "CREATE TABLE table_name_44 (time VARCHAR, name VARCHAR, heat VARCHAR, lane VARCHAR)",
        "question": "What was the time for Jean Luc Razakarivony with less than 3 heat and more than 2 lanes?"
    },
    {
        "answer": "SELECT SUM(joined) FROM table_name_59 WHERE institution = \"northeastern university\"",
        "context": "CREATE TABLE table_name_59 (joined INTEGER, institution VARCHAR)",
        "question": "When did Northeastern University join?"
    },
    {
        "answer": "SELECT loss FROM table_name_8 WHERE date = \"june 22\"",
        "context": "CREATE TABLE table_name_8 (loss VARCHAR, date VARCHAR)",
        "question": "Name the loss for june 22"
    },
    {
        "answer": "SELECT prohibition_ticket FROM table_name_39 WHERE greenback_ticket = \"abraham j. cuddeback\"",
        "context": "CREATE TABLE table_name_39 (prohibition_ticket VARCHAR, greenback_ticket VARCHAR)",
        "question": "Who was on the prohibition ticket when Abraham J. Cuddeback was on the Greenback ticket?"
    },
    {
        "answer": "SELECT name FROM table_name_55 WHERE acquisition_via = \"import\" AND number > 22",
        "context": "CREATE TABLE table_name_55 (name VARCHAR, acquisition_via VARCHAR, number VARCHAR)",
        "question": "What is the name of the player acquired via import and larger than 22?"
    },
    {
        "answer": "SELECT COUNT(ends_lost) FROM table_name_67 WHERE blank_ends = 15 AND stolen_ends < 14",
        "context": "CREATE TABLE table_name_67 (ends_lost VARCHAR, blank_ends VARCHAR, stolen_ends VARCHAR)",
        "question": "What is the number of ends lost when there are 15 blank ends, less than 14 stolen ends?"
    },
    {
        "answer": "SELECT method FROM table_name_72 WHERE time = \"5:00\" AND round < 3 AND res = \"loss\" AND event = \"road fc 12\"",
        "context": "CREATE TABLE table_name_72 (method VARCHAR, event VARCHAR, res VARCHAR, time VARCHAR, round VARCHAR)",
        "question": "What is the method of the match in the Road fc 12 at 5:00 with less than 3 rounds, and a loss result?"
    },
    {
        "answer": "SELECT first_us_tour_cast FROM table_name_16 WHERE original_broadway_cast = \"sarah bolt\"",
        "context": "CREATE TABLE table_name_16 (first_us_tour_cast VARCHAR, original_broadway_cast VARCHAR)",
        "question": "What shows as the First US Tour Cast when the Original Broadway Cast was Sarah Bolt?"
    },
    {
        "answer": "SELECT issue FROM table_name_50 WHERE spoofed_title = \"the crockford files\"",
        "context": "CREATE TABLE table_name_50 (issue VARCHAR, spoofed_title VARCHAR)",
        "question": "What issue was the Spoofed Title of the crockford files in?"
    },
    {
        "answer": "SELECT original_west_end_cast FROM table_name_1 WHERE original_broadway_cast = \"audrie neenan\"",
        "context": "CREATE TABLE table_name_1 (original_west_end_cast VARCHAR, original_broadway_cast VARCHAR)",
        "question": "Who was in the Original West End Cast when the Original Broadway Cast was audrie neenan?"
    },
    {
        "answer": "SELECT COUNT(lost) FROM table_name_93 WHERE against < 37 AND drawn > 2 AND played > 20",
        "context": "CREATE TABLE table_name_93 (lost VARCHAR, played VARCHAR, against VARCHAR, drawn VARCHAR)",
        "question": "What is the sum of lost when against is less than 37, drawn is more than 2, and played is more than 20?"
    },
    {
        "answer": "SELECT MIN(population__2011_) FROM table_name_89 WHERE density__inhabitants_km_2__ = 36.7",
        "context": "CREATE TABLE table_name_89 (population__2011_ INTEGER, density__inhabitants_km_2__ VARCHAR)",
        "question": "What is the lowest population for the area that has a density of 36.7?"
    },
    {
        "answer": "SELECT COUNT(points_against) FROM table_name_97 WHERE team = \"cardiff\" AND tries_against < 7",
        "context": "CREATE TABLE table_name_97 (points_against VARCHAR, team VARCHAR, tries_against VARCHAR)",
        "question": "How many points against has team Cardiff had when there were less than 7 tries?"
    },
    {
        "answer": "SELECT start FROM table_name_22 WHERE engine = \"ford cosworth dfx\" AND year > 1981 AND entrant = \"kraco enterprises\"",
        "context": "CREATE TABLE table_name_22 (start VARCHAR, entrant VARCHAR, engine VARCHAR, year VARCHAR)",
        "question": "What start has a ford cosworth dfx as the engine, a year later than 1981, and kraco enterprises as the entrant?"
    },
    {
        "answer": "SELECT package_option FROM table_name_84 WHERE country = \"italy\" AND content = \"general television\" AND television_service = \"cielo\"",
        "context": "CREATE TABLE table_name_84 (package_option VARCHAR, television_service VARCHAR, country VARCHAR, content VARCHAR)",
        "question": "What was the option from Italy with general television content, and the Cielo television service?"
    },
    {
        "answer": "SELECT COUNT(bronze_medals) FROM table_name_87 WHERE gold_medals = 2 AND total_medals > 4 AND silver_medals < 5",
        "context": "CREATE TABLE table_name_87 (bronze_medals VARCHAR, silver_medals VARCHAR, gold_medals VARCHAR, total_medals VARCHAR)",
        "question": "Name the total number of bronze medals when gold medals was 2, total medals more than 4 and silver medals less than 5"
    },
    {
        "answer": "SELECT country FROM table_name_91 WHERE content = \"tematico\" AND package_option = \"sky tv\" AND television_service = \"lei\"",
        "context": "CREATE TABLE table_name_91 (country VARCHAR, television_service VARCHAR, content VARCHAR, package_option VARCHAR)",
        "question": "What country has Tematico Content, and a package with sky TV and the Lei television service?"
    },
    {
        "answer": "SELECT television_service FROM table_name_30 WHERE package_option = \"sky tv\" AND language = \"italian english\"",
        "context": "CREATE TABLE table_name_30 (television_service VARCHAR, package_option VARCHAR, language VARCHAR)",
        "question": "What is the television service that has package with sky tv, and it in Italian English?"
    },
    {
        "answer": "SELECT language FROM table_name_55 WHERE content = \"tematico\" AND package_option = \"sky tv\" AND television_service = \"fox crime\"",
        "context": "CREATE TABLE table_name_55 (language VARCHAR, television_service VARCHAR, content VARCHAR, package_option VARCHAR)",
        "question": "What language is the Tematico content with a sky tv package, and Fox Crime television service?"
    },
    {
        "answer": "SELECT category FROM table_name_44 WHERE result = \"nominated\" AND year = 2010 AND award = \"kids' choice awards mexico\" AND recipient_s_ = \"joe jonas\"",
        "context": "CREATE TABLE table_name_44 (category VARCHAR, recipient_s_ VARCHAR, award VARCHAR, result VARCHAR, year VARCHAR)",
        "question": "What category was Joe Jonas nominated for at the Kids' Choice Awards Mexico in 2010?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_93 WHERE competition = \"olympic games\" AND venue = \"atlanta, united states\"",
        "context": "CREATE TABLE table_name_93 (year INTEGER, competition VARCHAR, venue VARCHAR)",
        "question": "Which Year has a Competition of olympic games, and a Venue of atlanta, united states?"
    },
    {
        "answer": "SELECT finish_construction FROM table_name_28 WHERE unit = \"greifswald - 4 (kgr 4)\"",
        "context": "CREATE TABLE table_name_28 (finish_construction VARCHAR, unit VARCHAR)",
        "question": "What was the date that construction was finished when the unit was greifswald - 4 (kgr 4)?"
    },
    {
        "answer": "SELECT year FROM table_name_13 WHERE venue = \"atlanta, united states\"",
        "context": "CREATE TABLE table_name_13 (year VARCHAR, venue VARCHAR)",
        "question": "Which Year has a Venue of atlanta, united states?"
    },
    {
        "answer": "SELECT net_power FROM table_name_74 WHERE type = \"wwer-440/230\" AND finish_construction = \"24.10.1977\"",
        "context": "CREATE TABLE table_name_74 (net_power VARCHAR, type VARCHAR, finish_construction VARCHAR)",
        "question": "What was the net power, when the type was wwer-440/230, and when construction was finished on 24.10.1977?"
    },
    {
        "answer": "SELECT AVG(share) FROM table_name_56 WHERE viewers__millions_ > 7.82 AND rank__timeslot_ = \"3\" AND rank__week_ = \"54\"",
        "context": "CREATE TABLE table_name_56 (share INTEGER, rank__week_ VARCHAR, viewers__millions_ VARCHAR, rank__timeslot_ VARCHAR)",
        "question": "What is the average share for episodes with over 7.82 viewers, ranks of 3 and a weekly rank of 54?"
    },
    {
        "answer": "SELECT series_finale FROM table_name_56 WHERE translation = \"\u10dd\u10f0 \u10d4\u10e1 \u10ea\u10e0\u10d4\u10db\u10da\u10d4\u10d1\u10d8 / \u10de\u10d0\u10e0\u10d0\u10da\u10d4\u10da\u10e3\u10e0\u10d8 \u10e1\u10d0\u10d8\u10d3\u10e3\u10db\u10da\u10dd\"",
        "context": "CREATE TABLE table_name_56 (series_finale VARCHAR, translation VARCHAR)",
        "question": "What series finale has the translation \u10dd\u10f0 \u10d4\u10e1 \u10ea\u10e0\u10d4\u10db\u10da\u10d4\u10d1\u10d8 / \u10de\u10d0\u10e0\u10d0\u10da\u10d4\u10da\u10e3\u10e0\u10d8 \u10e1\u10d0\u10d8\u10d3\u10e3\u10db\u10da\u10dd?"
    },
    {
        "answer": "SELECT category FROM table_name_62 WHERE recipient = \"the suite life on deck\" AND year > 2010",
        "context": "CREATE TABLE table_name_62 (category VARCHAR, recipient VARCHAR, year VARCHAR)",
        "question": "What category was The Suite Life on Deck nominated for later than 2010?"
    },
    {
        "answer": "SELECT AVG(joined) FROM table_name_55 WHERE nickname = \"wildcats\" AND location = \"longmeadow, massachusetts\"",
        "context": "CREATE TABLE table_name_55 (joined INTEGER, nickname VARCHAR, location VARCHAR)",
        "question": "What is the average Joined with a Nickname of wildcats in longmeadow, massachusetts?"
    },
    {
        "answer": "SELECT SUM(asian_or_amerindian___percentage_) FROM table_name_44 WHERE state = \"sergipe\" AND brown___percentage_ > 61 OFFSET 3",
        "context": "CREATE TABLE table_name_44 (asian_or_amerindian___percentage_ INTEGER, state VARCHAR, brown___percentage_ VARCHAR)",
        "question": "What is the sum of Asian or Amerindian (%), when State is Sergipe, and when Brown (%) is greater than 61,3?"
    },
    {
        "answer": "SELECT federal_state FROM table_name_3 WHERE representatives_of_national_average = \"6\"",
        "context": "CREATE TABLE table_name_3 (federal_state VARCHAR, representatives_of_national_average VARCHAR)",
        "question": "Which federal state has 6 representatives of national average?"
    },
    {
        "answer": "SELECT award FROM table_name_54 WHERE actor = \"forest whitaker\" AND year = 1989",
        "context": "CREATE TABLE table_name_54 (award VARCHAR, actor VARCHAR, year VARCHAR)",
        "question": "What award did Forest Whitaker win in 1989?"
    },
    {
        "answer": "SELECT MIN(influence) FROM table_name_58 WHERE population_millions < 60.64 AND meps < 22 AND inhabitants_per_mep = 454 OFFSET 059",
        "context": "CREATE TABLE table_name_58 (influence INTEGER, inhabitants_per_mep VARCHAR, population_millions VARCHAR, meps VARCHAR)",
        "question": "What is the lowest influence with population in the millions less than 60.64, and MEPs less than 22, and 454,059 inhabitant per MEP?"
    },
    {
        "answer": "SELECT MAX(population_millions) FROM table_name_55 WHERE influence = 1.02",
        "context": "CREATE TABLE table_name_55 (population_millions INTEGER, influence VARCHAR)",
        "question": "What is the highest population in the millions that has an influence of 1.02?"
    },
    {
        "answer": "SELECT SUM(population_millions) FROM table_name_49 WHERE influence < 2.91 AND meps < 13 AND member_state = \"latvia\" AND inhabitants_per_mep > 286 OFFSET 875",
        "context": "CREATE TABLE table_name_49 (population_millions INTEGER, inhabitants_per_mep VARCHAR, member_state VARCHAR, influence VARCHAR, meps VARCHAR)",
        "question": "What is the sum of the population in millions that has an influence less than 2.91, a MEP smaller than 13, a member of Latvia, and more than 286,875 inhabitants per MEP?"
    },
    {
        "answer": "SELECT MAX(inhabitants_per_mep) FROM table_name_26 WHERE meps > 50 AND member_state = \"germany\" AND population_millions < 82.43",
        "context": "CREATE TABLE table_name_26 (inhabitants_per_mep INTEGER, population_millions VARCHAR, meps VARCHAR, member_state VARCHAR)",
        "question": "What is the highest number of inhabitants per MEP that has MEPs larger than 50, a member of Germany, and a population less than 82.43 million?"
    },
    {
        "answer": "SELECT team FROM table_name_22 WHERE driver_s_ = \"reed sorenson\"",
        "context": "CREATE TABLE table_name_22 (team VARCHAR, driver_s_ VARCHAR)",
        "question": "What team does Reed Sorenson drive for?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_98 WHERE poles < 2 AND fast_laps = 0 AND drivers = \"adrian quaife-hobbs\"",
        "context": "CREATE TABLE table_name_98 (year INTEGER, drivers VARCHAR, poles VARCHAR, fast_laps VARCHAR)",
        "question": "What is the average Year during which the Driver Adrian Quaife-Hobbs has fewer than 2 Poles, and 0 Fast laps?"
    },
    {
        "answer": "SELECT crew_chief FROM table_name_36 WHERE team = \"tristar motorsports\" AND driver_s_ = \"eric mcclure\"",
        "context": "CREATE TABLE table_name_36 (crew_chief VARCHAR, team VARCHAR, driver_s_ VARCHAR)",
        "question": "Who is Eric McClure's and Tristar Motorsports' crew chief?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_83 WHERE lane > 4 AND nationality = \"great britain\" AND name = \"margaretha pedder\"",
        "context": "CREATE TABLE table_name_83 (rank VARCHAR, name VARCHAR, lane VARCHAR, nationality VARCHAR)",
        "question": "How many ranks are higher than lane 4 from Great Britain, raced by Margaretha Pedder?"
    },
    {
        "answer": "SELECT name FROM table_name_9 WHERE capacity__mw_ = 25",
        "context": "CREATE TABLE table_name_9 (name VARCHAR, capacity__mw_ VARCHAR)",
        "question": "What is the Name of the power station with a Capacity of 25 MW?"
    },
    {
        "answer": "SELECT claimed_sales FROM table_name_85 WHERE genre = \"rock\"",
        "context": "CREATE TABLE table_name_85 (claimed_sales VARCHAR, genre VARCHAR)",
        "question": "What is the number of claimed sales in the rock genre?"
    },
    {
        "answer": "SELECT MIN(release_year_of_first_charted_record) FROM table_name_88 WHERE artist = \"abba\"",
        "context": "CREATE TABLE table_name_88 (release_year_of_first_charted_record INTEGER, artist VARCHAR)",
        "question": "What was the earliest release-year of the first charted record of Abba?"
    },
    {
        "answer": "SELECT AVG(bush_number) FROM table_name_70 WHERE others_number > 57 AND bush_percentage = \"49.2%\"",
        "context": "CREATE TABLE table_name_70 (bush_number INTEGER, others_number VARCHAR, bush_percentage VARCHAR)",
        "question": "What is the average value of Bush# when the value for Others# is greater than 57, and the value for Bush% is 49.2%?"
    },
    {
        "answer": "SELECT score FROM table_name_51 WHERE competition = \"test\" AND date = \"23 apr 1988\"",
        "context": "CREATE TABLE table_name_51 (score VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "A competition of test taking place on 23 Apr 1988 had what as a score?"
    },
    {
        "answer": "SELECT name FROM table_name_8 WHERE lane < 7 AND time > 54.32 AND nationality = \"germany\" AND rank < 5",
        "context": "CREATE TABLE table_name_8 (name VARCHAR, rank VARCHAR, nationality VARCHAR, lane VARCHAR, time VARCHAR)",
        "question": "Which name has a lane smaller than 7, and a time greater than 54.32 with germany as the nationality and a rank less than 5?"
    },
    {
        "answer": "SELECT AVG(time) FROM table_name_99 WHERE name = \"eithan urbach\" AND lane > 2",
        "context": "CREATE TABLE table_name_99 (time INTEGER, name VARCHAR, lane VARCHAR)",
        "question": "Which average time has eithan urbach as a name with a lane bigger than 2?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_17 WHERE engine = \"cosworth straight-4\" AND entrant = \"ron harris / team lotus\"",
        "context": "CREATE TABLE table_name_17 (year INTEGER, engine VARCHAR, entrant VARCHAR)",
        "question": "What is the average Year when there was a cosworth straight-4 engine, and the Entrant was ron harris / team lotus?"
    },
    {
        "answer": "SELECT color_code__with_fusible_link_ FROM table_name_67 WHERE temperature_classification = \"ordinary\"",
        "context": "CREATE TABLE table_name_67 (color_code__with_fusible_link_ VARCHAR, temperature_classification VARCHAR)",
        "question": "What is the color code with a temperature classification of ordinary?"
    },
    {
        "answer": "SELECT temperature_rating FROM table_name_1 WHERE temperature_classification = \"intermediate\"",
        "context": "CREATE TABLE table_name_1 (temperature_rating VARCHAR, temperature_classification VARCHAR)",
        "question": "What is the temperature rating of the intermediate temperature classification?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_37 WHERE games = 17 AND losses > 15",
        "context": "CREATE TABLE table_name_37 (points INTEGER, games VARCHAR, losses VARCHAR)",
        "question": "What is the average number of points for a team that played 17 games and had more than 15 losses?"
    },
    {
        "answer": "SELECT home FROM table_name_58 WHERE ground = \"humber college north\" AND time = \"15:00\"",
        "context": "CREATE TABLE table_name_58 (home VARCHAR, ground VARCHAR, time VARCHAR)",
        "question": "What is Home, when Ground is Humber College North, and when Time is 15:00?"
    },
    {
        "answer": "SELECT SUM(challenge_cup) FROM table_name_90 WHERE league = 1 AND player = \"simon storey\" AND total > 1",
        "context": "CREATE TABLE table_name_90 (challenge_cup INTEGER, total VARCHAR, league VARCHAR, player VARCHAR)",
        "question": "What is the Challenge Cup total with a League of 1, Player Simon Storey, and a Total greater than 1?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_37 WHERE venue = \"g\u00f6tzis, austria\" AND position = \"1st\"",
        "context": "CREATE TABLE table_name_37 (year INTEGER, venue VARCHAR, position VARCHAR)",
        "question": "In what Year did Chernova come in 1st in G\u00f6tzis, Austria?"
    },
    {
        "answer": "SELECT SUM(shirt_no) FROM table_name_6 WHERE birth_date = \"8 november 1980\" AND weight < 93",
        "context": "CREATE TABLE table_name_6 (shirt_no INTEGER, birth_date VARCHAR, weight VARCHAR)",
        "question": "Birth Date of 8 November 1980, and a Weight smaller than 93 has what sum of a shirt number?"
    },
    {
        "answer": "SELECT COUNT(weight) FROM table_name_63 WHERE shirt_no = 18 AND height > 195",
        "context": "CREATE TABLE table_name_63 (weight VARCHAR, shirt_no VARCHAR, height VARCHAR)",
        "question": "Shirt number of 18, and a Height larger than 195 has how much weight?"
    },
    {
        "answer": "SELECT opponent FROM table_name_57 WHERE record = \"1-3\"",
        "context": "CREATE TABLE table_name_57 (opponent VARCHAR, record VARCHAR)",
        "question": "Who is the opponent the Seattle Seahawks played when their record was 1-3?"
    },
    {
        "answer": "SELECT COUNT(runners_up) FROM table_name_92 WHERE winning_years = \"2010\"",
        "context": "CREATE TABLE table_name_92 (runners_up VARCHAR, winning_years VARCHAR)",
        "question": "What is the total number of runners-up for a club with winning years of 2010?"
    },
    {
        "answer": "SELECT opponent FROM table_name_27 WHERE loss = \"harden (9-6)\"",
        "context": "CREATE TABLE table_name_27 (opponent VARCHAR, loss VARCHAR)",
        "question": "Who was the opponent at the game that had a loss of Harden (9-6)?"
    },
    {
        "answer": "SELECT SUM(laps) FROM table_name_17 WHERE co_drivers = \"oliver gavin jan magnussen\" AND class = \"gts\" AND year < 2004",
        "context": "CREATE TABLE table_name_17 (laps INTEGER, year VARCHAR, co_drivers VARCHAR, class VARCHAR)",
        "question": "Name the sum of Laps for co-drivers of oliver gavin jan magnussen and class of gts with year less than 2004"
    },
    {
        "answer": "SELECT hardness FROM table_name_45 WHERE liquid_at__\u00b0c_ = \"243\"",
        "context": "CREATE TABLE table_name_45 (hardness VARCHAR, liquid_at__\u00b0c_ VARCHAR)",
        "question": "What is the hardness for the alloy that is liquid at 243 degrees C?"
    },
    {
        "answer": "SELECT casting_at__\u00b0c_ FROM table_name_98 WHERE hardness = \"21\"",
        "context": "CREATE TABLE table_name_98 (casting_at__\u00b0c_ VARCHAR, hardness VARCHAR)",
        "question": "What is the casting temperature for the alloy with hardness 21?"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_35 WHERE grid = 13",
        "context": "CREATE TABLE table_name_35 (laps VARCHAR, grid VARCHAR)",
        "question": "How many laps were there for a grid of 13?"
    },
    {
        "answer": "SELECT MAX(ranking_round_rank) FROM table_name_3 WHERE nation = \"russia\" AND final_rank > 11",
        "context": "CREATE TABLE table_name_3 (ranking_round_rank INTEGER, nation VARCHAR, final_rank VARCHAR)",
        "question": "What is the highest Ranking Round Rank for Russia with a Final Rank over 11?"
    },
    {
        "answer": "SELECT starting_point FROM table_name_66 WHERE operates = \"north/south\" AND name = \"palafox street\"",
        "context": "CREATE TABLE table_name_66 (starting_point VARCHAR, operates VARCHAR, name VARCHAR)",
        "question": "What is the starting point of the north/south operating Palafox Street route?"
    },
    {
        "answer": "SELECT music FROM table_name_35 WHERE team = \"anna guzik & rafa\u0142 kami\u0144ski\" AND points_jury = \"24 (7,5,6,6)\"",
        "context": "CREATE TABLE table_name_35 (music VARCHAR, team VARCHAR, points_jury VARCHAR)",
        "question": "What is the Music for Team anna guzik & rafa\u0142 kami\u0144ski that has a Points Jury of 24 (7,5,6,6)?"
    },
    {
        "answer": "SELECT direction FROM table_name_50 WHERE starting_point = \"downtown transit center\" AND terminus = \"pensacola beach\"",
        "context": "CREATE TABLE table_name_50 (direction VARCHAR, starting_point VARCHAR, terminus VARCHAR)",
        "question": "What is the direction of the route that stars at downtown transit center and has a terminus point at Pensacola Beach?"
    },
    {
        "answer": "SELECT date FROM table_name_84 WHERE score = \"5-2\" AND loss = \"greinke (1-2)\"",
        "context": "CREATE TABLE table_name_84 (date VARCHAR, score VARCHAR, loss VARCHAR)",
        "question": "On what Date had a Score of 5-2 and a Loss of Greinke (1-2)?"
    },
    {
        "answer": "SELECT second FROM table_name_58 WHERE team = \"north america\" AND country = \"canada\" AND home = \"edmonton\"",
        "context": "CREATE TABLE table_name_58 (second VARCHAR, home VARCHAR, team VARCHAR, country VARCHAR)",
        "question": "Who is the second of the North America team from Edmonton, Canada?"
    },
    {
        "answer": "SELECT AVG(first_elected) FROM table_name_18 WHERE district = \"11\" AND committee = \"environmental matters\"",
        "context": "CREATE TABLE table_name_18 (first_elected INTEGER, district VARCHAR, committee VARCHAR)",
        "question": "What is the average first elected year that has a district of 11 and a committee of environmental matters?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_name_80 WHERE counties_represented = \"baltimore county\" AND district = \"06.0 6\" AND committee = \"economic matters\"",
        "context": "CREATE TABLE table_name_80 (first_elected VARCHAR, committee VARCHAR, counties_represented VARCHAR, district VARCHAR)",
        "question": "What is the total number of First elected that has a country represented in Baltimore county, a district of 06.0 6, and a committee of economic matters?"
    },
    {
        "answer": "SELECT district FROM table_name_86 WHERE counties_represented = \"baltimore county\" AND committee = \"health and government operations\" AND first_elected < 2002",
        "context": "CREATE TABLE table_name_86 (district VARCHAR, first_elected VARCHAR, counties_represented VARCHAR, committee VARCHAR)",
        "question": "What district has counties represented by Baltimore county, a committee of health and government operations, and a first elected smaller than 2002?"
    },
    {
        "answer": "SELECT AVG(ranking) FROM table_name_53 WHERE nationality = \"saudi arabia\" AND years = \"2000\u2013\"",
        "context": "CREATE TABLE table_name_53 (ranking INTEGER, nationality VARCHAR, years VARCHAR)",
        "question": "What was the average ranking of Saudi Arabia in the years of 2000\u2013?"
    },
    {
        "answer": "SELECT AVG(top_5) FROM table_name_80 WHERE tournament = \"totals\" AND top_25 > 4",
        "context": "CREATE TABLE table_name_80 (top_5 INTEGER, tournament VARCHAR, top_25 VARCHAR)",
        "question": "what is the top-5 when the tournament is totals and the top-25 is more than 4?"
    },
    {
        "answer": "SELECT COUNT(top_5) FROM table_name_95 WHERE tournament = \"pga championship\" AND events < 4",
        "context": "CREATE TABLE table_name_95 (top_5 VARCHAR, tournament VARCHAR, events VARCHAR)",
        "question": "what is the total number of times the tournament was pga championship and evens is less than 4?"
    },
    {
        "answer": "SELECT points FROM table_name_84 WHERE year > 1972 AND entrant = \"marlboro team alfa romeo\"",
        "context": "CREATE TABLE table_name_84 (points VARCHAR, year VARCHAR, entrant VARCHAR)",
        "question": "After 1972, how many points did Marlboro Team Alfa Romeo have?"
    },
    {
        "answer": "SELECT points FROM table_name_3 WHERE engine = \"ford v8\" AND chassis = \"tyrrell 007\"",
        "context": "CREATE TABLE table_name_3 (points VARCHAR, engine VARCHAR, chassis VARCHAR)",
        "question": "How many points did the Ford V8 with a Tyrrell 007 have?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_75 WHERE entrant = \"elf team tyrrell\" AND points = \"39\" AND chassis = \"tyrrell 007\"",
        "context": "CREATE TABLE table_name_75 (year INTEGER, chassis VARCHAR, entrant VARCHAR, points VARCHAR)",
        "question": "What year did Elf Team Tyrrell have 39 points and a Tyrrell 007 Chassis?"
    },
    {
        "answer": "SELECT location FROM table_name_8 WHERE home_team = \"mexico\" AND date = \"11 april 2013\"",
        "context": "CREATE TABLE table_name_8 (location VARCHAR, home_team VARCHAR, date VARCHAR)",
        "question": "What is the location of 11 April 2013 and Mexico Home team?"
    },
    {
        "answer": "SELECT school_club_team FROM table_10015132_9 WHERE player = \"Amir Johnson\"",
        "context": "CREATE TABLE table_10015132_9 (school_club_team VARCHAR, player VARCHAR)",
        "question": "What school/club team is Amir Johnson on?"
    },
    {
        "answer": "SELECT date FROM table_name_26 WHERE opponent = \"new england patriots\"",
        "context": "CREATE TABLE table_name_26 (date VARCHAR, opponent VARCHAR)",
        "question": "What date has new england patriots as the opponent?"
    },
    {
        "answer": "SELECT entered_office_as_head_of_state_or_government FROM table_10026563_1 WHERE office = \"Prime Minister of Italy\"",
        "context": "CREATE TABLE table_10026563_1 (entered_office_as_head_of_state_or_government VARCHAR, office VARCHAR)",
        "question": "When did the Prime Minister of Italy take office?"
    },
    {
        "answer": "SELECT country___exonym__ FROM table_1008653_1 WHERE official_or_native_language_s___alphabet_script_ = \"Dutch Papiamento\"",
        "context": "CREATE TABLE table_1008653_1 (country___exonym__ VARCHAR, official_or_native_language_s___alphabet_script_ VARCHAR)",
        "question": "What is the English name of the country whose official native language is Dutch Papiamento?"
    },
    {
        "answer": "SELECT capital___endonym__ FROM table_1008653_1 WHERE capital___exonym__ = \"Canberra\"",
        "context": "CREATE TABLE table_1008653_1 (capital___endonym__ VARCHAR, capital___exonym__ VARCHAR)",
        "question": "What is the local name given to the city of Canberra?"
    },
    {
        "answer": "SELECT school_club_team FROM table_name_84 WHERE acquisition_via = \"rookie draft\" AND position = \"guard\" AND name = \"dennis miranda\"",
        "context": "CREATE TABLE table_name_84 (school_club_team VARCHAR, name VARCHAR, acquisition_via VARCHAR, position VARCHAR)",
        "question": "What team acquired as a rookie draft in the position of guard Dennis Miranda?"
    },
    {
        "answer": "SELECT number FROM table_name_82 WHERE name = \"rashad mccants\"",
        "context": "CREATE TABLE table_name_82 (number VARCHAR, name VARCHAR)",
        "question": "What number was Rashad McCants?"
    },
    {
        "answer": "SELECT us_open_cup FROM table_1046170_5 WHERE playoffs = \"division Semifinals\"",
        "context": "CREATE TABLE table_1046170_5 (us_open_cup VARCHAR, playoffs VARCHAR)",
        "question": "which round is u.s. open cup division semifinals"
    },
    {
        "answer": "SELECT playoffs FROM table_1046170_5 WHERE regular_season = \"1st, Atlantic division\"",
        "context": "CREATE TABLE table_1046170_5 (playoffs VARCHAR, regular_season VARCHAR)",
        "question": "what are all the playoffs for regular season is 1st, atlantic division"
    },
    {
        "answer": "SELECT playoffs FROM table_1046170_5 WHERE us_open_cup = \"1st Round\"",
        "context": "CREATE TABLE table_1046170_5 (playoffs VARCHAR, us_open_cup VARCHAR)",
        "question": "what are all the playoffs for u.s. open cup in 1st round"
    },
    {
        "answer": "SELECT match FROM table_name_13 WHERE team = \"start gniezno\"",
        "context": "CREATE TABLE table_name_13 (match VARCHAR, team VARCHAR)",
        "question": "What was the match number for Start Gniezno?"
    },
    {
        "answer": "SELECT fastest_lap FROM table_10706961_2 WHERE name = \"Escort Radar Warning 200\"",
        "context": "CREATE TABLE table_10706961_2 (fastest_lap VARCHAR, name VARCHAR)",
        "question": "What was the fastest lap time in the Escort Radar Warning 200?"
    },
    {
        "answer": "SELECT COUNT(report) FROM table_10707176_2 WHERE circuit = \"Cleveland Burke Lakefront Airport\"",
        "context": "CREATE TABLE table_10707176_2 (report VARCHAR, circuit VARCHAR)",
        "question": "How many reports were the for the cleveland burke lakefront airport circut?"
    },
    {
        "answer": "SELECT purse FROM table_name_41 WHERE year < 2009 AND owner = \"harold a. allen\"",
        "context": "CREATE TABLE table_name_41 (purse VARCHAR, year VARCHAR, owner VARCHAR)",
        "question": "What was the Purse for Owner Harold A. Allen prior to 2009?"
    },
    {
        "answer": "SELECT gdp__ppp__per_capita_2012_euro FROM table_name_49 WHERE population_in_millions > 10.8 AND gdp__nominal__per_capita_2012_euro = \"25,600\"",
        "context": "CREATE TABLE table_name_49 (gdp__ppp__per_capita_2012_euro VARCHAR, population_in_millions VARCHAR, gdp__nominal__per_capita_2012_euro VARCHAR)",
        "question": "What is GDP (PPP) Per Capita 2012 Euro, when Population In Millions is greater than 10.8, and when GDP (Nominal) Per Capita 2012 Euro is 25,600?"
    },
    {
        "answer": "SELECT gdp_2012_millions_of_euro FROM table_name_51 WHERE population_in_millions < 1.3 AND gdp__nominal__per_capita_2012_euro = \"20,700(p)\"",
        "context": "CREATE TABLE table_name_51 (gdp_2012_millions_of_euro VARCHAR, population_in_millions VARCHAR, gdp__nominal__per_capita_2012_euro VARCHAR)",
        "question": "What is GDP 2012 Millions of Euro, when Population in Millions is less than 1.3, and when GDP (Nominal) Per Capita 2012 Euro is 20,700(p)?"
    },
    {
        "answer": "SELECT licence_award_date FROM table_10712301_5 WHERE region = \"North East England\"",
        "context": "CREATE TABLE table_10712301_5 (licence_award_date VARCHAR, region VARCHAR)",
        "question": "What is the license award date for North East England?"
    },
    {
        "answer": "SELECT country FROM table_name_36 WHERE material = \"concrete\" AND span_metres < 270 AND span_feet > 837 AND year_opened = \"1943\"",
        "context": "CREATE TABLE table_name_36 (country VARCHAR, year_opened VARCHAR, span_feet VARCHAR, material VARCHAR, span_metres VARCHAR)",
        "question": "Which country's material was concrete when the span metres were less than 270, span feet is more than 837, and the year opened was 1943?"
    },
    {
        "answer": "SELECT finish FROM table_name_70 WHERE total > 286 AND to_par = \"+4\" AND player = \"bob tway\"",
        "context": "CREATE TABLE table_name_70 (finish VARCHAR, player VARCHAR, total VARCHAR, to_par VARCHAR)",
        "question": "What was the finish with a total larger than 286, a to par of +4 and Bob Tway played?"
    },
    {
        "answer": "SELECT player FROM table_name_78 WHERE country = \"united states\" AND total = 286 AND year_s__won = \"2003\"",
        "context": "CREATE TABLE table_name_78 (player VARCHAR, year_s__won VARCHAR, country VARCHAR, total VARCHAR)",
        "question": "What player in the United States had a total of 286 and won in 2003?"
    },
    {
        "answer": "SELECT village__german_ FROM table_10798421_1 WHERE percent_of_slovenes_1951 = \"96.9%\"",
        "context": "CREATE TABLE table_10798421_1 (village__german_ VARCHAR, percent_of_slovenes_1951 VARCHAR)",
        "question": "Provide me with the name of the village (German) where there is 96.9% Slovenes in 1951. "
    },
    {
        "answer": "SELECT method FROM table_name_58 WHERE weight_class = \"welterweight\" AND card = \"preliminary\"",
        "context": "CREATE TABLE table_name_58 (method VARCHAR, weight_class VARCHAR, card VARCHAR)",
        "question": "Which method was used in the welterweight class with a preliminary card?"
    },
    {
        "answer": "SELECT baltimore_group FROM table_name_13 WHERE virion_shape = \"icosahedral\" AND envelopment = \"non-enveloped\" AND replication_site = \"cytoplasm\" AND family = \"astroviridae\"",
        "context": "CREATE TABLE table_name_13 (baltimore_group VARCHAR, family VARCHAR, replication_site VARCHAR, virion_shape VARCHAR, envelopment VARCHAR)",
        "question": "Which Baltimore group has a viron shape of icosahedral, replicates in the cytoplasm, is non-enveloped, and is from the astroviridae family?"
    },
    {
        "answer": "SELECT baltimore_group FROM table_name_62 WHERE family = \"retroviridae\"",
        "context": "CREATE TABLE table_name_62 (baltimore_group VARCHAR, family VARCHAR)",
        "question": "Which Baltimore group is of the retroviridae family?"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_10975034_2 WHERE college = \"Northwestern\"",
        "context": "CREATE TABLE table_10975034_2 (pick__number INTEGER, college VARCHAR)",
        "question": "What is the pick number for Northwestern college?"
    },
    {
        "answer": "SELECT higgins FROM table_name_35 WHERE scallon = \"2%\"",
        "context": "CREATE TABLE table_name_35 (higgins VARCHAR, scallon VARCHAR)",
        "question": "What is the Higgins with a Scallon that is 2%?"
    },
    {
        "answer": "SELECT location FROM table_11044765_1 WHERE mascot = \"Miners\"",
        "context": "CREATE TABLE table_11044765_1 (location VARCHAR, mascot VARCHAR)",
        "question": "What city and state are the miners located in?"
    },
    {
        "answer": "SELECT to_par FROM table_1121352_2 WHERE date = \"May 4, 2003\"",
        "context": "CREATE TABLE table_1121352_2 (to_par VARCHAR, date VARCHAR)",
        "question": "What is the to par dated may 4, 2003?"
    },
    {
        "answer": "SELECT COUNT(runner_up) FROM table_11214772_2 WHERE semi_finalist__number1 = \"Western Carolina\" AND year = 2005",
        "context": "CREATE TABLE table_11214772_2 (runner_up VARCHAR, semi_finalist__number1 VARCHAR, year VARCHAR)",
        "question": "How many teams were listed as runner up in 2005 and there the first semi finalist was Western Carolina?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_1132600_3 WHERE pole_position = \"Michael Schumacher\" AND fastest_lap = \"David Coulthard\" AND winning_constructor = \"McLaren - Mercedes\"",
        "context": "CREATE TABLE table_1132600_3 (round VARCHAR, winning_constructor VARCHAR, pole_position VARCHAR, fastest_lap VARCHAR)",
        "question": "Which round had Michael Schumacher in the pole position, David Coulthard with the fastest lap, and McLaren - Mercedes as the winning constructor?"
    },
    {
        "answer": "SELECT staffel_a FROM table_name_75 WHERE staffel_d = \"energie cottbus\" AND staffel_c = \"chemie leipzig\" AND staffel_b = \"1. fc union berlin\"",
        "context": "CREATE TABLE table_name_75 (staffel_a VARCHAR, staffel_b VARCHAR, staffel_d VARCHAR, staffel_c VARCHAR)",
        "question": "What is the Staffel A that has a Staffel D of Energie Cottbus and a Staffel C of Chemie Leipzig and a Staffel B of 1. FC Union Berlin?"
    },
    {
        "answer": "SELECT report FROM table_1132600_3 WHERE grand_prix = \"Belgian grand_prix\"",
        "context": "CREATE TABLE table_1132600_3 (report VARCHAR, grand_prix VARCHAR)",
        "question": "What was the report of the Belgian Grand Prix?"
    },
    {
        "answer": "SELECT junctions FROM table_11336756_6 WHERE remarks = \"Replaced by BSI-35\"",
        "context": "CREATE TABLE table_11336756_6 (junctions VARCHAR, remarks VARCHAR)",
        "question": "Which junctions have \"replaced by bsi-35\" listed in their remarks section?"
    },
    {
        "answer": "SELECT date FROM table_name_91 WHERE country = \"uk\" AND format = \"cd\" AND catalog = \"edcd 227\"",
        "context": "CREATE TABLE table_name_91 (date VARCHAR, catalog VARCHAR, country VARCHAR, format VARCHAR)",
        "question": "What is the Date when the Country shows uk, the Format is cd, and the Catalog of edcd 227?"
    },
    {
        "answer": "SELECT catalog FROM table_name_46 WHERE format = \"lp\" AND country = \"us\" AND label = \"sundazed\" AND date = \"2006\"",
        "context": "CREATE TABLE table_name_46 (catalog VARCHAR, date VARCHAR, label VARCHAR, format VARCHAR, country VARCHAR)",
        "question": "What is the Catalog with a Format of lp, a Country of us, a Label of sundazed, and a Date of 2006?"
    },
    {
        "answer": "SELECT margin FROM table_11570261_1 WHERE runner_s__up = \"Phil Mickelson\"",
        "context": "CREATE TABLE table_11570261_1 (margin VARCHAR, runner_s__up VARCHAR)",
        "question": " what's the\u00a0margin\u00a0where\u00a0runner(s)-up\u00a0is phil mickelson"
    },
    {
        "answer": "SELECT 54 AS _holes FROM table_11570261_1 WHERE winning_score = \u221219(67 - 66 - 67 - 69 = 269)",
        "context": "CREATE TABLE table_11570261_1 (winning_score VARCHAR)",
        "question": " what's the\u00a054 holes\u00a0where\u00a0winning score\u00a0is \u221219 (67-66-67-69=269)"
    },
    {
        "answer": "SELECT COUNT(national_university_of_ireland) FROM table_name_17 WHERE industrial_and_commercial_panel < 1 AND cultural_and_educational_panel > 0",
        "context": "CREATE TABLE table_name_17 (national_university_of_ireland VARCHAR, industrial_and_commercial_panel VARCHAR, cultural_and_educational_panel VARCHAR)",
        "question": "What is the total for National University of Ireland with an industrial and commercial panel less than 1, and the cultural and educational panel bigger than 0?"
    },
    {
        "answer": "SELECT original_air_date FROM table_11589522_3 WHERE written_by = \"Iain Morris & Damon Beesley\"",
        "context": "CREATE TABLE table_11589522_3 (original_air_date VARCHAR, written_by VARCHAR)",
        "question": " what's the\u00a0original air date\u00a0where\u00a0written by\u00a0is iain morris & damon beesley"
    },
    {
        "answer": "SELECT MAX(administrative_panel) FROM table_name_37 WHERE nominated_by_the_taoiseach > 3 AND agricultural_panel = 5 AND cultural_and_educational_panel > 2",
        "context": "CREATE TABLE table_name_37 (administrative_panel INTEGER, cultural_and_educational_panel VARCHAR, nominated_by_the_taoiseach VARCHAR, agricultural_panel VARCHAR)",
        "question": "What is the biggest administrative panel with a nominated by the Taoiseach greater than 3 and an argricultural panel of 5, plust a cultural and educational panel larger than 2?"
    },
    {
        "answer": "SELECT MIN(cultural_and_educational_panel) FROM table_name_74 WHERE nominated_by_the_taoiseach < 5 AND total > 19",
        "context": "CREATE TABLE table_name_74 (cultural_and_educational_panel INTEGER, nominated_by_the_taoiseach VARCHAR, total VARCHAR)",
        "question": "What is the smallest cultural and educational panel with a nominated by the Taoiseach less than 5 and the total greater than 19?"
    },
    {
        "answer": "SELECT AVG(administrative_panel) FROM table_name_77 WHERE cultural_and_educational_panel > 1 AND industrial_and_commercial_panel < 4",
        "context": "CREATE TABLE table_name_77 (administrative_panel INTEGER, cultural_and_educational_panel VARCHAR, industrial_and_commercial_panel VARCHAR)",
        "question": "What is the administrative panel average when the cultural and educational panel is greater than 1 and the industrial and commercial panel less than 4?"
    },
    {
        "answer": "SELECT COUNT(constancy) FROM table_11609814_1 WHERE purity = \"falling\"",
        "context": "CREATE TABLE table_11609814_1 (constancy VARCHAR, purity VARCHAR)",
        "question": "what is the total number of\u00a0constancy\u00a0where\u00a0purity\u00a0is falling"
    },
    {
        "answer": "SELECT other_b FROM table_name_96 WHERE fa_cup = \"3 (17)\"",
        "context": "CREATE TABLE table_name_96 (other_b VARCHAR, fa_cup VARCHAR)",
        "question": "What is the Other b when the FA Cup shows 3 (17)?"
    },
    {
        "answer": "SELECT height_in_ft FROM table_11734041_2 WHERE school_club_team_country = \"Hartford\"",
        "context": "CREATE TABLE table_11734041_2 (height_in_ft VARCHAR, school_club_team_country VARCHAR)",
        "question": "What is the height of the player who attended Hartford?"
    },
    {
        "answer": "SELECT content FROM table_name_20 WHERE television_service = \"la sorgente sat 3\"",
        "context": "CREATE TABLE table_name_20 (content VARCHAR, television_service VARCHAR)",
        "question": "What is the content for la sorgente sat 3?"
    },
    {
        "answer": "SELECT language FROM table_name_3 WHERE television_service = \"telemarket for you\"",
        "context": "CREATE TABLE table_name_3 (language VARCHAR, television_service VARCHAR)",
        "question": "What language is telemarket for you?"
    },
    {
        "answer": "SELECT language FROM table_name_59 WHERE content = \"televendita\" AND television_service = \"telemarket for you\"",
        "context": "CREATE TABLE table_name_59 (language VARCHAR, content VARCHAR, television_service VARCHAR)",
        "question": "What language is telemarket for you with a content of televendita?"
    },
    {
        "answer": "SELECT position FROM table_11734041_2 WHERE height_in_ft = \"6-6\" AND no_s_ = \"35\"",
        "context": "CREATE TABLE table_11734041_2 (position VARCHAR, height_in_ft VARCHAR, no_s_ VARCHAR)",
        "question": "What position is number 35 whose height is 6-6?"
    },
    {
        "answer": "SELECT height_in_ft FROM table_11734041_9 WHERE player = \"Jones, Major Major Jones\"",
        "context": "CREATE TABLE table_11734041_9 (height_in_ft VARCHAR, player VARCHAR)",
        "question": "How tall is the player jones, major major jones?"
    },
    {
        "answer": "SELECT tournament FROM table_name_9 WHERE score = \"2\u20136 6\u20134 [10\u20138]\"",
        "context": "CREATE TABLE table_name_9 (tournament VARCHAR, score VARCHAR)",
        "question": "Which Tournament has a score of 2\u20136 6\u20134 [10\u20138]?"
    },
    {
        "answer": "SELECT team FROM table_11961582_6 WHERE location_attendance = \"Philips Arena 18,227\"",
        "context": "CREATE TABLE table_11961582_6 (team VARCHAR, location_attendance VARCHAR)",
        "question": "What is the team located at philips arena 18,227?"
    },
    {
        "answer": "SELECT coach FROM table_name_4 WHERE details = \"2012 gold coast titans season\"",
        "context": "CREATE TABLE table_name_4 (coach VARCHAR, details VARCHAR)",
        "question": "Who is the coach of the 2012 Gold Coast Titans season?"
    },
    {
        "answer": "SELECT COUNT(wins) FROM table_name_55 WHERE tournament = \"pga championship\" AND events > 10",
        "context": "CREATE TABLE table_name_55 (wins VARCHAR, tournament VARCHAR, events VARCHAR)",
        "question": "How many wins were in the PGA Championship when there were more than 10 events?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_80 WHERE riaa_sales_certification = \"gold\" AND title = \"lost without your love\" AND billboard_200_peak > 26",
        "context": "CREATE TABLE table_name_80 (year INTEGER, billboard_200_peak VARCHAR, riaa_sales_certification VARCHAR, title VARCHAR)",
        "question": "For how many years did the song \"Lost Without Your Love\" win the gold RIAA Sales Certification, and have a Billboard 200 Peak greater than 26?"
    },
    {
        "answer": "SELECT riaa_sales_certification FROM table_name_1 WHERE billboard_200_peak = 21",
        "context": "CREATE TABLE table_name_1 (riaa_sales_certification VARCHAR, billboard_200_peak VARCHAR)",
        "question": "What RIAA Sales Certification was awarded to the song that had a Billboard 200 Peak of 21?"
    },
    {
        "answer": "SELECT SUM(billboard_200_peak) FROM table_name_38 WHERE year > 1971",
        "context": "CREATE TABLE table_name_38 (billboard_200_peak INTEGER, year INTEGER)",
        "question": "What is the sum of the Billboard 200 Peak scores after the Year 1971?"
    },
    {
        "answer": "SELECT COUNT(gold) FROM table_name_4 WHERE silver = 1 AND bronze = 1 AND nation = \"austria\"",
        "context": "CREATE TABLE table_name_4 (gold VARCHAR, nation VARCHAR, silver VARCHAR, bronze VARCHAR)",
        "question": "What is the number of gold when the silver is 1, bronze is 1, and the nation is Austria?"
    },
    {
        "answer": "SELECT MIN(gold) FROM table_name_24 WHERE bronze = 0 AND total < 2 AND silver < 0",
        "context": "CREATE TABLE table_name_24 (gold INTEGER, silver VARCHAR, bronze VARCHAR, total VARCHAR)",
        "question": "What is the lowest gold when there are 0 bronze and the total is less than 2, and silver is less than 0?"
    },
    {
        "answer": "SELECT womens_singles FROM table_12104319_1 WHERE mixed_doubles = \"Marcus Ellis Gabrielle White\"",
        "context": "CREATE TABLE table_12104319_1 (womens_singles VARCHAR, mixed_doubles VARCHAR)",
        "question": "What is the womens singles of marcus ellis gabrielle white?"
    },
    {
        "answer": "SELECT SUM(issue) FROM table_name_75 WHERE spoofed_title = \"ho-hum land\"",
        "context": "CREATE TABLE table_name_75 (issue INTEGER, spoofed_title VARCHAR)",
        "question": "What issue was the spoofed title Ho-Hum land?"
    },
    {
        "answer": "SELECT surface FROM table_name_77 WHERE outcome = \"runner-up\" AND date = \"24 february 1997\"",
        "context": "CREATE TABLE table_name_77 (surface VARCHAR, outcome VARCHAR, date VARCHAR)",
        "question": "What is the Surface when Todd Woodbridge was the runner-up, and a Date of 24 february 1997?"
    },
    {
        "answer": "SELECT location FROM table_1211545_2 WHERE name = \"Carousel Toll Plaza\"",
        "context": "CREATE TABLE table_1211545_2 (location VARCHAR, name VARCHAR)",
        "question": "What is the location of the Carousel toll plaza?"
    },
    {
        "answer": "SELECT name FROM table_1211545_2 WHERE heavy_vehicle__2_axles_ = \"R20.50\"",
        "context": "CREATE TABLE table_1211545_2 (name VARCHAR, heavy_vehicle__2_axles_ VARCHAR)",
        "question": "What is the name of the plaza where the told for heavy vehicles with 2 axles is r20.50?"
    },
    {
        "answer": "SELECT shortstop FROM table_12142298_2 WHERE second_baseman = \"Jim Lefebvre\" AND centerfielder = \"Willie Davis\" AND starting_pitcher = \"Don Drysdale\"",
        "context": "CREATE TABLE table_12142298_2 (shortstop VARCHAR, starting_pitcher VARCHAR, second_baseman VARCHAR, centerfielder VARCHAR)",
        "question": "Who was the SS when jim lefebvre was at 2nd, willie davis at CF, and don drysdale was the SP."
    },
    {
        "answer": "SELECT order__number FROM table_12310814_1 WHERE original_artist = \"Rickie Lee Jones\"",
        "context": "CREATE TABLE table_12310814_1 (order__number VARCHAR, original_artist VARCHAR)",
        "question": "What's the order number of the song originally performed by Rickie Lee Jones?"
    },
    {
        "answer": "SELECT COUNT(silver) FROM table_name_84 WHERE bronze < 1",
        "context": "CREATE TABLE table_name_84 (silver VARCHAR, bronze INTEGER)",
        "question": "What is the total number of Silver medals for the Nation with less than 1 Bronze?"
    },
    {
        "answer": "SELECT COUNT(election) FROM table_123462_2 WHERE _number_of_candidates_nominated = 262",
        "context": "CREATE TABLE table_123462_2 (election VARCHAR, _number_of_candidates_nominated VARCHAR)",
        "question": "What is the election year when the # of candidates nominated was 262?"
    },
    {
        "answer": "SELECT english_spelling FROM table_1242447_1 WHERE strongs_transliteration = \"Y e howram\"",
        "context": "CREATE TABLE table_1242447_1 (english_spelling VARCHAR, strongs_transliteration VARCHAR)",
        "question": "What is the english spelling of the word that has the strongs trasliteration of y e howram?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_61 WHERE fa_cup = 1 AND fa_trophy > 0",
        "context": "CREATE TABLE table_name_61 (total INTEGER, fa_cup VARCHAR, fa_trophy VARCHAR)",
        "question": "What is the average total with 1 FA cup and more than 0 FA trophies?"
    },
    {
        "answer": "SELECT AVG(silver) FROM table_name_37 WHERE rank < 1",
        "context": "CREATE TABLE table_name_37 (silver INTEGER, rank INTEGER)",
        "question": "How many Silver medals did the Nation with a Rank of less than 1 receive?"
    },
    {
        "answer": "SELECT ds_division FROM table_12485020_1 WHERE divisional_secretary = \"S. L. M. Haneefa\"",
        "context": "CREATE TABLE table_12485020_1 (ds_division VARCHAR, divisional_secretary VARCHAR)",
        "question": "What DS division has S. L. M. Haneefa as the divisional secretary?"
    },
    {
        "answer": "SELECT AVG(goals_for) FROM table_name_37 WHERE playoffs = \"lost in round 2\" AND games < 81",
        "context": "CREATE TABLE table_name_37 (goals_for INTEGER, playoffs VARCHAR, games VARCHAR)",
        "question": "What is the average Goals, when Playoffs is Lost in Round 2, and when Games is less than 81?"
    },
    {
        "answer": "SELECT vote FROM table_1272844_2 WHERE air_date = \"May 5, 2005\"",
        "context": "CREATE TABLE table_1272844_2 (vote VARCHAR, air_date VARCHAR)",
        "question": "What was the vote tally on the episode aired May 5, 2005?"
    },
    {
        "answer": "SELECT short_stem FROM table_12784134_24 WHERE imperfect_stem = \"garbitzen\"",
        "context": "CREATE TABLE table_12784134_24 (short_stem VARCHAR, imperfect_stem VARCHAR)",
        "question": "What is the short stem for garbitzen?"
    },
    {
        "answer": "SELECT try_bonus FROM table_12792876_4 WHERE points_against = \"430\"",
        "context": "CREATE TABLE table_12792876_4 (try_bonus VARCHAR, points_against VARCHAR)",
        "question": "Name the try bonus of points against at 430"
    },
    {
        "answer": "SELECT high_assists FROM table_name_69 WHERE date = \"march 25\"",
        "context": "CREATE TABLE table_name_69 (high_assists VARCHAR, date VARCHAR)",
        "question": "What is the High assists for march 25?"
    },
    {
        "answer": "SELECT MAX(game) FROM table_name_81 WHERE high_assists = \"morris peterson (8)\"",
        "context": "CREATE TABLE table_name_81 (game INTEGER, high_assists VARCHAR)",
        "question": "What is the highest Game when Morris Peterson (8) had the high assists?"
    },
    {
        "answer": "SELECT colt_model_no FROM table_12834315_1 WHERE bayonet_lug = \"No\" AND stock = \"2nd Generation\" AND case_deflector = \"No\" AND name = \"GAU-5A/A\"",
        "context": "CREATE TABLE table_12834315_1 (colt_model_no VARCHAR, name VARCHAR, case_deflector VARCHAR, bayonet_lug VARCHAR, stock VARCHAR)",
        "question": "What are the Colt model numbers of the models named GAU-5A/A, with no bayonet lug, no case deflector and stock of 2nd generation? "
    },
    {
        "answer": "SELECT winners_from_previous_round FROM table_1281200_1 WHERE phase = \"First phase\" AND clubs_involved = 16",
        "context": "CREATE TABLE table_1281200_1 (winners_from_previous_round VARCHAR, phase VARCHAR, clubs_involved VARCHAR)",
        "question": "During the first phase portion of phase and having 16 clubs involved; what would you find for the winners from previous round?"
    },
    {
        "answer": "SELECT submitting_country FROM table_12842068_1 WHERE film_title_used_in_nomination = \"The Orphanage\"",
        "context": "CREATE TABLE table_12842068_1 (submitting_country VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What country submitted the movie the orphanage?"
    },
    {
        "answer": "SELECT COUNT(endowment) FROM table_12896884_1 WHERE football_stadium = \"Mosaic Stadium\"",
        "context": "CREATE TABLE table_12896884_1 (endowment VARCHAR, football_stadium VARCHAR)",
        "question": "How many endowments does Mosaic Stadium have?"
    },
    {
        "answer": "SELECT MIN(events) FROM table_name_14 WHERE cuts_made = 17 AND top_25 < 8",
        "context": "CREATE TABLE table_name_14 (events INTEGER, cuts_made VARCHAR, top_25 VARCHAR)",
        "question": "What is the lowest events that have 17 as the cuts made, with a top-25 less than 8?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_99 WHERE loses > 16 AND goals_scored > 44 AND position < 13",
        "context": "CREATE TABLE table_name_99 (points VARCHAR, position VARCHAR, loses VARCHAR, goals_scored VARCHAR)",
        "question": "How many points are there with more losses than 16, more goals than 44, and a smaller position than 13?"
    },
    {
        "answer": "SELECT COUNT(candidates) FROM table_1341453_20 WHERE first_elected = 1980",
        "context": "CREATE TABLE table_1341453_20 (candidates VARCHAR, first_elected VARCHAR)",
        "question": "How many candidates were elected first in 1980?"
    },
    {
        "answer": "SELECT date FROM table_name_46 WHERE surface = \"hard\" AND tournament = \"wrexham , great britain\"",
        "context": "CREATE TABLE table_name_46 (date VARCHAR, surface VARCHAR, tournament VARCHAR)",
        "question": "When has a Surface of hard, a Tournament of wrexham , great britain?"
    },
    {
        "answer": "SELECT status FROM table_1341522_50 WHERE opponent = \"Doc Hastings (R) 53.3% Jay Inslee (D) 46.7%\"",
        "context": "CREATE TABLE table_1341522_50 (status VARCHAR, opponent VARCHAR)",
        "question": "What was the result of the election of doc hastings (r) 53.3% jay inslee (d) 46.7%"
    },
    {
        "answer": "SELECT frequency FROM table_name_26 WHERE branding = \"country 600\"",
        "context": "CREATE TABLE table_name_26 (frequency VARCHAR, branding VARCHAR)",
        "question": "Which Frequency has a Branding of country 600?"
    },
    {
        "answer": "SELECT class_aA FROM table_name_88 WHERE class_a = \"anton\" AND class_aAA = burnet",
        "context": "CREATE TABLE table_name_88 (class_aA VARCHAR, class_a VARCHAR, class_aAA VARCHAR, burnet VARCHAR)",
        "question": "If the Class A is Anton and Class AAA is Burnet, what is Class AA?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_61 WHERE game_site = \"rich stadium\" AND opponent = \"miami dolphins\" AND week > 2",
        "context": "CREATE TABLE table_name_61 (attendance VARCHAR, week VARCHAR, game_site VARCHAR, opponent VARCHAR)",
        "question": "After week 2, how many people attended the game at Rich Stadium against the Miami Dolphins?"
    },
    {
        "answer": "SELECT district FROM table_1341604_10 WHERE result = \"New seat Democratic gain\"",
        "context": "CREATE TABLE table_1341604_10 (district VARCHAR, result VARCHAR)",
        "question": "what's the\u00a0district with\u00a0result\u00a0being new seat democratic gain"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_1341672_14 WHERE incumbent = \"Phil Crane\"",
        "context": "CREATE TABLE table_1341672_14 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": "Name the number of first elected for phil crane"
    },
    {
        "answer": "SELECT SUM(solidat__) AS \u00b0c_ FROM table_name_46 WHERE sn_sb___percentage_ = \"13/17\" AND liquidat__\u00b0c_ > 283",
        "context": "CREATE TABLE table_name_46 (solidat__ INTEGER, sn_sb___percentage_ VARCHAR, liquidat__\u00b0c_ VARCHAR)",
        "question": "When the Sn/Sb (%) of 13/17, and a Liquidat (c) bigger than 283 what's the solidat (c)?"
    },
    {
        "answer": "SELECT song FROM table_name_1 WHERE weeks_on_top = 2 AND artist = \"david essex\"",
        "context": "CREATE TABLE table_name_1 (song VARCHAR, weeks_on_top VARCHAR, artist VARCHAR)",
        "question": "Which song by David Essex spent 2 weeks on top of the charts?"
    },
    {
        "answer": "SELECT candidates FROM table_1342218_17 WHERE party = \"Democratic\" AND incumbent = \"Frank Chelf\"",
        "context": "CREATE TABLE table_1342218_17 (candidates VARCHAR, party VARCHAR, incumbent VARCHAR)",
        "question": "List all candidates in the democratic party where the election had the incumbent Frank Chelf running."
    },
    {
        "answer": "SELECT COUNT(grid) FROM table_name_72 WHERE time_retired = \"+4 laps\"",
        "context": "CREATE TABLE table_name_72 (grid VARCHAR, time_retired VARCHAR)",
        "question": "How many grids had a Time/Retired of +4 laps?"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_3 WHERE constructor = \"toyota\" AND time_retired = \"+13.409\"",
        "context": "CREATE TABLE table_name_3 (laps VARCHAR, constructor VARCHAR, time_retired VARCHAR)",
        "question": "How many laps had a constructor of toyota and a Time/Retired of +13.409?"
    },
    {
        "answer": "SELECT SUM(grid) FROM table_name_35 WHERE constructor = \"renault\" AND laps < 4",
        "context": "CREATE TABLE table_name_35 (grid INTEGER, constructor VARCHAR, laps VARCHAR)",
        "question": "How many grids had a constructor of renault and less than 4 laps?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_1342338_3 WHERE result = \"Lost renomination\"",
        "context": "CREATE TABLE table_1342338_3 (first_elected VARCHAR, result VARCHAR)",
        "question": "How many in total were elected first in lost renomination?"
    },
    {
        "answer": "SELECT result FROM table_name_30 WHERE distance = \"10f\" AND winner_or_2nd = \"lampra\"",
        "context": "CREATE TABLE table_name_30 (result VARCHAR, distance VARCHAR, winner_or_2nd VARCHAR)",
        "question": "What is the result for the distance of 10f, and a winner or 2nd of Lampra?"
    },
    {
        "answer": "SELECT result FROM table_1342359_39 WHERE incumbent = \"Thomas S. McMillan\"",
        "context": "CREATE TABLE table_1342359_39 (result VARCHAR, incumbent VARCHAR)",
        "question": "What is the result for thomas s. mcmillan?"
    },
    {
        "answer": "SELECT party FROM table_1342359_5 WHERE incumbent = \"William E. Evans\"",
        "context": "CREATE TABLE table_1342359_5 (party VARCHAR, incumbent VARCHAR)",
        "question": "what's the\u00a0party\u00a0with\u00a0incumbent\u00a0being william e. evans"
    },
    {
        "answer": "SELECT written_by FROM table_13477468_3 WHERE us_viewers__millions_ = \"1.83\"",
        "context": "CREATE TABLE table_13477468_3 (written_by VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "Who wrote the episode that received 1.83 million U.S. viewers?"
    },
    {
        "answer": "SELECT volleyball FROM table_name_52 WHERE golf = \"2\" AND indoor_track = \"3\"",
        "context": "CREATE TABLE table_name_52 (volleyball VARCHAR, golf VARCHAR, indoor_track VARCHAR)",
        "question": "Which Volleyball has a Golf of 2, and an Indoor track of 3?"
    },
    {
        "answer": "SELECT date FROM table_name_40 WHERE location = \"scotiabank place\" AND points < 20 AND game > 16 AND opponent = \"montreal canadiens\"",
        "context": "CREATE TABLE table_name_40 (date VARCHAR, opponent VARCHAR, game VARCHAR, location VARCHAR, points VARCHAR)",
        "question": "Date for scotiabank place with less than 20 points, game larger than 16, and an opponent of montreal canadiens?"
    },
    {
        "answer": "SELECT type FROM table_name_40 WHERE moving_from = \"rangers\"",
        "context": "CREATE TABLE table_name_40 (type VARCHAR, moving_from VARCHAR)",
        "question": "What is the type when Rangers are the moving from?"
    },
    {
        "answer": "SELECT date FROM table_name_67 WHERE away_team = \"aston villa\"",
        "context": "CREATE TABLE table_name_67 (date VARCHAR, away_team VARCHAR)",
        "question": "What date is aston villa away?"
    },
    {
        "answer": "SELECT location_attendance FROM table_13619135_7 WHERE team = \"New Jersey\"",
        "context": "CREATE TABLE table_13619135_7 (location_attendance VARCHAR, team VARCHAR)",
        "question": "Where did the team play and what was the attendance against new jersey?"
    },
    {
        "answer": "SELECT MAX(tf1__number) FROM table_name_95 WHERE official__number > 47 AND air_date__france_ = \"13 july 2010\"",
        "context": "CREATE TABLE table_name_95 (tf1__number INTEGER, official__number VARCHAR, air_date__france_ VARCHAR)",
        "question": "What is the most elevated TF1 # that has an Official # larger than 47, and an Air date (France) of 13 july 2010?"
    },
    {
        "answer": "SELECT location FROM table_name_58 WHERE power__kw_ = \"10kw\" AND branding = \"mom's radio 95.9 naga\"",
        "context": "CREATE TABLE table_name_58 (location VARCHAR, power__kw_ VARCHAR, branding VARCHAR)",
        "question": "What's the location of Mom's Radio 95.9 Naga having a power of 10kw?"
    },
    {
        "answer": "SELECT SUM(losses) FROM table_name_23 WHERE win__percentage = \"71.43%\" AND no_result > 0",
        "context": "CREATE TABLE table_name_23 (losses INTEGER, win__percentage VARCHAR, no_result VARCHAR)",
        "question": "What is the number of losses for the game with a win % of 71.43%, and No Result is more than 0?"
    },
    {
        "answer": "SELECT won FROM table_13758945_3 WHERE points_against = \"597\"",
        "context": "CREATE TABLE table_13758945_3 (won VARCHAR, points_against VARCHAR)",
        "question": "what's the\u00a0won\u00a0with\u00a0points against\u00a0being 597"
    },
    {
        "answer": "SELECT year FROM table_name_6 WHERE win__percentage = \"50.00%\" AND matches > 14 AND wins > 8",
        "context": "CREATE TABLE table_name_6 (year VARCHAR, wins VARCHAR, win__percentage VARCHAR, matches VARCHAR)",
        "question": "What year was the Win percentage 50.00%, with more than 14 matches, and wins more than 8?"
    },
    {
        "answer": "SELECT area__km\u00b2_ FROM table_name_8 WHERE pop__km\u00b2 = 0.58",
        "context": "CREATE TABLE table_name_8 (area__km\u00b2_ VARCHAR, pop__km\u00b2 VARCHAR)",
        "question": "What is the area for a population of 0.58 km?"
    },
    {
        "answer": "SELECT Box AS score FROM table_name_40 WHERE away_team = \"sydney spirit\"",
        "context": "CREATE TABLE table_name_40 (Box VARCHAR, away_team VARCHAR)",
        "question": "What was the box score for the game where the away team was the sydney spirit?"
    },
    {
        "answer": "SELECT method FROM table_name_41 WHERE event = \"hardcore championship fighting: destiny\"",
        "context": "CREATE TABLE table_name_41 (method VARCHAR, event VARCHAR)",
        "question": "What method of resolution was the fight that took place at hardcore championship fighting: destiny?"
    },
    {
        "answer": "SELECT COUNT(position) FROM table_14038363_1 WHERE player = \"Teodor Salparov\"",
        "context": "CREATE TABLE table_14038363_1 (position VARCHAR, player VARCHAR)",
        "question": "How many position does Teodor Salparov play on? "
    },
    {
        "answer": "SELECT MIN(games_played) FROM table_14181578_1 WHERE goals_for_against = \"7-5\"",
        "context": "CREATE TABLE table_14181578_1 (games_played INTEGER, goals_for_against VARCHAR)",
        "question": "what is the minimum\u00a0games played\u00a0with\u00a0goals for/against\u00a0being 7-5"
    },
    {
        "answer": "SELECT fri_30_may FROM table_14209455_1 WHERE mon_26_may = \"19' 02.890 118.847mph\"",
        "context": "CREATE TABLE table_14209455_1 (fri_30_may VARCHAR, mon_26_may VARCHAR)",
        "question": "what is the numbr for fri may 30 and mon may 26 is 19' 02.890 118.847mph?"
    },
    {
        "answer": "SELECT pressure_in_hpa__mbar_ FROM table_name_69 WHERE vacuum_range = \"medium vacuum\"",
        "context": "CREATE TABLE table_name_69 (pressure_in_hpa__mbar_ VARCHAR, vacuum_range VARCHAR)",
        "question": "What is the Pressure in hPa (mbar), when Vacuum Range is \"medium vacuum\"?"
    },
    {
        "answer": "SELECT score FROM table_name_10 WHERE date = \"22 february 1993\"",
        "context": "CREATE TABLE table_name_10 (score VARCHAR, date VARCHAR)",
        "question": "what is the score on 22 february 1993?"
    },
    {
        "answer": "SELECT extra_points FROM table_14342592_8 WHERE position = \"Left guard\"",
        "context": "CREATE TABLE table_14342592_8 (extra_points VARCHAR, position VARCHAR)",
        "question": "Name the extra points for left guard"
    },
    {
        "answer": "SELECT genre FROM table_name_4 WHERE type = \"3d\" AND developer_s_ = \"valve corporation\"",
        "context": "CREATE TABLE table_name_4 (genre VARCHAR, type VARCHAR, developer_s_ VARCHAR)",
        "question": "What type of 3D game did Valve Corporation release?"
    },
    {
        "answer": "SELECT date_of_attack FROM table_name_39 WHERE fate = \"sunk by u-101 *\" AND cargo = \"iron ore\"",
        "context": "CREATE TABLE table_name_39 (date_of_attack VARCHAR, fate VARCHAR, cargo VARCHAR)",
        "question": "What is the Date of attack of the ship with iron ore sunk by u-101 *?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_22 WHERE losses < 12 AND goals_against < 50 AND goal_difference > 11 AND played < 30",
        "context": "CREATE TABLE table_name_22 (points INTEGER, played VARCHAR, goal_difference VARCHAR, losses VARCHAR, goals_against VARCHAR)",
        "question": "What is the fewest points for positions with under 12 losses, goals against under 50, goal difference over 11, and under 30 played?"
    },
    {
        "answer": "SELECT powershell__cmdlet_ FROM table_14465871_1 WHERE cmdexe___commandcom = \"type\"",
        "context": "CREATE TABLE table_14465871_1 (powershell__cmdlet_ VARCHAR, cmdexe___commandcom VARCHAR)",
        "question": "When the cmd.exe / command.com is type, what are all associated values for powershell (cmdlet)?"
    },
    {
        "answer": "SELECT COUNT(powershell__cmdlet_) FROM table_14465871_1 WHERE unix_shell = \"env, export, set, setenv\"",
        "context": "CREATE TABLE table_14465871_1 (powershell__cmdlet_ VARCHAR, unix_shell VARCHAR)",
        "question": "How many values of powershell (cmdlet) are valid when unix shell is env, export, set, setenv?"
    },
    {
        "answer": "SELECT event FROM table_name_9 WHERE round = 1 AND location = \"new town, north dakota , united states\" AND time = \"4:12\"",
        "context": "CREATE TABLE table_name_9 (event VARCHAR, time VARCHAR, round VARCHAR, location VARCHAR)",
        "question": "What is Event, when Round is \"1\", when Location is \"New Town, North Dakota , United States\" and when Time is \"4:12\"?"
    },
    {
        "answer": "SELECT median_house__hold_income FROM table_1447085_1 WHERE place = \"Woodside\"",
        "context": "CREATE TABLE table_1447085_1 (median_house__hold_income VARCHAR, place VARCHAR)",
        "question": "What is the median household income for Woodside?"
    },
    {
        "answer": "SELECT common FROM table_1449169_1 WHERE area__km_2__ = \"38.38\"",
        "context": "CREATE TABLE table_1449169_1 (common VARCHAR, area__km_2__ VARCHAR)",
        "question": "Which common has an area (km2) of 38.38?"
    },
    {
        "answer": "SELECT density__inhabitants_km_2__ FROM table_1449176_1 WHERE area__km_2__ = \"20.4\"",
        "context": "CREATE TABLE table_1449176_1 (density__inhabitants_km_2__ VARCHAR, area__km_2__ VARCHAR)",
        "question": "What is the density of the common with an area of 20.4 km^2?"
    },
    {
        "answer": "SELECT MAX(females) FROM table_name_46 WHERE males = 28.2 AND rank > 5",
        "context": "CREATE TABLE table_name_46 (females INTEGER, males VARCHAR, rank VARCHAR)",
        "question": "What is the biggest number of females where the males are at 28.2 with a rank greater than 5?"
    },
    {
        "answer": "SELECT result FROM table_14608759_1 WHERE week = 4",
        "context": "CREATE TABLE table_14608759_1 (result VARCHAR, week VARCHAR)",
        "question": "What are week 4 results? "
    },
    {
        "answer": "SELECT player FROM table_1473672_8 WHERE nhl_team = \"Chicago Black Hawks\"",
        "context": "CREATE TABLE table_1473672_8 (player VARCHAR, nhl_team VARCHAR)",
        "question": "Name the player for chicago black hawks"
    },
    {
        "answer": "SELECT nfl_club FROM table_name_34 WHERE pick > 63 AND position = \"cornerback\"",
        "context": "CREATE TABLE table_name_34 (nfl_club VARCHAR, pick VARCHAR, position VARCHAR)",
        "question": "What is the NFL club of the cornerback player with a pick greater than 63?"
    },
    {
        "answer": "SELECT location FROM table_name_67 WHERE competition = \"group stage\" AND lineup = \"start\" AND date = \"2000-09-17\"",
        "context": "CREATE TABLE table_name_67 (location VARCHAR, date VARCHAR, competition VARCHAR, lineup VARCHAR)",
        "question": "Which Location has a Competition of Group Stage, a Lineup of Start and a Date of 2000-09-17?"
    },
    {
        "answer": "SELECT MAX(scored) FROM table_14871601_2 WHERE points = 19 AND team = \"3 de Febrero\"",
        "context": "CREATE TABLE table_14871601_2 (scored INTEGER, points VARCHAR, team VARCHAR)",
        "question": "What is the value scored when there were 19 points for the team 3 de Febrero?"
    },
    {
        "answer": "SELECT MAX(points_1) FROM table_name_57 WHERE goals_against < 97 AND lost < 22 AND drawn = 9 AND goal_difference = \"+28\"",
        "context": "CREATE TABLE table_name_57 (points_1 INTEGER, goal_difference VARCHAR, drawn VARCHAR, goals_against VARCHAR, lost VARCHAR)",
        "question": "What is the most points 1 when the goals against are fewer than 97, lost less than 22, 9 draws and goal difference of +28?"
    },
    {
        "answer": "SELECT MAX(lost) FROM table_name_9 WHERE points_1 > 58 AND goals_against = 66",
        "context": "CREATE TABLE table_name_9 (lost INTEGER, points_1 VARCHAR, goals_against VARCHAR)",
        "question": "What is the maximum lost with points 1 more than 58 and 66 goals against?"
    },
    {
        "answer": "SELECT director FROM table_name_29 WHERE studio = \"fox\" AND title = \"predator\"",
        "context": "CREATE TABLE table_name_29 (director VARCHAR, studio VARCHAR, title VARCHAR)",
        "question": "Who directed Predator that was filmed with Fox Studio?"
    },
    {
        "answer": "SELECT current_venue FROM table_14903081_1 WHERE location = \"Mason, Ohio\"",
        "context": "CREATE TABLE table_14903081_1 (current_venue VARCHAR, location VARCHAR)",
        "question": "Which current venues location is Mason, Ohio?"
    },
    {
        "answer": "SELECT us_viewers__million_ FROM table_14929574_3 WHERE directed_by = \"David Nutter\"",
        "context": "CREATE TABLE table_14929574_3 (us_viewers__million_ VARCHAR, directed_by VARCHAR)",
        "question": "How many viewers did the episode directed by David Nutter draw in?"
    },
    {
        "answer": "SELECT COUNT(series__number) FROM table_14929574_3 WHERE us_viewers__million_ = \"3.35\"",
        "context": "CREATE TABLE table_14929574_3 (series__number VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "Which episode number drew in 3.35 million viewers in the United States?"
    },
    {
        "answer": "SELECT country FROM table_name_2 WHERE to_par = \"e\" AND player = \"chi-chi rodr\u00edguez\"",
        "context": "CREATE TABLE table_name_2 (country VARCHAR, to_par VARCHAR, player VARCHAR)",
        "question": "What is the country of player chi-chi rodr\u00edguez, who has an e to par?"
    },
    {
        "answer": "SELECT AVG(frequency_mhz) FROM table_name_13 WHERE city_of_license = \"portales, new mexico\"",
        "context": "CREATE TABLE table_name_13 (frequency_mhz INTEGER, city_of_license VARCHAR)",
        "question": "What is average frequency MHZ when is in portales, new mexico?"
    },
    {
        "answer": "SELECT rhel_release_date FROM table_1500146_1 WHERE scientific_linux_release = \"3.0.4\"",
        "context": "CREATE TABLE table_1500146_1 (rhel_release_date VARCHAR, scientific_linux_release VARCHAR)",
        "question": "When is the rhel release date when scientific linux release is 3.0.4"
    },
    {
        "answer": "SELECT price FROM table_name_24 WHERE upstream = \"256 kbit\" AND downstream = \"512 kbit\"",
        "context": "CREATE TABLE table_name_24 (price VARCHAR, upstream VARCHAR, downstream VARCHAR)",
        "question": "What is the price of the internet provider that has an upstream rate of 256 kbit and a downstream rate of 512 kbit?"
    },
    {
        "answer": "SELECT no_in_season FROM table_15185133_1 WHERE written_by = \"John O'Bryan\" AND directed_by = \"Ethan Spaulding\"",
        "context": "CREATE TABLE table_15185133_1 (no_in_season VARCHAR, written_by VARCHAR, directed_by VARCHAR)",
        "question": "What season has an episode written by john o'bryan and directed by ethan spaulding?"
    },
    {
        "answer": "SELECT year FROM table_15301258_1 WHERE best_supporting_actor = \"Sammo Hung for Ip Man 2\"",
        "context": "CREATE TABLE table_15301258_1 (year VARCHAR, best_supporting_actor VARCHAR)",
        "question": "Name the year for sammo hung for ip man 2"
    },
    {
        "answer": "SELECT best_supporting_actress FROM table_15301258_1 WHERE best_supporting_actor = \"Sun Honglei for Mongol\"",
        "context": "CREATE TABLE table_15301258_1 (best_supporting_actress VARCHAR, best_supporting_actor VARCHAR)",
        "question": "Name the best supporting actress for sun honglei for mongol"
    },
    {
        "answer": "SELECT score FROM table_name_30 WHERE country = \"united states\" AND to_par = \"e\" AND player = \"mike reid\"",
        "context": "CREATE TABLE table_name_30 (score VARCHAR, player VARCHAR, country VARCHAR, to_par VARCHAR)",
        "question": "What was the score for United States when the player was Mike Reid and the To par was e?"
    },
    {
        "answer": "SELECT COUNT(played) FROM table_name_85 WHERE position = 3 AND points < 15",
        "context": "CREATE TABLE table_name_85 (played VARCHAR, position VARCHAR, points VARCHAR)",
        "question": "Which Played has a Position of 3, and a Points smaller than 15?"
    },
    {
        "answer": "SELECT date FROM table_name_71 WHERE streak = \"loss 2\" AND team = \"@ boston celtics\"",
        "context": "CREATE TABLE table_name_71 (date VARCHAR, streak VARCHAR, team VARCHAR)",
        "question": "Which Date has a Streak of loss 2, and a Team of @ boston celtics?"
    },
    {
        "answer": "SELECT extortion_theft_3 FROM table_15652027_1 WHERE united_nations_mission = \"United Nations Observer Mission Uganda-Rwanda\"",
        "context": "CREATE TABLE table_15652027_1 (extortion_theft_3 VARCHAR, united_nations_mission VARCHAR)",
        "question": "What is the extortion and theft rates where the United Nations Observer Mission Uganda-Rwanda is active?"
    },
    {
        "answer": "SELECT centerfold_model FROM table_1566852_8 WHERE pictorials = \"Kimberly Bell , Bunnies of the New Playboy Club\"",
        "context": "CREATE TABLE table_1566852_8 (centerfold_model VARCHAR, pictorials VARCHAR)",
        "question": "Who was the centerfold model when the issue's pictorial was kimberly bell , bunnies of the new playboy club?"
    },
    {
        "answer": "SELECT 20 AS _questions FROM table_1566852_8 WHERE date = \"10-07\"",
        "context": "CREATE TABLE table_1566852_8 (date VARCHAR)",
        "question": "Who answered the 20 questions on 10-07?"
    },
    {
        "answer": "SELECT name FROM table_15700367_2 WHERE overs_bowled = \"31.2\"",
        "context": "CREATE TABLE table_15700367_2 (name VARCHAR, overs_bowled VARCHAR)",
        "question": "Name the name for when overs bowled is 31.2"
    },
    {
        "answer": "SELECT longitude FROM table_name_74 WHERE year_named = 1994 AND name = \"carmenta farra\"",
        "context": "CREATE TABLE table_name_74 (longitude VARCHAR, year_named VARCHAR, name VARCHAR)",
        "question": "What is the longitude of Carmenta Farra in 1994?"
    },
    {
        "answer": "SELECT no_8 FROM table_name_23 WHERE no_4 = \"benjamin\" AND no_3 = \"liam\"",
        "context": "CREATE TABLE table_name_23 (no_8 VARCHAR, no_4 VARCHAR, no_3 VARCHAR)",
        "question": "Name the No. 8 which has a No. 4 of benjamin, and a No. 3 of liam?"
    },
    {
        "answer": "SELECT municipality FROM table_157826_1 WHERE county = \"Finnmark\" AND population > 6187.0",
        "context": "CREATE TABLE table_157826_1 (municipality VARCHAR, county VARCHAR, population VARCHAR)",
        "question": "Which municipalities located in the county of Finnmark have populations bigger than 6187.0?"
    },
    {
        "answer": "SELECT municipality FROM table_157826_1 WHERE population = 24421",
        "context": "CREATE TABLE table_157826_1 (municipality VARCHAR, population VARCHAR)",
        "question": "Which municipality has a population of 24421?"
    },
    {
        "answer": "SELECT MAX(silver) FROM table_name_86 WHERE event = \"2008 summer paralympics\" AND bronze < 1",
        "context": "CREATE TABLE table_name_86 (silver INTEGER, event VARCHAR, bronze VARCHAR)",
        "question": "what is the most silver when the event is 2008 summer paralympics and bronze is less than 1?"
    },
    {
        "answer": "SELECT track_number FROM table_name_44 WHERE album_title = \"\u6587\u6b66\u53cc\u5168\u5347\u7ea7\u7248\" AND title = \"\u8001\u7238\u4f60\u522b\u88c5\u9177\"",
        "context": "CREATE TABLE table_name_44 (track_number VARCHAR, album_title VARCHAR, title VARCHAR)",
        "question": "Which Track number has a Album title of \u6587\u6b66\u53cc\u5168\u5347\u7ea7\u7248, and a Title of \u8001\u7238\u4f60\u522b\u88c5\u9177?"
    },
    {
        "answer": "SELECT disc_number FROM table_name_19 WHERE track_number = \"02\" AND release_date = \"7 september 2004\"",
        "context": "CREATE TABLE table_name_19 (disc_number VARCHAR, track_number VARCHAR, release_date VARCHAR)",
        "question": "What kind of Disc number has a Track number of 02 on 7 september 2004?"
    },
    {
        "answer": "SELECT television_service FROM table_15887683_15 WHERE country = \"Italy\" AND language = \"English\"",
        "context": "CREATE TABLE table_15887683_15 (television_service VARCHAR, country VARCHAR, language VARCHAR)",
        "question": "What television service is in italy and is in english?"
    },
    {
        "answer": "SELECT away_team FROM table_name_44 WHERE home_team = \"leeds united\"",
        "context": "CREATE TABLE table_name_44 (away_team VARCHAR, home_team VARCHAR)",
        "question": "WHAT IS THE AWAY TEAM WHEN HOME IS LEEDS UNITED?"
    },
    {
        "answer": "SELECT away_team FROM table_name_33 WHERE home_team = \"leicester city\"",
        "context": "CREATE TABLE table_name_33 (away_team VARCHAR, home_team VARCHAR)",
        "question": "WHAT IS THE AWAY TEAM WITH HOME OF LEICESTER CITY?"
    },
    {
        "answer": "SELECT club FROM table_name_99 WHERE league_cup_goals = \"0\" AND fa_cup_goals = \"1\" AND total > 11 AND league_goals = \"13\"",
        "context": "CREATE TABLE table_name_99 (club VARCHAR, league_goals VARCHAR, total VARCHAR, league_cup_goals VARCHAR, fa_cup_goals VARCHAR)",
        "question": "Which Club has a League Cup goals of 0, and a FA Cup goals of 1, and a Total larger than 11, and a League goals of 13?"
    },
    {
        "answer": "SELECT league_cup_goals FROM table_name_61 WHERE total > \"14\" AND league_goals = \"14\" AND fa_cup_goals = \"0\"",
        "context": "CREATE TABLE table_name_61 (league_cup_goals VARCHAR, fa_cup_goals VARCHAR, total VARCHAR, league_goals VARCHAR)",
        "question": "Which League Cup goals have a Total larger than 14, and a League goals of 14, and a FA Cup goals of 0?"
    },
    {
        "answer": "SELECT COUNT(episode_number) FROM table_1590967_6 WHERE coat_of_cash_wearing_celebrity = \"Matt Di Angelo\"",
        "context": "CREATE TABLE table_1590967_6 (episode_number VARCHAR, coat_of_cash_wearing_celebrity VARCHAR)",
        "question": "Name the total number of episodes for coat of cash wearing celebrity is matt di angelo"
    },
    {
        "answer": "SELECT event FROM table_name_98 WHERE res = \"win\" AND round = \"n/a\" AND record = \"8-1\"",
        "context": "CREATE TABLE table_name_98 (event VARCHAR, record VARCHAR, res VARCHAR, round VARCHAR)",
        "question": "What event had a win, record of 8-1 and n/a round?"
    },
    {
        "answer": "SELECT program FROM table_16275828_4 WHERE track_name = \"Highland Speedway\"",
        "context": "CREATE TABLE table_16275828_4 (program VARCHAR, track_name VARCHAR)",
        "question": "What programs were held at highland speedway?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_16388478_3 WHERE home_team = \"Port Adelaide\"",
        "context": "CREATE TABLE table_16388478_3 (away_team VARCHAR, home_team VARCHAR)",
        "question": "What score did the away team receive against home team Port Adelaide?"
    },
    {
        "answer": "SELECT MAX(no) FROM table_16494599_5 WHERE years_for_grizzlies = \"2000-2001\"",
        "context": "CREATE TABLE table_16494599_5 (no INTEGER, years_for_grizzlies VARCHAR)",
        "question": "what's the highest player number from the list from 2000-2001"
    },
    {
        "answer": "SELECT score FROM table_name_9 WHERE player = \"bob murphy\"",
        "context": "CREATE TABLE table_name_9 (score VARCHAR, player VARCHAR)",
        "question": "What is Score, when Player is \"Bob Murphy\"?"
    },
    {
        "answer": "SELECT player FROM table_name_32 WHERE to_par = \"+1\" AND country = \"united states\" AND score = 71 - 70 = 141",
        "context": "CREATE TABLE table_name_32 (player VARCHAR, to_par VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "What is Player, when To Par is \"+1\", when Country is \"United States\", and when Score is \"71-70=141\"?"
    },
    {
        "answer": "SELECT score FROM table_name_40 WHERE place = \"t8\" AND player = \"orville moody\"",
        "context": "CREATE TABLE table_name_40 (score VARCHAR, place VARCHAR, player VARCHAR)",
        "question": "What is Score, when Place is \"T8\", and when Player is \"Orville Moody\"?"
    },
    {
        "answer": "SELECT result FROM table_name_1 WHERE category = \"best urban/alternative performance\" AND year > 2003",
        "context": "CREATE TABLE table_name_1 (result VARCHAR, category VARCHAR, year VARCHAR)",
        "question": "WHAT IS THE RESULT FOR best urban/alternative performance, IN 2003 OR GREATER?"
    },
    {
        "answer": "SELECT title FROM table_name_95 WHERE category = \"best r&b song\"",
        "context": "CREATE TABLE table_name_95 (title VARCHAR, category VARCHAR)",
        "question": "WHAT IS THE TITLE WITH CATEGORY OF best r&b song?"
    },
    {
        "answer": "SELECT result FROM table_name_79 WHERE year = 2003 AND category = \"best urban/alternative performance\"",
        "context": "CREATE TABLE table_name_79 (result VARCHAR, year VARCHAR, category VARCHAR)",
        "question": "WHAT IS THE RESULT FOR 2003, IN  best urban/alternative performance?"
    },
    {
        "answer": "SELECT latitude FROM table_16799784_7 WHERE longitude = \"80.0E\"",
        "context": "CREATE TABLE table_16799784_7 (latitude VARCHAR, longitude VARCHAR)",
        "question": "what is the latitude of the feature of longitude 80.0e"
    },
    {
        "answer": "SELECT profits__billion_$_ FROM table_1682026_6 WHERE market_value__billion_$_ = \"204.9\"",
        "context": "CREATE TABLE table_1682026_6 (profits__billion_$_ VARCHAR, market_value__billion_$_ VARCHAR)",
        "question": "what is the amount of profits in billions for companies with a market value of 204.9 billion? "
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_92 WHERE assets__billion_$_ < 248.44 AND industry = \"oil and gas\" AND headquarters = \"france\" AND market_value__billion_$_ > 152.62",
        "context": "CREATE TABLE table_name_92 (rank VARCHAR, market_value__billion_$_ VARCHAR, headquarters VARCHAR, assets__billion_$_ VARCHAR, industry VARCHAR)",
        "question": "What is the total rank of the company with less than 248.44 billion in assets, an industry of oil and gas, headquarters in France, and a market value greater than 152.62 billions?"
    },
    {
        "answer": "SELECT company FROM table_name_62 WHERE sales__billion_$_ > 195.34 AND rank > 7 AND profits__billion_$_ > 11.29 AND market_value__billion_$_ > 198.14",
        "context": "CREATE TABLE table_name_62 (company VARCHAR, market_value__billion_$_ VARCHAR, profits__billion_$_ VARCHAR, sales__billion_$_ VARCHAR, rank VARCHAR)",
        "question": "What company has more than 195.34 billion in sales, ranked greater than 7, more than 11.29 billion in profits, and a market value greater than 198.14 billion?"
    },
    {
        "answer": "SELECT college FROM table_name_6 WHERE round < 7 AND overall < 186 AND pick = 13",
        "context": "CREATE TABLE table_name_6 (college VARCHAR, pick VARCHAR, round VARCHAR, overall VARCHAR)",
        "question": "Which college had a pick in a round under 7, with a pick number 13 and overall was under 186?"
    },
    {
        "answer": "SELECT MIN(silver) FROM table_name_90 WHERE bronze < 20 AND total = 1 AND sport = \"water polo\" AND gold < 0",
        "context": "CREATE TABLE table_name_90 (silver INTEGER, gold VARCHAR, sport VARCHAR, bronze VARCHAR, total VARCHAR)",
        "question": "What is the smallest number of silvers associated with bronzes under 20, totals of 1, golds of 0, and in Water Polo?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_17288825_6 WHERE team = \"@ New Orleans\"",
        "context": "CREATE TABLE table_17288825_6 (high_rebounds VARCHAR, team VARCHAR)",
        "question": "When @ new orleans is the team who has the highest amount of rebounds?"
    },
    {
        "answer": "SELECT date FROM table_17288825_6 WHERE high_assists = \"Aaron Brooks (6)\"",
        "context": "CREATE TABLE table_17288825_6 (date VARCHAR, high_assists VARCHAR)",
        "question": "When aaron brooks (6) had the highest amount of assists what is the date?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_26 WHERE college = \"arizona\"",
        "context": "CREATE TABLE table_name_26 (round INTEGER, college VARCHAR)",
        "question": "Which Round has a College of arizona?"
    },
    {
        "answer": "SELECT COUNT(fin_pos) FROM table_17304308_1 WHERE points = \"12\" AND time_retired = \"Accident\"",
        "context": "CREATE TABLE table_17304308_1 (fin_pos VARCHAR, points VARCHAR, time_retired VARCHAR)",
        "question": "Name the total number of fin pos for 12 points of accident"
    },
    {
        "answer": "SELECT MIN(total_atms) FROM table_name_42 WHERE bank_type = \"new private sector banks\" AND on_site_atms > 1883",
        "context": "CREATE TABLE table_name_42 (total_atms INTEGER, bank_type VARCHAR, on_site_atms VARCHAR)",
        "question": "What is the minimum total ATMs with new private sector banks as the bank type, and the on-site ATMs are greater than 1883?"
    },
    {
        "answer": "SELECT COUNT(score) FROM table_17323529_5 WHERE location_attendance = \"Staples Center 13,266\"",
        "context": "CREATE TABLE table_17323529_5 (score VARCHAR, location_attendance VARCHAR)",
        "question": "Name the total number of score for staples center 13,266"
    },
    {
        "answer": "SELECT date FROM table_name_82 WHERE effect = \"shot down\" AND place = \"south of stanley airport\"",
        "context": "CREATE TABLE table_name_82 (date VARCHAR, effect VARCHAR, place VARCHAR)",
        "question": "What is Date, when Effect is \"Shot Down\", and when Place is \"South of Stanley Airport\"?"
    },
    {
        "answer": "SELECT title FROM table_17356042_1 WHERE written_by = \"R. Scott Gemmill\"",
        "context": "CREATE TABLE table_17356042_1 (title VARCHAR, written_by VARCHAR)",
        "question": "Name the title that was written by r. scott gemmill"
    },
    {
        "answer": "SELECT lost FROM table_17366952_1 WHERE goal_average_1 = \"1.21\"",
        "context": "CREATE TABLE table_17366952_1 (lost VARCHAR, goal_average_1 VARCHAR)",
        "question": "List all losses with average goals of 1.21."
    },
    {
        "answer": "SELECT SUM(enrollment) FROM table_name_62 WHERE location = \"buffalo, new york\" AND affiliation = \"public\" AND founded > 1846",
        "context": "CREATE TABLE table_name_62 (enrollment INTEGER, founded VARCHAR, location VARCHAR, affiliation VARCHAR)",
        "question": "What's the total enrollment of public schools located in Buffalo, New York that were founded after 1846?"
    },
    {
        "answer": "SELECT SUM(season) FROM table_name_31 WHERE team_1 = \"bangkok university\" AND score = \"0-0\" AND team_2 = \"chunnam dragons\"",
        "context": "CREATE TABLE table_name_31 (season INTEGER, team_2 VARCHAR, team_1 VARCHAR, score VARCHAR)",
        "question": "What year did Bangkok University and Chunnam Dragons have a score of 0-0?"
    },
    {
        "answer": "SELECT transfer_window FROM table_name_23 WHERE name = \"christian nerlinger\"",
        "context": "CREATE TABLE table_name_23 (transfer_window VARCHAR, name VARCHAR)",
        "question": "What is the transfer window for Christian Nerlinger?"
    },
    {
        "answer": "SELECT SUM(comp) FROM table_name_94 WHERE yds_game < 209.5 AND name = \"brytus\" AND rating < 100",
        "context": "CREATE TABLE table_name_94 (comp INTEGER, rating VARCHAR, yds_game VARCHAR, name VARCHAR)",
        "question": "Name the sum of Comp which has a Yds/game smaller than 209.5,brytus Name, and a Rating smaller than 100?"
    },
    {
        "answer": "SELECT location_denotes_location_of_school_by_seattle_neighborhood, _does_not_necessary_correspond_with_attendance_area FROM table_17641314_3 WHERE school = \"Eckstein\"",
        "context": "CREATE TABLE table_17641314_3 (location_denotes_location_of_school_by_seattle_neighborhood VARCHAR, _does_not_necessary_correspond_with_attendance_area VARCHAR, school VARCHAR)",
        "question": "Name the location for school eckstein"
    },
    {
        "answer": "SELECT name FROM table_name_70 WHERE aafc_team = \"los angeles dons\" AND position = \"fb\" AND college = \"oklahoma a&m\"",
        "context": "CREATE TABLE table_name_70 (name VARCHAR, college VARCHAR, aafc_team VARCHAR, position VARCHAR)",
        "question": "Which Name has a AAFC Team of los angeles dons, and a Position of fb, and a College of oklahoma a&m?"
    },
    {
        "answer": "SELECT nationality FROM table_name_84 WHERE college_junior_club_team__league_ = \"swift current broncos (wchl)\"",
        "context": "CREATE TABLE table_name_84 (nationality VARCHAR, college_junior_club_team__league_ VARCHAR)",
        "question": "Which Nationality has a College/Junior/Club Team (League) of swift current broncos (wchl)?"
    },
    {
        "answer": "SELECT date_released FROM table_17798548_4 WHERE season = \"The Complete 2nd Series: Volume One\"",
        "context": "CREATE TABLE table_17798548_4 (date_released VARCHAR, season VARCHAR)",
        "question": "What day was the complete 2nd series: volume one released?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_63 WHERE college_junior_club_team__league_ = \"hamilton red wings (oha)\" AND position = \"rw\"",
        "context": "CREATE TABLE table_name_63 (round INTEGER, college_junior_club_team__league_ VARCHAR, position VARCHAR)",
        "question": "Which Round has a College/Junior/Club Team (League) of hamilton red wings (oha), and a Position of rw?"
    },
    {
        "answer": "SELECT MIN(matches) FROM table_17900317_5 WHERE runs = 276",
        "context": "CREATE TABLE table_17900317_5 (matches INTEGER, runs VARCHAR)",
        "question": "Name the least matches for runs being 276"
    },
    {
        "answer": "SELECT driver FROM table_name_57 WHERE chassis = \"dallara f306\" AND rounds = \"8\"",
        "context": "CREATE TABLE table_name_57 (driver VARCHAR, chassis VARCHAR, rounds VARCHAR)",
        "question": "Which driver was in 8 rounds with a chassis of dallara f306?"
    },
    {
        "answer": "SELECT chassis FROM table_name_34 WHERE team = \"rp motorsport\" AND driver = \"augusto scalbi\"",
        "context": "CREATE TABLE table_name_34 (chassis VARCHAR, team VARCHAR, driver VARCHAR)",
        "question": "What is the chassis for Augusto Scalbi on Team RP Motorsport?"
    },
    {
        "answer": "SELECT company FROM table_name_86 WHERE assets__billion_$_ < 235.45 AND sales__billion_$_ > 159.29 AND industry = \"oil and gas\" AND profits__billion_$_ = 19.28",
        "context": "CREATE TABLE table_name_86 (company VARCHAR, profits__billion_$_ VARCHAR, industry VARCHAR, assets__billion_$_ VARCHAR, sales__billion_$_ VARCHAR)",
        "question": "Which company in the oil and gas industry has assets (billion $) under 235.45, sales (billion $) larger than 159.29 and brings in profits (billion $) of 19.28?"
    },
    {
        "answer": "SELECT brup FROM table_18064020_21 WHERE name = \"total\"",
        "context": "CREATE TABLE table_18064020_21 (brup VARCHAR, name VARCHAR)",
        "question": "What is the total brup for the team?"
    },
    {
        "answer": "SELECT no_yds FROM table_18064020_21 WHERE tfl_yds = \"2.5-4\"",
        "context": "CREATE TABLE table_18064020_21 (no_yds VARCHAR, tfl_yds VARCHAR)",
        "question": "How many yards for the player with tfl-yds of 2.5-4?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_18118221_1 WHERE railway_station = \"Gatwick Airport\"",
        "context": "CREATE TABLE table_18118221_1 (rank INTEGER, railway_station VARCHAR)",
        "question": "What is the lowest rank of Gatwick Airport? "
    },
    {
        "answer": "SELECT modern_german__standard_wording_ FROM table_181240_1 WHERE writing_system_2__german_based_ = \"wie mir die vergewwe wu uns schuldich sinn.\"",
        "context": "CREATE TABLE table_181240_1 (modern_german__standard_wording_ VARCHAR, writing_system_2__german_based_ VARCHAR)",
        "question": "What is the modern german standard wording for the german based writing system 2 phrase \"wie mir die vergewwe wu uns schuldich sinn.\"?"
    },
    {
        "answer": "SELECT length__miles_ FROM table_1817879_2 WHERE endpoints = \"Westlake/MacArthur Park to Wilshire/Western\"",
        "context": "CREATE TABLE table_1817879_2 (length__miles_ VARCHAR, endpoints VARCHAR)",
        "question": "What is the lenth (miles) of endpoints westlake/macarthur park to wilshire/western?"
    },
    {
        "answer": "SELECT MIN AS $50___1_2_oz FROM table_name_59 WHERE year = 1997 AND $25___1_4_oz > 27 OFFSET 100",
        "context": "CREATE TABLE table_name_59 (MIN VARCHAR, year VARCHAR, $25___1_4_oz VARCHAR)",
        "question": "WHAT IS THE LOWEST $50-1/2 OZ COIN WITH A 1997 YEAR AND $25-1/4 OZ LARGER THAN $27,100?"
    },
    {
        "answer": "SELECT edition FROM table_18183850_12 WHERE surface = \"Clay (i)\" AND outcome = \"Winner\"",
        "context": "CREATE TABLE table_18183850_12 (edition VARCHAR, surface VARCHAR, outcome VARCHAR)",
        "question": "What was the game edition when they played on the clay (i) surface and the outcome was a winner?"
    },
    {
        "answer": "SELECT MIN(average_cards_a_game) FROM table_name_22 WHERE season = \"2004/2005\" AND red_cards > 3",
        "context": "CREATE TABLE table_name_22 (average_cards_a_game INTEGER, season VARCHAR, red_cards VARCHAR)",
        "question": "Which Average Cards a game has a Season of 2004/2005, and a Red Cards larger than 3?"
    },
    {
        "answer": "SELECT COUNT(number_of_screening) FROM table_18220102_1 WHERE opening_film = \"The Journey of Vaan Nguyen\"",
        "context": "CREATE TABLE table_18220102_1 (number_of_screening VARCHAR, opening_film VARCHAR)",
        "question": "How many number of screenings have an opening film of the journey of vaan nguyen?"
    },
    {
        "answer": "SELECT series__number FROM table_18217750_1 WHERE us_viewers__millions_ = \"20.64\"",
        "context": "CREATE TABLE table_18217750_1 (series__number VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "What series number garnered 20.64 million viewers?"
    },
    {
        "answer": "SELECT date_performed FROM table_18278508_2 WHERE main_contestant = \"Jatin Shah\" AND co_contestant__yaar_vs_pyaar_ = \"Shalini Chandran\"",
        "context": "CREATE TABLE table_18278508_2 (date_performed VARCHAR, main_contestant VARCHAR, co_contestant__yaar_vs_pyaar_ VARCHAR)",
        "question": "What date did Jatin Shah and Shalini Chandran perform?"
    },
    {
        "answer": "SELECT grand_prix FROM table_18303274_1 WHERE pole_position = \"Daijiro Hiura\" AND round = 5",
        "context": "CREATE TABLE table_18303274_1 (grand_prix VARCHAR, pole_position VARCHAR, round VARCHAR)",
        "question": "Which round 5 Grand Prix had Daijiro Hiura at pole position? "
    },
    {
        "answer": "SELECT grand_prix FROM table_18303274_1 WHERE race_winner = \"Daijiro Hiura\"",
        "context": "CREATE TABLE table_18303274_1 (grand_prix VARCHAR, race_winner VARCHAR)",
        "question": "What grand prixs did Daijiro Hiura win? "
    },
    {
        "answer": "SELECT score FROM table_name_65 WHERE money___$__ = \"36,090\"",
        "context": "CREATE TABLE table_name_65 (score VARCHAR, money___$__ VARCHAR)",
        "question": "What score won $36,090?"
    },
    {
        "answer": "SELECT COUNT(losses) FROM table_name_61 WHERE games < 14 AND wins < 3 AND conference = \"maac\" AND school = \"fairfield\"",
        "context": "CREATE TABLE table_name_61 (losses VARCHAR, school VARCHAR, conference VARCHAR, games VARCHAR, wins VARCHAR)",
        "question": "What is the total number of losses of the team with games less than 14, wins less than 3, in the Maac Conference at Fairfield School?"
    },
    {
        "answer": "SELECT COUNT(number_of_editions) FROM table_1840433_2 WHERE most_wins_by = \"Franco Marvulli (4)\"",
        "context": "CREATE TABLE table_1840433_2 (number_of_editions VARCHAR, most_wins_by VARCHAR)",
        "question": "How many editions have a most wins value of Franco Marvulli (4)?"
    },
    {
        "answer": "SELECT kentucky FROM table_18461045_1 WHERE illinois = \"Rock Falls LL Rock Falls\"",
        "context": "CREATE TABLE table_18461045_1 (kentucky VARCHAR, illinois VARCHAR)",
        "question": "What was the little league team from Kentucky when the little league team from Illinois was Rock Falls LL Rock Falls?"
    },
    {
        "answer": "SELECT kentucky FROM table_18461045_1 WHERE indiana = \"Brownsburg LL Brownsburg\" AND wisconsin = \"Merrill LL Merrill\"",
        "context": "CREATE TABLE table_18461045_1 (kentucky VARCHAR, indiana VARCHAR, wisconsin VARCHAR)",
        "question": "What was the little league team from Kentucky when the little league team from Indiana and Wisconsin were Brownsburg LL Brownsburg and Merrill LL Merrill?"
    },
    {
        "answer": "SELECT performance FROM table_name_39 WHERE test_standard = \"bs en779\" AND particulate_size_approaching_100_percentage_retention = \">2\u00b5m\" AND class = \"f6\"",
        "context": "CREATE TABLE table_name_39 (performance VARCHAR, class VARCHAR, test_standard VARCHAR, particulate_size_approaching_100_percentage_retention VARCHAR)",
        "question": "Which  Performance has a Test Standard of bs en779, and a Particulate size approaching 100% retention of >2\u00b5m, and a Class of f6?"
    },
    {
        "answer": "SELECT particulate_size_approaching_100_percentage_retention FROM table_name_47 WHERE usage = \"semi hepa\" AND class = \"h12\"",
        "context": "CREATE TABLE table_name_47 (particulate_size_approaching_100_percentage_retention VARCHAR, usage VARCHAR, class VARCHAR)",
        "question": "Which Particulate size approaching 100% retention has a Usage of semi hepa and a Class of h12?"
    },
    {
        "answer": "SELECT kentucky FROM table_18461045_1 WHERE michigan = \"Grosse Pointe Farms-City LL Grosse Pointe Farms\"",
        "context": "CREATE TABLE table_18461045_1 (kentucky VARCHAR, michigan VARCHAR)",
        "question": "What was the little league team from Kentucky when the little league team from Michigan was Grosse Pointe Farms-City LL Grosse Pointe Farms? "
    },
    {
        "answer": "SELECT COUNT(table_points) FROM table_18505065_1 WHERE difference = \"+194\"",
        "context": "CREATE TABLE table_18505065_1 (table_points VARCHAR, difference VARCHAR)",
        "question": " How many table points are listed for the deficit is +194? "
    },
    {
        "answer": "SELECT japanese_title FROM table_18540104_1 WHERE average_ratings = \"11.6%\"",
        "context": "CREATE TABLE table_18540104_1 (japanese_title VARCHAR, average_ratings VARCHAR)",
        "question": "What is the Japanese title with an average rating of 11.6%?"
    },
    {
        "answer": "SELECT MIN(lost) FROM table_name_27 WHERE _percentage_pts = 93.45",
        "context": "CREATE TABLE table_name_27 (lost INTEGER, _percentage_pts VARCHAR)",
        "question": "If the points scored were 93.45%, what's the lowest amount of games lost?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_14 WHERE director = \"kevin costner\"",
        "context": "CREATE TABLE table_name_14 (rank VARCHAR, director VARCHAR)",
        "question": "What is the rank of the film directed by Kevin Costner?"
    },
    {
        "answer": "SELECT COUNT(gymnast) FROM table_18662026_10 WHERE parallel_bars = \"14.025\"",
        "context": "CREATE TABLE table_18662026_10 (gymnast VARCHAR, parallel_bars VARCHAR)",
        "question": "If the parallel bars is 14.025, what is the total number of gymnasts?"
    },
    {
        "answer": "SELECT general_classification FROM table_18733814_2 WHERE points_classification = \"Alessandro Petacchi\" AND young_rider_classification = \"Thomas L\u00f6fkvist\"",
        "context": "CREATE TABLE table_18733814_2 (general_classification VARCHAR, points_classification VARCHAR, young_rider_classification VARCHAR)",
        "question": "When thomas l\u00f6fkvist is the  young rider classification and alessandro petacchi is the points classification who are the general classifications? "
    },
    {
        "answer": "SELECT MAX(_number_s_dam_and_gnis_query_link) FROM table_18760137_2 WHERE borough_or_census_area = \"Fairbanks North Star\"",
        "context": "CREATE TABLE table_18760137_2 (_number_s_dam_and_gnis_query_link INTEGER, borough_or_census_area VARCHAR)",
        "question": "Name the most numbers dam and gnis query link for borough or census area for fairbanks north star"
    },
    {
        "answer": "SELECT AVG(poles) FROM table_name_65 WHERE wins = 0 AND position = \"nc\" AND season < 2004",
        "context": "CREATE TABLE table_name_65 (poles INTEGER, season VARCHAR, wins VARCHAR, position VARCHAR)",
        "question": "What is the average Poles, when Wins is 0, when Position is \"nc\", and when Season is before 2004?"
    },
    {
        "answer": "SELECT opponent FROM table_name_78 WHERE tournament = \"milan, italy\"",
        "context": "CREATE TABLE table_name_78 (opponent VARCHAR, tournament VARCHAR)",
        "question": "Who were the opponents for the event in Milan, Italy?"
    },
    {
        "answer": "SELECT mission_target FROM table_18933037_3 WHERE cause_of_loss = \"Hit by SAM at 38,500 feet just after bomb release\"",
        "context": "CREATE TABLE table_18933037_3 (mission_target VARCHAR, cause_of_loss VARCHAR)",
        "question": "When hit by sam at 38,500 feet just after bomb release was the cause of loss what is the mission/target?"
    },
    {
        "answer": "SELECT b_52_model FROM table_18933037_3 WHERE unit = \"441st BS, 7th BW\"",
        "context": "CREATE TABLE table_18933037_3 (b_52_model VARCHAR, unit VARCHAR)",
        "question": "When 441st bs, 7th bw is the unit what is the b-52 model?"
    },
    {
        "answer": "SELECT SUM(overall) FROM table_name_55 WHERE round = 3",
        "context": "CREATE TABLE table_name_55 (overall INTEGER, round VARCHAR)",
        "question": "What is the overall sum of round 3?"
    },
    {
        "answer": "SELECT performed_by FROM table_191105_2 WHERE music_by = \"Bob Dorough\" AND episode_title = \"Conjunction Junction\"",
        "context": "CREATE TABLE table_191105_2 (performed_by VARCHAR, music_by VARCHAR, episode_title VARCHAR)",
        "question": "When conjunction junction is the episode title and the music is by bob dorough who is the performer?"
    },
    {
        "answer": "SELECT 1 AS st_leg FROM table_name_7 WHERE team_2 = \"nov milenium\"",
        "context": "CREATE TABLE table_name_7 (team_2 VARCHAR)",
        "question": "What was the 1st leg when team 2 was nov milenium?"
    },
    {
        "answer": "SELECT COUNT(first_aired) FROM table_191105_2 WHERE performed_by = \"Zachary Sanders\"",
        "context": "CREATE TABLE table_191105_2 (first_aired VARCHAR, performed_by VARCHAR)",
        "question": "When zachary sanders is the performer how many first aired are there?"
    },
    {
        "answer": "SELECT SUM(date_of_official_foundation_of_municipality) FROM table_name_65 WHERE province = \"kerm\u0101n\" AND 2006 = 167014 AND rank < 46",
        "context": "CREATE TABLE table_name_65 (date_of_official_foundation_of_municipality INTEGER, rank VARCHAR, province VARCHAR)",
        "question": "What is the sum of Date of Official Foundation of Municipality, when Province is \"Kerm\u0101n\", when 2006 us \"167014\", and when Rank is less than 46?"
    },
    {
        "answer": "SELECT institute FROM table_1919538_1 WHERE democratic_renewal = \"18.0% \u2013 22.0%\"",
        "context": "CREATE TABLE table_1919538_1 (institute VARCHAR, democratic_renewal VARCHAR)",
        "question": "which institutes gave the democratic renewal 18.0% \u2013 22.0% on a poll from October 6, 1985?"
    },
    {
        "answer": "SELECT _number_of_seats_to_be_won FROM table_19283982_4 WHERE _percentage_of_popular_vote = \"6.88%\"",
        "context": "CREATE TABLE table_19283982_4 (_number_of_seats_to_be_won VARCHAR, _percentage_of_popular_vote VARCHAR)",
        "question": "Name the number of seats to be won being % of popular vote at 6.88%"
    },
    {
        "answer": "SELECT _number_of_total_votes FROM table_19283982_4 WHERE _number_of_seats_won = 30",
        "context": "CREATE TABLE table_19283982_4 (_number_of_total_votes VARCHAR, _number_of_seats_won VARCHAR)",
        "question": "Name the number of total votes for # of seats won being 30"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_13 WHERE class = \"v8\" AND entrant = \"diet-coke racing\"",
        "context": "CREATE TABLE table_name_13 (laps INTEGER, class VARCHAR, entrant VARCHAR)",
        "question": "What was the highest amount of laps when the class was v8 and the entrant was diet-coke racing?"
    },
    {
        "answer": "SELECT player FROM table_name_51 WHERE place = \"t5\" AND score = 69 - 66 - 71 = 206",
        "context": "CREATE TABLE table_name_51 (player VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "who is the player when the place is t5 and the score is 69-66-71=206?"
    },
    {
        "answer": "SELECT _number_of_candidates FROM table_19283982_4 WHERE _number_of_seats_won = 43",
        "context": "CREATE TABLE table_19283982_4 (_number_of_candidates VARCHAR, _number_of_seats_won VARCHAR)",
        "question": "Name the number of candidates for # of seats won being 43"
    },
    {
        "answer": "SELECT social_ao FROM table_name_83 WHERE external_co = \"simonas savickas\" AND internal_co = \"pieter kuijsten\"",
        "context": "CREATE TABLE table_name_83 (social_ao VARCHAR, external_co VARCHAR, internal_co VARCHAR)",
        "question": "What Social AO has an External CO of simonas savickas, and an Internal CO of pieter kuijsten?"
    },
    {
        "answer": "SELECT cook_pvi FROM table_19283806_4 WHERE representative = \"Mike Thompson\"",
        "context": "CREATE TABLE table_19283806_4 (cook_pvi VARCHAR, representative VARCHAR)",
        "question": "What is the Cook PVI for the location that has a representative of Mike Thompson?"
    },
    {
        "answer": "SELECT location FROM table_name_46 WHERE stadium = \"hietalahti stadium\"",
        "context": "CREATE TABLE table_name_46 (location VARCHAR, stadium VARCHAR)",
        "question": "What is the Location of the Hietalahti Stadium?"
    },
    {
        "answer": "SELECT MAX(lane) FROM table_name_48 WHERE name = \"johan wissman\" AND react < 0.242",
        "context": "CREATE TABLE table_name_48 (lane INTEGER, name VARCHAR, react VARCHAR)",
        "question": "what is the highest lane number for johan wissman when the react is less than 0.242?"
    },
    {
        "answer": "SELECT MAX(heat) FROM table_name_91 WHERE country = \"united kingdom\" AND react < 0.232",
        "context": "CREATE TABLE table_name_91 (heat INTEGER, country VARCHAR, react VARCHAR)",
        "question": "what is the heat when the country is united kingdom and react is less than 0.232?"
    },
    {
        "answer": "SELECT 1 AS st_leg FROM table_name_52 WHERE competition = \"uefa champions league\" AND club = \"skonto riga\"",
        "context": "CREATE TABLE table_name_52 (competition VARCHAR, club VARCHAR)",
        "question": "What is the 1st leg of the UEFA Champions League Compeition in the Skonto Riga Club?"
    },
    {
        "answer": "SELECT girl_group FROM table_19439814_1 WHERE studio_albums = 29",
        "context": "CREATE TABLE table_19439814_1 (girl_group VARCHAR, studio_albums VARCHAR)",
        "question": "What group had 29 studio albums?"
    },
    {
        "answer": "SELECT nhl_team FROM table_1965650_11 WHERE college_junior_club_team = \"Calgary Centennials (WCHL)\"",
        "context": "CREATE TABLE table_1965650_11 (nhl_team VARCHAR, college_junior_club_team VARCHAR)",
        "question": "What NHL team was the player from Calgary Centennials (WCHL) drafted for?"
    },
    {
        "answer": "SELECT college_junior_club_team FROM table_1965650_11 WHERE position = \"Centre\" AND player = \"Russ Wiechnik\"",
        "context": "CREATE TABLE table_1965650_11 (college_junior_club_team VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "What team did Russ Wiechnik, on the centre position, come from?"
    },
    {
        "answer": "SELECT party FROM table_19753079_35 WHERE candidates = \"Yvette Clarke (D) 90.6% Hugh Carr (R) 9.4%\"",
        "context": "CREATE TABLE table_19753079_35 (party VARCHAR, candidates VARCHAR)",
        "question": "Name the party for yvette clarke (d) 90.6% hugh carr (r) 9.4%"
    },
    {
        "answer": "SELECT COUNT(pick) FROM table_name_96 WHERE position = \"offensive guard\" AND player = \"reggie mckenzie\" AND round > 2",
        "context": "CREATE TABLE table_name_96 (pick VARCHAR, round VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "Which Pick has a Position of offensive guard, a Player of reggie mckenzie, and a Round larger than 2?"
    },
    {
        "answer": "SELECT COUNT(viewers__millions_) FROM table_19834691_4 WHERE audience_share_in_timeslot = \"10.2%\"",
        "context": "CREATE TABLE table_19834691_4 (viewers__millions_ VARCHAR, audience_share_in_timeslot VARCHAR)",
        "question": "Name the total number of viewers for audience share in timeslot for 10.2%"
    },
    {
        "answer": "SELECT MIN(gain) FROM table_name_95 WHERE long = 0 AND gp_gs = \"4\u20130\" AND loss < 3",
        "context": "CREATE TABLE table_name_95 (gain INTEGER, loss VARCHAR, long VARCHAR, gp_gs VARCHAR)",
        "question": "Name the lowest Gain which has a Long of 0, and a GP-GS of 4\u20130, and a Loss smaller than 3?"
    },
    {
        "answer": "SELECT principal FROM table_1984697_53 WHERE school = \"Edgewood High school\"",
        "context": "CREATE TABLE table_1984697_53 (principal VARCHAR, school VARCHAR)",
        "question": "Who's the principal of Edgewood High School?/"
    },
    {
        "answer": "SELECT report FROM table_19908651_3 WHERE winning_driver = \"Michael Andretti\" AND fastest_lap = \"Nigel Mansell\"",
        "context": "CREATE TABLE table_19908651_3 (report VARCHAR, winning_driver VARCHAR, fastest_lap VARCHAR)",
        "question": "What's the report of the race won by Michael Andretti, with Nigel Mansell driving the fastest lap?"
    },
    {
        "answer": "SELECT directed_by FROM table_19929970_1 WHERE production_code = \"4AKJ01\"",
        "context": "CREATE TABLE table_19929970_1 (directed_by VARCHAR, production_code VARCHAR)",
        "question": "Who directed the episode with production code 4akj01?"
    },
    {
        "answer": "SELECT streak FROM table_name_88 WHERE team_points > 113 AND game < 12 AND date = \"november 16\"",
        "context": "CREATE TABLE table_name_88 (streak VARCHAR, date VARCHAR, team_points VARCHAR, game VARCHAR)",
        "question": "Which streak before game 12 had a team points larger than 113 on November 16?"
    },
    {
        "answer": "SELECT SUM(played) FROM table_name_22 WHERE goals_for > 60 AND lost = 8 AND position < 1",
        "context": "CREATE TABLE table_name_22 (played INTEGER, position VARCHAR, goals_for VARCHAR, lost VARCHAR)",
        "question": "What is the total of Played where the Goals For is higher than 60, the Lost is 8, and the Position is less than 1?"
    },
    {
        "answer": "SELECT AVG(lost) FROM table_name_79 WHERE team = \"matlock town\" AND goals_against > 66",
        "context": "CREATE TABLE table_name_79 (lost INTEGER, team VARCHAR, goals_against VARCHAR)",
        "question": "What is the average Lost for Team Matlock Town when the Goals Against is higher than 66?"
    },
    {
        "answer": "SELECT location FROM table_name_27 WHERE attendance > 57 OFFSET 347",
        "context": "CREATE TABLE table_name_27 (location VARCHAR, attendance INTEGER)",
        "question": "Where was the attendance more than 57,347?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_95 WHERE state = \"orissa\" AND name = \"prof. priyambada mohanty hejmadi\"",
        "context": "CREATE TABLE table_name_95 (year INTEGER, state VARCHAR, name VARCHAR)",
        "question": "What is the sum of the years when the winner was prof. priyambada mohanty hejmadi from orissa?"
    },
    {
        "answer": "SELECT television_order FROM table_20360535_2 WHERE directed_by = \"Ben Jones\" AND written_by = \"J. M. DeMatteis\" AND original_air_date = \"February6,2009\"",
        "context": "CREATE TABLE table_20360535_2 (television_order VARCHAR, original_air_date VARCHAR, directed_by VARCHAR, written_by VARCHAR)",
        "question": "what is the television order of the episode directed by ben jones, written by j. m. dematteis and originally aired on february6,2009"
    },
    {
        "answer": "SELECT result_f___a FROM table_name_98 WHERE opponents = \"leeds united\"",
        "context": "CREATE TABLE table_name_98 (result_f___a VARCHAR, opponents VARCHAR)",
        "question": "hat is the Result F\u2013 A when they played against Leeds United?"
    },
    {
        "answer": "SELECT vehicle FROM table_20549371_3 WHERE epa_rated_highway_fuel_economy = \"109 mpg-e\"",
        "context": "CREATE TABLE table_20549371_3 (vehicle VARCHAR, epa_rated_highway_fuel_economy VARCHAR)",
        "question": "What vehicle has an epa highway fuel economy of 109 mpg-e?"
    },
    {
        "answer": "SELECT record FROM table_name_77 WHERE date = \"december 11\"",
        "context": "CREATE TABLE table_name_77 (record VARCHAR, date VARCHAR)",
        "question": "What is the record on December 11?"
    },
    {
        "answer": "SELECT result FROM table_name_37 WHERE competition = \"2010 fifa world cup qualification\" AND date = \"10 september 2008\"",
        "context": "CREATE TABLE table_name_37 (result VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "What is Result, when Competition is 2010 FIFA World Cup Qualification, and when Date is 10 September 2008?"
    },
    {
        "answer": "SELECT venue FROM table_name_25 WHERE competition = \"2010 fifa world cup qualification\" AND result = \"won\" AND date = \"14 june 2008\"",
        "context": "CREATE TABLE table_name_25 (venue VARCHAR, date VARCHAR, competition VARCHAR, result VARCHAR)",
        "question": "What is Venue, when Competition is 2010 FIFA World Cup Qualification, when Result is Won, and when Date is 14 June 2008?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_15 WHERE equipment = \"zabel-wsp\" AND position > 7",
        "context": "CREATE TABLE table_name_15 (points INTEGER, equipment VARCHAR, position VARCHAR)",
        "question": "What were highest points received from someone using a zabel-wsp with a position greater than 7?"
    },
    {
        "answer": "SELECT MIN(us_open) FROM table_2092557_12 WHERE player = \"Shirley Fry Irvin\"",
        "context": "CREATE TABLE table_2092557_12 (us_open INTEGER, player VARCHAR)",
        "question": "When did Shirley Fry Irvin win the US Open?"
    },
    {
        "answer": "SELECT wimbledon FROM table_2092557_12 WHERE player = \"Martina Navratilova\"",
        "context": "CREATE TABLE table_2092557_12 (wimbledon VARCHAR, player VARCHAR)",
        "question": "What year did Martina Navratilova win Wimbledon?"
    },
    {
        "answer": "SELECT round FROM table_name_31 WHERE against = \"greece\"",
        "context": "CREATE TABLE table_name_31 (round VARCHAR, against VARCHAR)",
        "question": "What was the round when nueza silva played against greece?"
    },
    {
        "answer": "SELECT tournament_venue__city_ FROM table_21091982_3 WHERE conference = \"Ivy League\"",
        "context": "CREATE TABLE table_21091982_3 (tournament_venue__city_ VARCHAR, conference VARCHAR)",
        "question": "Where was the Ivy League conference tournament?"
    },
    {
        "answer": "SELECT manufacturer FROM table_name_73 WHERE year_made = \"1923\"",
        "context": "CREATE TABLE table_name_73 (manufacturer VARCHAR, year_made VARCHAR)",
        "question": "What manufacturer has a year made of 1923?"
    },
    {
        "answer": "SELECT quantity_made FROM table_name_7 WHERE manufacturer = \"4-6-2 \u2014 oooooo \u2014 pacific\"",
        "context": "CREATE TABLE table_name_7 (quantity_made VARCHAR, manufacturer VARCHAR)",
        "question": "What's the quantity made when the manufacturer was 4-6-2 \u2014 oooooo \u2014 pacific?"
    },
    {
        "answer": "SELECT 100 AS _yr FROM table_21350772_2 WHERE gas_name = \"Carbon dioxide\"",
        "context": "CREATE TABLE table_21350772_2 (gas_name VARCHAR)",
        "question": "What is the 100 year for Carbon Dioxide?"
    },
    {
        "answer": "SELECT time FROM table_name_50 WHERE nation = \"kenya\" AND athlete = \"lineth chepkurui\"",
        "context": "CREATE TABLE table_name_50 (time VARCHAR, nation VARCHAR, athlete VARCHAR)",
        "question": "What is the time when the race was in Kenya and Lineth Chepkurui was the athlete?"
    },
    {
        "answer": "SELECT MAX(episode) FROM table_2140071_8 WHERE premier_date = \"March 8, 2008\"",
        "context": "CREATE TABLE table_2140071_8 (episode INTEGER, premier_date VARCHAR)",
        "question": "Which Maximum episode premiered March 8, 2008?"
    },
    {
        "answer": "SELECT coach FROM table_2140071_8 WHERE premier_date = \"February 16, 2008\" AND episode > 21.0",
        "context": "CREATE TABLE table_2140071_8 (coach VARCHAR, premier_date VARCHAR, episode VARCHAR)",
        "question": "What coach premiered February 16, 2008 later than episode 21.0?"
    },
    {
        "answer": "SELECT MIN(season) FROM table_2140071_8 WHERE coach = \"Cici Kelley\"",
        "context": "CREATE TABLE table_2140071_8 (season INTEGER, coach VARCHAR)",
        "question": "What was Cici Kelley's minimum season?"
    },
    {
        "answer": "SELECT y_ = _2011 FROM table_214479_8 WHERE expression = month = FLOOR((d + e + 114) / 31)",
        "context": "CREATE TABLE table_214479_8 (y_ VARCHAR, _2011 VARCHAR, expression VARCHAR, month VARCHAR, d VARCHAR, e VARCHAR)",
        "question": "What is the y = 2011 when the expression is month = floor ((d + e + 114) / 31)?"
    },
    {
        "answer": "SELECT y_ = _2009 FROM table_214479_8 WHERE expression = month = FLOOR((d + e + 114) / 31)",
        "context": "CREATE TABLE table_214479_8 (y_ VARCHAR, _2009 VARCHAR, expression VARCHAR, month VARCHAR, d VARCHAR, e VARCHAR)",
        "question": "what is  the y = 2009 when the expression is month = floor ((d + e + 114) / 31)?"
    },
    {
        "answer": "SELECT MIN(total_pts) FROM table_21471897_2 WHERE team_name = \"Team Dennis Conner\"",
        "context": "CREATE TABLE table_21471897_2 (total_pts INTEGER, team_name VARCHAR)",
        "question": "Name the min total pts for team dennis conner"
    },
    {
        "answer": "SELECT land_area FROM table_214920_1 WHERE density__pop_per_km2_ = \"21.1\"",
        "context": "CREATE TABLE table_214920_1 (land_area VARCHAR, density__pop_per_km2_ VARCHAR)",
        "question": "What is the land area of the RCM having a density of 21.1?"
    },
    {
        "answer": "SELECT withdrawal_rate__2010_11_ FROM table_21514460_1 WHERE graduation_rate__2011_12_ = \"89.3%\"",
        "context": "CREATE TABLE table_21514460_1 (withdrawal_rate__2010_11_ VARCHAR, graduation_rate__2011_12_ VARCHAR)",
        "question": "What is the withdrawal rate for the school district with a graduation rate of 89.3%?"
    },
    {
        "answer": "SELECT headquarters FROM table_21514460_1 WHERE school_district = \"Annapolis Valley Regional School Board\"",
        "context": "CREATE TABLE table_21514460_1 (headquarters VARCHAR, school_district VARCHAR)",
        "question": "Where is the headquarter located for the Annapolis Valley Regional School Board?"
    },
    {
        "answer": "SELECT COUNT(opponents) FROM table_2151643_3 WHERE outcome = \"Winner\" AND partner = \"John Lloyd\" AND surface = \"Clay\"",
        "context": "CREATE TABLE table_2151643_3 (opponents VARCHAR, surface VARCHAR, outcome VARCHAR, partner VARCHAR)",
        "question": "What was the total number of matches that had an outcome of Winner, a partner of John Lloyd, and a clay surface?"
    },
    {
        "answer": "SELECT _number FROM table_21550897_1 WHERE directed_by = \"Craig Ross, Jr.\"",
        "context": "CREATE TABLE table_21550897_1 (_number VARCHAR, directed_by VARCHAR)",
        "question": "What episode number was directed by Craig Ross, Jr."
    },
    {
        "answer": "SELECT successor FROM table_2159506_4 WHERE reason_for_change = \"Died May 12, 1964\"",
        "context": "CREATE TABLE table_2159506_4 (successor VARCHAR, reason_for_change VARCHAR)",
        "question": "Who are all successors when reason for change is died May 12, 1964?"
    },
    {
        "answer": "SELECT site FROM table_name_67 WHERE opponent_number = \"northwestern\"",
        "context": "CREATE TABLE table_name_67 (site VARCHAR, opponent_number VARCHAR)",
        "question": "At which site was Northwestern an opponent?"
    },
    {
        "answer": "SELECT administrative_division FROM table_21734764_1 WHERE population_2011_siak_database = \"3,672,994\"",
        "context": "CREATE TABLE table_21734764_1 (administrative_division VARCHAR, population_2011_siak_database VARCHAR)",
        "question": "Which administrative division had a population of 2011 according to the siak database of 3,672,994?"
    },
    {
        "answer": "SELECT name FROM table_name_38 WHERE reported_age = \"111 years, 66 days\"",
        "context": "CREATE TABLE table_name_38 (name VARCHAR, reported_age VARCHAR)",
        "question": "Who has a reported age of 111 years, 66 days?"
    },
    {
        "answer": "SELECT area__km\u00b2__2005 FROM table_21734764_1 WHERE administrative_division = \"Cimahi City\"",
        "context": "CREATE TABLE table_21734764_1 (area__km\u00b2__2005 VARCHAR, administrative_division VARCHAR)",
        "question": "What is the area of cimahi city?"
    },
    {
        "answer": "SELECT date FROM table_name_60 WHERE countries_surveyed < 122 AND _percentage_rank = \"47\"",
        "context": "CREATE TABLE table_name_60 (date VARCHAR, countries_surveyed VARCHAR, _percentage_rank VARCHAR)",
        "question": "Date for less than 122 countries and a 47% rank?"
    },
    {
        "answer": "SELECT high_assists FROM table_name_71 WHERE high_points = \"andrew bynum (23)\"",
        "context": "CREATE TABLE table_name_71 (high_assists VARCHAR, high_points VARCHAR)",
        "question": "What high assists has the high points of andrew bynum (23)?"
    },
    {
        "answer": "SELECT date FROM table_name_42 WHERE total < 19 AND venue = \"anz stadium\"",
        "context": "CREATE TABLE table_name_42 (date VARCHAR, total VARCHAR, venue VARCHAR)",
        "question": "What day was the total smaller than 19 at Venue of anz stadium?"
    },
    {
        "answer": "SELECT average_grade FROM table_21829580_1 WHERE song = \"\u015e\u0131mar\u0131k Tarkan\"",
        "context": "CREATE TABLE table_21829580_1 (average_grade VARCHAR, song VARCHAR)",
        "question": "Name the average grade for \u015f\u0131mar\u0131k tarkan"
    },
    {
        "answer": "SELECT position_in_table FROM table_name_91 WHERE team = \"mons\" AND replaced_by = \"christophe dessy (caretaker)\"",
        "context": "CREATE TABLE table_name_91 (position_in_table VARCHAR, team VARCHAR, replaced_by VARCHAR)",
        "question": "Which position is team mons who was replaced by Christophe Dessy (caretaker)?"
    },
    {
        "answer": "SELECT partner FROM table_name_74 WHERE outcome = \"runner-up\" AND surface = \"clay\" AND opponents = \"marco chiudinelli michael lammer\"",
        "context": "CREATE TABLE table_name_74 (partner VARCHAR, opponents VARCHAR, outcome VARCHAR, surface VARCHAR)",
        "question": "Who was the partner on the game which took place on a clay surface with opponents of marco chiudinelli michael lammer and a runner-up result?"
    },
    {
        "answer": "SELECT former_codes FROM table_222666_1 WHERE new_country_names_and_codes = \"Merged into Panama ( PA , PAN , 591 )\"",
        "context": "CREATE TABLE table_222666_1 (former_codes VARCHAR, new_country_names_and_codes VARCHAR)",
        "question": "Name the former codes for  merged into panama ( pa , pan , 591 )"
    },
    {
        "answer": "SELECT seat_no_6 FROM table_2231241_1 WHERE seat_no_1 = \"Jacques Lachapelle\" AND seat_no_5 = \"Donald S. Dutton\"",
        "context": "CREATE TABLE table_2231241_1 (seat_no_6 VARCHAR, seat_no_1 VARCHAR, seat_no_5 VARCHAR)",
        "question": "Who was seat no 6 when seat no 1 and seat no 5 were jacques lachapelle and donald s. dutton"
    },
    {
        "answer": "SELECT COUNt AS season FROM table_2233872_1 WHERE gp = 64 AND result = \"lost in round 1\"",
        "context": "CREATE TABLE table_2233872_1 (COUNt VARCHAR, gp VARCHAR, result VARCHAR)",
        "question": "How many season did the team lost in round 1 with a GP of 64?"
    },
    {
        "answer": "SELECT COUNT(pick) FROM table_name_98 WHERE position = \"ot\" AND overall > 91 AND round > 21 AND college = \"mississippi\"",
        "context": "CREATE TABLE table_name_98 (pick VARCHAR, college VARCHAR, round VARCHAR, position VARCHAR, overall VARCHAR)",
        "question": "What is the total number of Pick, when Position is OT, when Overall is greater than 91, when Round is greater than 21, and when College is Mississippi?"
    },
    {
        "answer": "SELECT date_successor_seated FROM table_224837_4 WHERE reason_for_change = \"Delegate seat established\"",
        "context": "CREATE TABLE table_224837_4 (date_successor_seated VARCHAR, reason_for_change VARCHAR)",
        "question": "Name the date successor seated for delegate seat established"
    },
    {
        "answer": "SELECT club FROM table_name_55 WHERE nationality = \"united states\" AND player = \"ty harden\"",
        "context": "CREATE TABLE table_name_55 (club VARCHAR, nationality VARCHAR, player VARCHAR)",
        "question": "What club did united states player ty harden play for?"
    },
    {
        "answer": "SELECT state__class_ FROM table_224839_3 WHERE reason_for_change = \"Resigned November 26, 1798\" AND vacator = \"John Hunter ( DR )\"",
        "context": "CREATE TABLE table_224839_3 (state__class_ VARCHAR, reason_for_change VARCHAR, vacator VARCHAR)",
        "question": "What are all the states (class) when the reason for change was resigned November 26, 1798 and the vacator was John Hunter ( DR )?"
    },
    {
        "answer": "SELECT successor FROM table_225100_4 WHERE district = \"Florida Territory At-large\"",
        "context": "CREATE TABLE table_225100_4 (successor VARCHAR, district VARCHAR)",
        "question": "Who is the successor when florida territory at-large is the district?"
    },
    {
        "answer": "SELECT vacator FROM table_225102_4 WHERE reason_for_change = \"Died January 12, 1826\"",
        "context": "CREATE TABLE table_225102_4 (vacator VARCHAR, reason_for_change VARCHAR)",
        "question": "Name the vacator for reason for change died january 12, 1826"
    },
    {
        "answer": "SELECT MAX(series_no) FROM table_22580855_1 WHERE us_viewers__millions_ = \"3.14\"",
        "context": "CREATE TABLE table_22580855_1 (series_no INTEGER, us_viewers__millions_ VARCHAR)",
        "question": "which is the  maximun serie episode number when the millions of North American spectators is 3.14?"
    },
    {
        "answer": "SELECT COUNT(written_by) FROM table_22580855_1 WHERE directed_by = \"Jonathan Herron\"",
        "context": "CREATE TABLE table_22580855_1 (written_by VARCHAR, directed_by VARCHAR)",
        "question": "How many writers write the episode whose director is Jonathan Herron?"
    },
    {
        "answer": "SELECT points FROM table_226619_12 WHERE respect_toward_opponents = 212",
        "context": "CREATE TABLE table_226619_12 (points VARCHAR, respect_toward_opponents VARCHAR)",
        "question": "Name the points for 212 respect toward opponents"
    },
    {
        "answer": "SELECT nationality FROM table_22705586_1 WHERE name = \"Francesco Guglielmi\"",
        "context": "CREATE TABLE table_22705586_1 (nationality VARCHAR, name VARCHAR)",
        "question": "Name the nationality for francesco guglielmi"
    },
    {
        "answer": "SELECT MIN(year_started) FROM table_name_30 WHERE number_of_cars > 7 AND car__number = \"100\"",
        "context": "CREATE TABLE table_name_30 (year_started INTEGER, number_of_cars VARCHAR, car__number VARCHAR)",
        "question": "Which Year started is the lowest one that has a Number of cars larger than 7, and a Car # of 100?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_94 WHERE position = \"d\" AND player = \"andrew campbell\"",
        "context": "CREATE TABLE table_name_94 (round VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "What is the total number of Round, when Position is \"D\", and when Player is \"Andrew Campbell\"?"
    },
    {
        "answer": "SELECT regular_season_winner FROM table_22779004_1 WHERE conference = \"Missouri Valley conference\"",
        "context": "CREATE TABLE table_22779004_1 (regular_season_winner VARCHAR, conference VARCHAR)",
        "question": "Who won the regular season when Missouri Valley Conference took place?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_55 WHERE position > 5 AND played < 10",
        "context": "CREATE TABLE table_name_55 (points INTEGER, position VARCHAR, played VARCHAR)",
        "question": "what is the average points when position is more than 5 and played is less than 10?"
    },
    {
        "answer": "SELECT place FROM table_name_14 WHERE score = 72 - 72 = 144 AND country = \"united states\" AND player = \"scott mccarron\"",
        "context": "CREATE TABLE table_name_14 (place VARCHAR, player VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "What is Place, when Score is 72-72=144, when Country is United States, and when Player is Scott McCarron?"
    },
    {
        "answer": "SELECT audition_city FROM table_22897967_1 WHERE callback_venue = \"Hyatt Regency Chicago\"",
        "context": "CREATE TABLE table_22897967_1 (audition_city VARCHAR, callback_venue VARCHAR)",
        "question": "Name the audition city for hyatt regency chicago"
    },
    {
        "answer": "SELECT record FROM table_name_18 WHERE opponent = \"manchester wolves\" AND date = \"july 30, 2004\"",
        "context": "CREATE TABLE table_name_18 (record VARCHAR, opponent VARCHAR, date VARCHAR)",
        "question": "What was the record after the game with the Manchester Wolves on July 30, 2004?"
    },
    {
        "answer": "SELECT COUNT(golden_tickets) FROM table_22897967_1 WHERE callback_venue = \"Rosen Shingle Creek Resort\"",
        "context": "CREATE TABLE table_22897967_1 (golden_tickets VARCHAR, callback_venue VARCHAR)",
        "question": "Name the total number of golden tickets being rosen shingle creek resort"
    },
    {
        "answer": "SELECT golf FROM table_name_66 WHERE school = \"green bay\"",
        "context": "CREATE TABLE table_name_66 (golf VARCHAR, school VARCHAR)",
        "question": "Does Green Bay have a golf team?"
    },
    {
        "answer": "SELECT kr_narayanan__values_ FROM table_22897453_1 WHERE states = \"Pondicherry\"",
        "context": "CREATE TABLE table_22897453_1 (kr_narayanan__values_ VARCHAR, states VARCHAR)",
        "question": "Name the k. r. narayanan values for pondicherry"
    },
    {
        "answer": "SELECT golden_tickets FROM table_22897967_1 WHERE audition_venue = \"Invesco Field\"",
        "context": "CREATE TABLE table_22897967_1 (golden_tickets VARCHAR, audition_venue VARCHAR)",
        "question": "Name the golden ticket for invesco field"
    },
    {
        "answer": "SELECT win__percentage FROM table_name_68 WHERE conference_titles = \"0\" AND win_loss = \"20-10\"",
        "context": "CREATE TABLE table_name_68 (win__percentage VARCHAR, conference_titles VARCHAR, win_loss VARCHAR)",
        "question": "What is Win %, when Conference Titles is 0, and when Win-Loss is 20-10?"
    },
    {
        "answer": "SELECT place FROM table_name_13 WHERE date = \"4 august 2012\"",
        "context": "CREATE TABLE table_name_13 (place VARCHAR, date VARCHAR)",
        "question": "What is the Place that has a Date of 4 august 2012?"
    },
    {
        "answer": "SELECT COUNT(other_placings) FROM table_2305948_1 WHERE federation = \"ROH, WWE\"",
        "context": "CREATE TABLE table_2305948_1 (other_placings VARCHAR, federation VARCHAR)",
        "question": "How many times has a wrestler whose federation was roh, wwe competed in this event?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_23235767_4 WHERE score_in_the_final = \"6\u20133, 6\u20132\" AND surface = \"Hard\"",
        "context": "CREATE TABLE table_23235767_4 (year VARCHAR, score_in_the_final VARCHAR, surface VARCHAR)",
        "question": "Name the number of year for 6\u20133, 6\u20132 hard surface"
    },
    {
        "answer": "SELECT championship FROM table_23235767_4 WHERE surface = \"Clay\" AND opponent_in_the_final = \"Corrado Barazzutti\"",
        "context": "CREATE TABLE table_23235767_4 (championship VARCHAR, surface VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "Name the championship for clay and corrado barazzutti"
    },
    {
        "answer": "SELECT year FROM table_23235767_1 WHERE opponent_in_the_final = \"John McEnroe\" AND championship = \"Wimbledon\"",
        "context": "CREATE TABLE table_23235767_1 (year VARCHAR, opponent_in_the_final VARCHAR, championship VARCHAR)",
        "question": "What is every year where opponent in the final is John Mcenroe at Wimbledon?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_23235767_1 WHERE opponent_in_the_final = \"John McEnroe\" AND championship = \"US Open\"",
        "context": "CREATE TABLE table_23235767_1 (score_in_the_final VARCHAR, opponent_in_the_final VARCHAR, championship VARCHAR)",
        "question": "What is every score in the final for opponent in final John Mcenroe at US Open?"
    },
    {
        "answer": "SELECT works_number FROM table_name_88 WHERE type = \"0-4-4 forney locomotive\" AND builder = \"h. k. porter, inc\"",
        "context": "CREATE TABLE table_name_88 (works_number VARCHAR, type VARCHAR, builder VARCHAR)",
        "question": "Builder H. K. Porter, inc who had a type of 0-4-4 Forney locomotive, has what works number?"
    },
    {
        "answer": "SELECT date FROM table_23286112_6 WHERE game = 3",
        "context": "CREATE TABLE table_23286112_6 (date VARCHAR, game VARCHAR)",
        "question": "When was the game number 3 played?"
    },
    {
        "answer": "SELECT record FROM table_name_47 WHERE result = \"win\" AND streak = \"won 1\" AND game = 47",
        "context": "CREATE TABLE table_name_47 (record VARCHAR, game VARCHAR, result VARCHAR, streak VARCHAR)",
        "question": "Which Record has a Result of win, and a Streak of won 1, and a Game of 47?"
    },
    {
        "answer": "SELECT SUM(opponents) FROM table_name_62 WHERE result = \"win\" AND nuggets_points < 115 AND opponent = \"washington\"",
        "context": "CREATE TABLE table_name_62 (opponents INTEGER, opponent VARCHAR, result VARCHAR, nuggets_points VARCHAR)",
        "question": "How many Opponents have a Result of win, and Nuggets points smaller than 115, and an Opponent of washington?"
    },
    {
        "answer": "SELECT first_broadcast FROM table_23292220_8 WHERE jasons_team = \"Rhod Gilbert and Shappi Khorsandi\"",
        "context": "CREATE TABLE table_23292220_8 (first_broadcast VARCHAR, jasons_team VARCHAR)",
        "question": "What is the broadcast date where Jason's team is Rhod Gilbert and Shappi Khorsandi?"
    },
    {
        "answer": "SELECT sample_size FROM table_name_35 WHERE date = \"may 2-7, 2007\" AND democrat = \"hillary clinton\"",
        "context": "CREATE TABLE table_name_35 (sample_size VARCHAR, date VARCHAR, democrat VARCHAR)",
        "question": "What was the sample size for polling on May 2-7, 2007 for Hillary Clinton?"
    },
    {
        "answer": "SELECT jasons_team FROM table_23292220_8 WHERE first_broadcast = \"12 June 2009\"",
        "context": "CREATE TABLE table_23292220_8 (jasons_team VARCHAR, first_broadcast VARCHAR)",
        "question": "Who was on Jason's team for the 12 June 2009 episode?"
    },
    {
        "answer": "SELECT poll_source FROM table_name_41 WHERE democrat = \"hillary clinton\" AND margin_of_error < 4.5 AND republican = \"john mccain\" AND date = \"may 2-7, 2007\"",
        "context": "CREATE TABLE table_name_41 (poll_source VARCHAR, date VARCHAR, republican VARCHAR, democrat VARCHAR, margin_of_error VARCHAR)",
        "question": "Where is the poll source when Hillary clinton was the democrat, john mccain was the republican, and the margin of error was less than 4.5 on May 2-7, 2007?"
    },
    {
        "answer": "SELECT date FROM table_name_67 WHERE republican = \"john mccain\" AND poll_source = \"quinnipiac\" AND democrat = \"barack obama\" AND sample_size > 1427",
        "context": "CREATE TABLE table_name_67 (date VARCHAR, sample_size VARCHAR, democrat VARCHAR, republican VARCHAR, poll_source VARCHAR)",
        "question": "What is the date that the polls were going on at quinnipiac when john mccain was the republican, barack obama was the democrat and the sample size was bigger than 1427?"
    },
    {
        "answer": "SELECT channels FROM table_233830_1 WHERE soundfield_type = \"mixed-order\" AND height_order = 1",
        "context": "CREATE TABLE table_233830_1 (channels VARCHAR, soundfield_type VARCHAR, height_order VARCHAR)",
        "question": "If the height order is 1 and the soundfield type is mixed-order, what are all the channels?"
    },
    {
        "answer": "SELECT number_of_channels FROM table_233830_1 WHERE channels = \"WXYZUV\"",
        "context": "CREATE TABLE table_233830_1 (number_of_channels VARCHAR, channels VARCHAR)",
        "question": "If the channels is wxyzuv, what is the number of channels?"
    },
    {
        "answer": "SELECT title FROM table_23399481_4 WHERE written_by = \"Michael Gans & Richard Register\"",
        "context": "CREATE TABLE table_23399481_4 (title VARCHAR, written_by VARCHAR)",
        "question": "What is the title of the episode/s written by Michael Gans & Richard Register?"
    },
    {
        "answer": "SELECT MAX(total_score) FROM table_23465011_5 WHERE average_ranking = 7",
        "context": "CREATE TABLE table_23465011_5 (total_score INTEGER, average_ranking VARCHAR)",
        "question": "What is the total score when 7 is the average ranking?"
    },
    {
        "answer": "SELECT points AS won FROM table_23501776_16 WHERE points = 1230",
        "context": "CREATE TABLE table_23501776_16 (points VARCHAR)",
        "question": "Name the points won for 1230"
    },
    {
        "answer": "SELECT COUNT(overall) FROM table_name_63 WHERE name = \"derek smith\" AND round > 3",
        "context": "CREATE TABLE table_name_63 (overall VARCHAR, name VARCHAR, round VARCHAR)",
        "question": "how many times is the name Derek Smith when the round is higher than 3?"
    },
    {
        "answer": "SELECT country FROM table_2351952_1 WHERE order_number = \"711871-711880\"",
        "context": "CREATE TABLE table_2351952_1 (country VARCHAR, order_number VARCHAR)",
        "question": "What country has the order number 711871-711880?"
    },
    {
        "answer": "SELECT date FROM table_name_59 WHERE opponents_in_the_final = \"maria-fernanda alves st\u00e9phanie dubois\"",
        "context": "CREATE TABLE table_name_59 (date VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "What is Date, when Opponents In The Final, is Maria-Fernanda Alves St\u00e9phanie Dubois?"
    },
    {
        "answer": "SELECT technology FROM table_name_88 WHERE gel_pouring = \"no\" AND analysis_time = \"8 days\"",
        "context": "CREATE TABLE table_name_88 (technology VARCHAR, gel_pouring VARCHAR, analysis_time VARCHAR)",
        "question": "what is the technology when the gel pouring is no and the analysis time is 8 days?"
    },
    {
        "answer": "SELECT assists_per_game FROM table_2387461_1 WHERE tournament = \"2010 FIBA World Championship\"",
        "context": "CREATE TABLE table_2387461_1 (assists_per_game VARCHAR, tournament VARCHAR)",
        "question": "How many assists per game in the tournament 2010 fiba world championship?"
    },
    {
        "answer": "SELECT position FROM table_2387790_2 WHERE year = 1987",
        "context": "CREATE TABLE table_2387790_2 (position VARCHAR, year VARCHAR)",
        "question": "What position did he finish in 1987?"
    },
    {
        "answer": "SELECT team_s_ FROM table_2387790_2 WHERE avg_finish = \"8.3\"",
        "context": "CREATE TABLE table_2387790_2 (team_s_ VARCHAR, avg_finish VARCHAR)",
        "question": "What team was Bodine in when he had an average finish of 8.3?"
    },
    {
        "answer": "SELECT moving_to FROM table_name_12 WHERE transfer_fee = \"free\" AND nat = \"cyp\" AND transfer_window = \"winter\"",
        "context": "CREATE TABLE table_name_12 (moving_to VARCHAR, transfer_window VARCHAR, transfer_fee VARCHAR, nat VARCHAR)",
        "question": "What was the moving that has a free transfer fee, and the nationality of CYP, and winter as the transfer window?"
    },
    {
        "answer": "SELECT transfer_fee FROM table_name_1 WHERE transfer_window = \"winter\"",
        "context": "CREATE TABLE table_name_1 (transfer_fee VARCHAR, transfer_window VARCHAR)",
        "question": "What was the transfer fee when winter was the transfer window?"
    },
    {
        "answer": "SELECT COUNT(in_service_dates) FROM table_23958917_1 WHERE owner_s___2009_ = \"Hoosier Energy\" AND location = \"Petersburg\"",
        "context": "CREATE TABLE table_23958917_1 (in_service_dates VARCHAR, owner_s___2009_ VARCHAR, location VARCHAR)",
        "question": "Name the number for service dates for hoosier energy for petersburg"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_65 WHERE gold > 1 AND total > 4",
        "context": "CREATE TABLE table_name_65 (rank INTEGER, gold VARCHAR, total VARCHAR)",
        "question": "What is the Rank of the Nation with more than 1 Gold and a more than 4 Total medals?"
    },
    {
        "answer": "SELECT cores_threads FROM table_24018112_1 WHERE max_memory_speed = \"DDR3-1333\" AND frequency = \"2.66-2.8GHz\"",
        "context": "CREATE TABLE table_24018112_1 (cores_threads VARCHAR, max_memory_speed VARCHAR, frequency VARCHAR)",
        "question": "List the number of cores for ddr3-1333 with frequencies between 2.66-2.8ghz."
    },
    {
        "answer": "SELECT bush_percentage FROM table_2401326_1 WHERE kerry_percentage = \"37.6%\"",
        "context": "CREATE TABLE table_2401326_1 (bush_percentage VARCHAR, kerry_percentage VARCHAR)",
        "question": "What's percentage voted for Busg in the county where Kerry got 37.6%?"
    },
    {
        "answer": "SELECT manner_of_departure FROM table_24162080_3 WHERE replaced_by = \"Steve McClaren\"",
        "context": "CREATE TABLE table_24162080_3 (manner_of_departure VARCHAR, replaced_by VARCHAR)",
        "question": "When steve mcclaren is the replacer what is the manner of departure?"
    },
    {
        "answer": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode = T2.SourceAirport GROUP BY T1.City ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE AIRPORTS (City VARCHAR, AirportCode VARCHAR); CREATE TABLE FLIGHTS (SourceAirport VARCHAR)",
        "question": "Which city has most number of departing flights?"
    },
    {
        "answer": "SELECT supporting_actress FROM table_24225238_1 WHERE film = \"For Whom the Bell Tolls\"",
        "context": "CREATE TABLE table_24225238_1 (supporting_actress VARCHAR, film VARCHAR)",
        "question": "Who was the supporting actress in \"For Whom the Bell Tolls\"?"
    },
    {
        "answer": "SELECT MAX(w_plyf) FROM table_name_99 WHERE first_yr < 1960 AND g_plyf > 0 AND g_ > _500 < 43 AND w_l_percentage < 0.578",
        "context": "CREATE TABLE table_name_99 (w_plyf INTEGER, w_l_percentage VARCHAR, first_yr VARCHAR, g_plyf VARCHAR, g_ VARCHAR, _500 VARCHAR)",
        "question": "What is the highest w plyf with a first yr before 1960, a G plyf greater than 0, a G > .500 less than 43, and a w-l% less than 0.578?"
    },
    {
        "answer": "SELECT us_viewers__million_ FROM table_24319661_3 WHERE directed_by = \"Kevin Bray\"",
        "context": "CREATE TABLE table_24319661_3 (us_viewers__million_ VARCHAR, directed_by VARCHAR)",
        "question": "How many millions of people in the US watched when Kevin Bray was director?"
    },
    {
        "answer": "SELECT high_points FROM table_name_19 WHERE game < 82 AND location_attendance = \"quicken loans arena 20,562\" AND high_rebounds = \"\u017eydr\u016bnas ilgauskas (13)\"",
        "context": "CREATE TABLE table_name_19 (high_points VARCHAR, high_rebounds VARCHAR, game VARCHAR, location_attendance VARCHAR)",
        "question": "What is High Points, when Game is less than 82, when Location Attendance is \"Quicken Loans Arena 20,562\", and when High Rebounds is \"\u017dydr\u016bnas Ilgauskas (13)\"?"
    },
    {
        "answer": "SELECT MIN(game) FROM table_name_11 WHERE high_assists = \"maurice williams (8)\"",
        "context": "CREATE TABLE table_name_11 (game INTEGER, high_assists VARCHAR)",
        "question": "What is the lowest Game, when High Assists is \"Maurice Williams (8)\"?"
    },
    {
        "answer": "SELECT date FROM table_name_40 WHERE team = \"holden racing team\" AND circuit = \"eastern creek raceway\"",
        "context": "CREATE TABLE table_name_40 (date VARCHAR, team VARCHAR, circuit VARCHAR)",
        "question": "What is Date, when Team is Holden Racing Team, and when Circuit is Eastern Creek Raceway?"
    },
    {
        "answer": "SELECT name FROM table_name_3 WHERE team = \"detroit pistons\" AND wsu_year_s_ = \"1979-82\"",
        "context": "CREATE TABLE table_name_3 (name VARCHAR, team VARCHAR, wsu_year_s_ VARCHAR)",
        "question": "What is Name, when Team is Detroit Pistons, and when WSU Year(s) is 1979-82?"
    },
    {
        "answer": "SELECT mls_cup_playoffs FROM table_245695_2 WHERE concacaf_champions_cup___concacaf_champions_league = \"Quarter-Finals (09-10)\"",
        "context": "CREATE TABLE table_245695_2 (mls_cup_playoffs VARCHAR, concacaf_champions_cup___concacaf_champions_league VARCHAR)",
        "question": "What was the mls cup playoffs when concacaf champions cup / concacaf champions league was quarter-finals (09-10)?"
    },
    {
        "answer": "SELECT house_1950 FROM table_name_39 WHERE governors_1950 = \"governors 1995\"",
        "context": "CREATE TABLE table_name_39 (house_1950 VARCHAR, governors_1950 VARCHAR)",
        "question": "What shows for House 1950 when the Governors 1950 show governors 1995?"
    },
    {
        "answer": "SELECT name_of_deity FROM table_name_16 WHERE name_of_the_river = \"sone\"",
        "context": "CREATE TABLE table_name_16 (name_of_deity VARCHAR, name_of_the_river VARCHAR)",
        "question": "What is the name of the diety for the river of sone?"
    },
    {
        "answer": "SELECT name_of_the_stone__sila_ FROM table_name_13 WHERE name_of_the_state_where_found_in_india = \"andhra pradesh\"",
        "context": "CREATE TABLE table_name_13 (name_of_the_stone__sila_ VARCHAR, name_of_the_state_where_found_in_india VARCHAR)",
        "question": "What is the name of the stone found in Andhra Pradesh, India?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_25037577_1 WHERE high_school_principal = \"Lynn Muscarella\" AND superintendent = \"Charlie Wiltse\"",
        "context": "CREATE TABLE table_25037577_1 (year VARCHAR, high_school_principal VARCHAR, superintendent VARCHAR)",
        "question": "How many years was lynn muscarella the high school principal and charlie wiltse the superintendent?"
    },
    {
        "answer": "SELECT superintendent FROM table_25037577_1 WHERE middle_school_principal = \"Alan Degroote\" AND gorham_principal = \"Paul Lahue\" AND year = \"2006-2007\"",
        "context": "CREATE TABLE table_25037577_1 (superintendent VARCHAR, year VARCHAR, middle_school_principal VARCHAR, gorham_principal VARCHAR)",
        "question": "Who were the superintendent(s) when the middle school principal was alan degroote, the gorham principal was paul lahue, and the year was 2006-2007?"
    },
    {
        "answer": "SELECT youth_classification FROM table_25055040_22 WHERE sprint_classification = \"Mark Cavendish\" AND most_courageous = \"Maarten Tjallingii\"",
        "context": "CREATE TABLE table_25055040_22 (youth_classification VARCHAR, sprint_classification VARCHAR, most_courageous VARCHAR)",
        "question": "When Mark Cavendish wins sprint classification and Maarten Tjallingii wins most courageous, who wins youth classification?"
    },
    {
        "answer": "SELECT team_classification FROM table_25055040_22 WHERE general_classification = \"Brett Lancaster\"",
        "context": "CREATE TABLE table_25055040_22 (team_classification VARCHAR, general_classification VARCHAR)",
        "question": "When Brett Lancaster won the general classification, who won the team calssification?"
    },
    {
        "answer": "SELECT sprint_classification FROM table_25055040_22 WHERE youth_classification = \"Peter Sagan\" AND most_courageous = \"Thomas Rabou\"",
        "context": "CREATE TABLE table_25055040_22 (sprint_classification VARCHAR, youth_classification VARCHAR, most_courageous VARCHAR)",
        "question": "When Peter Sagan won the youth classification and Thomas Rabou won the most corageous, who won the sprint classification?"
    },
    {
        "answer": "SELECT sprint_classification FROM table_25055040_22 WHERE mountains_classification = \"Ryan Anderson\" AND general_classification = \"Michael Rogers\"",
        "context": "CREATE TABLE table_25055040_22 (sprint_classification VARCHAR, mountains_classification VARCHAR, general_classification VARCHAR)",
        "question": "When Ryan Anderson won the mountains classification, and Michael Rogers won the general classification, who won the sprint classification?"
    },
    {
        "answer": "SELECT pregame_host FROM table_name_67 WHERE play_by_play = \"jp dellacamera\" AND year < 2009 AND color_commentator_s_ = \"ty keough\"",
        "context": "CREATE TABLE table_name_67 (pregame_host VARCHAR, color_commentator_s_ VARCHAR, play_by_play VARCHAR, year VARCHAR)",
        "question": "What is the name of the pregame host when the Play-by-play was by JP Dellacamera, earlier than 2009, and Color commentator(s) was Ty Keough?"
    },
    {
        "answer": "SELECT MAX(annual_co2_emissions__in_thousands_of_metric_tons_) FROM table_2508175_1 WHERE gdp_per_emissions__in_us_dollars_per_ton_ = 3903",
        "context": "CREATE TABLE table_2508175_1 (annual_co2_emissions__in_thousands_of_metric_tons_ INTEGER, gdp_per_emissions__in_us_dollars_per_ton_ VARCHAR)",
        "question": "when the gdp per emissions (in us dollars per ton) is 3903, what is the maximum annual co2 emissions (in thousands of metric tons)?"
    },
    {
        "answer": "SELECT MIN(position) FROM table_25146455_1 WHERE winnings = \"$60,000\"",
        "context": "CREATE TABLE table_25146455_1 (position INTEGER, winnings VARCHAR)",
        "question": "In what position was the driver who won $60,000?"
    },
    {
        "answer": "SELECT player FROM table_name_71 WHERE nationality = \"united states\" AND position = \"small forward\" AND years_for_grizzlies = \"1999-2002\"",
        "context": "CREATE TABLE table_name_71 (player VARCHAR, years_for_grizzlies VARCHAR, nationality VARCHAR, position VARCHAR)",
        "question": "Who was the 1999-2002 Years for Grizzlies small forward Player who was from the United States?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_65 WHERE game = 44",
        "context": "CREATE TABLE table_name_65 (location_attendance VARCHAR, game VARCHAR)",
        "question": "What is the location and attendance of game 44?"
    },
    {
        "answer": "SELECT record FROM table_name_76 WHERE decision = \"clemmensen\" AND game = 42",
        "context": "CREATE TABLE table_name_76 (record VARCHAR, decision VARCHAR, game VARCHAR)",
        "question": "What is the record of game 42, which had a clemmensen decision?"
    },
    {
        "answer": "SELECT special_edition FROM table_25173505_13 WHERE english_version = \"Nick Stewart\"",
        "context": "CREATE TABLE table_25173505_13 (special_edition VARCHAR, english_version VARCHAR)",
        "question": "what is the special edition where the english version is nick stewart?"
    },
    {
        "answer": "SELECT attendance FROM table_name_63 WHERE site = \"dowdy-ficklen stadium \u2022 greenville, nc\" AND opponent = \"ohio\"",
        "context": "CREATE TABLE table_name_63 (attendance VARCHAR, site VARCHAR, opponent VARCHAR)",
        "question": "What is the number in attendance at Dowdy-Ficklen stadium \u2022 Greenville, NC, and the opponent was Ohio?"
    },
    {
        "answer": "SELECT date FROM table_name_75 WHERE site = \"williams-brice stadium \u2022 columbia, sc\"",
        "context": "CREATE TABLE table_name_75 (date VARCHAR, site VARCHAR)",
        "question": "What date was the game at Williams-Brice stadium \u2022 Columbia, SC?"
    },
    {
        "answer": "SELECT coverage FROM table_2523809_1 WHERE callsign = \"KPNZ-TV\"",
        "context": "CREATE TABLE table_2523809_1 (coverage VARCHAR, callsign VARCHAR)",
        "question": "Which city did kpnz-tv provide coverage for?"
    },
    {
        "answer": "SELECT MIN(renewable_electricity_w_o_hydro__gw) AS \u2022h_ FROM table_25244412_1 WHERE renewable_electricity__gw\u2022h_ = 5760",
        "context": "CREATE TABLE table_25244412_1 (renewable_electricity_w_o_hydro__gw INTEGER, renewable_electricity__gw\u2022h_ VARCHAR)",
        "question": "When renewable electricity is 5760 (gw\u00d7h) what is the minimum amount of renewable elecrrixity without hydrogen power?"
    },
    {
        "answer": "SELECT renewable_electricity_w_o_hydro__gw\u2022h_ FROM table_25244412_1 WHERE _percentage_renewable = \"83.4\"",
        "context": "CREATE TABLE table_25244412_1 (renewable_electricity_w_o_hydro__gw\u2022h_ VARCHAR, _percentage_renewable VARCHAR)",
        "question": "What is the amount of renewable electricity without hydrogen power when the percentage of renewable energy is 83.4?"
    },
    {
        "answer": "SELECT 2005 FROM table_name_73 WHERE 2006 = \"1r\"",
        "context": "CREATE TABLE table_name_73 (Id VARCHAR)",
        "question": "What is 2005, when 2006 is \"1R\"?"
    },
    {
        "answer": "SELECT COUNT(outputs) FROM table_25276250_3 WHERE notes = \"Solid state, battery operated for portable use\"",
        "context": "CREATE TABLE table_25276250_3 (outputs VARCHAR, notes VARCHAR)",
        "question": "How many outputs are there for solid state, battery operated for portable use listed in notes?"
    },
    {
        "answer": "SELECT movie_album FROM table_2528382_5 WHERE co_stars = \"VijayaLaxmi\" AND lyricist = \"Shakeel Badayuni\"",
        "context": "CREATE TABLE table_2528382_5 (movie_album VARCHAR, co_stars VARCHAR, lyricist VARCHAR)",
        "question": "What movie did Vijayalaxmi Co-star in and Shakeel Badayuni write the lyrics?"
    },
    {
        "answer": "SELECT singapore_league_cup FROM table_name_99 WHERE name = \"masahiro fukasawa\"",
        "context": "CREATE TABLE table_name_99 (singapore_league_cup VARCHAR, name VARCHAR)",
        "question": "What Singapore League Cup does Masahiro Fukasawa have?"
    },
    {
        "answer": "SELECT total FROM table_name_41 WHERE name = \"norikazu murakami\"",
        "context": "CREATE TABLE table_name_41 (total VARCHAR, name VARCHAR)",
        "question": "What is Norikazu Murakami's total?"
    },
    {
        "answer": "SELECT COUNT(series__number) FROM table_25356350_2 WHERE written_by = \"Lew Schneider\"",
        "context": "CREATE TABLE table_25356350_2 (series__number VARCHAR, written_by VARCHAR)",
        "question": "How many episodes are written by Lew Schneider?"
    },
    {
        "answer": "SELECT COUNT(games_played) FROM table_25401874_1 WHERE name = \"Lauren McGee\"",
        "context": "CREATE TABLE table_25401874_1 (games_played VARCHAR, name VARCHAR)",
        "question": "How many games played catagories are there for Lauren McGee? "
    },
    {
        "answer": "SELECT MIN(money___) AS $__ FROM table_name_13 WHERE country = \"south africa\" AND to_par < 8",
        "context": "CREATE TABLE table_name_13 (money___ INTEGER, country VARCHAR, to_par VARCHAR)",
        "question": "What is the lowest amount of money a player from South Africa with a to par less than 8 has?"
    },
    {
        "answer": "SELECT course FROM table_name_1 WHERE to_par_[a_] = \"n/a\" AND country = \"scotland\" AND year > 1905 AND location = \"philadelphia, pennsylvania\"",
        "context": "CREATE TABLE table_name_1 (course VARCHAR, location VARCHAR, year VARCHAR, country VARCHAR, to_par_ VARCHAR, a_ VARCHAR)",
        "question": "With a year larger than 1905, and a location of philadelphia, pennsylvania with a to par [a] of n/a and a country of scotland what is the course?"
    },
    {
        "answer": "SELECT SUM(number_of_bearers_2009) FROM table_name_3 WHERE rank > 1 AND type = \"patronymic\" AND etymology = \"son of christian\" AND number_of_bearers_1971 > 45.984",
        "context": "CREATE TABLE table_name_3 (number_of_bearers_2009 INTEGER, number_of_bearers_1971 VARCHAR, etymology VARCHAR, rank VARCHAR, type VARCHAR)",
        "question": "What is the sum of number of bearers in 2009 for a rank above 1, a type of patronymic, an etymology meaning son of Christian, and the number of bearers in 1971 greater than 45.984?"
    },
    {
        "answer": "SELECT MAX(no_in_season) FROM table_25604014_9 WHERE directed_by = \"Leslie Hill\"",
        "context": "CREATE TABLE table_25604014_9 (no_in_season INTEGER, directed_by VARCHAR)",
        "question": "Name the most number in season for leslie hill"
    },
    {
        "answer": "SELECT original_air_date FROM table_25604014_9 WHERE production_code = \"1L16\"",
        "context": "CREATE TABLE table_25604014_9 (original_air_date VARCHAR, production_code VARCHAR)",
        "question": "Name the original air date for production code 1l16"
    },
    {
        "answer": "SELECT college_team FROM table_name_18 WHERE round < 2 AND nationality = \"united states\"",
        "context": "CREATE TABLE table_name_18 (college_team VARCHAR, round VARCHAR, nationality VARCHAR)",
        "question": "What is College/Team, when Round is less than 2, and when Nationality is \"United States\"?"
    },
    {
        "answer": "SELECT MAX(q1_pos) FROM table_name_90 WHERE q1_time = \"1:31.826\" AND q1_order > 7",
        "context": "CREATE TABLE table_name_90 (q1_pos INTEGER, q1_time VARCHAR, q1_order VARCHAR)",
        "question": "WHAT IS THE Q1 POS WITH A 1:31.826 Q1 TIME, AND Q1 ORDER OF 7?"
    },
    {
        "answer": "SELECT dominant_religion__2002_ FROM table_2562572_26 WHERE settlement = \"Gornji Tavankut\"",
        "context": "CREATE TABLE table_2562572_26 (dominant_religion__2002_ VARCHAR, settlement VARCHAR)",
        "question": "What is the dominant religion in Gornji Tavankut?"
    },
    {
        "answer": "SELECT COUNT(settlement) FROM table_2562572_26 WHERE cyrillic_name_other_names = \"\u0402\u0443\u0440\u0452\u0438\u043d (Croatian: \u0110ur\u0111in)\"",
        "context": "CREATE TABLE table_2562572_26 (settlement VARCHAR, cyrillic_name_other_names VARCHAR)",
        "question": "How many settlements are named \u0452\u0443\u0440\u0452\u0438\u043d (croatian: \u0111ur\u0111in)?"
    },
    {
        "answer": "SELECT population__2011_ FROM table_2562572_39 WHERE cyrillic_name_other_names = \"\u0408\u0430\u0440\u043a\u043e\u0432\u0430\u0446\"",
        "context": "CREATE TABLE table_2562572_39 (population__2011_ VARCHAR, cyrillic_name_other_names VARCHAR)",
        "question": "The pooulation of \u0458\u0430\u0440\u043a\u043e\u0432\u0430\u0446 is?"
    },
    {
        "answer": "SELECT location FROM table_name_80 WHERE home_ground = \"wilfred taylor reserve\"",
        "context": "CREATE TABLE table_name_80 (location VARCHAR, home_ground VARCHAR)",
        "question": "What was the location of the club where the home ground is wilfred taylor reserve?"
    },
    {
        "answer": "SELECT home_ground FROM table_name_48 WHERE founded < 1946 AND coach = \"nick pantsaras\"",
        "context": "CREATE TABLE table_name_48 (home_ground VARCHAR, founded VARCHAR, coach VARCHAR)",
        "question": "Where is the home ground for the club coached by nick pantsaras and founded before 1946?"
    },
    {
        "answer": "SELECT description FROM table_256286_20 WHERE _percentage_yes = \"41.76%\"",
        "context": "CREATE TABLE table_256286_20 (description VARCHAR, _percentage_yes VARCHAR)",
        "question": "Who had 41.76% yes votes"
    },
    {
        "answer": "SELECT title FROM table_name_69 WHERE season__number < 10 AND directed_by = \"milan cheylov\" AND original_air_date = \"september 29, 1997\"",
        "context": "CREATE TABLE table_name_69 (title VARCHAR, original_air_date VARCHAR, season__number VARCHAR, directed_by VARCHAR)",
        "question": "What is the title of the show with less than 10 seasons that aired on September 29, 1997 and is directed by Milan Cheylov?"
    },
    {
        "answer": "SELECT coach FROM table_name_75 WHERE most_improved = \"rory thompson\"",
        "context": "CREATE TABLE table_name_75 (coach VARCHAR, most_improved VARCHAR)",
        "question": "Which Coach has a Most Improved of rory thompson?"
    },
    {
        "answer": "SELECT MIN(capacity) FROM table_name_35 WHERE team = \"\u0161ibenik\"",
        "context": "CREATE TABLE table_name_35 (capacity INTEGER, team VARCHAR)",
        "question": "what is the capacity for the team \u0161ibenik?"
    },
    {
        "answer": "SELECT AVG(capacity) FROM table_name_88 WHERE home_city = \"zagreb\" AND manager = \"zlatko kranj\u010dar\"",
        "context": "CREATE TABLE table_name_88 (capacity INTEGER, home_city VARCHAR, manager VARCHAR)",
        "question": "what is the capacity when the home city is zagreb and the manager is zlatko kranj\u010dar?"
    },
    {
        "answer": "SELECT grid FROM table_name_43 WHERE time_retired = \"electrical\" AND laps = 51",
        "context": "CREATE TABLE table_name_43 (grid VARCHAR, time_retired VARCHAR, laps VARCHAR)",
        "question": "What is the grid for the driver with an electrical time/retired and 51 laps?"
    },
    {
        "answer": "SELECT COUNT(name) FROM table_25762852_1 WHERE runs = \"118\"",
        "context": "CREATE TABLE table_25762852_1 (name VARCHAR, runs VARCHAR)",
        "question": "How many resorts have 118 runs?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_63 WHERE date = \"december 30\"",
        "context": "CREATE TABLE table_name_63 (location_attendance VARCHAR, date VARCHAR)",
        "question": "What is Location Attendance, when Date is \"December 30\"?"
    },
    {
        "answer": "SELECT winning_driver FROM table_26137666_3 WHERE winning_team = \"Carlin Motorsport\" AND circuit = \"Croft\"",
        "context": "CREATE TABLE table_26137666_3 (winning_driver VARCHAR, winning_team VARCHAR, circuit VARCHAR)",
        "question": "Who are all winning drivers if winning team is Carlin Motorsport and circuit is Croft?"
    },
    {
        "answer": "SELECT pole_position FROM table_26137666_3 WHERE circuit = \"Castle Combe\" AND winning_driver = \"Robbie Kerr\"",
        "context": "CREATE TABLE table_26137666_3 (pole_position VARCHAR, circuit VARCHAR, winning_driver VARCHAR)",
        "question": "What is every pole position for the Castle Combe circuit and Robbie Kerr is the winning driver?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_26137666_3 WHERE fastest_lap = \"Fabio Carbone\"",
        "context": "CREATE TABLE table_26137666_3 (round VARCHAR, fastest_lap VARCHAR)",
        "question": "How many rounds have Fabio Carbone for fastest lap?"
    },
    {
        "answer": "SELECT MIN(crowd) FROM table_name_5 WHERE home_team = \"brisbane lions\"",
        "context": "CREATE TABLE table_name_5 (crowd INTEGER, home_team VARCHAR)",
        "question": "What is Lowest Crowd, when Home Team is Brisbane Lions?"
    },
    {
        "answer": "SELECT production_code FROM table_2618152_1 WHERE original_air_date = \"January 6, 1999\"",
        "context": "CREATE TABLE table_2618152_1 (production_code VARCHAR, original_air_date VARCHAR)",
        "question": "The episode with the original air date January 6, 1999, has what production code?"
    },
    {
        "answer": "SELECT no_in_season FROM table_2618152_1 WHERE written_by = \"Matt Witten , Richard Sweren\"",
        "context": "CREATE TABLE table_2618152_1 (no_in_season VARCHAR, written_by VARCHAR)",
        "question": "What is the season number of the episode written by Matt Witten , Richard Sweren?"
    },
    {
        "answer": "SELECT directed_by FROM table_2618152_1 WHERE production_code = \"E0208\"",
        "context": "CREATE TABLE table_2618152_1 (directed_by VARCHAR, production_code VARCHAR)",
        "question": "The episode with the production code E0208 is directed by who?"
    },
    {
        "answer": "SELECT standard FROM table_name_79 WHERE pollutant = \"o 3\" AND averaging_time = \"8-hour\"",
        "context": "CREATE TABLE table_name_79 (standard VARCHAR, pollutant VARCHAR, averaging_time VARCHAR)",
        "question": "what is the standard when the pollutant is o 3 and averaging time is 8-hour?"
    },
    {
        "answer": "SELECT enrollment FROM table_261946_3 WHERE location__all_in_ohio_ = \"Ashland\"",
        "context": "CREATE TABLE table_261946_3 (enrollment VARCHAR, location__all_in_ohio_ VARCHAR)",
        "question": "What is the enrollment for Ashland University?"
    },
    {
        "answer": "SELECT winnings FROM table_name_93 WHERE starts > 34 AND poles < 1 AND top_10 = 5",
        "context": "CREATE TABLE table_name_93 (winnings VARCHAR, top_10 VARCHAR, starts VARCHAR, poles VARCHAR)",
        "question": "Which Winnings have Starts larger than 34, and Poles smaller than 1, and a Top 10 of 5?"
    },
    {
        "answer": "SELECT longitude FROM table_name_87 WHERE latitude = \"73.0s\" AND name = \"aibarchin planitia\"",
        "context": "CREATE TABLE table_name_87 (longitude VARCHAR, latitude VARCHAR, name VARCHAR)",
        "question": "Which Longitude has a Latitude of 73.0s, and a Name of aibarchin planitia?"
    },
    {
        "answer": "SELECT opponent_in_the_final FROM table_26202847_6 WHERE score_in_the_final = \"3\u20136, 6\u20134, 3\u20136, 4\u20136\"",
        "context": "CREATE TABLE table_26202847_6 (opponent_in_the_final VARCHAR, score_in_the_final VARCHAR)",
        "question": "When the  score in the final is 3\u20136, 6\u20134, 3\u20136, 4\u20136, who are all the opponents in the final?"
    },
    {
        "answer": "SELECT MIN(age) FROM table_26301697_2 WHERE represents = \"Distrito Nacional\"",
        "context": "CREATE TABLE table_26301697_2 (age INTEGER, represents VARCHAR)",
        "question": "Name the least age for distrito nacional"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_62 WHERE team = \"tau cer\u00e1mica\" AND points = 377 AND games > 21",
        "context": "CREATE TABLE table_name_62 (rank VARCHAR, games VARCHAR, team VARCHAR, points VARCHAR)",
        "question": "What's the rank of the Tau Cer\u00e1mica that has 377 points and more than 21 games?"
    },
    {
        "answer": "SELECT institution FROM table_name_82 WHERE year > 2010 AND name = \"cheng herng yi\"",
        "context": "CREATE TABLE table_name_82 (institution VARCHAR, year VARCHAR, name VARCHAR)",
        "question": "What institution won in 2010 with student Cheng Herng Yi?"
    },
    {
        "answer": "SELECT judges FROM table_26375386_23 WHERE result = \"Eliminated\"",
        "context": "CREATE TABLE table_26375386_23 (judges VARCHAR, result VARCHAR)",
        "question": "How many judges were there for the eliminated couple? "
    },
    {
        "answer": "SELECT COUNT(patient_portrayer) FROM table_26561506_1 WHERE _number = 4",
        "context": "CREATE TABLE table_26561506_1 (patient_portrayer VARCHAR, _number VARCHAR)",
        "question": "How many episodes are numbered 4 in the season?"
    },
    {
        "answer": "SELECT MIN(pick) FROM table_name_91 WHERE round > 7 AND nationality = \"united states\"",
        "context": "CREATE TABLE table_name_91 (pick INTEGER, round VARCHAR, nationality VARCHAR)",
        "question": "What was the lowest pick number for a united states player picked before round 7?"
    },
    {
        "answer": "SELECT country FROM table_name_6 WHERE score = 69 - 71 - 72 - 69 = 281",
        "context": "CREATE TABLE table_name_6 (country VARCHAR, score VARCHAR)",
        "question": "What country was the player with the score line 69-71-72-69=281 from?"
    },
    {
        "answer": "SELECT pro_stock FROM table_name_83 WHERE top_fuel = \"tony schumacher\" AND funny_car = \"tony pedregon\"",
        "context": "CREATE TABLE table_name_83 (pro_stock VARCHAR, top_fuel VARCHAR, funny_car VARCHAR)",
        "question": "Who won Pro Stock the year Tony Schumacher won Top Fuel and Tony Pedregon won Funny Car?"
    },
    {
        "answer": "SELECT year FROM table_name_65 WHERE funny_car = \"john force\" AND top_fuel = \"mike dunn\"",
        "context": "CREATE TABLE table_name_65 (year VARCHAR, funny_car VARCHAR, top_fuel VARCHAR)",
        "question": "In which year did John Force win Funny Car and Mike Dunn win in Top Fuel?"
    },
    {
        "answer": "SELECT host_city FROM table_26669939_1 WHERE host_country = \"Croatia\" AND edition = \"8th\"",
        "context": "CREATE TABLE table_26669939_1 (host_city VARCHAR, host_country VARCHAR, edition VARCHAR)",
        "question": "What was the host city of the 8th edition in the the host country of Croatia?"
    },
    {
        "answer": "SELECT silver FROM table_name_28 WHERE bronze = \"katie curtis unknown\"",
        "context": "CREATE TABLE table_name_28 (silver VARCHAR, bronze VARCHAR)",
        "question": "Who won the Silver the Year Katie Curtis Unknown won the Bronze?"
    },
    {
        "answer": "SELECT to_par FROM table_name_70 WHERE score = 68 - 74 - 69 = 211",
        "context": "CREATE TABLE table_name_70 (to_par VARCHAR, score VARCHAR)",
        "question": "What was the to par that goes with the score 68-74-69=211?"
    },
    {
        "answer": "SELECT location FROM table_name_89 WHERE opponent = \"scott junk\"",
        "context": "CREATE TABLE table_name_89 (location VARCHAR, opponent VARCHAR)",
        "question": "Where is the location where Scott Junk was the opponent?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_2668378_5 WHERE district = \"Kentucky 3\"",
        "context": "CREATE TABLE table_2668378_5 (first_elected VARCHAR, district VARCHAR)",
        "question": "Name the number of first elected for kentucky 3"
    },
    {
        "answer": "SELECT home_team FROM table_name_81 WHERE tie_no = \"replay\" AND away_team = \"bolton wanderers\"",
        "context": "CREATE TABLE table_name_81 (home_team VARCHAR, tie_no VARCHAR, away_team VARCHAR)",
        "question": "Who was the home team that had a replay of Tie Number and played against the Bolton Wanderers?"
    },
    {
        "answer": "SELECT place FROM table_name_43 WHERE country = \"united states\" AND to_par = \"+2\" AND score = 73 - 74 - 71 - 72 = 290",
        "context": "CREATE TABLE table_name_43 (place VARCHAR, country VARCHAR, to_par VARCHAR, score VARCHAR)",
        "question": "What place did the golfer from the United States come in with a To Par of +2, and a score of 73-74-71-72=290?"
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_2679061_2 WHERE nhl_team = \"Montreal Canadiens\" AND college_junior_club_team = \"Trois-Rivi\u00e8res Draveurs (QMJHL)\"",
        "context": "CREATE TABLE table_2679061_2 (pick__number INTEGER, nhl_team VARCHAR, college_junior_club_team VARCHAR)",
        "question": "what is the pick # when the nhl team is montreal canadiens and the college/junior/club team is trois-rivi\u00e8res draveurs (qmjhl)?"
    },
    {
        "answer": "SELECT COUNT(games) FROM table_26847237_2 WHERE height = \"1.92m\"",
        "context": "CREATE TABLE table_26847237_2 (games VARCHAR, height VARCHAR)",
        "question": "How many games were played where the height of the player is 1.92m?"
    },
    {
        "answer": "SELECT us_viewers__millions_ FROM table_26914076_2 WHERE directed_by = \"Christine Moore\"",
        "context": "CREATE TABLE table_26914076_2 (us_viewers__millions_ VARCHAR, directed_by VARCHAR)",
        "question": "Name the us viewers directed by christine moore"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_87 WHERE margin_of_victory = \"6 strokes\"",
        "context": "CREATE TABLE table_name_87 (runner_s__up VARCHAR, margin_of_victory VARCHAR)",
        "question": "What is Runner(s)-Up when Margin of Victory is 6 Strokes?"
    },
    {
        "answer": "SELECT original_airdate FROM table_27208814_1 WHERE writer = \"Robin Mukherjee\" AND director = \"Margy Kinmonth\"",
        "context": "CREATE TABLE table_27208814_1 (original_airdate VARCHAR, writer VARCHAR, director VARCHAR)",
        "question": "Name the original airdate for robin mukherjee and margy kinmonth"
    },
    {
        "answer": "SELECT SUM(wkts) FROM table_name_46 WHERE ovrs > 2 AND econ > 7.84",
        "context": "CREATE TABLE table_name_46 (wkts INTEGER, ovrs VARCHAR, econ VARCHAR)",
        "question": "what is the sum of the wkts when the ovrs were bigger than 2 and econ was bigger than 7.84?"
    },
    {
        "answer": "SELECT AVG(laps) FROM table_name_71 WHERE manufacturer = \"yamaha\" AND rider = \"garry mccoy\" AND grid < 4",
        "context": "CREATE TABLE table_name_71 (laps INTEGER, grid VARCHAR, manufacturer VARCHAR, rider VARCHAR)",
        "question": "What is the average laps when the manufacturer is yamaha, and the rider is garry mccoy and the grid is smaller than 4?"
    },
    {
        "answer": "SELECT MIN(laps) FROM table_name_4 WHERE manufacturer = \"yamaha\" AND time_retired = \"+1:08.312\" AND grid < 20",
        "context": "CREATE TABLE table_name_4 (laps INTEGER, grid VARCHAR, manufacturer VARCHAR, time_retired VARCHAR)",
        "question": "What is the lowest laps that has a manufacturer of yamaha, and a time/retired of +1:08.312, and a grid less than 20?"
    },
    {
        "answer": "SELECT event FROM table_name_74 WHERE method = \"tko (punches)\" AND opponent = \"jason macdonald\"",
        "context": "CREATE TABLE table_name_74 (event VARCHAR, method VARCHAR, opponent VARCHAR)",
        "question": "What event had a tko (punches) method and jason macdonald as the opponent?"
    },
    {
        "answer": "SELECT salary_range FROM table_27257896_2 WHERE working_force_of_hk = \"10.4%\"",
        "context": "CREATE TABLE table_27257896_2 (salary_range VARCHAR, working_force_of_hk VARCHAR)",
        "question": "If the working force of HK is 10.4%, what is the salary range?"
    },
    {
        "answer": "SELECT indians FROM table_27257896_2 WHERE salary_range = \"4,000-9,000\"",
        "context": "CREATE TABLE table_27257896_2 (indians VARCHAR, salary_range VARCHAR)",
        "question": "If the salary range is 4,000-9,000, what is the Indians %?"
    },
    {
        "answer": "SELECT score_in_final FROM table_name_32 WHERE date = \"february 14, 1999\"",
        "context": "CREATE TABLE table_name_32 (score_in_final VARCHAR, date VARCHAR)",
        "question": "What was the score on February 14, 1999?"
    },
    {
        "answer": "SELECT MIN(sydney) FROM table_name_16 WHERE weekly_rank < 8 AND brisbane > 252 OFFSET 000",
        "context": "CREATE TABLE table_name_16 (sydney INTEGER, weekly_rank VARCHAR, brisbane VARCHAR)",
        "question": "What is the lowest value for Sydney, when WEEKLY RANK is less than 8, and when Brisbane is greater than 252,000?"
    },
    {
        "answer": "SELECT studio FROM table_27303975_2 WHERE catalog_number = \"81063\"",
        "context": "CREATE TABLE table_27303975_2 (studio VARCHAR, catalog_number VARCHAR)",
        "question": "Name the studio for catalog number 81063"
    },
    {
        "answer": "SELECT MAX(no_in_season) FROM table_27374740_1 WHERE directed_by = \"Paul Adelstein\"",
        "context": "CREATE TABLE table_27374740_1 (no_in_season INTEGER, directed_by VARCHAR)",
        "question": "What number episode in the season was directed by Paul Adelstein? "
    },
    {
        "answer": "SELECT winning_score FROM table_name_8 WHERE year < 1985 AND championship = \"u.s. women's open\"",
        "context": "CREATE TABLE table_name_8 (winning_score VARCHAR, year VARCHAR, championship VARCHAR)",
        "question": "What was the winning score in 1985 for Championship of u.s. women's open?"
    },
    {
        "answer": "SELECT COUNT(team) FROM table_27495117_3 WHERE date_of_appointment = \"11 April 2011\"",
        "context": "CREATE TABLE table_27495117_3 (team VARCHAR, date_of_appointment VARCHAR)",
        "question": "how many teams had an appointment date of 11 april 2011"
    },
    {
        "answer": "SELECT location___state FROM table_name_19 WHERE circuit = \"eastern creek raceway\"",
        "context": "CREATE TABLE table_name_19 (location___state VARCHAR, circuit VARCHAR)",
        "question": "Where is the Eastern Creek Raceway located?"
    },
    {
        "answer": "SELECT december FROM table_27537870_5 WHERE record = \"14-17-4\"",
        "context": "CREATE TABLE table_27537870_5 (december VARCHAR, record VARCHAR)",
        "question": "Name the december for record 14-17-4"
    },
    {
        "answer": "SELECT MIN(december) FROM table_27537870_5 WHERE location_attendance = \"HSBC Arena/18,017\"",
        "context": "CREATE TABLE table_27537870_5 (december INTEGER, location_attendance VARCHAR)",
        "question": "Name the least december for hsbc arena/18,017"
    },
    {
        "answer": "SELECT director_s_ FROM table_name_92 WHERE title = \"star wars episode ii: attack of the clones\"",
        "context": "CREATE TABLE table_name_92 (director_s_ VARCHAR, title VARCHAR)",
        "question": "Director for Star Wars Episode II: attack of the clones?"
    },
    {
        "answer": "SELECT capacity FROM table_27599216_6 WHERE institution = \"University of Alberta\"",
        "context": "CREATE TABLE table_27599216_6 (capacity VARCHAR, institution VARCHAR)",
        "question": "What is the capacity for the  institution of university of alberta?"
    },
    {
        "answer": "SELECT MAX(stories) FROM table_name_38 WHERE location = \"recife\" AND year_of_completion > 2007 AND height__m_ < 135",
        "context": "CREATE TABLE table_name_38 (stories INTEGER, height__m_ VARCHAR, location VARCHAR, year_of_completion VARCHAR)",
        "question": "What is the largest number of stories in Recife completed later than 2007 with a height less than 135 meters?"
    },
    {
        "answer": "SELECT COUNT(latency__microseconds_) FROM table_27615520_1 WHERE product_name = \"RamSan-810\"",
        "context": "CREATE TABLE table_27615520_1 (latency__microseconds_ VARCHAR, product_name VARCHAR)",
        "question": "What is the ramsan-810 transfer delay?"
    },
    {
        "answer": "SELECT COUNT(storage_medium) FROM table_27615520_1 WHERE product_name = \"RamSan-720\"",
        "context": "CREATE TABLE table_27615520_1 (storage_medium VARCHAR, product_name VARCHAR)",
        "question": "List the number of ramsan-720 hard drives?"
    },
    {
        "answer": "SELECT close_ranged_weapons FROM table_27704991_1 WHERE special_weapon = \"Glass egg\"",
        "context": "CREATE TABLE table_27704991_1 (close_ranged_weapons VARCHAR, special_weapon VARCHAR)",
        "question": "If the special weapon is glass egg, what is the close ranged weapon?"
    },
    {
        "answer": "SELECT high_assists FROM table_27713583_11 WHERE location_attendance = \"Madison Square Garden 19,763\" AND record = \"39\u201338\"",
        "context": "CREATE TABLE table_27713583_11 (high_assists VARCHAR, location_attendance VARCHAR, record VARCHAR)",
        "question": "Name the high assists for madison square garden 19,763 and record is 39\u201338"
    },
    {
        "answer": "SELECT city FROM table_name_89 WHERE name_in_english = \"socialist party of the extremadurian people\"",
        "context": "CREATE TABLE table_name_89 (city VARCHAR, name_in_english VARCHAR)",
        "question": "What is the name of the city with the Socialist Party of the Extremadurian People?"
    },
    {
        "answer": "SELECT away_team FROM table_name_83 WHERE ground = \"colonial stadium\" AND date = \"friday, 2 march\"",
        "context": "CREATE TABLE table_name_83 (away_team VARCHAR, ground VARCHAR, date VARCHAR)",
        "question": "Name the Away team which have a Ground of colonial stadium on friday, 2 march?"
    },
    {
        "answer": "SELECT womens_doubles FROM table_27753492_2 WHERE mixed_doubles = \"Sudket Prapakamol Saralee Thungthongkam\"",
        "context": "CREATE TABLE table_27753492_2 (womens_doubles VARCHAR, mixed_doubles VARCHAR)",
        "question": "Who is the women's doubles when the mixed doubles are sudket prapakamol saralee thungthongkam?"
    },
    {
        "answer": "SELECT womens_doubles FROM table_27753492_2 WHERE tour = \"French Super Series\"",
        "context": "CREATE TABLE table_27753492_2 (womens_doubles VARCHAR, tour VARCHAR)",
        "question": "Who is the womens doubles on the tour french super series?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_41 WHERE team = \"sportivo luque\u00f1o\" AND wins > 1",
        "context": "CREATE TABLE table_name_41 (points INTEGER, team VARCHAR, wins VARCHAR)",
        "question": "Name the Points which has a Team of sportivo luque\u00f1o, and Wins larger than 1?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_89 WHERE tournaments_played < 2 AND cuts_made = 1 AND earnings___$__ < 10 OFFSET 547",
        "context": "CREATE TABLE table_name_89 (year INTEGER, earnings___$__ VARCHAR, tournaments_played VARCHAR, cuts_made VARCHAR)",
        "question": "what is the year when tournaments played is less than 2, cuts made is 1 and earnings ($) is less than 10,547?"
    },
    {
        "answer": "SELECT best_finish FROM table_name_41 WHERE money_list_rank = \"n/a\" AND earnings___$__ > 0 AND cuts_made > 1",
        "context": "CREATE TABLE table_name_41 (best_finish VARCHAR, cuts_made VARCHAR, money_list_rank VARCHAR, earnings___$__ VARCHAR)",
        "question": "what is the best finish when money list rank is n/a, earnings ($) is more than 0 and cuts made is more than 1?"
    },
    {
        "answer": "SELECT COUNT(tournaments_played) FROM table_name_97 WHERE money_list_rank = \"221\" AND cuts_made > 2",
        "context": "CREATE TABLE table_name_97 (tournaments_played VARCHAR, money_list_rank VARCHAR, cuts_made VARCHAR)",
        "question": "how many times is the money list rank 221 and cuts more than 2?"
    },
    {
        "answer": "SELECT MAX(original_air_date) FROM table_name_17 WHERE dvd_region_2_release_date = \"23 april 2012\" AND number_of_episodes > 10",
        "context": "CREATE TABLE table_name_17 (original_air_date INTEGER, dvd_region_2_release_date VARCHAR, number_of_episodes VARCHAR)",
        "question": "What's the latest original air date with more than 10 episodes and a DVD Region 2 release date of 23 april 2012?"
    },
    {
        "answer": "SELECT SUM(number_of_episodes) FROM table_name_99 WHERE original_air_date > 1991 AND series_number < 21 AND dvd_region_2_release_date = \"26 march 2012\"",
        "context": "CREATE TABLE table_name_99 (number_of_episodes INTEGER, dvd_region_2_release_date VARCHAR, original_air_date VARCHAR, series_number VARCHAR)",
        "question": "What's the sum of the number of episodes that originally aired after 1991 with a series number smaller than 21 and a DVD Region 2 release date of 26 march 2012?"
    },
    {
        "answer": "SELECT MIN(series_number) FROM table_name_69 WHERE original_air_date < 2009 AND dvd_region_2_release_date = \"26 july 2004\" AND number_of_episodes > 7",
        "context": "CREATE TABLE table_name_69 (series_number INTEGER, number_of_episodes VARCHAR, original_air_date VARCHAR, dvd_region_2_release_date VARCHAR)",
        "question": "What's the lowest series number that originally aired before 2009 with more than 7 episodes and had a DVD Region 2 release date of 26 july 2004?"
    },
    {
        "answer": "SELECT COUNT(mens_doubles) FROM table_28138035_33 WHERE mens_singles = \"Ma Long\"",
        "context": "CREATE TABLE table_28138035_33 (mens_doubles VARCHAR, mens_singles VARCHAR)",
        "question": "How many times has Ma Long won the men's singles?"
    },
    {
        "answer": "SELECT opponent FROM table_name_17 WHERE event = \"iscf - southeast championships\"",
        "context": "CREATE TABLE table_name_17 (opponent VARCHAR, event VARCHAR)",
        "question": "What is Opponent, when Event is \"ISCF - Southeast Championships\"?"
    },
    {
        "answer": "SELECT method FROM table_name_99 WHERE event = \"ufc fight night: teixeira vs. bader\"",
        "context": "CREATE TABLE table_name_99 (method VARCHAR, event VARCHAR)",
        "question": "What methos did Keith Wisniewski use in the ufc fight night: teixeira vs. bader?"
    },
    {
        "answer": "SELECT u21_mens FROM table_28211674_3 WHERE mixed_restricted = \"Mike Marsden\" AND u21_womens = \"Claire Nelson\"",
        "context": "CREATE TABLE table_28211674_3 (u21_mens VARCHAR, mixed_restricted VARCHAR, u21_womens VARCHAR)",
        "question": "Who was the U21 Mens winner when Mike Marsden was the mixed restricted winner and Claire Nelson was the U21 Womens winner? "
    },
    {
        "answer": "SELECT vmax FROM table_name_60 WHERE cylinder = \"straight-4\" AND capacity = \"1.466 cc\" AND type = \"r 150\"",
        "context": "CREATE TABLE table_name_60 (vmax VARCHAR, type VARCHAR, cylinder VARCHAR, capacity VARCHAR)",
        "question": "What was the maximum speed for straight-4, 1.466 cc Type r 150?"
    },
    {
        "answer": "SELECT mixed_restricted FROM table_28211674_3 WHERE mixed_veteran = \"Tomasz Rzeszotko\" AND u21_womens = \"Karina Le Fevre\"",
        "context": "CREATE TABLE table_28211674_3 (mixed_restricted VARCHAR, mixed_veteran VARCHAR, u21_womens VARCHAR)",
        "question": "Who won the mixed restricted when Tomasz Rzeszotko won the mixed veteran and Karina Le Fevre won the U21 womens?"
    },
    {
        "answer": "SELECT mixed_restricted FROM table_28211674_3 WHERE mens_singles = \"Matt Ware\"",
        "context": "CREATE TABLE table_28211674_3 (mixed_restricted VARCHAR, mens_singles VARCHAR)",
        "question": "When Matt Ware won the mens singles, who won the mixed restricted?"
    },
    {
        "answer": "SELECT to_par FROM table_name_17 WHERE country = \"united states\" AND player = \"fred couples\"",
        "context": "CREATE TABLE table_name_17 (to_par VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "What was the To par for United States golfer fred couples?"
    },
    {
        "answer": "SELECT COUNT(position) FROM table_2840500_4 WHERE player = \"Matt Bradley\"",
        "context": "CREATE TABLE table_2840500_4 (position VARCHAR, player VARCHAR)",
        "question": "How many draft pick positions did Matt Bradley have?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_56 WHERE class = \"piw\" AND program_title = \"the adventures of...\" AND score > 94.6",
        "context": "CREATE TABLE table_name_56 (year VARCHAR, score VARCHAR, class VARCHAR, program_title VARCHAR)",
        "question": "What was the total number for the PIW Class' The Adventures Of... and had a score bigger than 94.6?"
    },
    {
        "answer": "SELECT college_junior_club_team FROM table_2840500_8 WHERE player = \"Andrej Podkonicky\"",
        "context": "CREATE TABLE table_2840500_8 (college_junior_club_team VARCHAR, player VARCHAR)",
        "question": "Name the college for andrej podkonicky"
    },
    {
        "answer": "SELECT COUNT(opponents_head_coach) FROM table_28418916_3 WHERE fbs_opponent = \"Kent State Golden Flashes\"",
        "context": "CREATE TABLE table_28418916_3 (opponents_head_coach VARCHAR, fbs_opponent VARCHAR)",
        "question": "How many head coaches did Kent state golden flashes have?"
    },
    {
        "answer": "SELECT MAX(dcsf_number) FROM table_name_52 WHERE name = \"field\" AND ofsted_number > 117160",
        "context": "CREATE TABLE table_name_52 (dcsf_number INTEGER, name VARCHAR, ofsted_number VARCHAR)",
        "question": "Can you tell me the highest DCSF number that has the Name of field, and the Ofsted number larger than 117160?"
    },
    {
        "answer": "SELECT name FROM table_name_11 WHERE dcsf_number = 2117",
        "context": "CREATE TABLE table_name_11 (name VARCHAR, dcsf_number VARCHAR)",
        "question": "Can you tell me the Name that has the DCSF number of 2117?"
    },
    {
        "answer": "SELECT date FROM table_name_45 WHERE week = 11",
        "context": "CREATE TABLE table_name_45 (date VARCHAR, week VARCHAR)",
        "question": "What is Date, when Week is 11?"
    },
    {
        "answer": "SELECT COUNT(international_freight) FROM table_name_75 WHERE change = \"+0,2%\" AND international_mail > 0",
        "context": "CREATE TABLE table_name_75 (international_freight VARCHAR, change VARCHAR, international_mail VARCHAR)",
        "question": "How much international freight has a change of +0,2% with more than 0 international mail?"
    },
    {
        "answer": "SELECT MIN(international_mail) FROM table_name_82 WHERE domestic_freight < 72 AND domestic_mail = 0 AND year < 2012 AND total_freight_and_mail > 4 OFFSET 695",
        "context": "CREATE TABLE table_name_82 (international_mail INTEGER, total_freight_and_mail VARCHAR, year VARCHAR, domestic_freight VARCHAR, domestic_mail VARCHAR)",
        "question": "What is the international mail with the lowest number to have less than 72 domestic freight, 0 domestic mail later than 2012 with total freight and mail more than 4,695?"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_2850912_12 WHERE college_junior_club_team = \"Springfield Olympics (NEJHL)\"",
        "context": "CREATE TABLE table_2850912_12 (pick__number INTEGER, college_junior_club_team VARCHAR)",
        "question": "What selection was the springfield olympics (nejhl)?"
    },
    {
        "answer": "SELECT tenure FROM table_name_95 WHERE cause_of_death = \"helicopter accident\" AND badge_serial_number = \"16805\"",
        "context": "CREATE TABLE table_name_95 (tenure VARCHAR, cause_of_death VARCHAR, badge_serial_number VARCHAR)",
        "question": "What is the Tenure of the Officer who died in a helicopter accident with Badge/Serial Number 16805?"
    },
    {
        "answer": "SELECT badge_serial_number FROM table_name_58 WHERE rank = \"policeman\" AND cause_of_death = \"gunfire\" AND date_of_death = \"1919-02-18\"",
        "context": "CREATE TABLE table_name_58 (badge_serial_number VARCHAR, date_of_death VARCHAR, rank VARCHAR, cause_of_death VARCHAR)",
        "question": "What is the Badge/Serial Number of the Policeman who died in Gunfire on 1919-02-18?"
    },
    {
        "answer": "SELECT team FROM table_name_40 WHERE tries_against = \"8\"",
        "context": "CREATE TABLE table_name_40 (team VARCHAR, tries_against VARCHAR)",
        "question": "What is Team, when Tries Against is 8?"
    },
    {
        "answer": "SELECT points_against FROM table_name_88 WHERE try_diff = \"+22\"",
        "context": "CREATE TABLE table_name_88 (points_against VARCHAR, try_diff VARCHAR)",
        "question": "What is Points Against, when Try Diff is +22?"
    },
    {
        "answer": "SELECT record FROM table_name_2 WHERE event = \"independent event\" AND method = \"submission (peruvian necktie)\"",
        "context": "CREATE TABLE table_name_2 (record VARCHAR, event VARCHAR, method VARCHAR)",
        "question": "What is Record, when Event is \"Independent Event\", and when Method is \"Submission (Peruvian Necktie)\"?"
    },
    {
        "answer": "SELECT original_artist FROM table_28715942_2 WHERE track = \"Harder To Breathe\"",
        "context": "CREATE TABLE table_28715942_2 (original_artist VARCHAR, track VARCHAR)",
        "question": "Who were the original artist(s) on harder to breathe?"
    },
    {
        "answer": "SELECT original_artist FROM table_28715942_6 WHERE vocal_percussionist = \"Benjamin Holder\"",
        "context": "CREATE TABLE table_28715942_6 (original_artist VARCHAR, vocal_percussionist VARCHAR)",
        "question": "Who is the artist where the vocal percussionist is Benjamin Holder?"
    },
    {
        "answer": "SELECT channel FROM table_name_82 WHERE play_by_play = \"paul sunderland\" AND studio_host = \"bill macdonald\" AND studio_analysts = \"jack haley\"",
        "context": "CREATE TABLE table_name_82 (channel VARCHAR, studio_analysts VARCHAR, play_by_play VARCHAR, studio_host VARCHAR)",
        "question": "which channel will have play by play commentator Paul Sunderland, Studio Host Bill Macdonald and Studi Analysty Jack Haley?"
    },
    {
        "answer": "SELECT destination FROM table_name_47 WHERE stopping_pattern = \"[2777] mciver station platforms\"",
        "context": "CREATE TABLE table_name_47 (destination VARCHAR, stopping_pattern VARCHAR)",
        "question": "Which Destination has a Stopping pattern of [2777] mciver station platforms?"
    },
    {
        "answer": "SELECT capacity_percentage FROM table_28884858_2 WHERE team = \"Denver Broncos\"",
        "context": "CREATE TABLE table_28884858_2 (capacity_percentage VARCHAR, team VARCHAR)",
        "question": "What was the capacity for the Denver Broncos?"
    },
    {
        "answer": "SELECT stopping_pattern FROM table_name_50 WHERE platform = \"[2777] mciver station platforms\"",
        "context": "CREATE TABLE table_name_50 (stopping_pattern VARCHAR, platform VARCHAR)",
        "question": "Which Stopping pattern has a Platform of [2777] mciver station platforms?"
    },
    {
        "answer": "SELECT MAX(postal_code) FROM table_28891101_3 WHERE administrative_capital = \"Bori\"",
        "context": "CREATE TABLE table_28891101_3 (postal_code INTEGER, administrative_capital VARCHAR)",
        "question": "What is the postal code when the administrative capital in Bori?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_39 WHERE attendance = \"95,000\" AND runner_up = \"dresdner sc\"",
        "context": "CREATE TABLE table_name_39 (year INTEGER, attendance VARCHAR, runner_up VARCHAR)",
        "question": "What is the sum of the years where the attendance was 95,000 and the runner-up was dresdner sc?"
    },
    {
        "answer": "SELECT player FROM table_2897457_5 WHERE college_junior_club_team = \"Avon Old Farms (USHS-CT)\"",
        "context": "CREATE TABLE table_2897457_5 (player VARCHAR, college_junior_club_team VARCHAR)",
        "question": "What player attended avon old farms (ushs-ct)?"
    },
    {
        "answer": "SELECT game FROM table_name_81 WHERE location = \"boston garden\" AND record = \"49-17\"",
        "context": "CREATE TABLE table_name_81 (game VARCHAR, location VARCHAR, record VARCHAR)",
        "question": "Which game is located in Boston Garden and has a record of 49-17?"
    },
    {
        "answer": "SELECT race_title FROM table_name_53 WHERE winner = \"dick johnson\" AND circuit = \"sandown raceway\"",
        "context": "CREATE TABLE table_name_53 (race_title VARCHAR, winner VARCHAR, circuit VARCHAR)",
        "question": "what is the race title when the winner is dick johnson and the circuit is sandown raceway?"
    },
    {
        "answer": "SELECT record FROM table_name_78 WHERE opponent = \"san francisco warriors\"",
        "context": "CREATE TABLE table_name_78 (record VARCHAR, opponent VARCHAR)",
        "question": "What is Record, when Opponent is San Francisco Warriors?"
    },
    {
        "answer": "SELECT takeover_date FROM table_name_19 WHERE fa_division_s_ = \"mitre\"",
        "context": "CREATE TABLE table_name_19 (takeover_date VARCHAR, fa_division_s_ VARCHAR)",
        "question": "What is the takeover date of the FA division mitre?"
    },
    {
        "answer": "SELECT race_name FROM table_name_16 WHERE winning_team = \"mi-jack conquest racing\" AND pole_position = \"andreas wirth\"",
        "context": "CREATE TABLE table_name_16 (race_name VARCHAR, winning_team VARCHAR, pole_position VARCHAR)",
        "question": "What race did the team Mi-Jack Conquest racing win with a pole position of andreas wirth?"
    },
    {
        "answer": "SELECT race_name FROM table_name_59 WHERE winning_driver = \"graham rahal\" AND round > 6 AND pole_position = \"graham rahal\"",
        "context": "CREATE TABLE table_name_59 (race_name VARCHAR, pole_position VARCHAR, winning_driver VARCHAR, round VARCHAR)",
        "question": "What race after round 6 did Graham Rahal win with a pole position of graham rahal?"
    },
    {
        "answer": "SELECT score FROM table_name_49 WHERE country = \"united states\" AND to_par = \"+2\" AND player = \"phil hancock\"",
        "context": "CREATE TABLE table_name_49 (score VARCHAR, player VARCHAR, country VARCHAR, to_par VARCHAR)",
        "question": "what is the score when the country is united states, the to par is +2 and the player is phil hancock?"
    },
    {
        "answer": "SELECT time FROM table_29535057_4 WHERE location = \"Cassell Coliseum \u2022 Blacksburg, VA\"",
        "context": "CREATE TABLE table_29535057_4 (time VARCHAR, location VARCHAR)",
        "question": "What was the time of the games that took place at the cassell coliseum \u2022 blacksburg, va?"
    },
    {
        "answer": "SELECT player FROM table_name_93 WHERE country = \"united states\" AND score = 71 - 73 = 144",
        "context": "CREATE TABLE table_name_93 (player VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "who is the player when the country is united states and the score is 71-73=144?"
    },
    {
        "answer": "SELECT institution FROM table_29612224_1 WHERE school_website = \"http://www.mfschools.org/high/\"",
        "context": "CREATE TABLE table_29612224_1 (institution VARCHAR, school_website VARCHAR)",
        "question": "What's the name of the city or town of the school that operates the http://www.mfschools.org/high/ website?"
    },
    {
        "answer": "SELECT pole_position FROM table_29690363_3 WHERE most_laps_led = \"Esteban Guerrieri\" AND fastest_lap = \"Josef Newgarden\" AND rd = \"8A\"",
        "context": "CREATE TABLE table_29690363_3 (pole_position VARCHAR, rd VARCHAR, most_laps_led VARCHAR, fastest_lap VARCHAR)",
        "question": "Who had the pole(s) when esteban guerrieri led the most laps round 8a and josef newgarden had the fastest lap?"
    },
    {
        "answer": "SELECT years FROM table_29743928_4 WHERE name = \"Chase Harrison Category:Articles with hCards\"",
        "context": "CREATE TABLE table_29743928_4 (years VARCHAR, name VARCHAR)",
        "question": "When chase harrison category:articles with hcards is the name what is the year?"
    },
    {
        "answer": "SELECT song_choice FROM table_29756040_1 WHERE week__number = \"Audition\"",
        "context": "CREATE TABLE table_29756040_1 (song_choice VARCHAR, week__number VARCHAR)",
        "question": "Which song was chosen during the audition week?"
    },
    {
        "answer": "SELECT voltage FROM table_name_8 WHERE socket = \"socket 370\" AND model_number = \"pentiumiii866\"",
        "context": "CREATE TABLE table_name_8 (voltage VARCHAR, socket VARCHAR, model_number VARCHAR)",
        "question": "What is the voltage of the Pentiumiii866 microprocessor with a socket 370?"
    },
    {
        "answer": "SELECT directed_by FROM table_29803475_3 WHERE us_viewers__million_ = \"0.25\"",
        "context": "CREATE TABLE table_29803475_3 (directed_by VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "who directed the episode that have 0.25 million u.s viewers"
    },
    {
        "answer": "SELECT date FROM table_name_9 WHERE score_in_the_final = \"6\u20133, 6\u20133, 2\u20136, 6\u20134\"",
        "context": "CREATE TABLE table_name_9 (date VARCHAR, score_in_the_final VARCHAR)",
        "question": "What is the Date of the match with a Score in the final of 6\u20133, 6\u20133, 2\u20136, 6\u20134?"
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_29836557_2 WHERE mls_team = \"Real Salt Lake\"",
        "context": "CREATE TABLE table_29836557_2 (pick__number INTEGER, mls_team VARCHAR)",
        "question": "What pick number did Real Salt Lake get?"
    },
    {
        "answer": "SELECT MAX(against) FROM table_name_85 WHERE lost < 20 AND draw > 2 AND favour < 11",
        "context": "CREATE TABLE table_name_85 (against INTEGER, favour VARCHAR, lost VARCHAR, draw VARCHAR)",
        "question": "What is the highest Against where they lost less than 20 games, tied more than 2 of them, and they had Favour less than 11?"
    },
    {
        "answer": "SELECT MIN(long) FROM table_name_60 WHERE avg_g > -2.2 AND name = \"total\" AND gain > 2 OFFSET 488",
        "context": "CREATE TABLE table_name_60 (long INTEGER, gain VARCHAR, avg_g VARCHAR, name VARCHAR)",
        "question": "What is the lowest long with an avg/G more than -2.2 and a total name and a gain of more than 2,488?"
    },
    {
        "answer": "SELECT accreditation_level FROM table_name_76 WHERE network_brand_name = \"movistar\"",
        "context": "CREATE TABLE table_name_76 (accreditation_level VARCHAR, network_brand_name VARCHAR)",
        "question": "What is the accreditation level of the network brand Movistar?"
    },
    {
        "answer": "SELECT townland FROM table_30120664_1 WHERE poor_law_union = \"Fermoy\" AND civil_parish = \"Ballynoe\"",
        "context": "CREATE TABLE table_30120664_1 (townland VARCHAR, poor_law_union VARCHAR, civil_parish VARCHAR)",
        "question": "Name  the townland for fermoy and ballynoe"
    },
    {
        "answer": "SELECT poor_law_union FROM table_30121046_1 WHERE townland = \"Kilmaloda\"",
        "context": "CREATE TABLE table_30121046_1 (poor_law_union VARCHAR, townland VARCHAR)",
        "question": "What is the poor law union of the Kilmaloda townland?"
    },
    {
        "answer": "SELECT COUNT(2006) FROM table_name_95 WHERE date_of_official_foundation_of_municipality = 1918",
        "context": "CREATE TABLE table_name_95 (date_of_official_foundation_of_municipality VARCHAR)",
        "question": "What is the total number in 2006, which has an official foundation of municipality of 1918?"
    },
    {
        "answer": "SELECT rank FROM table_name_21 WHERE premiere = \"september 13, 1978\"",
        "context": "CREATE TABLE table_name_21 (rank VARCHAR, premiere VARCHAR)",
        "question": "What is the rank for the episode that premiered on September 13, 1978?"
    },
    {
        "answer": "SELECT rank FROM table_name_28 WHERE bronze < 17 AND silver > 1 AND gold < 1",
        "context": "CREATE TABLE table_name_28 (rank VARCHAR, gold VARCHAR, bronze VARCHAR, silver VARCHAR)",
        "question": "Tell me the rank for bronze less than 17 and gold less than 1"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_39 WHERE team = \"herdez competition\" AND grid > 1",
        "context": "CREATE TABLE table_name_39 (points VARCHAR, team VARCHAR, grid VARCHAR)",
        "question": "What was Herdez Competition's total points with a grid larger than 1?"
    },
    {
        "answer": "SELECT COUNT(top_25) FROM table_name_59 WHERE cuts_made = 22 AND wins < 1",
        "context": "CREATE TABLE table_name_59 (top_25 VARCHAR, cuts_made VARCHAR, wins VARCHAR)",
        "question": "Tell me the total number of top 25 for wins less than 1 and cuts made of 22"
    },
    {
        "answer": "SELECT partner FROM table_name_92 WHERE score_in_final = \"5\u20137, 4\u20136\"",
        "context": "CREATE TABLE table_name_92 (partner VARCHAR, score_in_final VARCHAR)",
        "question": "What is the Partner of the match with a Score in Final of 5\u20137, 4\u20136?"
    },
    {
        "answer": "SELECT 2001 FROM table_name_94 WHERE 1989 = \"a\" AND tournament = \"u.s. open\"",
        "context": "CREATE TABLE table_name_94 (tournament VARCHAR)",
        "question": "What is 2001, when 1989 is \"A\", and when Tournament is \"U.S. Open\"?"
    },
    {
        "answer": "SELECT english_title FROM table_name_17 WHERE director = \"jean-pierre jeunet\"",
        "context": "CREATE TABLE table_name_17 (english_title VARCHAR, director VARCHAR)",
        "question": "Name the title of jean-pierre jeunet"
    },
    {
        "answer": "SELECT power_output__kw_ FROM table_name_79 WHERE total_production = \"2\" AND builder__family_ = \"zhuzhou\" AND model = \"hxd1d\"",
        "context": "CREATE TABLE table_name_79 (power_output__kw_ VARCHAR, model VARCHAR, total_production VARCHAR, builder__family_ VARCHAR)",
        "question": "What is the power output (kw) of builder zhuzhou, model hxd1d, with a total production of 2?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_1 WHERE record = \"3-1\"",
        "context": "CREATE TABLE table_name_1 (location_attendance VARCHAR, record VARCHAR)",
        "question": "What is the location/attendance of the game with a 3-1 record?"
    },
    {
        "answer": "SELECT MIN(week) FROM table_name_72 WHERE game_site = \"ralph wilson stadium\" AND date = \"october 7, 2001\"",
        "context": "CREATE TABLE table_name_72 (week INTEGER, game_site VARCHAR, date VARCHAR)",
        "question": "What was the lowest week at Ralph Wilson Stadium on October 7, 2001?"
    },
    {
        "answer": "SELECT COUNT(to_par) FROM table_name_16 WHERE score = 70 - 75 - 76 = 221",
        "context": "CREATE TABLE table_name_16 (to_par VARCHAR, score VARCHAR)",
        "question": "What is the total number of To Par, when Score is \"70-75-76=221\"?"
    },
    {
        "answer": "SELECT trainer FROM table_name_34 WHERE year < 2009 AND time = \"1:10.09\"",
        "context": "CREATE TABLE table_name_34 (trainer VARCHAR, year VARCHAR, time VARCHAR)",
        "question": "Which trainer had a time of 1:10.09 with a year less than 2009?"
    },
    {
        "answer": "SELECT COUNT(overall) FROM table_name_76 WHERE position = \"ot\" AND round > 5",
        "context": "CREATE TABLE table_name_76 (overall VARCHAR, position VARCHAR, round VARCHAR)",
        "question": "How much Overall has a Position of ot, and a Round larger than 5?"
    },
    {
        "answer": "SELECT date FROM table_name_27 WHERE class = \"non-championship f2\" AND driver = \"jos\u00e9 froil\u00e1n gonz\u00e1lez\" AND position > 2",
        "context": "CREATE TABLE table_name_27 (date VARCHAR, position VARCHAR, class VARCHAR, driver VARCHAR)",
        "question": "what date has the class of non-championship f2 as well as a driver name jos\u00e9 froil\u00e1n gonz\u00e1lez that has a position larger than 2?"
    },
    {
        "answer": "SELECT team FROM table_name_46 WHERE position > 1 AND date = \"9/1953\" AND driver = \"emmanuel de graffenried\"",
        "context": "CREATE TABLE table_name_46 (team VARCHAR, driver VARCHAR, position VARCHAR, date VARCHAR)",
        "question": "what team has a drive name emmanuel de graffenried and a position larger than 1 as well as the date of 9/1953?"
    },
    {
        "answer": "SELECT COUNT(total_apps) FROM table_name_6 WHERE fa_cup_goals < 4 AND fa_cup_apps > 7",
        "context": "CREATE TABLE table_name_6 (total_apps VARCHAR, fa_cup_goals VARCHAR, fa_cup_apps VARCHAR)",
        "question": "It has a FA Cup Goals smaller than 4, and a FA Cup Apps larger than 7, what is the total number of total apps?"
    },
    {
        "answer": "SELECT opponent FROM table_name_43 WHERE attendance = \"unknown\" AND result = \"lost 2-0\"",
        "context": "CREATE TABLE table_name_43 (opponent VARCHAR, attendance VARCHAR, result VARCHAR)",
        "question": "Which opponent has unknown attendance, and lost 2-0?"
    },
    {
        "answer": "SELECT round FROM table_name_3 WHERE res = \"win\" AND event = \"rof 29: aftershock\"",
        "context": "CREATE TABLE table_name_3 (round VARCHAR, res VARCHAR, event VARCHAR)",
        "question": "What round did he win rof 29: aftershock in?"
    },
    {
        "answer": "SELECT tv_time FROM table_name_86 WHERE attendance = \"60,894\"",
        "context": "CREATE TABLE table_name_86 (tv_time VARCHAR, attendance VARCHAR)",
        "question": "Tell me the tv time for attendance of 60,894"
    },
    {
        "answer": "SELECT result FROM table_name_26 WHERE week__number = \"top 8\"",
        "context": "CREATE TABLE table_name_26 (result VARCHAR, week__number VARCHAR)",
        "question": "What was the result during the week # of top 8?"
    },
    {
        "answer": "SELECT theme FROM table_name_73 WHERE week__number = \"top 24 (12 men)\"",
        "context": "CREATE TABLE table_name_73 (theme VARCHAR, week__number VARCHAR)",
        "question": "What was the theme during the week # of top 24 (12 men)"
    },
    {
        "answer": "SELECT result FROM table_name_84 WHERE week__number = \"top 11\"",
        "context": "CREATE TABLE table_name_84 (result VARCHAR, week__number VARCHAR)",
        "question": "What was the result after the week # top 11?"
    },
    {
        "answer": "SELECT winning_applicant FROM table_name_45 WHERE block = \"10d\" AND ensemble_name = \"muxco lincolnshire\"",
        "context": "CREATE TABLE table_name_45 (winning_applicant VARCHAR, block VARCHAR, ensemble_name VARCHAR)",
        "question": "Who is the Winning Applicant of Ensemble Name Muxco Lincolnshire in Block 10D?"
    },
    {
        "answer": "SELECT opponent FROM table_name_45 WHERE date = \"january 16\"",
        "context": "CREATE TABLE table_name_45 (opponent VARCHAR, date VARCHAR)",
        "question": "Who is the Opponent on January 16?"
    },
    {
        "answer": "SELECT SUM(lane) FROM table_name_24 WHERE nationality = \"sweden\" AND split__50m_ < 26.25",
        "context": "CREATE TABLE table_name_24 (lane INTEGER, nationality VARCHAR, split__50m_ VARCHAR)",
        "question": "What is the total of lane(s) for swimmers from Sweden with a 50m split of faster than 26.25?"
    },
    {
        "answer": "SELECT player FROM table_name_33 WHERE position = \"no pick\" AND year = 1976",
        "context": "CREATE TABLE table_name_33 (player VARCHAR, position VARCHAR, year VARCHAR)",
        "question": "What player has a no pick position in 1976?"
    },
    {
        "answer": "SELECT ceremony FROM table_name_39 WHERE award = \"vijay award\" AND outcome = \"nominated\" AND name = \"anuya bhagvath\"",
        "context": "CREATE TABLE table_name_39 (ceremony VARCHAR, name VARCHAR, award VARCHAR, outcome VARCHAR)",
        "question": "What is the category Anuya Bhagvath was nominated for at vijay award?"
    },
    {
        "answer": "SELECT best_3_year_period FROM table_name_61 WHERE best_15_year_period = \"smyslov; kasparov\" AND position = 5",
        "context": "CREATE TABLE table_name_61 (best_3_year_period VARCHAR, best_15_year_period VARCHAR, position VARCHAR)",
        "question": "Which best 3-year period has a best 15-year period of smyslov; kasparov, and a Position of 5?"
    },
    {
        "answer": "SELECT away_team FROM table_name_77 WHERE date = \"4 june 1927\" AND venue = \"corio oval\"",
        "context": "CREATE TABLE table_name_77 (away_team VARCHAR, date VARCHAR, venue VARCHAR)",
        "question": "Which team was at Corio Oval on 4 June 1927?"
    },
    {
        "answer": "SELECT format FROM table_name_93 WHERE label = \"candlelight records\" AND catalog = \"candle053tin\"",
        "context": "CREATE TABLE table_name_93 (format VARCHAR, label VARCHAR, catalog VARCHAR)",
        "question": "What was the Candlelight Records Catalog of Candle053tin format?"
    },
    {
        "answer": "SELECT city FROM table_name_58 WHERE country = \"india\" AND airport = \"sardar vallabhbhai patel international airport\"",
        "context": "CREATE TABLE table_name_58 (city VARCHAR, country VARCHAR, airport VARCHAR)",
        "question": "What is the city in India with an airport named Sardar Vallabhbhai Patel International Airport?"
    },
    {
        "answer": "SELECT wicket FROM table_name_85 WHERE runs = \"580\"",
        "context": "CREATE TABLE table_name_85 (wicket VARCHAR, runs VARCHAR)",
        "question": "Which wicket had 580 runs?"
    },
    {
        "answer": "SELECT entrant FROM table_name_68 WHERE engine = \"cosworth dfv v8\" AND chassis = \"dn9\"",
        "context": "CREATE TABLE table_name_68 (entrant VARCHAR, engine VARCHAR, chassis VARCHAR)",
        "question": "What team uses a Cosworth DFV V8 engine and DN9 Chassis?"
    },
    {
        "answer": "SELECT COUNT(week) FROM table_name_95 WHERE attendance = 61 OFFSET 985",
        "context": "CREATE TABLE table_name_95 (week VARCHAR, attendance VARCHAR)",
        "question": "What is the sum of week number(s) had an attendance of 61,985?"
    },
    {
        "answer": "SELECT seats FROM table_name_38 WHERE net_gain_loss = \"0\" AND party = \"swedish people's party\"",
        "context": "CREATE TABLE table_name_38 (seats VARCHAR, net_gain_loss VARCHAR, party VARCHAR)",
        "question": "When the Swedish People's Party had a net gain/loss of 0, how many seats did they have?"
    },
    {
        "answer": "SELECT MAX(total_votes) FROM table_name_48 WHERE _percentage_of_popular_vote = \"0.86%\" AND _number_of_seats_won > 0",
        "context": "CREATE TABLE table_name_48 (total_votes INTEGER, _percentage_of_popular_vote VARCHAR, _number_of_seats_won VARCHAR)",
        "question": "Can you tell me the highest Total votes that has the % of popular vote of 0.86%, and the # of seats won larger than 0?"
    },
    {
        "answer": "SELECT COUNT(total_votes) FROM table_name_71 WHERE election > 2009 AND candidates_fielded > 61",
        "context": "CREATE TABLE table_name_71 (total_votes VARCHAR, election VARCHAR, candidates_fielded VARCHAR)",
        "question": "Can you tell me the total number of Total votes that has the Election larger than 2009, and the Candidates fielded larger than 61?"
    },
    {
        "answer": "SELECT country FROM table_name_62 WHERE year__most_recent_ = 2005 AND adult_men = \"96%\"",
        "context": "CREATE TABLE table_name_62 (country VARCHAR, year__most_recent_ VARCHAR, adult_men VARCHAR)",
        "question": "Which country has its most recent year as being 2005 and has an Adult Men literacy rate of 96%?"
    },
    {
        "answer": "SELECT country FROM table_name_50 WHERE youth__15_24__literacy_rate_total = \"99%\" AND youth_men = \"98%\"",
        "context": "CREATE TABLE table_name_50 (country VARCHAR, youth__15_24__literacy_rate_total VARCHAR, youth_men VARCHAR)",
        "question": "What country has a Youth (15-24) Literacy Rate Total of 99%, and a Youth Men of 98%?"
    },
    {
        "answer": "SELECT COUNT(games_won) FROM table_name_58 WHERE bonus_points > 1 AND points_difference < 50 AND points_against = 106 AND points_for < 152",
        "context": "CREATE TABLE table_name_58 (games_won VARCHAR, points_for VARCHAR, points_against VARCHAR, bonus_points VARCHAR, points_difference VARCHAR)",
        "question": "Which Games won has Bonus points larger than 1, a Points difference smaller than 50, Points against of 106, and Points for smaller than 152?"
    },
    {
        "answer": "SELECT glendale FROM table_name_87 WHERE pasadena = \"14%\"",
        "context": "CREATE TABLE table_name_87 (glendale VARCHAR, pasadena VARCHAR)",
        "question": "What is the percentage of Glendale when Pasadena is 14%?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_65 WHERE date = \"december 22, 1985\" AND week < 16",
        "context": "CREATE TABLE table_name_65 (attendance INTEGER, date VARCHAR, week VARCHAR)",
        "question": "Which Attendance has a Date of december 22, 1985, and a Week smaller than 16?"
    },
    {
        "answer": "SELECT source_language FROM table_name_31 WHERE meaning = \"mahjong\"",
        "context": "CREATE TABLE table_name_31 (source_language VARCHAR, meaning VARCHAR)",
        "question": "What language did the word mahjong originate from?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_85 WHERE partner = \"jorge lozano\" AND outcome = \"runner-up\" AND opponents_in_the_final = \"udo riglewski michael stich\"",
        "context": "CREATE TABLE table_name_85 (score_in_the_final VARCHAR, opponents_in_the_final VARCHAR, partner VARCHAR, outcome VARCHAR)",
        "question": "Name the Score which has a Partner of jorge lozano, an Outcome of runner-up, and Opponents in the final of udo riglewski michael stich?"
    },
    {
        "answer": "SELECT MIN(totals_06_10) FROM table_name_15 WHERE pubs_2010 = 68 AND totals_07_11 > 305",
        "context": "CREATE TABLE table_name_15 (totals_06_10 INTEGER, pubs_2010 VARCHAR, totals_07_11 VARCHAR)",
        "question": "What is the lowest 06-10 totals with a pubs 2010 of 68 and a 07-11 totals larger than 305?"
    },
    {
        "answer": "SELECT team FROM table_name_6 WHERE date_of_appointment = \"10 november 2008\"",
        "context": "CREATE TABLE table_name_6 (team VARCHAR, date_of_appointment VARCHAR)",
        "question": "What is Team, when Date of Appointment is \"10 November 2008\"?"
    },
    {
        "answer": "SELECT team FROM table_name_86 WHERE date = \"december 30\"",
        "context": "CREATE TABLE table_name_86 (team VARCHAR, date VARCHAR)",
        "question": "WHAT IS THE TEAM FOR DECEMBER 30?"
    },
    {
        "answer": "SELECT COUNT(inhabitants) FROM table_name_3 WHERE party = \"democratic party\" AND mayor = \"stefano cimatti\" AND election < 2009",
        "context": "CREATE TABLE table_name_3 (inhabitants VARCHAR, election VARCHAR, party VARCHAR, mayor VARCHAR)",
        "question": "How many Inhabitants were in the democratic party for an election before 2009 for Mayor of stefano cimatti?"
    },
    {
        "answer": "SELECT home FROM table_name_16 WHERE visitor = \"ny rangers\"",
        "context": "CREATE TABLE table_name_16 (home VARCHAR, visitor VARCHAR)",
        "question": "What is the home team with the ny rangers as the visitor team?"
    },
    {
        "answer": "SELECT COUNT(crowd) FROM table_name_68 WHERE away_team = \"essendon\"",
        "context": "CREATE TABLE table_name_68 (crowd VARCHAR, away_team VARCHAR)",
        "question": "What is the listed crowd when essendon is the away squad?"
    },
    {
        "answer": "SELECT player FROM table_name_52 WHERE figures = \"source: . last updated: 28 june 2007.\"",
        "context": "CREATE TABLE table_name_52 (player VARCHAR, figures VARCHAR)",
        "question": "What is Player, when Figures is source: . last updated: 28 june 2007.?"
    },
    {
        "answer": "SELECT player FROM table_name_17 WHERE opponent = \"source: . last updated: 28 june 2007.\"",
        "context": "CREATE TABLE table_name_17 (player VARCHAR, opponent VARCHAR)",
        "question": "What is Player, when Opponent is source: . last updated: 28 june 2007.?"
    },
    {
        "answer": "SELECT home_team FROM table_name_47 WHERE date = \"7 january 1956\" AND away_team = \"accrington stanley\"",
        "context": "CREATE TABLE table_name_47 (home_team VARCHAR, date VARCHAR, away_team VARCHAR)",
        "question": "For the match played on 7 January 1956, with away team of Accrington Stanley, who was the home team?"
    },
    {
        "answer": "SELECT home_team FROM table_name_9 WHERE venue = \"western oval\"",
        "context": "CREATE TABLE table_name_9 (home_team VARCHAR, venue VARCHAR)",
        "question": "What home team played at western oval?"
    },
    {
        "answer": "SELECT place FROM table_name_84 WHERE score = 73 - 65 - 73 - 71 = 282",
        "context": "CREATE TABLE table_name_84 (place VARCHAR, score VARCHAR)",
        "question": "WHAT IS THE PLACE WITH A SCORE OF 73-65-73-71=282?"
    },
    {
        "answer": "SELECT to_par FROM table_name_3 WHERE player = \"ernie els\"",
        "context": "CREATE TABLE table_name_3 (to_par VARCHAR, player VARCHAR)",
        "question": "WHAT IS THE TO PAR FOR ERNIE ELS?"
    },
    {
        "answer": "SELECT date FROM table_name_58 WHERE score = \"112\u2013118\"",
        "context": "CREATE TABLE table_name_58 (date VARCHAR, score VARCHAR)",
        "question": "Which Date has a Score of 112\u2013118?"
    },
    {
        "answer": "SELECT player FROM table_name_33 WHERE pick < 6 AND new_wnba_team = \"minnesota lynx\"",
        "context": "CREATE TABLE table_name_33 (player VARCHAR, pick VARCHAR, new_wnba_team VARCHAR)",
        "question": "Which player had a pick under 6 and a new WNBA team of the Minnesota Lynx?"
    },
    {
        "answer": "SELECT nation_of_citizenship FROM table_name_78 WHERE type_of_vehicle = \"stock car\" AND year = 1999",
        "context": "CREATE TABLE table_name_78 (nation_of_citizenship VARCHAR, type_of_vehicle VARCHAR, year VARCHAR)",
        "question": "What Nation of citizenship has a stock car vehicle with a year of 1999?"
    },
    {
        "answer": "SELECT points FROM table_name_40 WHERE series = \"queensland formula ford championship\" AND position = \"1st\"",
        "context": "CREATE TABLE table_name_40 (points VARCHAR, series VARCHAR, position VARCHAR)",
        "question": "What is Points, when Series is Queensland Formula Ford Championship, and when Position is 1st?"
    },
    {
        "answer": "SELECT position FROM table_name_48 WHERE series = \"queensland formula ford championship\" AND season > 2001 AND points = \"234\"",
        "context": "CREATE TABLE table_name_48 (position VARCHAR, points VARCHAR, series VARCHAR, season VARCHAR)",
        "question": "What is Position, when Series is Queensland Formula Ford Championship, when Season is after 2001, and when Points is 234?"
    },
    {
        "answer": "SELECT height_metres___feet FROM table_name_18 WHERE rank = 8 AND floors = \"3x17\"",
        "context": "CREATE TABLE table_name_18 (height_metres___feet VARCHAR, rank VARCHAR, floors VARCHAR)",
        "question": "Which Height Metres / feet has a Rank of 8, and Floors of 3x17?"
    },
    {
        "answer": "SELECT opponent FROM table_name_62 WHERE location = \"london, england\" AND round < 2",
        "context": "CREATE TABLE table_name_62 (opponent VARCHAR, location VARCHAR, round VARCHAR)",
        "question": "Who was the opponent in London, England in a round less than 2?"
    },
    {
        "answer": "SELECT score FROM table_name_86 WHERE date = \"10 march 1984\" AND home_team = \"birmingham city\"",
        "context": "CREATE TABLE table_name_86 (score VARCHAR, date VARCHAR, home_team VARCHAR)",
        "question": "What is the score for the game where Birmingham City was the home team on 10 March 1984?"
    },
    {
        "answer": "SELECT years_for_grizzlies FROM table_name_96 WHERE position = \"small forward\" AND school_club_team = \"providence\"",
        "context": "CREATE TABLE table_name_96 (years_for_grizzlies VARCHAR, position VARCHAR, school_club_team VARCHAR)",
        "question": "Which years did the player from Providence play for the Grizzlies as small forward?"
    },
    {
        "answer": "SELECT record FROM table_name_68 WHERE location = \"boston garden\" AND score = \"118-110\"",
        "context": "CREATE TABLE table_name_68 (record VARCHAR, location VARCHAR, score VARCHAR)",
        "question": "For the game played at the Boston Garden with a score of 118-110, what is the opposing team's record?"
    },
    {
        "answer": "SELECT player FROM table_name_41 WHERE to_par > 6 AND year_s__won = \"1962 , 1967\"",
        "context": "CREATE TABLE table_name_41 (player VARCHAR, to_par VARCHAR, year_s__won VARCHAR)",
        "question": "What is Player, when To Par is greater than 6, and when Year(s) Won is \"1962 , 1967\"?"
    },
    {
        "answer": "SELECT total FROM table_name_13 WHERE to_par < 14 AND finish = \"t12\" AND player = \"julius boros\"",
        "context": "CREATE TABLE table_name_13 (total VARCHAR, player VARCHAR, to_par VARCHAR, finish VARCHAR)",
        "question": "What is the Total, when To Par is less than 14, when Finish is T12, and when Player is \"Julius Boros\"?"
    },
    {
        "answer": "SELECT state FROM table_name_67 WHERE region = \"mideast\" AND host = \"university of iowa\"",
        "context": "CREATE TABLE table_name_67 (state VARCHAR, region VARCHAR, host VARCHAR)",
        "question": "Which state contains the University of Iowa in the mideast region?"
    },
    {
        "answer": "SELECT driver FROM table_name_32 WHERE engine = \"rotax max\" AND class = \"rotax heavy\" AND chassis = \"arrow\" AND team = \"twr raceline seating\"",
        "context": "CREATE TABLE table_name_32 (driver VARCHAR, team VARCHAR, chassis VARCHAR, engine VARCHAR, class VARCHAR)",
        "question": "What is the name of the driver with a rotax max engine, in the rotax heavy class, with arrow as chassis and on the TWR Raceline Seating team?"
    },
    {
        "answer": "SELECT engine FROM table_name_94 WHERE team = \"bf racing marron excavations\" AND chassis = \"monaco\" AND driver = \"lee filliponi\"",
        "context": "CREATE TABLE table_name_94 (engine VARCHAR, driver VARCHAR, team VARCHAR, chassis VARCHAR)",
        "question": "What type of engine does the BF Racing Marron Excavations have that also has Monaco as chassis and Lee Filliponi as the driver?"
    },
    {
        "answer": "SELECT championship_game FROM table_name_40 WHERE _number_of_bids = 4 AND win__percentage = \".600\"",
        "context": "CREATE TABLE table_name_40 (championship_game VARCHAR, _number_of_bids VARCHAR, win__percentage VARCHAR)",
        "question": "What is the Championship Game that has 4 Bids and a .600 Win %?"
    },
    {
        "answer": "SELECT AVG(played) FROM table_name_83 WHERE drawn < 1 AND points > 4",
        "context": "CREATE TABLE table_name_83 (played INTEGER, drawn VARCHAR, points VARCHAR)",
        "question": "Which average Played has a Drawn smaller than 1, and Points larger than 4?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_33 WHERE opponent = \"airdrie united\" AND date = \"31 january 2009\"",
        "context": "CREATE TABLE table_name_33 (attendance INTEGER, opponent VARCHAR, date VARCHAR)",
        "question": "What was the attendance on 31 January 2009 when the opponent was Airdrie United?"
    },
    {
        "answer": "SELECT SUM(position) FROM table_name_32 WHERE played > 9",
        "context": "CREATE TABLE table_name_32 (position INTEGER, played INTEGER)",
        "question": "Which Position has a Played larger than 9?"
    },
    {
        "answer": "SELECT MAX(first_elected) FROM table_name_21 WHERE result = \"re-elected\" AND district = \"california 5\"",
        "context": "CREATE TABLE table_name_21 (first_elected INTEGER, result VARCHAR, district VARCHAR)",
        "question": "What's the highest First Elected with a Result of Re-elected and DIstrict of California 5?"
    },
    {
        "answer": "SELECT w_m\u00b2 FROM table_name_60 WHERE \u03b7___percentage_ > 16.5 AND technology = \"mj\"",
        "context": "CREATE TABLE table_name_60 (w_m\u00b2 VARCHAR, \u03b7___percentage_ VARCHAR, technology VARCHAR)",
        "question": "What is W/m\u00b2, when \u03b7 (%) is greater than 16.5, and when Technology is MJ?"
    },
    {
        "answer": "SELECT incumbent FROM table_name_99 WHERE district = \"california 5\"",
        "context": "CREATE TABLE table_name_99 (incumbent VARCHAR, district VARCHAR)",
        "question": "Which Incumbent has a District of California 5?"
    },
    {
        "answer": "SELECT venue FROM table_name_89 WHERE competition = \"friendly\" AND date = \"october 16, 2012\"",
        "context": "CREATE TABLE table_name_89 (venue VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "Name the venue for friendly competition october 16, 2012"
    },
    {
        "answer": "SELECT tracking_method FROM table_name_14 WHERE latest_stable_release = \"2.23-05\"",
        "context": "CREATE TABLE table_name_14 (tracking_method VARCHAR, latest_stable_release VARCHAR)",
        "question": "Which tracking method has a latest stable release of 2.23-05?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_63 WHERE passengers = 79 OFFSET 290",
        "context": "CREATE TABLE table_name_63 (rank VARCHAR, passengers VARCHAR)",
        "question": "What is the total rank of the airport that has 79,290 passengers?"
    },
    {
        "answer": "SELECT winning_driver FROM table_name_55 WHERE winning_team = \"engstler motorsport engstler motorsport\" AND date = \"22 july\"",
        "context": "CREATE TABLE table_name_55 (winning_driver VARCHAR, winning_team VARCHAR, date VARCHAR)",
        "question": "Who is the Winning Driver that has a Winning team of Engstler Motorsport Engstler Motorsport and also the Date 22 July?"
    },
    {
        "answer": "SELECT round FROM table_name_26 WHERE winning_team = \"engstler motorsport maurer motorsport\"",
        "context": "CREATE TABLE table_name_26 (round VARCHAR, winning_team VARCHAR)",
        "question": "What Round was the Winning Team Engstler Motorsport Maurer Motorsport?"
    },
    {
        "answer": "SELECT award FROM table_name_31 WHERE organisation = \"star awards\" AND year < 2005 AND result = \"won\"",
        "context": "CREATE TABLE table_name_31 (award VARCHAR, result VARCHAR, organisation VARCHAR, year VARCHAR)",
        "question": "What is the award for the Star Awards earlier than 2005 and the result is won?"
    },
    {
        "answer": "SELECT time_of_broadcast FROM table_name_23 WHERE picture_format = \"4:3\" AND hours = \"20:30\" AND days_of_the_week = \"monday, wednesday, friday\"",
        "context": "CREATE TABLE table_name_23 (time_of_broadcast VARCHAR, days_of_the_week VARCHAR, picture_format VARCHAR, hours VARCHAR)",
        "question": "Name the Time of broadcast has a Picture format of 4:3, and Hours of 20:30, and Days of the week of monday, wednesday, friday?"
    },
    {
        "answer": "SELECT outcome FROM table_name_61 WHERE championship = \"us championships\" AND score_in_the_final = \"5\u20137, 6\u20131, 6\u20133, 6\u20133\"",
        "context": "CREATE TABLE table_name_61 (outcome VARCHAR, championship VARCHAR, score_in_the_final VARCHAR)",
        "question": "Which Outcome has a Championship of us championships, and a Score in the final of 5\u20137, 6\u20131, 6\u20133, 6\u20133?"
    },
    {
        "answer": "SELECT position FROM table_name_97 WHERE pick__number = 321",
        "context": "CREATE TABLE table_name_97 (position VARCHAR, pick__number VARCHAR)",
        "question": "What is the Position of Pick #321?"
    },
    {
        "answer": "SELECT judaism FROM table_name_15 WHERE other = \"0.13%\" AND buddhism = \"0.01%\"",
        "context": "CREATE TABLE table_name_15 (judaism VARCHAR, other VARCHAR, buddhism VARCHAR)",
        "question": "What is the Judaism percentage associated with Buddhism at 0.01% and Other at 0.13%?"
    },
    {
        "answer": "SELECT fastest_lap FROM table_name_76 WHERE winning_team = \"audi sport team abt\" AND circuit = \"oschersleben\"",
        "context": "CREATE TABLE table_name_76 (fastest_lap VARCHAR, winning_team VARCHAR, circuit VARCHAR)",
        "question": "What is the fastest lap of the Oschersleben circuit with Audi Sport Team ABT as the winning team?"
    },
    {
        "answer": "SELECT winning_team FROM table_name_15 WHERE winning_manufacturer = \"audi\" AND winning_driver = \"timo scheider\" AND date = \"31 august\"",
        "context": "CREATE TABLE table_name_15 (winning_team VARCHAR, date VARCHAR, winning_manufacturer VARCHAR, winning_driver VARCHAR)",
        "question": "What is the winning team of the race on 31 August with Audi as the winning manufacturer and Timo Scheider as the winning driver?"
    },
    {
        "answer": "SELECT winning_driver FROM table_name_66 WHERE winning_manufacturer = \"no race\"",
        "context": "CREATE TABLE table_name_66 (winning_driver VARCHAR, winning_manufacturer VARCHAR)",
        "question": "Who is the winning driver of the race with no race as the winning manufacturer?"
    },
    {
        "answer": "SELECT MAX(grid) FROM table_name_11 WHERE rider = \"randy de puniet\" AND laps < 24",
        "context": "CREATE TABLE table_name_11 (grid INTEGER, rider VARCHAR, laps VARCHAR)",
        "question": "Which Grid has a Rider of randy de puniet, and Laps smaller than 24?"
    },
    {
        "answer": "SELECT home FROM table_name_81 WHERE date = \"june 9\"",
        "context": "CREATE TABLE table_name_81 (home VARCHAR, date VARCHAR)",
        "question": "Who was the home team on June 9?"
    },
    {
        "answer": "SELECT name FROM table_name_19 WHERE overall < 224 AND round < 6 AND pick = 15 AND college = \"nebraska\"",
        "context": "CREATE TABLE table_name_19 (name VARCHAR, college VARCHAR, pick VARCHAR, overall VARCHAR, round VARCHAR)",
        "question": "Which player was drafted overall from the college of Nebraska in a round under 6, pick of 15, and overall under 224?"
    },
    {
        "answer": "SELECT score FROM table_name_58 WHERE opponent = \"melanie south\"",
        "context": "CREATE TABLE table_name_58 (score VARCHAR, opponent VARCHAR)",
        "question": "Which Score has an Opponent of melanie south?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_name_3 WHERE position_in_table = \"pre-season\" AND replaced_by = \"thomas thomasberg\"",
        "context": "CREATE TABLE table_name_3 (date_of_appointment VARCHAR, position_in_table VARCHAR, replaced_by VARCHAR)",
        "question": "WHAT IS THE APPOINTMENT DATE WITH A PRE-SEASON POSITION, AND REPLACED BY THOMAS THOMASBERG?"
    },
    {
        "answer": "SELECT prothrombin_time FROM table_name_28 WHERE platelet_count = \"unaffected\" AND bleeding_time = \"unaffected\" AND partial_thromboplastin_time = \"normal or mildly prolonged\"",
        "context": "CREATE TABLE table_name_28 (prothrombin_time VARCHAR, partial_thromboplastin_time VARCHAR, platelet_count VARCHAR, bleeding_time VARCHAR)",
        "question": "Which Prothrombin time has a Platelet count of unaffected, and a Bleeding time of unaffected, and a Partial thromboplastin time of normal or mildly prolonged?"
    },
    {
        "answer": "SELECT score FROM table_name_38 WHERE decision = \"biron\" AND visitor = \"philadelphia\" AND date = \"march 1\"",
        "context": "CREATE TABLE table_name_38 (score VARCHAR, date VARCHAR, decision VARCHAR, visitor VARCHAR)",
        "question": "What is the score when Biron got the decision and Philadelphia was the visitor on March 1?"
    },
    {
        "answer": "SELECT condition FROM table_name_53 WHERE bleeding_time = \"unaffected\" AND partial_thromboplastin_time = \"prolonged\" AND prothrombin_time = \"unaffected\"",
        "context": "CREATE TABLE table_name_53 (condition VARCHAR, prothrombin_time VARCHAR, bleeding_time VARCHAR, partial_thromboplastin_time VARCHAR)",
        "question": "Which Condition has a Bleeding time of unaffected, and a Partial thromboplastin time of prolonged, and a Prothrombin time of unaffected?"
    },
    {
        "answer": "SELECT score FROM table_name_98 WHERE date = \"december 10\"",
        "context": "CREATE TABLE table_name_98 (score VARCHAR, date VARCHAR)",
        "question": "What is the score on december 10?"
    },
    {
        "answer": "SELECT location FROM table_name_14 WHERE date = \"11 november\"",
        "context": "CREATE TABLE table_name_14 (location VARCHAR, date VARCHAR)",
        "question": "What is the location of the race on 11 November?"
    },
    {
        "answer": "SELECT country FROM table_name_93 WHERE notes = \"1 vcd\" AND release_title = \"martial law: substitutes\"",
        "context": "CREATE TABLE table_name_93 (country VARCHAR, notes VARCHAR, release_title VARCHAR)",
        "question": "Which country had a release of 1 VCD titled Martial Law: Substitutes?"
    },
    {
        "answer": "SELECT loser FROM table_name_98 WHERE winner = \"new york jets\" AND year < 1994 AND result = \"37\u201313\"",
        "context": "CREATE TABLE table_name_98 (loser VARCHAR, result VARCHAR, winner VARCHAR, year VARCHAR)",
        "question": "What team was the lower when the winner was the new york jets, and a Year earlier than 1994, and a Result of 37\u201313?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_39 WHERE winner = \"new york jets\" AND result = \"24\u201317\" AND location = \"giants stadium\"",
        "context": "CREATE TABLE table_name_39 (year INTEGER, location VARCHAR, winner VARCHAR, result VARCHAR)",
        "question": "What is the year when the Winner was the new york jets, with a Result of 24\u201317, played at giants stadium?"
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_name_62 WHERE position = \"rec\" AND cfl_team = \"hamilton tiger-cats\"",
        "context": "CREATE TABLE table_name_62 (pick__number INTEGER, position VARCHAR, cfl_team VARCHAR)",
        "question": "What is the lowest Pick #, when Position is REC, and when CFL Team is Hamilton Tiger-Cats?"
    },
    {
        "answer": "SELECT AVG(game) FROM table_name_49 WHERE opponent = \"toronto maple leafs\" AND february < 17",
        "context": "CREATE TABLE table_name_49 (game INTEGER, opponent VARCHAR, february VARCHAR)",
        "question": "What is the game number when the Toronto Maple Leafs were the opponent, and the February was less than 17?"
    },
    {
        "answer": "SELECT results\u00b9 FROM table_name_82 WHERE type_of_game = \"friendly\" AND city = \"belgrade\" AND date = \"november 2\"",
        "context": "CREATE TABLE table_name_82 (results\u00b9 VARCHAR, date VARCHAR, type_of_game VARCHAR, city VARCHAR)",
        "question": "With the Type is game of friendly and the City Belgrade and November 2 as the Date what were the Results\u00b9?"
    },
    {
        "answer": "SELECT version FROM table_name_1 WHERE length = \"4:58\"",
        "context": "CREATE TABLE table_name_1 (version VARCHAR, length VARCHAR)",
        "question": "What is the version shown for the Length of 4:58?"
    },
    {
        "answer": "SELECT loss FROM table_name_32 WHERE score = \"postponed (rain) rescheduled for june 27\"",
        "context": "CREATE TABLE table_name_32 (loss VARCHAR, score VARCHAR)",
        "question": "Score of postponed (rain) rescheduled for June 27 had what loss?"
    },
    {
        "answer": "SELECT laps AS Led FROM table_name_29 WHERE grid = \"15\"",
        "context": "CREATE TABLE table_name_29 (laps VARCHAR, grid VARCHAR)",
        "question": "How many laps led when the Grid was 15?"
    },
    {
        "answer": "SELECT coronie FROM table_name_92 WHERE nickerie = \"0.7%\"",
        "context": "CREATE TABLE table_name_92 (coronie VARCHAR, nickerie VARCHAR)",
        "question": "What is the coronie with a 0.7% nickerie?"
    },
    {
        "answer": "SELECT name FROM table_name_90 WHERE stage = \"ss5\"",
        "context": "CREATE TABLE table_name_90 (name VARCHAR, stage VARCHAR)",
        "question": "What is the Name of the SS5 Stage?"
    },
    {
        "answer": "SELECT suriname FROM table_name_62 WHERE brokopondo = \"16.8%\"",
        "context": "CREATE TABLE table_name_62 (suriname VARCHAR, brokopondo VARCHAR)",
        "question": "What is the suriname with a 16.8% brokopondo?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_54 WHERE silver < 0",
        "context": "CREATE TABLE table_name_54 (total VARCHAR, silver INTEGER)",
        "question": "What is the sum of the total number of medals when silver is less than 0?"
    },
    {
        "answer": "SELECT term_start FROM table_name_53 WHERE born_died = \"prime ministers 1939 - 1943\"",
        "context": "CREATE TABLE table_name_53 (term_start VARCHAR, born_died VARCHAR)",
        "question": "What is Term Start, when Born-Died is Prime Ministers 1939 - 1943?"
    },
    {
        "answer": "SELECT week_3 FROM table_name_99 WHERE team = \"mark/jennifer\"",
        "context": "CREATE TABLE table_name_99 (week_3 VARCHAR, team VARCHAR)",
        "question": "Name the week 3 for team of mark/jennifer"
    },
    {
        "answer": "SELECT purpose FROM table_name_65 WHERE frequency = \"102.3\"",
        "context": "CREATE TABLE table_name_65 (purpose VARCHAR, frequency VARCHAR)",
        "question": "What is the purpose for Frequency of 102.3?"
    },
    {
        "answer": "SELECT AVG(gold) FROM table_name_95 WHERE silver < 107 AND bronze > 42 AND rank = \"3\"",
        "context": "CREATE TABLE table_name_95 (gold INTEGER, rank VARCHAR, silver VARCHAR, bronze VARCHAR)",
        "question": "What is the average Gold, when Silver is less than 107, when Bronze is greater than 42, and when Rank is 3?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_40 WHERE director = \"erik clausen\" AND english_title = \"the dark side of the moon\"",
        "context": "CREATE TABLE table_name_40 (year INTEGER, director VARCHAR, english_title VARCHAR)",
        "question": "What is the submission Year of the Film The Dark Side of the Moon directed by Erik Clausen?"
    },
    {
        "answer": "SELECT region FROM table_name_47 WHERE catalog = \"576 097-2\"",
        "context": "CREATE TABLE table_name_47 (region VARCHAR, catalog VARCHAR)",
        "question": "Name the region with catalog of 576 097-2"
    },
    {
        "answer": "SELECT nickname FROM table_name_38 WHERE affiliation = \"public\" AND founded > 1838 AND location = \"harrisonburg, va\"",
        "context": "CREATE TABLE table_name_38 (nickname VARCHAR, location VARCHAR, affiliation VARCHAR, founded VARCHAR)",
        "question": "What school has a public nickname, founded after 1838 in Harrisonburg, Va?"
    },
    {
        "answer": "SELECT second_vice_president FROM table_name_74 WHERE third_vice_president = \"gen. juan alonso\" AND inaugurated = \"15 march 1940\"",
        "context": "CREATE TABLE table_name_74 (second_vice_president VARCHAR, third_vice_president VARCHAR, inaugurated VARCHAR)",
        "question": "What is Second Vice President, when Third Vice President is \"Gen. Juan Alonso\", and when Inaugurated is \"15 March 1940\"?"
    },
    {
        "answer": "SELECT left_office FROM table_name_1 WHERE inaugurated = \"15 march 1930\"",
        "context": "CREATE TABLE table_name_1 (left_office VARCHAR, inaugurated VARCHAR)",
        "question": "What is Left Office, when Inaugurate is \"15 March 1930\"?"
    },
    {
        "answer": "SELECT wysiwyg_editor FROM table_name_79 WHERE user_selectable_themes = \"yes\" AND unread_message_tracking = \"session\" AND image_attachment = \"plugin\"",
        "context": "CREATE TABLE table_name_79 (wysiwyg_editor VARCHAR, image_attachment VARCHAR, user_selectable_themes VARCHAR, unread_message_tracking VARCHAR)",
        "question": "Which WYSIWYG Editor has a User-selectable themes of yes, and an Unread message tracking of session, and an Image attachment of plugin?"
    },
    {
        "answer": "SELECT wysiwyg_editor FROM table_name_75 WHERE image_attachment = \"yes\" AND calendar = \"plugin\"",
        "context": "CREATE TABLE table_name_75 (wysiwyg_editor VARCHAR, image_attachment VARCHAR, calendar VARCHAR)",
        "question": "Which WYSIWYG Editor has an Image attachment of yes, and a Calendar of plugin?"
    },
    {
        "answer": "SELECT calendar FROM table_name_91 WHERE wysiwyg_editor = \"no\" AND unread_message_tracking = \"session\" AND image_attachment = \"no\"",
        "context": "CREATE TABLE table_name_91 (calendar VARCHAR, image_attachment VARCHAR, wysiwyg_editor VARCHAR, unread_message_tracking VARCHAR)",
        "question": "Which Calendar has a WYSIWYG Editor of no, and an Unread message tracking of session, and an Image attachment of no?"
    },
    {
        "answer": "SELECT title_in_english FROM table_name_49 WHERE format = \"lp\" AND original_title = \"\u0442\u043e \u043b\u0438 \u0435\u0449\u0451 \u0431\u0443\u0434\u0435\u0442\"",
        "context": "CREATE TABLE table_name_49 (title_in_english VARCHAR, format VARCHAR, original_title VARCHAR)",
        "question": "What is the english title with a lp format and an Original title of \u0442\u043e \u043b\u0438 \u0435\u0449\u0451 \u0431\u0443\u0434\u0435\u0442?"
    },
    {
        "answer": "SELECT round FROM table_name_26 WHERE opponent = \"joe stevenson\"",
        "context": "CREATE TABLE table_name_26 (round VARCHAR, opponent VARCHAR)",
        "question": "What was the round when he fought Joe Stevenson?"
    },
    {
        "answer": "SELECT opponent FROM table_name_7 WHERE location_attendance = \"delta center\" AND record = \"27-13\"",
        "context": "CREATE TABLE table_name_7 (opponent VARCHAR, location_attendance VARCHAR, record VARCHAR)",
        "question": "Who was the opponent when they played at Delta Center with a record of 27-13?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_22 WHERE tournament = \"world cross country championships\" AND venue = \"st etienne, france\" AND extra = \"team competition\" AND result = \"8th\"",
        "context": "CREATE TABLE table_name_22 (year INTEGER, result VARCHAR, extra VARCHAR, tournament VARCHAR, venue VARCHAR)",
        "question": "What is the average year that anna thompson had an 8th place result in team competition at the world cross country championships in st etienne, france with"
    },
    {
        "answer": "SELECT AVG(partial_failures) FROM table_name_53 WHERE country = \"russia\" AND failures > 0 AND family = \"angara\" AND launches > 1",
        "context": "CREATE TABLE table_name_53 (partial_failures INTEGER, launches VARCHAR, family VARCHAR, country VARCHAR, failures VARCHAR)",
        "question": "What is the partial failure for the Country of russia, and a Failure larger than 0, and a Family of angara, and a Launch larger than 1?"
    },
    {
        "answer": "SELECT AVG(loss) FROM table_name_80 WHERE last_5 = \"4-1\" AND streak = \"w2\" AND pa_per_game < 88.43",
        "context": "CREATE TABLE table_name_80 (loss INTEGER, pa_per_game VARCHAR, last_5 VARCHAR, streak VARCHAR)",
        "question": "Which Loss has a Last 5 of 4-1, a Streak of w2, and a PA per game smaller than 88.43?"
    },
    {
        "answer": "SELECT score FROM table_name_75 WHERE opponent = \"tigers\" AND record = \"78-64\"",
        "context": "CREATE TABLE table_name_75 (score VARCHAR, opponent VARCHAR, record VARCHAR)",
        "question": "what score has the opponent of tigers and a record of 78-64?"
    },
    {
        "answer": "SELECT event FROM table_name_9 WHERE round = \"1\" AND opponent = \"lance wipf\"",
        "context": "CREATE TABLE table_name_9 (event VARCHAR, round VARCHAR, opponent VARCHAR)",
        "question": "What was the event for round 1 against Lance Wipf?"
    },
    {
        "answer": "SELECT COUNT(area__km\u00b2_) FROM table_name_13 WHERE population__2007_ = 6 OFFSET 176",
        "context": "CREATE TABLE table_name_13 (area__km\u00b2_ VARCHAR, population__2007_ VARCHAR)",
        "question": "What is the total number of Area (km\u00b2), when Population (2007) is 6,176?"
    },
    {
        "answer": "SELECT issue_date_s_ FROM table_name_32 WHERE artist = \"men at work\"",
        "context": "CREATE TABLE table_name_32 (issue_date_s_ VARCHAR, artist VARCHAR)",
        "question": "Which Issue Date(s) has an Artist of men at work?"
    },
    {
        "answer": "SELECT date FROM table_name_1 WHERE week > 4 AND venue = \"city stadium\" AND attendance > 14 OFFSET 297",
        "context": "CREATE TABLE table_name_1 (date VARCHAR, attendance VARCHAR, week VARCHAR, venue VARCHAR)",
        "question": "Which date's week was more than 4 with the venue being City Stadium and where the attendance was more than 14,297?"
    },
    {
        "answer": "SELECT pick__number FROM table_name_97 WHERE position = \"defensive tackle\" AND player = \"lorenzo freeman\"",
        "context": "CREATE TABLE table_name_97 (pick__number VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "What was the pick# for Lorenzo Freeman as defensive tackle?"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_name_87 WHERE player = \"greg harris\"",
        "context": "CREATE TABLE table_name_87 (pick__number INTEGER, player VARCHAR)",
        "question": "What is the largest pick# for Greg Harris?"
    },
    {
        "answer": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1",
        "context": "CREATE TABLE countrylanguage (CountryCode VARCHAR); CREATE TABLE country (Name VARCHAR, Code VARCHAR)",
        "question": "What is name of the country that speaks the largest number of languages?"
    },
    {
        "answer": "SELECT SUM(pick__number) FROM table_name_26 WHERE player = \"don majkowski\"",
        "context": "CREATE TABLE table_name_26 (pick__number INTEGER, player VARCHAR)",
        "question": "What is the sum of pick# for Don Majkowski?3"
    },
    {
        "answer": "SELECT player FROM table_name_83 WHERE total > 148 AND to_par = 12",
        "context": "CREATE TABLE table_name_83 (player VARCHAR, total VARCHAR, to_par VARCHAR)",
        "question": "What is Player, when Total is greater than 148, and when To Par is \"12\"?"
    },
    {
        "answer": "SELECT first FROM table_name_12 WHERE uni_number > 34 AND throws = \"r\" AND position = \"rhp\" AND surname = \"stockman\"",
        "context": "CREATE TABLE table_name_12 (first VARCHAR, surname VARCHAR, position VARCHAR, uni_number VARCHAR, throws VARCHAR)",
        "question": "Which First has a Uni # larger than 34, and Throws of r, and a Position of rhp, and a Surname of stockman?"
    },
    {
        "answer": "SELECT points_difference FROM table_name_23 WHERE played = \"32\" AND points_for = \"840\"",
        "context": "CREATE TABLE table_name_23 (points_difference VARCHAR, played VARCHAR, points_for VARCHAR)",
        "question": "Which Points difference has Played of 32, and Points for of 840?"
    },
    {
        "answer": "SELECT electrics FROM table_name_28 WHERE engine = \"175cc, bhp (kw)\" AND model_name = \"d10 sports & bushman\"",
        "context": "CREATE TABLE table_name_28 (electrics VARCHAR, engine VARCHAR, model_name VARCHAR)",
        "question": "Which Electrics has an Engine of 175cc, bhp (kw), and a Model Name of d10 sports & bushman?"
    },
    {
        "answer": "SELECT color_commentator_s_ FROM table_name_41 WHERE channel = \"fsn new england\" AND year = \"2004-05\"",
        "context": "CREATE TABLE table_name_41 (color_commentator_s_ VARCHAR, channel VARCHAR, year VARCHAR)",
        "question": "Which Color commentator has a Channel of fsn new england, and a Year of 2004-05?"
    },
    {
        "answer": "SELECT stadium FROM table_name_65 WHERE club = \"fc seoul\"",
        "context": "CREATE TABLE table_name_65 (stadium VARCHAR, club VARCHAR)",
        "question": "Which stadium has FC Seoul?"
    },
    {
        "answer": "SELECT AVG(home_run) FROM table_name_43 WHERE location = \"tiger stadium\" AND date = \"june 17\"",
        "context": "CREATE TABLE table_name_43 (home_run INTEGER, location VARCHAR, date VARCHAR)",
        "question": "On June 17 in Tiger stadium, what was the average home run?"
    },
    {
        "answer": "SELECT score FROM table_name_48 WHERE home = \"new york rangers\" AND record = \"8\u201327\u20135\"",
        "context": "CREATE TABLE table_name_48 (score VARCHAR, home VARCHAR, record VARCHAR)",
        "question": "What is the Score of the game with the New York Rangers Home team with a Record of 8\u201327\u20135?"
    },
    {
        "answer": "SELECT oberliga_baden_w\u00fcrttemberg FROM table_name_41 WHERE season = \"1991-92\"",
        "context": "CREATE TABLE table_name_41 (oberliga_baden_w\u00fcrttemberg VARCHAR, season VARCHAR)",
        "question": "which Oberliga Baden-W\u00fcrttemberg has a Season of 1991-92?"
    },
    {
        "answer": "SELECT oberliga_s\u00fcdwest FROM table_name_60 WHERE oberliga_baden_w\u00fcrttemberg = \"sv sandhausen\" AND season = \"1984-85\"",
        "context": "CREATE TABLE table_name_60 (oberliga_s\u00fcdwest VARCHAR, oberliga_baden_w\u00fcrttemberg VARCHAR, season VARCHAR)",
        "question": "which Oberliga S\u00fcdwes has an Oberliga Baden-W\u00fcrttemberg of sv sandhausen in 1984-85?"
    },
    {
        "answer": "SELECT COUNT(podium) FROM table_name_91 WHERE race > 14 AND season = \"1996\" AND flap < 9",
        "context": "CREATE TABLE table_name_91 (podium VARCHAR, flap VARCHAR, race VARCHAR, season VARCHAR)",
        "question": "How many podiums had a race higher than 14 in 1996 and a Flap lower than 9?"
    },
    {
        "answer": "SELECT SUM(sequence_length__aa_) FROM table_name_67 WHERE common_name = \"purple sea urchin\" AND divergence_from_human_lineage__mya_ < 742.9",
        "context": "CREATE TABLE table_name_67 (sequence_length__aa_ INTEGER, common_name VARCHAR, divergence_from_human_lineage__mya_ VARCHAR)",
        "question": "What is the sequence length (aa) of the protein with the common name Purple Sea Urchin and a divergence from human lineage less than 742.9?"
    },
    {
        "answer": "SELECT series FROM table_name_3 WHERE opponent = \"calgary flames\" AND score = \"9\u20134\"",
        "context": "CREATE TABLE table_name_3 (series VARCHAR, opponent VARCHAR, score VARCHAR)",
        "question": "Which Series has an Opponent of calgary flames, and a Score of 9\u20134?"
    },
    {
        "answer": "SELECT date FROM table_name_68 WHERE year < 1988 AND loser = \"philadelphia eagles\" AND location = \"giants stadium\" AND result = \"21-0\"",
        "context": "CREATE TABLE table_name_68 (date VARCHAR, result VARCHAR, location VARCHAR, year VARCHAR, loser VARCHAR)",
        "question": "Which date had a year under 1988, loser of Philadelphia Eagles, location of Giants Stadium, and a result of 21-0?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_6 WHERE gold > 0 AND participants < 10",
        "context": "CREATE TABLE table_name_6 (rank INTEGER, gold VARCHAR, participants VARCHAR)",
        "question": "What is listed as the highest Rank that has a Gold that's larger than 0, and Participants that's smaller than 10?"
    },
    {
        "answer": "SELECT SUM(participants) FROM table_name_38 WHERE silver < 0",
        "context": "CREATE TABLE table_name_38 (participants INTEGER, silver INTEGER)",
        "question": "What is the total number of Participants that has Silver that's smaller than 0?"
    },
    {
        "answer": "SELECT lead FROM table_name_22 WHERE skip = \"kirsty balfour\"",
        "context": "CREATE TABLE table_name_22 (lead VARCHAR, skip VARCHAR)",
        "question": "Which lead has Kirsty Balfour as second?"
    },
    {
        "answer": "SELECT date FROM table_name_24 WHERE winner = \"tom kite (10)\"",
        "context": "CREATE TABLE table_name_24 (date VARCHAR, winner VARCHAR)",
        "question": "What is the date where the winner was Tom Kite (10)?"
    },
    {
        "answer": "SELECT SUM(laps) FROM table_name_86 WHERE manufacturer = \"gilera\" AND time = \"40:19.910\" AND grid > 3",
        "context": "CREATE TABLE table_name_86 (laps INTEGER, grid VARCHAR, manufacturer VARCHAR, time VARCHAR)",
        "question": "What is the total laps when manufacturer of gilera has time of 40:19.910 and grid is larger than 3?"
    },
    {
        "answer": "SELECT SUM(rank) FROM table_name_66 WHERE heat > 4",
        "context": "CREATE TABLE table_name_66 (rank INTEGER, heat INTEGER)",
        "question": "what is the rank when the heat is more than 4?"
    },
    {
        "answer": "SELECT tie_no FROM table_name_36 WHERE away_team = \"tranmere rovers\"",
        "context": "CREATE TABLE table_name_36 (tie_no VARCHAR, away_team VARCHAR)",
        "question": "Which tie number had an away team of the Tranmere Rovers?"
    },
    {
        "answer": "SELECT series_ep FROM table_name_22 WHERE segment_d = \"fluorescent tubes\"",
        "context": "CREATE TABLE table_name_22 (series_ep VARCHAR, segment_d VARCHAR)",
        "question": "What is the series episode number with a segment of D, and having fluorescent tubes?"
    },
    {
        "answer": "SELECT born_died FROM table_name_8 WHERE entered_office = \"13 september 1229\"",
        "context": "CREATE TABLE table_name_8 (born_died VARCHAR, entered_office VARCHAR)",
        "question": "What is the born-died that has office of 13 September 1229 as the entered?"
    },
    {
        "answer": "SELECT blagojevich__d_ FROM table_name_5 WHERE source = \"zogby/wsj\" AND topinka__r_ = \"33.2%\"",
        "context": "CREATE TABLE table_name_5 (blagojevich__d_ VARCHAR, source VARCHAR, topinka__r_ VARCHAR)",
        "question": "Which Blagojevich (D) has a Source of zogby/wsj, and a Topinka (R) of 33.2%?"
    },
    {
        "answer": "SELECT player FROM table_name_17 WHERE pick__number < 61 AND college = \"texas\"",
        "context": "CREATE TABLE table_name_17 (player VARCHAR, pick__number VARCHAR, college VARCHAR)",
        "question": "WHo is the Player got a Pick # smaller than 61, and a College of texas?"
    },
    {
        "answer": "SELECT season FROM table_name_98 WHERE number_of_contestants > 12 AND winner = \"greydis gil\"",
        "context": "CREATE TABLE table_name_98 (season VARCHAR, number_of_contestants VARCHAR, winner VARCHAR)",
        "question": "What season had more than 12 contestants in which greydis gil won?"
    },
    {
        "answer": "SELECT record_description FROM table_name_96 WHERE achievement = \"m (ft)\" AND type = \"mi-10r\" AND pilot = \"v.p. koloshenko\" AND date = \"28 may 1965\"",
        "context": "CREATE TABLE table_name_96 (record_description VARCHAR, date VARCHAR, pilot VARCHAR, achievement VARCHAR, type VARCHAR)",
        "question": "Achievement of m (ft), and a Type of mi-10r, and a Pilot of v.p. koloshenko, and a Date of 28 may 1965 had what record description?"
    },
    {
        "answer": "SELECT death FROM table_name_86 WHERE spouse = \"charles ii\"",
        "context": "CREATE TABLE table_name_86 (death VARCHAR, spouse VARCHAR)",
        "question": "When was the date of death for the person married to Charles II?"
    },
    {
        "answer": "SELECT MIN(draws) FROM table_name_98 WHERE ntfa_div_2 = \"lilydale\"",
        "context": "CREATE TABLE table_name_98 (draws INTEGER, ntfa_div_2 VARCHAR)",
        "question": "What is the lowest number of draws of the NTFA Div 2 Lilydale?"
    },
    {
        "answer": "SELECT result FROM table_name_2 WHERE year > 1993 AND round = \"first four\"",
        "context": "CREATE TABLE table_name_2 (result VARCHAR, year VARCHAR, round VARCHAR)",
        "question": "What is the result after 1993 of the first four rounds?"
    },
    {
        "answer": "SELECT MAX(area__km_2__) FROM table_name_41 WHERE location = \"alaska\" AND population__2000_ = \"39\" AND rank > 19",
        "context": "CREATE TABLE table_name_41 (area__km_2__ INTEGER, rank VARCHAR, location VARCHAR, population__2000_ VARCHAR)",
        "question": "What is the largest area in Alaska with a population of 39 and rank over 19?"
    },
    {
        "answer": "SELECT opponent FROM table_name_86 WHERE bsu_head_coach = \"bobby dye\" AND year < 1994",
        "context": "CREATE TABLE table_name_86 (opponent VARCHAR, bsu_head_coach VARCHAR, year VARCHAR)",
        "question": "Who was the opponent before 1994 with bobby dye as the BSU head coach?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_79 WHERE position = \"s\" AND college = \"mississippi\" AND overall < 214",
        "context": "CREATE TABLE table_name_79 (round INTEGER, overall VARCHAR, position VARCHAR, college VARCHAR)",
        "question": "What is the average round of the s position player from the college of Mississippi and has an overall less than 214?"
    },
    {
        "answer": "SELECT local_authority FROM table_name_46 WHERE zone_2007 = \"outside zones\" AND zone_2008 = \"outside zones\" AND zone_2010 = \"outside zones\" AND station = \"waltham cross\"",
        "context": "CREATE TABLE table_name_46 (local_authority VARCHAR, station VARCHAR, zone_2010 VARCHAR, zone_2007 VARCHAR, zone_2008 VARCHAR)",
        "question": "Which Local authority has a Zone 2007 of outside zones, and a Zone 2008 of outside zones, and a Zone 2010 of outside zones, and a Station of waltham cross?"
    },
    {
        "answer": "SELECT touchdowns FROM table_name_71 WHERE extra_points = 0 AND position = \"left halfback\" AND player = \"hal weeks\"",
        "context": "CREATE TABLE table_name_71 (touchdowns VARCHAR, player VARCHAR, extra_points VARCHAR, position VARCHAR)",
        "question": "How many touchdowns are there when there were 0 extra points and Hal Weeks had left halfback?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_65 WHERE silver = 16 AND bronze < 32",
        "context": "CREATE TABLE table_name_65 (total INTEGER, silver VARCHAR, bronze VARCHAR)",
        "question": "How many Total medals did the country with 16 Silver and less than 32 Bronze receive?"
    },
    {
        "answer": "SELECT MAX(field_goals) FROM table_name_7 WHERE touchdowns > 1 AND extra_points > 0",
        "context": "CREATE TABLE table_name_7 (field_goals INTEGER, touchdowns VARCHAR, extra_points VARCHAR)",
        "question": "What is the highest field goals when there were more than 1 touchdown and 0 extra points?"
    },
    {
        "answer": "SELECT AVG(episode) AS number FROM table_name_96 WHERE original_airdate = \"march 21, 2010\" AND season < 3",
        "context": "CREATE TABLE table_name_96 (episode INTEGER, original_airdate VARCHAR, season VARCHAR)",
        "question": "What is the average Episode Number, when Original Airdate is March 21, 2010, and when Season is less than 3?"
    },
    {
        "answer": "SELECT fcc_info FROM table_name_51 WHERE city_of_license = \"irmo, south carolina\"",
        "context": "CREATE TABLE table_name_51 (fcc_info VARCHAR, city_of_license VARCHAR)",
        "question": "What is the FCC info of the translator with an Irmo, South Carolina city license?"
    },
    {
        "answer": "SELECT decision FROM table_name_5 WHERE visitor = \"calgary\" AND score = \"2 \u2013 1\" AND series = \"4 \u2013 3\"",
        "context": "CREATE TABLE table_name_5 (decision VARCHAR, series VARCHAR, visitor VARCHAR, score VARCHAR)",
        "question": "Which Decision has a Visitor of calgary, a Score of 2 \u2013 1, and a Series of 4 \u2013 3?"
    },
    {
        "answer": "SELECT decision FROM table_name_4 WHERE visitor = \"vancouver\" AND score = \"5 \u2013 4\"",
        "context": "CREATE TABLE table_name_4 (decision VARCHAR, visitor VARCHAR, score VARCHAR)",
        "question": "Which Decision has a Visitor of vancouver, and a Score of 5 \u2013 4?"
    },
    {
        "answer": "SELECT race_4 FROM table_name_55 WHERE race_3 = \"dns\" AND race_2 = \"27\"",
        "context": "CREATE TABLE table_name_55 (race_4 VARCHAR, race_3 VARCHAR, race_2 VARCHAR)",
        "question": "What's the value for race 4 when race 3 is dns and race 2 is 27?"
    },
    {
        "answer": "SELECT MAX(total) FROM table_name_41 WHERE type = \"winter\" AND athlete = \"clara hughes\"",
        "context": "CREATE TABLE table_name_41 (total INTEGER, type VARCHAR, athlete VARCHAR)",
        "question": "What is the highest total medals winter athlete Clara Hughes has?"
    },
    {
        "answer": "SELECT place FROM table_name_88 WHERE money___$__ = \"20,903\" AND player = \"bob gilder\"",
        "context": "CREATE TABLE table_name_88 (place VARCHAR, money___$__ VARCHAR, player VARCHAR)",
        "question": "What is the place when the player is Bob Gilder and the money was $20,903?"
    },
    {
        "answer": "SELECT started FROM table_name_23 WHERE country = \"eng\" AND loan_club = \"sunderland\" AND end_source = \"south wales echo\"",
        "context": "CREATE TABLE table_name_23 (started VARCHAR, end_source VARCHAR, country VARCHAR, loan_club VARCHAR)",
        "question": "When was the loan started when the coutry is eng, the loan club is sunderland and the end source is south wales echo?"
    },
    {
        "answer": "SELECT loan_club FROM table_name_28 WHERE start_source = \"bbc sport\" AND started = \"9 february\"",
        "context": "CREATE TABLE table_name_28 (loan_club VARCHAR, start_source VARCHAR, started VARCHAR)",
        "question": "what is the loan club with the start source is bbc sport and started on 9 february?"
    },
    {
        "answer": "SELECT owner FROM table_name_77 WHERE finished < 15 AND trainer = \"steve asmussen\" AND horse = \"z fortune\"",
        "context": "CREATE TABLE table_name_77 (owner VARCHAR, horse VARCHAR, finished VARCHAR, trainer VARCHAR)",
        "question": "What is Owner, when Finished is less than 15, when Trainer is \"Steve Asmussen\", and when Horse is \"Z Fortune\"?"
    },
    {
        "answer": "SELECT game FROM table_name_33 WHERE home_team = \"chicago bulls\" AND result = \"81-83 (3-2)\"",
        "context": "CREATE TABLE table_name_33 (game VARCHAR, home_team VARCHAR, result VARCHAR)",
        "question": "Home Team of chicago bulls, and a Result of 81-83 (3-2) involved what game?"
    },
    {
        "answer": "SELECT draws FROM table_name_61 WHERE losses > 8 AND points = 13",
        "context": "CREATE TABLE table_name_61 (draws VARCHAR, losses VARCHAR, points VARCHAR)",
        "question": "What is the number of draws for the team with more than 8 losses and 13 points?"
    },
    {
        "answer": "SELECT victory_margin__in_lengths_ FROM table_name_74 WHERE finish = \"1st\" AND jockey = \"kent desormeaux\" AND time = \"1:35.66\"",
        "context": "CREATE TABLE table_name_74 (victory_margin__in_lengths_ VARCHAR, time VARCHAR, finish VARCHAR, jockey VARCHAR)",
        "question": "What was the victory margin for a finish of 1st with a rider of Kent Desormeaux, with a time of 1:35.66?"
    },
    {
        "answer": "SELECT SUM(population) FROM table_name_22 WHERE altitude__mslm_ > 98 AND density__inhabitants_km_2__ > 5869 AND rank = \"1st\"",
        "context": "CREATE TABLE table_name_22 (population INTEGER, rank VARCHAR, altitude__mslm_ VARCHAR, density__inhabitants_km_2__ VARCHAR)",
        "question": "Which Population has an Altitude (mslm) larger than 98, and a Density (inhabitants/km 2) larger than 5869, and a Rank of 1st?"
    },
    {
        "answer": "SELECT MAX(population) FROM table_name_99 WHERE density__inhabitants_km_2__ > 2805.8 AND rank = \"1st\" AND altitude__mslm_ < 122",
        "context": "CREATE TABLE table_name_99 (population INTEGER, altitude__mslm_ VARCHAR, density__inhabitants_km_2__ VARCHAR, rank VARCHAR)",
        "question": "Which Population is the highest one that has a Density (inhabitants/km 2) larger than 2805.8, and a Rank of 1st, and an Altitude (mslm) smaller than 122?"
    },
    {
        "answer": "SELECT MAX(altitude__mslm_) FROM table_name_20 WHERE area__km_2__ < 13.01 AND population = 74536 AND density__inhabitants_km_2__ > 5869",
        "context": "CREATE TABLE table_name_20 (altitude__mslm_ INTEGER, density__inhabitants_km_2__ VARCHAR, area__km_2__ VARCHAR, population VARCHAR)",
        "question": "Which Altitude (mslm) is the highest one that has an Area (km 2) smaller than 13.01, and a Population of 74536, and a Density (inhabitants/km 2) larger than 5869?"
    },
    {
        "answer": "SELECT MAX(altitude__mslm_) FROM table_name_47 WHERE city = \"legnano\" AND population > 59492",
        "context": "CREATE TABLE table_name_47 (altitude__mslm_ INTEGER, city VARCHAR, population VARCHAR)",
        "question": "Which Altitude (mslm) is the highest one that has a City of legnano, and a Population larger than 59492?"
    },
    {
        "answer": "SELECT MAX(goals_for) FROM table_name_74 WHERE position > 2 AND lost > 18 AND team = \"matlock town\" AND goals_against > 79",
        "context": "CREATE TABLE table_name_74 (goals_for INTEGER, goals_against VARCHAR, team VARCHAR, position VARCHAR, lost VARCHAR)",
        "question": "Which Goals For has a Position larger than 2, a Lost larger than 18, a Team of matlock town, and a Goals Against larger than 79?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_26 WHERE position = \"ls\"",
        "context": "CREATE TABLE table_name_26 (round INTEGER, position VARCHAR)",
        "question": "What is the lowest round that a pick had a position of ls?"
    },
    {
        "answer": "SELECT AVG(spectators) FROM table_name_60 WHERE round = \"group h\"",
        "context": "CREATE TABLE table_name_60 (spectators INTEGER, round VARCHAR)",
        "question": "What are the average spectators from the Group H Round?"
    },
    {
        "answer": "SELECT score FROM table_name_30 WHERE opponent = \"@ edmonton oilers\" AND game > 1 AND series = \"oilers lead 3\u20132\"",
        "context": "CREATE TABLE table_name_30 (score VARCHAR, series VARCHAR, opponent VARCHAR, game VARCHAR)",
        "question": "Opponent of @ edmonton oilers, and a Game larger than 1, and a Series of oilers lead 3\u20132 had what score?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_53 WHERE time = \"n/a\" AND location = \"alabama , united states\" AND record = \"1-2-0\"",
        "context": "CREATE TABLE table_name_53 (round VARCHAR, record VARCHAR, time VARCHAR, location VARCHAR)",
        "question": "What is the total number of Round(s), when Time is \"N/A\", when Location is \"Alabama , United States\", and when Record is \"1-2-0\"?"
    },
    {
        "answer": "SELECT new_returning_same_network FROM table_name_8 WHERE retitled_as_same = \"same\" AND last_aired > 1984",
        "context": "CREATE TABLE table_name_8 (new_returning_same_network VARCHAR, retitled_as_same VARCHAR, last_aired VARCHAR)",
        "question": "Which New/Returning/Same Network has a Retitled as/Same of same, and a Last Aired larger than 1984?"
    },
    {
        "answer": "SELECT to_par FROM table_name_93 WHERE country = \"united states\" AND score < 72 AND place = \"t3\" AND player = \"ed furgol\"",
        "context": "CREATE TABLE table_name_93 (to_par VARCHAR, player VARCHAR, place VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "How far to par did ed furgol from the United States get when he scored less than 72 and was placed at t3?"
    },
    {
        "answer": "SELECT SUM(share) FROM table_name_42 WHERE rating > 1.2 AND rank__timeslot_ = 3 AND viewers__millions_ = 6.07",
        "context": "CREATE TABLE table_name_42 (share INTEGER, viewers__millions_ VARCHAR, rating VARCHAR, rank__timeslot_ VARCHAR)",
        "question": "What is the sum of share with a rating larger than 1.2, a 3 rank timeslot, and 6.07 million viewers?"
    },
    {
        "answer": "SELECT score FROM table_name_35 WHERE opponents = \"pkns fc\" AND date = \"january 8, 2006\"",
        "context": "CREATE TABLE table_name_35 (score VARCHAR, opponents VARCHAR, date VARCHAR)",
        "question": "Which Score has Opponents of pkns fc, and a Date of january 8, 2006?"
    },
    {
        "answer": "SELECT date FROM table_name_52 WHERE competition = \"pl group b\" AND opponents = \"police\" AND venue = \"selayang municipal council stadium\"",
        "context": "CREATE TABLE table_name_52 (date VARCHAR, venue VARCHAR, competition VARCHAR, opponents VARCHAR)",
        "question": "Which Date has a Competition of pl group b, and Opponents of police, and a Venue of selayang municipal council stadium?"
    },
    {
        "answer": "SELECT score FROM table_name_68 WHERE loss = \"chad fox (3\u20133)\"",
        "context": "CREATE TABLE table_name_68 (score VARCHAR, loss VARCHAR)",
        "question": "What was the score of the game that had a loss of Chad Fox (3\u20133)?"
    },
    {
        "answer": "SELECT railway FROM table_name_58 WHERE location = \"shildon\" AND objectnumber = \"1975-7022\"",
        "context": "CREATE TABLE table_name_58 (railway VARCHAR, location VARCHAR, objectnumber VARCHAR)",
        "question": "Which Railway has a Location of shildon, and an ObjectNumber of 1975-7022?"
    },
    {
        "answer": "SELECT MAX(bronze) FROM table_name_44 WHERE rank > 1 AND nation = \"dominican republic\" AND total > 4",
        "context": "CREATE TABLE table_name_44 (bronze INTEGER, total VARCHAR, rank VARCHAR, nation VARCHAR)",
        "question": "Which Bronze is the highest one that has a Rank larger than 1, and a Nation of dominican republic, and a Total larger than 4?"
    },
    {
        "answer": "SELECT AVG(nominated_by_the_taoiseach) FROM table_name_99 WHERE industrial_and_commercial_panel < 9 AND administrative_panel > 0 AND cultural_and_educational_panel > 2 AND total < 29",
        "context": "CREATE TABLE table_name_99 (nominated_by_the_taoiseach INTEGER, total VARCHAR, cultural_and_educational_panel VARCHAR, industrial_and_commercial_panel VARCHAR, administrative_panel VARCHAR)",
        "question": "What is the average nominated of the composition nominated by Taioseach with an Industrial and Commercial panel less than 9, an administrative panel greater than 0, a cultural and educational panel greater than 2, and a total less than 29?"
    },
    {
        "answer": "SELECT AVG(administrative_panel) FROM table_name_36 WHERE nominated_by_the_taoiseach = 0 AND total < 4",
        "context": "CREATE TABLE table_name_36 (administrative_panel INTEGER, nominated_by_the_taoiseach VARCHAR, total VARCHAR)",
        "question": "What is the average administrative panel of the composition nominated by Taoiseach 0 times with a total less than 4?"
    },
    {
        "answer": "SELECT record FROM table_name_23 WHERE time = \"n/a\"",
        "context": "CREATE TABLE table_name_23 (record VARCHAR, time VARCHAR)",
        "question": "Which Record has a Time of n/a?"
    },
    {
        "answer": "SELECT AVG(agricultural_panel) FROM table_name_62 WHERE labour_panel < 6 AND nominated_by_the_taoiseach > 0 AND total < 4",
        "context": "CREATE TABLE table_name_62 (agricultural_panel INTEGER, total VARCHAR, labour_panel VARCHAR, nominated_by_the_taoiseach VARCHAR)",
        "question": "What is the average agricultural panel of the composition with a labour panel less than 6, more than 0 nominations by Taoiseach, and a total less than 4?"
    },
    {
        "answer": "SELECT MAX(nominated_by_the_taoiseach) FROM table_name_11 WHERE administrative_panel > 0 AND industrial_and_commercial_panel < 1",
        "context": "CREATE TABLE table_name_11 (nominated_by_the_taoiseach INTEGER, administrative_panel VARCHAR, industrial_and_commercial_panel VARCHAR)",
        "question": "What is the highest number of nominations by Taoiseach of the composition with an administrative panel greater than 0 and an industrial and commercial panel less than 1?"
    },
    {
        "answer": "SELECT displacement_ & _configuration FROM table_name_36 WHERE max_speed = \"km/h (mph)\" AND car_model = \"panamera 4s\"",
        "context": "CREATE TABLE table_name_36 (displacement_ VARCHAR, _configuration VARCHAR, max_speed VARCHAR, car_model VARCHAR)",
        "question": "What is the displacement and configuration with a max speed of km/h (mph) and the car model Panamera 4s?"
    },
    {
        "answer": "SELECT location FROM table_name_47 WHERE circuit = \"lowood circuit\" AND race = \"lowood trophy\"",
        "context": "CREATE TABLE table_name_47 (location VARCHAR, circuit VARCHAR, race VARCHAR)",
        "question": "what is the location when the circuit is lowood circuit and the race is lowood trophy?"
    },
    {
        "answer": "SELECT club FROM table_name_56 WHERE home_result = \"1\u20130\" AND away_result = \"0\u20131\"",
        "context": "CREATE TABLE table_name_56 (club VARCHAR, home_result VARCHAR, away_result VARCHAR)",
        "question": "Home result of 1\u20130, and a Away result of 0\u20131 involves what club?"
    },
    {
        "answer": "SELECT city FROM table_name_23 WHERE tickets_available_since = \"march 28, 2008\" AND date = \"september 4, 2009\"",
        "context": "CREATE TABLE table_name_23 (city VARCHAR, tickets_available_since VARCHAR, date VARCHAR)",
        "question": "What city had tickets available since March 28, 2008 and went on sale on September 4, 2009?"
    },
    {
        "answer": "SELECT country FROM table_name_16 WHERE start_source = \"bbc sport\" AND name = \"feeney\"",
        "context": "CREATE TABLE table_name_16 (country VARCHAR, start_source VARCHAR, name VARCHAR)",
        "question": "What is the country named feeney with a bbc sport start source?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_72 WHERE sport = \"boys swimming\" AND city = \"albuquerque\"",
        "context": "CREATE TABLE table_name_72 (rank INTEGER, sport VARCHAR, city VARCHAR)",
        "question": "What is the highest rank for the boys swimming team in Albuquerque?"
    },
    {
        "answer": "SELECT capital FROM table_name_89 WHERE sno < 7 AND name_of_janapada = \"punia\"",
        "context": "CREATE TABLE table_name_89 (capital VARCHAR, sno VARCHAR, name_of_janapada VARCHAR)",
        "question": "What capital has an S.Number under 7, and a Name of janapada of Punia?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_49 WHERE round > 6 AND position = \"winger\" AND player = \"evgeny afanasiev\"",
        "context": "CREATE TABLE table_name_49 (college_junior_club_team__league_ VARCHAR, player VARCHAR, round VARCHAR, position VARCHAR)",
        "question": "What is the School/Junior/Club Group (Association) that has a Round bigger than 6, and a Place of winger, and a Player of evgeny afanasiev?"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_name_60 WHERE position = \"wide receiver\" AND overall = 29",
        "context": "CREATE TABLE table_name_60 (pick__number INTEGER, position VARCHAR, overall VARCHAR)",
        "question": "What is the highest Pick that is wide receiver with overall of 29?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_16 WHERE position = \"wide receiver\" AND name = \"r. jay soward\" AND overall < 29",
        "context": "CREATE TABLE table_name_16 (round INTEGER, overall VARCHAR, position VARCHAR, name VARCHAR)",
        "question": "What is the average Round for wide receiver r. jay soward and Overall smaller than 29?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_85 WHERE touchdowns < 2 AND extra_points = 7 AND field_goals < 0",
        "context": "CREATE TABLE table_name_85 (points INTEGER, field_goals VARCHAR, touchdowns VARCHAR, extra_points VARCHAR)",
        "question": "Which Points is the lowest one that has Touchdowns smaller than 2, and an Extra points of 7, and a Field goals smaller than 0?"
    },
    {
        "answer": "SELECT date_\u00b3 FROM table_name_88 WHERE korean_name_\u00b2 = \"\uccad\uba85 (\u6e05\u660e) cheongmyeong\"",
        "context": "CREATE TABLE table_name_88 (date_\u00b3 VARCHAR, korean_name_\u00b2 VARCHAR)",
        "question": "When has a Korean name \u00b2 of \uccad\uba85 (\u6e05\u660e) cheongmyeong?"
    },
    {
        "answer": "SELECT MIN(wins) FROM table_name_26 WHERE draws < 7 AND played > 30",
        "context": "CREATE TABLE table_name_26 (wins INTEGER, draws VARCHAR, played VARCHAR)",
        "question": "What is the fewest number of wins that had fewer than 7 draws and more than 30 played?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_58 WHERE time = \"3:31\" AND game < 7",
        "context": "CREATE TABLE table_name_58 (attendance INTEGER, time VARCHAR, game VARCHAR)",
        "question": "What was the lowest attendance for the game that had a time of 3:31 and was before game 7?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_53 WHERE time = \"3:23\"",
        "context": "CREATE TABLE table_name_53 (attendance INTEGER, time VARCHAR)",
        "question": "What was the sum of attendance for games with a time of 3:23?"
    },
    {
        "answer": "SELECT SUM(erp_w) FROM table_name_40 WHERE call_sign = \"w273bs\"",
        "context": "CREATE TABLE table_name_40 (erp_w INTEGER, call_sign VARCHAR)",
        "question": "How many ERP W is it that has a Call sign of w273bs?"
    },
    {
        "answer": "SELECT score FROM table_name_28 WHERE country = \"united states\" AND place = \"t9\" AND player = \"jay hebert\"",
        "context": "CREATE TABLE table_name_28 (score VARCHAR, player VARCHAR, country VARCHAR, place VARCHAR)",
        "question": "What is Score, when Country is \"United States\", when Place is \"T9\", and when Player is \"Jay Hebert\"?"
    },
    {
        "answer": "SELECT pada_4 FROM table_name_90 WHERE pada_1 = \"\u0916\u0940 ju/khi\"",
        "context": "CREATE TABLE table_name_90 (pada_4 VARCHAR, pada_1 VARCHAR)",
        "question": "What kind of Pada 4 has a Pada 1 of \u0916\u0940 ju/khi?"
    },
    {
        "answer": "SELECT date FROM table_name_30 WHERE record = \"3-4\"",
        "context": "CREATE TABLE table_name_30 (date VARCHAR, record VARCHAR)",
        "question": "Which Date has a Record of 3-4?"
    },
    {
        "answer": "SELECT record FROM table_name_24 WHERE opponent = \"anna barone\"",
        "context": "CREATE TABLE table_name_24 (record VARCHAR, opponent VARCHAR)",
        "question": "What is the record for opponent Anna Barone?"
    },
    {
        "answer": "SELECT location FROM table_name_29 WHERE opponent = \"aron lofton\"",
        "context": "CREATE TABLE table_name_29 (location VARCHAR, opponent VARCHAR)",
        "question": "What is the location of the match with Aron Lofton as the opponent?"
    },
    {
        "answer": "SELECT method FROM table_name_60 WHERE round = 1 AND time = \"1:58\"",
        "context": "CREATE TABLE table_name_60 (method VARCHAR, round VARCHAR, time VARCHAR)",
        "question": "What is the method of the match with 1 round and a time of 1:58?"
    },
    {
        "answer": "SELECT location FROM table_name_84 WHERE event = \"meca world vale tudo 6\"",
        "context": "CREATE TABLE table_name_84 (location VARCHAR, event VARCHAR)",
        "question": "In which location did the Meca World Vale Tudo 6 event happen?"
    },
    {
        "answer": "SELECT school_club_team FROM table_name_24 WHERE player = \"gerald wilkins\"",
        "context": "CREATE TABLE table_name_24 (school_club_team VARCHAR, player VARCHAR)",
        "question": "What school/club did gerald wilkins attend?"
    },
    {
        "answer": "SELECT wins FROM table_name_46 WHERE class = \"500cc\" AND year < 1975",
        "context": "CREATE TABLE table_name_46 (wins VARCHAR, class VARCHAR, year VARCHAR)",
        "question": "Which Wins have a Class of 500cc, and a Year smaller than 1975?"
    },
    {
        "answer": "SELECT date FROM table_name_44 WHERE loss = \"ruffin (3-5)\"",
        "context": "CREATE TABLE table_name_44 (date VARCHAR, loss VARCHAR)",
        "question": "Name the date for loss of ruffin (3-5)"
    },
    {
        "answer": "SELECT model_number FROM table_name_98 WHERE front_side_bus = \"100mhz\" AND l2_cache = \"64kib\" AND multiplier = \"8.5\u00d7\"",
        "context": "CREATE TABLE table_name_98 (model_number VARCHAR, multiplier VARCHAR, front_side_bus VARCHAR, l2_cache VARCHAR)",
        "question": "Which Model number has a Front Side Bus of 100mhz, a L2-Cache of 64kib and a Multiplier of 8.5\u00d7?"
    },
    {
        "answer": "SELECT finalists FROM table_name_79 WHERE tournament = \"miami\"",
        "context": "CREATE TABLE table_name_79 (finalists VARCHAR, tournament VARCHAR)",
        "question": "What is Finalists, when Tournament is Miami?"
    },
    {
        "answer": "SELECT undecided FROM table_name_80 WHERE source = \"suffolk university\" AND murray = \"11%\"",
        "context": "CREATE TABLE table_name_80 (undecided VARCHAR, source VARCHAR, murray VARCHAR)",
        "question": "What is the undecided percentage of the poll from Suffolk University with Murray at 11%?"
    },
    {
        "answer": "SELECT county FROM table_name_36 WHERE median_household_income = \"$46,872\"",
        "context": "CREATE TABLE table_name_36 (county VARCHAR, median_household_income VARCHAR)",
        "question": "What County has a Median household income of $46,872?"
    },
    {
        "answer": "SELECT COUNT(position) FROM table_name_20 WHERE points > 2 AND lost > 4 AND played < 10",
        "context": "CREATE TABLE table_name_20 (position VARCHAR, played VARCHAR, points VARCHAR, lost VARCHAR)",
        "question": "What is the total number of positions having points over 2, more than 4 losses, and under 10 matches played?"
    },
    {
        "answer": "SELECT player FROM table_name_79 WHERE country = \"united states\" AND to_par = \"wd\"",
        "context": "CREATE TABLE table_name_79 (player VARCHAR, country VARCHAR, to_par VARCHAR)",
        "question": "What is Player, when Country is \"United States\", and when To Par is \"WD\"?"
    },
    {
        "answer": "SELECT COUNT(civil_liberties_2011) FROM table_name_70 WHERE political_rights_2010 < 3 AND political_rights_2011 < 1",
        "context": "CREATE TABLE table_name_70 (civil_liberties_2011 VARCHAR, political_rights_2010 VARCHAR, political_rights_2011 VARCHAR)",
        "question": "What is the total number of civil liberties 2011 values having 2010 political rights values under 3 and 2011 political rights values under 1?"
    },
    {
        "answer": "SELECT SUM(preliminary) FROM table_name_84 WHERE interview = 9.654 AND average < 9.733",
        "context": "CREATE TABLE table_name_84 (preliminary INTEGER, interview VARCHAR, average VARCHAR)",
        "question": "What is the sum of Preliminary scores where the interview score is 9.654 and the average score is lower than 9.733?"
    },
    {
        "answer": "SELECT consider FROM table_name_21 WHERE poll_source = \"newsweek poll\" AND oppose = \"32%\" AND candidate = \"rudy giuliani\"",
        "context": "CREATE TABLE table_name_21 (consider VARCHAR, candidate VARCHAR, poll_source VARCHAR, oppose VARCHAR)",
        "question": "What percentage of people said they would consider Rudy Giuliani as a candidate according to the Newsweek poll that showed 32% opposed him?"
    },
    {
        "answer": "SELECT borough_or_census_area FROM table_name_68 WHERE median_household_income = \"$59,596\"",
        "context": "CREATE TABLE table_name_68 (borough_or_census_area VARCHAR, median_household_income VARCHAR)",
        "question": "Which borough or census area has a $59,596 median household income?"
    },
    {
        "answer": "SELECT MAX(area__km_2__) FROM table_name_96 WHERE province = \"ontario\" AND status = \"town\" AND municipality = \"minto\" AND rank < 84",
        "context": "CREATE TABLE table_name_96 (area__km_2__ INTEGER, rank VARCHAR, municipality VARCHAR, province VARCHAR, status VARCHAR)",
        "question": "What is the highest Area (KM 2) for the Province of Ontario, that has the Status of Town, a Municipality of Minto, and a Rank that's smaller than 84?"
    },
    {
        "answer": "SELECT partner FROM table_name_73 WHERE outcome = \"winner\" AND date = \"12 october 2003\"",
        "context": "CREATE TABLE table_name_73 (partner VARCHAR, outcome VARCHAR, date VARCHAR)",
        "question": "What is Partner, when Outcome is Winner, and when Date is 12 October 2003?"
    },
    {
        "answer": "SELECT opponents FROM table_name_8 WHERE partner = \"mervana jugi\u0107-salki\u0107\"",
        "context": "CREATE TABLE table_name_8 (opponents VARCHAR, partner VARCHAR)",
        "question": "What is Opponents, when Partner is Mervana Jugi\u0107-Salki\u0107?"
    },
    {
        "answer": "SELECT AVG(rebounds) FROM table_name_4 WHERE minutes_played = 113 AND games_played > 18",
        "context": "CREATE TABLE table_name_4 (rebounds INTEGER, minutes_played VARCHAR, games_played VARCHAR)",
        "question": "What is the average Rebounds, when Minutes Played is \"113\", and when Games Played is greater than \"18\"?"
    },
    {
        "answer": "SELECT MAX(pick) FROM table_name_40 WHERE college = \"syracuse\" AND overall < 18",
        "context": "CREATE TABLE table_name_40 (pick INTEGER, college VARCHAR, overall VARCHAR)",
        "question": "What is the highest Pick, when College is \"Syracuse\", and when Overall is less than 18?"
    },
    {
        "answer": "SELECT title FROM table_name_90 WHERE name = \"david campbell mulford\"",
        "context": "CREATE TABLE table_name_90 (title VARCHAR, name VARCHAR)",
        "question": "What is the title for david campbell mulford?"
    },
    {
        "answer": "SELECT size_of_rest_bit_field FROM table_name_12 WHERE leading_bits > 110 AND start_address = \"224.0.0.0\"",
        "context": "CREATE TABLE table_name_12 (size_of_rest_bit_field VARCHAR, leading_bits VARCHAR, start_address VARCHAR)",
        "question": "What is the size of the rest bit field when the leading bits are more than 110 and the start address is 224.0.0.0?"
    },
    {
        "answer": "SELECT COUNT(goals_against) FROM table_name_14 WHERE points_1 = 44 AND goals_for > 65",
        "context": "CREATE TABLE table_name_14 (goals_against VARCHAR, points_1 VARCHAR, goals_for VARCHAR)",
        "question": "When the Points 1 were 44 and the Goals For were larger than 65, what was the total number of Goals Against?"
    },
    {
        "answer": "SELECT date__from_ FROM table_name_18 WHERE traction_type = \"electric\" AND location = \"calgary\"",
        "context": "CREATE TABLE table_name_18 (date__from_ VARCHAR, traction_type VARCHAR, location VARCHAR)",
        "question": "what is the date for traction type electric with calgary location?"
    },
    {
        "answer": "SELECT COUNT(gold) FROM table_name_61 WHERE total = 1 AND bronze < 1 AND nation = \"west germany\"",
        "context": "CREATE TABLE table_name_61 (gold VARCHAR, nation VARCHAR, total VARCHAR, bronze VARCHAR)",
        "question": "What is the total number of golds having a total of 1, bronzes of 0, and from West Germany?"
    },
    {
        "answer": "SELECT high_assists FROM table_name_8 WHERE location_attendance = \"american airlines center 20,223\"",
        "context": "CREATE TABLE table_name_8 (high_assists VARCHAR, location_attendance VARCHAR)",
        "question": "Who had the high assists when the game was at American Airlines Center 20,223?"
    },
    {
        "answer": "SELECT COUNT(total_passengers) FROM table_name_28 WHERE annual_change = \"28.8%\" AND rank < 8",
        "context": "CREATE TABLE table_name_28 (total_passengers VARCHAR, annual_change VARCHAR, rank VARCHAR)",
        "question": "What is the total number of Total Passengers when the annual change is 28.8% and the rank is less than 8?"
    },
    {
        "answer": "SELECT MAX(total_passengers) FROM table_name_49 WHERE annual_change = \"18.3%\" AND rank < 11",
        "context": "CREATE TABLE table_name_49 (total_passengers INTEGER, annual_change VARCHAR, rank VARCHAR)",
        "question": "What is the highest Total Passengers when the annual change is 18.3%, and the rank is less than 11?"
    },
    {
        "answer": "SELECT score FROM table_name_96 WHERE date = \"october 8, 2005\" AND venue = \"estadio alfonso lastras, san luis potos\u00ed, mexico\"",
        "context": "CREATE TABLE table_name_96 (score VARCHAR, date VARCHAR, venue VARCHAR)",
        "question": "Which Score has a Date of october 8, 2005, and a Venue of estadio alfonso lastras, san luis potos\u00ed, mexico?"
    },
    {
        "answer": "SELECT competition FROM table_name_45 WHERE venue = \"estadio alfonso lastras, san luis potos\u00ed, mexico\" AND goal > 15",
        "context": "CREATE TABLE table_name_45 (competition VARCHAR, venue VARCHAR, goal VARCHAR)",
        "question": "Which Competition has a Venue of estadio alfonso lastras, san luis potos\u00ed, mexico, and a Goal larger than 15?"
    },
    {
        "answer": "SELECT operating_system_version FROM table_name_27 WHERE memory___ram__ = \"1gb (mobile ddr)\"",
        "context": "CREATE TABLE table_name_27 (operating_system_version VARCHAR, memory___ram__ VARCHAR)",
        "question": "Which operating system has 1GB (mobile ddr) memory (RAM)?"
    },
    {
        "answer": "SELECT location__numbersites__global_local_ FROM table_name_90 WHERE software = \"bind\" AND ipv6_address = \"2001:503:c27::2:30\"",
        "context": "CREATE TABLE table_name_90 (location__numbersites__global_local_ VARCHAR, software VARCHAR, ipv6_address VARCHAR)",
        "question": "What is the location for the software of BIND and an IPv6 address of 2001:503:c27::2:30?"
    },
    {
        "answer": "SELECT MIN(all_time) FROM table_name_95 WHERE first_title < 1974 AND last_title = 1933 AND amateur_era > 2",
        "context": "CREATE TABLE table_name_95 (all_time INTEGER, amateur_era VARCHAR, first_title VARCHAR, last_title VARCHAR)",
        "question": "What is the lowest All-Time, when First Title is before 1974, when Last Title is \"1933\", and when Amateur Era is greater than 2?"
    },
    {
        "answer": "SELECT location FROM table_name_59 WHERE founded > 1889 AND team_nickname = \"broncos\"",
        "context": "CREATE TABLE table_name_59 (location VARCHAR, founded VARCHAR, team_nickname VARCHAR)",
        "question": "What is the location of the team nicknamed Broncos, which was founded after 1889?"
    },
    {
        "answer": "SELECT AVG(membership) FROM table_name_15 WHERE _percentage_lds = \"3.33%\" AND branches < 47",
        "context": "CREATE TABLE table_name_15 (membership INTEGER, _percentage_lds VARCHAR, branches VARCHAR)",
        "question": "What is the average membership with 3.33% LDS and less than 47 branches?"
    },
    {
        "answer": "SELECT nicd FROM table_name_23 WHERE type = \"capacity under 500ma constant drain\"",
        "context": "CREATE TABLE table_name_23 (nicd VARCHAR, type VARCHAR)",
        "question": "What is NiCd, when Type is \"Capacity under 500mA constant Drain\"?"
    },
    {
        "answer": "SELECT date FROM table_name_33 WHERE margin_of_victory = \"5 strokes\" AND winning_score = \u221213(67 - 73 - 64 - 63 = 267)",
        "context": "CREATE TABLE table_name_33 (date VARCHAR, margin_of_victory VARCHAR, winning_score VARCHAR)",
        "question": "Which Date has a Margin of victory of 5 strokes, and a Winning score of \u221213 (67-73-64-63=267)?"
    },
    {
        "answer": "SELECT AVG(population_density) FROM table_name_63 WHERE change___percentage_ > 10.4 AND county = \"queens\" AND population__2011_ < 8574",
        "context": "CREATE TABLE table_name_63 (population_density INTEGER, population__2011_ VARCHAR, change___percentage_ VARCHAR, county VARCHAR)",
        "question": "What is the Population density that has a Change (%) higher than 10.4, and a Population (2011) less than 8574, in the County of Queens?"
    },
    {
        "answer": "SELECT AVG(grid) FROM table_name_25 WHERE bike = \"suzuki gsx-r1000\" AND rider = \"fonsi nieto\"",
        "context": "CREATE TABLE table_name_25 (grid INTEGER, bike VARCHAR, rider VARCHAR)",
        "question": "What is Fonsi Nieto's average grid when he's riding a Suzuki GSX-R1000?"
    },
    {
        "answer": "SELECT COUNT(population__2011_) FROM table_name_2 WHERE population__2006_ < 7083 AND population_density < 342.8 AND change___percentage_ = 5 AND area__km\u00b2_ > 4.5",
        "context": "CREATE TABLE table_name_2 (population__2011_ VARCHAR, area__km\u00b2_ VARCHAR, change___percentage_ VARCHAR, population__2006_ VARCHAR, population_density VARCHAR)",
        "question": "What was the Population (2011) when the Population (2006) was less than 7083, and the Population density less than 342.8, and the Change (%) of 5, and an Area (km\u00b2) larger than 4.5?"
    },
    {
        "answer": "SELECT MAX(population_density) FROM table_name_93 WHERE county = \"prince\" AND area__km\u00b2_ > 3.02 AND population__2006_ > 786 AND population__2011_ < 1135",
        "context": "CREATE TABLE table_name_93 (population_density INTEGER, population__2011_ VARCHAR, population__2006_ VARCHAR, county VARCHAR, area__km\u00b2_ VARCHAR)",
        "question": "In the County of Prince, what was the highest Population density when the Area (km\u00b2) was larger than 3.02, and the Population (2006) was larger than 786, and the Population (2011) was smaller than 1135?"
    },
    {
        "answer": "SELECT MAX(drawn) FROM table_name_12 WHERE lost = 7 AND points > 4 AND against < 22",
        "context": "CREATE TABLE table_name_12 (drawn INTEGER, against VARCHAR, lost VARCHAR, points VARCHAR)",
        "question": "What is the highest Drawn when the lost is 7 and the points are more than 4, and the against is less than 22?"
    },
    {
        "answer": "SELECT 2007 AS _08_season FROM table_name_49 WHERE club = \"genoa c.f.c.\"",
        "context": "CREATE TABLE table_name_49 (club VARCHAR)",
        "question": "Which 2007\u201308 season has a Club of genoa c.f.c.?"
    },
    {
        "answer": "SELECT SUM(avg_finish) FROM table_name_80 WHERE poles < 0",
        "context": "CREATE TABLE table_name_80 (avg_finish INTEGER, poles INTEGER)",
        "question": "What is the sum of value for average finish with poles less than 0?"
    },
    {
        "answer": "SELECT AVG(starts) FROM table_name_34 WHERE wins > 0 AND position = \"32nd\"",
        "context": "CREATE TABLE table_name_34 (starts INTEGER, wins VARCHAR, position VARCHAR)",
        "question": "What is the average start with wins larger than 0 and 32nd position?"
    },
    {
        "answer": "SELECT specific_impulse__s_ FROM table_name_19 WHERE scenario = \"sr-71 at mach 3.2 (wet)\"",
        "context": "CREATE TABLE table_name_19 (specific_impulse__s_ VARCHAR, scenario VARCHAR)",
        "question": "What is the specific impulse for the engine with a scenario of sr-71 at mach 3.2 (wet)?"
    },
    {
        "answer": "SELECT AVG(specific_impulse__s_) FROM table_name_66 WHERE sfc_in_lb__lbf\u00b7h_ = 7.95 AND effective_exhaust_velocity__m_s_ > 4 OFFSET 423",
        "context": "CREATE TABLE table_name_66 (specific_impulse__s_ INTEGER, sfc_in_lb__lbf\u00b7h_ VARCHAR, effective_exhaust_velocity__m_s_ VARCHAR)",
        "question": "what is the average specific impulse for engines that have a SFC in lb/(lbf\u00b7h) of 7.95, and a Effective exhaust velocity (m/s) larger than 4,423"
    },
    {
        "answer": "SELECT language FROM table_name_71 WHERE content = \"sport\" AND hdtv = \"no\" AND television_service = \"espn america\"",
        "context": "CREATE TABLE table_name_71 (language VARCHAR, television_service VARCHAR, content VARCHAR, hdtv VARCHAR)",
        "question": "What is Language, when Content is Sport, when HDTV is No, and when Television Service is ESPN America?"
    },
    {
        "answer": "SELECT novelty FROM table_name_46 WHERE authors = \"zhiming\" AND notes = \"carcharodontosaurid\"",
        "context": "CREATE TABLE table_name_46 (novelty VARCHAR, authors VARCHAR, notes VARCHAR)",
        "question": "What is the Novelty of the dinosaur that was named by the Author, Zhiming, and whose Notes are, \"carcharodontosaurid\"?"
    },
    {
        "answer": "SELECT player FROM table_name_6 WHERE place = \"t5\" AND score = 74 - 70 - 67 = 211",
        "context": "CREATE TABLE table_name_6 (player VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "Who scored 74-70-67=211 and placed t5?"
    },
    {
        "answer": "SELECT COUNT(against) FROM table_name_72 WHERE losses < 13 AND byes < 2",
        "context": "CREATE TABLE table_name_72 (against VARCHAR, losses VARCHAR, byes VARCHAR)",
        "question": "What is the number listed under against when there were less than 13 losses and less than 2 byes?"
    },
    {
        "answer": "SELECT AVG(public_debt__percentage_of_gdp__2013_q1_) FROM table_name_7 WHERE member_state_sorted_by_gdp = \"czech republic\" AND gdp_per_capita_in_ppp_us$__2012_ > 27 OFFSET 191",
        "context": "CREATE TABLE table_name_7 (public_debt__percentage_of_gdp__2013_q1_ INTEGER, member_state_sorted_by_gdp VARCHAR, gdp_per_capita_in_ppp_us$__2012_ VARCHAR)",
        "question": "What is the average public debt % of GDP in 2013 Q1 of the country with a member slate sorted by GDP of Czech Republic and a GDP per capita in PPP US dollars in 2012 greater than 27,191?"
    },
    {
        "answer": "SELECT MAX(inflation__percentage_annual__2012_) FROM table_name_74 WHERE public_debt__percentage_of_gdp__2013_q1_ > 88.2 AND gdp__percentage_of_eu__2012_ = \"2.9%\"",
        "context": "CREATE TABLE table_name_74 (inflation__percentage_annual__2012_ INTEGER, public_debt__percentage_of_gdp__2013_q1_ VARCHAR, gdp__percentage_of_eu__2012_ VARCHAR)",
        "question": "What is the largest inflation % annual in 2012 of the country with a public debt % of GDP in 2013 Q1 greater than 88.2 and a GDP % of EU in 2012 of 2.9%?"
    },
    {
        "answer": "SELECT record FROM table_name_72 WHERE game = 19",
        "context": "CREATE TABLE table_name_72 (record VARCHAR, game VARCHAR)",
        "question": "Can you tell me the Record that has the Game of 19?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_16 WHERE record = \"21\u201322\"",
        "context": "CREATE TABLE table_name_16 (location_attendance VARCHAR, record VARCHAR)",
        "question": "What is the Location and Attendance with a Record of 21\u201322?"
    },
    {
        "answer": "SELECT AVG(position) FROM table_name_60 WHERE lost < 7",
        "context": "CREATE TABLE table_name_60 (position INTEGER, lost INTEGER)",
        "question": "What is the position when lost is less than 7?"
    },
    {
        "answer": "SELECT MIN(bronze) FROM table_name_56 WHERE nation = \"egypt (egy)\" AND gold < 2",
        "context": "CREATE TABLE table_name_56 (bronze INTEGER, nation VARCHAR, gold VARCHAR)",
        "question": "What is the lowest Bronze with a Nation of egypt (egy) and with a Gold that is smaller than 2?"
    },
    {
        "answer": "SELECT AVG(episode__number) FROM table_name_96 WHERE share = 9 AND rank = \"#35\" AND viewers < 8.21",
        "context": "CREATE TABLE table_name_96 (episode__number INTEGER, viewers VARCHAR, share VARCHAR, rank VARCHAR)",
        "question": "What is the average Episode # with a share of 9, and #35 is rank and less than 8.21 viewers?"
    },
    {
        "answer": "SELECT website FROM table_name_33 WHERE ofsted < 106478 AND locality = \"atherton\"",
        "context": "CREATE TABLE table_name_33 (website VARCHAR, ofsted VARCHAR, locality VARCHAR)",
        "question": "What website has an Ofsted less than 106478 in Atherton?"
    },
    {
        "answer": "SELECT MIN(league) AS championships FROM table_name_78 WHERE venue = \"penn state ice pavilion\" AND club = \"penn state nittany lions men's ice hockey\"",
        "context": "CREATE TABLE table_name_78 (league INTEGER, venue VARCHAR, club VARCHAR)",
        "question": "Which League championship is the lowest one that has a Venue of penn state ice pavilion, and a Club of penn state nittany lions men's ice hockey?"
    },
    {
        "answer": "SELECT date FROM table_name_40 WHERE competition = \"2006 fifa world cup qualification\" AND venue = \"alamodome, san antonio, united states\"",
        "context": "CREATE TABLE table_name_40 (date VARCHAR, competition VARCHAR, venue VARCHAR)",
        "question": "What date has 2006 fifa world cup qualification as the competition, and alamodome, san antonio, united States as the venue?"
    },
    {
        "answer": "SELECT sign FROM table_name_21 WHERE latin_motto = \"vita\"",
        "context": "CREATE TABLE table_name_21 (sign VARCHAR, latin_motto VARCHAR)",
        "question": "Which astrological sign has the Latin motto of Vita?"
    },
    {
        "answer": "SELECT location FROM table_name_54 WHERE opponent = \"aleksandr pitchkounov\"",
        "context": "CREATE TABLE table_name_54 (location VARCHAR, opponent VARCHAR)",
        "question": "what is the location when the opponent is aleksandr pitchkounov?"
    },
    {
        "answer": "SELECT date FROM table_name_53 WHERE result = \"w 13-10\"",
        "context": "CREATE TABLE table_name_53 (date VARCHAR, result VARCHAR)",
        "question": "What is the date of the game with a result of W 13-10?"
    },
    {
        "answer": "SELECT COUNT(to_par) FROM table_name_28 WHERE player = \"julius boros\" AND total > 295",
        "context": "CREATE TABLE table_name_28 (to_par VARCHAR, player VARCHAR, total VARCHAR)",
        "question": "What is the total number of To Par, when Player is \"Julius Boros\", and when Total is greater than 295?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_34 WHERE rank = \"14\" AND gold > 0",
        "context": "CREATE TABLE table_name_34 (total INTEGER, rank VARCHAR, gold VARCHAR)",
        "question": "What is the lowest total when the rank is 14 and the gold medals is larger than 0?"
    },
    {
        "answer": "SELECT SUM(2011) FROM table_name_58 WHERE rank < 8 AND water_park = \"ocean world\"",
        "context": "CREATE TABLE table_name_58 (rank VARCHAR, water_park VARCHAR)",
        "question": "what is 2011 when the rank is less than 8 and the water park is ocean world?"
    },
    {
        "answer": "SELECT area FROM table_name_71 WHERE _percentage_hindu = \"statistics from the bbc in depth report.\"",
        "context": "CREATE TABLE table_name_71 (area VARCHAR, _percentage_hindu VARCHAR)",
        "question": "What area shows % Hindu of statistics from the bbc in depth report.?"
    },
    {
        "answer": "SELECT main_span_feet FROM table_name_43 WHERE year_opened = 1936 AND country = \"united states\" AND rank > 47 AND main_span_metres = \"421\"",
        "context": "CREATE TABLE table_name_43 (main_span_feet VARCHAR, main_span_metres VARCHAR, rank VARCHAR, year_opened VARCHAR, country VARCHAR)",
        "question": "What is the main span feet from opening year of 1936 in the United States with a rank greater than 47 and 421 main span metres?"
    },
    {
        "answer": "SELECT opponent FROM table_name_67 WHERE location_attendance = \"mellon arena - 17,132\"",
        "context": "CREATE TABLE table_name_67 (opponent VARCHAR, location_attendance VARCHAR)",
        "question": "What is Opponent, when Location/Attendance is \"Mellon Arena - 17,132\"?"
    },
    {
        "answer": "SELECT driving_wheels FROM table_name_8 WHERE original_ner_class = \"m1\"",
        "context": "CREATE TABLE table_name_8 (driving_wheels VARCHAR, original_ner_class VARCHAR)",
        "question": "What driving wheels are on the m1 original NER class?"
    },
    {
        "answer": "SELECT m_r_romaja FROM table_name_34 WHERE capital = \"cheongju\"",
        "context": "CREATE TABLE table_name_34 (m_r_romaja VARCHAR, capital VARCHAR)",
        "question": "What is the M-R Romaja for the province having a capital of Cheongju?"
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_77 WHERE to_par > 7 AND player = \"corey pavin\"",
        "context": "CREATE TABLE table_name_77 (total INTEGER, to_par VARCHAR, player VARCHAR)",
        "question": "If the player is Corey Pavin when he had a To par of over 7, what was the sum of his totals?"
    },
    {
        "answer": "SELECT year FROM table_name_90 WHERE position = \"forward\" AND name = \"iman mcfarland\"",
        "context": "CREATE TABLE table_name_90 (year VARCHAR, position VARCHAR, name VARCHAR)",
        "question": "In what year of school is the forward Iman McFarland?"
    },
    {
        "answer": "SELECT score FROM table_name_9 WHERE opponent = \"fernando vicente\"",
        "context": "CREATE TABLE table_name_9 (score VARCHAR, opponent VARCHAR)",
        "question": "what is the score when the opponent is fernando vicente?"
    },
    {
        "answer": "SELECT AVG(league_goals) FROM table_name_95 WHERE league_apps = \"16 (1)\" AND league_cup_goals < 0",
        "context": "CREATE TABLE table_name_95 (league_goals INTEGER, league_apps VARCHAR, league_cup_goals VARCHAR)",
        "question": "What is the league goals when the league cup goals is less than 0 and 16 (1) league apps?"
    },
    {
        "answer": "SELECT league_cup_apps FROM table_name_13 WHERE position = \"mf\" AND league_goals > 3 AND total_apps = \"30 (2)\"",
        "context": "CREATE TABLE table_name_13 (league_cup_apps VARCHAR, total_apps VARCHAR, position VARCHAR, league_goals VARCHAR)",
        "question": "What is the league cup apps when the league goals are greater than 3, there are 30 (2) total apps, and has a position of mf?"
    },
    {
        "answer": "SELECT MIN(points) FROM table_name_60 WHERE rank = \"1st\"",
        "context": "CREATE TABLE table_name_60 (points INTEGER, rank VARCHAR)",
        "question": "What is the lowest points when the ranking is 1st?"
    },
    {
        "answer": "SELECT MAX(league_cup) FROM table_name_77 WHERE fa_cup > 0 AND premier_league < 34 AND total = 11",
        "context": "CREATE TABLE table_name_77 (league_cup INTEGER, total VARCHAR, fa_cup VARCHAR, premier_league VARCHAR)",
        "question": "What is the highest league cup with more than 0 FA cups, a premier league less than 34 and a total of 11?"
    },
    {
        "answer": "SELECT AVG(area__in_km\u00b2_) FROM table_name_81 WHERE markatal < 0",
        "context": "CREATE TABLE table_name_81 (area__in_km\u00b2_ INTEGER, markatal INTEGER)",
        "question": "What is the average Area (in km\u00b2), when Markatal is less than 0?"
    },
    {
        "answer": "SELECT MAX(markatal) FROM table_name_69 WHERE municipality = \"leirv\u00edk\" AND inhabitants_per_km\u00b2 > 79",
        "context": "CREATE TABLE table_name_69 (markatal INTEGER, municipality VARCHAR, inhabitants_per_km\u00b2 VARCHAR)",
        "question": "What is the highest Markatal, when Municipality is Leirv\u00edk, and when Inhabitants Per Km\u00b2 is greater than 79?"
    },
    {
        "answer": "SELECT SUM(population) FROM table_name_57 WHERE markatal > 48 AND inhabitants_per_km\u00b2 > 24 AND municipality = \"runav\u00edk\"",
        "context": "CREATE TABLE table_name_57 (population INTEGER, municipality VARCHAR, markatal VARCHAR, inhabitants_per_km\u00b2 VARCHAR)",
        "question": "What is the sum of Population, when Markatal is greater than 48, when Inhabitants Per Km\u00b2 is greater than 24, and when Municipality is Runav\u00edk?"
    },
    {
        "answer": "SELECT COUNT(season) FROM table_name_53 WHERE loses > 1 AND competition = \"fiba europe cup\" AND wins < 4",
        "context": "CREATE TABLE table_name_53 (season VARCHAR, wins VARCHAR, loses VARCHAR, competition VARCHAR)",
        "question": "How many seasons have Losses larger than 1, and a Competition of fiba europe cup, and Wins smaller than 4?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_81 WHERE result = \"16-14\"",
        "context": "CREATE TABLE table_name_81 (year INTEGER, result VARCHAR)",
        "question": "In what Year was the Result of the game 16-14?"
    },
    {
        "answer": "SELECT tie_no FROM table_name_83 WHERE home_team = \"chelsea\"",
        "context": "CREATE TABLE table_name_83 (tie_no VARCHAR, home_team VARCHAR)",
        "question": "What is home team Chelsea's Tie no?"
    },
    {
        "answer": "SELECT 2007 FROM table_name_92 WHERE 2010 = \"qf\" AND 2012 = \"w\"",
        "context": "CREATE TABLE table_name_92 (Id VARCHAR)",
        "question": "What in 2007 has a 2010 of qf, and a 2012 of w?"
    },
    {
        "answer": "SELECT away FROM table_name_28 WHERE time = \"14:00\"",
        "context": "CREATE TABLE table_name_28 (away VARCHAR, time VARCHAR)",
        "question": "What is the Away with a Time that is 14:00?"
    },
    {
        "answer": "SELECT score FROM table_name_35 WHERE date = \"2008-06-28\"",
        "context": "CREATE TABLE table_name_35 (score VARCHAR, date VARCHAR)",
        "question": "What is the Score with a Date that is 2008-06-28?"
    },
    {
        "answer": "SELECT points FROM table_name_90 WHERE tries_for = \"correct as of 00:00 11 june 2008\"",
        "context": "CREATE TABLE table_name_90 (points VARCHAR, tries_for VARCHAR)",
        "question": "What is Points, when Tries For is \"correct as of 00:00 11 June 2008\"?"
    },
    {
        "answer": "SELECT class FROM table_name_60 WHERE number_at_lincoln < 1 AND wheel_arrangement = \"0-6-0\"",
        "context": "CREATE TABLE table_name_60 (class VARCHAR, number_at_lincoln VARCHAR, wheel_arrangement VARCHAR)",
        "question": "Which Class has a Number at Lincoln smaller than 1 and a Wheel Arrangement of 0-6-0?"
    },
    {
        "answer": "SELECT high_points FROM table_name_85 WHERE location_attendance = \"time warner cable arena 12,096\"",
        "context": "CREATE TABLE table_name_85 (high_points VARCHAR, location_attendance VARCHAR)",
        "question": "At Time Warner Cable Arena 12,096, what was the high points?"
    },
    {
        "answer": "SELECT partner FROM table_name_94 WHERE outcome = \"winner\" AND year < 1993 AND score = \"6\u20134, 6\u20132\"",
        "context": "CREATE TABLE table_name_94 (partner VARCHAR, score VARCHAR, outcome VARCHAR, year VARCHAR)",
        "question": "Who was the Partner that was a winner, a Year smaller than 1993, and a Score of 6\u20134, 6\u20132?"
    },
    {
        "answer": "SELECT COUNT(population) FROM table_name_24 WHERE english_name = \"jiyang\"",
        "context": "CREATE TABLE table_name_24 (population VARCHAR, english_name VARCHAR)",
        "question": "how many subdivisions have an English Name of jiyang?"
    },
    {
        "answer": "SELECT power__kw_ FROM table_name_72 WHERE frequency = \"95.1mhz\"",
        "context": "CREATE TABLE table_name_72 (power__kw_ VARCHAR, frequency VARCHAR)",
        "question": "What is the Power (kW) for the station with a frequency of 95.1mhz?"
    },
    {
        "answer": "SELECT callsign FROM table_name_31 WHERE branding = \"93dot5 home radio cagayan de oro\"",
        "context": "CREATE TABLE table_name_31 (callsign VARCHAR, branding VARCHAR)",
        "question": "What is the Callsign for the station with the branding 93dot5 home radio Cagayan De Oro?"
    },
    {
        "answer": "SELECT publication FROM table_name_75 WHERE country = \"uk\"",
        "context": "CREATE TABLE table_name_75 (publication VARCHAR, country VARCHAR)",
        "question": "Which publication happened in the UK?"
    },
    {
        "answer": "SELECT MAX(draw) FROM table_name_73 WHERE song = \"u ritmu ljubavi\" AND points > 87",
        "context": "CREATE TABLE table_name_73 (draw INTEGER, song VARCHAR, points VARCHAR)",
        "question": "WHAT IS THE DRAW FOR u ritmu ljubavi, POINTS LARGER THAN 87?"
    },
    {
        "answer": "SELECT AVG(total_freshwater_withdrawal__km_3__yr_) FROM table_name_5 WHERE industrial_use__m_3__p_yr__in__percentage_ = \"337(63%)\" AND per_capita_withdrawal__m_3__p_yr_ > 535",
        "context": "CREATE TABLE table_name_5 (total_freshwater_withdrawal__km_3__yr_ INTEGER, industrial_use__m_3__p_yr__in__percentage_ VARCHAR, per_capita_withdrawal__m_3__p_yr_ VARCHAR)",
        "question": "What is the average Total Freshwater Withdrawal (km 3 /yr), when Industrial Use (m 3 /p/yr)(in %) is 337(63%), and when Per Capita Withdrawal (m 3 /p/yr) is greater than 535?"
    },
    {
        "answer": "SELECT MAX(per_capita_withdrawal__m_3__p_yr_) FROM table_name_22 WHERE agricultural_use__m_3__p_yr__in__percentage_ = \"1363(92%)\" AND total_freshwater_withdrawal__km_3__yr_ < 42.7",
        "context": "CREATE TABLE table_name_22 (per_capita_withdrawal__m_3__p_yr_ INTEGER, agricultural_use__m_3__p_yr__in__percentage_ VARCHAR, total_freshwater_withdrawal__km_3__yr_ VARCHAR)",
        "question": "What is the highest Per Capita Withdrawal (m 3 /p/yr), when Agricultural Use (m 3 /p/yr)(in %) is 1363(92%), and when Total Freshwater Withdrawal (km 3 /yr) is less than 42.7?"
    },
    {
        "answer": "SELECT agricultural_use__m_3__p_yr__in__percentage_ FROM table_name_7 WHERE per_capita_withdrawal__m_3__p_yr_ > 923 AND domestic_use__m_3__p_yr__in__percentage_ = \"73(7%)\"",
        "context": "CREATE TABLE table_name_7 (agricultural_use__m_3__p_yr__in__percentage_ VARCHAR, per_capita_withdrawal__m_3__p_yr_ VARCHAR, domestic_use__m_3__p_yr__in__percentage_ VARCHAR)",
        "question": "What is Agricultural Use (m 3 /p/yr)(in %), when Per Capita Withdrawal (m 3 /p/yr) is greater than 923, and when Domestic Use (m 3 /p/yr)(in %) is 73(7%)?"
    },
    {
        "answer": "SELECT industrial_use__m_3__p_yr__in__percentage_ FROM table_name_32 WHERE total_freshwater_withdrawal__km_3__yr_ < 82.75 AND agricultural_use__m_3__p_yr__in__percentage_ = \"1363(92%)\"",
        "context": "CREATE TABLE table_name_32 (industrial_use__m_3__p_yr__in__percentage_ VARCHAR, total_freshwater_withdrawal__km_3__yr_ VARCHAR, agricultural_use__m_3__p_yr__in__percentage_ VARCHAR)",
        "question": "What is Industrial Use (m 3 /p/yr)(in %), when Total Freshwater Withdrawal (km 3/yr) is less than 82.75, and when Agricultural Use (m 3 /p/yr)(in %) is 1363(92%)?"
    },
    {
        "answer": "SELECT SUM(total_goals) FROM table_name_88 WHERE playoff_apps = \"2\" AND fa_cup_apps = \"2\" AND league_cup_goals < 0",
        "context": "CREATE TABLE table_name_88 (total_goals INTEGER, league_cup_goals VARCHAR, playoff_apps VARCHAR, fa_cup_apps VARCHAR)",
        "question": "How many total goals did the squad with 2 playoff apps, 2 FA Cup Apps, and 0 League Cup goals get?"
    },
    {
        "answer": "SELECT MIN(squad_no) FROM table_name_28 WHERE total_goals > 6 AND league_goals < 8 AND playoff_goals > 0",
        "context": "CREATE TABLE table_name_28 (squad_no INTEGER, playoff_goals VARCHAR, total_goals VARCHAR, league_goals VARCHAR)",
        "question": "What's the lowest squad number with more than 6 goals, fewer than 8 league goals, and more than 0 playoff goals?"
    },
    {
        "answer": "SELECT condition FROM table_name_46 WHERE partial_thromboplastin_time = \"unaffected\" AND platelet_count = \"unaffected\" AND prothrombin_time = \"unaffected\"",
        "context": "CREATE TABLE table_name_46 (condition VARCHAR, prothrombin_time VARCHAR, partial_thromboplastin_time VARCHAR, platelet_count VARCHAR)",
        "question": "Which Condition has an unaffected Partial thromboplastin time, Platelet count, and a Prothrombin time?"
    },
    {
        "answer": "SELECT condition FROM table_name_73 WHERE prothrombin_time = \"unaffected\" AND bleeding_time = \"unaffected\" AND partial_thromboplastin_time = \"prolonged\"",
        "context": "CREATE TABLE table_name_73 (condition VARCHAR, partial_thromboplastin_time VARCHAR, prothrombin_time VARCHAR, bleeding_time VARCHAR)",
        "question": "Which Condition has an unaffected Prothrombin time and a Bleeding time, and a Partial thromboplastin time of prolonged?"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_74 WHERE cuts_made < 6 AND events = 4 AND top_5 < 0",
        "context": "CREATE TABLE table_name_74 (wins INTEGER, top_5 VARCHAR, cuts_made VARCHAR, events VARCHAR)",
        "question": "What are the highest wins with cuts smaller than 6, events of 4 and a top-5 smaller than 0?"
    },
    {
        "answer": "SELECT MIN(top_5) FROM table_name_62 WHERE top_25 > 4 AND cuts_made = 29 AND top_10 > 18",
        "context": "CREATE TABLE table_name_62 (top_5 INTEGER, top_10 VARCHAR, top_25 VARCHAR, cuts_made VARCHAR)",
        "question": "What are the lowest top-5 with a top-25 larger than 4, 29 cuts and a top-10 larger than 18?"
    },
    {
        "answer": "SELECT 1 AS st_leg FROM table_name_5 WHERE team__number2 = \"junior\"",
        "context": "CREATE TABLE table_name_5 (team__number2 VARCHAR)",
        "question": "What is the 1st leg with a junior team #2?"
    },
    {
        "answer": "SELECT COUNT(against) FROM table_name_26 WHERE drawn < 5 AND lost < 6 AND points > 36",
        "context": "CREATE TABLE table_name_26 (against VARCHAR, points VARCHAR, drawn VARCHAR, lost VARCHAR)",
        "question": "Which Against has a Drawn smaller than 5, and a Lost smaller than 6, and a Points larger than 36?"
    },
    {
        "answer": "SELECT AVG(played) FROM table_name_18 WHERE lost > 9 AND points < 15 AND position < 12 AND drawn < 2",
        "context": "CREATE TABLE table_name_18 (played INTEGER, drawn VARCHAR, position VARCHAR, lost VARCHAR, points VARCHAR)",
        "question": "Which Played has a Lost larger than 9, and a Points smaller than 15, and a Position smaller than 12, and a Drawn smaller than 2?"
    },
    {
        "answer": "SELECT AVG(pick__number) FROM table_name_87 WHERE position = \"linebacker\" AND player = \"bob bruenig\" AND round < 3",
        "context": "CREATE TABLE table_name_87 (pick__number INTEGER, round VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "What is the average value for Pick #, when Position is Linebacker, when Player is Bob Bruenig, and when Round is less than 3?"
    },
    {
        "answer": "SELECT MIN(year_commissioned) FROM table_name_64 WHERE average_annual_output__million_kwh_ > 58 AND installed_capacity__megawatts_ = 20",
        "context": "CREATE TABLE table_name_64 (year_commissioned INTEGER, average_annual_output__million_kwh_ VARCHAR, installed_capacity__megawatts_ VARCHAR)",
        "question": "What is the earliest Year commissioned wiht an Average annual output greater than 58 and Installed capacity of 20?"
    },
    {
        "answer": "SELECT SUM(area__km\u00b2_) FROM table_name_19 WHERE density___km\u00b2_ > 462 AND official_website = \"http://krishna.nic.in/\"",
        "context": "CREATE TABLE table_name_19 (area__km\u00b2_ INTEGER, density___km\u00b2_ VARCHAR, official_website VARCHAR)",
        "question": "What is the sum of the area values for districts having density over 462 and websites of http://krishna.nic.in/?"
    },
    {
        "answer": "SELECT school_club_team FROM table_name_80 WHERE player = \"stephen thompson\"",
        "context": "CREATE TABLE table_name_80 (school_club_team VARCHAR, player VARCHAR)",
        "question": "What is Stephen Thompson's School/Club Team?"
    },
    {
        "answer": "SELECT semi_finalists FROM table_name_25 WHERE runner_up = \"gigi fern\u00e1ndez natalia zvereva\" AND week_of = \"26 june 2 weeks\"",
        "context": "CREATE TABLE table_name_25 (semi_finalists VARCHAR, runner_up VARCHAR, week_of VARCHAR)",
        "question": "When the runner-up is listed as Gigi Fern\u00e1ndez Natalia Zvereva and the week is 26 June 2 weeks, who are the semi finalists?"
    },
    {
        "answer": "SELECT winner FROM table_name_71 WHERE week_of = \"26 june 2 weeks\" AND runner_up = \"arantxa s\u00e1nchez vicario\"",
        "context": "CREATE TABLE table_name_71 (winner VARCHAR, week_of VARCHAR, runner_up VARCHAR)",
        "question": "Who is the winner in the week listed as 26 June 2 weeks, when the runner-up is Arantxa S\u00e1nchez Vicario?"
    },
    {
        "answer": "SELECT party FROM table_name_22 WHERE district < 10 AND took_office < 1991 AND home_town = \"mount pleasant\"",
        "context": "CREATE TABLE table_name_22 (party VARCHAR, home_town VARCHAR, district VARCHAR, took_office VARCHAR)",
        "question": "What is Party, when District is less than 10, when Took Office is less than 1991, and when Home Town is Mount Pleasant?"
    },
    {
        "answer": "SELECT week_of FROM table_name_71 WHERE winner = \"jana novotn\u00e1 arantxa s\u00e1nchez vicario 5\u20137, 7\u20135, 6\u20134\"",
        "context": "CREATE TABLE table_name_71 (week_of VARCHAR, winner VARCHAR)",
        "question": "In which week is the winner listed as Jana Novotn\u00e1 Arantxa S\u00e1nchez Vicario 5\u20137, 7\u20135, 6\u20134?"
    },
    {
        "answer": "SELECT team FROM table_name_87 WHERE penalty = \"roughing\" AND player = \"ryan callahan\"",
        "context": "CREATE TABLE table_name_87 (team VARCHAR, penalty VARCHAR, player VARCHAR)",
        "question": "What team was Ryan Callahan, who received a penalty for roughing, playing for?"
    },
    {
        "answer": "SELECT SUM(Home) AS wins FROM table_name_89 WHERE institution = \"boston college eagles\" AND wins > 6",
        "context": "CREATE TABLE table_name_89 (Home INTEGER, institution VARCHAR, wins VARCHAR)",
        "question": "What is the sum of the home wins of the Boston College Eagles, which has more than 6 wins?"
    },
    {
        "answer": "SELECT datacenter FROM table_name_85 WHERE itanium = \"yes\" AND features = \"memory modules: hot addition\"",
        "context": "CREATE TABLE table_name_85 (datacenter VARCHAR, itanium VARCHAR, features VARCHAR)",
        "question": "What is the Datacenter for the Memory modules: hot addition Feature that has Yes listed for Itanium?"
    },
    {
        "answer": "SELECT socket FROM table_name_34 WHERE release_date = \"september 10, 2009\" AND order_part_number = \"amm300dbo22gq\"",
        "context": "CREATE TABLE table_name_34 (socket VARCHAR, release_date VARCHAR, order_part_number VARCHAR)",
        "question": "What is the socket with an order part number of amm300dbo22gq and a September 10, 2009 release date?"
    },
    {
        "answer": "SELECT l2_cache FROM table_name_80 WHERE release_date = \"september 10, 2009\" AND fpu_width = \"128-bit\" AND multi_1 = \"12x\"",
        "context": "CREATE TABLE table_name_80 (l2_cache VARCHAR, multi_1 VARCHAR, release_date VARCHAR, fpu_width VARCHAR)",
        "question": "What is the L2 cache with a release date on September 10, 2009, a 128-bit FPU width, and a 12x multi 1?"
    },
    {
        "answer": "SELECT type FROM table_name_54 WHERE incorporated_in = \"netherlands\" AND principal_activities = \"airline\" AND company = \"transavia.com\"",
        "context": "CREATE TABLE table_name_54 (type VARCHAR, company VARCHAR, incorporated_in VARCHAR, principal_activities VARCHAR)",
        "question": "Which Type has an Incorporated in of netherlands, a Principal activities of airline, and a Company of transavia.com?"
    },
    {
        "answer": "SELECT writer FROM table_name_2 WHERE company = \"bbv\" AND title = \"the year of the cat\"",
        "context": "CREATE TABLE table_name_2 (writer VARCHAR, company VARCHAR, title VARCHAR)",
        "question": "Who was the writer of The Year of the Cat from the BBV?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_32 WHERE player = \"sammy okpro\"",
        "context": "CREATE TABLE table_name_32 (round INTEGER, player VARCHAR)",
        "question": "Which Round has a Player of sammy okpro?"
    },
    {
        "answer": "SELECT MIN(goals) FROM table_name_37 WHERE goals / matches > 0.43 AND name = \"joachim streich\" AND matches > 378",
        "context": "CREATE TABLE table_name_37 (goals INTEGER, matches VARCHAR, name VARCHAR)",
        "question": "What are the lowest goal that have goals/matches greater than 0.43 with joachim streich as the name and matches greater than 378?"
    },
    {
        "answer": "SELECT years FROM table_name_70 WHERE goals < 229 AND matches = 440",
        "context": "CREATE TABLE table_name_70 (years VARCHAR, goals VARCHAR, matches VARCHAR)",
        "question": "What years have goals less than 229, and 440 as matches?"
    },
    {
        "answer": "SELECT year_s__won FROM table_name_42 WHERE total < 292 AND player = \"hale irwin\"",
        "context": "CREATE TABLE table_name_42 (year_s__won VARCHAR, total VARCHAR, player VARCHAR)",
        "question": "Which Year(s) won has a Total smaller than 292, and a Player of hale irwin?"
    },
    {
        "answer": "SELECT attendance FROM table_name_41 WHERE runner_up = \"suntory sungoliath\" AND title = \"46th\"",
        "context": "CREATE TABLE table_name_41 (attendance VARCHAR, runner_up VARCHAR, title VARCHAR)",
        "question": "What is the Attendance number when the runner-up was suntory sungoliath, and a Title of 46th?"
    },
    {
        "answer": "SELECT score FROM table_name_39 WHERE winner = \"sanyo wild knights\" AND runner_up = \"suntory sungoliath\"",
        "context": "CREATE TABLE table_name_39 (score VARCHAR, winner VARCHAR, runner_up VARCHAR)",
        "question": "What is the Score when the winner was sanyo wild knights, and a Runner-up of suntory sungoliath?"
    },
    {
        "answer": "SELECT winning_song FROM table_name_32 WHERE debut_album = \"in progress\"",
        "context": "CREATE TABLE table_name_32 (winning_song VARCHAR, debut_album VARCHAR)",
        "question": "Which winning song had a debut album in progress?"
    },
    {
        "answer": "SELECT s_registered_user FROM table_name_98 WHERE userpics_free = \"6 [free] or 15 [plus]\"",
        "context": "CREATE TABLE table_name_98 (s_registered_user VARCHAR, userpics_free VARCHAR)",
        "question": "What is the S Registered User, when Userpics Free is 6 [free] or 15 [plus]?"
    },
    {
        "answer": "SELECT SUM(assets__billion_) AS $_ FROM table_name_8 WHERE industry = \"oil and gas\" AND rank = 9 AND market_value__billion_$_ > 121.7",
        "context": "CREATE TABLE table_name_8 (assets__billion_ INTEGER, market_value__billion_$_ VARCHAR, industry VARCHAR, rank VARCHAR)",
        "question": "How many Assets (billion $) has an Industry of oil and gas, and a Rank of 9, and a Market Value (billion $) larger than 121.7?"
    },
    {
        "answer": "SELECT MIN(market_value__billion_) AS $_ FROM table_name_44 WHERE assets__billion_$_ > 276.81 AND company = \"toyota\" AND profits__billion_$_ > 17.21",
        "context": "CREATE TABLE table_name_44 (market_value__billion_ INTEGER, profits__billion_$_ VARCHAR, assets__billion_$_ VARCHAR, company VARCHAR)",
        "question": "Name the lowest Market Value (billion $) which has Assets (billion $) larger than 276.81, and a Company of toyota, and Profits (billion $) larger than 17.21?"
    },
    {
        "answer": "SELECT playoff_result FROM table_name_45 WHERE winner = \"alaska aces\" AND win__number > 1 AND points < 106 AND year = \"2011-12\"",
        "context": "CREATE TABLE table_name_45 (playoff_result VARCHAR, year VARCHAR, points VARCHAR, winner VARCHAR, win__number VARCHAR)",
        "question": "What is Playoff Result, when Winner is \"Alaska Aces\", when Win # is greater than 1, when Points is less than 106, and when Year is \"2011-12\"?"
    },
    {
        "answer": "SELECT catalog FROM table_name_44 WHERE date = \"24 march 2006\"",
        "context": "CREATE TABLE table_name_44 (catalog VARCHAR, date VARCHAR)",
        "question": "Which catalog has a date of 24 march 2006?"
    },
    {
        "answer": "SELECT MAX(win__number) FROM table_name_87 WHERE winner = \"knoxville cherokees\" AND playoff_result = \"lost 1st round ( lou )\" AND points < 94",
        "context": "CREATE TABLE table_name_87 (win__number INTEGER, points VARCHAR, winner VARCHAR, playoff_result VARCHAR)",
        "question": "What is the highest Win #, when Winner is \"Knoxville Cherokees\", when Playoff Result is \"Lost 1st Round ( LOU )\", and when Points is less than 94?"
    },
    {
        "answer": "SELECT no_7 FROM table_name_68 WHERE no_1 = \"mason\" AND no_9 = \"jackson\" AND no_10 = \"logan\" AND no_6 = \"owen\"",
        "context": "CREATE TABLE table_name_68 (no_7 VARCHAR, no_6 VARCHAR, no_10 VARCHAR, no_1 VARCHAR, no_9 VARCHAR)",
        "question": "What name was number 7 when Mason was number 1, Owen was number 6, Jackson was number 9, and Logan was number 10?"
    },
    {
        "answer": "SELECT position FROM table_name_87 WHERE player = \"damon jones\"",
        "context": "CREATE TABLE table_name_87 (position VARCHAR, player VARCHAR)",
        "question": "What is the positions of Damon Jones?"
    },
    {
        "answer": "SELECT years_for_grizzlies FROM table_name_11 WHERE school_club_team = \"stanford\"",
        "context": "CREATE TABLE table_name_11 (years_for_grizzlies VARCHAR, school_club_team VARCHAR)",
        "question": "for how many years did the player who graduated from stanford play for Grizzlies?"
    },
    {
        "answer": "SELECT club FROM table_name_85 WHERE founded < 2007 AND joined_prsl = 2008 AND stadium = \"yldefonso sol\u00e1 morales stadium\"",
        "context": "CREATE TABLE table_name_85 (club VARCHAR, stadium VARCHAR, founded VARCHAR, joined_prsl VARCHAR)",
        "question": "what is the club that was founded before 2007, joined prsl in 2008 and the stadium is yldefonso sol\u00e1 morales stadium?"
    },
    {
        "answer": "SELECT MAX(founded) FROM table_name_95 WHERE joined_prsl = 2008 AND home_city = \"carolina 1\"",
        "context": "CREATE TABLE table_name_95 (founded INTEGER, joined_prsl VARCHAR, home_city VARCHAR)",
        "question": "When is the club founded that founed prsl in 2008 and the home city is carolina 1?"
    },
    {
        "answer": "SELECT year FROM table_name_86 WHERE result = \"4\u20133\" AND champions = \"daegu tongyang orions\"",
        "context": "CREATE TABLE table_name_86 (year VARCHAR, result VARCHAR, champions VARCHAR)",
        "question": "What is the Year of the game with Result of 4\u20133 and Champions of Daegu Tongyang Orions?"
    },
    {
        "answer": "SELECT MAX(league_cup_goals) FROM table_name_6 WHERE club = \"hartlepool\"",
        "context": "CREATE TABLE table_name_6 (league_cup_goals INTEGER, club VARCHAR)",
        "question": "What is the highest number of League Cup goals that were scored by Hartlepool?"
    },
    {
        "answer": "SELECT Box AS score FROM table_name_95 WHERE home_team = \"townsville crocodiles\"",
        "context": "CREATE TABLE table_name_95 (Box VARCHAR, home_team VARCHAR)",
        "question": "What was the box score for the game that had the Townsville Crocodiles as home team?"
    },
    {
        "answer": "SELECT date FROM table_name_70 WHERE region = \"europe\" AND catalog = \"28765 22392 8\"",
        "context": "CREATE TABLE table_name_70 (date VARCHAR, region VARCHAR, catalog VARCHAR)",
        "question": "What's the Date for the Region of Europe and has the Catalog of 28765 22392 8?"
    },
    {
        "answer": "SELECT COUNT(pick) FROM table_name_98 WHERE school = \"southern mississippi\"",
        "context": "CREATE TABLE table_name_98 (pick VARCHAR, school VARCHAR)",
        "question": "What is the Pick # of the Player from Southern MIssissippi?"
    },
    {
        "answer": "SELECT place FROM table_name_37 WHERE player = \"claude harmon\"",
        "context": "CREATE TABLE table_name_37 (place VARCHAR, player VARCHAR)",
        "question": "What is Claude Harmon's Place?"
    },
    {
        "answer": "SELECT geographic_character FROM table_name_69 WHERE population__2010_ > 2539 AND urban_rural = \"rural\" AND population__2007_ = 2572",
        "context": "CREATE TABLE table_name_69 (geographic_character VARCHAR, population__2007_ VARCHAR, population__2010_ VARCHAR, urban_rural VARCHAR)",
        "question": "WHAT IS THE TYPE OF LAND WITH A 2010 POPULATION GREATER THAN 2539, A RURAL AREA, AND A 2007 POPULATION OF 2572?"
    },
    {
        "answer": "SELECT geographic_character FROM table_name_10 WHERE population__2007_ < 4346 AND population__2010_ > 3385 AND barangay = \"manalongon\"",
        "context": "CREATE TABLE table_name_10 (geographic_character VARCHAR, barangay VARCHAR, population__2007_ VARCHAR, population__2010_ VARCHAR)",
        "question": "WHAT IS THE TYPE OF LAND WITH A 2007 POPULATION SMALLER THAN 4346, 2010 POPULATION LARGER THAN 3385, FROM BARANGAY OF MANALONGON?"
    },
    {
        "answer": "SELECT goals_against FROM table_name_44 WHERE goal_difference < 43 AND wins < 13 AND losses > 14",
        "context": "CREATE TABLE table_name_44 (goals_against VARCHAR, losses VARCHAR, goal_difference VARCHAR, wins VARCHAR)",
        "question": "What is the number of goals against when the goal difference was less than 43, the Wins less than 13, and losses more than 14?"
    },
    {
        "answer": "SELECT MAX(goal_difference) FROM table_name_72 WHERE goals_against < 76 AND position > 5 AND played > 30",
        "context": "CREATE TABLE table_name_72 (goal_difference INTEGER, played VARCHAR, goals_against VARCHAR, position VARCHAR)",
        "question": "What is the highest Goal Difference when the goals against were less than 76, and the position larger than 5, and a Played larger than 30?"
    },
    {
        "answer": "SELECT AVG(tries) FROM table_name_55 WHERE season = \"2008 warrington wolves\" AND appearance > 7",
        "context": "CREATE TABLE table_name_55 (tries INTEGER, season VARCHAR, appearance VARCHAR)",
        "question": "what is the average tries for the season 2008 warrington wolves with an appearance more than 7?"
    },
    {
        "answer": "SELECT SUM(shot__percentage) FROM table_name_72 WHERE country = \"finland\" AND ends_lost > 49",
        "context": "CREATE TABLE table_name_72 (shot__percentage INTEGER, country VARCHAR, ends_lost VARCHAR)",
        "question": "What is the sum shot % when the country is finland, and an ends lost is larger than 49?"
    },
    {
        "answer": "SELECT SUM(long) FROM table_name_59 WHERE loss > 390 AND gain < 1 OFFSET 405",
        "context": "CREATE TABLE table_name_59 (long INTEGER, loss VARCHAR, gain VARCHAR)",
        "question": "When the player gained below 1,405 yards and lost over 390 yards, what's the sum of the long yards?"
    },
    {
        "answer": "SELECT location FROM table_name_68 WHERE year < 1979 AND result = \"19-17\"",
        "context": "CREATE TABLE table_name_68 (location VARCHAR, year VARCHAR, result VARCHAR)",
        "question": "what is the location when the year is before 1979 and the result is 19-17?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_25 WHERE name = \"alex mcleish category:articles with hcards\" AND league < 494",
        "context": "CREATE TABLE table_name_25 (total INTEGER, name VARCHAR, league VARCHAR)",
        "question": "Which Total has a Name of alex mcleish category:articles with hcards, and a League smaller than 494?"
    },
    {
        "answer": "SELECT COUNT(scottish_cup) FROM table_name_22 WHERE league < 561 AND years = \"1989\u20131995 1997\u20132001\" AND europe < 11",
        "context": "CREATE TABLE table_name_22 (scottish_cup VARCHAR, europe VARCHAR, league VARCHAR, years VARCHAR)",
        "question": "Which Scottish Cup has a League smaller than 561, Years of 1989\u20131995 1997\u20132001, and Europe smaller than 11?"
    },
    {
        "answer": "SELECT date_from FROM table_name_30 WHERE date_to = \"end of season\" AND name = \"theo robinson\"",
        "context": "CREATE TABLE table_name_30 (date_from VARCHAR, date_to VARCHAR, name VARCHAR)",
        "question": "What was the Date From for Theo Robinson, who was with the team until the end of season?"
    },
    {
        "answer": "SELECT name FROM table_name_87 WHERE market_value__bn$_ < 5.59 AND rank > 39 AND assets__bn$_ > 27.46",
        "context": "CREATE TABLE table_name_87 (name VARCHAR, assets__bn$_ VARCHAR, market_value__bn$_ VARCHAR, rank VARCHAR)",
        "question": "Which company had a market value less than $5.59 billion, assets greater than $27.46 billion, and a rank above 39?"
    },
    {
        "answer": "SELECT COUNT(wrestler) FROM table_24628683_2 WHERE method_of_elimination = \"Pinned after being hit by a lead pipe\"",
        "context": "CREATE TABLE table_24628683_2 (wrestler VARCHAR, method_of_elimination VARCHAR)",
        "question": "How many wrestlers are recorded for the chamber that's method of elimination was pinned after being hit by a lead pipe? "
    },
    {
        "answer": "SELECT AVG(bangladeshis_admitted) FROM table_name_23 WHERE nepalis_admitted = 714 AND pakistanis_admitted > 13 OFFSET 575",
        "context": "CREATE TABLE table_name_23 (bangladeshis_admitted INTEGER, nepalis_admitted VARCHAR, pakistanis_admitted VARCHAR)",
        "question": "How many Bangladeshis were admitted when 714 Nepalis and 13,575 Pakistanis were admitted?"
    },
    {
        "answer": "SELECT english_meaning FROM table_name_22 WHERE full_word = \"shens gamo\"",
        "context": "CREATE TABLE table_name_22 (english_meaning VARCHAR, full_word VARCHAR)",
        "question": "What is English Meaning, when Full Word is \"Shens Gamo\"?"
    },
    {
        "answer": "SELECT case_suffix__case_ FROM table_name_54 WHERE english_meaning = \"to georgia, in georgia\"",
        "context": "CREATE TABLE table_name_54 (case_suffix__case_ VARCHAR, english_meaning VARCHAR)",
        "question": "What is Case Suffix (Case), when English Meaning is \"to Georgia, in Georgia\"?"
    },
    {
        "answer": "SELECT AVG(overall) FROM table_name_85 WHERE round > 9 AND position = \"rb\"",
        "context": "CREATE TABLE table_name_85 (overall INTEGER, round VARCHAR, position VARCHAR)",
        "question": "WHAT IS THE AVERAGE OVERALL WITH A ROUND LARGER THAN 9, AND RB POSITION?"
    },
    {
        "answer": "SELECT SUM(overall) FROM table_name_22 WHERE name = \"tim smiley\" AND round < 5",
        "context": "CREATE TABLE table_name_22 (overall INTEGER, name VARCHAR, round VARCHAR)",
        "question": "What is the sum of Overall, when Name is \"Tim Smiley\", and when Round is less than 5?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_96 WHERE championship = \"athens , greece\" AND outcome = \"winner\"",
        "context": "CREATE TABLE table_name_96 (score_in_the_final VARCHAR, championship VARCHAR, outcome VARCHAR)",
        "question": "What is Score In The Final, when Championship is \"Athens , Greece\", and when Outcome is \"Winner\"?"
    },
    {
        "answer": "SELECT tournament FROM table_name_73 WHERE career_sr = \"atp masters series\"",
        "context": "CREATE TABLE table_name_73 (tournament VARCHAR, career_sr VARCHAR)",
        "question": "What is Tournament, when Career SR is \"ATP Masters Series\"?"
    },
    {
        "answer": "SELECT home FROM table_name_60 WHERE attendance < 2248 AND score = \"2:0\" AND date = \"21 september 2008\"",
        "context": "CREATE TABLE table_name_60 (home VARCHAR, date VARCHAR, attendance VARCHAR, score VARCHAR)",
        "question": "What is the home team of the match on 21 September 2008 with an attendance less than 2248 and a 2:0 score?"
    },
    {
        "answer": "SELECT MAX(established) FROM table_name_45 WHERE venue = \"nassau veterans memorial coliseum\"",
        "context": "CREATE TABLE table_name_45 (established INTEGER, venue VARCHAR)",
        "question": "When was the venue named nassau veterans memorial coliseum established??"
    },
    {
        "answer": "SELECT SUM(january) FROM table_name_70 WHERE opponent = \"@ montreal canadiens\" AND game > 49",
        "context": "CREATE TABLE table_name_70 (january INTEGER, opponent VARCHAR, game VARCHAR)",
        "question": "What day in January was the game greater than 49 and had @ Montreal Canadiens as opponents?"
    },
    {
        "answer": "SELECT AVG(staying_councillors) FROM table_name_22 WHERE new_council = 7 AND previous_council > 8",
        "context": "CREATE TABLE table_name_22 (staying_councillors INTEGER, new_council VARCHAR, previous_council VARCHAR)",
        "question": "Which Staying councillors have a New council of 7, and a Previous council larger than 8?"
    },
    {
        "answer": "SELECT MIN(pop_dens) FROM table_name_66 WHERE district = \"strakonice (st)\" AND noof_settlements > 112",
        "context": "CREATE TABLE table_name_66 (pop_dens INTEGER, district VARCHAR, noof_settlements VARCHAR)",
        "question": "What is the lowest population density of Strakonice (st) with more than 112 settlements?"
    },
    {
        "answer": "SELECT presentation_of_credentials FROM table_name_62 WHERE name = \"robert g. miner\"",
        "context": "CREATE TABLE table_name_62 (presentation_of_credentials VARCHAR, name VARCHAR)",
        "question": "When did Robert G. Miner present his credentials?"
    },
    {
        "answer": "SELECT points_against FROM table_name_32 WHERE losing_bonus = \"0\" AND club = \"banwen rfc\"",
        "context": "CREATE TABLE table_name_32 (points_against VARCHAR, losing_bonus VARCHAR, club VARCHAR)",
        "question": "what is the points against when the losing bonus is 0 and the club is banwen rfc?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_84 WHERE home = \"pittsburgh\" AND date = \"december 21\" AND attendance > 5 OFFSET 307",
        "context": "CREATE TABLE table_name_84 (points INTEGER, attendance VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "What is the sum of Points, when Home is \"Pittsburgh\", when Date is \"December 21\", and when Attendance is greater than 5,307?"
    },
    {
        "answer": "SELECT drawn FROM table_name_80 WHERE club = \"hirwaun rfc\"",
        "context": "CREATE TABLE table_name_80 (drawn VARCHAR, club VARCHAR)",
        "question": "what is drawn when the club is hirwaun rfc?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_42 WHERE score = \"w 86\u201377 (ot)\"",
        "context": "CREATE TABLE table_name_42 (location_attendance VARCHAR, score VARCHAR)",
        "question": "what is the location attendance when the score is w 86\u201377 (ot)?"
    },
    {
        "answer": "SELECT republican AS :_jeff_beatty FROM table_name_79 WHERE lead_margin = 25 AND poll_source = \"rasmussen reports\"",
        "context": "CREATE TABLE table_name_79 (republican VARCHAR, lead_margin VARCHAR, poll_source VARCHAR)",
        "question": "What percent is the lead margin of 25 that Republican: Jeff Beatty has according to poll source Rasmussen Reports?"
    },
    {
        "answer": "SELECT poll_source FROM table_name_2 WHERE peg_luksik = \"9%\" AND dates_administered = \"may 12, 2010\"",
        "context": "CREATE TABLE table_name_2 (poll_source VARCHAR, peg_luksik VARCHAR, dates_administered VARCHAR)",
        "question": "Which Poll source has a Peg Luksik of 9%, and Dates administered of may 12, 2010?"
    },
    {
        "answer": "SELECT republican AS :_roy_brown FROM table_name_35 WHERE lead_margin = 26",
        "context": "CREATE TABLE table_name_35 (republican VARCHAR, lead_margin VARCHAR)",
        "question": "What is the percentage for Brown when the lead margin is 26?"
    },
    {
        "answer": "SELECT AVG(bronze) FROM table_name_63 WHERE nation = \"philippines\" AND gold > 0",
        "context": "CREATE TABLE table_name_63 (bronze INTEGER, nation VARCHAR, gold VARCHAR)",
        "question": "What is the average number of bronze medals of the Philippines, which has more than 0 gold?"
    },
    {
        "answer": "SELECT date FROM table_name_10 WHERE winning_score = \u20137(67 - 72 - 69 - 69 = 277)",
        "context": "CREATE TABLE table_name_10 (date VARCHAR, winning_score VARCHAR)",
        "question": "What was the date of the match with a winning score of \u20137 (67-72-69-69=277)?"
    },
    {
        "answer": "SELECT date FROM table_name_8 WHERE opponent = \"indiana\"",
        "context": "CREATE TABLE table_name_8 (date VARCHAR, opponent VARCHAR)",
        "question": "When did indiana play?"
    },
    {
        "answer": "SELECT location FROM table_name_77 WHERE fastest_lap = \"ben spies\" AND pole_position = \"ben spies\" AND winner = \"ben spies\" AND date = \"tooele, utah\"",
        "context": "CREATE TABLE table_name_77 (location VARCHAR, date VARCHAR, winner VARCHAR, fastest_lap VARCHAR, pole_position VARCHAR)",
        "question": "What is Location, when Fastest Lap is Ben Spies, when Pole Position is Ben Spies, when Winner is Ben Spies, and when Date is Tooele, Utah?"
    },
    {
        "answer": "SELECT antiparticle_symbol FROM table_name_16 WHERE rest_mass___mev___c_2__ = \".47 \u00b1 .33\"",
        "context": "CREATE TABLE table_name_16 (antiparticle_symbol VARCHAR, rest_mass___mev___c_2__ VARCHAR)",
        "question": "What is the antiparticle symbol with a rest mess (mev/c2) of .47 \u00b1 .33?"
    },
    {
        "answer": "SELECT SUM(championship) FROM table_name_4 WHERE league_cup > 1 AND name = \"james henry\"",
        "context": "CREATE TABLE table_name_4 (championship INTEGER, league_cup VARCHAR, name VARCHAR)",
        "question": "What is the total championships of James Henry that has a league cup more than 1?"
    },
    {
        "answer": "SELECT winning_score FROM table_name_40 WHERE tournament = \"b.c. open 1\"",
        "context": "CREATE TABLE table_name_40 (winning_score VARCHAR, tournament VARCHAR)",
        "question": "What is the winning score for the B.C. Open 1 tournament?"
    },
    {
        "answer": "SELECT to_par FROM table_name_35 WHERE place = \"t6\" AND player = \"tom watson\"",
        "context": "CREATE TABLE table_name_35 (to_par VARCHAR, place VARCHAR, player VARCHAR)",
        "question": "When Tom Watson placed t6, what was the 2 par?"
    },
    {
        "answer": "SELECT player FROM table_name_50 WHERE score = 70 - 69 - 70 = 209",
        "context": "CREATE TABLE table_name_50 (player VARCHAR, score VARCHAR)",
        "question": "Who had a score of 70-69-70=209?"
    },
    {
        "answer": "SELECT f_laps FROM table_name_97 WHERE wins = \"0\" AND position = \"4th\"",
        "context": "CREATE TABLE table_name_97 (f_laps VARCHAR, wins VARCHAR, position VARCHAR)",
        "question": "What was the F/Laps when the Wins were 0 and the Position was 4th?"
    },
    {
        "answer": "SELECT COUNT(shot_diameter__cm_) FROM table_name_37 WHERE shot_volume__cm_3__ < 172.76",
        "context": "CREATE TABLE table_name_37 (shot_diameter__cm_ VARCHAR, shot_volume__cm_3__ INTEGER)",
        "question": "How many times is the shot volume (cm3) less than 172.76?"
    },
    {
        "answer": "SELECT role FROM table_name_56 WHERE festival_organization = \"sydney film festival\"",
        "context": "CREATE TABLE table_name_56 (role VARCHAR, festival_organization VARCHAR)",
        "question": "What role was nominated at the Sydney Film Festival?"
    },
    {
        "answer": "SELECT tournament FROM table_name_38 WHERE 2013 = \"1r\" AND 2012 = \"1r\"",
        "context": "CREATE TABLE table_name_38 (tournament VARCHAR)",
        "question": "Which tournament has a 2013 of 1r, and a 2012 of 1r?"
    },
    {
        "answer": "SELECT tv_season FROM table_name_61 WHERE season < 8 AND households__in_millions_ = \"15.92 (17.1 rating)\"",
        "context": "CREATE TABLE table_name_61 (tv_season VARCHAR, season VARCHAR, households__in_millions_ VARCHAR)",
        "question": "Which TV season has a Season smaller than 8, and a Household (in millions) of 15.92 (17.1 rating)?"
    },
    {
        "answer": "SELECT MIN(code) FROM table_name_3 WHERE population > 762 AND most_spoken_language = \"xhosa\" AND area__km_2__ > 15.34 AND place = \"remainder of the municipality\"",
        "context": "CREATE TABLE table_name_3 (code INTEGER, place VARCHAR, area__km_2__ VARCHAR, population VARCHAR, most_spoken_language VARCHAR)",
        "question": "What is the lowest code number for the remainder of the municipality that has an area bigger than 15.34 squared kilometers, a population greater than 762 and a language of xhosa spoken?"
    },
    {
        "answer": "SELECT MIN(area__km_2__) FROM table_name_31 WHERE most_spoken_language = \"afrikaans\" AND place = \"cannonvale\"",
        "context": "CREATE TABLE table_name_31 (area__km_2__ INTEGER, most_spoken_language VARCHAR, place VARCHAR)",
        "question": "What is the lowest area for cannonvale that speaks afrikaans?"
    },
    {
        "answer": "SELECT title FROM table_name_91 WHERE length = \"3:32\" AND producer_s_ = \"hadise a\u00e7\u0131kg\u00f6z, yves jongen\"",
        "context": "CREATE TABLE table_name_91 (title VARCHAR, length VARCHAR, producer_s_ VARCHAR)",
        "question": "Which Title has a Length of 3:32, and a Producer(s) of hadise a\u00e7\u0131kg\u00f6z, yves jongen?"
    },
    {
        "answer": "SELECT producer_s_ FROM table_name_46 WHERE track < 8 AND songwriter_s_ = \"hadise a\u00e7\u0131kg\u00f6z, yves jongen\" AND length = \"3:08\"",
        "context": "CREATE TABLE table_name_46 (producer_s_ VARCHAR, length VARCHAR, track VARCHAR, songwriter_s_ VARCHAR)",
        "question": "Which Producer(s) has a Track smaller than 8, and a Songwriter(s) of hadise a\u00e7\u0131kg\u00f6z, yves jongen, and a Length of 3:08?"
    },
    {
        "answer": "SELECT accreditation_type FROM table_name_5 WHERE accreditation_level = \"joyn\" AND company_name = \"nokia corporation\"",
        "context": "CREATE TABLE table_name_5 (accreditation_type VARCHAR, accreditation_level VARCHAR, company_name VARCHAR)",
        "question": "When the Nokia corporation had an accreditation level of joyn, what was the accreditation type?"
    },
    {
        "answer": "SELECT opponent FROM table_name_43 WHERE location = \"tokyo , japan\" AND method = \"decision (unanimous)\" AND record = \"4-1\"",
        "context": "CREATE TABLE table_name_43 (opponent VARCHAR, record VARCHAR, location VARCHAR, method VARCHAR)",
        "question": "What is Opponent, when Location is \"Tokyo , Japan\", when Method is \"Decision (unanimous)\", and when Record is \"4-1\"?"
    },
    {
        "answer": "SELECT MAX(number_of_seats) FROM table_name_45 WHERE leader = \"jillian evans\"",
        "context": "CREATE TABLE table_name_45 (number_of_seats INTEGER, leader VARCHAR)",
        "question": "What is Jillian Evans highest number of seats?"
    },
    {
        "answer": "SELECT score FROM table_name_31 WHERE decision = \"lundqvist\" AND november < 28 AND opponent = \"boston bruins\"",
        "context": "CREATE TABLE table_name_31 (score VARCHAR, opponent VARCHAR, decision VARCHAR, november VARCHAR)",
        "question": "What is the Score of the game with a decision of Lundqvist, the November less than 28, and opponent was Boston Bruins?"
    },
    {
        "answer": "SELECT model FROM table_name_87 WHERE sensor_size = \"48x36 mm\" AND active_pixels = \"6726 x 5040\" AND resolution = \"33 mp\"",
        "context": "CREATE TABLE table_name_87 (model VARCHAR, resolution VARCHAR, sensor_size VARCHAR, active_pixels VARCHAR)",
        "question": "Which model has a sensor sized 48x36 mm, pixels of 6726 x 5040, and a 33 mp resolution?"
    },
    {
        "answer": "SELECT bachelorette FROM table_name_20 WHERE winner = \"ian mckee\"",
        "context": "CREATE TABLE table_name_20 (bachelorette VARCHAR, winner VARCHAR)",
        "question": "Who was the bachelorette of the season where ian mckee was the winner?"
    },
    {
        "answer": "SELECT lead FROM table_name_21 WHERE third = \"randy ferbey (skip)\" AND second = \"scott pfeifer\" AND season = \"2009\u201310\"",
        "context": "CREATE TABLE table_name_21 (lead VARCHAR, season VARCHAR, third VARCHAR, second VARCHAR)",
        "question": "Which Lead has a Third of randy ferbey (skip), a Second of scott pfeifer, and a Season of 2009\u201310?"
    },
    {
        "answer": "SELECT democrat FROM table_name_16 WHERE sample_size < 516 AND republican = \"ron paul\"",
        "context": "CREATE TABLE table_name_16 (democrat VARCHAR, sample_size VARCHAR, republican VARCHAR)",
        "question": "Which Democrat was selected in the poll with a sample size smaller than 516 where the Republican chosen was Ron Paul?"
    },
    {
        "answer": "SELECT elector FROM table_name_92 WHERE nationality = \"french\" AND elevated = \"1288, may 16\"",
        "context": "CREATE TABLE table_name_92 (elector VARCHAR, nationality VARCHAR, elevated VARCHAR)",
        "question": "Who was the French Elector Elevated on 1288, May 16?"
    },
    {
        "answer": "SELECT nationality FROM table_name_5 WHERE title = \"deacon of s. maria in via lata\"",
        "context": "CREATE TABLE table_name_5 (nationality VARCHAR, title VARCHAR)",
        "question": "What is the Nationality of the Deacon of S. Maria in Via Lata?"
    },
    {
        "answer": "SELECT no_5 FROM table_name_76 WHERE no_8 = \"chloe\" AND no_2 = \"olivia\" AND no_1 = \"emma\" AND no_4 = \"ava\"",
        "context": "CREATE TABLE table_name_76 (no_5 VARCHAR, no_4 VARCHAR, no_1 VARCHAR, no_8 VARCHAR, no_2 VARCHAR)",
        "question": "When Chloe was number 8, Olivia was number 2, Emma was number 1, and Ava was number 4, who was number 5?"
    },
    {
        "answer": "SELECT race_name FROM table_name_70 WHERE year > 1956 AND winner = \"jud larson\"",
        "context": "CREATE TABLE table_name_70 (race_name VARCHAR, year VARCHAR, winner VARCHAR)",
        "question": "Jud Larson who which race after 1956?"
    },
    {
        "answer": "SELECT sambalpuri_saree FROM table_name_22 WHERE sambalpuri_language = \"samaleswari temple\"",
        "context": "CREATE TABLE table_name_22 (sambalpuri_saree VARCHAR, sambalpuri_language VARCHAR)",
        "question": "What is the sambalpuri saree with a samaleswari temple as sambalpuri language?"
    },
    {
        "answer": "SELECT date FROM table_name_45 WHERE venue = \"estadio alejandro villanueva\" AND season > 2003 AND competition_round = \"torneo apertura\" AND winner = \"universitario\"",
        "context": "CREATE TABLE table_name_45 (date VARCHAR, winner VARCHAR, competition_round VARCHAR, venue VARCHAR, season VARCHAR)",
        "question": "On what date did Universitario win the Torneo Apertura round after 2003 at Estadio Alejandro Villanueva?"
    },
    {
        "answer": "SELECT director FROM table_name_90 WHERE primary_language_s_ = \"azerbaijani\" AND original_title = \"buta\"",
        "context": "CREATE TABLE table_name_90 (director VARCHAR, primary_language_s_ VARCHAR, original_title VARCHAR)",
        "question": "What is Director, when Primary Language(s) is \"Azerbaijani\", and when Original Title is \"Buta\"?"
    },
    {
        "answer": "SELECT date FROM table_name_50 WHERE discipline = \"super g\" AND season = 2010",
        "context": "CREATE TABLE table_name_50 (date VARCHAR, discipline VARCHAR, season VARCHAR)",
        "question": "What is the date of Super G in the 2010 season?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_80 WHERE grid < 9 AND laps = 21 AND rider = \"jeremy mcwilliams\"",
        "context": "CREATE TABLE table_name_80 (time_retired VARCHAR, rider VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "What was the time of the race that was on a grid smaller than 9 with jeremy mcwilliams as the rider doing 21 laps?"
    },
    {
        "answer": "SELECT winner FROM table_name_89 WHERE notes = \"world championship formula 1\" AND venue = \"circuit de monaco\"",
        "context": "CREATE TABLE table_name_89 (winner VARCHAR, notes VARCHAR, venue VARCHAR)",
        "question": "Who was the winner for the world championship formula 1 at the venue, circuit de monaco?"
    },
    {
        "answer": "SELECT left_office FROM table_name_47 WHERE took_office = \"11 june 2001\" AND minister = \"mirko tremaglia\"",
        "context": "CREATE TABLE table_name_47 (left_office VARCHAR, took_office VARCHAR, minister VARCHAR)",
        "question": "What is Left Office, when Took Office is \"11 June 2001\", and when Minister is \"Mirko Tremaglia\"?"
    },
    {
        "answer": "SELECT left_office FROM table_name_16 WHERE party = \"udc\" AND took_office = \"11 june 2001\"",
        "context": "CREATE TABLE table_name_16 (left_office VARCHAR, party VARCHAR, took_office VARCHAR)",
        "question": "What is Left Office, when Party is \"UDC\", and when Took Office is \"11 June 2001\"?"
    },
    {
        "answer": "SELECT minister FROM table_name_97 WHERE portfolio = \"minister of pubblic administration\" AND took_office = \"14 november 2002\"",
        "context": "CREATE TABLE table_name_97 (minister VARCHAR, portfolio VARCHAR, took_office VARCHAR)",
        "question": "What is Minister, when Portfolio is \"Minister of Pubblic Administration\", and when Took Office is \"14 November 2002\"?"
    },
    {
        "answer": "SELECT record FROM table_name_14 WHERE event = \"ufc 27\"",
        "context": "CREATE TABLE table_name_14 (record VARCHAR, event VARCHAR)",
        "question": "What is the record during the event, UFC 27?"
    },
    {
        "answer": "SELECT venue FROM table_name_49 WHERE year < 2001 AND competition = \"world race walking cup\"",
        "context": "CREATE TABLE table_name_49 (venue VARCHAR, year VARCHAR, competition VARCHAR)",
        "question": "Where was the world race walking cup held before 2001?"
    },
    {
        "answer": "SELECT competition FROM table_name_66 WHERE res = \"marian sandu\"",
        "context": "CREATE TABLE table_name_66 (competition VARCHAR, res VARCHAR)",
        "question": "WHAT COMPETITION HAS MARIAN SANDU?"
    },
    {
        "answer": "SELECT venue FROM table_name_65 WHERE score = \"5-0\" AND date = \"october 27, 2005\"",
        "context": "CREATE TABLE table_name_65 (venue VARCHAR, score VARCHAR, date VARCHAR)",
        "question": "What Venue on October 27, 2005 had a Score of 5-0?"
    },
    {
        "answer": "SELECT player FROM table_name_91 WHERE year_s__won = \"1994\"",
        "context": "CREATE TABLE table_name_91 (player VARCHAR, year_s__won VARCHAR)",
        "question": "Who is the player who won in 1994?"
    },
    {
        "answer": "SELECT year FROM table_name_36 WHERE championship = \"peter jackson classic\"",
        "context": "CREATE TABLE table_name_36 (year VARCHAR, championship VARCHAR)",
        "question": "Which year was the peter jackson classic?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_71 WHERE visitor = \"toronto\"",
        "context": "CREATE TABLE table_name_71 (attendance INTEGER, visitor VARCHAR)",
        "question": "What is the average Attendance, when Visitor is Toronto?"
    },
    {
        "answer": "SELECT round FROM table_name_49 WHERE record = \"3-4\"",
        "context": "CREATE TABLE table_name_49 (round VARCHAR, record VARCHAR)",
        "question": "What round has 3-4 as the record?"
    },
    {
        "answer": "SELECT country FROM table_name_70 WHERE player = \"bobby nichols\"",
        "context": "CREATE TABLE table_name_70 (country VARCHAR, player VARCHAR)",
        "question": "What country does Bobby Nichols play for?"
    },
    {
        "answer": "SELECT grid FROM table_name_22 WHERE manufacturer = \"honda\" AND laps = \"24\" AND time_retired = \"+13.997\"",
        "context": "CREATE TABLE table_name_22 (grid VARCHAR, time_retired VARCHAR, manufacturer VARCHAR, laps VARCHAR)",
        "question": "WHAT IS THE GRID OF HONDA, WITH 24 LAPS AND  Time/Retired of +13.997?"
    },
    {
        "answer": "SELECT number FROM table_name_14 WHERE party = \"socialist party\" AND pr\u00e9sident = \"yves krattinger\"",
        "context": "CREATE TABLE table_name_14 (number VARCHAR, party VARCHAR, pr\u00e9sident VARCHAR)",
        "question": "What number corresponds to Presidet Yves Krattinger of the Socialist party?"
    },
    {
        "answer": "SELECT d\u00e9partment__or_collectivity_ FROM table_name_54 WHERE since = 2008 AND pr\u00e9sident = \"guy-dominique kennel\"",
        "context": "CREATE TABLE table_name_54 (d\u00e9partment__or_collectivity_ VARCHAR, since VARCHAR, pr\u00e9sident VARCHAR)",
        "question": "Which department has Guy-Dominique Kennel as president since 2008?"
    },
    {
        "answer": "SELECT to_par FROM table_name_13 WHERE country = \"united states\" AND player = \"hale irwin\"",
        "context": "CREATE TABLE table_name_13 (to_par VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "What's the to par for Hale Irwin of the United States?"
    },
    {
        "answer": "SELECT SUM(bronze) FROM table_name_53 WHERE silver > 1 AND total > 3 AND nation = \"turkey\" AND gold < 2",
        "context": "CREATE TABLE table_name_53 (bronze INTEGER, gold VARCHAR, nation VARCHAR, silver VARCHAR, total VARCHAR)",
        "question": "Which Bronze has a Silver larger than 1, a Total larger than 3, a Nation of turkey, and a Gold smaller than 2?"
    },
    {
        "answer": "SELECT position__eliminated FROM table_name_29 WHERE age\u00b9 < 22 AND full_name = \"muhammad fairul azreen bin mohd zahid\"",
        "context": "CREATE TABLE table_name_29 (position__eliminated VARCHAR, age\u00b9 VARCHAR, full_name VARCHAR)",
        "question": "What is Position/ Eliminated, when Age\u00b9 is less than 22, and when Full Name is \"Muhammad Fairul Azreen Bin Mohd Zahid\"?"
    },
    {
        "answer": "SELECT site FROM table_name_98 WHERE score = \"0-1\"",
        "context": "CREATE TABLE table_name_98 (site VARCHAR, score VARCHAR)",
        "question": "Which site has a Score of 0-1?"
    },
    {
        "answer": "SELECT sport FROM table_name_76 WHERE city = \"huntsville\" AND venue = \"von braun center\" AND league = \"southern indoor football league\"",
        "context": "CREATE TABLE table_name_76 (sport VARCHAR, league VARCHAR, city VARCHAR, venue VARCHAR)",
        "question": "Which sport was held in Huntsville at the Von Braun Center as part of the Southern Indoor Football League?"
    },
    {
        "answer": "SELECT MAX(crowd) FROM table_name_85 WHERE away_team = \"sydney\"",
        "context": "CREATE TABLE table_name_85 (crowd INTEGER, away_team VARCHAR)",
        "question": "Which Crowd has a Away team of sydney?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_29 WHERE score = \"0:2\"",
        "context": "CREATE TABLE table_name_29 (attendance INTEGER, score VARCHAR)",
        "question": "Which Attendance has a Score of 0:2?"
    },
    {
        "answer": "SELECT date FROM table_name_15 WHERE location_attendance = \"verizon center 7,448\"",
        "context": "CREATE TABLE table_name_15 (date VARCHAR, location_attendance VARCHAR)",
        "question": "Which Date has a Location/Attendance of verizon center 7,448?"
    },
    {
        "answer": "SELECT status FROM table_name_24 WHERE newspaper_magazine = \"al-thawra\"",
        "context": "CREATE TABLE table_name_24 (status VARCHAR, newspaper_magazine VARCHAR)",
        "question": "What is Status, when Newspaper/Magazine is Al-Thawra?"
    },
    {
        "answer": "SELECT MAX(draws) FROM table_name_1 WHERE goals_against > 33 AND losses = 13 AND goals_for < 51",
        "context": "CREATE TABLE table_name_1 (draws INTEGER, goals_for VARCHAR, goals_against VARCHAR, losses VARCHAR)",
        "question": "What is the most draws when goals against are more than 33, losses are 13 and goals for is less than 51?"
    },
    {
        "answer": "SELECT released FROM table_name_13 WHERE series_sorted = \"6y/aa\"",
        "context": "CREATE TABLE table_name_13 (released VARCHAR, series_sorted VARCHAR)",
        "question": "What was the date of release for the episode sorted value of 6Y/AA?"
    },
    {
        "answer": "SELECT elevator FROM table_name_56 WHERE order_and_title = \"cardinal-deacon of s. nicola in carcere tulliano\"",
        "context": "CREATE TABLE table_name_56 (elevator VARCHAR, order_and_title VARCHAR)",
        "question": "Who was the elevator when the Cardinal-Deacon of S. Nicola in Carcere Tulliano was the order and title?"
    },
    {
        "answer": "SELECT nationality FROM table_name_98 WHERE elevator = \"innocent iv\"",
        "context": "CREATE TABLE table_name_98 (nationality VARCHAR, elevator VARCHAR)",
        "question": "When the elevator was Innocent IV what was the nationality?"
    },
    {
        "answer": "SELECT elevator FROM table_name_63 WHERE elector = \"giovanni gaetano orsini\"",
        "context": "CREATE TABLE table_name_63 (elevator VARCHAR, elector VARCHAR)",
        "question": "When Giovanni Gaetano Orsini was the elector who was the elevator?"
    },
    {
        "answer": "SELECT score FROM table_name_56 WHERE tournament = \"rabat\" AND opponent_in_the_final = \"frederico gil\"",
        "context": "CREATE TABLE table_name_56 (score VARCHAR, tournament VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "What is the Score of the Rabat Tournament with Opponent in the final of Frederico Gil?"
    },
    {
        "answer": "SELECT AVG(wheels) FROM table_name_71 WHERE type = \"accounting\" AND location = \"ibm collection\"",
        "context": "CREATE TABLE table_name_71 (wheels INTEGER, type VARCHAR, location VARCHAR)",
        "question": "What average wheels has accounting as the type, with IBM Collection as the location?"
    },
    {
        "answer": "SELECT borough FROM table_name_54 WHERE location = \"seward\" AND listed = \"1977-11-23\"",
        "context": "CREATE TABLE table_name_54 (borough VARCHAR, location VARCHAR, listed VARCHAR)",
        "question": "What is the Borough for the Seward listing on 1977-11-23?"
    },
    {
        "answer": "SELECT MIN(episode__number) FROM table_name_89 WHERE rating/share = 0.9 / 4 AND viewers__millions_ > 3.79",
        "context": "",
        "question": "What is the lowest numbered episode that had a rating/share of 0.9/4 and more than 3.79 million viewers?"
    },
    {
        "answer": "SELECT years_of_nba_experience_[a_] FROM table_name_28 WHERE pos = \"g\" AND team = \"portland trail blazers\"",
        "context": "CREATE TABLE table_name_28 (years_of_nba_experience_ VARCHAR, a_ VARCHAR, pos VARCHAR, team VARCHAR)",
        "question": "How many years of NBA experience does the player who plays position g for the Portland Trail Blazers?"
    },
    {
        "answer": "SELECT player FROM table_name_89 WHERE team = \"buffalo braves\" AND previous_team = \"los angeles lakers\" AND career_with_the_franchise_[b_] = \"1970\"",
        "context": "CREATE TABLE table_name_89 (player VARCHAR, team VARCHAR, previous_team VARCHAR, career_with_the_franchise_ VARCHAR, b_ VARCHAR)",
        "question": "Who is the player from the Buffalo Braves with the previous team Los Angeles Lakers and a career with the franchase in 1970?"
    },
    {
        "answer": "SELECT player FROM table_name_16 WHERE place = \"t7\" AND score = 70 - 71 = 141",
        "context": "CREATE TABLE table_name_16 (player VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "Who placed t7 with a score of 70-71=141?"
    },
    {
        "answer": "SELECT nation FROM table_name_38 WHERE bronze > 3 AND gold = 0 AND total = 9",
        "context": "CREATE TABLE table_name_38 (nation VARCHAR, total VARCHAR, bronze VARCHAR, gold VARCHAR)",
        "question": "What nation had more than 3 bronze, 0 gold, and a total of 9?"
    },
    {
        "answer": "SELECT SUM(avg_g) FROM table_name_59 WHERE name = \"josh freeman\" AND loss < 134",
        "context": "CREATE TABLE table_name_59 (avg_g INTEGER, name VARCHAR, loss VARCHAR)",
        "question": "Which Avg/G has a Name of josh freeman, and a Loss smaller than 134?"
    },
    {
        "answer": "SELECT MIN(area_km_2) FROM table_name_21 WHERE population > 1 OFFSET 395",
        "context": "CREATE TABLE table_name_21 (area_km_2 INTEGER, population INTEGER)",
        "question": "What is Area km 2, when Population is greater than 1,395?"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_name_45 WHERE college = \"concordia\"",
        "context": "CREATE TABLE table_name_45 (pick__number INTEGER, college VARCHAR)",
        "question": "Which Pick # has a College of concordia?"
    },
    {
        "answer": "SELECT team FROM table_name_15 WHERE previous_team = \"indiana pacers\"",
        "context": "CREATE TABLE table_name_15 (team VARCHAR, previous_team VARCHAR)",
        "question": "What is the team of the player who was previously on the indiana pacers?"
    },
    {
        "answer": "SELECT position FROM table_name_9 WHERE round > 6 AND overall = 191",
        "context": "CREATE TABLE table_name_9 (position VARCHAR, round VARCHAR, overall VARCHAR)",
        "question": "WHAT IS THE POSITION WITH A ROUND LARGER THAN 6, AND OVERALL OF 191?"
    },
    {
        "answer": "SELECT nba_years_[a_] FROM table_name_58 WHERE nationality = \"united states\" AND previous_team = \"los angeles lakers\"",
        "context": "CREATE TABLE table_name_58 (nba_years_ VARCHAR, a_ VARCHAR, nationality VARCHAR, previous_team VARCHAR)",
        "question": "How many NBA years did the player from the United States who was previously on the los angeles lakers have?"
    },
    {
        "answer": "SELECT sets FROM table_name_95 WHERE nadal = 13 AND federer = 6",
        "context": "CREATE TABLE table_name_95 (sets VARCHAR, nadal VARCHAR, federer VARCHAR)",
        "question": "What were the sets when Federer had 6 and a nadal of 13?"
    },
    {
        "answer": "SELECT country FROM table_name_9 WHERE year = 2009 AND publication = \"paste\"",
        "context": "CREATE TABLE table_name_9 (country VARCHAR, year VARCHAR, publication VARCHAR)",
        "question": "What country had a paste publication in 2009?"
    },
    {
        "answer": "SELECT date FROM table_name_86 WHERE road_team = \"boston\" AND result = \"126-105\"",
        "context": "CREATE TABLE table_name_86 (date VARCHAR, road_team VARCHAR, result VARCHAR)",
        "question": "WHAT IS THE DATE WITH BOSTON ROAD TEAM AND 126-105 RESULT?"
    },
    {
        "answer": "SELECT name FROM table_name_31 WHERE transfer_fee = \"free\" AND status = \"transfer\" AND country = \"eng\"",
        "context": "CREATE TABLE table_name_31 (name VARCHAR, country VARCHAR, transfer_fee VARCHAR, status VARCHAR)",
        "question": "What is the name of the free transfer fee with a transfer status and an ENG country?"
    },
    {
        "answer": "SELECT MAX(series) FROM table_name_94 WHERE premiere = \"29 october 1990\" AND episodes > 6",
        "context": "CREATE TABLE table_name_94 (series INTEGER, premiere VARCHAR, episodes VARCHAR)",
        "question": "Which season premiered on 29 October 1990 and had more than 6 episodes?"
    },
    {
        "answer": "SELECT club FROM table_name_62 WHERE played = \"22\" AND try_bonus = \"0\"",
        "context": "CREATE TABLE table_name_62 (club VARCHAR, played VARCHAR, try_bonus VARCHAR)",
        "question": "What is the name of the club when the played number is 22, and the try bonus was 0?"
    },
    {
        "answer": "SELECT captain FROM table_name_33 WHERE alternate__1_ = \"gintare karpaviciute\"",
        "context": "CREATE TABLE table_name_33 (captain VARCHAR, alternate__1_ VARCHAR)",
        "question": "Which captain has Gintare Karpaviciute as an alternate?"
    },
    {
        "answer": "SELECT MAX(game) FROM table_name_86 WHERE high_assists = \"hedo t\u00fcrko\u011flu (7)\"",
        "context": "CREATE TABLE table_name_86 (game INTEGER, high_assists VARCHAR)",
        "question": "What is the highest Game, when High Assists is \"Hedo T\u00fcrko\u011flu (7)\"?"
    },
    {
        "answer": "SELECT MIN(height__ft_) FROM table_name_62 WHERE year_built > 1961 AND location = \"platz der einheit 1, gallus\" AND height__m_ < 130",
        "context": "CREATE TABLE table_name_62 (height__ft_ INTEGER, height__m_ VARCHAR, year_built VARCHAR, location VARCHAR)",
        "question": "What is the lowest height in feet for the building located in platz der einheit 1, gallus, that was built after 1961 with a height less than 130 meters?"
    },
    {
        "answer": "SELECT MIN(year_built) FROM table_name_26 WHERE location = \"sonnemannstra\u00dfe/r\u00fcckertstra\u00dfe, ostend\" AND height__m_ > 185",
        "context": "CREATE TABLE table_name_26 (year_built INTEGER, location VARCHAR, height__m_ VARCHAR)",
        "question": "What is the earliest year that the building in sonnemannstra\u00dfe/r\u00fcckertstra\u00dfe, ostend was built with a height larger than 185 meters?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_73 WHERE h___a = \"h\" AND round = \"semi-finals second leg\"",
        "context": "CREATE TABLE table_name_73 (attendance INTEGER, h___a VARCHAR, round VARCHAR)",
        "question": "What is the lowest attendance when the h/A is H in the Semi-Finals Second Leg?"
    },
    {
        "answer": "SELECT serials_issued FROM table_name_60 WHERE serial_format = \"abc-123\" AND issued = \"1982\"",
        "context": "CREATE TABLE table_name_60 (serials_issued VARCHAR, serial_format VARCHAR, issued VARCHAR)",
        "question": "What is the serials issued in 1982 with a format of ABC-123?"
    },
    {
        "answer": "SELECT name FROM table_name_30 WHERE county = \"sheridan\" AND built = \"1915\"",
        "context": "CREATE TABLE table_name_30 (name VARCHAR, county VARCHAR, built VARCHAR)",
        "question": "What bridge in Sheridan county was built in 1915?"
    },
    {
        "answer": "SELECT listed FROM table_name_86 WHERE county = \"sublette\" AND location = \"daniel\"",
        "context": "CREATE TABLE table_name_86 (listed VARCHAR, county VARCHAR, location VARCHAR)",
        "question": "What is the listed for the bridge at Daniel in Sublette county?"
    },
    {
        "answer": "SELECT COUNT(pick) FROM table_name_25 WHERE position = \"lb\" AND overall < 46",
        "context": "CREATE TABLE table_name_25 (pick VARCHAR, position VARCHAR, overall VARCHAR)",
        "question": "How many times is the position lb and the overall is less than 46?"
    },
    {
        "answer": "SELECT date FROM table_name_59 WHERE location = \"fleetcenter\" AND game < 9 AND score = \"104-94\"",
        "context": "CREATE TABLE table_name_59 (date VARCHAR, score VARCHAR, location VARCHAR, game VARCHAR)",
        "question": "On what date did Fleetcenter have a game lower than 9 with a score of 104-94?"
    },
    {
        "answer": "SELECT AVG(2000) FROM table_name_97 WHERE location = \"montana\" AND reservation = \"fort peck indian reservation\" AND 1979 < 26.8",
        "context": "CREATE TABLE table_name_97 (location VARCHAR, reservation VARCHAR)",
        "question": "What shows for 2000 at the Fort Peck Indian Reservation, Montana, when the 1979 is less than 26.8?"
    },
    {
        "answer": "SELECT COUNT(placings) FROM table_name_1 WHERE points < 330.84 AND name = \"silvo svajger\"",
        "context": "CREATE TABLE table_name_1 (placings VARCHAR, points VARCHAR, name VARCHAR)",
        "question": "How many Placings have Points smaller than 330.84, and a Name of silvo svajger?"
    },
    {
        "answer": "SELECT SUM(round) FROM table_name_40 WHERE college_junior_club_team = \"brandon wheat kings ( whl )\" AND player = \"mike perovich (d)\" AND pick < 23",
        "context": "CREATE TABLE table_name_40 (round INTEGER, pick VARCHAR, college_junior_club_team VARCHAR, player VARCHAR)",
        "question": "What is Sum of Round, when College/Junior/Club Team is Brandon Wheat Kings ( WHL ), when Player is Mike Perovich (D), and when Pick is less than 23?"
    },
    {
        "answer": "SELECT manner_of_departure FROM table_name_9 WHERE date_of_appointment = \"23 november 2008\"",
        "context": "CREATE TABLE table_name_9 (manner_of_departure VARCHAR, date_of_appointment VARCHAR)",
        "question": "What was the manner of depature of the manager with a date of appointment on 23 November 2008?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_name_24 WHERE team = \"fc bayern munich\" AND date_of_appointment = \"27 april 2009\"",
        "context": "CREATE TABLE table_name_24 (date_of_vacancy VARCHAR, team VARCHAR, date_of_appointment VARCHAR)",
        "question": "What is the date of vacancy of team fc bayern munich, which had a date of appointment on 27 April 2009?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_name_26 WHERE manner_of_departure = \"sacked\" AND outgoing_manager = \"fred rutten\"",
        "context": "CREATE TABLE table_name_26 (date_of_appointment VARCHAR, manner_of_departure VARCHAR, outgoing_manager VARCHAR)",
        "question": "What is the date of appointment of outgoing manager fred rutten, who had a sacked manner of departure?"
    },
    {
        "answer": "SELECT SUM(overall) FROM table_name_24 WHERE pick > 19 AND college = \"florida\"",
        "context": "CREATE TABLE table_name_24 (overall INTEGER, pick VARCHAR, college VARCHAR)",
        "question": "How many overalls have a pick greater than 19, with florida as the college?"
    },
    {
        "answer": "SELECT format FROM table_name_12 WHERE label = \"bronze\" AND date = \"1982\" AND catalogue = \"204 636\"",
        "context": "CREATE TABLE table_name_12 (format VARCHAR, catalogue VARCHAR, label VARCHAR, date VARCHAR)",
        "question": "What is Format, when Label is Bronze, when Date is 1982, and when Catalogue is 204 636?"
    },
    {
        "answer": "SELECT MIN(cycle) FROM table_name_57 WHERE number_of_contestants = \"11\" AND international_destinations = \"paris gran canaria\"",
        "context": "CREATE TABLE table_name_57 (cycle INTEGER, number_of_contestants VARCHAR, international_destinations VARCHAR)",
        "question": "What is the lowest Cycle, when Number Of Contestants is 11, and when International Destinations is Paris Gran Canaria?"
    },
    {
        "answer": "SELECT number_of_contestants FROM table_name_55 WHERE international_destinations = \"london lisbon\"",
        "context": "CREATE TABLE table_name_55 (number_of_contestants VARCHAR, international_destinations VARCHAR)",
        "question": "What is Number of Contestants, when International Destinations is London Lisbon?"
    },
    {
        "answer": "SELECT score FROM table_name_21 WHERE location_attendance = \"groves high school\" AND high_assists = \"giovanni riley (9)\"",
        "context": "CREATE TABLE table_name_21 (score VARCHAR, location_attendance VARCHAR, high_assists VARCHAR)",
        "question": "What was the score for Groves High School when the high assist was Giovanni Riley (9)?"
    },
    {
        "answer": "SELECT opponent FROM table_name_38 WHERE location_attendance = \"richmond academy\"",
        "context": "CREATE TABLE table_name_38 (opponent VARCHAR, location_attendance VARCHAR)",
        "question": "What opponent is at Richmond Academy?"
    },
    {
        "answer": "SELECT SUM(game) FROM table_name_42 WHERE opponent = \"@ st. louis hawks\"",
        "context": "CREATE TABLE table_name_42 (game INTEGER, opponent VARCHAR)",
        "question": "How many total games were played against @ St. Louis Hawks this season?"
    },
    {
        "answer": "SELECT notes FROM table_name_40 WHERE year < 2013 AND language = \"mandarin chinese\" AND network = \"ctv\"",
        "context": "CREATE TABLE table_name_40 (notes VARCHAR, network VARCHAR, year VARCHAR, language VARCHAR)",
        "question": "What are the notes for the Mandarin Chinese program on CTV earlier than 2013?"
    },
    {
        "answer": "SELECT network FROM table_name_70 WHERE year < 2011 AND title = \"star king\"",
        "context": "CREATE TABLE table_name_70 (network VARCHAR, year VARCHAR, title VARCHAR)",
        "question": "What is the network that aired Star King prior to 2011?"
    },
    {
        "answer": "SELECT MAX(bush_number) FROM table_name_85 WHERE others_percentage = \"1.7%\" AND others_number < 75 AND kerry_number > 1 OFFSET 524",
        "context": "CREATE TABLE table_name_85 (bush_number INTEGER, kerry_number VARCHAR, others_percentage VARCHAR, others_number VARCHAR)",
        "question": "What is the highest Bush#, when Others% is \"1.7%\", when Others# is less than 75, and when Kerry# is greater than 1,524?"
    },
    {
        "answer": "SELECT english_translation FROM table_name_51 WHERE language = \"english\" AND draw < 16 AND artist = \"aysel and arash\"",
        "context": "CREATE TABLE table_name_51 (english_translation VARCHAR, artist VARCHAR, language VARCHAR, draw VARCHAR)",
        "question": "what is the english translation when the Language is english, Draw is smaller than 16, and the Artist is aysel and arash?"
    },
    {
        "answer": "SELECT player FROM table_name_85 WHERE position = \"power forward\" AND school_club_team = \"depaul\"",
        "context": "CREATE TABLE table_name_85 (player VARCHAR, position VARCHAR, school_club_team VARCHAR)",
        "question": "Which Player has position of power forward and School/Club Team of Depaul?"
    },
    {
        "answer": "SELECT MIN(game) FROM table_name_66 WHERE date = \"february 10\"",
        "context": "CREATE TABLE table_name_66 (game INTEGER, date VARCHAR)",
        "question": "What is the lowest game on February 10?"
    },
    {
        "answer": "SELECT driver___passenger FROM table_name_56 WHERE third = \"1\" AND position < 8 AND wins = \"1\"",
        "context": "CREATE TABLE table_name_56 (driver___passenger VARCHAR, wins VARCHAR, third VARCHAR, position VARCHAR)",
        "question": "Who was the driver/passengar when the position was smaller than 8, the third was 1, and there was 1 win?"
    },
    {
        "answer": "SELECT MIN(points_won) FROM table_name_66 WHERE total_matches = 4 AND total_w_l_h = \"4-0-0\"",
        "context": "CREATE TABLE table_name_66 (points_won INTEGER, total_matches VARCHAR, total_w_l_h VARCHAR)",
        "question": "Can you tell me the lowest Points won that has the Total matches of 4, and the Total W-L-H of 4-0-0?"
    },
    {
        "answer": "SELECT score FROM table_name_85 WHERE country = \"australia\"",
        "context": "CREATE TABLE table_name_85 (score VARCHAR, country VARCHAR)",
        "question": "What score did Australia get?"
    },
    {
        "answer": "SELECT team FROM table_name_92 WHERE replaced_by = \"jes\u00fas ram\u00edrez\"",
        "context": "CREATE TABLE table_name_92 (team VARCHAR, replaced_by VARCHAR)",
        "question": "What is Team, when Replaced By is \"Jes\u00fas Ram\u00edrez\"?"
    },
    {
        "answer": "SELECT position_in_table FROM table_name_43 WHERE replaced_by = \"jos\u00e9 pekerman\"",
        "context": "CREATE TABLE table_name_43 (position_in_table VARCHAR, replaced_by VARCHAR)",
        "question": "What is Position in Table, when Replaced by is \"Jos\u00e9 Pekerman\"?"
    },
    {
        "answer": "SELECT AVG(gold) FROM table_name_84 WHERE nation = \"india\" AND bronze < 0",
        "context": "CREATE TABLE table_name_84 (gold INTEGER, nation VARCHAR, bronze VARCHAR)",
        "question": "Which Gold has a Nation of india, and a Bronze smaller than 0?"
    },
    {
        "answer": "SELECT MIN(avg_g) FROM table_name_86 WHERE long < 47 AND name = \"frank murphy\" AND gain < 569",
        "context": "CREATE TABLE table_name_86 (avg_g INTEGER, gain VARCHAR, long VARCHAR, name VARCHAR)",
        "question": "Which Avg/G is the lowest one that has a Long smaller than 47, and a Name of frank murphy, and a Gain smaller than 569?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_27 WHERE bronze > 2 AND gold < 16 AND silver = 0 AND rank = \"13\"",
        "context": "CREATE TABLE table_name_27 (total INTEGER, rank VARCHAR, silver VARCHAR, bronze VARCHAR, gold VARCHAR)",
        "question": "Which Total has a Bronze larger than 2, a Gold smaller than 16, a Silver of 0, and a Rank of 13?"
    },
    {
        "answer": "SELECT SUM(population__2005_) FROM table_name_14 WHERE literacy__2003_ = \"90%\" AND infant_mortality__2002_ = \"18.3\u2030\"",
        "context": "CREATE TABLE table_name_14 (population__2005_ INTEGER, literacy__2003_ VARCHAR, infant_mortality__2002_ VARCHAR)",
        "question": "Which Population (2005) has a Literacy (2003) of 90%, and an Infant Mortality (2002) of 18.3\u2030?"
    },
    {
        "answer": "SELECT SUM(density__2005_) FROM table_name_25 WHERE area__km\u00b2_ = 340086.7 AND population__2005_ < 5926300",
        "context": "CREATE TABLE table_name_25 (density__2005_ INTEGER, area__km\u00b2_ VARCHAR, population__2005_ VARCHAR)",
        "question": "Which Density (2005) has an Area (km\u00b2) of 340086.7, and a Population (2005) smaller than 5926300?"
    },
    {
        "answer": "SELECT literacy__2003_ FROM table_name_8 WHERE hdi__2005_ < 0.718 AND gdp_per_capita__us$___2004_ < 3877 AND state = \"maranh\u00e3o\"",
        "context": "CREATE TABLE table_name_8 (literacy__2003_ VARCHAR, state VARCHAR, hdi__2005_ VARCHAR, gdp_per_capita__us$___2004_ VARCHAR)",
        "question": "Which Literacy (2003) has an HDI (2005) smaller than 0.718, and a GDP per capita (US$) (2004) smaller than 3877, and a State of maranh\u00e3o?"
    },
    {
        "answer": "SELECT AVG(gdp_per_capita__us) AS $___2004_ FROM table_name_53 WHERE literacy__2003_ = \"90%\" AND area__km\u00b2_ = 1247689.5",
        "context": "CREATE TABLE table_name_53 (gdp_per_capita__us INTEGER, literacy__2003_ VARCHAR, area__km\u00b2_ VARCHAR)",
        "question": "Which GDP per capita (US$) (2004) has a Literacy (2003) of 90%, and an Area (km\u00b2) of 1247689.5?"
    },
    {
        "answer": "SELECT date__to_ FROM table_name_38 WHERE traction_type = \"electric\" AND name_of_system = \"yarmouth light and power company\"",
        "context": "CREATE TABLE table_name_38 (date__to_ VARCHAR, traction_type VARCHAR, name_of_system VARCHAR)",
        "question": "What is the date (to) associated wiht a traction type of electric and the Yarmouth Light and Power Company system?"
    },
    {
        "answer": "SELECT SUM(overall) FROM table_name_69 WHERE pick > 5 AND round < 11 AND name = \"tom barrington\"",
        "context": "CREATE TABLE table_name_69 (overall INTEGER, name VARCHAR, pick VARCHAR, round VARCHAR)",
        "question": "What is the sum of Overall, when Pick is greater than 5, when Round is less than 11, and when Name is \"Tom Barrington\"?"
    },
    {
        "answer": "SELECT COUNT(game) FROM table_name_37 WHERE opponents < 118 AND nets_points > 109 AND opponent = \"washington\"",
        "context": "CREATE TABLE table_name_37 (game VARCHAR, opponent VARCHAR, opponents VARCHAR, nets_points VARCHAR)",
        "question": "How many games had fewer than 118 opponents and more than 109 net points with an opponent of Washington?"
    },
    {
        "answer": "SELECT opponent FROM table_name_43 WHERE venue = \"a\" AND date = \"17 february 1900\"",
        "context": "CREATE TABLE table_name_43 (opponent VARCHAR, venue VARCHAR, date VARCHAR)",
        "question": "Who played against in venue a on 17 february 1900?"
    },
    {
        "answer": "SELECT class FROM table_name_85 WHERE laps < 71 AND team = \"liqui moly equipe\"",
        "context": "CREATE TABLE table_name_85 (class VARCHAR, laps VARCHAR, team VARCHAR)",
        "question": "What is the class of team liqui moly equipe, which has less than 71 laps?"
    },
    {
        "answer": "SELECT COUNT(january) FROM table_name_67 WHERE game < 37 AND opponent = \"detroit red wings\"",
        "context": "CREATE TABLE table_name_67 (january VARCHAR, game VARCHAR, opponent VARCHAR)",
        "question": "How much January has a Game smaller than 37, and an Opponent of detroit red wings?"
    },
    {
        "answer": "SELECT player FROM table_name_77 WHERE round < 5 AND school_club_team = \"florida state\"",
        "context": "CREATE TABLE table_name_77 (player VARCHAR, round VARCHAR, school_club_team VARCHAR)",
        "question": "Which Player has a Round smaller than 5, and a School/Club Team of florida state?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_87 WHERE year < 2002 AND ascent_time = \"43:24\"",
        "context": "CREATE TABLE table_name_87 (rank VARCHAR, year VARCHAR, ascent_time VARCHAR)",
        "question": "What was the rank of the rider whose ascent time was 43:24 before the year 2002?"
    },
    {
        "answer": "SELECT rider FROM table_name_43 WHERE rank < 8 AND year = 2000 AND speed = \"18.32 km/h\"",
        "context": "CREATE TABLE table_name_43 (rider VARCHAR, speed VARCHAR, rank VARCHAR, year VARCHAR)",
        "question": "Who is the rider that has a rank of less than 8 in the year 2000, and whose speed was 18.32 km/h?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_67 WHERE school_club_team = \"cal-poly slo\" AND pick < 238",
        "context": "CREATE TABLE table_name_67 (round INTEGER, school_club_team VARCHAR, pick VARCHAR)",
        "question": "Which Round has a School/Club Team of cal-poly slo, and a Pick smaller than 238?"
    },
    {
        "answer": "SELECT probable_future FROM table_name_82 WHERE NOT simple_present_future = \"high grade\"",
        "context": "CREATE TABLE table_name_82 (probable_future VARCHAR, simple_present_future VARCHAR)",
        "question": "What is the probable future word for the simple present/future word high grade?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_83 WHERE assists = 5 AND rebounds < 16",
        "context": "CREATE TABLE table_name_83 (points VARCHAR, assists VARCHAR, rebounds VARCHAR)",
        "question": "How many points were there when there were less than 16 rebounds and 5 assists?"
    },
    {
        "answer": "SELECT COUNT(minutes_played) FROM table_name_55 WHERE points = 18 AND opponent = \"chicago bulls\"",
        "context": "CREATE TABLE table_name_55 (minutes_played VARCHAR, points VARCHAR, opponent VARCHAR)",
        "question": "How many minutes were played when there were 18 points and the opponent was Chicago Bulls?"
    },
    {
        "answer": "SELECT mountain_peak FROM table_name_87 WHERE region = \"baja california\" AND location = \"28.1301\u00b0n 115.2206\u00b0w\"",
        "context": "CREATE TABLE table_name_87 (mountain_peak VARCHAR, region VARCHAR, location VARCHAR)",
        "question": "Which Mountain Peak has a Region of baja california, and a Location of 28.1301\u00b0n 115.2206\u00b0w?"
    },
    {
        "answer": "SELECT championship FROM table_name_9 WHERE winning_score = 69 - 71 - 67 - 68 = 275",
        "context": "CREATE TABLE table_name_9 (championship VARCHAR, winning_score VARCHAR)",
        "question": "What Championship had a winning score of 69-71-67-68=275?"
    },
    {
        "answer": "SELECT record FROM table_name_37 WHERE opponent = \"jeff williams\"",
        "context": "CREATE TABLE table_name_37 (record VARCHAR, opponent VARCHAR)",
        "question": "what is the record when the opponent is jeff williams?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_name_50 WHERE high_assists = \"jason kidd (13)\"",
        "context": "CREATE TABLE table_name_50 (high_rebounds VARCHAR, high_assists VARCHAR)",
        "question": "What is High Rebounds, when High Assists is \"Jason Kidd (13)\"?"
    },
    {
        "answer": "SELECT game FROM table_name_33 WHERE date = \"march 30\"",
        "context": "CREATE TABLE table_name_33 (game VARCHAR, date VARCHAR)",
        "question": "What is the Game number on March 30?"
    },
    {
        "answer": "SELECT result FROM table_name_16 WHERE game = \"game 3\"",
        "context": "CREATE TABLE table_name_16 (result VARCHAR, game VARCHAR)",
        "question": "What is the Result of Game 3?"
    },
    {
        "answer": "SELECT home FROM table_name_62 WHERE away = \"hispano\"",
        "context": "CREATE TABLE table_name_62 (home VARCHAR, away VARCHAR)",
        "question": "Which Home has an Away of hispano?"
    },
    {
        "answer": "SELECT outcome FROM table_name_63 WHERE opponent = \"victoria azarenka\" AND score = \"6\u20132, 2\u20136, 7\u20135\"",
        "context": "CREATE TABLE table_name_63 (outcome VARCHAR, opponent VARCHAR, score VARCHAR)",
        "question": "What is Outcome, when Opponent is Victoria Azarenka, and when Score is 6\u20132, 2\u20136, 7\u20135?"
    },
    {
        "answer": "SELECT result FROM table_name_49 WHERE date = \"october 8, 1961\"",
        "context": "CREATE TABLE table_name_49 (result VARCHAR, date VARCHAR)",
        "question": "What was the result on october 8, 1961?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_52 WHERE tournament = \"rr donnelley lpga founders cup\"",
        "context": "CREATE TABLE table_name_52 (runner_s__up VARCHAR, tournament VARCHAR)",
        "question": "Who was the runner-up in the RR Donnelley LPGA Founders Cup?"
    },
    {
        "answer": "SELECT opponent FROM table_name_93 WHERE surface = \"clay\" AND outcome = \"winner\" AND championship = \"estoril\" AND date = \"15 april 1996\"",
        "context": "CREATE TABLE table_name_93 (opponent VARCHAR, date VARCHAR, championship VARCHAR, surface VARCHAR, outcome VARCHAR)",
        "question": "who is the opponent when the surface is clay, the outcome is winner and the championship is estoril on 15 april 1996?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_40 WHERE date = \"november 29, 1981\" AND week > 13",
        "context": "CREATE TABLE table_name_40 (attendance INTEGER, date VARCHAR, week VARCHAR)",
        "question": "What was the average number of attendance for the game on November 29, 1981 played after week 13?"
    },
    {
        "answer": "SELECT score FROM table_name_48 WHERE runner_up = \"falkirk\"",
        "context": "CREATE TABLE table_name_48 (score VARCHAR, runner_up VARCHAR)",
        "question": "What is the score of the game with Falkirk as the runner-up?"
    },
    {
        "answer": "SELECT MIN(week) FROM table_name_69 WHERE opponent = \"pittsburgh steelers\" AND attendance > 47 OFFSET 727",
        "context": "CREATE TABLE table_name_69 (week INTEGER, opponent VARCHAR, attendance VARCHAR)",
        "question": "Which Week has an Opponent of pittsburgh steelers, and an Attendance larger than 47,727?"
    },
    {
        "answer": "SELECT MAX(population) FROM table_name_97 WHERE area_km_2 > 326.76 AND official_name = \"new bandon\"",
        "context": "CREATE TABLE table_name_97 (population INTEGER, area_km_2 VARCHAR, official_name VARCHAR)",
        "question": "What is the Population of the New Bandon Parish with an Area km 2 larger than 326.76?"
    },
    {
        "answer": "SELECT SUM(area_km_2) FROM table_name_10 WHERE official_name = \"allardville\" AND population < 2 OFFSET 151",
        "context": "CREATE TABLE table_name_10 (area_km_2 INTEGER, official_name VARCHAR, population VARCHAR)",
        "question": "What is the Area of the Allardville Parish with a Population smaller than 2,151?"
    },
    {
        "answer": "SELECT team_1 FROM table_name_11 WHERE season > 2005 AND score = \"4-2\"",
        "context": "CREATE TABLE table_name_11 (team_1 VARCHAR, season VARCHAR, score VARCHAR)",
        "question": "What is the name of team 1 that was after the 2005 season and with a 4-2 score?"
    },
    {
        "answer": "SELECT COUNT(total_rebounds) FROM table_name_5 WHERE player = \"andre gaddy\" AND rank < 6",
        "context": "CREATE TABLE table_name_5 (total_rebounds VARCHAR, player VARCHAR, rank VARCHAR)",
        "question": "How many rebounds have a Player of andre gaddy, and a Rank smaller than 6?"
    },
    {
        "answer": "SELECT crowd FROM table_name_13 WHERE score = \"101-105\"",
        "context": "CREATE TABLE table_name_13 (crowd VARCHAR, score VARCHAR)",
        "question": "What was the crowd size for the game with a score of 101-105?"
    },
    {
        "answer": "SELECT city_of_license FROM table_name_8 WHERE frequency_mhz < 102.5",
        "context": "CREATE TABLE table_name_8 (city_of_license VARCHAR, frequency_mhz INTEGER)",
        "question": "What is City of License, when Frequency MHz is less than 102.5?"
    },
    {
        "answer": "SELECT call_sign FROM table_name_51 WHERE city_of_license = \"brownfield, texas\"",
        "context": "CREATE TABLE table_name_51 (call_sign VARCHAR, city_of_license VARCHAR)",
        "question": "What is Call Sign, when City of License is Brownfield, Texas?"
    },
    {
        "answer": "SELECT overall FROM table_name_72 WHERE pick < 9 AND college = \"michigan state\" AND name = \"buck mystrom\"",
        "context": "CREATE TABLE table_name_72 (overall VARCHAR, name VARCHAR, pick VARCHAR, college VARCHAR)",
        "question": "What is the overall pick number for a draft pick smaller than 9, named buck mystrom from Michigan State college?"
    },
    {
        "answer": "SELECT COUNT(evening_gown) FROM table_name_60 WHERE average > 8.984 AND country = \"louisiana\" AND preliminary > 8.597",
        "context": "CREATE TABLE table_name_60 (evening_gown VARCHAR, preliminary VARCHAR, average VARCHAR, country VARCHAR)",
        "question": "What is the evening gown number when the average is more than 8.984 in Louisiana and the preliminary is more than 8.597?"
    },
    {
        "answer": "SELECT COUNT(swimsuit) FROM table_name_98 WHERE preliminary = 8.721 AND average > 8.781",
        "context": "CREATE TABLE table_name_98 (swimsuit VARCHAR, preliminary VARCHAR, average VARCHAR)",
        "question": "What is the swimsuit number when the preliminary is 8.721, and the average is more than 8.781?"
    },
    {
        "answer": "SELECT partner FROM table_name_64 WHERE score = \"6\u20133, 7\u20136 (7\u20133)\"",
        "context": "CREATE TABLE table_name_64 (partner VARCHAR, score VARCHAR)",
        "question": "Who was Silva's Partner in the match with a Score of 6\u20133, 7\u20136 (7\u20133)?"
    },
    {
        "answer": "SELECT attendance FROM table_name_48 WHERE home_team = \"walsall\"",
        "context": "CREATE TABLE table_name_48 (attendance VARCHAR, home_team VARCHAR)",
        "question": "What was the attendance for the home team of Walsall?"
    },
    {
        "answer": "SELECT tournament FROM table_name_33 WHERE partner = \"nicole thijssen\" AND opponent_in_the_final = \"nina bratchikova & frederica piedade\"",
        "context": "CREATE TABLE table_name_33 (tournament VARCHAR, partner VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "What Tournament did Silva Partner with Nicole Thijssen with Opponent in the final Nina Bratchikova & Frederica Piedade?"
    },
    {
        "answer": "SELECT margin_of_victory FROM table_name_78 WHERE runner_s__up = \"amy alcott\" AND winning_score = \u20139(72 - 68 - 67 = 207)",
        "context": "CREATE TABLE table_name_78 (margin_of_victory VARCHAR, runner_s__up VARCHAR, winning_score VARCHAR)",
        "question": "what is the margin of victory when the runner-up is amy alcott and the winning score is \u20139 (72-68-67=207)?"
    },
    {
        "answer": "SELECT AVG(federal_excise_tax___cad) AS \u00a2___l__ FROM table_name_85 WHERE total_excise_tax__cad\u00a2_l_ > 33.2 AND government = \"vancouver, bc\" AND minimum_tax_incl_sales_taxes__cad\u00a2_l_ < 41.01",
        "context": "CREATE TABLE table_name_85 (federal_excise_tax___cad INTEGER, minimum_tax_incl_sales_taxes__cad\u00a2_l_ VARCHAR, total_excise_tax__cad\u00a2_l_ VARCHAR, government VARCHAR)",
        "question": "What's the fed tax that has a total tax greater than 33.2, a minimum sales tax less than 41.01 and in Vancouver, BC?"
    },
    {
        "answer": "SELECT MIN(minimum_tax_incl_sales_taxes__cad) AS \u00a2_l_ FROM table_name_27 WHERE min_tax__cad\u00a2_us_gal_ = 105.7 AND federal_excise_tax___cad\u00a2___l__ > 10",
        "context": "CREATE TABLE table_name_27 (minimum_tax_incl_sales_taxes__cad INTEGER, min_tax__cad\u00a2_us_gal_ VARCHAR, federal_excise_tax___cad\u00a2___l__ VARCHAR)",
        "question": "What is the least minimum sales tax when the min tax is 105.7 and fed tax is more than 10?"
    },
    {
        "answer": "SELECT type FROM table_name_68 WHERE number_of_bearers_2008 > 12.376 AND rank > 3 AND etymology = \"son of jens\"",
        "context": "CREATE TABLE table_name_68 (type VARCHAR, etymology VARCHAR, number_of_bearers_2008 VARCHAR, rank VARCHAR)",
        "question": "What is Type, when Number of Bearers 2008 is greater than 12.376, when Rank is greater than 3, and when Etymology is Son of Jens?"
    },
    {
        "answer": "SELECT college FROM table_name_74 WHERE round > 9 AND player = \"butch webster\"",
        "context": "CREATE TABLE table_name_74 (college VARCHAR, round VARCHAR, player VARCHAR)",
        "question": "WHAT COLLEGE HAS A ROUND LARGER THAN 9, WITH BUTCH WEBSTER?"
    },
    {
        "answer": "SELECT SUM(game) FROM table_name_40 WHERE attendance = 18 OFFSET 690",
        "context": "CREATE TABLE table_name_40 (game INTEGER, attendance VARCHAR)",
        "question": "What sum of game has an attendance of 18,690?"
    },
    {
        "answer": "SELECT country FROM table_name_95 WHERE place = \"t9\" AND score = 71 - 71 - 72 = 214 AND player = \"ernie els\"",
        "context": "CREATE TABLE table_name_95 (country VARCHAR, player VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "Which Country has a Place of t9, and a Score of 71-71-72=214, and a Player of ernie els?"
    },
    {
        "answer": "SELECT to_par FROM table_name_22 WHERE country = \"united states\" AND player = \"duffy waldorf\"",
        "context": "CREATE TABLE table_name_22 (to_par VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "Which To par has a Country of united states, and a Player of duffy waldorf?"
    },
    {
        "answer": "SELECT MAX(market_value__billion_) AS $_ FROM table_name_79 WHERE profits__billion_$_ = 20.96 AND assets__billion_$_ > 166.99",
        "context": "CREATE TABLE table_name_79 (market_value__billion_ INTEGER, profits__billion_$_ VARCHAR, assets__billion_$_ VARCHAR)",
        "question": "What is the highest market value in billions of the company with profits of 20.96 billions and 166.99 billions in assets?"
    },
    {
        "answer": "SELECT COUNT(market_value__billion_) AS $_ FROM table_name_34 WHERE profits__billion_$_ = 20.96 AND assets__billion_$_ < 166.99",
        "context": "CREATE TABLE table_name_34 (market_value__billion_ VARCHAR, profits__billion_$_ VARCHAR, assets__billion_$_ VARCHAR)",
        "question": "What is the total market value in billions of the company with 20.96 billion in profits and less than 166.99 billions in assets?"
    },
    {
        "answer": "SELECT AVG(assets__billion_) AS $_ FROM table_name_70 WHERE company = \"bank of america\" AND sales__billion_$_ < 49.01",
        "context": "CREATE TABLE table_name_70 (assets__billion_ INTEGER, company VARCHAR, sales__billion_$_ VARCHAR)",
        "question": "What is the average assets in billions of the company Bank of America, which has less than 49.01 billions in sales?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_58 WHERE category = \"best original song (\u0e23\u0e2d\u0e40\u0e18\u0e2d\u0e2b\u0e31\u0e19\u0e21\u0e32 \u2013 \u0e42\u0e1f\u0e01\u0e31\u0e2a \u0e08\u0e34\u0e23\u0e30\u0e01\u0e38\u0e25)\"",
        "context": "CREATE TABLE table_name_58 (year INTEGER, category VARCHAR)",
        "question": "Which Year has a Category of best original song (\u0e23\u0e2d\u0e40\u0e18\u0e2d\u0e2b\u0e31\u0e19\u0e21\u0e32 \u2013 \u0e42\u0e1f\u0e01\u0e31\u0e2a \u0e08\u0e34\u0e23\u0e30\u0e01\u0e38\u0e25)?"
    },
    {
        "answer": "SELECT MAX(total) FROM table_name_4 WHERE nation = \"united states\" AND bronze > 3",
        "context": "CREATE TABLE table_name_4 (total INTEGER, nation VARCHAR, bronze VARCHAR)",
        "question": "Which Total has a Nation of united states, and a Bronze larger than 3?"
    },
    {
        "answer": "SELECT year FROM table_name_7 WHERE award = \"17th bangkok critics assembly awards\" AND category = \"best original score\"",
        "context": "CREATE TABLE table_name_7 (year VARCHAR, award VARCHAR, category VARCHAR)",
        "question": "Which Year has an Award of 17th bangkok critics assembly awards, and a Category of best original score?"
    },
    {
        "answer": "SELECT venue FROM table_name_24 WHERE batsmen = \"jamie cox & scott kremerskothen\"",
        "context": "CREATE TABLE table_name_24 (venue VARCHAR, batsmen VARCHAR)",
        "question": "Where were jamie cox & scott kremerskothen paired?"
    },
    {
        "answer": "SELECT weeks FROM table_name_18 WHERE date = \"december 12, 2001\"",
        "context": "CREATE TABLE table_name_18 (weeks VARCHAR, date VARCHAR)",
        "question": "On December 12, 2001, how many weeks had the single been in its position?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_54 WHERE result = \"l 16-13\"",
        "context": "CREATE TABLE table_name_54 (attendance INTEGER, result VARCHAR)",
        "question": "What is the sum of attendance when the result was l 16-13?"
    },
    {
        "answer": "SELECT show FROM table_name_85 WHERE award_ceremony = \"indian television academy awards\" AND category = \"ita milestone award\"",
        "context": "CREATE TABLE table_name_85 (show VARCHAR, award_ceremony VARCHAR, category VARCHAR)",
        "question": "Which show was nominated for the ITA Milestone Award at the Indian Television Academy Awards?"
    },
    {
        "answer": "SELECT runner_up FROM table_name_90 WHERE venue = \"tartu, estonia\"",
        "context": "CREATE TABLE table_name_90 (runner_up VARCHAR, venue VARCHAR)",
        "question": "For the event held in Tartu, Estonia, what is the name of the runner-up?"
    },
    {
        "answer": "SELECT clock_multiplier FROM table_name_69 WHERE clock_speed = \"1.6 ghz\" AND model_number = \"c7-m 764\"",
        "context": "CREATE TABLE table_name_69 (clock_multiplier VARCHAR, clock_speed VARCHAR, model_number VARCHAR)",
        "question": "Which Clock Multiplier has a Clock Speed of 1.6 ghz, and a Model Number of c7-m 764?"
    },
    {
        "answer": "SELECT place FROM table_name_18 WHERE score > 67 AND country = \"united states\" AND to_par = \"e\" AND player = \"bunky henry\"",
        "context": "CREATE TABLE table_name_18 (place VARCHAR, player VARCHAR, to_par VARCHAR, score VARCHAR, country VARCHAR)",
        "question": "When Bunky Henry of the United States scored higher than 67 and his To par was e, what was his place?"
    },
    {
        "answer": "SELECT lead FROM table_name_83 WHERE skip = \"john shuster\" AND season = \"2009\u201310\"",
        "context": "CREATE TABLE table_name_83 (lead VARCHAR, skip VARCHAR, season VARCHAR)",
        "question": "Who was the lead with John Shuster as skip in the season of 2009\u201310?"
    },
    {
        "answer": "SELECT player FROM table_name_76 WHERE country = \"south africa\"",
        "context": "CREATE TABLE table_name_76 (player VARCHAR, country VARCHAR)",
        "question": "Which player(s) is from South Africa?"
    },
    {
        "answer": "SELECT frequency FROM table_name_70 WHERE state = \"indiana\" AND call_sign = \"wgnr\"",
        "context": "CREATE TABLE table_name_70 (frequency VARCHAR, state VARCHAR, call_sign VARCHAR)",
        "question": "What is the frequency of the radio station in Indiana that has a call sign of WGNR?"
    },
    {
        "answer": "SELECT frequency FROM table_name_19 WHERE call_sign = \"wgnr-fm\"",
        "context": "CREATE TABLE table_name_19 (frequency VARCHAR, call_sign VARCHAR)",
        "question": "What is the frequency of the radio station with a call sign of WGNR-FM?"
    },
    {
        "answer": "SELECT call_sign FROM table_name_87 WHERE state = \"florida\" AND frequency = \"90.9 fm\"",
        "context": "CREATE TABLE table_name_87 (call_sign VARCHAR, state VARCHAR, frequency VARCHAR)",
        "question": "What is the call sign for 90.9 FM which is in Florida?"
    },
    {
        "answer": "SELECT championship FROM table_name_72 WHERE session = \"race\" AND event = \"indianapolis sweepstakes\"",
        "context": "CREATE TABLE table_name_72 (championship VARCHAR, session VARCHAR, event VARCHAR)",
        "question": "In the Indianapolis Sweepstakes race session, what is the championship?"
    },
    {
        "answer": "SELECT COUNT(population_density__per_km\u00b2_) FROM table_name_98 WHERE name = \"total northern villages\" AND population__2006_ > 11414",
        "context": "CREATE TABLE table_name_98 (population_density__per_km\u00b2_ VARCHAR, name VARCHAR, population__2006_ VARCHAR)",
        "question": "How much Population density (per km\u00b2) has a Name of total northern villages, and a Population (2006) larger than 11414?"
    },
    {
        "answer": "SELECT location FROM table_name_89 WHERE callsign = \"dxbl\"",
        "context": "CREATE TABLE table_name_89 (location VARCHAR, callsign VARCHAR)",
        "question": "What is the Location of the Frequency with a Callsign of DXBL?"
    },
    {
        "answer": "SELECT MIN(enrollment) FROM table_name_17 WHERE left = 2012 AND current_conference = \"mid-south\"",
        "context": "CREATE TABLE table_name_17 (enrollment INTEGER, left VARCHAR, current_conference VARCHAR)",
        "question": "What is the lowest enrollment amount for a year left of 2012 and a current conference of Mid-South?"
    },
    {
        "answer": "SELECT SUM(season) FROM table_name_40 WHERE score = \"1:3\" AND venue = \"national stadium, maldives\"",
        "context": "CREATE TABLE table_name_40 (season INTEGER, score VARCHAR, venue VARCHAR)",
        "question": "Which season was there a game with the score of 1:3 played at the venue of national stadium, maldives?"
    },
    {
        "answer": "SELECT MIN(hydroelectricity) FROM table_name_51 WHERE total < 116.4 AND solar > 18.637",
        "context": "CREATE TABLE table_name_51 (hydroelectricity INTEGER, total VARCHAR, solar VARCHAR)",
        "question": "What is the minimum hydroelectricity with a less than 116.4 total, and a greater than 18.637 solar?"
    },
    {
        "answer": "SELECT opposing_team FROM table_name_48 WHERE against < 42 AND status = \"tour match\" AND venue = \"rugby park, gisborne\"",
        "context": "CREATE TABLE table_name_48 (opposing_team VARCHAR, venue VARCHAR, against VARCHAR, status VARCHAR)",
        "question": "Which opposing team had an Against score less than 42 and a Tour Match status in Rugby Park, Gisborne?"
    },
    {
        "answer": "SELECT 1992 FROM table_name_43 WHERE 1988 = \"a\" AND tournament = \"australian open\"",
        "context": "CREATE TABLE table_name_43 (tournament VARCHAR)",
        "question": "What shows for 1992 when 1988 is A, at the Australian Open?"
    },
    {
        "answer": "SELECT result FROM table_name_77 WHERE venue = \"g\u00f6tzis , austria\"",
        "context": "CREATE TABLE table_name_77 (result VARCHAR, venue VARCHAR)",
        "question": "What is Result, when Venue is G\u00f6tzis , Austria?"
    },
    {
        "answer": "SELECT date FROM table_name_29 WHERE region = \"united kingdom\" AND format = \"stereo lp\"",
        "context": "CREATE TABLE table_name_29 (date VARCHAR, region VARCHAR, format VARCHAR)",
        "question": "When did the United Kingdom format a stereo LP?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_83 WHERE location = \"oakland-alameda county coliseum\" AND game = 2",
        "context": "CREATE TABLE table_name_83 (attendance INTEGER, location VARCHAR, game VARCHAR)",
        "question": "What is the number of people in attendance at Oakland-Alameda County Coliseum, and game is 2?"
    },
    {
        "answer": "SELECT region FROM table_name_93 WHERE date = \"january 1974\"",
        "context": "CREATE TABLE table_name_93 (region VARCHAR, date VARCHAR)",
        "question": "What region goes along with January 1974?"
    },
    {
        "answer": "SELECT SUM(avg_g) FROM table_name_95 WHERE loss = 0 AND name = \"dan dierking\" AND gain > 34",
        "context": "CREATE TABLE table_name_95 (avg_g INTEGER, gain VARCHAR, loss VARCHAR, name VARCHAR)",
        "question": "What is the sum of Avg/G for Dan Dierking when the Loss is 0 and the Gain is more than 34?"
    },
    {
        "answer": "SELECT score FROM table_name_56 WHERE country = \"united states\" AND to_par = \"+4\"",
        "context": "CREATE TABLE table_name_56 (score VARCHAR, country VARCHAR, to_par VARCHAR)",
        "question": "What is Score, when Country is \"United States\", and when To Par is \"+4\"?"
    },
    {
        "answer": "SELECT lead FROM table_name_40 WHERE season = \"2009-10\"",
        "context": "CREATE TABLE table_name_40 (lead VARCHAR, season VARCHAR)",
        "question": "Which lead had a season of 2009-10?"
    },
    {
        "answer": "SELECT evening FROM table_name_18 WHERE sunday = \"no\" AND name = \"s. vidal/plant express\"",
        "context": "CREATE TABLE table_name_18 (evening VARCHAR, sunday VARCHAR, name VARCHAR)",
        "question": "Name the Evening that has a Sunday of no, and a Name of s. vidal/plant express?"
    },
    {
        "answer": "SELECT gp_gs FROM table_name_52 WHERE season = \"2009\"",
        "context": "CREATE TABLE table_name_52 (gp_gs VARCHAR, season VARCHAR)",
        "question": "What was the GP-GS for the 2009 season?"
    },
    {
        "answer": "SELECT nationality FROM table_name_78 WHERE year > 2009 AND player = \"dwayne de rosario category:articles with hcards\"",
        "context": "CREATE TABLE table_name_78 (nationality VARCHAR, year VARCHAR, player VARCHAR)",
        "question": "After 2009, what's the nationality of a player named Dwayne de Rosario Category:articles with hcards?"
    },
    {
        "answer": "SELECT position FROM table_name_36 WHERE nationality = \"united states\" AND player = \"justin mapp category:articles with hcards\"",
        "context": "CREATE TABLE table_name_36 (position VARCHAR, nationality VARCHAR, player VARCHAR)",
        "question": "What's the position when the player was Justin Mapp Category:articles with hcards with a United States nationality?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_55 WHERE high_points = \"d. mckey (24)\" AND score = \"l 96-105\"",
        "context": "CREATE TABLE table_name_55 (location_attendance VARCHAR, high_points VARCHAR, score VARCHAR)",
        "question": "What is the Location Attendance, when High Points is \"D. McKey (24)\", and when Score is \"L 96-105\"?"
    },
    {
        "answer": "SELECT COUNT(top_10) FROM table_name_69 WHERE starts = 7 AND avg_finish < 16.7",
        "context": "CREATE TABLE table_name_69 (top_10 VARCHAR, starts VARCHAR, avg_finish VARCHAR)",
        "question": "How many top 10s belong to the team with a start of 7 and an average finish less than 16.7?"
    },
    {
        "answer": "SELECT event FROM table_name_49 WHERE competition = \"european championships\" AND position = \"5th\"",
        "context": "CREATE TABLE table_name_49 (event VARCHAR, competition VARCHAR, position VARCHAR)",
        "question": "Which Event has 5th Position in the European Championships Competition?"
    },
    {
        "answer": "SELECT status FROM table_name_21 WHERE population > 930 AND census_ranking = \"1,769 of 5,008\"",
        "context": "CREATE TABLE table_name_21 (status VARCHAR, population VARCHAR, census_ranking VARCHAR)",
        "question": "What is the current status of a location with a census ranking of 1,769 of 5,008 and population greater than 930?"
    },
    {
        "answer": "SELECT MAX(tie_no) FROM table_name_45 WHERE home_team = \"bolton wanderers\" AND date = \"middlesbrough\"",
        "context": "CREATE TABLE table_name_45 (tie_no INTEGER, home_team VARCHAR, date VARCHAR)",
        "question": "What was the highest Tie no when the home team was the Bolton Wanderers, and the date was Middlesbrough?"
    },
    {
        "answer": "SELECT AVG(tie_no) FROM table_name_22 WHERE date = \"birmingham city\"",
        "context": "CREATE TABLE table_name_22 (tie_no INTEGER, date VARCHAR)",
        "question": "What is the average Tie no when the date is Birmingham City?"
    },
    {
        "answer": "SELECT SUM(game) FROM table_name_63 WHERE opponent = \"new york islanders\" AND february < 7",
        "context": "CREATE TABLE table_name_63 (game INTEGER, opponent VARCHAR, february VARCHAR)",
        "question": "How many games have the New York Islanders as an opponent before February 7?"
    },
    {
        "answer": "SELECT opponent FROM table_name_32 WHERE attendance = \"73,428\"",
        "context": "CREATE TABLE table_name_32 (opponent VARCHAR, attendance VARCHAR)",
        "question": "Which opponent had 73,428 in attendance?"
    },
    {
        "answer": "SELECT date FROM table_name_42 WHERE road_team = \"new york\" AND result = \"79-75\"",
        "context": "CREATE TABLE table_name_42 (date VARCHAR, road_team VARCHAR, result VARCHAR)",
        "question": "Which Date has a Road Team of new york, and a Result of 79-75?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_name_5 WHERE championship = \"u.s. championships\" AND year > 1945 AND score = \"3\u20136, 6\u20134, 2\u20136, 6\u20133, 20\u201318\"",
        "context": "CREATE TABLE table_name_5 (opponents_in_the_final VARCHAR, score VARCHAR, championship VARCHAR, year VARCHAR)",
        "question": "which opponents in the u.s. championships played after 1945 and had a score of 3\u20136, 6\u20134, 2\u20136, 6\u20133, 20\u201318?"
    },
    {
        "answer": "SELECT ship FROM table_name_66 WHERE class___type = \"cargo ship\" AND location = \"birkenhead\"",
        "context": "CREATE TABLE table_name_66 (ship VARCHAR, class___type VARCHAR, location VARCHAR)",
        "question": "What is the Cargo Ship located at Birkenhead?"
    },
    {
        "answer": "SELECT MAX(population) FROM table_name_16 WHERE state = \"puerto rico\" AND total_congregations > 41",
        "context": "CREATE TABLE table_name_16 (population INTEGER, state VARCHAR, total_congregations VARCHAR)",
        "question": "What is the highest Population, when State is Puerto Rico, and when Total Congregations is greater than 41?"
    },
    {
        "answer": "SELECT population FROM table_name_83 WHERE total_congregations < 4 AND _percentage_lds = \"0.54%\"",
        "context": "CREATE TABLE table_name_83 (population VARCHAR, total_congregations VARCHAR, _percentage_lds VARCHAR)",
        "question": "What is Population, when Total Congregations is less than 4, and when % LDS is 0.54%?"
    },
    {
        "answer": "SELECT actor_in_moscow, _2007 FROM table_name_91 WHERE voyage = \"varenka bakunin\"",
        "context": "CREATE TABLE table_name_91 (actor_in_moscow VARCHAR, _2007 VARCHAR, voyage VARCHAR)",
        "question": "Who was the 2007 actor from Moscow for the voyage of Varenka Bakunin?"
    },
    {
        "answer": "SELECT affiliation FROM table_name_48 WHERE institution = \"southern illinois university edwardsville\"",
        "context": "CREATE TABLE table_name_48 (affiliation VARCHAR, institution VARCHAR)",
        "question": "What is Southern Illinois University Edwardsville's affiliation?"
    },
    {
        "answer": "SELECT time FROM table_name_1 WHERE event = \"k-1 the challenge 1999\"",
        "context": "CREATE TABLE table_name_1 (time VARCHAR, event VARCHAR)",
        "question": "What time was the event k-1 the challenge 1999?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_name_13 WHERE series = \"4\u20132\"",
        "context": "CREATE TABLE table_name_13 (high_rebounds VARCHAR, series VARCHAR)",
        "question": "What is the High rebounds with a Series with 4\u20132?"
    },
    {
        "answer": "SELECT d_49 FROM table_name_64 WHERE d_46 = \"r 13\"",
        "context": "CREATE TABLE table_name_64 (d_49 VARCHAR, d_46 VARCHAR)",
        "question": "Tell me the D 49 and D 46 of r 13"
    },
    {
        "answer": "SELECT name FROM table_name_54 WHERE year = \"junior\" AND high_school = \"wheatley\"",
        "context": "CREATE TABLE table_name_54 (name VARCHAR, year VARCHAR, high_school VARCHAR)",
        "question": "What is the Name with a Year of junior, and a High School with wheatley?"
    },
    {
        "answer": "SELECT name FROM table_name_90 WHERE year = \"freshman\" AND home_town = \"los angeles, ca\" AND height = \"6\u20134\"",
        "context": "CREATE TABLE table_name_90 (name VARCHAR, height VARCHAR, year VARCHAR, home_town VARCHAR)",
        "question": "What is the Name with a Year with freshman, and a Home Town with los angeles, ca, and a Height of 6\u20134?"
    },
    {
        "answer": "SELECT SUM(total_seats) FROM table_name_26 WHERE constituency_seats > 0 AND party = \"liberal democrat\" AND regional_seats < 6",
        "context": "CREATE TABLE table_name_26 (total_seats INTEGER, regional_seats VARCHAR, constituency_seats VARCHAR, party VARCHAR)",
        "question": "What is the full number of Total Seats with a constituency seat number bigger than 0 with the Liberal Democrat party, and the Regional seat number is smaller than 6?"
    },
    {
        "answer": "SELECT visitor FROM table_name_69 WHERE date = \"january 10\"",
        "context": "CREATE TABLE table_name_69 (visitor VARCHAR, date VARCHAR)",
        "question": "Which team was the visitor on January 10?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_35 WHERE position = \"d\" AND nationality = \"united states\" AND player = \"ian cole\"",
        "context": "CREATE TABLE table_name_35 (round INTEGER, player VARCHAR, position VARCHAR, nationality VARCHAR)",
        "question": "What is the highest round of Ian Cole, who played position d from the United States?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_45 WHERE player = \"brett sonne\"",
        "context": "CREATE TABLE table_name_45 (college_junior_club_team__league_ VARCHAR, player VARCHAR)",
        "question": "Which college/junior/club team (league) did Brett Sonne play in?"
    },
    {
        "answer": "SELECT MIN(bike_no) FROM table_name_13 WHERE driver___passenger = \"joris hendrickx / kaspars liepins\" AND position < 4",
        "context": "CREATE TABLE table_name_13 (bike_no INTEGER, driver___passenger VARCHAR, position VARCHAR)",
        "question": "What is the lowest Bike No, when Driver / Passenger is Joris Hendrickx / Kaspars Liepins, and when Position is less than 4?"
    },
    {
        "answer": "SELECT MAX(wins) FROM table_name_82 WHERE goal_difference < 4 AND club = \"villarreal cf\" AND played > 38",
        "context": "CREATE TABLE table_name_82 (wins INTEGER, played VARCHAR, goal_difference VARCHAR, club VARCHAR)",
        "question": "What is the highest number of wins with a goal difference less than 4 at the Villarreal CF and more than 38 played?"
    },
    {
        "answer": "SELECT MIN(position) FROM table_name_6 WHERE bike_no > 10 AND driver___passenger = \"nicky pulinx / ondrej cermak\" AND points > 244",
        "context": "CREATE TABLE table_name_6 (position INTEGER, points VARCHAR, bike_no VARCHAR, driver___passenger VARCHAR)",
        "question": "What is the lowest Postion, when Bike No is greater than 10, when Driver / Passenger is Nicky Pulinx / Ondrej Cermak, and when Points is greater than 244?"
    },
    {
        "answer": "SELECT MAX(losses) FROM table_name_73 WHERE position = 7 AND goals_for > 45",
        "context": "CREATE TABLE table_name_73 (losses INTEGER, position VARCHAR, goals_for VARCHAR)",
        "question": "What is the highest number of loss with a 7 position and more than 45 goals?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_19 WHERE position < 4 AND equipment = \"zabel - vmc\" AND bike_no < 1",
        "context": "CREATE TABLE table_name_19 (points INTEGER, bike_no VARCHAR, position VARCHAR, equipment VARCHAR)",
        "question": "What is the highest Points, when Position is less than 4, when Equipment is Zabel - VMC, and when Bike No is less than 1?"
    },
    {
        "answer": "SELECT AVG(position) FROM table_name_16 WHERE bike_no > 8 AND points < 240",
        "context": "CREATE TABLE table_name_16 (position INTEGER, bike_no VARCHAR, points VARCHAR)",
        "question": "What is the average Position, when Bike No is greater than 8, and when Points is less than 240?"
    },
    {
        "answer": "SELECT venue FROM table_name_60 WHERE score = \"2\u20130\"",
        "context": "CREATE TABLE table_name_60 (venue VARCHAR, score VARCHAR)",
        "question": "Which venue has a scoreof 2\u20130?"
    },
    {
        "answer": "SELECT result FROM table_name_10 WHERE week > 11 AND date = \"december 14, 1986\"",
        "context": "CREATE TABLE table_name_10 (result VARCHAR, week VARCHAR, date VARCHAR)",
        "question": "What was the Result of the game on December 14, 1986 after Week 11?"
    },
    {
        "answer": "SELECT high_school FROM table_name_89 WHERE utah_mr_basketball = \"tyler haws\" AND year = 2009",
        "context": "CREATE TABLE table_name_89 (high_school VARCHAR, utah_mr_basketball VARCHAR, year VARCHAR)",
        "question": "Where did Tyler Haws, 2009 Utah Mr. Basketball, go to high school?"
    },
    {
        "answer": "SELECT AVG(_number_of_national_votes) FROM table_name_30 WHERE election < 1992 AND _percentage_of_prefectural_vote = \"39.5%\" AND leader = \"takeo fukuda\" AND _number_of_seats_won > 63",
        "context": "CREATE TABLE table_name_30 (_number_of_national_votes INTEGER, _number_of_seats_won VARCHAR, leader VARCHAR, election VARCHAR, _percentage_of_prefectural_vote VARCHAR)",
        "question": "What is the average # Of National Votes, when the Election is before 1992, when the % Of Prefectural Vote is 39.5%, when Leader is Takeo Fukuda, and when # Of Seats Won is greater than 63?"
    },
    {
        "answer": "SELECT COUNT(_number_of_prefectural_votes) FROM table_name_37 WHERE _percentage_of_prefectural_vote = \"48.4%\" AND _number_of_seats_won > 61",
        "context": "CREATE TABLE table_name_37 (_number_of_prefectural_votes VARCHAR, _percentage_of_prefectural_vote VARCHAR, _number_of_seats_won VARCHAR)",
        "question": "What is the total number of # Of Prefectural Votes, when % Of Prefectural Vote is 48.4%, and when # Of Seats Won is greater than 61?"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_91 WHERE grid > 21 AND time_retired = \"+2 laps\"",
        "context": "CREATE TABLE table_name_91 (laps INTEGER, grid VARCHAR, time_retired VARCHAR)",
        "question": "What is the high lap total for cards with a grid larger than 21, and a Time/Retired of +2 laps?"
    },
    {
        "answer": "SELECT pos FROM table_name_66 WHERE from_club = \"chelsea\" AND date = \"30 july 2008\"",
        "context": "CREATE TABLE table_name_66 (pos VARCHAR, from_club VARCHAR, date VARCHAR)",
        "question": "What is Pos., when From Club is \"Chelsea\", and when Date is \"30 July 2008\"?"
    },
    {
        "answer": "SELECT MAX(grid) FROM table_name_75 WHERE driver = \"jean alesi\" AND laps < 24",
        "context": "CREATE TABLE table_name_75 (grid INTEGER, driver VARCHAR, laps VARCHAR)",
        "question": "When Jean Alesi had laps less than 24, what was his highest grid?"
    },
    {
        "answer": "SELECT release_date FROM table_name_36 WHERE writer = \"goss, james james goss\" AND company = \"audiogo\"",
        "context": "CREATE TABLE table_name_36 (release_date VARCHAR, writer VARCHAR, company VARCHAR)",
        "question": "What is the release date of the album written by Goss, James James Goss under Audiogo?"
    },
    {
        "answer": "SELECT right_ascension___j2000__ FROM table_name_67 WHERE constellation = \"pegasus\" AND ngc_number = \"7318a\"",
        "context": "CREATE TABLE table_name_67 (right_ascension___j2000__ VARCHAR, constellation VARCHAR, ngc_number VARCHAR)",
        "question": "What is Pegasus' right ascension with a 7318a NGC?"
    },
    {
        "answer": "SELECT home_city FROM table_name_7 WHERE stadium = \"angelo massimino\"",
        "context": "CREATE TABLE table_name_7 (home_city VARCHAR, stadium VARCHAR)",
        "question": "What is the home city for angelo massimino stadium?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_55 WHERE venue = \"princes park\"",
        "context": "CREATE TABLE table_name_55 (home_team VARCHAR, venue VARCHAR)",
        "question": "Who was home at Princes Park?"
    },
    {
        "answer": "SELECT winner FROM table_name_31 WHERE location = \"philadelphia municipal stadium\" AND year = 1939",
        "context": "CREATE TABLE table_name_31 (winner VARCHAR, location VARCHAR, year VARCHAR)",
        "question": "Who was the winner in philadelphia municipal stadium in 1939?"
    },
    {
        "answer": "SELECT left_office FROM table_name_96 WHERE romanized__hangul_ = \"chang myon (\uc7a5\uba74)\"",
        "context": "CREATE TABLE table_name_96 (left_office VARCHAR, romanized__hangul_ VARCHAR)",
        "question": "When did chang myon (\uc7a5\uba74) leave office?"
    },
    {
        "answer": "SELECT SUM(top_division_titles) FROM table_name_90 WHERE founded < 1975 AND location = \"chaguaramas\"",
        "context": "CREATE TABLE table_name_90 (top_division_titles INTEGER, founded VARCHAR, location VARCHAR)",
        "question": "What was the total number of Top Division Titles where the year founded was prior to 1975 and the location was in Chaguaramas?"
    },
    {
        "answer": "SELECT province FROM table_name_9 WHERE districts < 11 AND region = \"tumbes\" AND ubigeo = 2401",
        "context": "CREATE TABLE table_name_9 (province VARCHAR, ubigeo VARCHAR, districts VARCHAR, region VARCHAR)",
        "question": "What province in Tumbes has less than 11 districts and a UBIGEO of 2401?"
    },
    {
        "answer": "SELECT AVG(games) FROM table_name_68 WHERE date_of_birth = \"17 march 1915\" AND debut_year < 1935",
        "context": "CREATE TABLE table_name_68 (games INTEGER, date_of_birth VARCHAR, debut_year VARCHAR)",
        "question": "What is the average games a player born on 17 March 1915 and debut before 1935 had?"
    },
    {
        "answer": "SELECT MAX(year_named) FROM table_name_39 WHERE name = \"ganga valles\"",
        "context": "CREATE TABLE table_name_39 (year_named INTEGER, name VARCHAR)",
        "question": "What is the Year named of the Ganga Valles?"
    },
    {
        "answer": "SELECT latitude FROM table_name_86 WHERE year_named > 1997 AND name = \"alajen vallis\"",
        "context": "CREATE TABLE table_name_86 (latitude VARCHAR, year_named VARCHAR, name VARCHAR)",
        "question": "What is the Latitude of the Alajen Vallis named after 1997?"
    },
    {
        "answer": "SELECT record FROM table_name_23 WHERE high_rebounds = \"marc gasol (8)\"",
        "context": "CREATE TABLE table_name_23 (record VARCHAR, high_rebounds VARCHAR)",
        "question": "what is the record when marc gasol (8) had the high rebounds?"
    },
    {
        "answer": "SELECT rider FROM table_name_30 WHERE laps < 30 AND manufacturer = \"yamaha\" AND time = \"accident\" AND grid > 3",
        "context": "CREATE TABLE table_name_30 (rider VARCHAR, grid VARCHAR, time VARCHAR, laps VARCHAR, manufacturer VARCHAR)",
        "question": "Who was the rider who had less than 30 laps, ended in an accident with a car manufactured by yamaha on a grid larger than 3?"
    },
    {
        "answer": "SELECT manufacturer FROM table_name_86 WHERE laps < 9 AND rider = \"dani pedrosa\"",
        "context": "CREATE TABLE table_name_86 (manufacturer VARCHAR, laps VARCHAR, rider VARCHAR)",
        "question": "Who was the manufacturer for the car that dani pedrosa did less than 9 laps in?"
    },
    {
        "answer": "SELECT event FROM table_name_12 WHERE opponent = \"chris barden\"",
        "context": "CREATE TABLE table_name_12 (event VARCHAR, opponent VARCHAR)",
        "question": "What is the event where the opponent was Chris Barden?"
    },
    {
        "answer": "SELECT place FROM table_name_98 WHERE score = 66 - 67 = 133",
        "context": "CREATE TABLE table_name_98 (place VARCHAR, score VARCHAR)",
        "question": "In what place did the player with a score of 66-67=133 come in?"
    },
    {
        "answer": "SELECT date FROM table_name_73 WHERE callback_venue = \"total tickets to hollywood\"",
        "context": "CREATE TABLE table_name_73 (date VARCHAR, callback_venue VARCHAR)",
        "question": "What day has a callback Venue of total tickets to hollywood? Question"
    },
    {
        "answer": "SELECT SUM(golden_tickets) FROM table_name_85 WHERE callback_venue = \"georgia international convention center\"",
        "context": "CREATE TABLE table_name_85 (golden_tickets INTEGER, callback_venue VARCHAR)",
        "question": "How many golden tickets for the georgia international convention center?"
    },
    {
        "answer": "SELECT constructor FROM table_name_20 WHERE chassis = \"tg181\" AND driver = \"derek warwick\"",
        "context": "CREATE TABLE table_name_20 (constructor VARCHAR, chassis VARCHAR, driver VARCHAR)",
        "question": "Who constructed the car that Derek Warwick raced in with a TG181 chassis?"
    },
    {
        "answer": "SELECT replaced_by FROM table_name_11 WHERE date_of_vacancy = \"3 march 2009\"",
        "context": "CREATE TABLE table_name_11 (replaced_by VARCHAR, date_of_vacancy VARCHAR)",
        "question": "Who was hired to fill the spot that became vacant on 3 March 2009?"
    },
    {
        "answer": "SELECT player FROM table_name_99 WHERE club_province = \"direito\" AND caps < 21 AND position = \"lock\"",
        "context": "CREATE TABLE table_name_99 (player VARCHAR, position VARCHAR, club_province VARCHAR, caps VARCHAR)",
        "question": "Which player has a Club/province of direito, less than 21 caps, and a Position of lock?"
    },
    {
        "answer": "SELECT outgoing_manager FROM table_name_62 WHERE replaced_by = \"michael oenning\"",
        "context": "CREATE TABLE table_name_62 (outgoing_manager VARCHAR, replaced_by VARCHAR)",
        "question": "What is the name of the manager that was replaced by Michael Oenning?"
    },
    {
        "answer": "SELECT player FROM table_name_41 WHERE position = \"fly-half\" AND caps = 3",
        "context": "CREATE TABLE table_name_41 (player VARCHAR, position VARCHAR, caps VARCHAR)",
        "question": "Which player has a Position of fly-half, and a Caps of 3?"
    },
    {
        "answer": "SELECT constituency FROM table_name_12 WHERE result = \"labour hold\" AND liberal_democrats = \"elizabeth newton\"",
        "context": "CREATE TABLE table_name_12 (constituency VARCHAR, result VARCHAR, liberal_democrats VARCHAR)",
        "question": "In what constituency was the result labour hold and Liberal democrat Elizabeth Newton won?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_92 WHERE week > 1 AND opponent = \"philadelphia eagles\"",
        "context": "CREATE TABLE table_name_92 (attendance VARCHAR, week VARCHAR, opponent VARCHAR)",
        "question": "What is the total attendance in a week greater than 1 with an opponent of Philadelphia Eagles?"
    },
    {
        "answer": "SELECT MAX(joined) FROM table_name_96 WHERE institution = \"abraham baldwin agricultural college\" AND enrollment < 3 OFFSET 284",
        "context": "CREATE TABLE table_name_96 (joined INTEGER, institution VARCHAR, enrollment VARCHAR)",
        "question": "Which Joined has an Institution of abraham baldwin agricultural college, and an Enrollment smaller than 3,284?"
    },
    {
        "answer": "SELECT SUM(car__number) FROM table_name_62 WHERE laps < 369 AND make = \"dodge\" AND points > 49",
        "context": "CREATE TABLE table_name_62 (car__number INTEGER, points VARCHAR, laps VARCHAR, make VARCHAR)",
        "question": "What is the car number that has less than 369 laps for a Dodge with more than 49 points?"
    },
    {
        "answer": "SELECT COUNT(ties) FROM table_name_3 WHERE win__percentage > 0 AND tenure = \"2001-2011\" AND lost > 16",
        "context": "CREATE TABLE table_name_3 (ties VARCHAR, lost VARCHAR, win__percentage VARCHAR, tenure VARCHAR)",
        "question": "I want the total number of ties for win % more than 0 and tenure of 2001-2011 with lost more than 16"
    },
    {
        "answer": "SELECT away_team FROM table_name_19 WHERE ground = \"colonial stadium\"",
        "context": "CREATE TABLE table_name_19 (away_team VARCHAR, ground VARCHAR)",
        "question": "What is Away Team, when Ground is Colonial Stadium?"
    },
    {
        "answer": "SELECT score FROM table_name_71 WHERE game > 76 AND location_attendance = \"madison square garden 19,763\" AND high_rebounds = \"wilson chandler (8)\"",
        "context": "CREATE TABLE table_name_71 (score VARCHAR, high_rebounds VARCHAR, game VARCHAR, location_attendance VARCHAR)",
        "question": "Which Score has a Game larger than 76, a Location Attendance of madison square garden 19,763, and a High rebounds of wilson chandler (8)?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_27 WHERE fastest_lap = \"michael schumacher\" AND winning_driver = \"michael schumacher\" AND pole_position = \"michael schumacher\"",
        "context": "CREATE TABLE table_name_27 (round INTEGER, pole_position VARCHAR, fastest_lap VARCHAR, winning_driver VARCHAR)",
        "question": "Name the lowest round for when pole position and winning driver is michael schumacher"
    },
    {
        "answer": "SELECT AVG(gold) FROM table_name_90 WHERE total = 1 AND rank = \"6\" AND bronze > 1",
        "context": "CREATE TABLE table_name_90 (gold INTEGER, bronze VARCHAR, total VARCHAR, rank VARCHAR)",
        "question": "What is the average gold total for nations ranked 6 with 1 total medal and 1 bronze medal?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_98 WHERE opponent = \"buffalo bills\"",
        "context": "CREATE TABLE table_name_98 (attendance INTEGER, opponent VARCHAR)",
        "question": "What is the low attendance rate against buffalo bills?"
    },
    {
        "answer": "SELECT high_points FROM table_name_79 WHERE location_attendance = \"conseco fieldhouse 7,134\"",
        "context": "CREATE TABLE table_name_79 (high_points VARCHAR, location_attendance VARCHAR)",
        "question": "What is the highest number of points of the game in Conseco fieldhouse 7,134?"
    },
    {
        "answer": "SELECT date FROM table_name_45 WHERE place = \"7th\"",
        "context": "CREATE TABLE table_name_45 (date VARCHAR, place VARCHAR)",
        "question": "When 7th place, what is the date?"
    },
    {
        "answer": "SELECT date FROM table_name_78 WHERE home_team = \"melbourne\"",
        "context": "CREATE TABLE table_name_78 (date VARCHAR, home_team VARCHAR)",
        "question": "What is the date of the game between Melbourne and Footscray?"
    },
    {
        "answer": "SELECT player FROM table_name_70 WHERE score < 69 AND country = \"united states\"",
        "context": "CREATE TABLE table_name_70 (player VARCHAR, score VARCHAR, country VARCHAR)",
        "question": "What is Player, when Score is less than 69, and when Country is \"United States\"?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_38 WHERE league = \"usisl pro league\"",
        "context": "CREATE TABLE table_name_38 (year VARCHAR, league VARCHAR)",
        "question": "How many years was there a team that was part of the usisl pro league?"
    },
    {
        "answer": "SELECT teleplay FROM table_name_37 WHERE season > 1.1 AND first_broadcast = \"february 20, 1981\"",
        "context": "CREATE TABLE table_name_37 (teleplay VARCHAR, season VARCHAR, first_broadcast VARCHAR)",
        "question": "What is Teleplay, when Season is greater than 1.1, and when First Broadcast is \"February 20, 1981\"?"
    },
    {
        "answer": "SELECT AVG(total) FROM table_name_88 WHERE league = 18 AND player = \"richard logan\" AND play_offs < 1",
        "context": "CREATE TABLE table_name_88 (total INTEGER, play_offs VARCHAR, league VARCHAR, player VARCHAR)",
        "question": "What mean total had a league number of 18, Richard Logan as a player, and a play-offs number smaller than 1?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_61 WHERE constituency = \"edinburgh northern and leith\" AND swing_to_gain < 4.16",
        "context": "CREATE TABLE table_name_61 (rank INTEGER, constituency VARCHAR, swing_to_gain VARCHAR)",
        "question": "what is the lowest rank when the constituency is edinburgh northern and leith and the swing to gain is less than 4.16?"
    },
    {
        "answer": "SELECT previous_club FROM table_name_48 WHERE date_of_birth = \"october 22, 1993\"",
        "context": "CREATE TABLE table_name_48 (previous_club VARCHAR, date_of_birth VARCHAR)",
        "question": "What previous club was born on October 22, 1993?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_14 WHERE venue = \"h\" AND opponent = \"auxerre\"",
        "context": "CREATE TABLE table_name_14 (attendance INTEGER, venue VARCHAR, opponent VARCHAR)",
        "question": "What is the total of attendance at Venue h when Auxerre were playing?"
    },
    {
        "answer": "SELECT place FROM table_name_8 WHERE country = \"united states\" AND score = 68 - 73 - 68 = 209",
        "context": "CREATE TABLE table_name_8 (place VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "What place is the United States in that has a score of 68-73-68=209?"
    },
    {
        "answer": "SELECT home_team FROM table_name_89 WHERE road_team = \"boston\" AND game = \"game 4\"",
        "context": "CREATE TABLE table_name_89 (home_team VARCHAR, road_team VARCHAR, game VARCHAR)",
        "question": "Who was the home team when Boston is the road team in game 4?"
    },
    {
        "answer": "SELECT nationality FROM table_name_66 WHERE position = \"w\" AND college_junior_club_team__league_ = \"leninogorsk (russia-2)\"",
        "context": "CREATE TABLE table_name_66 (nationality VARCHAR, position VARCHAR, college_junior_club_team__league_ VARCHAR)",
        "question": "What nationality is the draft pick with w position from leninogorsk (russia-2)?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_49 WHERE laps = 71",
        "context": "CREATE TABLE table_name_49 (year VARCHAR, laps VARCHAR)",
        "question": "How many years was the number of laps 71?"
    },
    {
        "answer": "SELECT timeslot FROM table_name_26 WHERE air_date = \"april 28, 2009\"",
        "context": "CREATE TABLE table_name_26 (timeslot VARCHAR, air_date VARCHAR)",
        "question": "What is the timeslot for the episode that aired April 28, 2009?"
    },
    {
        "answer": "SELECT name FROM table_name_59 WHERE pick = 5 AND round < 25 AND position = \"ot\" AND college = \"boston college\"",
        "context": "CREATE TABLE table_name_59 (name VARCHAR, college VARCHAR, position VARCHAR, pick VARCHAR, round VARCHAR)",
        "question": "What name has 5 as the pick, a round less than 25, ot as the position, at boston college?"
    },
    {
        "answer": "SELECT COUNT(overall) FROM table_name_29 WHERE position = \"e\" AND name = \"buddy payne\" AND pick < 5",
        "context": "CREATE TABLE table_name_29 (overall VARCHAR, pick VARCHAR, position VARCHAR, name VARCHAR)",
        "question": "How many overalls have E as the position, buddy payne as the name, and a pick less than 5?"
    },
    {
        "answer": "SELECT SUM(pick) FROM table_name_78 WHERE name = \"charley sanders\" AND round > 22",
        "context": "CREATE TABLE table_name_78 (pick INTEGER, name VARCHAR, round VARCHAR)",
        "question": "How many picks have charley sanders as the name, with a round greater than 22?"
    },
    {
        "answer": "SELECT opponent FROM table_name_4 WHERE points > 5 AND attendance > 13 OFFSET 567",
        "context": "CREATE TABLE table_name_4 (opponent VARCHAR, points VARCHAR, attendance VARCHAR)",
        "question": "What is the Opponent of the game with more than 13,567 in Attendance with more than 5 Points?"
    },
    {
        "answer": "SELECT home_team FROM table_name_64 WHERE venue = \"arden street oval\"",
        "context": "CREATE TABLE table_name_64 (home_team VARCHAR, venue VARCHAR)",
        "question": "Which Home team has a Venue of arden street oval?"
    },
    {
        "answer": "SELECT manner_of_departure FROM table_name_1 WHERE date_of_appointment = \"3 january\"",
        "context": "CREATE TABLE table_name_1 (manner_of_departure VARCHAR, date_of_appointment VARCHAR)",
        "question": "Tell me the manner of departure for 3 january date of appointment"
    },
    {
        "answer": "SELECT date FROM table_name_84 WHERE race = \"argentine grand prix\"",
        "context": "CREATE TABLE table_name_84 (date VARCHAR, race VARCHAR)",
        "question": "When did the Argentine Grand Prix race?"
    },
    {
        "answer": "SELECT home_team FROM table_name_93 WHERE venue = \"victoria park\"",
        "context": "CREATE TABLE table_name_93 (home_team VARCHAR, venue VARCHAR)",
        "question": "What is the home team for victoria park?"
    },
    {
        "answer": "SELECT opponent FROM table_name_82 WHERE score = \"6\u20135 13\"",
        "context": "CREATE TABLE table_name_82 (opponent VARCHAR, score VARCHAR)",
        "question": "Who is the opponent with a score of 6\u20135 13?"
    },
    {
        "answer": "SELECT model FROM table_name_61 WHERE comments = \"curved daggerboards. design: morelli und melvin\"",
        "context": "CREATE TABLE table_name_61 (model VARCHAR, comments VARCHAR)",
        "question": "Which Model has Comments of curved daggerboards. design: morelli und melvin?"
    },
    {
        "answer": "SELECT AVG(sr_no) FROM table_name_10 WHERE builder = \"beyer peacock\" AND secr_no = 769",
        "context": "CREATE TABLE table_name_10 (sr_no INTEGER, builder VARCHAR, secr_no VARCHAR)",
        "question": "What is Beyer Peacock's SR number with a SECR number of 769?"
    },
    {
        "answer": "SELECT COUNT(crowd) FROM table_name_72 WHERE away_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_72 (crowd VARCHAR, away_team VARCHAR)",
        "question": "What is the listed crowd when hawthorn is away?"
    },
    {
        "answer": "SELECT tyre FROM table_name_55 WHERE rounds = \"all\" AND team = \"nismo\" AND drivers = \"satoshi motoyama\"",
        "context": "CREATE TABLE table_name_55 (tyre VARCHAR, drivers VARCHAR, rounds VARCHAR, team VARCHAR)",
        "question": "What is the tyre of nismo team member satoshi motoyama when he has rounds of all?"
    },
    {
        "answer": "SELECT tyre FROM table_name_24 WHERE team = \"real racing with leon\" AND drivers = \"koudai tsukakoshi\"",
        "context": "CREATE TABLE table_name_24 (tyre VARCHAR, team VARCHAR, drivers VARCHAR)",
        "question": "What is the tyre of real racing with leon team member koudai tsukakoshi?"
    },
    {
        "answer": "SELECT score FROM table_name_61 WHERE opponent = \"dodgers\" AND date = \"april 21\"",
        "context": "CREATE TABLE table_name_61 (score VARCHAR, opponent VARCHAR, date VARCHAR)",
        "question": "Name the score when the opponent was the dodgers on april 21"
    },
    {
        "answer": "SELECT 1 AS st_leg FROM table_name_48 WHERE team_1 = \"c.d. plaza amador\"",
        "context": "CREATE TABLE table_name_48 (team_1 VARCHAR)",
        "question": "What is the 1st leg where Team 1 is C.D. Plaza Amador?"
    },
    {
        "answer": "SELECT MIN(preliminary) FROM table_name_50 WHERE swimsuit < 8.822 AND interview > 8.744 AND evening_gown > 9.333",
        "context": "CREATE TABLE table_name_50 (preliminary INTEGER, evening_gown VARCHAR, swimsuit VARCHAR, interview VARCHAR)",
        "question": "What is the smallest preliminary when swimsuit is less than 8.822, interview is more than 8.744 and gown is more than 9.333?"
    },
    {
        "answer": "SELECT SUM(average) FROM table_name_28 WHERE interview = 9.465 AND evening_gown < 9.454",
        "context": "CREATE TABLE table_name_28 (average INTEGER, interview VARCHAR, evening_gown VARCHAR)",
        "question": "What is the average when interview is 9.465 and evening gown is less than 9.454?"
    },
    {
        "answer": "SELECT date FROM table_name_21 WHERE race_title = \"lakeside\"",
        "context": "CREATE TABLE table_name_21 (date VARCHAR, race_title VARCHAR)",
        "question": "Name the date for race title lakeside"
    },
    {
        "answer": "SELECT listed FROM table_name_46 WHERE construction_completed = \"08/10/2007\"",
        "context": "CREATE TABLE table_name_46 (listed VARCHAR, construction_completed VARCHAR)",
        "question": "What construction completed on 08/10/2007?"
    },
    {
        "answer": "SELECT rochester FROM table_name_39 WHERE syracuse = \"cardiff dark gray shale\" AND albany = \"(mt. marion fm.)\"",
        "context": "CREATE TABLE table_name_39 (rochester VARCHAR, syracuse VARCHAR, albany VARCHAR)",
        "question": "What is Rochester, when Syracuse is Cardiff Dark Gray Shale, and when Albany is (Mt. Marion Fm.)?"
    },
    {
        "answer": "SELECT syracuse FROM table_name_20 WHERE utica = \"union springs shale and limestone\" AND rochester = \"union springs shale and limestone\"",
        "context": "CREATE TABLE table_name_20 (syracuse VARCHAR, utica VARCHAR, rochester VARCHAR)",
        "question": "What is Syracuse, when Utica is Union Springs Shale And Limestone, and when Rochester is Union Springs Shale And Limestone?"
    },
    {
        "answer": "SELECT AVG(rank) FROM table_name_7 WHERE rmax_rpeak___pflops__ = \"17.173 20.133\"",
        "context": "CREATE TABLE table_name_7 (rank INTEGER, rmax_rpeak___pflops__ VARCHAR)",
        "question": "What is the rank of Rmax Rpeak ( Pflops ) of 17.173 20.133?"
    },
    {
        "answer": "SELECT viewers FROM table_name_25 WHERE weekly_rank_for_living = \"4\"",
        "context": "CREATE TABLE table_name_25 (viewers VARCHAR, weekly_rank_for_living VARCHAR)",
        "question": "How many viewers for the episode with the weekly rank for living of 4?"
    },
    {
        "answer": "SELECT AVG(began_operation) FROM table_name_12 WHERE length__km_ = \"ampang\" AND stations > 27",
        "context": "CREATE TABLE table_name_12 (began_operation INTEGER, length__km_ VARCHAR, stations VARCHAR)",
        "question": "What is the average operation beginning with a length of ampang and over 27 stations?"
    },
    {
        "answer": "SELECT MIN(withdrawn) FROM table_name_10 WHERE gnri_no > 172 AND name = \"croagh patrick\" AND rebuilt < 1939",
        "context": "CREATE TABLE table_name_10 (withdrawn INTEGER, rebuilt VARCHAR, gnri_no VARCHAR, name VARCHAR)",
        "question": "What is the smallest withdrawn value with a GNRI greater than 172, name of Croagh Patrick and was rebuilt before 1939?"
    },
    {
        "answer": "SELECT location FROM table_name_19 WHERE bowl = \"california bowl\" AND attendance = \"30,000\"",
        "context": "CREATE TABLE table_name_19 (location VARCHAR, bowl VARCHAR, attendance VARCHAR)",
        "question": "Where was the California bowl played with 30,000 attending?"
    },
    {
        "answer": "SELECT MAX(1970) FROM table_name_81 WHERE 1960 < 61.9 AND 1980 < 3.8 AND 1990 = 3.3 AND 2000 > 3.2",
        "context": "CREATE TABLE table_name_81 (Id VARCHAR)",
        "question": "What is the highest value for 1970, when the value for 1960 is less than 61.9, when the value for 1980 is less than 3.8, when the value for 1990 is 3.3, and when the value for 2000 is greater than 3.2?"
    },
    {
        "answer": "SELECT location FROM table_name_97 WHERE pitch = \"old bedians\"",
        "context": "CREATE TABLE table_name_97 (location VARCHAR, pitch VARCHAR)",
        "question": "What is the Location of the Old Bedians Pitch?"
    },
    {
        "answer": "SELECT regional_county_municipality FROM table_name_30 WHERE area__km_2__ > 108.46 AND population = 719",
        "context": "CREATE TABLE table_name_30 (regional_county_municipality VARCHAR, area__km_2__ VARCHAR, population VARCHAR)",
        "question": "What municipality has 719 people and is larger than 108.46 km2?"
    },
    {
        "answer": "SELECT AVG(area__km_2__) FROM table_name_46 WHERE population = 311",
        "context": "CREATE TABLE table_name_46 (area__km_2__ INTEGER, population VARCHAR)",
        "question": "What is the km2 area for the population of 311?"
    },
    {
        "answer": "SELECT position FROM table_name_95 WHERE points = 30 AND passenger = \"reiner stuyvenberg\"",
        "context": "CREATE TABLE table_name_95 (position VARCHAR, points VARCHAR, passenger VARCHAR)",
        "question": "Which position has 30 points and Reiner Stuyvenberg as a passenger?"
    },
    {
        "answer": "SELECT s\u00e3o_paulo_career FROM table_name_45 WHERE appearances < 201 AND goals < 2 AND name = \"ricardo rocha\"",
        "context": "CREATE TABLE table_name_45 (s\u00e3o_paulo_career VARCHAR, name VARCHAR, appearances VARCHAR, goals VARCHAR)",
        "question": "WHAT SAN PAULO CAREER HAD SMALLER THAN 201 APPEARANCES, SMALLER THAN 2 GOALS, AND FOR RICARDO ROCHA?"
    },
    {
        "answer": "SELECT winner FROM table_name_55 WHERE trofeo_fast_team = \"carrera jeans-vagabond\" AND stage = \"5\"",
        "context": "CREATE TABLE table_name_55 (winner VARCHAR, trofeo_fast_team VARCHAR, stage VARCHAR)",
        "question": "who is the winner when the trofeo fast team is carrera jeans-vagabond in stage 5?"
    },
    {
        "answer": "SELECT school_year FROM table_name_9 WHERE cross_country = \"lexington\" AND soccer = \"ashland\" AND volleyball = \"wooster\"",
        "context": "CREATE TABLE table_name_9 (school_year VARCHAR, volleyball VARCHAR, cross_country VARCHAR, soccer VARCHAR)",
        "question": "What is School Year, when Cross Country is Lexington, when Soccer is Ashland, and when Volleyball is Wooster?"
    },
    {
        "answer": "SELECT MIN(finish) FROM table_name_45 WHERE year > 1978 AND manufacturer = \"buick\" AND start < 3",
        "context": "CREATE TABLE table_name_45 (finish INTEGER, start VARCHAR, year VARCHAR, manufacturer VARCHAR)",
        "question": "What is the smallest finish time for a race where start was less than 3, buick was the manufacturer, and the race was held after 1978?"
    },
    {
        "answer": "SELECT time FROM table_name_95 WHERE release_date = \"6/6/77\" AND song_title = \"way down\"",
        "context": "CREATE TABLE table_name_95 (time VARCHAR, release_date VARCHAR, song_title VARCHAR)",
        "question": "Tell me the time for 6/6/77 release date and song title of way down"
    },
    {
        "answer": "SELECT division FROM table_name_60 WHERE season < 2004",
        "context": "CREATE TABLE table_name_60 (division VARCHAR, season INTEGER)",
        "question": "What is the division for the season earlier than 2004?"
    },
    {
        "answer": "SELECT opening_date FROM table_name_6 WHERE classification = \"musical\" AND theatre = \"adelphi theatre\"",
        "context": "CREATE TABLE table_name_6 (opening_date VARCHAR, classification VARCHAR, theatre VARCHAR)",
        "question": "What is the opening date of the musical at the adelphi theatre?"
    },
    {
        "answer": "SELECT COUNT(earnings__) AS $__ FROM table_name_28 WHERE country = \"united states\" AND wins < 24 AND player = \"george archer\" AND rank > 5",
        "context": "CREATE TABLE table_name_28 (earnings__ VARCHAR, rank VARCHAR, player VARCHAR, country VARCHAR, wins VARCHAR)",
        "question": "In total, how much did the United States player George Archer earn with Wins lower than 24 and a rank that was higher than 5?"
    },
    {
        "answer": "SELECT word__number FROM table_name_37 WHERE name = \"omega dot\"",
        "context": "CREATE TABLE table_name_37 (word__number VARCHAR, name VARCHAR)",
        "question": "What is the word count that is named omega dot?"
    },
    {
        "answer": "SELECT AVG(erp_w) FROM table_name_59 WHERE call_sign = \"k248bj\" AND frequency_mhz > 97.5",
        "context": "CREATE TABLE table_name_59 (erp_w INTEGER, call_sign VARCHAR, frequency_mhz VARCHAR)",
        "question": "What is the ERP W for the station whose call sign is K248BJ and whose frequency MHz is higher than 97.5?"
    },
    {
        "answer": "SELECT city_of_license FROM table_name_60 WHERE frequency_mhz = 102.3 AND erp_w < 1 OFFSET 000",
        "context": "CREATE TABLE table_name_60 (city_of_license VARCHAR, frequency_mhz VARCHAR, erp_w VARCHAR)",
        "question": "In which city is the station licensed whose frequency MHz is higher than 102.3 and the ERP W is lower than 1,000?"
    },
    {
        "answer": "SELECT AVG(staying_councillors) FROM table_name_42 WHERE election_result > 0 AND party = \"conservatives\" AND new_council < 27",
        "context": "CREATE TABLE table_name_42 (staying_councillors INTEGER, new_council VARCHAR, election_result VARCHAR, party VARCHAR)",
        "question": "How many staying councillors were there when the election result was larger than 0, the new council less than 27 and the party conservatives?"
    },
    {
        "answer": "SELECT SUM(2001) FROM table_name_73 WHERE year = \"ebitda\" AND 2009 < 3 OFFSET 600",
        "context": "CREATE TABLE table_name_73 (year VARCHAR)",
        "question": "what is 2001 when the year is ebitda and 2009 is less than 3,600?"
    },
    {
        "answer": "SELECT record FROM table_name_30 WHERE res = \"win\" AND event = \"extreme fighting 1\"",
        "context": "CREATE TABLE table_name_30 (record VARCHAR, res VARCHAR, event VARCHAR)",
        "question": "Which Record has the Res of win with the Event of extreme fighting 1?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_37 WHERE citation = \"honor\" AND author = \"kadir nelson\"",
        "context": "CREATE TABLE table_name_37 (year INTEGER, citation VARCHAR, author VARCHAR)",
        "question": "what is the year when the citation is honor and the author is kadir nelson?"
    },
    {
        "answer": "SELECT MAX(total) FROM table_name_87 WHERE bronze = 1 AND rank = \"7\" AND gold > 0",
        "context": "CREATE TABLE table_name_87 (total INTEGER, gold VARCHAR, bronze VARCHAR, rank VARCHAR)",
        "question": "What is the largest total for a team with 1 bronze, 0 gold medals and ranking of 7?"
    },
    {
        "answer": "SELECT college FROM table_name_5 WHERE position = \"defensive line\" AND school = \"grant high school\"",
        "context": "CREATE TABLE table_name_5 (college VARCHAR, position VARCHAR, school VARCHAR)",
        "question": "What college has a position of defensive line and Grant high school?"
    },
    {
        "answer": "SELECT AVG(bronze) FROM table_name_78 WHERE rank > 6 AND nation = \"italy (ita)\" AND total < 1",
        "context": "CREATE TABLE table_name_78 (bronze INTEGER, total VARCHAR, rank VARCHAR, nation VARCHAR)",
        "question": "What is the average Bronze, when Rank is greater than 6, when Nation is Italy (ITA), and when Total is less than 1?"
    },
    {
        "answer": "SELECT SUM(total) FROM table_name_87 WHERE silver > 1 AND nation = \"germany (ger)\" AND gold < 1",
        "context": "CREATE TABLE table_name_87 (total INTEGER, gold VARCHAR, silver VARCHAR, nation VARCHAR)",
        "question": "What is the sum of Total, when Silver is greater than 1, when Nation is Germany (GER), and when Gold is less than 1?"
    },
    {
        "answer": "SELECT MIN(round) FROM table_name_31 WHERE school_club_team = \"southern mississippi\"",
        "context": "CREATE TABLE table_name_31 (round INTEGER, school_club_team VARCHAR)",
        "question": "Where's the first round that southern mississippi shows up during the draft?"
    },
    {
        "answer": "SELECT MIN(code) FROM table_name_14 WHERE regional_county_municipality = \"le haut-saint-laurent\" AND region > 16",
        "context": "CREATE TABLE table_name_14 (code INTEGER, regional_county_municipality VARCHAR, region VARCHAR)",
        "question": "What is the code for a Le Haut-Saint-Laurent municipality that has 16 or more regions?"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_87 WHERE grid > 9 AND time_retired = \"+32.354\"",
        "context": "CREATE TABLE table_name_87 (laps VARCHAR, grid VARCHAR, time_retired VARCHAR)",
        "question": "How many Laps have a Grid larger than 9, and a Time/Retired of +32.354?"
    },
    {
        "answer": "SELECT date FROM table_name_57 WHERE location = \"prague\" AND competition = \"world group, consolation round\"",
        "context": "CREATE TABLE table_name_57 (date VARCHAR, location VARCHAR, competition VARCHAR)",
        "question": "what is the date for the game in prague for the world group, consolation round competition?"
    },
    {
        "answer": "SELECT COUNT(crowd) FROM table_name_62 WHERE home_team = \"wollongong hawks\"",
        "context": "CREATE TABLE table_name_62 (crowd VARCHAR, home_team VARCHAR)",
        "question": "how many times is the home team wollongong hawks?"
    },
    {
        "answer": "SELECT score FROM table_name_45 WHERE result = \"loss\" AND year = \"1980\" AND competition = \"world group, consolation round\"",
        "context": "CREATE TABLE table_name_45 (score VARCHAR, competition VARCHAR, result VARCHAR, year VARCHAR)",
        "question": "what is the score when the result is loss, the year is 1980 and the competition is world group, consolation round?"
    },
    {
        "answer": "SELECT COUNT(game) FROM table_name_12 WHERE high_rebounds = \"radoslav nesterovi\u0107 (8)\" AND high_assists = \"jos\u00e9 calder\u00f3n (9)\"",
        "context": "CREATE TABLE table_name_12 (game VARCHAR, high_rebounds VARCHAR, high_assists VARCHAR)",
        "question": "What numbered game featured a High rebounds of radoslav nesterovi\u0107 (8), and a High assists of jos\u00e9 calder\u00f3n (9)?"
    },
    {
        "answer": "SELECT date FROM table_name_70 WHERE venue = \"gold coast convention centre\"",
        "context": "CREATE TABLE table_name_70 (date VARCHAR, venue VARCHAR)",
        "question": "what is the date when the venue is gold coast convention centre?"
    },
    {
        "answer": "SELECT name FROM table_name_61 WHERE position = \"g\" AND team = \"petron blaze boosters\" AND year_retired = \"2000\"",
        "context": "CREATE TABLE table_name_61 (name VARCHAR, year_retired VARCHAR, position VARCHAR, team VARCHAR)",
        "question": "Who was the player in Position G on the Petron Blaze Boosters and retired in 2000?"
    },
    {
        "answer": "SELECT MAX(matches) FROM table_name_32 WHERE point = 43 AND final_rank < 7",
        "context": "CREATE TABLE table_name_32 (matches INTEGER, point VARCHAR, final_rank VARCHAR)",
        "question": "Tell me the highest matches for point 43 and final rank less than 7"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_59 WHERE home = \"ny islanders\"",
        "context": "CREATE TABLE table_name_59 (attendance VARCHAR, home VARCHAR)",
        "question": "What is the attendance of the game with the NY Islanders as home team?"
    },
    {
        "answer": "SELECT team FROM table_name_95 WHERE state_province = \"maryland\" AND league = \"mlb\"",
        "context": "CREATE TABLE table_name_95 (team VARCHAR, state_province VARCHAR, league VARCHAR)",
        "question": "Which mlb team is located in maryland?"
    },
    {
        "answer": "SELECT est FROM table_name_96 WHERE state_province = \"illinois\" AND city = \"chicago\" AND league = \"nfl\"",
        "context": "CREATE TABLE table_name_96 (est VARCHAR, league VARCHAR, state_province VARCHAR, city VARCHAR)",
        "question": "In what year was the NFL team in chicago illinois established?"
    },
    {
        "answer": "SELECT published_in FROM table_name_22 WHERE setting = \"mars\" AND publication_date = \"july 1934\"",
        "context": "CREATE TABLE table_name_22 (published_in VARCHAR, setting VARCHAR, publication_date VARCHAR)",
        "question": "Name what was published in july 1934 with a setting of mars"
    },
    {
        "answer": "SELECT title FROM table_name_84 WHERE published_in = \"astounding stories\" AND main_characters = \"grant calthorpe, lee neilan\"",
        "context": "CREATE TABLE table_name_84 (title VARCHAR, published_in VARCHAR, main_characters VARCHAR)",
        "question": "Name the title when the main characters are grant calthorpe, lee neilan and the published in of astounding stories"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_59 WHERE home_team = \"north melbourne\"",
        "context": "CREATE TABLE table_name_59 (home_team VARCHAR)",
        "question": "What score did the home team of north melbourne get?"
    },
    {
        "answer": "SELECT plaid_cymru FROM table_name_77 WHERE polling_organisation_client = \"yougov/itv wales\" AND date_s__conducted = \"4 may 2011\"",
        "context": "CREATE TABLE table_name_77 (plaid_cymru VARCHAR, polling_organisation_client VARCHAR, date_s__conducted VARCHAR)",
        "question": "I want the plaid cymru for Polling organisation/client of yougov/itv wales for 4 may 2011"
    },
    {
        "answer": "SELECT third_vice_skip FROM table_name_13 WHERE second = \"\u00e9ric sylvain\"",
        "context": "CREATE TABLE table_name_13 (third_vice_skip VARCHAR, second VARCHAR)",
        "question": "Which Third/Vice skip has a Second of \u00e9ric sylvain?"
    },
    {
        "answer": "SELECT score FROM table_name_12 WHERE place = \"t2\" AND player = \"dow finsterwald\"",
        "context": "CREATE TABLE table_name_12 (score VARCHAR, place VARCHAR, player VARCHAR)",
        "question": "What is the Score of T2 Place Player Dow Finsterwald?"
    },
    {
        "answer": "SELECT SUM(interview) FROM table_name_57 WHERE average = 8.363 AND evening_gown > 8.37",
        "context": "CREATE TABLE table_name_57 (interview INTEGER, average VARCHAR, evening_gown VARCHAR)",
        "question": "Tell me the sum of interview for evening gown more than 8.37 and average of 8.363"
    },
    {
        "answer": "SELECT COUNT(swimsuit) FROM table_name_54 WHERE interview < 9.09 AND evening_gown < 8.21 AND average = 8.453",
        "context": "CREATE TABLE table_name_54 (swimsuit VARCHAR, average VARCHAR, interview VARCHAR, evening_gown VARCHAR)",
        "question": "Name the total number of swimsuits for evening gowns less than 8.21 and average of 8.453 with interview less than 9.09"
    },
    {
        "answer": "SELECT to_par FROM table_name_1 WHERE country = \"united states\" AND score = 71 - 71 = 142",
        "context": "CREATE TABLE table_name_1 (to_par VARCHAR, country VARCHAR, score VARCHAR)",
        "question": "What's the to par of the United States with the score of 71-71=142?"
    },
    {
        "answer": "SELECT MAX(planetary_mass___m) AS \u2295__ FROM table_name_5 WHERE rv__cm_s_ = 65 AND period__days_ < 21",
        "context": "CREATE TABLE table_name_5 (planetary_mass___m INTEGER, rv__cm_s_ VARCHAR, period__days_ VARCHAR)",
        "question": "What is the highest planetary mass having an RV (cm/s) of 65 and a Period (days) less than 21?"
    },
    {
        "answer": "SELECT AVG(word__number) FROM table_name_9 WHERE name = \"crs\" AND subframe__number < 2",
        "context": "CREATE TABLE table_name_9 (word__number INTEGER, name VARCHAR, subframe__number VARCHAR)",
        "question": "What is the average word count with crs and subframes lesser than 2?"
    },
    {
        "answer": "SELECT SUM(pick) FROM table_name_70 WHERE position = \"defensive end\" AND round = 8",
        "context": "CREATE TABLE table_name_70 (pick INTEGER, position VARCHAR, round VARCHAR)",
        "question": "What pick was used to select a Defensive End in round 8?"
    },
    {
        "answer": "SELECT time FROM table_name_39 WHERE jockey = \"isaac murphy\" AND winner = \"kingman\"",
        "context": "CREATE TABLE table_name_39 (time VARCHAR, jockey VARCHAR, winner VARCHAR)",
        "question": "Which time contains the jockery of isaac murphy as well as the winner of kingman?"
    },
    {
        "answer": "SELECT away_team FROM table_name_95 WHERE tie_no > 16 AND home_team = \"forest green rovers\"",
        "context": "CREATE TABLE table_name_95 (away_team VARCHAR, tie_no VARCHAR, home_team VARCHAR)",
        "question": "Who was the away team in a tie no larger than 16 with forest green rovers at home?"
    },
    {
        "answer": "SELECT MIN(interview) FROM table_name_52 WHERE state = \"south dakota\" AND evening_gown < 8.513",
        "context": "CREATE TABLE table_name_52 (interview INTEGER, state VARCHAR, evening_gown VARCHAR)",
        "question": "Who had the lowest interview score from South Dakota with an evening gown less than 8.513?"
    },
    {
        "answer": "SELECT MIN(average) FROM table_name_31 WHERE interview = 8.275 AND evening_gown > 8.7",
        "context": "CREATE TABLE table_name_31 (average INTEGER, interview VARCHAR, evening_gown VARCHAR)",
        "question": "What is the lowest average of the contestant with an interview of 8.275 and an evening gown bigger than 8.7?"
    },
    {
        "answer": "SELECT MAX(joined) FROM table_name_84 WHERE conference_championships = 5 AND institution = \"university of north carolina\"",
        "context": "CREATE TABLE table_name_84 (joined INTEGER, conference_championships VARCHAR, institution VARCHAR)",
        "question": "What is the latest year joined with a Conference championships of 5, and an Institution of university of north carolina?"
    },
    {
        "answer": "SELECT MIN(total_produced) FROM table_name_68 WHERE model = \"fm h-15-44\"",
        "context": "CREATE TABLE table_name_68 (total_produced INTEGER, model VARCHAR)",
        "question": "Which is the smallest Total produced with a model of FM H-15-44?"
    },
    {
        "answer": "SELECT COUNT(game) FROM table_name_87 WHERE location = \"toronto\" AND points < 31",
        "context": "CREATE TABLE table_name_87 (game VARCHAR, location VARCHAR, points VARCHAR)",
        "question": "What is the total number of games at Toronto with less than 31 points?"
    },
    {
        "answer": "SELECT model FROM table_name_68 WHERE fuel_or_propulsion = \"diesel\" AND manufacturer = \"orion\" AND year = 2005",
        "context": "CREATE TABLE table_name_68 (model VARCHAR, year VARCHAR, fuel_or_propulsion VARCHAR, manufacturer VARCHAR)",
        "question": "Tell me the model with fuel or propulsion of diesel and orion manufacturer in 2005"
    },
    {
        "answer": "SELECT AVG(starts) FROM table_name_81 WHERE poles = 0 AND position = \"65th\" AND year < 2007",
        "context": "CREATE TABLE table_name_81 (starts INTEGER, year VARCHAR, poles VARCHAR, position VARCHAR)",
        "question": "Before 2007, what was the avg start that had a pole of 0 and in 65th position?"
    },
    {
        "answer": "SELECT winner FROM table_name_61 WHERE circuit = \"phillip island grand prix circuit\"",
        "context": "CREATE TABLE table_name_61 (winner VARCHAR, circuit VARCHAR)",
        "question": "Which driver won the Phillip Island Grand Prix Circuit?"
    },
    {
        "answer": "SELECT clerk FROM table_name_14 WHERE highway_commissioners = \"albert lewis\"",
        "context": "CREATE TABLE table_name_14 (clerk VARCHAR, highway_commissioners VARCHAR)",
        "question": "Who was the clerk when the highway commissioner was Albert Lewis?"
    },
    {
        "answer": "SELECT score FROM table_name_9 WHERE location_attendance = \"madison square garden unknown\" AND high_rebounds = \"sidney green (10)\"",
        "context": "CREATE TABLE table_name_9 (score VARCHAR, location_attendance VARCHAR, high_rebounds VARCHAR)",
        "question": "What is Score, when Location Attendance is \"Madison Square Garden Unknown\", and when High Rebounds is \"Sidney Green (10)\"?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_58 WHERE visitor = \"montreal\" AND decision = \"price\"",
        "context": "CREATE TABLE table_name_58 (attendance INTEGER, visitor VARCHAR, decision VARCHAR)",
        "question": "What was the average attendance when the decision was price and montreal were the visitors?"
    },
    {
        "answer": "SELECT visitor FROM table_name_17 WHERE decision = \"mason\" AND date = \"january 29\"",
        "context": "CREATE TABLE table_name_17 (visitor VARCHAR, decision VARCHAR, date VARCHAR)",
        "question": "On January 29, who had the decision of Mason?"
    },
    {
        "answer": "SELECT AVG(kilometer) FROM table_name_15 WHERE pavement = \"asphalt\" AND length__m_ > 645 AND name = \"berendries\" AND average_climb___percentage_ < 7",
        "context": "CREATE TABLE table_name_15 (kilometer INTEGER, average_climb___percentage_ VARCHAR, name VARCHAR, pavement VARCHAR, length__m_ VARCHAR)",
        "question": "What is the Kilometer of the Berendries asphalt course with an Average climb less than 7 and Length (m) longer than 645?"
    },
    {
        "answer": "SELECT record FROM table_name_72 WHERE date = \"october 27\"",
        "context": "CREATE TABLE table_name_72 (record VARCHAR, date VARCHAR)",
        "question": "What was the record on the game that was played on october 27?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_56 WHERE home = \"lakers\"",
        "context": "CREATE TABLE table_name_56 (attendance INTEGER, home VARCHAR)",
        "question": "What is the highest attendace of the game with the Lakers as the home team?"
    },
    {
        "answer": "SELECT finalist FROM table_name_26 WHERE week = \"august 6\"",
        "context": "CREATE TABLE table_name_26 (finalist VARCHAR, week VARCHAR)",
        "question": "For the week of August 6, who is the finalist?"
    },
    {
        "answer": "SELECT nature_of_help FROM table_name_31 WHERE people_assisted = \"1,000\"",
        "context": "CREATE TABLE table_name_31 (nature_of_help VARCHAR, people_assisted VARCHAR)",
        "question": "In the disaster in which 1,000 people were helped, what was the nature of help?"
    },
    {
        "answer": "SELECT erp_w FROM table_name_54 WHERE frequency_mhz > 89.1 AND city_of_license = \"de queen, arkansas\"",
        "context": "CREATE TABLE table_name_54 (erp_w VARCHAR, frequency_mhz VARCHAR, city_of_license VARCHAR)",
        "question": "Which ERP W has a Frequency MHz larger than 89.1, and a City of license of de queen, arkansas?"
    },
    {
        "answer": "SELECT player FROM table_name_4 WHERE caps < 49 AND position = \"wing\" AND club_province = \"ulster\"",
        "context": "CREATE TABLE table_name_4 (player VARCHAR, club_province VARCHAR, caps VARCHAR, position VARCHAR)",
        "question": "Which Ulster player has fewer than 49 caps and plays the wing position?"
    },
    {
        "answer": "SELECT record FROM table_name_37 WHERE date = \"january 19\"",
        "context": "CREATE TABLE table_name_37 (record VARCHAR, date VARCHAR)",
        "question": "What is the record for January 19?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_95 WHERE opponent = \"green bay packers\" AND week > 10",
        "context": "CREATE TABLE table_name_95 (attendance INTEGER, opponent VARCHAR, week VARCHAR)",
        "question": "Which Attendance has an Opponent of green bay packers, and a Week larger than 10?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_name_60 WHERE outgoing_manager = \"petrik sander\"",
        "context": "CREATE TABLE table_name_60 (date_of_appointment VARCHAR, outgoing_manager VARCHAR)",
        "question": "When is the appointment date for outgoing manager Petrik Sander?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_name_72 WHERE team = \"vfl wolfsburg\"",
        "context": "CREATE TABLE table_name_72 (date_of_appointment VARCHAR, team VARCHAR)",
        "question": "When was the appointment date for VFL Wolfsburg?"
    },
    {
        "answer": "SELECT decision FROM table_name_71 WHERE visitor = \"detroit\" AND home = \"ottawa\"",
        "context": "CREATE TABLE table_name_71 (decision VARCHAR, visitor VARCHAR, home VARCHAR)",
        "question": "Who had the decision when the visitor was Detroit and the home team was Ottawa?"
    },
    {
        "answer": "SELECT SUM(laps) FROM table_name_43 WHERE grid > 2 AND driver = \"jos verstappen\"",
        "context": "CREATE TABLE table_name_43 (laps INTEGER, grid VARCHAR, driver VARCHAR)",
        "question": "How many laps did Jos Verstappen do on Grid 2?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_43 WHERE home_team = \"essendon\"",
        "context": "CREATE TABLE table_name_43 (away_team VARCHAR, home_team VARCHAR)",
        "question": "When Essendon was the Home Team, what was the Away Team score?"
    },
    {
        "answer": "SELECT themed_area FROM table_name_35 WHERE type = \"animal show\" AND opened = \"2010\"",
        "context": "CREATE TABLE table_name_35 (themed_area VARCHAR, type VARCHAR, opened VARCHAR)",
        "question": "What themed area opened in 2010 as an animal show?"
    },
    {
        "answer": "SELECT score FROM table_name_2 WHERE date = \"november 21\"",
        "context": "CREATE TABLE table_name_2 (score VARCHAR, date VARCHAR)",
        "question": "What was the score on november 21?"
    },
    {
        "answer": "SELECT MAX(market_value__billion_) AS $_ FROM table_name_99 WHERE rank = \"02 2\" AND sales__billion_$_ > 113.1",
        "context": "CREATE TABLE table_name_99 (market_value__billion_ INTEGER, rank VARCHAR, sales__billion_$_ VARCHAR)",
        "question": "What is the highest Market Value (billion $), when Rank is 02 2, and when Sales (billion $) is greater than 113.1?"
    },
    {
        "answer": "SELECT MIN(profits__billion_) AS $_ FROM table_name_83 WHERE market_value__billion_$_ < 201.3 AND headquarters = \"united states\" AND company = \"jpmorgan chase\"",
        "context": "CREATE TABLE table_name_83 (profits__billion_ INTEGER, company VARCHAR, market_value__billion_$_ VARCHAR, headquarters VARCHAR)",
        "question": "What is the lowest Profits (billion $), when Market Value (billion $) is less than 201.3, when Headquarters is United States, and when Company is JPMorgan Chase?"
    },
    {
        "answer": "SELECT status FROM table_name_60 WHERE area_km_2 > 5.2 AND census_ranking = \"2,531 of 5,008\"",
        "context": "CREATE TABLE table_name_60 (status VARCHAR, area_km_2 VARCHAR, census_ranking VARCHAR)",
        "question": "What is the status of the community that has an area larger than 5.2 sq km, and a Census Ranking of 2,531 of 5,008?"
    },
    {
        "answer": "SELECT SUM(apparent_magnitude) FROM table_name_45 WHERE ngc_number > 3293",
        "context": "CREATE TABLE table_name_45 (apparent_magnitude INTEGER, ngc_number INTEGER)",
        "question": "What is the total of Apparent magnitudes for an NGC number larger than 3293?"
    },
    {
        "answer": "SELECT lap_by_lap FROM table_name_48 WHERE year > 2008 AND pre_race_host = \"chris myers\" AND ratings = \"9.9/22\"",
        "context": "CREATE TABLE table_name_48 (lap_by_lap VARCHAR, ratings VARCHAR, year VARCHAR, pre_race_host VARCHAR)",
        "question": "What Lap-by-lap has Chris Myers as the Pre-Race Host, a Year larger than 2008, and 9.9/22 as its Ratings?"
    },
    {
        "answer": "SELECT opponent FROM table_name_19 WHERE attendance = \"58,836\"",
        "context": "CREATE TABLE table_name_19 (opponent VARCHAR, attendance VARCHAR)",
        "question": "What is Opponent, when Attendance is 58,836?"
    },
    {
        "answer": "SELECT position FROM table_name_14 WHERE podiums = \"3\" AND f_laps = \"4\"",
        "context": "CREATE TABLE table_name_14 (position VARCHAR, podiums VARCHAR, f_laps VARCHAR)",
        "question": "Which position had 3 podiums and F/laps of 4?"
    },
    {
        "answer": "SELECT team FROM table_name_44 WHERE races = \"1\" AND f_laps = \"1\" AND series = \"24 hours of nurburgring\"",
        "context": "CREATE TABLE table_name_44 (team VARCHAR, series VARCHAR, races VARCHAR, f_laps VARCHAR)",
        "question": "Which team had 1 race, 1 F/lap and in the series 24 hours of Nurburgring?"
    },
    {
        "answer": "SELECT season FROM table_name_22 WHERE promoted = \"norwich union league\"",
        "context": "CREATE TABLE table_name_22 (season VARCHAR, promoted VARCHAR)",
        "question": "What season was Norwich Union League promoted?"
    },
    {
        "answer": "SELECT time FROM table_name_75 WHERE opponent = \"phil baroni\"",
        "context": "CREATE TABLE table_name_75 (time VARCHAR, opponent VARCHAR)",
        "question": "Can you tell me the Time that has the Opponent of phil baroni?"
    },
    {
        "answer": "SELECT mate FROM table_name_48 WHERE tv_seasons > 1 AND last_appearance = \"bully, bully, bully (3x13)\" AND animal_name = \"hollow/holly\"",
        "context": "CREATE TABLE table_name_48 (mate VARCHAR, animal_name VARCHAR, tv_seasons VARCHAR, last_appearance VARCHAR)",
        "question": "What is the mate for Last Appearance of bully, bully, bully (3x13) for the animal named hollow/holly later than season 1?"
    },
    {
        "answer": "SELECT location FROM table_name_64 WHERE county = \"platte\"",
        "context": "CREATE TABLE table_name_64 (location VARCHAR, county VARCHAR)",
        "question": "What's the location for the country of platte?"
    },
    {
        "answer": "SELECT county FROM table_name_36 WHERE listed = \"1992-06-29\" AND name = \"republican river bridge\"",
        "context": "CREATE TABLE table_name_36 (county VARCHAR, listed VARCHAR, name VARCHAR)",
        "question": "what's the county name for the republican river bridge listed on 1992-06-29?"
    },
    {
        "answer": "SELECT to_par FROM table_name_52 WHERE player = \"dave hill\"",
        "context": "CREATE TABLE table_name_52 (to_par VARCHAR, player VARCHAR)",
        "question": "what is the to par for Dave hill?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_45 WHERE opponent = \"new orleans saints\" AND week > 12",
        "context": "CREATE TABLE table_name_45 (attendance INTEGER, opponent VARCHAR, week VARCHAR)",
        "question": "Can you tell me the average Attendance that has the Opponent of new orleans saints, and the Week larger than 12?"
    },
    {
        "answer": "SELECT density__hab__km\u00b2__ FROM table_name_4 WHERE population_censo_2007_hab_ = \"336.293*\"",
        "context": "CREATE TABLE table_name_4 (density__hab__km\u00b2__ VARCHAR, population_censo_2007_hab_ VARCHAR)",
        "question": "What is the density (hab/km\u00b2) with a population censo 2007(hab) of 336.293*?"
    },
    {
        "answer": "SELECT population_under_1_year_old_censo_2007_hab_ FROM table_name_91 WHERE population_censo_2007_hab_ = \"112.054*\"",
        "context": "CREATE TABLE table_name_91 (population_under_1_year_old_censo_2007_hab_ VARCHAR, population_censo_2007_hab_ VARCHAR)",
        "question": "What is the under 1 year-old Censo 2007(hab) population with a population censo 2007(hab) of 112.054*?"
    },
    {
        "answer": "SELECT density__hab__km\u00b2__ FROM table_name_21 WHERE population_under_1_year_old_censo_2007_hab_ = \"* data from the census taken by the inei\"",
        "context": "CREATE TABLE table_name_21 (density__hab__km\u00b2__ VARCHAR, population_under_1_year_old_censo_2007_hab_ VARCHAR)",
        "question": "What is the density (hab/km\u00b2) with a population under 1 year-old censo 2007(hab) of * data from the census taken by the Inei?"
    },
    {
        "answer": "SELECT constructor FROM table_name_19 WHERE laps < 62 AND time_retired = \"gearbox\" AND grid > 1 AND driver = \"pedro diniz\"",
        "context": "CREATE TABLE table_name_19 (constructor VARCHAR, driver VARCHAR, grid VARCHAR, laps VARCHAR, time_retired VARCHAR)",
        "question": "What constructor has under 62 laps, a Time/Retired of gearbox, a Grid larger than 1, and pedro diniz driving?"
    },
    {
        "answer": "SELECT home_team FROM table_name_32 WHERE venue = \"victoria park\"",
        "context": "CREATE TABLE table_name_32 (home_team VARCHAR, venue VARCHAR)",
        "question": "Who was the home team that played in Victoria Park?"
    },
    {
        "answer": "SELECT score FROM table_name_67 WHERE date = \"13 march 1985\" AND away_team = \"millwall\"",
        "context": "CREATE TABLE table_name_67 (score VARCHAR, date VARCHAR, away_team VARCHAR)",
        "question": "What is Score, when Date is \"13 March 1985\", and when Away Team is \"Millwall\"?"
    },
    {
        "answer": "SELECT driver FROM table_name_58 WHERE grid < 14 AND laps < 53 AND time_retired = \"collision\" AND constructor = \"ferrari\"",
        "context": "CREATE TABLE table_name_58 (driver VARCHAR, constructor VARCHAR, time_retired VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "What is the name of the driver with a grid less than 14, laps smaller than 53 and a Time/Retired of collision, and a Constructor of ferrari?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_61 WHERE venue = \"victoria park\"",
        "context": "CREATE TABLE table_name_61 (away_team VARCHAR, venue VARCHAR)",
        "question": "When the Venue was victoria park, what was the Away team score?"
    },
    {
        "answer": "SELECT total_attendance FROM table_name_80 WHERE average_attendance < 4850 AND sport = \"rink hockey\"",
        "context": "CREATE TABLE table_name_80 (total_attendance VARCHAR, average_attendance VARCHAR, sport VARCHAR)",
        "question": "What's the total attendance in rink hockey when the average attendance was smaller than 4850?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_1 WHERE pts_game > 4 AND nation = \"england\" AND games < 5",
        "context": "CREATE TABLE table_name_1 (points INTEGER, games VARCHAR, pts_game VARCHAR, nation VARCHAR)",
        "question": "Can you tell me the average Points that has a Pts/game larger than 4, and the Nation of england, and the Games smaller than 5?"
    },
    {
        "answer": "SELECT MIN(games) FROM table_name_96 WHERE pts_game > 1.4 AND points = 20 AND name = \"susan day\"",
        "context": "CREATE TABLE table_name_96 (games INTEGER, name VARCHAR, pts_game VARCHAR, points VARCHAR)",
        "question": "Can you tell me the lowest Games that has the Pts/game larger than 1.4 and the Points of 20, and the Name of susan day?"
    },
    {
        "answer": "SELECT surface FROM table_name_87 WHERE outcome = \"runner-up\" AND score_in_the_final = \"4\u20136, 6\u20137, 6\u20132, 2\u20136\"",
        "context": "CREATE TABLE table_name_87 (surface VARCHAR, outcome VARCHAR, score_in_the_final VARCHAR)",
        "question": "Which Surface has an Outcome of runner-up, and a Score in the final of 4\u20136, 6\u20137, 6\u20132, 2\u20136?"
    },
    {
        "answer": "SELECT home FROM table_name_28 WHERE result = \"0:2\" AND date = \"21.10.07\"",
        "context": "CREATE TABLE table_name_28 (home VARCHAR, result VARCHAR, date VARCHAR)",
        "question": "What is the home of the match with a 0:2 result on 21.10.07?"
    },
    {
        "answer": "SELECT elista FROM table_name_14 WHERE played = 1 AND baku = \"153\u2153\"",
        "context": "CREATE TABLE table_name_14 (elista VARCHAR, played VARCHAR, baku VARCHAR)",
        "question": "What is the elista with 1 played and 153\u2153 baku?"
    },
    {
        "answer": "SELECT driver FROM table_name_72 WHERE points = 26",
        "context": "CREATE TABLE table_name_72 (driver VARCHAR, points VARCHAR)",
        "question": "Which river had 26 points?"
    },
    {
        "answer": "SELECT score FROM table_name_97 WHERE visitor = \"toronto maple leafs\"",
        "context": "CREATE TABLE table_name_97 (score VARCHAR, visitor VARCHAR)",
        "question": "What was the score of the game in which the Toronto Maple Leafs were visitors?"
    },
    {
        "answer": "SELECT host_team FROM table_name_57 WHERE stadium = \"giants stadium\" AND visiting_team = \"cincinnati bengals\"",
        "context": "CREATE TABLE table_name_57 (host_team VARCHAR, stadium VARCHAR, visiting_team VARCHAR)",
        "question": "Tell me the host team for giants stadium and visiting of cincinnati bengals"
    },
    {
        "answer": "SELECT MAX(grid) FROM table_name_44 WHERE laps < 39 AND driver = \"juan manuel fangio\"",
        "context": "CREATE TABLE table_name_44 (grid INTEGER, laps VARCHAR, driver VARCHAR)",
        "question": "When the driver is Juan Manuel Fangio and laps is less than 39, what is the highest grid?"
    },
    {
        "answer": "SELECT title FROM table_name_83 WHERE season__number > 10 AND series__number > 35 AND directed_by = \"erik wiese and eddie trigueros\"",
        "context": "CREATE TABLE table_name_83 (title VARCHAR, directed_by VARCHAR, season__number VARCHAR, series__number VARCHAR)",
        "question": "What is the Title of the episode after Season 10 Directed by Erik Wiese and Eddie Trigueros after Seres 35?"
    },
    {
        "answer": "SELECT player FROM table_name_74 WHERE caps > 12 AND club_province = \"toulouse\"",
        "context": "CREATE TABLE table_name_74 (player VARCHAR, caps VARCHAR, club_province VARCHAR)",
        "question": "Which player has a cap larger than 12 and Clubs of Toulouse?"
    },
    {
        "answer": "SELECT takuu FROM table_name_83 WHERE north_marquesan = \"/vehine/\"",
        "context": "CREATE TABLE table_name_83 (takuu VARCHAR, north_marquesan VARCHAR)",
        "question": "What kind of Takuu has a North Marquesan of /vehine/?"
    },
    {
        "answer": "SELECT driver FROM table_name_59 WHERE grid = 9",
        "context": "CREATE TABLE table_name_59 (driver VARCHAR, grid VARCHAR)",
        "question": "I want the driver for grid of 9"
    },
    {
        "answer": "SELECT la_crescenta__montrose FROM table_name_71 WHERE tujunga = \"moderate\"",
        "context": "CREATE TABLE table_name_71 (la_crescenta__montrose VARCHAR, tujunga VARCHAR)",
        "question": "When Tujunga is moderate, what is La Crescenta-Montrose?"
    },
    {
        "answer": "SELECT team FROM table_name_31 WHERE league = \"national\" AND year = 2001",
        "context": "CREATE TABLE table_name_31 (team VARCHAR, league VARCHAR, year VARCHAR)",
        "question": "What team has a national league in 2001?"
    },
    {
        "answer": "SELECT original_title FROM table_name_73 WHERE director = \"ting shan-si\" AND film_title_used_in_nomination = \"the 800 heroes\"",
        "context": "CREATE TABLE table_name_73 (original_title VARCHAR, director VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What is the Original Title, when Director is \"Ting Shan-Si\", and when Film Title Used In Nomination is \"The 800 Heroes\"?"
    },
    {
        "answer": "SELECT MAX(played) FROM table_name_29 WHERE draws < 7 AND goals_for < 61 AND goals_against < 48 AND position = 5",
        "context": "CREATE TABLE table_name_29 (played INTEGER, position VARCHAR, goals_against VARCHAR, draws VARCHAR, goals_for VARCHAR)",
        "question": "Which Played has Draws smaller than 7, and Goals for smaller than 61, and Goals against smaller than 48, and a Position of 5?"
    },
    {
        "answer": "SELECT MAX(score) FROM table_name_51 WHERE place = \"t5\" AND player = \"brandt jobe\"",
        "context": "CREATE TABLE table_name_51 (score INTEGER, place VARCHAR, player VARCHAR)",
        "question": "What was the highest score of t5 place finisher brandt jobe?"
    },
    {
        "answer": "SELECT COUNT(area_km_2) FROM table_name_16 WHERE census_ranking = \"1,871 of 5,008\" AND population > 1 OFFSET 172",
        "context": "CREATE TABLE table_name_16 (area_km_2 VARCHAR, census_ranking VARCHAR, population VARCHAR)",
        "question": "What is the area of the parish with a population larger than 1,172 and a census ranking of 1,871 of 5,008?"
    },
    {
        "answer": "SELECT dates_administered FROM table_name_19 WHERE poll_source = \"rasmussen reports\" AND lead_margin > 32",
        "context": "CREATE TABLE table_name_19 (dates_administered VARCHAR, poll_source VARCHAR, lead_margin VARCHAR)",
        "question": "What was the date administered from a source of Rasmussen Reports and a lead margin over 32?"
    },
    {
        "answer": "SELECT designated_grand_prix FROM table_name_32 WHERE track = \"granollers\"",
        "context": "CREATE TABLE table_name_32 (designated_grand_prix VARCHAR, track VARCHAR)",
        "question": "What grand prix was held at Granollers?"
    },
    {
        "answer": "SELECT score FROM table_name_43 WHERE partner = \"florencia labat\" AND surface = \"clay\" AND opponents = \"laura golarsa ann grossman\"",
        "context": "CREATE TABLE table_name_43 (score VARCHAR, opponents VARCHAR, partner VARCHAR, surface VARCHAR)",
        "question": "what is the score when the partner is florencia labat, the surface is clay, the opponents is laura golarsa ann grossman?"
    },
    {
        "answer": "SELECT year FROM table_name_19 WHERE nominated = \"teen angels 2\"",
        "context": "CREATE TABLE table_name_19 (year VARCHAR, nominated VARCHAR)",
        "question": "What year was Teen Angels 2 nominated?"
    },
    {
        "answer": "SELECT MAX(goals_against) FROM table_name_74 WHERE club = \"pontevedra cf\" AND played < 38",
        "context": "CREATE TABLE table_name_74 (goals_against INTEGER, club VARCHAR, played VARCHAR)",
        "question": "What is the highest Goals Against, when Club is \"Pontevedra CF\", and when Played is less than 38?"
    },
    {
        "answer": "SELECT song FROM table_name_52 WHERE weeks_at_number_one > 2 AND issue_date_s_ = \"17 april - 8 may\"",
        "context": "CREATE TABLE table_name_52 (song VARCHAR, weeks_at_number_one VARCHAR, issue_date_s_ VARCHAR)",
        "question": "Which Song has a Weeks at number one larger than 2, and an Issue date(s) of 17 april - 8 may?"
    },
    {
        "answer": "SELECT song FROM table_name_17 WHERE issue_date_s_ = \"29 may - 26 june\"",
        "context": "CREATE TABLE table_name_17 (song VARCHAR, issue_date_s_ VARCHAR)",
        "question": "Which Song has an Issue date(s) of 29 may - 26 june?"
    },
    {
        "answer": "SELECT pronunciation_spelled_free FROM table_name_24 WHERE pronunciation_spelled_checked = \"\u0251\"",
        "context": "CREATE TABLE table_name_24 (pronunciation_spelled_free VARCHAR, pronunciation_spelled_checked VARCHAR)",
        "question": "What is Pronunciation Spelled Free, when Pronunciation Spelled Checked is \"\u0251\"?"
    },
    {
        "answer": "SELECT player FROM table_name_76 WHERE place = \"t5\" AND score = 73 - 69 - 68 = 210",
        "context": "CREATE TABLE table_name_76 (player VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "Who placed in t5 and scored 73-69-68=210?"
    },
    {
        "answer": "SELECT MIN(to_par) FROM table_name_44 WHERE player = \"tom watson\" AND total > 144",
        "context": "CREATE TABLE table_name_44 (to_par INTEGER, player VARCHAR, total VARCHAR)",
        "question": "What was Tom Watson's lowest To par when the total was larger than 144?"
    },
    {
        "answer": "SELECT source FROM table_name_8 WHERE race_winners = \"ben adriaenssen / ben van den bogaart\" AND gp_winner = \"ben adriaenssen / ben van den bogaart\" AND date = \"1 april\"",
        "context": "CREATE TABLE table_name_8 (source VARCHAR, date VARCHAR, race_winners VARCHAR, gp_winner VARCHAR)",
        "question": "What source has a race winner of ben adriaenssen / ben van den bogaart, and the gp winner of ben adriaenssen / ben van den bogaart, for the date of 1 april?"
    },
    {
        "answer": "SELECT gp_winner FROM table_name_2 WHERE race_winners = \"valentin giraud / nicolas musset\" AND place = \"genk\"",
        "context": "CREATE TABLE table_name_2 (gp_winner VARCHAR, race_winners VARCHAR, place VARCHAR)",
        "question": "What is the GP winner for the Race winners valentin giraud / nicolas musset, and a place genk?"
    },
    {
        "answer": "SELECT seat_percentage FROM table_name_73 WHERE vote_percentage = \"2.4% (-8.3)\"",
        "context": "CREATE TABLE table_name_73 (seat_percentage VARCHAR, vote_percentage VARCHAR)",
        "question": "What is the seat percentage when vote percentage is 2.4% (-8.3)?"
    },
    {
        "answer": "SELECT gp_winner FROM table_name_30 WHERE place = \"genk\" AND race_winners = \"ben adriaenssen / ben van den bogaart\"",
        "context": "CREATE TABLE table_name_30 (gp_winner VARCHAR, place VARCHAR, race_winners VARCHAR)",
        "question": "What is the GP winner with a place of genk, with race winners ben adriaenssen / ben van den bogaart?"
    },
    {
        "answer": "SELECT hometown FROM table_name_83 WHERE sport = \"basketball\" AND winner = \"dwight howard\"",
        "context": "CREATE TABLE table_name_83 (hometown VARCHAR, sport VARCHAR, winner VARCHAR)",
        "question": "What is Hometown, when Sport is \"Basketball\", and when Winner is \"Dwight Howard\"?"
    },
    {
        "answer": "SELECT opponent FROM table_name_11 WHERE attendance = 526",
        "context": "CREATE TABLE table_name_11 (opponent VARCHAR, attendance VARCHAR)",
        "question": "What team did the Flames play against when 526 people attended the game?"
    },
    {
        "answer": "SELECT natural_change FROM table_name_88 WHERE crude_death_rate__per_1000_ > 9 AND deaths = \"40 399\"",
        "context": "CREATE TABLE table_name_88 (natural_change VARCHAR, crude_death_rate__per_1000_ VARCHAR, deaths VARCHAR)",
        "question": "Which Natural change has a Crude death rate (per 1000) larger than 9, and Deaths of 40 399?"
    },
    {
        "answer": "SELECT country FROM table_name_43 WHERE class = \"15 meters\" AND qualifying_grand_prix = \"soaring grand prix of united kingdom\"",
        "context": "CREATE TABLE table_name_43 (country VARCHAR, class VARCHAR, qualifying_grand_prix VARCHAR)",
        "question": "What is Country, when Class is \"15 meters\", and when Qualifying Grand Prix is \"Soaring Grand Prix Of United Kingdom\"?"
    },
    {
        "answer": "SELECT result FROM table_name_46 WHERE location = \"riverfront stadium\" AND opponent = \"miami dolphins\"",
        "context": "CREATE TABLE table_name_46 (result VARCHAR, location VARCHAR, opponent VARCHAR)",
        "question": "What was the result of the game against the Miami Dolphins held at the Riverfront Stadium?"
    },
    {
        "answer": "SELECT score FROM table_name_72 WHERE venue = \"amman\" AND competition = \"friendly\" AND date = \"february 14, 2006\"",
        "context": "CREATE TABLE table_name_72 (score VARCHAR, date VARCHAR, venue VARCHAR, competition VARCHAR)",
        "question": "What was the score of the friendly match at Amman on February 14, 2006?"
    },
    {
        "answer": "SELECT player FROM table_name_68 WHERE score = 71 - 69 - 71 = 211",
        "context": "CREATE TABLE table_name_68 (player VARCHAR, score VARCHAR)",
        "question": "What player scored 71-69-71=211?"
    },
    {
        "answer": "SELECT venue FROM table_name_89 WHERE home_team = \"san francisco 49ers\" AND result = \"30-10\"",
        "context": "CREATE TABLE table_name_89 (venue VARCHAR, home_team VARCHAR, result VARCHAR)",
        "question": "What was the Venue of the San Francisco 49ers Home game with a Result of 30-10?"
    },
    {
        "answer": "SELECT no_6 FROM table_name_56 WHERE no_10 = \"joshua\" AND no_8 = \"andrew\"",
        "context": "CREATE TABLE table_name_56 (no_6 VARCHAR, no_10 VARCHAR, no_8 VARCHAR)",
        "question": "What is the No. 6 of the person with a No. 10 of Joshua and a No. 8 of Andrew?"
    },
    {
        "answer": "SELECT name FROM table_name_83 WHERE weight = \"kg (lb)\" AND club = \"gezira\" AND date_of_birth = \"1974-02-18\"",
        "context": "CREATE TABLE table_name_83 (name VARCHAR, date_of_birth VARCHAR, weight VARCHAR, club VARCHAR)",
        "question": "What is Name, when Weight is \"kg (lb)\", when Club is \"Gezira\", and when Date of Birth is \"1974-02-18\"?"
    },
    {
        "answer": "SELECT pos FROM table_name_45 WHERE height = \"m (ft 10in)\" AND date_of_birth = \"1983-05-29\"",
        "context": "CREATE TABLE table_name_45 (pos VARCHAR, height VARCHAR, date_of_birth VARCHAR)",
        "question": "What is Pos., when Height is \"m (ft 10in)\", and when Date of Birth is \"1983-05-29\"?"
    },
    {
        "answer": "SELECT road_team FROM table_name_61 WHERE result = \"117-114\"",
        "context": "CREATE TABLE table_name_61 (road_team VARCHAR, result VARCHAR)",
        "question": "Which road team has a result of 117-114?"
    },
    {
        "answer": "SELECT road_team FROM table_name_94 WHERE home_team = \"boston\" AND date = \"april 16\"",
        "context": "CREATE TABLE table_name_94 (road_team VARCHAR, home_team VARCHAR, date VARCHAR)",
        "question": "What is the road team playing against Boston on April 16?"
    },
    {
        "answer": "SELECT series_2 FROM table_name_35 WHERE series_3 = \"deborah meaden\"",
        "context": "CREATE TABLE table_name_35 (series_2 VARCHAR, series_3 VARCHAR)",
        "question": "Which Series 2 has a Series 3 of deborah meaden?"
    },
    {
        "answer": "SELECT COUNT(seat_order__right_to_left_) FROM table_name_83 WHERE series_3 = \"deborah meaden\"",
        "context": "CREATE TABLE table_name_83 (seat_order__right_to_left_ VARCHAR, series_3 VARCHAR)",
        "question": "How many Seat Orders (Right to Left) have a Series 3 of deborah meaden?"
    },
    {
        "answer": "SELECT MIN(others_number) FROM table_name_12 WHERE others_percentage = \"1.9%\" AND bush_number < 160 OFFSET 390",
        "context": "CREATE TABLE table_name_12 (others_number INTEGER, others_percentage VARCHAR, bush_number VARCHAR)",
        "question": "How many votes went to other candidates in the county that gave 1.9% votes to them, and 160,390 total votes to Bush?"
    },
    {
        "answer": "SELECT SUM(seats_2005) FROM table_name_14 WHERE percentage_in_de_crease = \"50.0%\" AND governorate = \"dhi qar governorate\" AND in_de_creased_by > 6",
        "context": "CREATE TABLE table_name_14 (seats_2005 INTEGER, in_de_creased_by VARCHAR, percentage_in_de_crease VARCHAR, governorate VARCHAR)",
        "question": "How many Seats 2005 has a Percentage in/de-crease of 50.0%, and a Governorate of dhi qar governorate, and a In/de-creased by larger than 6?"
    },
    {
        "answer": "SELECT MIN(seats_2010) FROM table_name_46 WHERE seats_2005 < 9 AND governorate = \"al muthanna governorate\" AND in_de_creased_by > 2",
        "context": "CREATE TABLE table_name_46 (seats_2010 INTEGER, in_de_creased_by VARCHAR, seats_2005 VARCHAR, governorate VARCHAR)",
        "question": "Name the lowest Seats 2010 which has Seats 2005 smaller than 9, and a Governorate of al muthanna governorate, and an In/de-creased by larger than 2?"
    },
    {
        "answer": "SELECT AVG(in_de_creased_by) FROM table_name_66 WHERE governorate = \"al anbar governorate\" AND seats_2005 < 9",
        "context": "CREATE TABLE table_name_66 (in_de_creased_by INTEGER, governorate VARCHAR, seats_2005 VARCHAR)",
        "question": "Name the average In/de-creased by which has a Governorate of al anbar governorate, and Seats 2005 smaller than 9?"
    },
    {
        "answer": "SELECT MAX(in_de_creased_by) FROM table_name_34 WHERE percentage_in_de_crease = \"100%\" AND seats_2010 > 8",
        "context": "CREATE TABLE table_name_34 (in_de_creased_by INTEGER, percentage_in_de_crease VARCHAR, seats_2010 VARCHAR)",
        "question": "Name the highest In/de-creased which has a Percentage in/de-crease of 100%, and Seats 2010 larger than 8?"
    },
    {
        "answer": "SELECT stop_no FROM table_name_25 WHERE destination = \"[2778] claisebrook station platforms\"",
        "context": "CREATE TABLE table_name_25 (stop_no VARCHAR, destination VARCHAR)",
        "question": "What is Stop No., when Destination is [2778] Claisebrook Station Platforms?"
    },
    {
        "answer": "SELECT coach FROM table_name_58 WHERE founded > 1963 AND team = \"western strikers\"",
        "context": "CREATE TABLE table_name_58 (coach VARCHAR, founded VARCHAR, team VARCHAR)",
        "question": "Which coach founded the Western Strikers team after 1963?"
    },
    {
        "answer": "SELECT COUNT(first_year) FROM table_name_18 WHERE displacement_cc > 4719 AND engine = \"v8\" AND power_hp__kw_ = \"335 (246)\" AND model = \"ghibli ss\"",
        "context": "CREATE TABLE table_name_18 (first_year VARCHAR, model VARCHAR, power_hp__kw_ VARCHAR, displacement_cc VARCHAR, engine VARCHAR)",
        "question": "What is the total number of First Year, when Displacement CC is greater than 4719, when Engine is V8, when Power HP (kW) is \"335 (246)\", and when Model is \"Ghibli SS\"?"
    },
    {
        "answer": "SELECT ending FROM table_name_49 WHERE british = \"iz\" AND examples = \"achilles, appendices, f\u00e6ces\"",
        "context": "CREATE TABLE table_name_49 (ending VARCHAR, british VARCHAR, examples VARCHAR)",
        "question": "Which Ending has British of iz, and Examples of achilles, appendices, f\u00e6ces?"
    },
    {
        "answer": "SELECT power_hp__kw_ FROM table_name_60 WHERE first_year > 1965 AND distribution = \"international\" AND engine = \"v6 biturbo\" AND model = \"425\"",
        "context": "CREATE TABLE table_name_60 (power_hp__kw_ VARCHAR, model VARCHAR, engine VARCHAR, first_year VARCHAR, distribution VARCHAR)",
        "question": "What is Power HP (kW), when First Year is greater than 1965, when Distribution is \"International\", when Engine is V6 Biturbo, and when Model is \"425\"?"
    },
    {
        "answer": "SELECT MIN(first_year) FROM table_name_15 WHERE model = \"quattroporte (2.8)\"",
        "context": "CREATE TABLE table_name_15 (first_year INTEGER, model VARCHAR)",
        "question": "What is the lowest First Year, when Model is \"Quattroporte (2.8)\"?"
    },
    {
        "answer": "SELECT score FROM table_name_22 WHERE venue = \"riyadh, saudi arabia\" AND result = \"win\"",
        "context": "CREATE TABLE table_name_22 (score VARCHAR, venue VARCHAR, result VARCHAR)",
        "question": "What is Score, when Venue is Riyadh, Saudi Arabia, and when Result is \"Win\"?"
    },
    {
        "answer": "SELECT result FROM table_name_58 WHERE date = \"june 11, 1994\" AND venue = \"miami, united states\"",
        "context": "CREATE TABLE table_name_58 (result VARCHAR, date VARCHAR, venue VARCHAR)",
        "question": "What is Result, when Date is \"June 11, 1994\", and when Venue is \"Miami, United States\"?"
    },
    {
        "answer": "SELECT spike FROM table_name_27 WHERE name = \"mia jerkov category:articles with hcards\"",
        "context": "CREATE TABLE table_name_27 (spike VARCHAR, name VARCHAR)",
        "question": "What kind of Spike has a Name of mia jerkov category:articles with hcards?"
    },
    {
        "answer": "SELECT 2013 AS _club FROM table_name_62 WHERE name = \"ana grbac category:articles with hcards\"",
        "context": "CREATE TABLE table_name_62 (name VARCHAR)",
        "question": "Name the 2013 club which has a Name of ana grbac category:articles with hcards?"
    },
    {
        "answer": "SELECT AVG(people_on_board) FROM table_name_48 WHERE airline = \"iberia\" AND aircraft_type = \"lockheed l-1049g\"",
        "context": "CREATE TABLE table_name_48 (people_on_board INTEGER, airline VARCHAR, aircraft_type VARCHAR)",
        "question": "What is the number of people on board at Iberia Airline, with the aircraft type of lockheed l-1049g?"
    },
    {
        "answer": "SELECT event FROM table_name_6 WHERE year = 2002 AND competition = \"european indoor championships\"",
        "context": "CREATE TABLE table_name_6 (event VARCHAR, year VARCHAR, competition VARCHAR)",
        "question": "What is the Event, when Year is 2002, and when Competition is European Indoor Championships?"
    },
    {
        "answer": "SELECT year__ceremony_ FROM table_name_24 WHERE result = \"not nominated\" AND film_title_used_in_nomination = \"in the navel of the sea\"",
        "context": "CREATE TABLE table_name_24 (year__ceremony_ VARCHAR, result VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What is the year when not nominated was the result, and In the Navel of the Sea was the film title used in nomination?"
    },
    {
        "answer": "SELECT AVG(round) FROM table_name_46 WHERE opponent = \"michael chavez\"",
        "context": "CREATE TABLE table_name_46 (round INTEGER, opponent VARCHAR)",
        "question": "How many rounds is the fight against Michael Chavez?"
    },
    {
        "answer": "SELECT date FROM table_name_26 WHERE partner = \"pere riba\"",
        "context": "CREATE TABLE table_name_26 (date VARCHAR, partner VARCHAR)",
        "question": "What date was the match where Daniel Gimeno-Traver's partner was pere riba?"
    },
    {
        "answer": "SELECT country FROM table_name_94 WHERE total > 270 AND player = \"sandy lyle\"",
        "context": "CREATE TABLE table_name_94 (country VARCHAR, total VARCHAR, player VARCHAR)",
        "question": "What country has a total greater than 270, with sandy lyle as the player?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_10 WHERE category = \"stacy\" AND awards = \"best reality star in social media\"",
        "context": "CREATE TABLE table_name_10 (year INTEGER, category VARCHAR, awards VARCHAR)",
        "question": "What year has Stacy as the category and award of Best Reality Star in Social Media?"
    },
    {
        "answer": "SELECT result FROM table_name_51 WHERE category = \"stacy\" AND year > 2008 AND awards = \"jahat\"",
        "context": "CREATE TABLE table_name_51 (result VARCHAR, awards VARCHAR, category VARCHAR, year VARCHAR)",
        "question": "What was the result in the year greaters than 2008 with an award of Jahat and had a category of Stacy?"
    },
    {
        "answer": "SELECT date FROM table_name_85 WHERE label = \"total holocaust records\" AND format = \"ed remaster cassette\"",
        "context": "CREATE TABLE table_name_85 (date VARCHAR, label VARCHAR, format VARCHAR)",
        "question": "Which date has Total Holocaust records in the ed Remaster cassette format?"
    },
    {
        "answer": "SELECT date FROM table_name_34 WHERE record = \"1-4\"",
        "context": "CREATE TABLE table_name_34 (date VARCHAR, record VARCHAR)",
        "question": "Which Date has a Record of 1-4?"
    },
    {
        "answer": "SELECT model_number FROM table_name_86 WHERE voltage = \"3.45 v\" AND frequency = \"133 mhz\"",
        "context": "CREATE TABLE table_name_86 (model_number VARCHAR, voltage VARCHAR, frequency VARCHAR)",
        "question": "What is the Model Number, when the Voltage is 3.45 V, and when the Frequency is 133 MHZ?"
    },
    {
        "answer": "SELECT score FROM table_name_30 WHERE home = \"chicago black hawks\" AND visitor = \"vancouver canucks\" AND date = \"november 17\"",
        "context": "CREATE TABLE table_name_30 (score VARCHAR, date VARCHAR, home VARCHAR, visitor VARCHAR)",
        "question": "What is the Score of the Chicago Black Hawks Home game with the Visiting Vancouver Canucks on November 17?"
    },
    {
        "answer": "SELECT attendance FROM table_name_56 WHERE kickoff_time = \"cbs 1:00pm\" AND week < 8 AND date = \"september 15, 2002\"",
        "context": "CREATE TABLE table_name_56 (attendance VARCHAR, date VARCHAR, kickoff_time VARCHAR, week VARCHAR)",
        "question": "How many people attended the game with a kickoff time of cbs 1:00pm, in a week earlier than 8, on September 15, 2002?"
    },
    {
        "answer": "SELECT location FROM table_name_81 WHERE college_or_campus_name = \"anna university - tharamani campus\"",
        "context": "CREATE TABLE table_name_81 (location VARCHAR, college_or_campus_name VARCHAR)",
        "question": "What Location has a College or Campus Name of anna university - tharamani campus?"
    },
    {
        "answer": "SELECT record FROM table_name_22 WHERE location_attendance = \"palace of auburn hills 8,108\"",
        "context": "CREATE TABLE table_name_22 (record VARCHAR, location_attendance VARCHAR)",
        "question": "Which Record has a Location/Attendance of palace of auburn hills 8,108?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_name_23 WHERE high_points = \"douglas (23)\"",
        "context": "CREATE TABLE table_name_23 (high_rebounds VARCHAR, high_points VARCHAR)",
        "question": "Which High rebounds has a High points of douglas (23)?"
    },
    {
        "answer": "SELECT MIN(quantity) FROM table_name_87 WHERE type = \"e h4v\" AND year_s__of_manufacture = \"1920\u20131924\"",
        "context": "CREATE TABLE table_name_87 (quantity INTEGER, type VARCHAR, year_s__of_manufacture VARCHAR)",
        "question": "Which Quantity has a Type of e h4v, and a Year(s) of Manufacture of 1920\u20131924?"
    },
    {
        "answer": "SELECT location FROM table_name_35 WHERE name = \"kap shui mun bridge\"",
        "context": "CREATE TABLE table_name_35 (location VARCHAR, name VARCHAR)",
        "question": "Where is the kap shui mun bridge?"
    },
    {
        "answer": "SELECT co_contestant__yaar_vs_pyaar_ FROM table_name_90 WHERE main_contestant = \"vishal singh\"",
        "context": "CREATE TABLE table_name_90 (co_contestant__yaar_vs_pyaar_ VARCHAR, main_contestant VARCHAR)",
        "question": "Who is the co-contestant (yaar vs. Pyaar) with Vishal Singh as the main contestant?"
    },
    {
        "answer": "SELECT COUNT(south_asians_2011) FROM table_name_19 WHERE province = \"quebec\" AND south_asians_2001 < 59 OFFSET 510",
        "context": "CREATE TABLE table_name_19 (south_asians_2011 VARCHAR, province VARCHAR, south_asians_2001 VARCHAR)",
        "question": "How many South Asians were there in 2011 in Quebec when there were fewer than 59,510 in 2001?"
    },
    {
        "answer": "SELECT main_contestant FROM table_name_29 WHERE total_score_week = \"42/60\" AND co_contestant__yaar_vs_pyaar_ = \"tina sachdev\"",
        "context": "CREATE TABLE table_name_29 (main_contestant VARCHAR, total_score_week VARCHAR, co_contestant__yaar_vs_pyaar_ VARCHAR)",
        "question": "Who is the main contestant with a total score/week of 42/60 and a co-contestant (Yaar vs. Pyaa) of Tina Sachdev?"
    },
    {
        "answer": "SELECT AVG(south_asians_2001) FROM table_name_86 WHERE province = \"alberta\" AND south_asians_2011 > 159 OFFSET 055",
        "context": "CREATE TABLE table_name_86 (south_asians_2001 INTEGER, province VARCHAR, south_asians_2011 VARCHAR)",
        "question": "How many South Asians on average were in Alberta in 2001 and in 2011 had 159,055?"
    },
    {
        "answer": "SELECT MIN(nanquan) FROM table_name_27 WHERE nandao < 9.44 AND rank < 9 AND total > 18.68",
        "context": "CREATE TABLE table_name_27 (nanquan INTEGER, total VARCHAR, nandao VARCHAR, rank VARCHAR)",
        "question": "Which Nanquan has a Nandao smaller than 9.44, and a Rank smaller than 9, and a Total larger than 18.68?"
    },
    {
        "answer": "SELECT name FROM table_name_17 WHERE county = \"blount\" AND location = \"nectar\"",
        "context": "CREATE TABLE table_name_17 (name VARCHAR, county VARCHAR, location VARCHAR)",
        "question": "Which bridge is located in Nectar, in Blount County?"
    },
    {
        "answer": "SELECT result FROM table_name_2 WHERE director = \"said elmarouk\" AND year < 2008",
        "context": "CREATE TABLE table_name_2 (result VARCHAR, director VARCHAR, year VARCHAR)",
        "question": "What is the result for director Said Elmarouk before 2008?"
    },
    {
        "answer": "SELECT manufacturer FROM table_name_89 WHERE laps = 21 AND grid > 16 AND rider = \"akira ry\u014d\"",
        "context": "CREATE TABLE table_name_89 (manufacturer VARCHAR, rider VARCHAR, laps VARCHAR, grid VARCHAR)",
        "question": "Which Manufacturer has a Laps of 21, a Grid larger than 16, and a Rider of akira ry\u014d?"
    },
    {
        "answer": "SELECT AVG(played) FROM table_name_89 WHERE position < 15 AND points_1 = \"19 2\" AND goals_against < 65",
        "context": "CREATE TABLE table_name_89 (played INTEGER, goals_against VARCHAR, position VARCHAR, points_1 VARCHAR)",
        "question": "What is the average played for entries with fewer than 65 goals against, points 1 of 19 2, and a position higher than 15?"
    },
    {
        "answer": "SELECT SUM(first_elected) FROM table_name_37 WHERE party = \"republican\" AND district = \"kentucky 2\"",
        "context": "CREATE TABLE table_name_37 (first_elected INTEGER, party VARCHAR, district VARCHAR)",
        "question": "In what year was the republican incumbent from Kentucky 2 district first elected?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_25 WHERE round < 2 AND nationality = \"united states\"",
        "context": "CREATE TABLE table_name_25 (college_junior_club_team__league_ VARCHAR, round VARCHAR, nationality VARCHAR)",
        "question": "What is the name of the team with round less than 2, and the nationality is the United States?"
    },
    {
        "answer": "SELECT duration FROM table_name_84 WHERE defeated_by = \"retired\"",
        "context": "CREATE TABLE table_name_84 (duration VARCHAR, defeated_by VARCHAR)",
        "question": "Which duration was defeated by retired?"
    },
    {
        "answer": "SELECT name FROM table_name_95 WHERE pos = \"d\" AND club = \"circolo nautico posillipo\"",
        "context": "CREATE TABLE table_name_95 (name VARCHAR, pos VARCHAR, club VARCHAR)",
        "question": "What is the name of the player from club Circolo Nautico Posillipo and a position of D?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_83 WHERE college_junior_club_team__league_ = \"kelowna rockets ( whl )\"",
        "context": "CREATE TABLE table_name_83 (round VARCHAR, college_junior_club_team__league_ VARCHAR)",
        "question": "What is the total number of Round, when College/Junior/Club Team (League) is \"Kelowna Rockets ( WHL )\"?"
    },
    {
        "answer": "SELECT opponent_in_the_final FROM table_name_68 WHERE date = \"february 2, 2004\"",
        "context": "CREATE TABLE table_name_68 (opponent_in_the_final VARCHAR, date VARCHAR)",
        "question": "What is the Opponent in the final of the game on february 2, 2004?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_67 WHERE year > 1983 AND venue = \"anaheim stadium\" AND result = \"14-28\"",
        "context": "CREATE TABLE table_name_67 (attendance VARCHAR, result VARCHAR, year VARCHAR, venue VARCHAR)",
        "question": "What's the total attendance at anaheim stadium after 1983 when the result is 14-28?"
    },
    {
        "answer": "SELECT country FROM table_name_7 WHERE finish = \"t49\"",
        "context": "CREATE TABLE table_name_7 (country VARCHAR, finish VARCHAR)",
        "question": "What country had a finish of t49?"
    },
    {
        "answer": "SELECT elevator FROM table_name_50 WHERE elevated = \"september 21, 1179\"",
        "context": "CREATE TABLE table_name_50 (elevator VARCHAR, elevated VARCHAR)",
        "question": "What is the Elevator of the Elected Elevated on September 21, 1179?"
    },
    {
        "answer": "SELECT elector FROM table_name_91 WHERE cardinalatial_title = \"priest of s. sabina and archbishop of reims\"",
        "context": "CREATE TABLE table_name_91 (elector VARCHAR, cardinalatial_title VARCHAR)",
        "question": "Who is the Elector with a Cardinalatial title of Priest of S. Sabina and Archbishop of Reims?"
    },
    {
        "answer": "SELECT winning_team FROM table_name_75 WHERE fastest_lap = \"brendon hartley\" AND pole_position = \"oliver turvey\" AND circuit = \"spa-francorchamps\" AND winning_driver = \"brendon hartley\"",
        "context": "CREATE TABLE table_name_75 (winning_team VARCHAR, winning_driver VARCHAR, circuit VARCHAR, fastest_lap VARCHAR, pole_position VARCHAR)",
        "question": "Which Winning Team has the Fastest Lap of brendon hartley, and a Pole Position of oliver turvey, and a Circuit of spa-francorchamps, and the Winning Driver of brendon hartley?"
    },
    {
        "answer": "SELECT circuit FROM table_name_93 WHERE winning_team = \"carlin motorsport\" AND winning_driver = \"oliver turvey\" AND date = \"24 march\"",
        "context": "CREATE TABLE table_name_93 (circuit VARCHAR, date VARCHAR, winning_team VARCHAR, winning_driver VARCHAR)",
        "question": "Which Circuit has the Winning Team of carlin motorsport, and the Winning Driver of oliver turvey, and a Date of 24 march?"
    },
    {
        "answer": "SELECT date FROM table_name_65 WHERE city_location = \"vancouver, british columbia\"",
        "context": "CREATE TABLE table_name_65 (date VARCHAR, city_location VARCHAR)",
        "question": "Which Date had a City/Location of vancouver, british columbia?"
    },
    {
        "answer": "SELECT record FROM table_name_46 WHERE game > 7 AND location = \"boston garden\" AND opponent = \"providence steam rollers\"",
        "context": "CREATE TABLE table_name_46 (record VARCHAR, opponent VARCHAR, game VARCHAR, location VARCHAR)",
        "question": "What is the record of the game with a game number greater than 7 at boston garden with the providence steam rollers as the opponent?"
    },
    {
        "answer": "SELECT disposition_of_ship FROM table_name_57 WHERE ship_type = \"brig\" AND location = \"english channel\"",
        "context": "CREATE TABLE table_name_57 (disposition_of_ship VARCHAR, ship_type VARCHAR, location VARCHAR)",
        "question": "For the ship that was a brig and located in the English Channel, what was the disposition of ship?"
    },
    {
        "answer": "SELECT COUNT(place) FROM table_name_84 WHERE name = \"bianka panova\" AND clubs < 10",
        "context": "CREATE TABLE table_name_84 (place VARCHAR, name VARCHAR, clubs VARCHAR)",
        "question": "How many places have bianka panova as the name, with clubs less than 10?"
    },
    {
        "answer": "SELECT date FROM table_name_10 WHERE partnering = \"francesca lubiani\" AND opponent_in_final = \"yuliya beygelzimer / jennifer hopkins\"",
        "context": "CREATE TABLE table_name_10 (date VARCHAR, partnering VARCHAR, opponent_in_final VARCHAR)",
        "question": "What is the Date, when Partnering is \"Francesca Lubiani\", and when Opponent in Final is \"Yuliya Beygelzimer / Jennifer Hopkins\"?"
    },
    {
        "answer": "SELECT score FROM table_name_50 WHERE outcome = \"winner\" AND partnering = \"nicole sewell\" AND opponent_in_final = \"victoria davies / kate warne-holland\"",
        "context": "CREATE TABLE table_name_50 (score VARCHAR, opponent_in_final VARCHAR, outcome VARCHAR, partnering VARCHAR)",
        "question": "What is Score, when Outcome is \"winner\", when Partnering is \"Nicole Sewell\", and when Opponent in Final is \"Victoria Davies / Kate Warne-Holland\"?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_6 WHERE player = \"zach boychuk\"",
        "context": "CREATE TABLE table_name_6 (round VARCHAR, player VARCHAR)",
        "question": "WHAT IS THE ROUND FOR ZACH BOYCHUK?"
    },
    {
        "answer": "SELECT COUNT(engine) FROM table_name_82 WHERE model = \"sl600\" AND year_from = 1994 AND year_to < 1995",
        "context": "CREATE TABLE table_name_82 (engine VARCHAR, year_to VARCHAR, model VARCHAR, year_from VARCHAR)",
        "question": "How many engines have a Model of sl600, and a Year From of 1994, and a Year To smaller than 1995?"
    },
    {
        "answer": "SELECT date FROM table_name_76 WHERE bills_first_downs < 28 AND opponent = \"oakland raiders\"",
        "context": "CREATE TABLE table_name_76 (date VARCHAR, bills_first_downs VARCHAR, opponent VARCHAR)",
        "question": "Which date did the oakland raiders play as the opponent when the Bills first downs were under 28?"
    },
    {
        "answer": "SELECT MAX(matches) FROM table_name_35 WHERE wickets > 13 AND team = \"australia\" AND best_bowling = \"5/36\" AND average < 23.33",
        "context": "CREATE TABLE table_name_35 (matches INTEGER, average VARCHAR, best_bowling VARCHAR, wickets VARCHAR, team VARCHAR)",
        "question": "What is the highest number of matches for Australia when the wickets are more than 13, the average is less than 23.33, and the best bowling is 5/36?"
    },
    {
        "answer": "SELECT north_american_release_date FROM table_name_25 WHERE european_release_date = \"2013-03-20\"",
        "context": "CREATE TABLE table_name_25 (north_american_release_date VARCHAR, european_release_date VARCHAR)",
        "question": "What is the North American release date of the remake with a European release date on 2013-03-20?"
    },
    {
        "answer": "SELECT circuit FROM table_name_20 WHERE winning_constructor = \"bugatti\" AND winning_driver = \"edward bret\"",
        "context": "CREATE TABLE table_name_20 (circuit VARCHAR, winning_constructor VARCHAR, winning_driver VARCHAR)",
        "question": "What Circuit has a Winning constructor of bugatti, and a Winning driver of edward bret?"
    },
    {
        "answer": "SELECT COUNT(draw) FROM table_name_9 WHERE televotes > 1761 AND song = \"ils sont l\u00e0\" AND place < 2",
        "context": "CREATE TABLE table_name_9 (draw VARCHAR, place VARCHAR, televotes VARCHAR, song VARCHAR)",
        "question": "What is the total number of Draw(s), when Televotes is greater than 1761, when Song is \"Ils Sont L\u00e0\", and when Place is less than 2?"
    },
    {
        "answer": "SELECT SUM(1984) FROM table_name_11 WHERE total_points = 100 AND seasons > 3",
        "context": "CREATE TABLE table_name_11 (total_points VARCHAR, seasons VARCHAR)",
        "question": "What is the total for 1984 for the team with 100 points total and more than 3 seasons?"
    },
    {
        "answer": "SELECT weight FROM table_name_70 WHERE club = \"panionios g.c.\" AND date_of_birth = \"1975-05-21\"",
        "context": "CREATE TABLE table_name_70 (weight VARCHAR, club VARCHAR, date_of_birth VARCHAR)",
        "question": "What is the weight of the player from club panionios g.c. and was born on 1975-05-21?"
    },
    {
        "answer": "SELECT AVG(elevation_groundstation) FROM table_name_68 WHERE capacity_in_persons_hour > 820 AND name_or_route = \"lager 1\" AND slope_length < 336",
        "context": "CREATE TABLE table_name_68 (elevation_groundstation INTEGER, slope_length VARCHAR, capacity_in_persons_hour VARCHAR, name_or_route VARCHAR)",
        "question": "Which elevation groundstation has a capacity in persons/hour larger than 820, and a Name or route of lager 1, and a slope length smaller than 336?"
    },
    {
        "answer": "SELECT slope_length FROM table_name_43 WHERE type = \"surface lift\" AND elevation_groundstation < 1974 AND construction_year_s_ = \"1971\" AND name_or_route = \"alpmatten 1\"",
        "context": "CREATE TABLE table_name_43 (slope_length VARCHAR, name_or_route VARCHAR, construction_year_s_ VARCHAR, type VARCHAR, elevation_groundstation VARCHAR)",
        "question": "Which slope length has a type of surface lift, and an elevation groundstation smaller than 1974, and a construction year(s) of 1971, and a Name or route of alpmatten 1?"
    },
    {
        "answer": "SELECT elimination AS Move FROM table_name_35 WHERE eliminated_by = \"batista\" AND wrestler = \"henry\"",
        "context": "CREATE TABLE table_name_35 (elimination VARCHAR, eliminated_by VARCHAR, wrestler VARCHAR)",
        "question": "What Elimination Move is listed against Wrestler Henry, Eliminated by Batista?"
    },
    {
        "answer": "SELECT date FROM table_name_29 WHERE home_team = \"millwall\"",
        "context": "CREATE TABLE table_name_29 (date VARCHAR, home_team VARCHAR)",
        "question": "What date was Millwall the home team?"
    },
    {
        "answer": "SELECT SUM(wins) FROM table_name_40 WHERE top_25 = 3 AND cuts_made < 5",
        "context": "CREATE TABLE table_name_40 (wins INTEGER, top_25 VARCHAR, cuts_made VARCHAR)",
        "question": "How many total wins have 3 as the Top-35 and less than 5 cuts made?"
    },
    {
        "answer": "SELECT AVG(number) FROM table_name_90 WHERE name = \"cooper, c. kenneth\" AND year_end > 1984",
        "context": "CREATE TABLE table_name_90 (number INTEGER, name VARCHAR, year_end VARCHAR)",
        "question": "Which Number has a Name of cooper, c. kenneth, and a Year End larger than 1984?"
    },
    {
        "answer": "SELECT score FROM table_name_70 WHERE date = \"10 jan 1990\" AND away_team = \"exeter city\"",
        "context": "CREATE TABLE table_name_70 (score VARCHAR, date VARCHAR, away_team VARCHAR)",
        "question": "What is the score of the game against away team exeter city on 10 jan 1990?"
    },
    {
        "answer": "SELECT player FROM table_name_68 WHERE place = \"t8\" AND score = 75 - 71 = 146",
        "context": "CREATE TABLE table_name_68 (player VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "Who is the player in t8 place with a 75-71=146 score?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_88 WHERE bronze = \"valentin novikov\"",
        "context": "CREATE TABLE table_name_88 (year INTEGER, bronze VARCHAR)",
        "question": "WHAT YEAR HAS A BRONZE OF VALENTIN NOVIKOV?"
    },
    {
        "answer": "SELECT round FROM table_name_37 WHERE position = \"pf\" AND year = 1996 AND college_high_school_club = \"mississippi state\"",
        "context": "CREATE TABLE table_name_37 (round VARCHAR, college_high_school_club VARCHAR, position VARCHAR, year VARCHAR)",
        "question": "What is the round of the pf position player from 1996 and the college/high school/club mississippi state?"
    },
    {
        "answer": "SELECT COUNT(mintage) FROM table_name_88 WHERE weight = \"12.61 g\" AND theme = \"ruby-throated hummingbird\"",
        "context": "CREATE TABLE table_name_88 (mintage VARCHAR, weight VARCHAR, theme VARCHAR)",
        "question": "What is the Mintage of the 12.61 g Weight Ruby-Throated Hummingbird?"
    },
    {
        "answer": "SELECT score FROM table_name_93 WHERE visitor = \"montreal canadiens\" AND points = 5",
        "context": "CREATE TABLE table_name_93 (score VARCHAR, visitor VARCHAR, points VARCHAR)",
        "question": "Which Score has a Visitor of montreal canadiens, and Points of 5?"
    },
    {
        "answer": "SELECT winning_team FROM table_name_58 WHERE date = \"11 july\"",
        "context": "CREATE TABLE table_name_58 (winning_team VARCHAR, date VARCHAR)",
        "question": "What was the winning team on 11 July?"
    },
    {
        "answer": "SELECT winning_driver FROM table_name_15 WHERE winning_team = \"a.z.k./roc-comp\u00e9tition a.z.k./roc-comp\u00e9tition\" AND date = \"2 june\"",
        "context": "CREATE TABLE table_name_15 (winning_driver VARCHAR, winning_team VARCHAR, date VARCHAR)",
        "question": "Who is the winning driver of the race on 2 June with a.z.k./roc-comp\u00e9tition a.z.k./roc-comp\u00e9tition as the winning team?"
    },
    {
        "answer": "SELECT date FROM table_name_99 WHERE home = \"montreal canadiens\" AND points > 9 AND decision = \"price\"",
        "context": "CREATE TABLE table_name_99 (date VARCHAR, decision VARCHAR, home VARCHAR, points VARCHAR)",
        "question": "Which Date has a Home of montreal canadiens, and Points larger than 9, and a Decision of price?"
    },
    {
        "answer": "SELECT round FROM table_name_7 WHERE winning_team = \"a.z.k./roc-comp\u00e9tition a.z.k./roc-comp\u00e9tition\" AND date = \"30 june\"",
        "context": "CREATE TABLE table_name_7 (round VARCHAR, winning_team VARCHAR, date VARCHAR)",
        "question": "What is the round on 30 June with a.z.k./roc-comp\u00e9tition a.z.k./roc-comp\u00e9tition as the winning team?"
    },
    {
        "answer": "SELECT date FROM table_name_53 WHERE winning_team = \"a.z.k./roc-comp\u00e9tition a.z.k./roc-comp\u00e9tition\" AND circuit = \"zolder\"",
        "context": "CREATE TABLE table_name_53 (date VARCHAR, winning_team VARCHAR, circuit VARCHAR)",
        "question": "What is the date of the zolder circuit, which had a.z.k./roc-comp\u00e9tition a.z.k./roc-comp\u00e9tition as the winning team?"
    },
    {
        "answer": "SELECT result_f___a FROM table_name_8 WHERE opponents = \"rosenborg\"",
        "context": "CREATE TABLE table_name_8 (result_f___a VARCHAR, opponents VARCHAR)",
        "question": "Which Result F-A has Opponents of rosenborg?"
    },
    {
        "answer": "SELECT magnitude FROM table_name_67 WHERE epicenter = \"vrancea county\" AND intensity = \"unknown\" AND time__utc_ = \"06:36\"",
        "context": "CREATE TABLE table_name_67 (magnitude VARCHAR, time__utc_ VARCHAR, epicenter VARCHAR, intensity VARCHAR)",
        "question": "What is the magnitude with epicenter at Vrancea County, unknown intensity and which happened at 06:36?"
    },
    {
        "answer": "SELECT category FROM table_name_86 WHERE nominated_for = \"tween academy: class of 2012\"",
        "context": "CREATE TABLE table_name_86 (category VARCHAR, nominated_for VARCHAR)",
        "question": "What's the category for the tween academy: class of 2012 nomination?"
    },
    {
        "answer": "SELECT record FROM table_name_77 WHERE home = \"pittsburgh\" AND points = 35",
        "context": "CREATE TABLE table_name_77 (record VARCHAR, home VARCHAR, points VARCHAR)",
        "question": "What is the record of the game with 35 points and pittsburgh as the home team?"
    },
    {
        "answer": "SELECT incumbent FROM table_name_18 WHERE party = \"democratic\" AND first_elected = 1998",
        "context": "CREATE TABLE table_name_18 (incumbent VARCHAR, party VARCHAR, first_elected VARCHAR)",
        "question": "Which Democratic incumbent was first elected in 1998?"
    },
    {
        "answer": "SELECT district FROM table_name_62 WHERE party = \"democratic\" AND first_elected < 1996",
        "context": "CREATE TABLE table_name_62 (district VARCHAR, party VARCHAR, first_elected VARCHAR)",
        "question": "Which district has a Democratic incumbent that was first elected before 1996?"
    },
    {
        "answer": "SELECT home_team FROM table_name_92 WHERE visiting_team = \"san francisco 49ers\" AND result = \"42-14\"",
        "context": "CREATE TABLE table_name_92 (home_team VARCHAR, visiting_team VARCHAR, result VARCHAR)",
        "question": "Who is the home team when the san francisco 49ers are visiting with a result of 42-14?"
    },
    {
        "answer": "SELECT place FROM table_name_84 WHERE country = \"united states\" AND player = \"raymond floyd\"",
        "context": "CREATE TABLE table_name_84 (place VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "What did United States place when the player was Raymond Floyd?"
    },
    {
        "answer": "SELECT home_team FROM table_name_97 WHERE away_team = \"southampton\"",
        "context": "CREATE TABLE table_name_97 (home_team VARCHAR, away_team VARCHAR)",
        "question": "In the tie where Southampton was the away team, who was the home team?"
    },
    {
        "answer": "SELECT results FROM table_name_23 WHERE year = 2000",
        "context": "CREATE TABLE table_name_23 (results VARCHAR, year VARCHAR)",
        "question": "What was the result in 2000?"
    },
    {
        "answer": "SELECT city FROM table_name_89 WHERE year_opened = \"1996\" AND state = \"alabama\"",
        "context": "CREATE TABLE table_name_89 (city VARCHAR, year_opened VARCHAR, state VARCHAR)",
        "question": "What is the city in Alabama that opened in 1996?"
    },
    {
        "answer": "SELECT year_opened FROM table_name_50 WHERE state = \"north carolina\" AND capacity < 21 OFFSET 500",
        "context": "CREATE TABLE table_name_50 (year_opened VARCHAR, state VARCHAR, capacity VARCHAR)",
        "question": "What was the year opened for North Carolina with a smaller than 21,500 capacity?"
    },
    {
        "answer": "SELECT res FROM table_name_6 WHERE method = \"decision (unanimous)\" AND opponent = \"marcus aur\u00e9lio\"",
        "context": "CREATE TABLE table_name_6 (res VARCHAR, method VARCHAR, opponent VARCHAR)",
        "question": "In the match against Marcus Aur\u00e9lio with a method of decision (unanimous), what was the results?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_name_52 WHERE team = \"chicago\"",
        "context": "CREATE TABLE table_name_52 (high_rebounds VARCHAR, team VARCHAR)",
        "question": "Who had the most rebounds in the game against Chicago?"
    },
    {
        "answer": "SELECT tie_no FROM table_name_31 WHERE home_team = \"dartford\"",
        "context": "CREATE TABLE table_name_31 (tie_no VARCHAR, home_team VARCHAR)",
        "question": "What is the Tie number for the match where Dartford was the hone team?"
    },
    {
        "answer": "SELECT player FROM table_name_56 WHERE class = \"senior\" AND position = \"shooting guard\" AND school = \"bradley\"",
        "context": "CREATE TABLE table_name_56 (player VARCHAR, school VARCHAR, class VARCHAR, position VARCHAR)",
        "question": "What is Player, when Class is \"senior\", when Position is \"shooting guard\", and when School is \"Bradley\"?"
    },
    {
        "answer": "SELECT record FROM table_name_53 WHERE arena = \"arrowhead pond of anaheim\" AND loss = \"bryzgalov (10\u201311\u20131)\"",
        "context": "CREATE TABLE table_name_53 (record VARCHAR, arena VARCHAR, loss VARCHAR)",
        "question": "What is the record at Arrowhead Pond of Anaheim, when the loss was Bryzgalov (10\u201311\u20131)?"
    },
    {
        "answer": "SELECT fin_time FROM table_name_10 WHERE finish = \"2/1q\" AND track = \"the meadowlands\"",
        "context": "CREATE TABLE table_name_10 (fin_time VARCHAR, finish VARCHAR, track VARCHAR)",
        "question": "What is the finishing time with a 2/1q finish on the Meadowlands track?"
    },
    {
        "answer": "SELECT surface FROM table_name_30 WHERE outcome = \"runner-up\" AND score = \"6\u20134, 6\u20133\"",
        "context": "CREATE TABLE table_name_30 (surface VARCHAR, outcome VARCHAR, score VARCHAR)",
        "question": "On what Surface was the match with a Score of 6\u20134, 6\u20133 and Runner-up Outcome played?"
    },
    {
        "answer": "SELECT team FROM table_name_22 WHERE location_attendance = \"seattle center coliseum 12,591\"",
        "context": "CREATE TABLE table_name_22 (team VARCHAR, location_attendance VARCHAR)",
        "question": "What team has a location and attendance at the Seattle Center Coliseum 12,591?"
    },
    {
        "answer": "SELECT COUNT(goals_conceded) FROM table_name_75 WHERE points = 32 AND lost > 2 AND goals_scored > 22",
        "context": "CREATE TABLE table_name_75 (goals_conceded VARCHAR, goals_scored VARCHAR, points VARCHAR, lost VARCHAR)",
        "question": "How many goals were conceded by teams with 32 points, more than 2 losses and more than 22 goals scored?"
    },
    {
        "answer": "SELECT muzzle_velocity FROM table_name_60 WHERE muzzle_energy = \"351ft\u2022lbf (476 j)\"",
        "context": "CREATE TABLE table_name_60 (muzzle_velocity VARCHAR, muzzle_energy VARCHAR)",
        "question": "What is the muzzle velocity for the muzzle energy 351ft\u2022lbf (476 j)?"
    },
    {
        "answer": "SELECT COUNT(stroke_count) FROM table_name_57 WHERE radical__variants_ = \"\u751f\" AND frequency < 22",
        "context": "CREATE TABLE table_name_57 (stroke_count VARCHAR, radical__variants_ VARCHAR, frequency VARCHAR)",
        "question": "WHAT IS THE STROKE COUNT WITH RADICAL OF \u751f, FRQUENCY SMALLER THAN 22?"
    },
    {
        "answer": "SELECT MAX(enrollment) FROM table_name_66 WHERE school = \"rochester community\"",
        "context": "CREATE TABLE table_name_66 (enrollment INTEGER, school VARCHAR)",
        "question": "What is the highest enrollment for rochester community school?"
    },
    {
        "answer": "SELECT theme_song_s_ FROM table_name_64 WHERE romaji_title = \"yukan club\"",
        "context": "CREATE TABLE table_name_64 (theme_song_s_ VARCHAR, romaji_title VARCHAR)",
        "question": "What is the Theme Song of the Yukan Club?"
    },
    {
        "answer": "SELECT wins FROM table_name_19 WHERE starts > 1 AND top_5 = 3",
        "context": "CREATE TABLE table_name_19 (wins VARCHAR, starts VARCHAR, top_5 VARCHAR)",
        "question": "Can you tell me the Wins that has the Starts larger than 1, and the Top 5 of 3?"
    },
    {
        "answer": "SELECT MAX(podiums) FROM table_name_60 WHERE stage_wins = 91 AND points < 140",
        "context": "CREATE TABLE table_name_60 (podiums INTEGER, stage_wins VARCHAR, points VARCHAR)",
        "question": "what is the highest podiums when the stage wins is 91 and the points is less than 140?"
    },
    {
        "answer": "SELECT MAX(money___) AS $__ FROM table_name_35 WHERE to_par = \"e\" AND player = \"ernie els\"",
        "context": "CREATE TABLE table_name_35 (money___ INTEGER, to_par VARCHAR, player VARCHAR)",
        "question": "What is the highest Money ($), when Top Par is E, and when Player is Ernie Els?"
    },
    {
        "answer": "SELECT reserved_for___sc___st__none_ FROM table_name_31 WHERE name = \"beohari\"",
        "context": "CREATE TABLE table_name_31 (reserved_for___sc___st__none_ VARCHAR, name VARCHAR)",
        "question": "What is Beohari's reserved for (SC/ST/None)?"
    },
    {
        "answer": "SELECT round FROM table_name_52 WHERE against = 1 AND date = \"29 january 1949\"",
        "context": "CREATE TABLE table_name_52 (round VARCHAR, against VARCHAR, date VARCHAR)",
        "question": "What was the round for 29 January 1949, when the against was 1?"
    },
    {
        "answer": "SELECT COUNT(prominence__m_) FROM table_name_27 WHERE country = \"ethiopia\" AND col__m_ = 1728 AND elevation__m_ < 3 OFFSET 358",
        "context": "CREATE TABLE table_name_27 (prominence__m_ VARCHAR, elevation__m_ VARCHAR, country VARCHAR, col__m_ VARCHAR)",
        "question": "What is the total prominence number in m of ethiopia, which has a col in m of 1728 and an elevation less than 3,358?"
    },
    {
        "answer": "SELECT COUNT(*) FROM table_name_9 WHERE 2006 = 27.4 AND 2007 > 27.7",
        "context": "",
        "question": "How many 2011 1H values have a 2006 of 27.4 and 2007 over 27.7?"
    },
    {
        "answer": "SELECT result FROM table_name_14 WHERE opponent_number = \"at michigan state\"",
        "context": "CREATE TABLE table_name_14 (result VARCHAR, opponent_number VARCHAR)",
        "question": "What was the result when they played at Michigan State?"
    },
    {
        "answer": "SELECT MAX(big__) > 500 AS ha_ FROM table_name_12 WHERE micro__10ha_ > 940 AND department = \"potos\u00ed\" AND total < 16 OFFSET 240",
        "context": "CREATE TABLE table_name_12 (big__ INTEGER, total VARCHAR, micro__10ha_ VARCHAR, department VARCHAR)",
        "question": "Which Big (>500ha) has a Micro (10ha) larger than 940, and a Department of potos\u00ed, and a Total smaller than 16,240?"
    },
    {
        "answer": "SELECT score FROM table_name_93 WHERE time = \"14:30\" AND venue = \"happy valley recreation ground pitch #2\"",
        "context": "CREATE TABLE table_name_93 (score VARCHAR, time VARCHAR, venue VARCHAR)",
        "question": "What is the score of the match at happy valley recreation ground pitch #2 with a 14:30 time?"
    },
    {
        "answer": "SELECT venue FROM table_name_67 WHERE time = \"14:30\" AND away_team = \"sun source\"",
        "context": "CREATE TABLE table_name_67 (venue VARCHAR, time VARCHAR, away_team VARCHAR)",
        "question": "What is the venue of the match with a 14:30 time and sun source as the away team?"
    },
    {
        "answer": "SELECT name FROM table_name_53 WHERE country = \"west indies\"",
        "context": "CREATE TABLE table_name_53 (name VARCHAR, country VARCHAR)",
        "question": "What is the name of the person whose country is West Indies."
    },
    {
        "answer": "SELECT winner FROM table_name_81 WHERE year > 2011",
        "context": "CREATE TABLE table_name_81 (winner VARCHAR, year INTEGER)",
        "question": "Who was the winner after 2011?"
    },
    {
        "answer": "SELECT record FROM table_name_43 WHERE round = 1 AND method = \"submission (rear-naked choke)\"",
        "context": "CREATE TABLE table_name_43 (record VARCHAR, round VARCHAR, method VARCHAR)",
        "question": "The match that went 1 round, and had a method of submission (rear-naked choke) had what record?"
    },
    {
        "answer": "SELECT AVG(money___) AS $__ FROM table_name_23 WHERE country = \"united states\" AND place = \"t6\"",
        "context": "CREATE TABLE table_name_23 (money___ INTEGER, country VARCHAR, place VARCHAR)",
        "question": "Which money has a Country of united states, and a Place of t6?"
    },
    {
        "answer": "SELECT COUNT(poverty__2009__hpi_1__percentage) FROM table_name_69 WHERE gdp__ppp___2012__us$_per_capita = \"11,284\"",
        "context": "CREATE TABLE table_name_69 (poverty__2009__hpi_1__percentage VARCHAR, gdp__ppp___2012__us$_per_capita VARCHAR)",
        "question": "What is the sum of poverty (2009) HPI-1 % when the GDP (PPP) (2012) US$ per capita of 11,284?"
    },
    {
        "answer": "SELECT tournament FROM table_name_31 WHERE 2008 = \"a\" AND 2005 = \"q1\" AND 2004 = \"1r\"",
        "context": "CREATE TABLE table_name_31 (tournament VARCHAR)",
        "question": "What tournament has a 2008 value of A, q1 in 2005, and 1r in 2004?"
    },
    {
        "answer": "SELECT MIN(fastest_laps) FROM table_name_74 WHERE race_entries__starts_ = \"32 (30)\" AND podiums < 2",
        "context": "CREATE TABLE table_name_74 (fastest_laps INTEGER, race_entries__starts_ VARCHAR, podiums VARCHAR)",
        "question": "How many fastest laps for the nation with 32 (30) entries and starts and fewer than 2 podiums?"
    },
    {
        "answer": "SELECT player FROM table_name_51 WHERE country = \"united states\" AND place = \"t6\"",
        "context": "CREATE TABLE table_name_51 (player VARCHAR, country VARCHAR, place VARCHAR)",
        "question": "Which player from United States is in place of t6?"
    },
    {
        "answer": "SELECT MIN(week) FROM table_name_31 WHERE opponent = \"new orleans saints\"",
        "context": "CREATE TABLE table_name_31 (week INTEGER, opponent VARCHAR)",
        "question": "What was the earliest week when the New Orleans Saints were the opponents?"
    },
    {
        "answer": "SELECT school_club_team FROM table_name_70 WHERE nationality = \"united states\" AND position = \"guard\" AND years_for_grizzlies = \"2012\"",
        "context": "CREATE TABLE table_name_70 (school_club_team VARCHAR, years_for_grizzlies VARCHAR, nationality VARCHAR, position VARCHAR)",
        "question": "What team is from the United States and plays a guard position for the Grizzlies in 2012?"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_59 WHERE gold > 0 AND rank = \"4\" AND total > 4",
        "context": "CREATE TABLE table_name_59 (bronze VARCHAR, total VARCHAR, gold VARCHAR, rank VARCHAR)",
        "question": "What is the total number of Bronze, when Gold is greater than 0, when Rank is 4, and when Total is greater than 4?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_68 WHERE school_club_team = \"arizona\" AND pick < 298",
        "context": "CREATE TABLE table_name_68 (round INTEGER, school_club_team VARCHAR, pick VARCHAR)",
        "question": "Which Round has a School/Club Team of arizona, and a Pick smaller than 298?"
    },
    {
        "answer": "SELECT status FROM table_name_18 WHERE total_votes = \"0\" AND couples_team = \"purple team\"",
        "context": "CREATE TABLE table_name_18 (status VARCHAR, total_votes VARCHAR, couples_team VARCHAR)",
        "question": "Who had 0 total votes in the purple team?"
    },
    {
        "answer": "SELECT date FROM table_name_73 WHERE opponent = \"john mcenroe\" AND score = \"3\u20136, 6\u20133, 2\u20136\"",
        "context": "CREATE TABLE table_name_73 (date VARCHAR, opponent VARCHAR, score VARCHAR)",
        "question": "What is the date of the match against John McEnroe with a Score of 3\u20136, 6\u20133, 2\u20136?"
    },
    {
        "answer": "SELECT country FROM table_name_77 WHERE medal = \"silver\" AND event = \"boxing, heavyweight\"",
        "context": "CREATE TABLE table_name_77 (country VARCHAR, medal VARCHAR, event VARCHAR)",
        "question": "What country has a silver medal in the boxing, heavyweight event?"
    },
    {
        "answer": "SELECT SUM(earnings_per_share__p_) FROM table_name_89 WHERE year_ended = \"2008\" AND revenue__\u00a3million_ < 4 OFFSET 177",
        "context": "CREATE TABLE table_name_89 (earnings_per_share__p_ INTEGER, year_ended VARCHAR, revenue__\u00a3million_ VARCHAR)",
        "question": "When revenue is smaller than 4,177 million in year 2008, what is the sum of earnings per share?"
    },
    {
        "answer": "SELECT SUM(net_profit__) AS \u00a3m_ FROM table_name_75 WHERE earnings_per_share__p_ = 27.4 AND profit__loss__before_tax__\u00a3m_ < 194.6",
        "context": "CREATE TABLE table_name_75 (net_profit__ INTEGER, earnings_per_share__p_ VARCHAR, profit__loss__before_tax__\u00a3m_ VARCHAR)",
        "question": "What is the total net profit when earnings per share is 27.4, and profit/loss befor tax was smaller than 194.6 million?"
    },
    {
        "answer": "SELECT country FROM table_name_16 WHERE olympics = \"2008 summer olympics\" AND name = \"vadim devyatovskiy\"",
        "context": "CREATE TABLE table_name_16 (country VARCHAR, olympics VARCHAR, name VARCHAR)",
        "question": "Which country in the 2008 summer olympics is vadim devyatovskiy from?"
    },
    {
        "answer": "SELECT AVG(december) FROM table_name_84 WHERE record = \"16-3-4\" AND game < 23",
        "context": "CREATE TABLE table_name_84 (december INTEGER, record VARCHAR, game VARCHAR)",
        "question": "What is the average day in December with a Record of 16-3-4 and a Game smaller than 23?"
    },
    {
        "answer": "SELECT play FROM table_name_11 WHERE company = \"national theatre of greece\"",
        "context": "CREATE TABLE table_name_11 (play VARCHAR, company VARCHAR)",
        "question": "what is the play when the company is national theatre of greece?"
    },
    {
        "answer": "SELECT company FROM table_name_28 WHERE country = \"greece\" AND author = \"aeschylus\"",
        "context": "CREATE TABLE table_name_28 (company VARCHAR, country VARCHAR, author VARCHAR)",
        "question": "what is the company when the country is greece and the author is aeschylus?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_94 WHERE country = \"denmark\"",
        "context": "CREATE TABLE table_name_94 (rank INTEGER, country VARCHAR)",
        "question": "What was the highest rank for rowers who represented Denmark?"
    },
    {
        "answer": "SELECT purpose FROM table_name_43 WHERE freq_currently = \"4rph\"",
        "context": "CREATE TABLE table_name_43 (purpose VARCHAR, freq_currently VARCHAR)",
        "question": "What is the Purpose of the Callsign with a Freq currently of 4rph?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_74 WHERE arena = \"arrowhead pond of anaheim\" AND loss = \"giguere (3\u20133)\"",
        "context": "CREATE TABLE table_name_74 (attendance INTEGER, arena VARCHAR, loss VARCHAR)",
        "question": "Which Attendance has an Arena of arrowhead pond of anaheim, and a Loss of giguere (3\u20133)?"
    },
    {
        "answer": "SELECT paris___fra__ FROM table_name_67 WHERE \"press\" = \"press\" AND roger_fran\u00e7ois = \"carlo galimberti\"",
        "context": "CREATE TABLE table_name_67 (paris___fra__ VARCHAR, roger_fran\u00e7ois VARCHAR)",
        "question": "What was the press like in Paris for Roger Francois, and Carlo Galimberti?"
    },
    {
        "answer": "SELECT player FROM table_name_33 WHERE cfl_team = \"hamilton\"",
        "context": "CREATE TABLE table_name_33 (player VARCHAR, cfl_team VARCHAR)",
        "question": "which player played on Team Hamilton?"
    },
    {
        "answer": "SELECT duration FROM table_name_83 WHERE start_date_time = \"8 july 12:38\"",
        "context": "CREATE TABLE table_name_83 (duration VARCHAR, start_date_time VARCHAR)",
        "question": "The EVA that started on 8 July 12:38 went for how long?"
    },
    {
        "answer": "SELECT spacecraft FROM table_name_96 WHERE start_date_time = \"8 july 12:38\"",
        "context": "CREATE TABLE table_name_96 (spacecraft VARCHAR, start_date_time VARCHAR)",
        "question": "The EVA that started 8 July 12:38 was from what spacecraft?"
    },
    {
        "answer": "SELECT assists FROM table_name_90 WHERE competition = \"k-league\" AND total_gs > 20 AND team = \"pohang steelers\" AND opponent = \"chunnam dragons\"",
        "context": "CREATE TABLE table_name_90 (assists VARCHAR, opponent VARCHAR, team VARCHAR, competition VARCHAR, total_gs VARCHAR)",
        "question": "How many assists were in the k-league competition, which has more than 20 total Gs, the pohang steelers team, and chunnam dragons as the opponent?"
    },
    {
        "answer": "SELECT AVG(goals) FROM table_name_65 WHERE competition = \"k-league\" AND team = \"pohang steelers\" AND name = \"park sung-ho\" AND total_gs < 46",
        "context": "CREATE TABLE table_name_65 (goals INTEGER, total_gs VARCHAR, name VARCHAR, competition VARCHAR, team VARCHAR)",
        "question": "What is the average number of goals of park sung-ho at the k-league competition, which has the pohang steelers team and less than 46 total Gs?"
    },
    {
        "answer": "SELECT home_team FROM table_name_86 WHERE away_team = \"manchester united\"",
        "context": "CREATE TABLE table_name_86 (home_team VARCHAR, away_team VARCHAR)",
        "question": "Who was the home team that played against Manchester United?"
    },
    {
        "answer": "SELECT date FROM table_name_93 WHERE venue = \"jeonju\" AND goals < 28 AND competition = \"k-league cup\"",
        "context": "CREATE TABLE table_name_93 (date VARCHAR, competition VARCHAR, venue VARCHAR, goals VARCHAR)",
        "question": "What is the date of the k-league cup, which has less than 28 goals, at the jeonju venue?"
    },
    {
        "answer": "SELECT MAX(total_goals) FROM table_name_98 WHERE fa_cup_goals = 0 AND league_apps = \"41\"",
        "context": "CREATE TABLE table_name_98 (total_goals INTEGER, fa_cup_goals VARCHAR, league_apps VARCHAR)",
        "question": "What is the most total goals for a player having 0 FA Cup goals and 41 League appearances?"
    },
    {
        "answer": "SELECT 2004 FROM table_name_32 WHERE 2005 = \"a\" AND 2009 = \"q1\"",
        "context": "CREATE TABLE table_name_32 (Id VARCHAR)",
        "question": "What is the result for 2004 when A is the result for 2005, and the result of q1 when 2009?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_58 WHERE gold = 0 AND total > 1 AND silver > 0",
        "context": "CREATE TABLE table_name_58 (rank INTEGER, silver VARCHAR, gold VARCHAR, total VARCHAR)",
        "question": "What is the rank when there is 0 gold, the total is more than 1, and silver is more than 0?"
    },
    {
        "answer": "SELECT SUM(round) FROM table_name_92 WHERE position = \"ol\" AND player = \"richard zulys\"",
        "context": "CREATE TABLE table_name_92 (round INTEGER, position VARCHAR, player VARCHAR)",
        "question": "In what Round was OL Player Richard Zulys picked?"
    },
    {
        "answer": "SELECT gold FROM table_name_2 WHERE event = \"time trial details\" AND silver = \"simon richardson great britain (gbr)\"",
        "context": "CREATE TABLE table_name_2 (gold VARCHAR, event VARCHAR, silver VARCHAR)",
        "question": "Who received gold when the event is time trial details and silver is simon richardson great britain (gbr)?"
    },
    {
        "answer": "SELECT event FROM table_name_1 WHERE gold = \"darren kenny great britain (gbr)\"",
        "context": "CREATE TABLE table_name_1 (event VARCHAR, gold VARCHAR)",
        "question": "what is the event when gold is darren kenny great britain (gbr)?"
    },
    {
        "answer": "SELECT director FROM table_name_77 WHERE title = \"bunker hill bunny\"",
        "context": "CREATE TABLE table_name_77 (director VARCHAR, title VARCHAR)",
        "question": "Who directed Bunker Hill Bunny?"
    },
    {
        "answer": "SELECT AVG(ast_avg) FROM table_name_74 WHERE games > 101 AND rank = 5 AND total_assists < 331",
        "context": "CREATE TABLE table_name_74 (ast_avg INTEGER, total_assists VARCHAR, games VARCHAR, rank VARCHAR)",
        "question": "WHAT IS THE AVG AST FOR GAMES LARGER THAN 101, RANK 5, TOTAL ASSISTS SMALLER THAN 331?"
    },
    {
        "answer": "SELECT COUNT(round) FROM table_name_64 WHERE college = \"appalachian state\" AND overall < 156",
        "context": "CREATE TABLE table_name_64 (round VARCHAR, college VARCHAR, overall VARCHAR)",
        "question": "Which Round has a College of appalachian state, and an Overall smaller than 156?"
    },
    {
        "answer": "SELECT AVG(pick) FROM table_name_3 WHERE player = \"jim h. mitchell\"",
        "context": "CREATE TABLE table_name_3 (pick INTEGER, player VARCHAR)",
        "question": "What is the average pick of player jim h. mitchell?"
    },
    {
        "answer": "SELECT SUM(gold) FROM table_name_89 WHERE bronze > 15 AND silver < 197 AND nation = \"saint lucia\" AND total > 50",
        "context": "CREATE TABLE table_name_89 (gold INTEGER, total VARCHAR, nation VARCHAR, bronze VARCHAR, silver VARCHAR)",
        "question": "What's the sum of Gold with a Bronze that's larger than 15, Silver that's smaller than 197, the Nation of Saint Lucia, and has a Total that is larger than 50?"
    },
    {
        "answer": "SELECT COUNT(silver) FROM table_name_96 WHERE gold > 0 AND bronze < 23 AND total > 22 AND nation = \"saint kitts and nevis\"",
        "context": "CREATE TABLE table_name_96 (silver VARCHAR, nation VARCHAR, total VARCHAR, gold VARCHAR, bronze VARCHAR)",
        "question": "What's the total number of Silver that has Gold that's larger than 0, Bronze that's smaller than 23, a Total that's larger than 22, and has the Nation of Saint Kitts and Nevis?"
    },
    {
        "answer": "SELECT COUNT(rank) FROM table_name_59 WHERE gross = \"$96,773,200\"",
        "context": "CREATE TABLE table_name_59 (rank VARCHAR, gross VARCHAR)",
        "question": "WHAT IS THE RANK WITH A GROSS OF $96,773,200?"
    },
    {
        "answer": "SELECT points_1 FROM table_name_75 WHERE position > 4 AND goals_for = 54 AND lost > 11",
        "context": "CREATE TABLE table_name_75 (points_1 VARCHAR, lost VARCHAR, position VARCHAR, goals_for VARCHAR)",
        "question": "What is listed under points 1 when the position was greater than 4, there were 54 goals for and more than 11 losses?"
    },
    {
        "answer": "SELECT COUNT(year_named) FROM table_name_68 WHERE name = \"ur sulcus\" AND diameter < 1 OFFSET 145.0",
        "context": "CREATE TABLE table_name_68 (year_named VARCHAR, name VARCHAR, diameter VARCHAR)",
        "question": "How many years is ur sulcus listed with a diameter less than 1,145.0?"
    },
    {
        "answer": "SELECT attendance FROM table_name_29 WHERE date = \"16 august 2008\" AND away = \"platense\"",
        "context": "CREATE TABLE table_name_29 (attendance VARCHAR, date VARCHAR, away VARCHAR)",
        "question": "When Platense was the away team on 16 August 2008 how many people attended the game?"
    },
    {
        "answer": "SELECT MIN(2009) FROM table_name_81 WHERE 2005 < 640 AND 2011 = 425 AND 2003 < 500",
        "context": "CREATE TABLE table_name_81 (Id VARCHAR)",
        "question": "What is the least 2009 that has 2005 littler than 640, and 2011 of 425, and 2003 littler than 500?"
    },
    {
        "answer": "SELECT firefox FROM table_name_56 WHERE internet_explorer = \"22.0%\"",
        "context": "CREATE TABLE table_name_56 (firefox VARCHAR, internet_explorer VARCHAR)",
        "question": "What is the firefox value with a 22.0% internet explorer?"
    },
    {
        "answer": "SELECT third_place FROM table_name_59 WHERE winning_mentor = \"guy sebastian\" AND runner_up = \"andrew wishart\"",
        "context": "CREATE TABLE table_name_59 (third_place VARCHAR, winning_mentor VARCHAR, runner_up VARCHAR)",
        "question": "Who was in third place when Guy Sebastian was the winning mentor and Andrew Wishart was the runner-up?"
    },
    {
        "answer": "SELECT SUM(election) FROM table_name_64 WHERE mayor = \"adalberto mosaner\" AND inhabitants < 16 OFFSET 170",
        "context": "CREATE TABLE table_name_64 (election INTEGER, mayor VARCHAR, inhabitants VARCHAR)",
        "question": "In what Election year was Adalberto Mosaner the Mayor with less than 16,170 Inhabitants?"
    },
    {
        "answer": "SELECT mayor FROM table_name_37 WHERE election = 2010 AND municipality = \"riva del garda\"",
        "context": "CREATE TABLE table_name_37 (mayor VARCHAR, election VARCHAR, municipality VARCHAR)",
        "question": "What is the Mayor of Riva del Garda in 2010?"
    },
    {
        "answer": "SELECT MIN(weight_class__kg_) FROM table_name_73 WHERE venue = \"sofia, bulgaria\"",
        "context": "CREATE TABLE table_name_73 (weight_class__kg_ INTEGER, venue VARCHAR)",
        "question": "What is the lowest weight class (kg) that has sofia, bulgaria as the venue?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_37 WHERE event = \"fila world championships\" AND venue = \"toledo, united states\" AND weight_class__kg_ < 97",
        "context": "CREATE TABLE table_name_37 (year INTEGER, weight_class__kg_ VARCHAR, event VARCHAR, venue VARCHAR)",
        "question": "What is the highest year that has fila world championships as the event, with toledo, united states as the venue, and a weight class (kg) less than 97?"
    },
    {
        "answer": "SELECT airport FROM table_name_10 WHERE icao = \"ksea\"",
        "context": "CREATE TABLE table_name_10 (airport VARCHAR, icao VARCHAR)",
        "question": "What is the Airport with the ICAO fo KSEA?"
    },
    {
        "answer": "SELECT MIN(enrollment) FROM table_name_19 WHERE founded = \"1992\" AND joined_conference < 1998",
        "context": "CREATE TABLE table_name_19 (enrollment INTEGER, founded VARCHAR, joined_conference VARCHAR)",
        "question": "What is the lowest enrolled school that was founded in 1992 and joined a conference before 1998?"
    },
    {
        "answer": "SELECT AVG(inhabitants) FROM table_name_7 WHERE party = \"union for trentino\" AND election > 2009",
        "context": "CREATE TABLE table_name_7 (inhabitants INTEGER, party VARCHAR, election VARCHAR)",
        "question": "How many Inhabitants were there after 2009 in the Municipality with a Party of union for trentino?"
    },
    {
        "answer": "SELECT airport FROM table_name_56 WHERE iata = \"sea\"",
        "context": "CREATE TABLE table_name_56 (airport VARCHAR, iata VARCHAR)",
        "question": "What Airport's IATA is SEA?"
    },
    {
        "answer": "SELECT COUNT(height__m_) FROM table_name_11 WHERE mountain = \"jbel ghat\"",
        "context": "CREATE TABLE table_name_11 (height__m_ VARCHAR, mountain VARCHAR)",
        "question": "How tall is the Mountain of jbel ghat?"
    },
    {
        "answer": "SELECT country FROM table_name_12 WHERE prominence__m_ < 1540 AND height__m_ < 3530 AND range = \"virunga mountains\" AND mountain = \"nyiragongo\"",
        "context": "CREATE TABLE table_name_12 (country VARCHAR, mountain VARCHAR, range VARCHAR, prominence__m_ VARCHAR, height__m_ VARCHAR)",
        "question": "Which Country has a Prominence (m) smaller than 1540, and a Height (m) smaller than 3530, and a Range of virunga mountains, and a Mountain of nyiragongo?"
    },
    {
        "answer": "SELECT MAX(total_votes) FROM table_name_7 WHERE outcome = \"elected\" AND candidate = \"lee teng-hui\"",
        "context": "CREATE TABLE table_name_7 (total_votes INTEGER, outcome VARCHAR, candidate VARCHAR)",
        "question": "How many votes did Lee Teng-Hui receive when he was elected?"
    },
    {
        "answer": "SELECT result FROM table_name_63 WHERE lineup = \"start\" AND assist_pass = \"carli lloyd\" AND competition = \"2011 fifa women\u2019s world cup \u2013 group stage\"",
        "context": "CREATE TABLE table_name_63 (result VARCHAR, competition VARCHAR, lineup VARCHAR, assist_pass VARCHAR)",
        "question": "Name the Result of the Lineup of start, an Assist/pass of carli lloyd, and an Competition of 2011 fifa women\u2019s world cup \u2013 group stage?"
    },
    {
        "answer": "SELECT lineup FROM table_name_43 WHERE assist_pass = \"carli lloyd\" AND competition = \"2010 concacaf world cup qualifying \u2013 group stage\"",
        "context": "CREATE TABLE table_name_43 (lineup VARCHAR, assist_pass VARCHAR, competition VARCHAR)",
        "question": "Name the Lineup that has an Assist/pass of carli lloyd,a Competition of 2010 concacaf world cup qualifying \u2013 group stage?"
    },
    {
        "answer": "SELECT assist_pass FROM table_name_14 WHERE score = \"1-0\" AND competition = \"2010 concacaf world cup qualifying \u2013 group stage\"",
        "context": "CREATE TABLE table_name_14 (assist_pass VARCHAR, score VARCHAR, competition VARCHAR)",
        "question": "Which Assist/pass has a Score of 1-0,a Competition of 2010 concacaf world cup qualifying \u2013 group stage?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_39 WHERE equipment = \"zabel-bsu\" AND position = 42",
        "context": "CREATE TABLE table_name_39 (points INTEGER, equipment VARCHAR, position VARCHAR)",
        "question": "What is the sum of Points, when Equipment was \"Zabel-BSU\", and when Position was 42?"
    },
    {
        "answer": "SELECT score FROM table_name_87 WHERE home_team = \"shrewsbury town\"",
        "context": "CREATE TABLE table_name_87 (score VARCHAR, home_team VARCHAR)",
        "question": "What was the score for the tie that had Shrewsbury Town as home team?"
    },
    {
        "answer": "SELECT apparatus FROM table_name_68 WHERE score_final < 75.5 AND score_qualifying < 18.7",
        "context": "CREATE TABLE table_name_68 (apparatus VARCHAR, score_final VARCHAR, score_qualifying VARCHAR)",
        "question": "On which apparatus did Kanayeva have a final score smaller than 75.5 and a qualifying score smaller than 18.7?"
    },
    {
        "answer": "SELECT player FROM table_name_20 WHERE country = \"united states\" AND to_par = 4 AND score = 74 - 73 - 72 - 69 = 288",
        "context": "CREATE TABLE table_name_20 (player VARCHAR, country VARCHAR, to_par VARCHAR, score VARCHAR)",
        "question": "Who is the player from the United States with a 4 to par and a 74-73-72-69=288 score?"
    },
    {
        "answer": "SELECT notes FROM table_name_29 WHERE country = \"spain\"",
        "context": "CREATE TABLE table_name_29 (notes VARCHAR, country VARCHAR)",
        "question": "What are the notes for the athlete from Spain?"
    },
    {
        "answer": "SELECT instrumental FROM table_name_42 WHERE genitive = \"tkven-i\"",
        "context": "CREATE TABLE table_name_42 (instrumental VARCHAR, genitive VARCHAR)",
        "question": "What instrumental has tkven-i as the genitive?"
    },
    {
        "answer": "SELECT instrumental FROM table_name_87 WHERE adverbial = \"chven-s\"",
        "context": "CREATE TABLE table_name_87 (instrumental VARCHAR, adverbial VARCHAR)",
        "question": "What instrumental has chven-s as the adverbial?"
    },
    {
        "answer": "SELECT genre FROM table_name_81 WHERE game = \"donkey kong country\"",
        "context": "CREATE TABLE table_name_81 (genre VARCHAR, game VARCHAR)",
        "question": "Which Genre has a Game of donkey kong country?"
    },
    {
        "answer": "SELECT week FROM table_name_88 WHERE surface = \"hard\" AND tournament = \"indian wells\"",
        "context": "CREATE TABLE table_name_88 (week VARCHAR, surface VARCHAR, tournament VARCHAR)",
        "question": "what was the week for the match on a hard surface at Indian Wells tournament?"
    },
    {
        "answer": "SELECT MIN(total_population__2010_) FROM table_name_88 WHERE _percentage_asian_american = 5.7 AND asian_american_population__2010_ < 126 OFFSET 965",
        "context": "CREATE TABLE table_name_88 (total_population__2010_ INTEGER, _percentage_asian_american VARCHAR, asian_american_population__2010_ VARCHAR)",
        "question": "What's the total population when there are 5.7% Asian American and fewer than 126,965 Asian American Population?"
    },
    {
        "answer": "SELECT year FROM table_name_65 WHERE winner = \"panathinaikos\" AND runner_up = \"olympiacos\" AND venue = \"nikos goumas stadium\"",
        "context": "CREATE TABLE table_name_65 (year VARCHAR, venue VARCHAR, winner VARCHAR, runner_up VARCHAR)",
        "question": "When is the winner panathinaikos, the runner-up olympiacos and the venue nikos goumas stadium?"
    },
    {
        "answer": "SELECT year FROM table_name_12 WHERE winner = \"olympiacos\" AND venue = \"georgios karaiskakis stadium\" AND runner_up = \"iraklis\"",
        "context": "CREATE TABLE table_name_12 (year VARCHAR, runner_up VARCHAR, winner VARCHAR, venue VARCHAR)",
        "question": "When is the winner olympiacos, the venue is georgios karaiskakis stadium and the runner-up is iraklis?"
    },
    {
        "answer": "SELECT year_s__of_manufacture FROM table_name_74 WHERE quantity = 31 AND axle_arrangement___uic__ = \"b n2t\"",
        "context": "CREATE TABLE table_name_74 (year_s__of_manufacture VARCHAR, quantity VARCHAR, axle_arrangement___uic__ VARCHAR)",
        "question": "What year was the b n2t axle arrangement, which has a quantity of 31, manufactured?"
    },
    {
        "answer": "SELECT time FROM table_name_88 WHERE heat < 5 AND lane = 5 AND nationality = \"vietnam\"",
        "context": "CREATE TABLE table_name_88 (time VARCHAR, nationality VARCHAR, heat VARCHAR, lane VARCHAR)",
        "question": "What is the time in a heat smaller than 5, in Lane 5, for Vietnam?"
    },
    {
        "answer": "SELECT second FROM table_name_78 WHERE lead = \"sarah macintyre (jr) anne laird (w)\"",
        "context": "CREATE TABLE table_name_78 (second VARCHAR, lead VARCHAR)",
        "question": "Who is the second with a lead of Sarah Macintyre (jr) Anne Laird (w)?"
    },
    {
        "answer": "SELECT second FROM table_name_80 WHERE third = \"kelly wood (e) anna sloan (jr)\"",
        "context": "CREATE TABLE table_name_80 (second VARCHAR, third VARCHAR)",
        "question": "Who is the second where the third of Kelly Wood (e) Anna Sloan (Jr)?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_12 WHERE nation = \"netherlands\" AND silver > 0",
        "context": "CREATE TABLE table_name_12 (total VARCHAR, nation VARCHAR, silver VARCHAR)",
        "question": "What is the total number for a total when the nation is netherlands and silver is larger than 0?"
    },
    {
        "answer": "SELECT overall FROM table_name_82 WHERE college = \"iowa\" AND position = \"db\"",
        "context": "CREATE TABLE table_name_82 (overall VARCHAR, college VARCHAR, position VARCHAR)",
        "question": "What was the overall draft pick of the player who was a db and attended college in iowa?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_72 WHERE data_processing_and_exploitation = \"00 0,228\" AND management_and_support > 1 OFFSET 7",
        "context": "CREATE TABLE table_name_72 (total INTEGER, data_processing_and_exploitation VARCHAR, management_and_support VARCHAR)",
        "question": "What is the lowest total data processing and exploitation of 00 0,228, and a management and support larger than 1,7?"
    },
    {
        "answer": "SELECT player FROM table_name_27 WHERE debut_year < 1943 AND games < 12 AND goals < 11 AND years_at_club = \"1942\"",
        "context": "CREATE TABLE table_name_27 (player VARCHAR, years_at_club VARCHAR, goals VARCHAR, debut_year VARCHAR, games VARCHAR)",
        "question": "Which player debuted before 1943, played for the club in 1942, played less than 12 games, and scored less than 11 goals?"
    },
    {
        "answer": "SELECT quantity_made FROM table_name_78 WHERE wheel_arrangement = \"2-6-0\" AND class = \"k\"",
        "context": "CREATE TABLE table_name_78 (quantity_made VARCHAR, wheel_arrangement VARCHAR, class VARCHAR)",
        "question": "what is the quantity made when the wheel arrangement is 2-6-0 and the class is k?"
    },
    {
        "answer": "SELECT SUM(match) FROM table_name_39 WHERE opponent = \"fcr 2001 duisburg\"",
        "context": "CREATE TABLE table_name_39 (match INTEGER, opponent VARCHAR)",
        "question": "Which match did FCR 2001 Duisburg participate as the opponent?"
    },
    {
        "answer": "SELECT surface FROM table_name_95 WHERE date = \"july 5, 2009\"",
        "context": "CREATE TABLE table_name_95 (surface VARCHAR, date VARCHAR)",
        "question": "What is the surface of the match on July 5, 2009?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_94 WHERE date = \"22 october 1990\"",
        "context": "CREATE TABLE table_name_94 (score_in_the_final VARCHAR, date VARCHAR)",
        "question": "What is Score In The Final, when Date is \"22 October 1990\"?"
    },
    {
        "answer": "SELECT team FROM table_name_82 WHERE winner = \"mark skaife\" AND series = \"atcc round 7\"",
        "context": "CREATE TABLE table_name_82 (team VARCHAR, winner VARCHAR, series VARCHAR)",
        "question": "What is the Team of Winner Mark Skaife in ATCC Round 7?"
    },
    {
        "answer": "SELECT ihsaa_class FROM table_name_95 WHERE location = \"middlebury, in\"",
        "context": "CREATE TABLE table_name_95 (ihsaa_class VARCHAR, location VARCHAR)",
        "question": "What is the IHSAA class for the team located in Middlebury, IN?"
    },
    {
        "answer": "SELECT since_beginning_of_big_12 FROM table_name_28 WHERE last_10_meetings = \"ou, 7-3\" AND at_neutral_site = \"ou, 2-1\" AND last_5_meetings = \"bu, 3-2\"",
        "context": "CREATE TABLE table_name_28 (since_beginning_of_big_12 VARCHAR, last_5_meetings VARCHAR, last_10_meetings VARCHAR, at_neutral_site VARCHAR)",
        "question": "what is the since beginning of big 12 when last 10 meetings is ou, 7-3, neutral site is ou, 2-1, and last 5 meetings is bu, 3-2?"
    },
    {
        "answer": "SELECT COUNT(frequency_mhz) FROM table_name_19 WHERE call_sign = \"kgrj\" AND erp_w > 21 OFFSET 500",
        "context": "CREATE TABLE table_name_19 (frequency_mhz VARCHAR, call_sign VARCHAR, erp_w VARCHAR)",
        "question": "What is the total frequency mhz of the kgrj call sign, which has an erp w greater than 21,500?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_76 WHERE athlete = \"markus thalmann\" AND time = \"23:28:24\"",
        "context": "CREATE TABLE table_name_76 (year INTEGER, athlete VARCHAR, time VARCHAR)",
        "question": "Which Year is the lowest one that has an Athlete of markus thalmann, and a Time of 23:28:24?"
    },
    {
        "answer": "SELECT AVG(frequency_mhz) FROM table_name_83 WHERE city_of_license = \"loomis, south dakota\"",
        "context": "CREATE TABLE table_name_83 (frequency_mhz INTEGER, city_of_license VARCHAR)",
        "question": "What is the average frequency mhz of the loomis, south dakota city license?"
    },
    {
        "answer": "SELECT time FROM table_name_60 WHERE year > 1985 AND place < 2 AND athlete = \"riochy sekiya\"",
        "context": "CREATE TABLE table_name_60 (time VARCHAR, athlete VARCHAR, year VARCHAR, place VARCHAR)",
        "question": "Which Time has a Year larger than 1985, and a Place smaller than 2, and an Athlete of riochy sekiya?"
    },
    {
        "answer": "SELECT COUNT(ends) FROM table_name_39 WHERE since > 2006 AND nat = \"ita\" AND goals < 0",
        "context": "CREATE TABLE table_name_39 (ends VARCHAR, goals VARCHAR, since VARCHAR, nat VARCHAR)",
        "question": "What is the total number of ends after 2006 with a nationality of ita and 0 goals?"
    },
    {
        "answer": "SELECT score FROM table_name_88 WHERE surface = \"carpet\" AND partnering = \"tim henman\"",
        "context": "CREATE TABLE table_name_88 (score VARCHAR, surface VARCHAR, partnering VARCHAR)",
        "question": "What is the score of the tournament with a carpet surface and tim henman as the partnering?"
    },
    {
        "answer": "SELECT SUM(labour_party) FROM table_name_29 WHERE fianna_f\u00e1il = 3 AND total > 9 AND green_party > 2",
        "context": "CREATE TABLE table_name_29 (labour_party INTEGER, green_party VARCHAR, fianna_f\u00e1il VARCHAR, total VARCHAR)",
        "question": "How many are in the Labour Party of a Fianna Fail of 3 with a total higher than 9 and more than 2 in the Green Party?"
    },
    {
        "answer": "SELECT SUM(green_party) FROM table_name_41 WHERE fine_gael < 4 AND fianna_f\u00e1il < 2 AND town = \"athy\"",
        "context": "CREATE TABLE table_name_41 (green_party INTEGER, town VARCHAR, fine_gael VARCHAR, fianna_f\u00e1il VARCHAR)",
        "question": "How many are in the Green Party with a Fine Gael of less than 4 and a Fianna Fail of less than 2 in Athy?"
    },
    {
        "answer": "SELECT nation FROM table_name_84 WHERE silver = 0 AND bronze = 1 AND rank = \"18\"",
        "context": "CREATE TABLE table_name_84 (nation VARCHAR, rank VARCHAR, silver VARCHAR, bronze VARCHAR)",
        "question": "What nation has 0 as the silver, 1 as the bronze, with 18 as the rank?"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_90 WHERE gold < 1 AND nation = \"sweden (swe)\" AND silver < 1",
        "context": "CREATE TABLE table_name_90 (bronze VARCHAR, silver VARCHAR, gold VARCHAR, nation VARCHAR)",
        "question": "What's the total number of bronze medals for Sweden (SWE) having less than 1 gold and silver?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_2 WHERE silver = 0 AND rank = 8 AND gold > 1",
        "context": "CREATE TABLE table_name_2 (total VARCHAR, gold VARCHAR, silver VARCHAR, rank VARCHAR)",
        "question": "What's the total of rank 8 when Silver medals are 0 and gold is more than 1?"
    },
    {
        "answer": "SELECT score FROM table_name_35 WHERE opponent = \"indians\" AND date = \"september 15\"",
        "context": "CREATE TABLE table_name_35 (score VARCHAR, opponent VARCHAR, date VARCHAR)",
        "question": "What is the score from September 15 that has the Indians as the opponent?"
    },
    {
        "answer": "SELECT country FROM table_name_39 WHERE player = \"jos\u00e9 mar\u00eda olaz\u00e1bal\"",
        "context": "CREATE TABLE table_name_39 (country VARCHAR, player VARCHAR)",
        "question": "What is jos\u00e9 mar\u00eda olaz\u00e1bal's country?"
    },
    {
        "answer": "SELECT player FROM table_name_86 WHERE score = 74 - 67 - 74 - 71 = 286",
        "context": "CREATE TABLE table_name_86 (player VARCHAR, score VARCHAR)",
        "question": "Which Player has a Score of 74-67-74-71=286?"
    },
    {
        "answer": "SELECT SUM(velocity__km_h_) FROM table_name_56 WHERE date = \"august 16, 1963\"",
        "context": "CREATE TABLE table_name_56 (velocity__km_h_ INTEGER, date VARCHAR)",
        "question": "on august 16, 1963, what is the velocity?"
    },
    {
        "answer": "SELECT nationality FROM table_name_2 WHERE college = \"illinois state\"",
        "context": "CREATE TABLE table_name_2 (nationality VARCHAR, college VARCHAR)",
        "question": "What is Nationality, and when College is Illinois State?"
    },
    {
        "answer": "SELECT MAX(*) FROM table_name_65 WHERE nation = \"perak fa\" AND place = 3",
        "context": "",
        "question": "Name the highest 3rd place for nation of perak fa"
    },
    {
        "answer": "SELECT SUM(top_25) FROM table_name_21 WHERE tournament = \"pga championship\" AND top_5 < 1",
        "context": "CREATE TABLE table_name_21 (top_25 INTEGER, tournament VARCHAR, top_5 VARCHAR)",
        "question": "Name the sum of top-25 for pga championship and top-5 less than 1"
    },
    {
        "answer": "SELECT weeks_on_top FROM table_name_26 WHERE artist = \"the beatles\" AND issue_date_s_ = \"19 september\"",
        "context": "CREATE TABLE table_name_26 (weeks_on_top VARCHAR, artist VARCHAR, issue_date_s_ VARCHAR)",
        "question": "An artist of the Beatles with an issue date(s) of 19 September has what as the listed weeks on top?"
    },
    {
        "answer": "SELECT COUNT(date) FROM table_name_94 WHERE boiler_type = \"forward topfeed\" AND built_at = \"crewe\" AND lot_no < 187",
        "context": "CREATE TABLE table_name_94 (date VARCHAR, lot_no VARCHAR, boiler_type VARCHAR, built_at VARCHAR)",
        "question": "What year is the date when the boiler type is forward topfeed, the built at is Crewe, and lot number is less than 187?"
    },
    {
        "answer": "SELECT city_of_license FROM table_name_34 WHERE resolution = \"sd 480i\" AND official_website = \"telemundo.com\"",
        "context": "CREATE TABLE table_name_34 (city_of_license VARCHAR, resolution VARCHAR, official_website VARCHAR)",
        "question": "Name the city of license with resolution of sd 480i and official website of telemundo.com"
    },
    {
        "answer": "SELECT record FROM table_name_4 WHERE location_attendance = \"izod center 16,911\"",
        "context": "CREATE TABLE table_name_4 (record VARCHAR, location_attendance VARCHAR)",
        "question": "What is Record, when Location Attendance is \"Izod Center 16,911\"?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_name_86 WHERE high_assists = \"delonte west (10)\"",
        "context": "CREATE TABLE table_name_86 (high_rebounds VARCHAR, high_assists VARCHAR)",
        "question": "What is High Rebounds, when High Assists is \"Delonte West (10)\"?"
    },
    {
        "answer": "SELECT resolution FROM table_name_87 WHERE official_website = \"ketftv.com\" AND callsign = \"kldo-dt2\"",
        "context": "CREATE TABLE table_name_87 (resolution VARCHAR, official_website VARCHAR, callsign VARCHAR)",
        "question": "Name the resolution for ketftv.com and callsign of kldo-dt2"
    },
    {
        "answer": "SELECT label FROM table_name_87 WHERE catalog = \"lpm-2899\"",
        "context": "CREATE TABLE table_name_87 (label VARCHAR, catalog VARCHAR)",
        "question": "What is the Label of the release with Catalog number LPM-2899?"
    },
    {
        "answer": "SELECT AVG(goals_scored) FROM table_name_69 WHERE place > 1 AND team = \"once municipal\" AND points < 27",
        "context": "CREATE TABLE table_name_69 (goals_scored INTEGER, points VARCHAR, place VARCHAR, team VARCHAR)",
        "question": "For Once Municipal, what were the goals scored that had less than 27 points and greater than place 1?"
    },
    {
        "answer": "SELECT start FROM table_name_40 WHERE category = \"2\" AND year = 1947",
        "context": "CREATE TABLE table_name_40 (start VARCHAR, category VARCHAR, year VARCHAR)",
        "question": "Name the start of an event in Catagory 2 of the year 1947."
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_37 WHERE definition = \"core districts + inner suburbs\" AND population = \"10123000\"",
        "context": "CREATE TABLE table_name_37 (rank INTEGER, definition VARCHAR, population VARCHAR)",
        "question": "What rank was Core Districts + Inner Suburbs and had a population of 10123000?"
    },
    {
        "answer": "SELECT career_win_loss FROM table_name_75 WHERE 2002 = \"1r\" AND 2000 = \"2r\" AND 2001 = \"2r\"",
        "context": "CREATE TABLE table_name_75 (career_win_loss VARCHAR)",
        "question": "Which career win-loss record has a 1r in 2002, a 2r in 2000 and a 2r in 2001?"
    },
    {
        "answer": "SELECT weeks_on_chart FROM table_name_92 WHERE country = \"france\"",
        "context": "CREATE TABLE table_name_92 (weeks_on_chart VARCHAR, country VARCHAR)",
        "question": "what is the weeks on chart for the single from france?"
    },
    {
        "answer": "SELECT MIN(wins) FROM table_name_50 WHERE losses < 10 AND goal_difference < 46 AND goals_for < 63 AND played < 30",
        "context": "CREATE TABLE table_name_50 (wins INTEGER, played VARCHAR, goals_for VARCHAR, losses VARCHAR, goal_difference VARCHAR)",
        "question": "What is the lowest Wins, when Losses is less than 10, when Goal Difference is less than 46, when Goals is less than 63, and when Played is less than 30?"
    },
    {
        "answer": "SELECT MAX(weeks_on_chart) FROM table_name_49 WHERE peak_position < 5 AND country = \"sweden\"",
        "context": "CREATE TABLE table_name_49 (weeks_on_chart INTEGER, peak_position VARCHAR, country VARCHAR)",
        "question": "what is the most weeks on chart when the peak position is less than 5 and from Sweden?"
    },
    {
        "answer": "SELECT date FROM table_name_56 WHERE circuit = \"eastern creek raceway\"",
        "context": "CREATE TABLE table_name_56 (date VARCHAR, circuit VARCHAR)",
        "question": "The Eastern Creek Raceway circuit is on what date?"
    },
    {
        "answer": "SELECT event FROM table_name_56 WHERE rider = \"rob vine\"",
        "context": "CREATE TABLE table_name_56 (event VARCHAR, rider VARCHAR)",
        "question": "What event was Rob Vine riding?"
    },
    {
        "answer": "SELECT time FROM table_name_14 WHERE team_s_ = \"minnesota vikings\" AND artist_s_ = \"xxx\"",
        "context": "CREATE TABLE table_name_14 (time VARCHAR, team_s_ VARCHAR, artist_s_ VARCHAR)",
        "question": "How long is the XXX track used by the Minnesota Vikings?"
    },
    {
        "answer": "SELECT record FROM table_name_4 WHERE method = \"technical submission (rear naked choke)\"",
        "context": "CREATE TABLE table_name_4 (record VARCHAR, method VARCHAR)",
        "question": "What is Record, when Method is \"Technical Submission (Rear Naked Choke)\"?"
    },
    {
        "answer": "SELECT position FROM table_name_48 WHERE round > 6 AND pick__number < 25 AND college = \"southern illinois\"",
        "context": "CREATE TABLE table_name_48 (position VARCHAR, college VARCHAR, round VARCHAR, pick__number VARCHAR)",
        "question": "Round larger than 6, and a Pick # smaller than 25, and a College of southern Illinois has what position?"
    },
    {
        "answer": "SELECT COUNT(year_set) FROM table_name_24 WHERE long_course_short_course = \"short course\" AND time = \"7:51.80\"",
        "context": "CREATE TABLE table_name_24 (year_set VARCHAR, long_course_short_course VARCHAR, time VARCHAR)",
        "question": "What year did a short course have a time of 7:51.80?"
    },
    {
        "answer": "SELECT nhl_team FROM table_name_97 WHERE player = \"steve durbano\"",
        "context": "CREATE TABLE table_name_97 (nhl_team VARCHAR, player VARCHAR)",
        "question": "Which NHL team has a Player of steve durbano?"
    },
    {
        "answer": "SELECT MAX(money___) AS $__ FROM table_name_64 WHERE place = \"t4\" AND player = \"tiger woods\"",
        "context": "CREATE TABLE table_name_64 (money___ INTEGER, place VARCHAR, player VARCHAR)",
        "question": "What is the largest money for a t4 place, for Tiger Woods?"
    },
    {
        "answer": "SELECT league FROM table_name_86 WHERE regular_season = \"3rd, atlantic\"",
        "context": "CREATE TABLE table_name_86 (league VARCHAR, regular_season VARCHAR)",
        "question": "Name the League which has a Regular Season of 3rd, atlantic?"
    },
    {
        "answer": "SELECT COUNT(top_10) FROM table_name_24 WHERE events < 3 AND cuts_made < 1",
        "context": "CREATE TABLE table_name_24 (top_10 VARCHAR, events VARCHAR, cuts_made VARCHAR)",
        "question": "For events with under 3 times played and fewer than 1 cut made, what is the total number of top-10 finishes?"
    },
    {
        "answer": "SELECT location FROM table_name_68 WHERE game < 2",
        "context": "CREATE TABLE table_name_68 (location VARCHAR, game INTEGER)",
        "question": "What is the location of the game that has a number smaller than 2?"
    },
    {
        "answer": "SELECT film FROM table_name_55 WHERE category = \"short film 2007 prix uip\" AND director_s_ = \"ian mackinnon\"",
        "context": "CREATE TABLE table_name_55 (film VARCHAR, category VARCHAR, director_s_ VARCHAR)",
        "question": "What film did ian mackinnon direct that was in the short film 2007 prix uip category?"
    },
    {
        "answer": "SELECT COUNT(weight) FROM table_name_90 WHERE position = \"forward/center\" AND player = \"othella harrington\" AND number < 32",
        "context": "CREATE TABLE table_name_90 (weight VARCHAR, number VARCHAR, position VARCHAR, player VARCHAR)",
        "question": "What is the total number of Weight, when Position is \"Forward/Center\", when Player is \"Othella Harrington\", and when Number is less than 32?"
    },
    {
        "answer": "SELECT d_45_o FROM table_name_5 WHERE d_44_o = \"majority \u2192\"",
        "context": "CREATE TABLE table_name_5 (d_45_o VARCHAR, d_44_o VARCHAR)",
        "question": "Name the D 45 O with D 44 O majority \u2192"
    },
    {
        "answer": "SELECT year FROM table_name_96 WHERE attempts = \"888\"",
        "context": "CREATE TABLE table_name_96 (year VARCHAR, attempts VARCHAR)",
        "question": "In what year was the number of attempts 888?"
    },
    {
        "answer": "SELECT to_par FROM table_name_94 WHERE place = \"t3\" AND player = \"geoff ogilvy\"",
        "context": "CREATE TABLE table_name_94 (to_par VARCHAR, place VARCHAR, player VARCHAR)",
        "question": "WHAT IS THE TO PAR FOR GEOFF OGILVY WITH A PLACE OF T3?"
    },
    {
        "answer": "SELECT categorie FROM table_name_39 WHERE year = 2002 AND awards = \"berlin international film festival\"",
        "context": "CREATE TABLE table_name_39 (categorie VARCHAR, year VARCHAR, awards VARCHAR)",
        "question": "What was the categorie in 2002 at the Berlin international Film Festival that Danielle Darrieux was in?"
    },
    {
        "answer": "SELECT date FROM table_name_40 WHERE circuit = \"sepang international circuit\" AND round = \"3\"",
        "context": "CREATE TABLE table_name_40 (date VARCHAR, circuit VARCHAR, round VARCHAR)",
        "question": "What was the date for the Sepang International circuit, round 3?"
    },
    {
        "answer": "SELECT round FROM table_name_80 WHERE winning_driver = \"uwe alzen\" AND circuit = \"sepang international circuit\"",
        "context": "CREATE TABLE table_name_80 (round VARCHAR, winning_driver VARCHAR, circuit VARCHAR)",
        "question": "Which round had a winning driver of Uwe Alzen, at the Sepang International circuit?"
    },
    {
        "answer": "SELECT winning_constructor FROM table_name_71 WHERE circuit = \"parioli\"",
        "context": "CREATE TABLE table_name_71 (winning_constructor VARCHAR, circuit VARCHAR)",
        "question": "Who was the winning constructor at the circuit of parioli?"
    },
    {
        "answer": "SELECT MAX(grid) FROM table_name_22 WHERE time = \"+1:19.905\" AND laps < 20",
        "context": "CREATE TABLE table_name_22 (grid INTEGER, time VARCHAR, laps VARCHAR)",
        "question": "What is the highest Grid with a time of +1:19.905, and less than 20 laps?"
    },
    {
        "answer": "SELECT MIN(laps) FROM table_name_81 WHERE manufacturer = \"gilera\" AND grid < 12",
        "context": "CREATE TABLE table_name_81 (laps INTEGER, manufacturer VARCHAR, grid VARCHAR)",
        "question": "What was the lowest lab for Gilera with a grid less than 12?"
    },
    {
        "answer": "SELECT AVG(margin) FROM table_name_3 WHERE round = \"13. (h)\"",
        "context": "CREATE TABLE table_name_3 (margin INTEGER, round VARCHAR)",
        "question": "What is the average Margin that has a Round of 13. (h)?"
    },
    {
        "answer": "SELECT coach FROM table_name_6 WHERE location = \"port pirie\"",
        "context": "CREATE TABLE table_name_6 (coach VARCHAR, location VARCHAR)",
        "question": "Who is the coach of the team from Port Pirie?"
    },
    {
        "answer": "SELECT location FROM table_name_95 WHERE date = \"may 21\"",
        "context": "CREATE TABLE table_name_95 (location VARCHAR, date VARCHAR)",
        "question": "Which location has a date of may 21?"
    },
    {
        "answer": "SELECT COUNT(decile) FROM table_name_49 WHERE authority = \"state\" AND area = \"fairlie\" AND roll < 206",
        "context": "CREATE TABLE table_name_49 (decile VARCHAR, roll VARCHAR, authority VARCHAR, area VARCHAR)",
        "question": "What is the total Decile that has a state authority, fairlie area and roll smarter than 206?"
    },
    {
        "answer": "SELECT college_junior_club_team__league_ FROM table_name_7 WHERE round > 4 AND position = \"lw\" AND player = \"mark miller\"",
        "context": "CREATE TABLE table_name_7 (college_junior_club_team__league_ VARCHAR, player VARCHAR, round VARCHAR, position VARCHAR)",
        "question": "What is the college/junior/club team (league) of lw position player mark miller, from a round greater than 4?"
    },
    {
        "answer": "SELECT winner FROM table_name_4 WHERE fis_nordic_world_ski_championships = \"1972\"",
        "context": "CREATE TABLE table_name_4 (winner VARCHAR, fis_nordic_world_ski_championships VARCHAR)",
        "question": "Who won the FIS Nordic World Ski Championships in 1972?"
    },
    {
        "answer": "SELECT money___$__ FROM table_name_44 WHERE place = \"t6\" AND country = \"spain\"",
        "context": "CREATE TABLE table_name_44 (money___$__ VARCHAR, place VARCHAR, country VARCHAR)",
        "question": "For a country of Spain, place of t6, what is the Money ($)?"
    },
    {
        "answer": "SELECT senator FROM table_name_82 WHERE party = \"republican\" AND home_town = \"houston\" AND district = 7",
        "context": "CREATE TABLE table_name_82 (senator VARCHAR, district VARCHAR, party VARCHAR, home_town VARCHAR)",
        "question": "Which Senator has a Party of republican, a Home Town of houston, and a District of 7?"
    },
    {
        "answer": "SELECT COUNT(took_office) FROM table_name_81 WHERE party = \"democratic\" AND home_town = \"victoria\" AND district < 18",
        "context": "CREATE TABLE table_name_81 (took_office VARCHAR, district VARCHAR, party VARCHAR, home_town VARCHAR)",
        "question": "Which Took Office has a Party of democratic, a Home Town of victoria, and a District smaller than 18?"
    },
    {
        "answer": "SELECT MIN(laps) FROM table_name_39 WHERE time = \"+24.440\" AND grid > 18",
        "context": "CREATE TABLE table_name_39 (laps INTEGER, time VARCHAR, grid VARCHAR)",
        "question": "What is the lowest number of Laps that have a Time of +24.440, and a Grid higher than 18?"
    },
    {
        "answer": "SELECT country FROM table_name_18 WHERE place = \"t3\" AND score = 70 - 68 = 138",
        "context": "CREATE TABLE table_name_18 (country VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "Which country earned place T3 with a score of 70-68=138?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_43 WHERE engine_s_ = \"brm p202 3.0 v12 brm p200 3.0 v12\"",
        "context": "CREATE TABLE table_name_43 (year INTEGER, engine_s_ VARCHAR)",
        "question": "Name the sum of year for engine of brm p202 3.0 v12 brm p200 3.0 v12"
    },
    {
        "answer": "SELECT endowment_as_of_2008 FROM table_name_55 WHERE established = 1961",
        "context": "CREATE TABLE table_name_55 (endowment_as_of_2008 VARCHAR, established VARCHAR)",
        "question": "What was the endowment in 2008 of the college that was established in 1961?"
    },
    {
        "answer": "SELECT AVG(money_requested__) AS \u00a3_ FROM table_name_96 WHERE first_aired = \"18 january 2005\" AND company_or_product_name = \"iv cam\"",
        "context": "CREATE TABLE table_name_96 (money_requested__ INTEGER, first_aired VARCHAR, company_or_product_name VARCHAR)",
        "question": "What is the average money requested in the episode first aired on 18 January 2005 by the company/product name IV Cam"
    },
    {
        "answer": "SELECT sixth FROM table_name_66 WHERE second = \"white lies\"",
        "context": "CREATE TABLE table_name_66 (sixth VARCHAR, second VARCHAR)",
        "question": "WHAT IS THE SIXTH WITH A SECOND OF WHITE LIES?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_24 WHERE game > 35 AND date = \"january 30\"",
        "context": "CREATE TABLE table_name_24 (location_attendance VARCHAR, game VARCHAR, date VARCHAR)",
        "question": "What is the loaction attendance that has a game greater than 35, with January 30 as the date?"
    },
    {
        "answer": "SELECT MIN(retired) FROM table_name_50 WHERE delivery = \"1965\" AND in_service = \"november 1971\" AND poaf_serial < 7103",
        "context": "CREATE TABLE table_name_50 (retired INTEGER, poaf_serial VARCHAR, delivery VARCHAR, in_service VARCHAR)",
        "question": "What is the earliest year retired delivered in 1965 with an in service in November 1971 for the PoAF Serial less than 7103?"
    },
    {
        "answer": "SELECT MIN(freight_carried_s_tonne) FROM table_name_80 WHERE road_closed = \"march 31\" AND super_b_capacity_reached_[_citation_needed_] = \"february 17\" AND year > 2011",
        "context": "CREATE TABLE table_name_80 (freight_carried_s_tonne INTEGER, year VARCHAR, road_closed VARCHAR, super_b_capacity_reached_ VARCHAR, _citation_needed_ VARCHAR)",
        "question": "What is the smallest amount of freight carried on the road that closed on March 31 and reached super B capacity on February 17 after 2011?"
    },
    {
        "answer": "SELECT termination_of_mission FROM table_name_34 WHERE presentation_of_credentials = \"august 29, 1859\"",
        "context": "CREATE TABLE table_name_34 (termination_of_mission VARCHAR, presentation_of_credentials VARCHAR)",
        "question": "What's the Termination of Mission listed that has a Presentation of Credentials for August 29, 1859?"
    },
    {
        "answer": "SELECT representative FROM table_name_42 WHERE presentation_of_credentials = \"april 10, 1855\"",
        "context": "CREATE TABLE table_name_42 (representative VARCHAR, presentation_of_credentials VARCHAR)",
        "question": "What Representative has a Presentation of Credentails of April 10, 1855?"
    },
    {
        "answer": "SELECT opponent FROM table_name_66 WHERE tournament = \"chinese taipei open\" AND year = 2000",
        "context": "CREATE TABLE table_name_66 (opponent VARCHAR, tournament VARCHAR, year VARCHAR)",
        "question": "Which opponent played in the Chinese Taipei Open in 2000?"
    },
    {
        "answer": "SELECT nir_number FROM table_name_87 WHERE type = \"tso (ex-br class 488 unit 488305)\" AND br_number_s_ = \"6082 / 72605\"",
        "context": "CREATE TABLE table_name_87 (nir_number VARCHAR, type VARCHAR, br_number_s_ VARCHAR)",
        "question": "Which NIR number is for the tso (ex-br class 488 unit 488305) type that has a 6082 / 72605 BR number?"
    },
    {
        "answer": "SELECT location FROM table_name_87 WHERE match > 1 AND tournament = \"friendly\" AND opponent_team = \"super reds\"",
        "context": "CREATE TABLE table_name_87 (location VARCHAR, opponent_team VARCHAR, match VARCHAR, tournament VARCHAR)",
        "question": "Where is the location of the friendly match larger than 1 where the Super Reds were the opponent?"
    },
    {
        "answer": "SELECT player FROM table_name_4 WHERE score = 71",
        "context": "CREATE TABLE table_name_4 (player VARCHAR, score VARCHAR)",
        "question": "Which player scored 71?"
    },
    {
        "answer": "SELECT acting_segment FROM table_name_36 WHERE status = \"eliminated\" AND name = \"\u6797\u4f69\u742a lin peiqi\"",
        "context": "CREATE TABLE table_name_36 (acting_segment VARCHAR, status VARCHAR, name VARCHAR)",
        "question": "What's the acting segment of \u6797\u4f69\u742a lin peiqi's events that are eliminated?"
    },
    {
        "answer": "SELECT date FROM table_name_60 WHERE venue = \"firhill\" AND opponent = \"ayr united\"",
        "context": "CREATE TABLE table_name_60 (date VARCHAR, venue VARCHAR, opponent VARCHAR)",
        "question": "What day was the game held at Firhill against AYR United?"
    },
    {
        "answer": "SELECT aspect FROM table_name_12 WHERE programming = \"saigon network television\"",
        "context": "CREATE TABLE table_name_12 (aspect VARCHAR, programming VARCHAR)",
        "question": "What Aspect has a Programming of Saigon Network Television?"
    },
    {
        "answer": "SELECT MIN(hits) FROM table_name_28 WHERE year < 1920 AND player = \"ed delahanty\"",
        "context": "CREATE TABLE table_name_28 (hits INTEGER, year VARCHAR, player VARCHAR)",
        "question": "Name the least hits for year less than 1920 and player of ed delahanty"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_41 WHERE location = \"west side grounds\" AND date = \"october 22\"",
        "context": "CREATE TABLE table_name_41 (attendance VARCHAR, location VARCHAR, date VARCHAR)",
        "question": "For the game that was played on october 22 in west side grounds, what is the total attendance"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_62 WHERE beer_name = \"maggs magnificent mild\" AND competition = \"camra reading branch beer festival\" AND category = \"overall\"",
        "context": "CREATE TABLE table_name_62 (year INTEGER, category VARCHAR, beer_name VARCHAR, competition VARCHAR)",
        "question": "What year did maggs magnificent mild bear win overall at the camra reading branch beer festival?"
    },
    {
        "answer": "SELECT MIN(game) FROM table_name_47 WHERE time = \"2:06\" AND attendance < 27 OFFSET 374",
        "context": "CREATE TABLE table_name_47 (game INTEGER, time VARCHAR, attendance VARCHAR)",
        "question": "Which week was the first game played that had a time of 2:06 and less than 27,374 attendees?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_93 WHERE beer_name = \"maggs magnificent mild\" AND prize = \"gold medal\" AND category = \"mild and porter\" AND competition = \"siba south east region beer competition\"",
        "context": "CREATE TABLE table_name_93 (year INTEGER, competition VARCHAR, category VARCHAR, beer_name VARCHAR, prize VARCHAR)",
        "question": "What year did maggs magnificent mild win a gold medal in the mild and porter category at the siba south east region beer competition?"
    },
    {
        "answer": "SELECT beer_name FROM table_name_33 WHERE prize = \"silver medal\" AND competition = \"camra reading branch beer festival\" AND year = 2008",
        "context": "CREATE TABLE table_name_33 (beer_name VARCHAR, year VARCHAR, prize VARCHAR, competition VARCHAR)",
        "question": "What beer won a silver medal at the camra reading branch beer festival in 2008?"
    },
    {
        "answer": "SELECT model_number FROM table_name_70 WHERE part_number_s_ = \"ay80609003987ab\"",
        "context": "CREATE TABLE table_name_70 (model_number VARCHAR, part_number_s_ VARCHAR)",
        "question": "What is Model Number, when Part Number(s) is AY80609003987AB?"
    },
    {
        "answer": "SELECT kit_manufacturer FROM table_name_90 WHERE team = \"everton\"",
        "context": "CREATE TABLE table_name_90 (kit_manufacturer VARCHAR, team VARCHAR)",
        "question": "Which Kit Manufacturer supports team Everton?"
    },
    {
        "answer": "SELECT event FROM table_name_88 WHERE distance = \"ft10in (m)\"",
        "context": "CREATE TABLE table_name_88 (event VARCHAR, distance VARCHAR)",
        "question": "Which event has a distance of ft10in (m)?"
    },
    {
        "answer": "SELECT opponent FROM table_name_78 WHERE attendance < 751",
        "context": "CREATE TABLE table_name_78 (opponent VARCHAR, attendance INTEGER)",
        "question": "Who did they play when there were only 751 in attendance?"
    },
    {
        "answer": "SELECT vehicle_flight__number FROM table_name_31 WHERE pilot = \"peterson\" AND velocity__km_h_ = 649",
        "context": "CREATE TABLE table_name_31 (vehicle_flight__number VARCHAR, pilot VARCHAR, velocity__km_h_ VARCHAR)",
        "question": "What Vehicle Flight # has Pilot Peterson and Velocity (km/h) of 649?"
    },
    {
        "answer": "SELECT barrel_twist FROM table_name_33 WHERE stock = \"canadian 3rd generation\" AND hand_guards = \"short ribbed\"",
        "context": "CREATE TABLE table_name_33 (barrel_twist VARCHAR, stock VARCHAR, hand_guards VARCHAR)",
        "question": "Which Barrel twist has a Stock of canadian 3rd generation and a Hand guards of short ribbed?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_name_79 WHERE language_s_ = \"dutch\" AND original_title = \"rosie\"",
        "context": "CREATE TABLE table_name_79 (film_title_used_in_nomination VARCHAR, language_s_ VARCHAR, original_title VARCHAR)",
        "question": "What was the title used for Rosie, the film nominated for the dutch language?"
    },
    {
        "answer": "SELECT lifespan FROM table_name_96 WHERE state = \"ohio\" AND representative = \"joseph vance\" AND party = \"democratic-republican\"",
        "context": "CREATE TABLE table_name_96 (lifespan VARCHAR, party VARCHAR, state VARCHAR, representative VARCHAR)",
        "question": "What is the lifespan of Joseph Vance, a democratic-republican from Ohio?"
    },
    {
        "answer": "SELECT AVG(silver) FROM table_name_49 WHERE total < 2 AND nation = \"south korea\"",
        "context": "CREATE TABLE table_name_49 (silver INTEGER, total VARCHAR, nation VARCHAR)",
        "question": "Name the  Silver that has a Total smaller than 2, and a Nation of south korea?"
    },
    {
        "answer": "SELECT location FROM table_name_47 WHERE opponent = \"chad armstrong\"",
        "context": "CREATE TABLE table_name_47 (location VARCHAR, opponent VARCHAR)",
        "question": "What is the location of the match with chad armstrong as the opponent?"
    },
    {
        "answer": "SELECT place FROM table_name_25 WHERE country = \"united states\" AND player = \"corey pavin\"",
        "context": "CREATE TABLE table_name_25 (place VARCHAR, country VARCHAR, player VARCHAR)",
        "question": "What place is United States player Corey Pavin in?"
    },
    {
        "answer": "SELECT place FROM table_name_55 WHERE score = 67 - 70 = 137 AND player = \"stuart appleby\"",
        "context": "CREATE TABLE table_name_55 (place VARCHAR, player VARCHAR, score VARCHAR)",
        "question": "Name the place for score of 67-70=137 and stuart appleby"
    },
    {
        "answer": "SELECT city FROM table_name_40 WHERE iata = \"ssg\"",
        "context": "CREATE TABLE table_name_40 (city VARCHAR, iata VARCHAR)",
        "question": "Which city has the IATA SSG?"
    },
    {
        "answer": "SELECT iata FROM table_name_58 WHERE airport = \"gale\u00e3o airport\"",
        "context": "CREATE TABLE table_name_58 (iata VARCHAR, airport VARCHAR)",
        "question": "What is the IATA of gale\u00e3o airport?"
    },
    {
        "answer": "SELECT executions_in_persona FROM table_name_92 WHERE number_of_autos_da_f\u00e9_with_known_sentences = \"2 (1543\u20131544)\"",
        "context": "CREATE TABLE table_name_92 (executions_in_persona VARCHAR, number_of_autos_da_f\u00e9_with_known_sentences VARCHAR)",
        "question": "How many executions in persona have a number with known sentences of 2 (1543\u20131544)?"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_65 WHERE team = \"mi-jack conquest racing\" AND driver = \"justin wilson\" AND grid < 5",
        "context": "CREATE TABLE table_name_65 (laps INTEGER, grid VARCHAR, team VARCHAR, driver VARCHAR)",
        "question": "When the grid is under 5 and justin wilson is driving for the team mi-jack conquest racing, what's the highest number of laps driven?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_8 WHERE team = \"newman/haas racing\" AND grid = 3",
        "context": "CREATE TABLE table_name_8 (time_retired VARCHAR, team VARCHAR, grid VARCHAR)",
        "question": "When the team is newman/haas racing and the grid size is 3, what's the time/retired?"
    },
    {
        "answer": "SELECT ole_miss FROM table_name_65 WHERE arkansas = \"chuck dicus\"",
        "context": "CREATE TABLE table_name_65 (ole_miss VARCHAR, arkansas VARCHAR)",
        "question": "Who was the Ole Miss player associated with Chuck Dicus?"
    },
    {
        "answer": "SELECT COUNT(roll) FROM table_name_69 WHERE decile > 1 AND authority = \"integrated\" AND name = \"bishop viard college\"",
        "context": "CREATE TABLE table_name_69 (roll VARCHAR, name VARCHAR, decile VARCHAR, authority VARCHAR)",
        "question": "What is the roll of Bishop Viard College (An Integrated College), which has a decile larger than 1?"
    },
    {
        "answer": "SELECT COUNT(decile) FROM table_name_55 WHERE area = \"whitby\" AND name = \"samuel marsden collegiate school\" AND roll > 163",
        "context": "CREATE TABLE table_name_55 (decile VARCHAR, roll VARCHAR, area VARCHAR, name VARCHAR)",
        "question": "What was the decile of Samuel Marsden Collegiate School in Whitby, when it had a roll higher than 163?"
    },
    {
        "answer": "SELECT name FROM table_name_69 WHERE decile = 2 AND authority = \"integrated\" AND roll > 55",
        "context": "CREATE TABLE table_name_69 (name VARCHAR, roll VARCHAR, decile VARCHAR, authority VARCHAR)",
        "question": "What integrated school had a decile of 2 and a roll larger than 55?"
    },
    {
        "answer": "SELECT original_airdate FROM table_name_73 WHERE nightly_rank = \"#6\" AND viewers__millions_ = 1.246",
        "context": "CREATE TABLE table_name_73 (original_airdate VARCHAR, nightly_rank VARCHAR, viewers__millions_ VARCHAR)",
        "question": "Original airdate for #6 with 1.246 viewers?"
    },
    {
        "answer": "SELECT nightly_rank FROM table_name_21 WHERE viewers__millions_ > 1.244",
        "context": "CREATE TABLE table_name_21 (nightly_rank VARCHAR, viewers__millions_ INTEGER)",
        "question": "Rank for viewers larger than 1.244?"
    },
    {
        "answer": "SELECT entrant FROM table_name_19 WHERE year < 1956 AND chassis = \"vanwall special\"",
        "context": "CREATE TABLE table_name_19 (entrant VARCHAR, year VARCHAR, chassis VARCHAR)",
        "question": "What is the entrant earlier than 1956 with a Vanwall Special chassis?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_90 WHERE entrant = \"cooper car company\" AND year > 1959",
        "context": "CREATE TABLE table_name_90 (points INTEGER, entrant VARCHAR, year VARCHAR)",
        "question": "How many points for the cooper car company after 1959?"
    },
    {
        "answer": "SELECT location FROM table_name_45 WHERE fc_matches = \"12\"",
        "context": "CREATE TABLE table_name_45 (location VARCHAR, fc_matches VARCHAR)",
        "question": "Where was the FC match with a score of 12 played?"
    },
    {
        "answer": "SELECT AVG(5432) FROM table_name_12 WHERE 11502 > 1163 AND 15122 < 15122 AND 3620 < 624",
        "context": "CREATE TABLE table_name_12 (Id VARCHAR)",
        "question": "What is the average 5432 value with a 11502 larger than 1163, a 15122 less than 15122, and a 3620 less than 624?"
    },
    {
        "answer": "SELECT reference FROM table_name_39 WHERE japanese_title = \"\u30a2\u30a4\u30b7\u30c6\u30eb\"",
        "context": "CREATE TABLE table_name_39 (reference VARCHAR, japanese_title VARCHAR)",
        "question": "What reference is used with the title \u30a2\u30a4\u30b7\u30c6\u30eb?"
    },
    {
        "answer": "SELECT representative FROM table_name_83 WHERE title = \"ambassador extraordinary and plenipotentiary\" AND termination_of_mission = \"september 20, 1996\"",
        "context": "CREATE TABLE table_name_83 (representative VARCHAR, title VARCHAR, termination_of_mission VARCHAR)",
        "question": "Which representative was the Ambassador Extraordinary and Plenipotentiary and had a Termination of Mission date September 20, 1996?"
    },
    {
        "answer": "SELECT representative FROM table_name_59 WHERE termination_of_mission = \"mar 25, 1976\"",
        "context": "CREATE TABLE table_name_59 (representative VARCHAR, termination_of_mission VARCHAR)",
        "question": "Which representative has a Termination of MIssion date Mar 25, 1976?"
    },
    {
        "answer": "SELECT termination_of_mission FROM table_name_34 WHERE title = \"ambassador extraordinary and plenipotentiary\" AND representative = \"marsha e. barnes\"",
        "context": "CREATE TABLE table_name_34 (termination_of_mission VARCHAR, title VARCHAR, representative VARCHAR)",
        "question": "What is the Termination of Mission date for Marsha E. Barnes, the Ambassador Extraordinary and Plenipotentiary?"
    },
    {
        "answer": "SELECT appointed_by FROM table_name_72 WHERE presentation_of_credentials = \"march 25, 1976\"",
        "context": "CREATE TABLE table_name_72 (appointed_by VARCHAR, presentation_of_credentials VARCHAR)",
        "question": "Who appointed the representative that had a Presentation of Credentials on March 25, 1976?"
    },
    {
        "answer": "SELECT position FROM table_name_79 WHERE first_team_goals = \"ongoing\" AND current_club = \"aston villa\"",
        "context": "CREATE TABLE table_name_79 (position VARCHAR, first_team_goals VARCHAR, current_club VARCHAR)",
        "question": "What is the position of the player who has ongoing first-team goals and currently plays for the Aston Villa club?"
    },
    {
        "answer": "SELECT current_club FROM table_name_28 WHERE first_team_appearances = \"ongoing\" AND position = \"midfielder\" AND player = \"samir carruthers\"",
        "context": "CREATE TABLE table_name_28 (current_club VARCHAR, player VARCHAR, first_team_appearances VARCHAR, position VARCHAR)",
        "question": "What is the name of the club that has ongoing first-team appearances, a midfielder, and whose player is Samir Carruthers?"
    },
    {
        "answer": "SELECT position FROM table_name_47 WHERE first_team_appearances = \"ongoing\" AND current_club = \"aston villa\" AND player = \"graham burke\"",
        "context": "CREATE TABLE table_name_47 (position VARCHAR, player VARCHAR, first_team_appearances VARCHAR, current_club VARCHAR)",
        "question": "What position has ongoing first-team appearances, Graham Burke for a player, and whose club is Aston Villa?"
    },
    {
        "answer": "SELECT COUNT(frequency_mhz) FROM table_name_41 WHERE city_of_license = \"port charlotte, florida\" AND erp_w > 10",
        "context": "CREATE TABLE table_name_41 (frequency_mhz VARCHAR, city_of_license VARCHAR, erp_w VARCHAR)",
        "question": "What is the total Frequency MHz Port Charlotte, Florida, which has an ERP W larger than 10, has?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_8 WHERE event = \"50km\" AND result = \"2nd\" AND venue = \"london, united kingdom\"",
        "context": "CREATE TABLE table_name_8 (year INTEGER, venue VARCHAR, event VARCHAR, result VARCHAR)",
        "question": "What is earliest year that had a 50km event with a 2nd place result played in London, United Kingdom?"
    },
    {
        "answer": "SELECT MAX(for_prohibition) FROM table_name_43 WHERE percent_against > 10.8 AND percent_for < 72.2 AND jurisdiction = \"british columbia\" AND against_prohibition < 4 OFFSET 756",
        "context": "CREATE TABLE table_name_43 (for_prohibition INTEGER, against_prohibition VARCHAR, jurisdiction VARCHAR, percent_against VARCHAR, percent_for VARCHAR)",
        "question": "What is the highest number supporting prohibition in British Columbia when the percent opposing is more than 10.8, the percent supporting is less than 72.2, number against is less than 4,756?"
    },
    {
        "answer": "SELECT constellation FROM table_name_60 WHERE apparent_magnitude > 7.7 AND ngc_number = 7777",
        "context": "CREATE TABLE table_name_60 (constellation VARCHAR, apparent_magnitude VARCHAR, ngc_number VARCHAR)",
        "question": "Which Constellation has an Apparent magnitude larger that 7.7, and an NGC number of 7777"
    },
    {
        "answer": "SELECT team FROM table_name_39 WHERE game < 78 AND high_rebounds = \"perkins (9)\"",
        "context": "CREATE TABLE table_name_39 (team VARCHAR, game VARCHAR, high_rebounds VARCHAR)",
        "question": "What team had a high rebound of perkins (9) and a game smaller than 78?"
    },
    {
        "answer": "SELECT chart_peak FROM table_name_46 WHERE release_date = \"6/17/61\" AND track > 20 AND writer_s_ = \"woody harris\"",
        "context": "CREATE TABLE table_name_46 (chart_peak VARCHAR, writer_s_ VARCHAR, release_date VARCHAR, track VARCHAR)",
        "question": "On songs that have a release date of 6/17/61, a track larger than 20, and a writer of Woody Harris, what is the chart peak?"
    },
    {
        "answer": "SELECT writer_s_ FROM table_name_27 WHERE catalogue = \"lsp 2231\" AND track < 17",
        "context": "CREATE TABLE table_name_27 (writer_s_ VARCHAR, catalogue VARCHAR, track VARCHAR)",
        "question": "On songs with track numbers smaller than number 17 and catalogues of LSP 2231, who are the writer(s)?"
    },
    {
        "answer": "SELECT MIN(wins) FROM table_name_17 WHERE goals_against < 39 AND losses > 2 AND ties > 0",
        "context": "CREATE TABLE table_name_17 (wins INTEGER, ties VARCHAR, goals_against VARCHAR, losses VARCHAR)",
        "question": "What has the lowest number of wins with GA smaller than 39, more than 2 losses, and ties greater than 0?"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_1 WHERE margin = \"1 stroke\"",
        "context": "CREATE TABLE table_name_1 (runner_s__up VARCHAR, margin VARCHAR)",
        "question": "Who was the runner-up when the margin was 1 stroke?"
    },
    {
        "answer": "SELECT COUNT(tied) FROM table_name_69 WHERE mountain_west = \"air force\" AND years > 57",
        "context": "CREATE TABLE table_name_69 (tied VARCHAR, mountain_west VARCHAR, years VARCHAR)",
        "question": "How many games tied for the air force with over 57 years participating?"
    },
    {
        "answer": "SELECT COUNT(lane) FROM table_name_86 WHERE rank > 2 AND name = \"louise \u00f8rnstedt\"",
        "context": "CREATE TABLE table_name_86 (lane VARCHAR, rank VARCHAR, name VARCHAR)",
        "question": "what is the number of lane with a rank more than 2 for Louise \u00f8rnstedt?"
    },
    {
        "answer": "SELECT away_team FROM table_name_41 WHERE home_team = \"melbourne\"",
        "context": "CREATE TABLE table_name_41 (away_team VARCHAR, home_team VARCHAR)",
        "question": "When melbourne played as the home team, who did they play?"
    },
    {
        "answer": "SELECT production_code FROM table_name_1 WHERE season__number < 8 AND series__number < 31 AND original_air_date = \"september 21, 1995\"",
        "context": "CREATE TABLE table_name_1 (production_code VARCHAR, original_air_date VARCHAR, season__number VARCHAR, series__number VARCHAR)",
        "question": "What is the production code of the episode before season 8, with a series number less than 31, and aired on September 21, 1995?"
    },
    {
        "answer": "SELECT venue FROM table_name_51 WHERE extra = \"long race\" AND result = \"13th\"",
        "context": "CREATE TABLE table_name_51 (venue VARCHAR, extra VARCHAR, result VARCHAR)",
        "question": "Which venue led to a result of 13th and had an extra of Long Race?"
    },
    {
        "answer": "SELECT pick__number FROM table_name_62 WHERE league_from = \"western hockey league\" AND player = \"scott glennie\"",
        "context": "CREATE TABLE table_name_62 (pick__number VARCHAR, league_from VARCHAR, player VARCHAR)",
        "question": "What pick was Scott Glennie from the Western hockey league"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_25 WHERE time_retired = \"+1 lap\" AND constructor = \"brm\" AND grid > 1",
        "context": "CREATE TABLE table_name_25 (laps INTEGER, grid VARCHAR, time_retired VARCHAR, constructor VARCHAR)",
        "question": "Where the time/retired is +1 lap, the constructor is BRM, and the grid is above 1, what's the highest laps recorded?"
    },
    {
        "answer": "SELECT chassis FROM table_name_69 WHERE rounds = \"all\" AND entrant = \"benson and hedges jordan\" AND driver = \"damon hill\"",
        "context": "CREATE TABLE table_name_69 (chassis VARCHAR, driver VARCHAR, rounds VARCHAR, entrant VARCHAR)",
        "question": "What is the chassis for all rounds on the entrant Benson and Hedges Jordan driven by Damon Hill?"
    },
    {
        "answer": "SELECT date FROM table_name_55 WHERE goal = 3",
        "context": "CREATE TABLE table_name_55 (date VARCHAR, goal VARCHAR)",
        "question": "Which date has 3 as the goal?"
    },
    {
        "answer": "SELECT tournament FROM table_name_99 WHERE surface = \"clay\" AND outcome = \"winner\" AND score = \"6\u20133, 6\u20132\"",
        "context": "CREATE TABLE table_name_99 (tournament VARCHAR, score VARCHAR, surface VARCHAR, outcome VARCHAR)",
        "question": "Name the tournament for clay surface and outcome is winner with score is 6\u20133, 6\u20132"
    },
    {
        "answer": "SELECT to_par FROM table_name_81 WHERE place = \"t1\" AND score = 70 - 73 - 69 = 212",
        "context": "CREATE TABLE table_name_81 (to_par VARCHAR, place VARCHAR, score VARCHAR)",
        "question": "What player was place of t1 in To Par and had a score of 70-73-69=212?"
    },
    {
        "answer": "SELECT award FROM table_name_85 WHERE year < 1998 AND type = \"won\" AND category = \"best sound\" AND title = \"the exorcist\"",
        "context": "CREATE TABLE table_name_85 (award VARCHAR, title VARCHAR, category VARCHAR, year VARCHAR, type VARCHAR)",
        "question": "What award was won in the best sound category for the exorcist before 1998?"
    },
    {
        "answer": "SELECT player FROM table_name_45 WHERE conv = \"14\"",
        "context": "CREATE TABLE table_name_45 (player VARCHAR, conv VARCHAR)",
        "question": "which player has a conv of 14?"
    },
    {
        "answer": "SELECT MAX(points) FROM table_name_32 WHERE artist = \"martine foubert\" AND place > 2",
        "context": "CREATE TABLE table_name_32 (points INTEGER, artist VARCHAR, place VARCHAR)",
        "question": "What is the high point toal for martine foubert placing below 2?"
    },
    {
        "answer": "SELECT 1 AS st_leg FROM table_name_66 WHERE team_1 = \"kabwe warriors\"",
        "context": "CREATE TABLE table_name_66 (team_1 VARCHAR)",
        "question": "When Kabwe Warriors (team 1) played, what was the result of the 1st leg?"
    },
    {
        "answer": "SELECT stadium FROM table_name_8 WHERE final_score = \"26\u201321\"",
        "context": "CREATE TABLE table_name_8 (stadium VARCHAR, final_score VARCHAR)",
        "question": "What stadium has a final score of 26\u201321?"
    },
    {
        "answer": "SELECT final_score FROM table_name_94 WHERE stadium = \"texas stadium\" AND visiting_team = \"new orleans saints\"",
        "context": "CREATE TABLE table_name_94 (final_score VARCHAR, stadium VARCHAR, visiting_team VARCHAR)",
        "question": "When the new orleans saints were visiting texas stadium, what was the final score?"
    },
    {
        "answer": "SELECT final_score FROM table_name_43 WHERE stadium = \"texas stadium\" AND date = \"september 17\"",
        "context": "CREATE TABLE table_name_43 (final_score VARCHAR, stadium VARCHAR, date VARCHAR)",
        "question": "What was the final score at texas stadium on September 17?"
    },
    {
        "answer": "SELECT opponent FROM table_name_7 WHERE attendance = \"20,456\"",
        "context": "CREATE TABLE table_name_7 (opponent VARCHAR, attendance VARCHAR)",
        "question": "What opponent has an attendance of 20,456?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_1 WHERE losses < 12 AND team_name = \"vancouver carlings\" AND games > 32",
        "context": "CREATE TABLE table_name_1 (points VARCHAR, games VARCHAR, losses VARCHAR, team_name VARCHAR)",
        "question": "What's the total number of points when the vancouver carlings have fewer than 12 losses and more than 32 games?"
    },
    {
        "answer": "SELECT COUNT(losses) FROM table_name_8 WHERE team_name = \"vancouver burrards\" AND season = \"1947\" AND games < 24",
        "context": "CREATE TABLE table_name_8 (losses VARCHAR, games VARCHAR, team_name VARCHAR, season VARCHAR)",
        "question": "What's the total losses for the vancouver burrards in the 1947 season with fewer than 24 games?"
    },
    {
        "answer": "SELECT club_province FROM table_name_93 WHERE position = \"wing\" AND caps < 24 AND player = \"sireli bobo\"",
        "context": "CREATE TABLE table_name_93 (club_province VARCHAR, player VARCHAR, position VARCHAR, caps VARCHAR)",
        "question": "What is the club/province of Sireli Bobo, who plays wing and has less than 24 caps?"
    },
    {
        "answer": "SELECT lifespan FROM table_name_21 WHERE party = \"democratic\" AND state = \"new york\" AND representative = \"terence j. quinn\"",
        "context": "CREATE TABLE table_name_21 (lifespan VARCHAR, representative VARCHAR, party VARCHAR, state VARCHAR)",
        "question": "What is the lifespan of the democratic party in New York, for which Terence J. Quinn is a representative?"
    },
    {
        "answer": "SELECT current_version FROM table_name_97 WHERE license = \"gpl v2\" AND name = \"mupen64plus\"",
        "context": "CREATE TABLE table_name_97 (current_version VARCHAR, license VARCHAR, name VARCHAR)",
        "question": "what is the current version of the name mupen64plus with gpl v2 license?"
    },
    {
        "answer": "SELECT text_background_colour FROM table_1000181_1 WHERE state_territory = \"Australian Capital Territory\"",
        "context": "CREATE TABLE table_1000181_1 (text_background_colour VARCHAR, state_territory VARCHAR)",
        "question": "Name the background colour for the Australian Capital Territory"
    },
    {
        "answer": "SELECT COUNT(fleet_series__quantity_) FROM table_10007452_3 WHERE fuel_propulsion = \"CNG\"",
        "context": "CREATE TABLE table_10007452_3 (fleet_series__quantity_ VARCHAR, fuel_propulsion VARCHAR)",
        "question": "how many times is the fuel propulsion is cng?"
    },
    {
        "answer": "SELECT SUM(year) FROM table_name_56 WHERE role = \"nan taylor, alias of nan ellis, aka mrs. andrews\" AND director = \"william keighley\"",
        "context": "CREATE TABLE table_name_56 (year INTEGER, role VARCHAR, director VARCHAR)",
        "question": "What year was the role nan taylor, alias of nan ellis, aka mrs. andrews and directed by William keighley?"
    },
    {
        "answer": "SELECT COUNT(order_year) FROM table_10007452_3 WHERE fleet_series__quantity_ = \"468-473 (6)\"",
        "context": "CREATE TABLE table_10007452_3 (order_year VARCHAR, fleet_series__quantity_ VARCHAR)",
        "question": "how many times is the fleet series (quantity) is 468-473 (6)?"
    },
    {
        "answer": "SELECT director FROM table_name_14 WHERE year = 1935 AND role = \"shelby barret wyatt\"",
        "context": "CREATE TABLE table_name_14 (director VARCHAR, year VARCHAR, role VARCHAR)",
        "question": "What director directed the role of shelby barret wyatt in 1935?"
    },
    {
        "answer": "SELECT athlete FROM table_name_40 WHERE year < 1984 AND event = \"800 m\"",
        "context": "CREATE TABLE table_name_40 (athlete VARCHAR, year VARCHAR, event VARCHAR)",
        "question": "Which athlete performed before 1984 in an 800 m event?"
    },
    {
        "answer": "SELECT score FROM table_name_16 WHERE competition = \"2002 tiger cup third/fourth place\"",
        "context": "CREATE TABLE table_name_16 (score VARCHAR, competition VARCHAR)",
        "question": "What is the score of the 2002 Tiger Cup third/fourth place match?"
    },
    {
        "answer": "SELECT competition FROM table_name_37 WHERE date = \"october 15, 2008\"",
        "context": "CREATE TABLE table_name_37 (competition VARCHAR, date VARCHAR)",
        "question": "What is the competition on October 15, 2008?"
    },
    {
        "answer": "SELECT MIN(no) FROM table_10015132_21 WHERE years_in_toronto = \"1998-2001\"",
        "context": "CREATE TABLE table_10015132_21 (no INTEGER, years_in_toronto VARCHAR)",
        "question": "What number is the player that played 1998-2001"
    },
    {
        "answer": "SELECT round_of_16 FROM table_name_75 WHERE quarterfinal = \"did not advance\" AND round_of_32 = \"n/a\"",
        "context": "CREATE TABLE table_name_75 (round_of_16 VARCHAR, quarterfinal VARCHAR, round_of_32 VARCHAR)",
        "question": "When the round of 32 was n/a and quarterfinal was did not advance, what was the round of 16?"
    },
    {
        "answer": "SELECT nationality FROM table_10015132_3 WHERE player = \"Dell Curry\"",
        "context": "CREATE TABLE table_10015132_3 (nationality VARCHAR, player VARCHAR)",
        "question": "What's Dell Curry nationality?"
    },
    {
        "answer": "SELECT AVG(pick) FROM table_name_14 WHERE position = \"pg\" AND round < 1",
        "context": "CREATE TABLE table_name_14 (pick INTEGER, position VARCHAR, round VARCHAR)",
        "question": "What is the average Pick with a Position of pg, and a Round less than 1?"
    },
    {
        "answer": "SELECT best_finish FROM table_10021158_3 WHERE scoring_rank = \"117\"",
        "context": "CREATE TABLE table_10021158_3 (best_finish VARCHAR, scoring_rank VARCHAR)",
        "question": "When the scoring rank was 117, what was the best finish?"
    },
    {
        "answer": "SELECT result FROM table_name_26 WHERE date = \"24 july 2010\"",
        "context": "CREATE TABLE table_name_26 (result VARCHAR, date VARCHAR)",
        "question": "Who won that game on 24 July 2010?"
    },
    {
        "answer": "SELECT MIN(total) FROM table_name_79 WHERE nation = \"slovenia\" AND gold < 0",
        "context": "CREATE TABLE table_name_79 (total INTEGER, nation VARCHAR, gold VARCHAR)",
        "question": "What is the lowest total from slovenia with a Gold smaller than 0?"
    },
    {
        "answer": "SELECT COUNT(grid) FROM table_name_60 WHERE time_retired = \"2:41:38.4\" AND laps > 40",
        "context": "CREATE TABLE table_name_60 (grid VARCHAR, time_retired VARCHAR, laps VARCHAR)",
        "question": "What is the sum number of grid where time/retired is 2:41:38.4 and laps were more than 40?"
    },
    {
        "answer": "SELECT nominated_work_title FROM table_name_52 WHERE result = \"won\" AND organisation = \"star awards\" AND award = \"top 10 most popular female artiste\" AND year > 2007",
        "context": "CREATE TABLE table_name_52 (nominated_work_title VARCHAR, year VARCHAR, award VARCHAR, result VARCHAR, organisation VARCHAR)",
        "question": "what is the nominated work title when the result is won, the organisation is star awards and the award is top 10 most popular female artiste in the year 2007?"
    },
    {
        "answer": "SELECT MIN(population_canada_2011_census) FROM table_1011906_1 WHERE seat_of_rcm = \"Cowansville\"",
        "context": "CREATE TABLE table_1011906_1 (population_canada_2011_census INTEGER, seat_of_rcm VARCHAR)",
        "question": "what is the minimum\u00a0population canada 2011 census\u00a0with\u00a0seat of rcm\u00a0being cowansville"
    },
    {
        "answer": "SELECT population FROM table_101196_1 WHERE irish_name = \"Leitir Meall\u00e1in\"",
        "context": "CREATE TABLE table_101196_1 (population VARCHAR, irish_name VARCHAR)",
        "question": "What is the population for the Irish Name Leitir meall\u00e1in?"
    },
    {
        "answer": "SELECT COUNT(english_name) FROM table_101196_1 WHERE irish_speakers = \"53%\" AND county = \"county Kerry\"",
        "context": "CREATE TABLE table_101196_1 (english_name VARCHAR, irish_speakers VARCHAR, county VARCHAR)",
        "question": "How many County Kerry have 53% Irish speakers?"
    },
    {
        "answer": "SELECT league_apps FROM table_name_35 WHERE league_goals < 2 AND position = \"df\" AND fa_cup_apps = \"5\"",
        "context": "CREATE TABLE table_name_35 (league_apps VARCHAR, fa_cup_apps VARCHAR, league_goals VARCHAR, position VARCHAR)",
        "question": "Tell me the league apps with league goals less than 2 and position of df and FA cup apps of 5"
    },
    {
        "answer": "SELECT COUNT(number_of_australians_involved) FROM table_10121127_1 WHERE un_operation_title = \"UN Commission on Korea\"",
        "context": "CREATE TABLE table_10121127_1 (number_of_australians_involved VARCHAR, un_operation_title VARCHAR)",
        "question": "How many Australians were in the UN commission on Korea?"
    },
    {
        "answer": "SELECT psip_short_name FROM table_name_58 WHERE network = \"ion life\"",
        "context": "CREATE TABLE table_name_58 (psip_short_name VARCHAR, network VARCHAR)",
        "question": "What is ion life network's PSIP Short Name?"
    },
    {
        "answer": "SELECT MIN(starts) FROM table_1012730_1 WHERE team_s_ = \"Hendrick Motorsports\"",
        "context": "CREATE TABLE table_1012730_1 (starts INTEGER, team_s_ VARCHAR)",
        "question": "How many starts did Hendrick motorsports have?"
    },
    {
        "answer": "SELECT club_team FROM table_name_72 WHERE nationality = \"canada\" AND overall = 188",
        "context": "CREATE TABLE table_name_72 (club_team VARCHAR, nationality VARCHAR, overall VARCHAR)",
        "question": "Name the club team for overall of 188 for canada"
    },
    {
        "answer": "SELECT position FROM table_1013129_10 WHERE player = \"Mark Polak\"",
        "context": "CREATE TABLE table_1013129_10 (position VARCHAR, player VARCHAR)",
        "question": "All players are position mark polak."
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_89 WHERE venue = \"brunswick street oval\"",
        "context": "CREATE TABLE table_name_89 (home_team VARCHAR, venue VARCHAR)",
        "question": "What did the home team at Brunswick Street Oval score?"
    },
    {
        "answer": "SELECT result FROM table_name_58 WHERE year = 1970",
        "context": "CREATE TABLE table_name_58 (result VARCHAR, year VARCHAR)",
        "question": "How did he place in 1970?"
    },
    {
        "answer": "SELECT arena FROM table_name_33 WHERE opponent = \"sharks\"",
        "context": "CREATE TABLE table_name_33 (arena VARCHAR, opponent VARCHAR)",
        "question": "In what arena was the game against the Sharks played?"
    },
    {
        "answer": "SELECT successor FROM table_1013168_2 WHERE date_of_successors_formal_installation = \"November 8, 1978\"",
        "context": "CREATE TABLE table_1013168_2 (successor VARCHAR, date_of_successors_formal_installation VARCHAR)",
        "question": "Who was the succesor that was formally installed on November 8, 1978?"
    },
    {
        "answer": "SELECT COUNT(goodman) FROM table_1014319_1 WHERE result = \"Second place\" AND dance_song = \"Samba / Young Hearts Run Free\"",
        "context": "CREATE TABLE table_1014319_1 (goodman VARCHAR, result VARCHAR, dance_song VARCHAR)",
        "question": "How many scores did Goodman give to \"samba / young hearts run free\", which was in second place?"
    },
    {
        "answer": "SELECT season FROM table_name_40 WHERE team = \"lotus\" AND champion = \"jimmy eriksson\"",
        "context": "CREATE TABLE table_name_40 (season VARCHAR, team VARCHAR, champion VARCHAR)",
        "question": "In which season did Jimmy Eriksson win the championship for Team Lotus?"
    },
    {
        "answer": "SELECT MAX(goals) FROM table_name_50 WHERE transfer_fee = \"\u00a30.8m\"",
        "context": "CREATE TABLE table_name_50 (goals INTEGER, transfer_fee VARCHAR)",
        "question": "What is the largest goal number when the transfer fee was \u00a30.8m?"
    },
    {
        "answer": "SELECT COUNT(capacity) FROM table_name_8 WHERE venue = \"nop aquatic centre\" AND established > 1929",
        "context": "CREATE TABLE table_name_8 (capacity VARCHAR, venue VARCHAR, established VARCHAR)",
        "question": "What is the capacity at the nop aquatic centre, established after 1929?"
    },
    {
        "answer": "SELECT points FROM table_10160447_1 WHERE driver = \"Rusty Wallace\"",
        "context": "CREATE TABLE table_10160447_1 (points VARCHAR, driver VARCHAR)",
        "question": "what's the\u00a0points\u00a0with\u00a0driver\u00a0 rusty wallace"
    },
    {
        "answer": "SELECT COUNT(position) FROM table_10160447_1 WHERE driver = \"Robby Gordon\"",
        "context": "CREATE TABLE table_10160447_1 (position VARCHAR, driver VARCHAR)",
        "question": "what's the total number of\u00a0position\u00a0with\u00a0driver\u00a0 robby gordon"
    },
    {
        "answer": "SELECT condition FROM table_name_75 WHERE prothrombin_time = \"unaffected\" AND bleeding_time = \"prolonged\" AND partial_thromboplastin_time = \"unaffected\" AND platelet_count = \"decreased or unaffected\"",
        "context": "CREATE TABLE table_name_75 (condition VARCHAR, platelet_count VARCHAR, partial_thromboplastin_time VARCHAR, prothrombin_time VARCHAR, bleeding_time VARCHAR)",
        "question": "I want to know the condition with Prothrombin time of unaffected and bleeding time of prolonged with partial thromboplastin time of unaffected with platelet count of decreased or unaffected"
    },
    {
        "answer": "SELECT condition FROM table_name_41 WHERE bleeding_time = \"prolonged\" AND platelet_count = \"decreased or unaffected\"",
        "context": "CREATE TABLE table_name_41 (condition VARCHAR, bleeding_time VARCHAR, platelet_count VARCHAR)",
        "question": "I want the condition that has a prolonged bleeding time and a platelet count of decreased or unaffected"
    },
    {
        "answer": "SELECT prothrombin_time FROM table_name_49 WHERE partial_thromboplastin_time = \"prolonged\" AND bleeding_time = \"unaffected\" AND condition = \"factor xii deficiency\"",
        "context": "CREATE TABLE table_name_49 (prothrombin_time VARCHAR, condition VARCHAR, partial_thromboplastin_time VARCHAR, bleeding_time VARCHAR)",
        "question": "I want the prothrombin time with a partial thromboplastin time of prolonged and unaffected bleeding time and factor xii deficiency for condition of factor"
    },
    {
        "answer": "SELECT condition FROM table_name_41 WHERE partial_thromboplastin_time = \"prolonged\" AND bleeding_time = \"unaffected\"",
        "context": "CREATE TABLE table_name_41 (condition VARCHAR, partial_thromboplastin_time VARCHAR, bleeding_time VARCHAR)",
        "question": "I want the condition that has a partial thromboplastin time of prolonged and unaffected bleeding time"
    },
    {
        "answer": "SELECT actors_name FROM table_10236830_4 WHERE nomination = \"Best Actor in a Supporting Role\" AND country = \"Serbia\"",
        "context": "CREATE TABLE table_10236830_4 (actors_name VARCHAR, nomination VARCHAR, country VARCHAR)",
        "question": "Which actor from Serbia was nominated for best actor in a supporting role?"
    },
    {
        "answer": "SELECT actors_name FROM table_10236830_4 WHERE country = \"Ukraine\"",
        "context": "CREATE TABLE table_10236830_4 (actors_name VARCHAR, country VARCHAR)",
        "question": "Which actors are from Ukraine?"
    },
    {
        "answer": "SELECT COUNT(nomination) FROM table_10236830_1 WHERE actors_name = \"Natalia Raskokoha\"",
        "context": "CREATE TABLE table_10236830_1 (nomination VARCHAR, actors_name VARCHAR)",
        "question": "What was the number of nominations for natalia raskokoha?"
    },
    {
        "answer": "SELECT episode__number FROM table_10269427_3 WHERE production_code = 227",
        "context": "CREATE TABLE table_10269427_3 (episode__number VARCHAR, production_code VARCHAR)",
        "question": "what is the episode # for production code 227"
    },
    {
        "answer": "SELECT representative FROM table_10284385_1 WHERE date_of_birth = \"January 31, 1866\"",
        "context": "CREATE TABLE table_10284385_1 (representative VARCHAR, date_of_birth VARCHAR)",
        "question": "Which representative has a birthday of January 31, 1866?"
    },
    {
        "answer": "SELECT shigella FROM table_10321124_1 WHERE yersinia = \"YscP\"",
        "context": "CREATE TABLE table_10321124_1 (shigella VARCHAR, yersinia VARCHAR)",
        "question": "what's the\u00a0shigella\u00a0with\u00a0yersinia\u00a0being yscp"
    },
    {
        "answer": "SELECT MIN(interview) FROM table_name_79 WHERE preliminaries < 9.4 AND evening_gown < 9.55 AND country = \"new york\" AND swimsuit > 9.18",
        "context": "CREATE TABLE table_name_79 (interview INTEGER, swimsuit VARCHAR, country VARCHAR, preliminaries VARCHAR, evening_gown VARCHAR)",
        "question": "What is the least score for interview with a preliminaries score less than 9.4, evening gown score less than 9.55, and swimsuit score more than 9.18 in New York?"
    },
    {
        "answer": "SELECT year__ceremony_ FROM table_10321805_1 WHERE original_title = \"La leggenda del santo bevitore\"",
        "context": "CREATE TABLE table_10321805_1 (year__ceremony_ VARCHAR, original_title VARCHAR)",
        "question": "What year was a movie with the original title La Leggenda del Santo Bevitore submitted?"
    },
    {
        "answer": "SELECT three FROM table_name_83 WHERE four = \"william prewett\" AND five = \"richard ellis\" AND seven = \"nicholas king\" AND date = \"5 november 1693\"",
        "context": "CREATE TABLE table_name_83 (three VARCHAR, date VARCHAR, seven VARCHAR, four VARCHAR, five VARCHAR)",
        "question": "Name the three for william prewett for four and five being richard ellis with seven being nicholas king on 5 november 1693"
    },
    {
        "answer": "SELECT overall FROM table_10360823_1 WHERE college = \"Traded to the Cleveland Browns\"",
        "context": "CREATE TABLE table_10360823_1 (overall VARCHAR, college VARCHAR)",
        "question": "Which overall pick was traded to the Cleveland Browns?"
    },
    {
        "answer": "SELECT franchise FROM table_name_29 WHERE percentage < 0.707 AND year > 1931 AND finish = \"won 1998 world series\"",
        "context": "CREATE TABLE table_name_29 (franchise VARCHAR, finish VARCHAR, percentage VARCHAR, year VARCHAR)",
        "question": "Which Franchise has a Percentage under 0.707, a Year larger than 1931, and the Finish was won 1998 World Series?"
    },
    {
        "answer": "SELECT AVG(silver) FROM table_name_62 WHERE total > 1 AND bronze = 2 AND nation = \"france\" AND gold > 0",
        "context": "CREATE TABLE table_name_62 (silver INTEGER, gold VARCHAR, nation VARCHAR, total VARCHAR, bronze VARCHAR)",
        "question": "Tell me the average silver for total more than 1 with bronze of 2 for france and gold more than 0"
    },
    {
        "answer": "SELECT player_name FROM table_10361625_1 WHERE position = \"Linebacker\" AND college = \"Illinois\"",
        "context": "CREATE TABLE table_10361625_1 (player_name VARCHAR, position VARCHAR, college VARCHAR)",
        "question": "What is the name of the linebacker at Illinois college?"
    },
    {
        "answer": "SELECT race FROM table_name_4 WHERE pole_position = \"alberto ascari\" AND winning_driver = \"alberto ascari\" AND fastest_lap = \"luigi villoresi\"",
        "context": "CREATE TABLE table_name_4 (race VARCHAR, fastest_lap VARCHAR, pole_position VARCHAR, winning_driver VARCHAR)",
        "question": "Which race did Alberto Ascari have both the Pole position and the win, but Luigi Villoresi set the fastest lap time?"
    },
    {
        "answer": "SELECT cerclis_id FROM table_name_98 WHERE listed = \"09/08/1983\" AND name = \"marshall landfill\"",
        "context": "CREATE TABLE table_name_98 (cerclis_id VARCHAR, listed VARCHAR, name VARCHAR)",
        "question": "What is the ID of marshall landfill on 09/08/1983?"
    },
    {
        "answer": "SELECT duration FROM table_10416547_1 WHERE major_instrument_s_ = \"Piano\" AND date = \"2004-02-03\"",
        "context": "CREATE TABLE table_10416547_1 (duration VARCHAR, major_instrument_s_ VARCHAR, date VARCHAR)",
        "question": "What is the duration of the song where the major instrument is the piano and the date is 2004-02-03?"
    },
    {
        "answer": "SELECT name FROM table_name_40 WHERE year_appointed = 2009 AND years_until_mandatory_retirement = \"13 years\"",
        "context": "CREATE TABLE table_name_40 (name VARCHAR, year_appointed VARCHAR, years_until_mandatory_retirement VARCHAR)",
        "question": "what name has an appointed year of 2009 and years until mandatory retirement of 13 years?"
    },
    {
        "answer": "SELECT position FROM table_name_16 WHERE height_in_ft = \"6-10\"",
        "context": "CREATE TABLE table_name_16 (position VARCHAR, height_in_ft VARCHAR)",
        "question": "What position does the player who is 6-10 play?"
    },
    {
        "answer": "SELECT builder FROM table_name_6 WHERE locomotive = \"2\"",
        "context": "CREATE TABLE table_name_6 (builder VARCHAR, locomotive VARCHAR)",
        "question": "What is the Builder of Locomotive 2?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_66 WHERE composition = \"99.99% silver\" AND issue_price = \"$94.95\"",
        "context": "CREATE TABLE table_name_66 (year INTEGER, composition VARCHAR, issue_price VARCHAR)",
        "question": "What is the earliest year when the composition is 99.99% silver and the issue price is $94.95?"
    },
    {
        "answer": "SELECT category FROM table_name_20 WHERE year > 2005 AND for_the_show = \"kasautii zindagii kay\"",
        "context": "CREATE TABLE table_name_20 (category VARCHAR, year VARCHAR, for_the_show VARCHAR)",
        "question": "What category was Kasautii Zindagii Kay nominated for after 2005?"
    },
    {
        "answer": "SELECT country FROM table_104858_1 WHERE year_current_scouting_organization_joined_wosm = \"1930\" AND year_member_organization_was_founded = \"1926\"",
        "context": "CREATE TABLE table_104858_1 (country VARCHAR, year_current_scouting_organization_joined_wosm VARCHAR, year_member_organization_was_founded VARCHAR)",
        "question": "Which countries have a scouting organization that was founded in 1926, and joined WOSM in 1930?"
    },
    {
        "answer": "SELECT team FROM table_name_61 WHERE year > 1990 AND chassis = \"jordan 193\"",
        "context": "CREATE TABLE table_name_61 (team VARCHAR, year VARCHAR, chassis VARCHAR)",
        "question": "What team has jordan 193 chassis after 1990?"
    },
    {
        "answer": "SELECT name_of_member_organization FROM table_104858_1 WHERE year_member_organization_was_founded = \"1972\" AND year_current_scouting_organization_joined_wosm = \"1977\"",
        "context": "CREATE TABLE table_104858_1 (name_of_member_organization VARCHAR, year_member_organization_was_founded VARCHAR, year_current_scouting_organization_joined_wosm VARCHAR)",
        "question": "Which organizations were founded in 1972, but became WOSM members until 1977?"
    },
    {
        "answer": "SELECT admits_boys_girls FROM table_104858_1 WHERE name_of_member_organization = \"The Scout Association of Hong Kong\"",
        "context": "CREATE TABLE table_104858_1 (admits_boys_girls VARCHAR, name_of_member_organization VARCHAR)",
        "question": "Does the Scout Association of Hong Kong admit boys, girls, or both?"
    },
    {
        "answer": "SELECT admits_boys_girls FROM table_104858_1 WHERE year_member_organization_was_founded = \"1912\" AND name_of_member_organization = \"The Ghana Scout Association\"",
        "context": "CREATE TABLE table_104858_1 (admits_boys_girls VARCHAR, year_member_organization_was_founded VARCHAR, name_of_member_organization VARCHAR)",
        "question": "Does the Ghana Scout Association (founded in 1912) admit boys, girls, or both?"
    },
    {
        "answer": "SELECT years_for_jazz FROM table_name_43 WHERE position = \"guard\" AND school_club_team = \"notre dame\"",
        "context": "CREATE TABLE table_name_43 (years_for_jazz VARCHAR, position VARCHAR, school_club_team VARCHAR)",
        "question": "At Position of guard, from the School/Club Team Notre Dame, how many Years for Jazz did that person play?"
    },
    {
        "answer": "SELECT print_resolution__dpi__resolution_is_given_in_dots_per_inch__dpi_ FROM table_10528691_4 WHERE introduction = \"December 2002\"",
        "context": "CREATE TABLE table_10528691_4 (print_resolution__dpi__resolution_is_given_in_dots_per_inch__dpi_ VARCHAR, introduction VARCHAR)",
        "question": "What is the print resolution (FPI) for December 2002?"
    },
    {
        "answer": "SELECT street_address FROM table_name_20 WHERE name = \"oliver building\"",
        "context": "CREATE TABLE table_name_20 (street_address VARCHAR, name VARCHAR)",
        "question": "What is the street address of Oliver Building?"
    },
    {
        "answer": "SELECT SUM(swing_to_gain) FROM table_name_48 WHERE constituency = \"caithness, sutherland and easter ross\"",
        "context": "CREATE TABLE table_name_48 (swing_to_gain INTEGER, constituency VARCHAR)",
        "question": "Can you tell me the sum of Swing to gain that has Constituency of caithness, sutherland and easter ross?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_59 WHERE laps = 75",
        "context": "CREATE TABLE table_name_59 (time_retired VARCHAR, laps VARCHAR)",
        "question": "What's the Time/Retired of Laps of 75?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_10566855_1 WHERE score = \"8.16 (64) \u2013 8.12 (60)\"",
        "context": "CREATE TABLE table_10566855_1 (attendance INTEGER, score VARCHAR)",
        "question": "what is the minimum attendance with score 8.16 (64) \u2013 8.12 (60)"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_79 WHERE away_team = \"north melbourne\"",
        "context": "CREATE TABLE table_name_79 (away_team VARCHAR)",
        "question": "What is the score for the away team of north melbourne?"
    },
    {
        "answer": "SELECT home_team FROM table_name_46 WHERE venue = \"victoria park\"",
        "context": "CREATE TABLE table_name_46 (home_team VARCHAR, venue VARCHAR)",
        "question": "Which home team plays at victoria park?"
    },
    {
        "answer": "SELECT competition FROM table_name_38 WHERE event = \"team all-round\" AND year < 1913",
        "context": "CREATE TABLE table_name_38 (competition VARCHAR, event VARCHAR, year VARCHAR)",
        "question": "what is the competition for the event team all-round in the year before 1913?"
    },
    {
        "answer": "SELECT mens_nickname FROM table_10577579_2 WHERE location = \"Jacksonville, Florida\"",
        "context": "CREATE TABLE table_10577579_2 (mens_nickname VARCHAR, location VARCHAR)",
        "question": "What is the Mens Nickname for the member location of Jacksonville, florida?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_10592536_8 WHERE date_of_appointment = \"28 November 2007\" AND replaced_by = \"Alex McLeish\"",
        "context": "CREATE TABLE table_10592536_8 (date_of_vacancy VARCHAR, date_of_appointment VARCHAR, replaced_by VARCHAR)",
        "question": "What is the date of vacancy when the date of appointment is 28 november 2007 and replaced by is alex mcleish?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_10592536_8 WHERE team = \"Manchester City\" AND replaced_by = \"Mark Hughes\"",
        "context": "CREATE TABLE table_10592536_8 (date_of_vacancy VARCHAR, team VARCHAR, replaced_by VARCHAR)",
        "question": "What is the date of vacancy when the team is manchester city and replaced by is mark hughes?"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_68 WHERE opponent = \"brewers\" AND score = \"6\u20133\"",
        "context": "CREATE TABLE table_name_68 (attendance INTEGER, opponent VARCHAR, score VARCHAR)",
        "question": "What is the average attendance when Brewers are the opponent with a score of 6\u20133?"
    },
    {
        "answer": "SELECT MAX(cuts_made) FROM table_name_18 WHERE events = 7 AND top_25 > 2",
        "context": "CREATE TABLE table_name_18 (cuts_made INTEGER, events VARCHAR, top_25 VARCHAR)",
        "question": "What is the most number of cuts made that had more than 7 events played and more than 2 top-25s?"
    },
    {
        "answer": "SELECT general_election FROM table_106367_2 WHERE result = \"PQ majority\" AND _percentage_of_popular_vote = \"44.75%\"",
        "context": "CREATE TABLE table_106367_2 (general_election VARCHAR, result VARCHAR, _percentage_of_popular_vote VARCHAR)",
        "question": "Which general election had a pq majority and a 44.75% of the popular vote?"
    },
    {
        "answer": "SELECT location FROM table_name_26 WHERE opponent = \"f\u00e1bio maldonado\"",
        "context": "CREATE TABLE table_name_26 (location VARCHAR, opponent VARCHAR)",
        "question": "What location was f\u00e1bio maldonado the opponent at?"
    },
    {
        "answer": "SELECT directed_by FROM table_10701133_1 WHERE us_viewers__million_ = \"12.90\"",
        "context": "CREATE TABLE table_10701133_1 (directed_by VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "Who directed the episode where u.s. viewers (million) is 12.90?"
    },
    {
        "answer": "SELECT tournament FROM table_name_69 WHERE 1972 = \"a\" AND 1975 = \"2r\"",
        "context": "CREATE TABLE table_name_69 (tournament VARCHAR)",
        "question": "What tournament is listed as A in 1972 and 2R in 1975?"
    },
    {
        "answer": "SELECT dvd_name FROM table_1067134_1 WHERE region_2 = \"August 22, 2010\"",
        "context": "CREATE TABLE table_1067134_1 (dvd_name VARCHAR, region_2 VARCHAR)",
        "question": "What DVD season/name for region 2 was released August 22, 2010?"
    },
    {
        "answer": "SELECT score_in_the_final FROM table_name_92 WHERE date > 1984 AND outcome = \"winner\" AND opponent_in_the_final = \"v\u00edctor pecci\"",
        "context": "CREATE TABLE table_name_92 (score_in_the_final VARCHAR, opponent_in_the_final VARCHAR, date VARCHAR, outcome VARCHAR)",
        "question": "What was the score in the final, that V\u00edctor Pecci was the opponent and winner after 1984?"
    },
    {
        "answer": "SELECT COUNT(pre_race_analyst) FROM table_10716893_3 WHERE lap_by_lap = \"Allen Bestwick\"",
        "context": "CREATE TABLE table_10716893_3 (pre_race_analyst VARCHAR, lap_by_lap VARCHAR)",
        "question": "How many pre-race analysis occur when Allen Bestwick does the lap-by-lap?"
    },
    {
        "answer": "SELECT score FROM table_name_80 WHERE tournament = \"sant cugat\" AND opponent_in_the_final = \"jose checa-calvo\"",
        "context": "CREATE TABLE table_name_80 (score VARCHAR, tournament VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "WHAT WAS THE SCORE IN THE FINAL PLAYED AGAINST JOSE CHECA-CALVO IN THE SANT CUGAT TOURNAMENT ?"
    },
    {
        "answer": "SELECT original_air_date FROM table_10718631_2 WHERE no_in_series = 113",
        "context": "CREATE TABLE table_10718631_2 (original_air_date VARCHAR, no_in_series VARCHAR)",
        "question": "When did the 113 episode air?"
    },
    {
        "answer": "SELECT MAX(no_in_season) FROM table_10718984_2 WHERE written_by = \"Marlene Meyer\" AND us_viewers__millions_ = \"20.49\"",
        "context": "CREATE TABLE table_10718984_2 (no_in_season INTEGER, written_by VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "What is the number in the season that Marlene Meyer wrote and 20.49 million people watched?"
    },
    {
        "answer": "SELECT original_air_date FROM table_10718984_2 WHERE no_in_season = 23",
        "context": "CREATE TABLE table_10718984_2 (original_air_date VARCHAR, no_in_season VARCHAR)",
        "question": "When did the no. 23 show originally air?"
    },
    {
        "answer": "SELECT transfer_fee FROM table_name_24 WHERE status = \"transfer\" AND country = \"fra\"",
        "context": "CREATE TABLE table_name_24 (transfer_fee VARCHAR, status VARCHAR, country VARCHAR)",
        "question": "Name the transfer fee for transfer status for fra"
    },
    {
        "answer": "SELECT team__league_ FROM table_name_85 WHERE reg_gp = 0 AND pick__number < 136 AND player = \"regan darby\"",
        "context": "CREATE TABLE table_name_85 (team__league_ VARCHAR, player VARCHAR, reg_gp VARCHAR, pick__number VARCHAR)",
        "question": "Which team has a Reg GP of 0, a pick number under 136 with a player named Regan Darby?"
    },
    {
        "answer": "SELECT COUNT(director) FROM table_10798928_1 WHERE film_title_used_in_nomination = \"Course Completed\"",
        "context": "CREATE TABLE table_10798928_1 (director VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "How many directors were there for the film Course Completed?"
    },
    {
        "answer": "SELECT COUNT(village__german_) FROM table_10797463_1 WHERE percent_of_slovenes_1991 = \"21.7%\"",
        "context": "CREATE TABLE table_10797463_1 (village__german_ VARCHAR, percent_of_slovenes_1991 VARCHAR)",
        "question": "How many villages had 21.7% of slovenes in 1991?"
    },
    {
        "answer": "SELECT high_points FROM table_10812293_4 WHERE date = \"December 20\"",
        "context": "CREATE TABLE table_10812293_4 (high_points VARCHAR, date VARCHAR)",
        "question": "For games on December 20, how many points did the scoring leaders get?"
    },
    {
        "answer": "SELECT SUM(played) FROM table_name_50 WHERE points > 71 AND losses < 8",
        "context": "CREATE TABLE table_name_50 (played INTEGER, points VARCHAR, losses VARCHAR)",
        "question": "What is the number of played games a club with more than 71 points and less than 8 losses has?"
    },
    {
        "answer": "SELECT MIN(goal_difference) FROM table_name_94 WHERE goals_against = 61 AND draws < 11",
        "context": "CREATE TABLE table_name_94 (goal_difference INTEGER, goals_against VARCHAR, draws VARCHAR)",
        "question": "What is the lowest goal difference a club with 61 goals against and less than 11 draws has?"
    },
    {
        "answer": "SELECT AVG(crowd) FROM table_name_59 WHERE home_team = \"essendon\"",
        "context": "CREATE TABLE table_name_59 (crowd INTEGER, home_team VARCHAR)",
        "question": "Which average Crowd has a Home team of essendon?"
    },
    {
        "answer": "SELECT player FROM table_name_83 WHERE college = \"arizona\"",
        "context": "CREATE TABLE table_name_83 (player VARCHAR, college VARCHAR)",
        "question": "Which player has a College of arizona?"
    },
    {
        "answer": "SELECT MAX(no_in_season) FROM table_10842344_1 WHERE us_viewers__millions_ = \"14.37\"",
        "context": "CREATE TABLE table_10842344_1 (no_in_season INTEGER, us_viewers__millions_ VARCHAR)",
        "question": "What's the latest episode in a season where the U.S. viewers totaled 14.37 million?"
    },
    {
        "answer": "SELECT SUM(long) FROM table_name_12 WHERE yards < 197 AND player = \"matt nagy\"",
        "context": "CREATE TABLE table_name_12 (long INTEGER, yards VARCHAR, player VARCHAR)",
        "question": "Name the sum of Long for yards less than 197 and players of matt nagy"
    },
    {
        "answer": "SELECT MAX(crowd) FROM table_name_10 WHERE away_team = \"north melbourne\"",
        "context": "CREATE TABLE table_name_10 (crowd INTEGER, away_team VARCHAR)",
        "question": "What is the highest crowd with north melbourne as away team?"
    },
    {
        "answer": "SELECT COUNT(area__km\u00b2_) FROM table_name_85 WHERE capital = \"matanzas\" AND population__2005_ < 670427",
        "context": "CREATE TABLE table_name_85 (area__km\u00b2_ VARCHAR, capital VARCHAR, population__2005_ VARCHAR)",
        "question": "How many regions have a capital of matanzas and a 2005 population under 670427?"
    },
    {
        "answer": "SELECT production_code FROM table_10935548_1 WHERE written_by = \"Jos\u00e9 Molina\" AND original_air_date = \"October 12, 2004\"",
        "context": "CREATE TABLE table_10935548_1 (production_code VARCHAR, written_by VARCHAR, original_air_date VARCHAR)",
        "question": "What is the production code of the episode written by Jos\u00e9 Molina that aired on October 12, 2004?"
    },
    {
        "answer": "SELECT MAX(floors) FROM table_name_52 WHERE street_address = \"800 boylston street\"",
        "context": "CREATE TABLE table_name_52 (floors INTEGER, street_address VARCHAR)",
        "question": "How many floors does the building on 800 Boylston Street have?"
    },
    {
        "answer": "SELECT MAX(number_of_jews__wjc_) FROM table_name_1 WHERE rank___wjc__ = 6 AND rank__arda_ > 8",
        "context": "CREATE TABLE table_name_1 (number_of_jews__wjc_ INTEGER, rank___wjc__ VARCHAR, rank__arda_ VARCHAR)",
        "question": "What was the highest number of WJC Jews that had a WJC rank of 6 and a ARDA rank of more than 8?"
    },
    {
        "answer": "SELECT SUM(number_of_jews__wjc_) FROM table_name_73 WHERE metro_area = \"los angeles\" AND rank__arda_ > 2",
        "context": "CREATE TABLE table_name_73 (number_of_jews__wjc_ INTEGER, metro_area VARCHAR, rank__arda_ VARCHAR)",
        "question": "How many number of WJC Jews in the Los Angeles Metro Area has a ARDA rank of more than 2?"
    },
    {
        "answer": "SELECT train_no FROM table_name_87 WHERE origin = \"secunderabad junction\"",
        "context": "CREATE TABLE table_name_87 (train_no VARCHAR, origin VARCHAR)",
        "question": "What is number of the train that originated in Secunderabad Junction?"
    },
    {
        "answer": "SELECT transfer_window FROM table_name_54 WHERE transfer_fee = \"free\" AND moving_to = \"derby county\"",
        "context": "CREATE TABLE table_name_54 (transfer_window VARCHAR, transfer_fee VARCHAR, moving_to VARCHAR)",
        "question": "What Transfer window that has a Transfer fee of free, with a Moving to of derby county?"
    },
    {
        "answer": "SELECT crowd FROM table_name_59 WHERE away_team = \"footscray\"",
        "context": "CREATE TABLE table_name_59 (crowd VARCHAR, away_team VARCHAR)",
        "question": "What was the crowd size for the away team footscray?"
    },
    {
        "answer": "SELECT bleeding_time FROM table_1099080_1 WHERE partial_thromboplastin_time = \"Unaffected\" AND platelet_count = \"Unaffected\"",
        "context": "CREATE TABLE table_1099080_1 (bleeding_time VARCHAR, partial_thromboplastin_time VARCHAR, platelet_count VARCHAR)",
        "question": "What were the bleeding times when both the platelet count was unaffected and the partial thromboplastin time was unaffected"
    },
    {
        "answer": "SELECT MIN(bronze) FROM table_name_86 WHERE nation = \"andorra\" AND total > 6",
        "context": "CREATE TABLE table_name_86 (bronze INTEGER, nation VARCHAR, total VARCHAR)",
        "question": "What is the least amount of bronze Andorra, who has more than 6 total medals, has?"
    },
    {
        "answer": "SELECT fastest_lap FROM table_11056278_3 WHERE race_name = \"Tenneco Automotive Grand Prix of Detroit\"",
        "context": "CREATE TABLE table_11056278_3 (fastest_lap VARCHAR, race_name VARCHAR)",
        "question": "Who drove the fastest lap at the Tenneco Automotive Grand Prix of Detroit?"
    },
    {
        "answer": "SELECT COUNT(crowd) FROM table_name_95 WHERE home_team = \"footscray\"",
        "context": "CREATE TABLE table_name_95 (crowd VARCHAR, home_team VARCHAR)",
        "question": "What was the total crowd size for the him team footscray?"
    },
    {
        "answer": "SELECT team FROM table_11094950_1 WHERE division = \"Central\" AND location = \"Livonia\"",
        "context": "CREATE TABLE table_11094950_1 (team VARCHAR, division VARCHAR, location VARCHAR)",
        "question": "Which teams were in the central division and located in livonia?"
    },
    {
        "answer": "SELECT MIN(quantity) FROM table_name_72 WHERE manufacturer = \"peckett and sons\" AND gwr_nos = \"696, 779, 93 5\"",
        "context": "CREATE TABLE table_name_72 (quantity INTEGER, manufacturer VARCHAR, gwr_nos VARCHAR)",
        "question": "What is the lowest quantity for GWR Nos. 696, 779, 93 5 from the manufacturer Peckett and Sons?"
    },
    {
        "answer": "SELECT title FROM table_11111116_7 WHERE written_by = \"Ken LaZebnik\"",
        "context": "CREATE TABLE table_11111116_7 (title VARCHAR, written_by VARCHAR)",
        "question": "What was the titles of the episodes written by ken lazebnik?"
    },
    {
        "answer": "SELECT home_team FROM table_name_19 WHERE venue = \"junction oval\"",
        "context": "CREATE TABLE table_name_19 (home_team VARCHAR, venue VARCHAR)",
        "question": "What is the Home team score at junction oval?"
    },
    {
        "answer": "SELECT audition_city FROM table_11129123_1 WHERE callback_venue = \"Charleston Area Convention Center\"",
        "context": "CREATE TABLE table_11129123_1 (audition_city VARCHAR, callback_venue VARCHAR)",
        "question": "Which city had the charleston area convention center as its callback location"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_11206916_2 WHERE outgoing_manager = \"Campbell Money\"",
        "context": "CREATE TABLE table_11206916_2 (date_of_appointment VARCHAR, outgoing_manager VARCHAR)",
        "question": "What is the date of appointment for outgoing manager Campbell Money"
    },
    {
        "answer": "SELECT champion FROM table_11214772_1 WHERE semi_finalist__number2 = \"NA\" AND location = \"Morrisville, NC\"",
        "context": "CREATE TABLE table_11214772_1 (champion VARCHAR, semi_finalist__number2 VARCHAR, location VARCHAR)",
        "question": " who is the\u00a0champion\u00a0where\u00a0semi-finalist #2\u00a0is na and\u00a0location\u00a0is morrisville, nc"
    },
    {
        "answer": "SELECT COUNT(diff) FROM table_name_50 WHERE lost < 5 AND points < 32",
        "context": "CREATE TABLE table_name_50 (diff VARCHAR, lost VARCHAR, points VARCHAR)",
        "question": "What is the difference with a loss smaller than 5 and points lower than 32?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_7 WHERE venue = \"victoria park\"",
        "context": "CREATE TABLE table_name_7 (home_team VARCHAR, venue VARCHAR)",
        "question": "What is the home team score when they played at Victoria Park?"
    },
    {
        "answer": "SELECT numer_of_jamaicans_granted_british_citizenship FROM table_11214212_1 WHERE naturalisation_by_residence = 927",
        "context": "CREATE TABLE table_11214212_1 (numer_of_jamaicans_granted_british_citizenship VARCHAR, naturalisation_by_residence VARCHAR)",
        "question": "what's the\u00a0numer of jamaicans granted british  citizenship\u00a0with\u00a0naturalisation by residence\u00a0being 927"
    },
    {
        "answer": "SELECT COUNT(format) FROM table_11222744_2 WHERE title = \"Beginning Callanetics\"",
        "context": "CREATE TABLE table_11222744_2 (format VARCHAR, title VARCHAR)",
        "question": "where title is beginning callanetics , what is the total of format ?"
    },
    {
        "answer": "SELECT genre FROM table_name_30 WHERE english_title__chinese_title_ = \"revolving doors of vengeance \u9152\u5e97\u98a8\u96f2\"",
        "context": "CREATE TABLE table_name_30 (genre VARCHAR, english_title__chinese_title_ VARCHAR)",
        "question": "What genre is revolving doors of vengeance \u9152\u5e97\u98a8\u96f2?"
    },
    {
        "answer": "SELECT english_title__chinese_title_ FROM table_name_82 WHERE genre = \"modern drama\" AND number_of_episodes = 20 AND airing_date = \"26 sep- 21 oct\"",
        "context": "CREATE TABLE table_name_82 (english_title__chinese_title_ VARCHAR, airing_date VARCHAR, genre VARCHAR, number_of_episodes VARCHAR)",
        "question": "What is the english title of the modern drama, episode 20, that airs on 26 sep- 21 oct?"
    },
    {
        "answer": "SELECT catalogue FROM table_name_47 WHERE date = \"14 november 2003\" AND format = \"compact disc\"",
        "context": "CREATE TABLE table_name_47 (catalogue VARCHAR, date VARCHAR, format VARCHAR)",
        "question": "What Catalogue is Dated 14 november 2003, with the Format compact disc?"
    },
    {
        "answer": "SELECT compression_ratio FROM table_1123802_1 WHERE engine = \"Wasp Jr. T1B2\"",
        "context": "CREATE TABLE table_1123802_1 (compression_ratio VARCHAR, engine VARCHAR)",
        "question": "What was the compression ration when the engine was Wasp Jr. T1B2?"
    },
    {
        "answer": "SELECT label FROM table_name_83 WHERE catalogue = \"tojp 60121-22\"",
        "context": "CREATE TABLE table_name_83 (label VARCHAR, catalogue VARCHAR)",
        "question": "What Label was Catalogued tojp 60121-22?"
    },
    {
        "answer": "SELECT COUNT(season) FROM table_11236195_5 WHERE winningteam = \"Canterbury Bulldogs (8)\"",
        "context": "CREATE TABLE table_11236195_5 (season VARCHAR, winningteam VARCHAR)",
        "question": "How many seasons did the canterbury bulldogs (8) win?"
    },
    {
        "answer": "SELECT last_appearance FROM table_11240028_3 WHERE relationship = \"Late wife of Mac Taylor\"",
        "context": "CREATE TABLE table_11240028_3 (last_appearance VARCHAR, relationship VARCHAR)",
        "question": "What episode had the last appearances of the late wife of mac taylor?"
    },
    {
        "answer": "SELECT last_appearance FROM table_11240028_3 WHERE character = \"Rikki Sandoval\"",
        "context": "CREATE TABLE table_11240028_3 (last_appearance VARCHAR, character VARCHAR)",
        "question": "What episode was the last appearance of the character, rikki sandoval?"
    },
    {
        "answer": "SELECT COUNT(duration) FROM table_11240028_1 WHERE portrayed_by = \"Robert Joy\"",
        "context": "CREATE TABLE table_11240028_1 (duration VARCHAR, portrayed_by VARCHAR)",
        "question": "What was the duration of Robert Joy's portrayal?"
    },
    {
        "answer": "SELECT carbon_dioxide_emissions_per_year__10_6_tons___2006_ FROM table_11251601_2 WHERE carbon_dioxide_emissions_per_year__tons_per_person___2007_ = \"1.4\"",
        "context": "CREATE TABLE table_11251601_2 (carbon_dioxide_emissions_per_year__10_6_tons___2006_ VARCHAR, carbon_dioxide_emissions_per_year__tons_per_person___2007_ VARCHAR)",
        "question": "WHAT WAS THE AMOUNT OF CARBON DIOXIDE EMISSIONS  IN 2006 IN THE COUNTRY WHOSE  CO2 EMISSIONS (TONS PER PERSON)  REACHED 1.4 IN 2OO7?"
    },
    {
        "answer": "SELECT candidate_name FROM table_name_66 WHERE votes > 1853 AND religion = \"\u262a\"",
        "context": "CREATE TABLE table_name_66 (candidate_name VARCHAR, votes VARCHAR, religion VARCHAR)",
        "question": "Who has a religion of \u262a and more than 1853 votes?"
    },
    {
        "answer": "SELECT MIN(track) FROM table_name_64 WHERE song_title = \"just a little bit\"",
        "context": "CREATE TABLE table_name_64 (track INTEGER, song_title VARCHAR)",
        "question": "Which track has a title : Just a little bit"
    },
    {
        "answer": "SELECT MIN(league) AS Cup FROM table_name_88 WHERE league > 1 AND name = \"brian deane\" AND fa_cup < 1",
        "context": "CREATE TABLE table_name_88 (league INTEGER, fa_cup VARCHAR, name VARCHAR)",
        "question": "What is the smallest value for League Cup when the League number is greater than 1, no FA Cups, and Brian Deane scoring?"
    },
    {
        "answer": "SELECT method FROM table_name_44 WHERE res = \"win\" AND time = \"4:36\"",
        "context": "CREATE TABLE table_name_44 (method VARCHAR, res VARCHAR, time VARCHAR)",
        "question": "What method resulted in a win and a time of 4:36?"
    },
    {
        "answer": "SELECT venue FROM table_name_55 WHERE sport = \"soccer\" AND club = \"pennsylvania stoners\"",
        "context": "CREATE TABLE table_name_55 (venue VARCHAR, sport VARCHAR, club VARCHAR)",
        "question": "What venue does the soccer team Pennsylvania Stoners play in?"
    },
    {
        "answer": "SELECT batting_team FROM table_11303072_5 WHERE batting_partners = \"Thilina Kandamby and Rangana Herath\"",
        "context": "CREATE TABLE table_11303072_5 (batting_team VARCHAR, batting_partners VARCHAR)",
        "question": "What is the batting team with the batting partnets of thilina kandamby and rangana herath?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_64 WHERE opponent = \"chicago bears\"",
        "context": "CREATE TABLE table_name_64 (attendance INTEGER, opponent VARCHAR)",
        "question": "I want the greatest attendance when the opponent is the chicago bears"
    },
    {
        "answer": "SELECT COUNT(copies_sold) FROM table_name_43 WHERE first_week_sales = 206 OFFSET 030",
        "context": "CREATE TABLE table_name_43 (copies_sold VARCHAR, first_week_sales VARCHAR)",
        "question": "What's the total number of copies sold for the single that sold 206,030 in the first week?"
    },
    {
        "answer": "SELECT COUNT(crew) FROM table_11318462_5 WHERE u15_3rd_iv = \"BGS\" AND u15_1st_iv = \"ACGS\" AND open_1st_viii = \"ACGS\"",
        "context": "CREATE TABLE table_11318462_5 (crew VARCHAR, open_1st_viii VARCHAR, u15_3rd_iv VARCHAR, u15_1st_iv VARCHAR)",
        "question": "how many crew had u15 3rd iv being bgs and u15 1st iv being acgs and open 1st viii being acgs"
    },
    {
        "answer": "SELECT location FROM table_11318462_29 WHERE school = \"Brisbane Girls' Grammar school\"",
        "context": "CREATE TABLE table_11318462_29 (location VARCHAR, school VARCHAR)",
        "question": "What is the location of the school named Brisbane Girls' Grammar School?"
    },
    {
        "answer": "SELECT rd FROM table_1132568_3 WHERE fastest_lap = \"Michael Schumacher\" AND constructor = \"Ferrari\" AND pole_position = \"Michael Schumacher\"",
        "context": "CREATE TABLE table_1132568_3 (rd VARCHAR, pole_position VARCHAR, fastest_lap VARCHAR, constructor VARCHAR)",
        "question": "What are the numbers for the raceways that are constructed by Ferrari, with Michael Schumacher holding the fastest lap and pole position?"
    },
    {
        "answer": "SELECT MIN(rank) FROM table_name_99 WHERE year = 2013 AND studio_s_ = \"red chillies entertainment\"",
        "context": "CREATE TABLE table_name_99 (rank INTEGER, year VARCHAR, studio_s_ VARCHAR)",
        "question": "Name the lowest rank for red chillies entertainment for 2013"
    },
    {
        "answer": "SELECT issue_price FROM table_name_46 WHERE artist = \"john mardon\" AND year = 2000 AND mintage = \"included in steam buggy\"",
        "context": "CREATE TABLE table_name_46 (issue_price VARCHAR, mintage VARCHAR, artist VARCHAR, year VARCHAR)",
        "question": "What is the issue price of a Year 2000 coin by artist John Mardon of the Included in Steam Buggy mintage."
    },
    {
        "answer": "SELECT artist FROM table_name_81 WHERE year < 2002 AND mintage = \"41,828\"",
        "context": "CREATE TABLE table_name_81 (artist VARCHAR, year VARCHAR, mintage VARCHAR)",
        "question": "What artist had a mintage of 41,828 before year 2002?"
    },
    {
        "answer": "SELECT Control AS trailers FROM table_name_45 WHERE year = \"1931\" AND builder = \"grcw\"",
        "context": "CREATE TABLE table_name_45 (Control VARCHAR, year VARCHAR, builder VARCHAR)",
        "question": "I want the control trailers for 1931 with builder of grcw"
    },
    {
        "answer": "SELECT COUNT(group_b_winner) FROM table_1137142_1 WHERE group_c_winner = \"Francavilla\"",
        "context": "CREATE TABLE table_1137142_1 (group_b_winner VARCHAR, group_c_winner VARCHAR)",
        "question": "What is the number of group b winner for francavilla?"
    },
    {
        "answer": "SELECT date FROM table_name_20 WHERE competition = \"2002 african cup of nations\"",
        "context": "CREATE TABLE table_name_20 (date VARCHAR, competition VARCHAR)",
        "question": "The 2002 African Cup of Nations was held on what date?"
    },
    {
        "answer": "SELECT winning_constructor FROM table_1137704_2 WHERE fastest_lap = \"Riccardo Patrese\" AND location = \"Interlagos\"",
        "context": "CREATE TABLE table_1137704_2 (winning_constructor VARCHAR, fastest_lap VARCHAR, location VARCHAR)",
        "question": "who are all the\u00a0winning constructors\u00a0where\u00a0fastest lap\u00a0is riccardo patrese and\u00a0location\u00a0is interlagos"
    },
    {
        "answer": "SELECT report FROM table_1137704_2 WHERE winning_constructor = \"Williams - Renault\" AND grand_prix = \"South African grand_prix\"",
        "context": "CREATE TABLE table_1137704_2 (report VARCHAR, winning_constructor VARCHAR, grand_prix VARCHAR)",
        "question": "what are all the\u00a0report\u00a0where\u00a0winning constructor\u00a0is williams - renault and\u00a0grand prix\u00a0is south african grand prix"
    },
    {
        "answer": "SELECT COUNT(date) FROM table_1137704_2 WHERE grand_prix = \"Portuguese grand_prix\"",
        "context": "CREATE TABLE table_1137704_2 (date VARCHAR, grand_prix VARCHAR)",
        "question": "what of the total number of\u00a0date\u00a0where\u00a0grand prix\u00a0is portuguese grand prix"
    },
    {
        "answer": "SELECT MIN(rd) FROM table_1137718_2 WHERE date = \"22 October\"",
        "context": "CREATE TABLE table_1137718_2 (rd INTEGER, date VARCHAR)",
        "question": "Which rd. occurred on 22 October?"
    },
    {
        "answer": "SELECT MIN(rd) FROM table_1137718_2 WHERE location = \"Hockenheimring\"",
        "context": "CREATE TABLE table_1137718_2 (rd INTEGER, location VARCHAR)",
        "question": "Which rd. took place at Hockenheimring?"
    },
    {
        "answer": "SELECT japanese_orthography FROM table_11390711_4 WHERE english_name = \"National Farmers Academy\"",
        "context": "CREATE TABLE table_11390711_4 (japanese_orthography VARCHAR, english_name VARCHAR)",
        "question": "What is the Japanese orthography for the English name National Farmers Academy?"
    },
    {
        "answer": "SELECT venue FROM table_name_67 WHERE home_team = \"melbourne\"",
        "context": "CREATE TABLE table_name_67 (venue VARCHAR, home_team VARCHAR)",
        "question": "what is the venue when the home team is melbourne?"
    },
    {
        "answer": "SELECT constructor FROM table_1139087_2 WHERE grand_prix = \"Brazilian grand_prix\"",
        "context": "CREATE TABLE table_1139087_2 (constructor VARCHAR, grand_prix VARCHAR)",
        "question": "What is the make of the car that won the brazilian grand prix?"
    },
    {
        "answer": "SELECT grand_finalist FROM table_1139835_3 WHERE winners = \"Collingwood\"",
        "context": "CREATE TABLE table_1139835_3 (grand_finalist VARCHAR, winners VARCHAR)",
        "question": " what's the\u00a0grand finalist\u00a0where\u00a0winners\u00a0is collingwood"
    },
    {
        "answer": "SELECT winners FROM table_name_44 WHERE runners_up = \"lillestr\u00f8m\" AND third = \"lyn\"",
        "context": "CREATE TABLE table_name_44 (winners VARCHAR, runners_up VARCHAR, third VARCHAR)",
        "question": "Who was the winner in the competition in which Lyn took third place and Lillestr\u00f8m was the runner-up?"
    },
    {
        "answer": "SELECT date FROM table_name_12 WHERE race = \"italian grand prix\"",
        "context": "CREATE TABLE table_name_12 (date VARCHAR, race VARCHAR)",
        "question": "What date was the Italian Grand Prix?"
    },
    {
        "answer": "SELECT pole_position FROM table_1140074_2 WHERE location = \"Hockenheimring\"",
        "context": "CREATE TABLE table_1140074_2 (pole_position VARCHAR, location VARCHAR)",
        "question": "what's the\u00a0pole position\u00a0with\u00a0location\u00a0being hockenheimring"
    },
    {
        "answer": "SELECT fastest_lap FROM table_1140077_2 WHERE pole_position = \"Gilles Villeneuve\"",
        "context": "CREATE TABLE table_1140077_2 (fastest_lap VARCHAR, pole_position VARCHAR)",
        "question": "What is the fastest lap with pole position of gilles villeneuve?"
    },
    {
        "answer": "SELECT SUM(events) FROM table_name_67 WHERE rank > 3 AND player = \"orville moody\"",
        "context": "CREATE TABLE table_name_67 (events INTEGER, rank VARCHAR, player VARCHAR)",
        "question": "How many events for orville moody, ranking below 3?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_74 WHERE home_team = \"geelong\"",
        "context": "CREATE TABLE table_name_74 (home_team VARCHAR)",
        "question": "What is the score of the Home team of geelong?"
    },
    {
        "answer": "SELECT hot_digital_songs_reaction FROM table_name_89 WHERE hot_100_reaction = \"2 (+1)\"",
        "context": "CREATE TABLE table_name_89 (hot_digital_songs_reaction VARCHAR, hot_100_reaction VARCHAR)",
        "question": "What digital reaction has hot 100 reaction of 2 (+1)?"
    },
    {
        "answer": "SELECT hot_digital_songs_reaction FROM table_name_20 WHERE week = \"top 5\" AND performer_s_ = \"taylor hicks\"",
        "context": "CREATE TABLE table_name_20 (hot_digital_songs_reaction VARCHAR, week VARCHAR, performer_s_ VARCHAR)",
        "question": "What is the digital reaction for week of top 5 for Taylor Hicks?"
    },
    {
        "answer": "SELECT COUNT(report) FROM table_1140111_5 WHERE winning_driver = \"Juan Manuel Fangio\"",
        "context": "CREATE TABLE table_1140111_5 (report VARCHAR, winning_driver VARCHAR)",
        "question": "How many different kinds of reports are there for races that Juan Manuel Fangio won?"
    },
    {
        "answer": "SELECT format FROM table_name_92 WHERE region = \"united states\" AND date = \"august 11, 2009\"",
        "context": "CREATE TABLE table_name_92 (format VARCHAR, region VARCHAR, date VARCHAR)",
        "question": "Which format had a United States region and a date of August 11, 2009?"
    },
    {
        "answer": "SELECT original_air_date FROM table_11404452_1 WHERE us_viewers__millions_ = \"12.81\"",
        "context": "CREATE TABLE table_11404452_1 (original_air_date VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "What is the original air date when there were 12.81 million u.s viewers?"
    },
    {
        "answer": "SELECT COUNT(opponent) FROM table_11465521_2 WHERE attendance = \"64,087\"",
        "context": "CREATE TABLE table_11465521_2 (opponent VARCHAR, attendance VARCHAR)",
        "question": "How many opponents were there at the game with 64,087 people in attendance?"
    },
    {
        "answer": "SELECT constructor FROM table_name_52 WHERE laps < 17 AND grid > 11 AND driver = \"alan jones\"",
        "context": "CREATE TABLE table_name_52 (constructor VARCHAR, driver VARCHAR, laps VARCHAR, grid VARCHAR)",
        "question": "Tell me constructor for Laps less than 17 and Grid more than 11 for alan jones"
    },
    {
        "answer": "SELECT engine_type FROM table_1147705_1 WHERE max_torque_at_rpm = \"N\u00b7m ( lbf\u00b7ft ) @ 4,800\"",
        "context": "CREATE TABLE table_1147705_1 (engine_type VARCHAR, max_torque_at_rpm VARCHAR)",
        "question": "What is the engine type when the max torque at rpm is n\u00b7m ( lbf\u00b7ft ) @ 4,800 Answers:?"
    },
    {
        "answer": "SELECT constructor FROM table_name_39 WHERE time_retired = \"brakes\" AND grid < 14",
        "context": "CREATE TABLE table_name_39 (constructor VARCHAR, time_retired VARCHAR, grid VARCHAR)",
        "question": "I want the constructor for brakes and grid less than 14"
    },
    {
        "answer": "SELECT chassis FROM table_name_41 WHERE entrant = \"larrousse f1\" AND driver = \"aguri suzuki\"",
        "context": "CREATE TABLE table_name_41 (chassis VARCHAR, entrant VARCHAR, driver VARCHAR)",
        "question": "Which chassis did Aguri Suzuki drive with an entrant of Larrousse F1?"
    },
    {
        "answer": "SELECT entrant FROM table_name_70 WHERE rounds = \"16\" AND constructor = \"ferrari\"",
        "context": "CREATE TABLE table_name_70 (entrant VARCHAR, rounds VARCHAR, constructor VARCHAR)",
        "question": "What was the entrant in round 16 were Ferrari was the constructor?"
    },
    {
        "answer": "SELECT model_name FROM table_1147701_5 WHERE engine_code = \"D5244 T7\"",
        "context": "CREATE TABLE table_1147701_5 (model_name VARCHAR, engine_code VARCHAR)",
        "question": "What is the model of the engine d5244 t7?"
    },
    {
        "answer": "SELECT result FROM table_name_65 WHERE notes = \"quarter-finals\" AND event = \"adcc 2001 absolute\"",
        "context": "CREATE TABLE table_name_65 (result VARCHAR, notes VARCHAR, event VARCHAR)",
        "question": "Name the result with notes of quarter-finals and event of adcc 2001 absolute"
    },
    {
        "answer": "SELECT MIN(no) FROM table_11545282_18 WHERE years_for_jazz = \"1985-88\"",
        "context": "CREATE TABLE table_11545282_18 (no INTEGER, years_for_jazz VARCHAR)",
        "question": "What is the number for years 1985-88"
    },
    {
        "answer": "SELECT position FROM table_11545282_18 WHERE player = \"DeShawn Stevenson\"",
        "context": "CREATE TABLE table_11545282_18 (position VARCHAR, player VARCHAR)",
        "question": "Which position does Deshawn Stevenson play?"
    },
    {
        "answer": "SELECT host FROM table_name_30 WHERE ratings = \"9.6/26\"",
        "context": "CREATE TABLE table_name_30 (host VARCHAR, ratings VARCHAR)",
        "question": "Who was the host that garnered ratings of 9.6/26?"
    },
    {
        "answer": "SELECT ratings FROM table_name_83 WHERE host = \"chris economaki\" AND viewers = \"12.3 million\"",
        "context": "CREATE TABLE table_name_83 (ratings VARCHAR, host VARCHAR, viewers VARCHAR)",
        "question": "What were the ratings for host Chris Economaki who had 12.3 million viewers?"
    },
    {
        "answer": "SELECT years_for_jazz FROM table_11545282_4 WHERE no = 54",
        "context": "CREATE TABLE table_11545282_4 (years_for_jazz VARCHAR, no VARCHAR)",
        "question": "What years did number 54 play for the jazz"
    },
    {
        "answer": "SELECT COUNT(school_club_team) FROM table_11545282_4 WHERE player = \"Darryl Dawkins\"",
        "context": "CREATE TABLE table_11545282_4 (school_club_team VARCHAR, player VARCHAR)",
        "question": "How many schools did darryl dawkins play for"
    },
    {
        "answer": "SELECT pole_position FROM table_name_30 WHERE fastest_lap = \"rubens barrichello\" AND round > 11",
        "context": "CREATE TABLE table_name_30 (pole_position VARCHAR, fastest_lap VARCHAR, round VARCHAR)",
        "question": "What pole position was Rubens Barrichello when he had the fastest lap and a round larger than 11?"
    },
    {
        "answer": "SELECT fastest_lap FROM table_name_32 WHERE pole_position = \"david coulthard\" AND winning_driver = \"michael schumacher\"",
        "context": "CREATE TABLE table_name_32 (fastest_lap VARCHAR, pole_position VARCHAR, winning_driver VARCHAR)",
        "question": "Who had the fastest lap when David Coulthard had pole position and Michael Schumacher as a winning driver."
    },
    {
        "answer": "SELECT 1 AS st_ship_delivery_date FROM table_11552751_2 WHERE ship_types_delivered = \"S2 (LST) type, S2 (frigate) type, C1-M type\"",
        "context": "CREATE TABLE table_11552751_2 (ship_types_delivered VARCHAR)",
        "question": "What was the delivery date when s2 (lst) type, s2 (frigate) type, c1-m type was delivered?"
    },
    {
        "answer": "SELECT date_of_debut FROM table_11585313_1 WHERE date_of_birth = \"24-10-1887\"",
        "context": "CREATE TABLE table_11585313_1 (date_of_debut VARCHAR, date_of_birth VARCHAR)",
        "question": "What is the date of debut that has a date of birth listed at 24-10-1887?"
    },
    {
        "answer": "SELECT frequency FROM table_11602313_4 WHERE part_number_s_ = \"LF80537GF0411M\"",
        "context": "CREATE TABLE table_11602313_4 (frequency VARCHAR, part_number_s_ VARCHAR)",
        "question": "What is the frequency of the model with part number lf80537gf0411m?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_83 WHERE venue = \"vfl park\"",
        "context": "CREATE TABLE table_name_83 (away_team VARCHAR, venue VARCHAR)",
        "question": "What was the score of the away team when the game was played at vfl park?"
    },
    {
        "answer": "SELECT score FROM table_11603006_1 WHERE location = \"Michigan\" AND purse__$__ < 1813335.221493934",
        "context": "CREATE TABLE table_11603006_1 (score VARCHAR, location VARCHAR, purse__$__ VARCHAR)",
        "question": "What was the score for the tournament in Michigan where the purse was smaller than 1813335.221493934?"
    },
    {
        "answer": "SELECT song FROM table_name_23 WHERE year < 2013 AND music_director = \"yuvan shankar raja\" AND film = \"billa ii\"",
        "context": "CREATE TABLE table_name_23 (song VARCHAR, film VARCHAR, year VARCHAR, music_director VARCHAR)",
        "question": "Tell me the song with year before 2013 and music director of yuvan shankar raja and film of billa ii"
    },
    {
        "answer": "SELECT founded FROM table_11604804_5 WHERE color = \"Navy Blue\"",
        "context": "CREATE TABLE table_11604804_5 (founded VARCHAR, color VARCHAR)",
        "question": "What was the founding of navy blue?"
    },
    {
        "answer": "SELECT seat FROM table_11614581_3 WHERE name_in_polish = \"Gubernia warszawska\"",
        "context": "CREATE TABLE table_11614581_3 (seat VARCHAR, name_in_polish VARCHAR)",
        "question": "What seat does Gubernia Warszawska hold?"
    },
    {
        "answer": "SELECT MAX(purse__) AS $__ FROM table_11621915_1 WHERE score = \"204 (-9)\"",
        "context": "CREATE TABLE table_11621915_1 (purse__ INTEGER, score VARCHAR)",
        "question": "what's the maximum\u00a0purse( $ )\u00a0with\u00a0score\u00a0value of 204 (-9)"
    },
    {
        "answer": "SELECT winner FROM table_11621915_1 WHERE purse__$__ > 964017.2297960471 AND date = \"May 28\"",
        "context": "CREATE TABLE table_11621915_1 (winner VARCHAR, purse__$__ VARCHAR, date VARCHAR)",
        "question": "what's the\u00a0winner\u00a0with\u00a0purse( $ )\u00a0value of bigger than 964017.2297960471 and\u00a0date\u00a0value of may 28"
    },
    {
        "answer": "SELECT player FROM table_name_96 WHERE college = \"manitoba\"",
        "context": "CREATE TABLE table_name_96 (player VARCHAR, college VARCHAR)",
        "question": "Which player plays for the college of manitoba?"
    },
    {
        "answer": "SELECT player FROM table_name_14 WHERE overall > 227",
        "context": "CREATE TABLE table_name_14 (player VARCHAR, overall INTEGER)",
        "question": "What is the name of the player with an Overall larger than 227?"
    },
    {
        "answer": "SELECT tournament FROM table_11622255_1 WHERE winner = \"Raymond Floyd (1)\"",
        "context": "CREATE TABLE table_11622255_1 (tournament VARCHAR, winner VARCHAR)",
        "question": " what's the\u00a0tournament\u00a0where\u00a0winner\u00a0is raymond floyd (1)"
    },
    {
        "answer": "SELECT date FROM table_11622255_1 WHERE location = \"Illinois\"",
        "context": "CREATE TABLE table_11622255_1 (date VARCHAR, location VARCHAR)",
        "question": " what's the\u00a0date\u00a0where\u00a0location\u00a0is illinois"
    },
    {
        "answer": "SELECT location FROM table_11622562_1 WHERE tournament = \"GTE Suncoast Classic\"",
        "context": "CREATE TABLE table_11622562_1 (location VARCHAR, tournament VARCHAR)",
        "question": "Where was the GTE Suncoast Classic tournament held?"
    },
    {
        "answer": "SELECT MIN(*) AS $__ FROM table_11622562_1 WHERE location = \"New Mexico\"",
        "context": "CREATE TABLE table_11622562_1 (location VARCHAR)",
        "question": "What was the minimal amount ($) of the 1st prize in the tournaments in New Mexico?"
    },
    {
        "answer": "SELECT label FROM table_name_37 WHERE date = \"1988\" AND format = \"cd\"",
        "context": "CREATE TABLE table_name_37 (label VARCHAR, date VARCHAR, format VARCHAR)",
        "question": "What label released a CD in 1988?"
    },
    {
        "answer": "SELECT total_no FROM table_11642945_1 WHERE original_air_date = \"29November2007\"",
        "context": "CREATE TABLE table_11642945_1 (total_no VARCHAR, original_air_date VARCHAR)",
        "question": "The original air date of 29November2007 has what total no.?"
    },
    {
        "answer": "SELECT COUNT(series__number) FROM table_11630008_7 WHERE production_code = 503",
        "context": "CREATE TABLE table_11630008_7 (series__number VARCHAR, production_code VARCHAR)",
        "question": "What is the number of series with production code 503?"
    },
    {
        "answer": "SELECT COUNT(marginal_ordinary_income_tax_rate) FROM table_11647327_2 WHERE married_filing_jointly_or_qualified_widow_er_ = \"$208,851\u2013$372,950\"",
        "context": "CREATE TABLE table_11647327_2 (marginal_ordinary_income_tax_rate VARCHAR, married_filing_jointly_or_qualified_widow_er_ VARCHAR)",
        "question": "What is the amoun of marginal ordinary income tax rate where married filing jointly or qualified widow is $208,851\u2013$372,950?"
    },
    {
        "answer": "SELECT COUNT(coach) FROM table_1165048_1 WHERE captain = \"Grant Welsh\" AND win_loss = \"5-15\"",
        "context": "CREATE TABLE table_1165048_1 (coach VARCHAR, captain VARCHAR, win_loss VARCHAR)",
        "question": "what is the total number of\u00a0coach\u00a0where\u00a0captain\u00a0is grant welsh and\u00a0win/loss\u00a0is 5-15"
    },
    {
        "answer": "SELECT AVG(grid) FROM table_name_33 WHERE constructor = \"brm\" AND laps < 63",
        "context": "CREATE TABLE table_name_33 (grid INTEGER, constructor VARCHAR, laps VARCHAR)",
        "question": "What is the average grid with brm and under 63 laps?"
    },
    {
        "answer": "SELECT title FROM table_11665016_2 WHERE directed_by = \"Steven DePaul\"",
        "context": "CREATE TABLE table_11665016_2 (title VARCHAR, directed_by VARCHAR)",
        "question": "Which episode was directed by steven depaul"
    },
    {
        "answer": "SELECT date_entered_service FROM table_11662133_3 WHERE ships_name = \"Koningin Wilhelmina\"",
        "context": "CREATE TABLE table_11662133_3 (date_entered_service VARCHAR, ships_name VARCHAR)",
        "question": " what's the date entered service with ships name koningin wilhelmina"
    },
    {
        "answer": "SELECT MAX(tonnage) FROM table_11662133_3 WHERE date_entered_service = \"25 March 1986\"",
        "context": "CREATE TABLE table_11662133_3 (tonnage INTEGER, date_entered_service VARCHAR)",
        "question": "what is the maximum tonnage where date entered service is 25 march 1986 "
    },
    {
        "answer": "SELECT date_withdrawn FROM table_11662133_3 WHERE date_entered_service = \"21 November 1945\"",
        "context": "CREATE TABLE table_11662133_3 (date_withdrawn VARCHAR, date_entered_service VARCHAR)",
        "question": "what are all the date withdrawn for service entered on 21 november 1945"
    },
    {
        "answer": "SELECT date_withdrawn FROM table_11662133_3 WHERE type_of_ship = \"Twin Screw Ro-Ro Motorship\"",
        "context": "CREATE TABLE table_11662133_3 (date_withdrawn VARCHAR, type_of_ship VARCHAR)",
        "question": "what are all the date withdrawn for twin screw ro-ro motorship"
    },
    {
        "answer": "SELECT MIN(no_in_season) FROM table_11664625_2 WHERE directed_by = \"Anthony Hemingway\"",
        "context": "CREATE TABLE table_11664625_2 (no_in_season INTEGER, directed_by VARCHAR)",
        "question": "Where is the first season that Anthony Hemingway appears?"
    },
    {
        "answer": "SELECT MIN(no_in_season) FROM table_11664625_2 WHERE us_viewers__millions_ = \"14.57\"",
        "context": "CREATE TABLE table_11664625_2 (no_in_season INTEGER, us_viewers__millions_ VARCHAR)",
        "question": "When is the first season there were 14.57 million U.S viewers?"
    },
    {
        "answer": "SELECT COUNT(hometown) FROM table_11677100_15 WHERE position = \"Catcher\"",
        "context": "CREATE TABLE table_11677100_15 (hometown VARCHAR, position VARCHAR)",
        "question": "How many hometowns does the catcher have?"
    },
    {
        "answer": "SELECT away_team FROM table_name_69 WHERE crowd > 41 OFFSET 451",
        "context": "CREATE TABLE table_name_69 (away_team VARCHAR, crowd INTEGER)",
        "question": "Who was the away team when the crowd was larger than 41,451?"
    },
    {
        "answer": "SELECT hometown FROM table_11677100_17 WHERE player = \"Bubba Starling\"",
        "context": "CREATE TABLE table_11677100_17 (hometown VARCHAR, player VARCHAR)",
        "question": "What is the hometown of Bubba Starling?"
    },
    {
        "answer": "SELECT hometown FROM table_11677100_5 WHERE player = \"Josh Hamilton\"",
        "context": "CREATE TABLE table_11677100_5 (hometown VARCHAR, player VARCHAR)",
        "question": "What is Josh Hamilton's hometown?"
    },
    {
        "answer": "SELECT college FROM table_name_93 WHERE player = \"jon hameister-ries\"",
        "context": "CREATE TABLE table_name_93 (college VARCHAR, player VARCHAR)",
        "question": "Which college does the player jon hameister-ries play for?"
    },
    {
        "answer": "SELECT MIN(grid) FROM table_name_96 WHERE points > 11 AND driver = \"s\u00e9bastien bourdais\" AND laps < 67",
        "context": "CREATE TABLE table_name_96 (grid INTEGER, laps VARCHAR, points VARCHAR, driver VARCHAR)",
        "question": "Tell me the least Grid with points more than 11 and drivers being s\u00e9bastien bourdais with laps less than 67"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_9 WHERE grid > 9 AND driver = \"jan heylen\"",
        "context": "CREATE TABLE table_name_9 (laps INTEGER, grid VARCHAR, driver VARCHAR)",
        "question": "Name the most laps for grid more than 9 and the driver being jan heylen"
    },
    {
        "answer": "SELECT COUNT(position) FROM table_11677100_4 WHERE school = \"Spring High school\"",
        "context": "CREATE TABLE table_11677100_4 (position VARCHAR, school VARCHAR)",
        "question": "How many positions did the player from Spring High School play?"
    },
    {
        "answer": "SELECT MIN(evening_gown) FROM table_name_17 WHERE average < 8.23 AND interview = 8.11 AND swimsuit > 7.84",
        "context": "CREATE TABLE table_name_17 (evening_gown INTEGER, swimsuit VARCHAR, average VARCHAR, interview VARCHAR)",
        "question": "What is the lowest evening gown score a contestant with an average less than 8.23, an interview score of 8.11, and a swimsuit larger than 7.84 has?"
    },
    {
        "answer": "SELECT MAX(swimsuit) FROM table_name_69 WHERE average > 8.48 AND interview > 8.58 AND evening_gown > 8.82 AND state = \"kansas\"",
        "context": "CREATE TABLE table_name_69 (swimsuit INTEGER, state VARCHAR, evening_gown VARCHAR, average VARCHAR, interview VARCHAR)",
        "question": "What is the highest swimsuit a contestant from Kansas with an average larger than 8.48, an interview higher than 8.58, and an evening gown higher than 8.82 has?"
    },
    {
        "answer": "SELECT school FROM table_11677691_2 WHERE college = \"South Carolina\"",
        "context": "CREATE TABLE table_11677691_2 (school VARCHAR, college VARCHAR)",
        "question": "WHAT SCHOOL DID THE PLAYER FROM SOUTH CAROLINA ATTEND?"
    },
    {
        "answer": "SELECT prefix FROM table_name_4 WHERE chemical_class = \"haloalkane\"",
        "context": "CREATE TABLE table_name_4 (prefix VARCHAR, chemical_class VARCHAR)",
        "question": "What prefix has Haloalkane as the chemical class?"
    },
    {
        "answer": "SELECT position FROM table_11677691_2 WHERE school = \"South Pointe High school\"",
        "context": "CREATE TABLE table_11677691_2 (position VARCHAR, school VARCHAR)",
        "question": "WHAT POSITION DOES THE PLAYER FROM SOUTH POINTE HIGH SCHOOL PLAY?"
    },
    {
        "answer": "SELECT school FROM table_11677691_5 WHERE hometown = \"Aledo, Texas\"",
        "context": "CREATE TABLE table_11677691_5 (school VARCHAR, hometown VARCHAR)",
        "question": "Which school is in the hometown of Aledo, Texas?"
    },
    {
        "answer": "SELECT MAX(game) FROM table_name_11 WHERE high_rebounds = \"evans (7)\" AND high_assists = \"evans, ollie (3)\"",
        "context": "CREATE TABLE table_name_11 (game INTEGER, high_rebounds VARCHAR, high_assists VARCHAR)",
        "question": "Which game has a high rebound of Evans (7) and a high assist of Evans, Ollie (3)?"
    },
    {
        "answer": "SELECT school FROM table_11677691_3 WHERE position = \"Running back\" AND college = \"Nebraska\"",
        "context": "CREATE TABLE table_11677691_3 (school VARCHAR, position VARCHAR, college VARCHAR)",
        "question": "Running back Aaron Green went to Nebraska and what high school? "
    },
    {
        "answer": "SELECT player FROM table_11677691_12 WHERE school = \"Mission Viejo High school\"",
        "context": "CREATE TABLE table_11677691_12 (player VARCHAR, school VARCHAR)",
        "question": "who are all the players for mission viejo high school"
    },
    {
        "answer": "SELECT us_rap FROM table_name_98 WHERE album = \"west coast bad boyz, vol. 3: poppin' collars\"",
        "context": "CREATE TABLE table_name_98 (us_rap VARCHAR, album VARCHAR)",
        "question": "What is the U.S. Rap chart number of the album west coast bad boyz, vol. 3: poppin' collars?"
    },
    {
        "answer": "SELECT location FROM table_name_77 WHERE mountain_peak = \"blanca peak\"",
        "context": "CREATE TABLE table_name_77 (location VARCHAR, mountain_peak VARCHAR)",
        "question": "What is the location of Blanca Peak?"
    },
    {
        "answer": "SELECT COUNT(replaced_by) FROM table_11713303_2 WHERE date_of_appointment = \"10 December 2007\" AND manner_of_departure = \"Quit\"",
        "context": "CREATE TABLE table_11713303_2 (replaced_by VARCHAR, date_of_appointment VARCHAR, manner_of_departure VARCHAR)",
        "question": "How many have been replaced where the appointment date is 10 December 2007 and the manner of departure is quit?"
    },
    {
        "answer": "SELECT date_of_vacancy FROM table_11713303_2 WHERE date_of_appointment = \"10 December 2007\" AND manner_of_departure = \"Quit\"",
        "context": "CREATE TABLE table_11713303_2 (date_of_vacancy VARCHAR, date_of_appointment VARCHAR, manner_of_departure VARCHAR)",
        "question": "What is the date of vacancy for 10 december 2007 when quit?"
    },
    {
        "answer": "SELECT display_size FROM table_11703336_1 WHERE calculator = \"TI-82\"",
        "context": "CREATE TABLE table_11703336_1 (display_size VARCHAR, calculator VARCHAR)",
        "question": "what is the display size for the calculator ti-82?"
    },
    {
        "answer": "SELECT SUM(poles) FROM table_name_27 WHERE drivers = \"juan cruz \u00e1lvarez\" AND flaps > 0",
        "context": "CREATE TABLE table_name_27 (poles INTEGER, drivers VARCHAR, flaps VARCHAR)",
        "question": "How many Poles have Drivers of juan cruz \u00e1lvarez, and FLaps larger than 0?"
    },
    {
        "answer": "SELECT away_team FROM table_name_52 WHERE venue = \"victoria park\"",
        "context": "CREATE TABLE table_name_52 (away_team VARCHAR, venue VARCHAR)",
        "question": "Who was the away team at Victoria Park?"
    },
    {
        "answer": "SELECT home FROM table_name_12 WHERE visitor = \"dallas\" AND date = \"february 2\"",
        "context": "CREATE TABLE table_name_12 (home VARCHAR, visitor VARCHAR, date VARCHAR)",
        "question": "Name the home when the visitor was dallas on february 2"
    },
    {
        "answer": "SELECT tournament FROM table_name_93 WHERE outcome = \"runner-up\" AND opponent = \"ma\u0161a zec pe\u0161kiri\u010d\"",
        "context": "CREATE TABLE table_name_93 (tournament VARCHAR, outcome VARCHAR, opponent VARCHAR)",
        "question": "Which tournament has an Outcome of runner-up, and an Opponent of ma\u0161a zec pe\u0161kiri\u010d?"
    },
    {
        "answer": "SELECT surface FROM table_name_57 WHERE date = \"22 august 2006\"",
        "context": "CREATE TABLE table_name_57 (surface VARCHAR, date VARCHAR)",
        "question": "Which surface has a Date of 22 august 2006?"
    },
    {
        "answer": "SELECT tournament FROM table_name_95 WHERE outcome = \"runner-up\" AND surface = \"hard\" AND score = \"6\u20134, 6\u20132\"",
        "context": "CREATE TABLE table_name_95 (tournament VARCHAR, score VARCHAR, outcome VARCHAR, surface VARCHAR)",
        "question": "Which tournament has an Outcome of runner-up, a Surface of hard, and a Score of 6\u20134, 6\u20132?"
    },
    {
        "answer": "SELECT school_club_team_country FROM table_11734041_3 WHERE years_for_rockets = \"2000-01\"",
        "context": "CREATE TABLE table_11734041_3 (school_club_team_country VARCHAR, years_for_rockets VARCHAR)",
        "question": "Which school, club team, or country played for the rockets in the years 2000-01?"
    },
    {
        "answer": "SELECT tournament FROM table_name_53 WHERE outcome = \"winner\" AND opponent = \"dia evtimova\"",
        "context": "CREATE TABLE table_name_53 (tournament VARCHAR, outcome VARCHAR, opponent VARCHAR)",
        "question": "Which tournament has an Outcome of winner, and a Opponent of dia evtimova?"
    },
    {
        "answer": "SELECT outcome FROM table_name_37 WHERE opponent = \"marina erakovic\"",
        "context": "CREATE TABLE table_name_37 (outcome VARCHAR, opponent VARCHAR)",
        "question": "What is the outcome with marina erakovic as opponent?"
    },
    {
        "answer": "SELECT years_for_rockets FROM table_11734041_3 WHERE no_s_ = \"13\"",
        "context": "CREATE TABLE table_11734041_3 (years_for_rockets VARCHAR, no_s_ VARCHAR)",
        "question": "During which years did number 13 play for the Rockets?"
    },
    {
        "answer": "SELECT years_for_rockets FROM table_11734041_6 WHERE player = \"Ford, Alton Alton Ford\"",
        "context": "CREATE TABLE table_11734041_6 (years_for_rockets VARCHAR, player VARCHAR)",
        "question": "What years for the rockets did player ford, alton alton ford play?"
    },
    {
        "answer": "SELECT launched FROM table_name_57 WHERE builder = \"john brown, clydebank\"",
        "context": "CREATE TABLE table_name_57 (launched VARCHAR, builder VARCHAR)",
        "question": "what is the launched date when the builder is john brown, clydebank?"
    },
    {
        "answer": "SELECT years_for_rockets FROM table_11734041_6 WHERE player = \"Ford, Phil Phil Ford\"",
        "context": "CREATE TABLE table_11734041_6 (years_for_rockets VARCHAR, player VARCHAR)",
        "question": "What years for the rockets did the player ford, phil phil ford play?"
    },
    {
        "answer": "SELECT record FROM table_name_82 WHERE week < 13 AND date = \"july 12\"",
        "context": "CREATE TABLE table_name_82 (record VARCHAR, week VARCHAR, date VARCHAR)",
        "question": "What was the record for a week below 13 on July 12?"
    },
    {
        "answer": "SELECT location FROM table_1176371_1 WHERE la_matches = 7 AND name_of_ground = \"Ropery Lane\"",
        "context": "CREATE TABLE table_1176371_1 (location VARCHAR, la_matches VARCHAR, name_of_ground VARCHAR)",
        "question": "Where is ropery lane and la matches 7 location?"
    },
    {
        "answer": "SELECT MAX(fc_matches) FROM table_1176371_1 WHERE name_of_ground = \"The Racecourse\"",
        "context": "CREATE TABLE table_1176371_1 (fc_matches INTEGER, name_of_ground VARCHAR)",
        "question": "What is the maximum fc matches at the racecourse?"
    },
    {
        "answer": "SELECT date FROM table_name_12 WHERE home = \"ny rangers\"",
        "context": "CREATE TABLE table_name_12 (date VARCHAR, home VARCHAR)",
        "question": "What date did NY Rangers play at home?"
    },
    {
        "answer": "SELECT missing FROM table_11793221_4 WHERE commander = \"Lieutenant General Sir Thomas Picton\"",
        "context": "CREATE TABLE table_11793221_4 (missing VARCHAR, commander VARCHAR)",
        "question": "What was the missing for lieutenant general sir thomas picton?"
    },
    {
        "answer": "SELECT COUNT(complement) FROM table_11793221_4 WHERE unit = \"4th Hanoverian Brigade\"",
        "context": "CREATE TABLE table_11793221_4 (complement VARCHAR, unit VARCHAR)",
        "question": "Name the number of complement for 4th hanoverian brigade"
    },
    {
        "answer": "SELECT analog_channel FROM table_name_31 WHERE digital_channel = \"4.1\"",
        "context": "CREATE TABLE table_name_31 (analog_channel VARCHAR, digital_channel VARCHAR)",
        "question": "Which analog channel has a digital channel of 4.1?"
    },
    {
        "answer": "SELECT runner_up FROM table_name_18 WHERE third_place = \"yevgeny kafelnikov\" AND score = \"3\u20136, 6\u20134, [10\u20133]\"",
        "context": "CREATE TABLE table_name_18 (runner_up VARCHAR, third_place VARCHAR, score VARCHAR)",
        "question": "What is the name of the runner up when yevgeny kafelnikov was third place and the score was 3\u20136, 6\u20134, [10\u20133]?"
    },
    {
        "answer": "SELECT MIN(overall) FROM table_11803648_17 WHERE club_team = \"Omaha (USHL)\"",
        "context": "CREATE TABLE table_11803648_17 (overall INTEGER, club_team VARCHAR)",
        "question": "NAME THE OVERALL FOR THE OMAHA (USHL) CLUB TEAM"
    },
    {
        "answer": "SELECT position FROM table_11803648_21 WHERE player = \"Cody Ceci\"",
        "context": "CREATE TABLE table_11803648_21 (position VARCHAR, player VARCHAR)",
        "question": "What position does Cody Ceci play?"
    },
    {
        "answer": "SELECT player FROM table_11803648_20 WHERE round = 5",
        "context": "CREATE TABLE table_11803648_20 (player VARCHAR, round VARCHAR)",
        "question": "Which player is in round 5?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_75 WHERE against = 753 AND points_diff > -114",
        "context": "CREATE TABLE table_name_75 (points VARCHAR, against VARCHAR, points_diff VARCHAR)",
        "question": "I want the total number of points for against of 753 and points diff more than -114"
    },
    {
        "answer": "SELECT MAX(round) FROM table_11803648_22 WHERE club_team = \"Guelph Storm (OHL)\"",
        "context": "CREATE TABLE table_11803648_22 (round INTEGER, club_team VARCHAR)",
        "question": "What is the last round with club team Guelph Storm (ohl)?"
    },
    {
        "answer": "SELECT MAX(1985) FROM table_name_88 WHERE 1990 < 267 AND 2000 = 333 AND 2005 < 658",
        "context": "CREATE TABLE table_name_88 (Id VARCHAR)",
        "question": "What is the maximum 1985 GDP for the region where 1990 GDP is less than 267, 2000 GDP is 333 and 2005 GDP is less than 658?"
    },
    {
        "answer": "SELECT hometown FROM table_name_40 WHERE school = \"camarillo high school\"",
        "context": "CREATE TABLE table_name_40 (hometown VARCHAR, school VARCHAR)",
        "question": "Where is the Hometown that the person who attended Camarillo High School is from?"
    },
    {
        "answer": "SELECT percent__1990_ FROM table_1182314_5 WHERE state = \"United states\"",
        "context": "CREATE TABLE table_1182314_5 (percent__1990_ VARCHAR, state VARCHAR)",
        "question": "what are all the\u00a0percent (1990)\u00a0where\u00a0state\u00a0is united states"
    },
    {
        "answer": "SELECT nominee FROM table_name_81 WHERE award = \"drama desk award\" AND result = \"won\" AND category = \"outstanding choreography\"",
        "context": "CREATE TABLE table_name_81 (nominee VARCHAR, category VARCHAR, award VARCHAR, result VARCHAR)",
        "question": "Which nominee won the Drama Desk Award for outstanding choreography?"
    },
    {
        "answer": "SELECT result FROM table_name_90 WHERE week > 10 AND opponent = \"new england patriots\"",
        "context": "CREATE TABLE table_name_90 (result VARCHAR, week VARCHAR, opponent VARCHAR)",
        "question": "I want the result for week larger than 10 for opponent of new england patriots"
    },
    {
        "answer": "SELECT issue_price__proof_ FROM table_11916083_1 WHERE issue_price__bu_[_clarification_needed_] = \"34.95\"",
        "context": "CREATE TABLE table_11916083_1 (issue_price__proof_ VARCHAR, issue_price__bu_ VARCHAR, _clarification_needed_ VARCHAR)",
        "question": "What is the issue price (proof) where the issue price (bu) is 34.95?"
    },
    {
        "answer": "SELECT registrations FROM table_name_27 WHERE type = \"retained\" AND station_number = \"c03\"",
        "context": "CREATE TABLE table_name_27 (registrations VARCHAR, type VARCHAR, station_number VARCHAR)",
        "question": "What is the registration of the station with a retained type and a station number of c03?"
    },
    {
        "answer": "SELECT mintage__bu_[_clarification_needed_] FROM table_11916083_1 WHERE artist = \"Royal Canadian Mint Staff\" AND issue_price__proof_ = \"$54.95\"",
        "context": "CREATE TABLE table_11916083_1 (mintage__bu_ VARCHAR, _clarification_needed_ VARCHAR, artist VARCHAR, issue_price__proof_ VARCHAR)",
        "question": "What is the mintage (bu) with the artist Royal Canadian Mint Staff and has an issue price (proof) of $54.95?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_76 WHERE venue = \"vfl park\"",
        "context": "CREATE TABLE table_name_76 (away_team VARCHAR, venue VARCHAR)",
        "question": "What did the away team score at VFL Park?"
    },
    {
        "answer": "SELECT title FROM table_11951237_3 WHERE original_air_date = \"February 6, 1997\"",
        "context": "CREATE TABLE table_11951237_3 (title VARCHAR, original_air_date VARCHAR)",
        "question": "What is the title of the episode with the original air date of february 6, 1997?"
    },
    {
        "answer": "SELECT lifespan FROM table_name_56 WHERE imperial = \"7ft 8 in\" AND nationality = \"fiji\"",
        "context": "CREATE TABLE table_name_56 (lifespan VARCHAR, imperial VARCHAR, nationality VARCHAR)",
        "question": "what is the lifespan when the imperial height is 7ft 8 in and the nationality is fiji?"
    },
    {
        "answer": "SELECT SUM(grid) FROM table_name_83 WHERE time_retired = \"engine\" AND driver = \"teo fabi\" AND laps < 39",
        "context": "CREATE TABLE table_name_83 (grid INTEGER, laps VARCHAR, time_retired VARCHAR, driver VARCHAR)",
        "question": "What is the grid total that had a retired for engine, teo fabi driving, and under 39 laps?"
    },
    {
        "answer": "SELECT AVG(grid) FROM table_name_26 WHERE driver = \"johnny dumfries\" AND laps < 8",
        "context": "CREATE TABLE table_name_26 (grid INTEGER, driver VARCHAR, laps VARCHAR)",
        "question": "What is the average grid for johnny dumfries with less than 8 laps?"
    },
    {
        "answer": "SELECT COUNT(*) AS '5k wins' FROM table_name_80 WHERE runner = \"emily chebet\" AND total > 2",
        "context": "",
        "question": "How many 5K wins did Emily Chebet, who had more than 2 total, have?"
    },
    {
        "answer": "SELECT MAX(peak_lessons_taught) FROM table_name_95 WHERE evaluation_average__before_april_2009_ = \"4.4\"",
        "context": "CREATE TABLE table_name_95 (peak_lessons_taught INTEGER, evaluation_average__before_april_2009_ VARCHAR)",
        "question": "What is the largest number of Peak lessons taught when the Evaluation average (Before April 2009) was 4.4?"
    },
    {
        "answer": "SELECT evaluation_average__before_april_2009_ FROM table_name_23 WHERE peak_lessons_taught < 80 AND _percentage_of_negative_evaluations = \"0.8%\"",
        "context": "CREATE TABLE table_name_23 (evaluation_average__before_april_2009_ VARCHAR, peak_lessons_taught VARCHAR, _percentage_of_negative_evaluations VARCHAR)",
        "question": "What is the mean Evaluation number (before April 2009) when the Peak lessons taught was less than 80 and the negative percentage of evaluations was 0.8%?"
    },
    {
        "answer": "SELECT evaluation_average__before_april_2009_ FROM table_name_41 WHERE _percentage_of_negative_evaluations = \"0.8%\" AND evaluation_average__from_april_2009_ = \"4.2\"",
        "context": "CREATE TABLE table_name_41 (evaluation_average__before_april_2009_ VARCHAR, _percentage_of_negative_evaluations VARCHAR, evaluation_average__from_april_2009_ VARCHAR)",
        "question": "What is the mean Evaluation number (Before April 2009) when the percentage of negative evaluations was 0.8% and the mean Evaluation number of April 2009 was 4.2?"
    },
    {
        "answer": "SELECT MAX(game) FROM table_11960610_10 WHERE team = \"San Antonio\"",
        "context": "CREATE TABLE table_11960610_10 (game INTEGER, team VARCHAR)",
        "question": "What is San Antonio  game number?"
    },
    {
        "answer": "SELECT COUNT(high_assists) FROM table_11960610_10 WHERE high_points = \"Gordon (27)\"",
        "context": "CREATE TABLE table_11960610_10 (high_assists VARCHAR, high_points VARCHAR)",
        "question": "When gordon (27) had high points, what was the number of high assists?"
    },
    {
        "answer": "SELECT MIN(date_commissioned) FROM table_name_69 WHERE material = \"iron\" AND ship = \"rmsrhone\" AND gross_tonnage < 2 OFFSET 738",
        "context": "CREATE TABLE table_name_69 (date_commissioned INTEGER, gross_tonnage VARCHAR, material VARCHAR, ship VARCHAR)",
        "question": "Tell me the lowest date commissioned for iron rmsrhone and gross tonnage less than 2,738"
    },
    {
        "answer": "SELECT constructor FROM table_name_21 WHERE time_retired = \"+1.027\"",
        "context": "CREATE TABLE table_name_21 (constructor VARCHAR, time_retired VARCHAR)",
        "question": "What Constructor has a +1.027 Time/Retired?"
    },
    {
        "answer": "SELECT COUNT(high_points) FROM table_11960944_4 WHERE high_rebounds = \"McDyess (9)\" AND high_assists = \"Billups (10)\"",
        "context": "CREATE TABLE table_11960944_4 (high_points VARCHAR, high_rebounds VARCHAR, high_assists VARCHAR)",
        "question": "how many times was the high rebounds by Mcdyess (9) and the high assists was by Billups (10)?"
    },
    {
        "answer": "SELECT driver FROM table_name_86 WHERE time_retired = \"+1.027\"",
        "context": "CREATE TABLE table_name_86 (driver VARCHAR, time_retired VARCHAR)",
        "question": "What Driver has a +1.027 Time/Retired?"
    },
    {
        "answer": "SELECT competition FROM table_name_84 WHERE venue = \"shay stadium\"",
        "context": "CREATE TABLE table_name_84 (competition VARCHAR, venue VARCHAR)",
        "question": "What competition was played at Shay Stadium?"
    },
    {
        "answer": "SELECT COUNT(game) FROM table_11961582_4 WHERE high_assists = \"A. Johnson (6)\"",
        "context": "CREATE TABLE table_11961582_4 (game VARCHAR, high_assists VARCHAR)",
        "question": "What was the total number of games where A. Johnson (6) gave the most high assists?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_89 WHERE venue = \"brunswick street oval\"",
        "context": "CREATE TABLE table_name_89 (away_team VARCHAR, venue VARCHAR)",
        "question": "Who was the away team at Brunswick Street Oval?"
    },
    {
        "answer": "SELECT MIN(prom__m_) FROM table_name_62 WHERE class = \"hewitt\" AND peak = \"cushat law\" AND height__m_ > 615",
        "context": "CREATE TABLE table_name_62 (prom__m_ INTEGER, height__m_ VARCHAR, class VARCHAR, peak VARCHAR)",
        "question": "Tell me the lowest prom for class of hewitt and peak of cushat law and height more than 615"
    },
    {
        "answer": "SELECT leading_scorer FROM table_11964047_6 WHERE _number = 26",
        "context": "CREATE TABLE table_11964047_6 (leading_scorer VARCHAR, _number VARCHAR)",
        "question": "Who was the leading scorer in Game #26?"
    },
    {
        "answer": "SELECT percentage_democrats FROM table_name_45 WHERE democratic_seat_plurality = \"-3\" AND democratic__republican = \"2/5\"",
        "context": "CREATE TABLE table_name_45 (percentage_democrats VARCHAR, democratic_seat_plurality VARCHAR, democratic__republican VARCHAR)",
        "question": "What is the percentage democrats with democratic plurality of -3, and 2/5 democrat/republican?"
    },
    {
        "answer": "SELECT COUNT(score) FROM table_11964154_7 WHERE high_assists = \"Earl Watson (5)\" AND date = \"December 2\"",
        "context": "CREATE TABLE table_11964154_7 (score VARCHAR, high_assists VARCHAR, date VARCHAR)",
        "question": "How many times was the high assists earl watson (5) and the date of the game was december 2?"
    },
    {
        "answer": "SELECT record FROM table_11964154_9 WHERE location_attendance = \"KeyArena 13,627\"",
        "context": "CREATE TABLE table_11964154_9 (record VARCHAR, location_attendance VARCHAR)",
        "question": " what's the\u00a0record\u00a0where\u00a0location attendance\u00a0is keyarena 13,627"
    },
    {
        "answer": "SELECT AVG(matches) FROM table_name_5 WHERE goals < 41 AND team = \"ca osasuna\" AND average < 1.06",
        "context": "CREATE TABLE table_name_5 (matches INTEGER, average VARCHAR, goals VARCHAR, team VARCHAR)",
        "question": "For players with fewer than 41 goals for CA Osasuna and averages under 1.06, what is the average number of matches?"
    },
    {
        "answer": "SELECT AVG(goals) FROM table_name_79 WHERE average = 1.58 AND matches < 38",
        "context": "CREATE TABLE table_name_79 (goals INTEGER, average VARCHAR, matches VARCHAR)",
        "question": "For averages of 1.58 and matches under 38, what is the average number of goals?"
    },
    {
        "answer": "SELECT high_points FROM table_11964263_13 WHERE location_attendance = \"Toyota Center 18,269\"",
        "context": "CREATE TABLE table_11964263_13 (high_points VARCHAR, location_attendance VARCHAR)",
        "question": "Name the high points for toyota center 18,269?"
    },
    {
        "answer": "SELECT COUNT(division) FROM table_12002388_1 WHERE reg_season = \"4th\"",
        "context": "CREATE TABLE table_12002388_1 (division VARCHAR, reg_season VARCHAR)",
        "question": "How many teams placed 4th in the regular season?"
    },
    {
        "answer": "SELECT playoffs FROM table_12002388_1 WHERE league = \"APSL\" AND year = 1992",
        "context": "CREATE TABLE table_12002388_1 (playoffs VARCHAR, league VARCHAR, year VARCHAR)",
        "question": "What was the playoff result for theteam in the apsl in 1992?"
    },
    {
        "answer": "SELECT competition FROM table_name_36 WHERE venue = \"seoul\" AND result = \"4-1\"",
        "context": "CREATE TABLE table_name_36 (competition VARCHAR, venue VARCHAR, result VARCHAR)",
        "question": "Which Competition has a Venue of Seoul, and Result of 4-1?"
    },
    {
        "answer": "SELECT laps FROM table_12001616_4 WHERE entrant = \"Marcis Auto Racing\"",
        "context": "CREATE TABLE table_12001616_4 (laps VARCHAR, entrant VARCHAR)",
        "question": "What is the laops of marcis auto racing?"
    },
    {
        "answer": "SELECT result FROM table_name_14 WHERE competition = \"1994 fifa world cup qualification\" AND date = \"may 15, 1993\"",
        "context": "CREATE TABLE table_name_14 (result VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "What's the Result for the Competition of 1994 FIFA World Cup Qualification, with the Date of May 15, 1993?"
    },
    {
        "answer": "SELECT general_classification FROM table_name_12 WHERE trofeo_fast_team = \"mapei-bricobi\" AND points_classification = \"mariano piccoli\" AND mountains_classification = \"marco pantani\" AND stage = \"22\"",
        "context": "CREATE TABLE table_name_12 (general_classification VARCHAR, stage VARCHAR, mountains_classification VARCHAR, trofeo_fast_team VARCHAR, points_classification VARCHAR)",
        "question": "Who had the general classification when the trofeo fast team was Mapei-Bricobi, the points classification went to Mariano Piccoli and the mountains classification went to Marco Pantani in stage 22?"
    },
    {
        "answer": "SELECT first_elected FROM table_name_28 WHERE party = \"labor\" AND member = \"james sharpe\"",
        "context": "CREATE TABLE table_name_28 (first_elected VARCHAR, party VARCHAR, member VARCHAR)",
        "question": "Which first election for the labor party is James Sharpe a part of?"
    },
    {
        "answer": "SELECT away_team FROM table_name_35 WHERE home_team = \"melbourne\"",
        "context": "CREATE TABLE table_name_35 (away_team VARCHAR, home_team VARCHAR)",
        "question": "Who was the away team when Melbourne was the home team?"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_29 WHERE gold < 3 AND silver = 1 AND total < 3 AND rank = 3",
        "context": "CREATE TABLE table_name_29 (bronze VARCHAR, rank VARCHAR, total VARCHAR, gold VARCHAR, silver VARCHAR)",
        "question": "How many bronze medals for the nation with fewer than 3 gold, 1 silver and rank of 3?"
    },
    {
        "answer": "SELECT academic_ & _university_affairs FROM table_12113818_1 WHERE human_resources_ & _operations = \"N. Charles Hamilton\"",
        "context": "CREATE TABLE table_12113818_1 (academic_ VARCHAR, _university_affairs VARCHAR, human_resources_ VARCHAR, _operations VARCHAR)",
        "question": "Who is the academic & University affairs when the Human resources & operations is N. Charles Hamilton?"
    },
    {
        "answer": "SELECT COUNT(number) FROM table_12113888_1 WHERE rebuilt = \"Cannot handle non-empty timestamp argument! 1929\" AND scrapped_sold = \"Cannot handle non-empty timestamp argument! 1954\"",
        "context": "CREATE TABLE table_12113888_1 (number VARCHAR, rebuilt VARCHAR, scrapped_sold VARCHAR)",
        "question": "How many times does the  rebuilt data contain cannot handle non-empty timestamp argument! 1929 and scrapped data contain cannot handle non-empty timestamp argument! 1954?"
    },
    {
        "answer": "SELECT AVG(reported_isn) FROM table_name_4 WHERE on_july_2007_press_release = \"no\" AND citizenship = \"kuwait\"",
        "context": "CREATE TABLE table_name_4 (reported_isn INTEGER, on_july_2007_press_release VARCHAR, citizenship VARCHAR)",
        "question": "Name the average reported isn for july 2007 for kuwait release of no"
    },
    {
        "answer": "SELECT COUNT(end_of_term) FROM table_12134383_1 WHERE age_at_inauguration = \"64-066 64years, 66days\"",
        "context": "CREATE TABLE table_12134383_1 (end_of_term VARCHAR, age_at_inauguration VARCHAR)",
        "question": " how many\u00a0end of term\u00a0with\u00a0age at inauguration\u00a0being 64-066 64years, 66days"
    },
    {
        "answer": "SELECT driver FROM table_name_41 WHERE grid < 19 AND laps > 59 AND time_retired = \"+0.294\"",
        "context": "CREATE TABLE table_name_41 (driver VARCHAR, time_retired VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "Tell me the driver for grid less than 19 and Laps more than 59 with time/retired of +0.294"
    },
    {
        "answer": "SELECT college_junior_club_team FROM table_1213511_5 WHERE player = \"Mike McNiven\"",
        "context": "CREATE TABLE table_1213511_5 (college_junior_club_team VARCHAR, player VARCHAR)",
        "question": "where is team player mike mcniven played for?"
    },
    {
        "answer": "SELECT COUNT(nhl_team) FROM table_1213511_3 WHERE player = \"Bob Peppler\"",
        "context": "CREATE TABLE table_1213511_3 (nhl_team VARCHAR, player VARCHAR)",
        "question": "How many teams did Bob Peppler play for?"
    },
    {
        "answer": "SELECT COUNT(most_recent) FROM table_name_56 WHERE height__m_ = \"2770\" AND first_time_as_hc_climb < 1992",
        "context": "CREATE TABLE table_name_56 (most_recent VARCHAR, height__m_ VARCHAR, first_time_as_hc_climb VARCHAR)",
        "question": "What was the most recent year a height of 2770 m and a HC climb before 1992 was climbed?"
    },
    {
        "answer": "SELECT first_time_as_hc_climb FROM table_name_23 WHERE no_of_times_visited > 3 AND no_of_hc_climbs = 4 AND most_recent < 2013 AND height__m_ = \"1669\"",
        "context": "CREATE TABLE table_name_23 (first_time_as_hc_climb VARCHAR, height__m_ VARCHAR, most_recent VARCHAR, no_of_times_visited VARCHAR, no_of_hc_climbs VARCHAR)",
        "question": "When was the first HC climb before 2013 with more than 3 times visited, more than 4 HC climbs, and a height of 1669?"
    },
    {
        "answer": "SELECT college_junior_club_team FROM table_1213511_7 WHERE nationality = \"Canada\" AND nhl_team = \"Minnesota North Stars\"",
        "context": "CREATE TABLE table_1213511_7 (college_junior_club_team VARCHAR, nationality VARCHAR, nhl_team VARCHAR)",
        "question": "Which college/junior/club teams nationality is canada and nhl team is minnesota north stars"
    },
    {
        "answer": "SELECT COUNT(pick__number) FROM table_name_30 WHERE reg_gp > 906 AND pl_gp > 99",
        "context": "CREATE TABLE table_name_30 (pick__number VARCHAR, reg_gp VARCHAR, pl_gp VARCHAR)",
        "question": "How many picks had a Reg GP that was over 906, when the Pl GP was bigger than 99?"
    },
    {
        "answer": "SELECT crowd FROM table_name_12 WHERE date = \"26 april 1948\" AND away_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_12 (crowd VARCHAR, date VARCHAR, away_team VARCHAR)",
        "question": "What was the attendence of the game on 26 April 1948 and an away team of Hawthorn?"
    },
    {
        "answer": "SELECT constructor FROM table_name_46 WHERE winning_driver = \"jack brabham\" AND race = \"monaco grand prix\"",
        "context": "CREATE TABLE table_name_46 (constructor VARCHAR, winning_driver VARCHAR, race VARCHAR)",
        "question": "What was the constructor when Jack Brabham was the driver at the Monaco Grand Prix?"
    },
    {
        "answer": "SELECT date FROM table_name_21 WHERE pole_position = \"joakim bonnier\"",
        "context": "CREATE TABLE table_name_21 (date VARCHAR, pole_position VARCHAR)",
        "question": "What date was Joakim Bonnier in the pole position?"
    },
    {
        "answer": "SELECT position FROM table_12165999_1 WHERE college = \"Syracuse\"",
        "context": "CREATE TABLE table_12165999_1 (position VARCHAR, college VARCHAR)",
        "question": "What position does Syracuse's player have?"
    },
    {
        "answer": "SELECT nominee FROM table_name_88 WHERE category = \"outstanding musical\"",
        "context": "CREATE TABLE table_name_88 (nominee VARCHAR, category VARCHAR)",
        "question": "Which Nominee has a Category of outstanding musical?"
    },
    {
        "answer": "SELECT mens_doubles FROM table_12171145_1 WHERE mens_singles = \"Flemming Delfs\"",
        "context": "CREATE TABLE table_12171145_1 (mens_doubles VARCHAR, mens_singles VARCHAR)",
        "question": "Who is themens doubles when the mens singles is flemming delfs?"
    },
    {
        "answer": "SELECT engine FROM table_name_37 WHERE driver = \"ken downing\" AND entrant = \"connaught engineering\"",
        "context": "CREATE TABLE table_name_37 (engine VARCHAR, driver VARCHAR, entrant VARCHAR)",
        "question": "what was the engine when ken downing drove an entrant from connaught engineering?"
    },
    {
        "answer": "SELECT COUNT(arrival) FROM table_12221135_3 WHERE operator = \"LNWR\" AND calling_at = \"Castor, Overton, Peterborough East\"",
        "context": "CREATE TABLE table_12221135_3 (arrival VARCHAR, operator VARCHAR, calling_at VARCHAR)",
        "question": "How many trains call at Castor, Overton, Peterborough East and are operated by LNWR?"
    },
    {
        "answer": "SELECT MIN(decile) FROM table_name_63 WHERE roll = 428",
        "context": "CREATE TABLE table_name_63 (decile INTEGER, roll VARCHAR)",
        "question": "Name the lelast decile for roll of 428"
    },
    {
        "answer": "SELECT colors FROM table_1221089_1 WHERE institution = \"University of Richmond\"",
        "context": "CREATE TABLE table_1221089_1 (colors VARCHAR, institution VARCHAR)",
        "question": "What are the the University of Richmond's school colors?"
    },
    {
        "answer": "SELECT MAX(year) FROM table_name_18 WHERE winners = \"hawthorn\" AND season_result = \"preliminary finalist\" AND crowd < 27 OFFSET 407",
        "context": "CREATE TABLE table_name_18 (year INTEGER, crowd VARCHAR, winners VARCHAR, season_result VARCHAR)",
        "question": "What's the highest year than hawthorn won with a season result of preliminary finalist and a crowd smaller than 27,407?"
    },
    {
        "answer": "SELECT central_bank FROM table_1222653_10 WHERE currency = \"Colombian peso (COP)\"",
        "context": "CREATE TABLE table_1222653_10 (central_bank VARCHAR, currency VARCHAR)",
        "question": "What's the name of the central bank in the country where Colombian Peso (cop) is the local currency?"
    },
    {
        "answer": "SELECT SUM(numer_of_jamaicans_granted_british_citizenship) FROM table_name_44 WHERE year = 2004 AND registration_of_a_minor_child > 640",
        "context": "CREATE TABLE table_name_44 (numer_of_jamaicans_granted_british_citizenship INTEGER, year VARCHAR, registration_of_a_minor_child VARCHAR)",
        "question": "Tell me the sum of number of jamaicans given british citizenship for 2004 and registration of a minor child more than 640"
    },
    {
        "answer": "SELECT title FROM table_name_50 WHERE guest_performer = \"black ice\" AND time = \"5:49\"",
        "context": "CREATE TABLE table_name_50 (title VARCHAR, guest_performer VARCHAR, time VARCHAR)",
        "question": "Which title has a Black Ice for a guest performer and a length of 5:49?"
    },
    {
        "answer": "SELECT COUNT(womens_doubles) FROM table_12232843_1 WHERE mens_singles = \"Jamie van Hooijdonk\"",
        "context": "CREATE TABLE table_12232843_1 (womens_doubles VARCHAR, mens_singles VARCHAR)",
        "question": "How many women doubles teams competed in the same year as when Jamie van Hooijdonk competed in men singles?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_77 WHERE away_team = \"south melbourne\"",
        "context": "CREATE TABLE table_name_77 (home_team VARCHAR, away_team VARCHAR)",
        "question": "What was the home team's score of the game where South Melbourne is the away team?"
    },
    {
        "answer": "SELECT venue FROM table_name_11 WHERE competition = \"2004 afc asian cup qualification\" AND date = \"november 18, 2003\"",
        "context": "CREATE TABLE table_name_11 (venue VARCHAR, competition VARCHAR, date VARCHAR)",
        "question": "Which venue hosted the 2004 AFC Asian Cup qualification on November 18, 2003?"
    },
    {
        "answer": "SELECT date FROM table_name_79 WHERE result = \"draw\" AND competition = \"friendly\" AND venue = \"dubai\"",
        "context": "CREATE TABLE table_name_79 (date VARCHAR, venue VARCHAR, result VARCHAR, competition VARCHAR)",
        "question": "On what date did a friendly competition, hosted in Dubai, result in a draw?"
    },
    {
        "answer": "SELECT trofeo_fast_team FROM table_12261714_2 WHERE stage = \"20\"",
        "context": "CREATE TABLE table_12261714_2 (trofeo_fast_team VARCHAR, stage VARCHAR)",
        "question": "What's the leader team in the Trofeo Fast Team in stage 20?"
    },
    {
        "answer": "SELECT winner FROM table_12261714_2 WHERE young_rider_classification = \"Francesco Casagrande\" AND stage = \"1a\"",
        "context": "CREATE TABLE table_12261714_2 (winner VARCHAR, young_rider_classification VARCHAR, stage VARCHAR)",
        "question": "Who's the winner in stage 1a, where the leader in the young rider classification is Francesco Casagrande?"
    },
    {
        "answer": "SELECT COUNT(general_classification) FROM table_12261806_2 WHERE stage = \"15\"",
        "context": "CREATE TABLE table_12261806_2 (general_classification VARCHAR, stage VARCHAR)",
        "question": "Name the general classification of stage 15"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_19 WHERE grid > 13 AND time_retired = \"engine\" AND driver = \"luigi piotti\"",
        "context": "CREATE TABLE table_name_19 (laps INTEGER, driver VARCHAR, grid VARCHAR, time_retired VARCHAR)",
        "question": "What was the highest lap for Luigi Piotti with more than 13 grid and a time/retired engine?"
    },
    {
        "answer": "SELECT COUNT(whites_as__percentage_of_pop) FROM table_12251936_1 WHERE gfr_2006 = \"53.2\"",
        "context": "CREATE TABLE table_12251936_1 (whites_as__percentage_of_pop VARCHAR, gfr_2006 VARCHAR)",
        "question": "How many times was the GFR 2006 equal to 53.2?"
    },
    {
        "answer": "SELECT COUNT(mens_doubles) FROM table_12266757_1 WHERE season = \"1970/1971\"",
        "context": "CREATE TABLE table_12266757_1 (mens_doubles VARCHAR, season VARCHAR)",
        "question": "How many mens doubles took place in 1970/1971?"
    },
    {
        "answer": "SELECT womens_singles FROM table_12266757_1 WHERE mens_doubles = \"Stefan Karlsson Claes Nordin , BK Aura GBK\"",
        "context": "CREATE TABLE table_12266757_1 (womens_singles VARCHAR, mens_doubles VARCHAR)",
        "question": "Who was the womens singles winnerwhen the mens doubles were  stefan karlsson claes nordin , bk aura gbk?"
    },
    {
        "answer": "SELECT AVG(wins) FROM table_name_85 WHERE division = \"central\" AND reds_season < 2000 AND losses < 81",
        "context": "CREATE TABLE table_name_85 (wins INTEGER, losses VARCHAR, division VARCHAR, reds_season VARCHAR)",
        "question": "How many wins were there in the 2000 season in the central division with less than 81 losses?"
    },
    {
        "answer": "SELECT MIN(win_percentage) FROM table_name_59 WHERE gb_[c_] = \"17\" AND reds_season = 1989",
        "context": "CREATE TABLE table_name_59 (win_percentage INTEGER, reds_season VARCHAR, gb_ VARCHAR, c_ VARCHAR)",
        "question": "What was the lowest percentages of wins in 1989 with a GB [c] of 17?"
    },
    {
        "answer": "SELECT denomination FROM table_12284476_8 WHERE year = 2008 AND reverse = \"Football\"",
        "context": "CREATE TABLE table_12284476_8 (denomination VARCHAR, year VARCHAR, reverse VARCHAR)",
        "question": "what's the\u00a0denomination\u00a0with\u00a0year\u00a0being 2008 and\u00a0reverse\u00a0being football"
    },
    {
        "answer": "SELECT AVG(gold) FROM table_name_65 WHERE nation = \"uzbekistan\" AND total < 24",
        "context": "CREATE TABLE table_name_65 (gold INTEGER, nation VARCHAR, total VARCHAR)",
        "question": "What is the average gold medals Uzbekistan, which has less than 24 total medals, has?"
    },
    {
        "answer": "SELECT grid FROM table_name_40 WHERE constructor = \"maserati\" AND laps = 14",
        "context": "CREATE TABLE table_name_40 (grid VARCHAR, constructor VARCHAR, laps VARCHAR)",
        "question": "What was the grid placement for the Maserati that completed 14 laps?"
    },
    {
        "answer": "SELECT athlete FROM table_1231316_7 WHERE location = \"Edwardsville\"",
        "context": "CREATE TABLE table_1231316_7 (athlete VARCHAR, location VARCHAR)",
        "question": "What is the athlete from Edwardsville?"
    },
    {
        "answer": "SELECT us_air_date FROM table_1231892_4 WHERE broadcast_order = \"S04 E01\"",
        "context": "CREATE TABLE table_1231892_4 (us_air_date VARCHAR, broadcast_order VARCHAR)",
        "question": "What's the original air date of the episode with a broadcast order s04 e01?"
    },
    {
        "answer": "SELECT result FROM table_name_24 WHERE field = \"bishop kearney field\" AND date = \"august 2\"",
        "context": "CREATE TABLE table_name_24 (result VARCHAR, field VARCHAR, date VARCHAR)",
        "question": "What is the result of the game at Bishop Kearney Field on August 2?"
    },
    {
        "answer": "SELECT constructor FROM table_name_21 WHERE race = \"argentine grand prix\"",
        "context": "CREATE TABLE table_name_21 (constructor VARCHAR, race VARCHAR)",
        "question": "Who was the Constructor at the Argentine Grand Prix?"
    },
    {
        "answer": "SELECT SUM(attendance) FROM table_name_59 WHERE home = \"montreal\" AND date = \"march 24\"",
        "context": "CREATE TABLE table_name_59 (attendance INTEGER, home VARCHAR, date VARCHAR)",
        "question": "What was the Attendance when the Home team was Montreal, on the Date of March 24?"
    },
    {
        "answer": "SELECT home_or_away FROM table_1233808_2 WHERE record = \"Biggest win\"",
        "context": "CREATE TABLE table_1233808_2 (home_or_away VARCHAR, record VARCHAR)",
        "question": "Is the biggest win recorded as home or away?"
    },
    {
        "answer": "SELECT Previous AS rank FROM table_name_92 WHERE nationality = \"italy\" AND points > 100",
        "context": "CREATE TABLE table_name_92 (Previous VARCHAR, nationality VARCHAR, points VARCHAR)",
        "question": "Tell me the previous rank for italy with points more than 100"
    },
    {
        "answer": "SELECT coverage__transmitter_site_ FROM table_12379297_1 WHERE station_type = \"Relay\" AND power__kw_ = \"5kW\" AND callsign = \"DYFJ-TV\"",
        "context": "CREATE TABLE table_12379297_1 (coverage__transmitter_site_ VARCHAR, callsign VARCHAR, station_type VARCHAR, power__kw_ VARCHAR)",
        "question": "What is the coverage of relay 5kw of dyfj-tv?"
    },
    {
        "answer": "SELECT ch__number FROM table_12379297_1 WHERE callsign = \"DWLJ-TV\"",
        "context": "CREATE TABLE table_12379297_1 (ch__number VARCHAR, callsign VARCHAR)",
        "question": "What is the ch# of dwlj-tv?"
    },
    {
        "answer": "SELECT athlete__noc_ FROM table_12407546_1 WHERE swimming = \"2:05.63 (1296 pts)\"",
        "context": "CREATE TABLE table_12407546_1 (athlete__noc_ VARCHAR, swimming VARCHAR)",
        "question": "Who's the player with 2:05.63 (1296 pts) swimming score?"
    },
    {
        "answer": "SELECT hebrew_word FROM table_1242447_2 WHERE strongs_words_compounded = \"'adown [# 113] & Yahu\"",
        "context": "CREATE TABLE table_1242447_2 (hebrew_word VARCHAR, strongs_words_compounded VARCHAR)",
        "question": "List the hebrew word for the strongs words compounded of 'adown [# 113] & yahu"
    },
    {
        "answer": "SELECT main_cast_seasons FROM table_12441518_1 WHERE character = \"Nick Lucas\"",
        "context": "CREATE TABLE table_12441518_1 (main_cast_seasons VARCHAR, character VARCHAR)",
        "question": "What seasons does Nick lucas appear?"
    },
    {
        "answer": "SELECT d_49_\u221a FROM table_name_24 WHERE d_46_\u221a = \"i 1 @\"",
        "context": "CREATE TABLE table_name_24 (d_49_\u221a VARCHAR, d_46_\u221a VARCHAR)",
        "question": "Name the D 49 \u221a for when D 46 \u221a of i 1 @"
    },
    {
        "answer": "SELECT prize_money FROM table_12454156_1 WHERE runner_up = \"John Tabatabai\"",
        "context": "CREATE TABLE table_12454156_1 (prize_money VARCHAR, runner_up VARCHAR)",
        "question": "What was the total prize money where John Tabatabai was the runner-up?"
    },
    {
        "answer": "SELECT circuit FROM table_name_63 WHERE winning_constructor = \"darracq\" AND name = \"cuban race\"",
        "context": "CREATE TABLE table_name_63 (circuit VARCHAR, winning_constructor VARCHAR, name VARCHAR)",
        "question": "Name the circuit for darracq and name of cuban race"
    },
    {
        "answer": "SELECT record FROM table_name_42 WHERE home = \"tampa bay\" AND date = \"december 4\"",
        "context": "CREATE TABLE table_name_42 (record VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "On December 4, Tampa Bay has a record of 12-13-2."
    },
    {
        "answer": "SELECT remarks FROM table_name_23 WHERE rank > 2 AND alliance = \"skyteam (2012)\"",
        "context": "CREATE TABLE table_name_23 (remarks VARCHAR, rank VARCHAR, alliance VARCHAR)",
        "question": "What are the remarks for the entry ranked greater than 2 with a skyteam (2012) alliance?"
    },
    {
        "answer": "SELECT MAX(population_august_15), _2012 FROM table_12496904_1 WHERE population_density_2012__km_2__ = 307",
        "context": "CREATE TABLE table_12496904_1 (_2012 VARCHAR, population_august_15 INTEGER, population_density_2012__km_2__ VARCHAR)",
        "question": "What is the August 15, 2012 population when the  population density of 2012 is 307?"
    },
    {
        "answer": "SELECT prize_money FROM table_12454156_1 WHERE runner_up = \"Fabrizio Baldassari\"",
        "context": "CREATE TABLE table_12454156_1 (prize_money VARCHAR, runner_up VARCHAR)",
        "question": "When Fabrizio Baldassari is the runner-up what is the total prize money?"
    },
    {
        "answer": "SELECT percent_of_slovenes_1991 FROM table_name_76 WHERE village__slovenian_ = \"rut\"",
        "context": "CREATE TABLE table_name_76 (percent_of_slovenes_1991 VARCHAR, village__slovenian_ VARCHAR)",
        "question": "What was Rut's Slovenes percentage in 1991?"
    },
    {
        "answer": "SELECT MAX(rank_in_nyagatare_sectors), _2012 FROM table_12496904_1 WHERE population_change_2002_2012___percentage_ = \"35.5\"",
        "context": "CREATE TABLE table_12496904_1 (_2012 VARCHAR, rank_in_nyagatare_sectors INTEGER, population_change_2002_2012___percentage_ VARCHAR)",
        "question": "When the population change 2002-2012 (%) is 35.5 what is the rank in nyagatare sectors?"
    },
    {
        "answer": "SELECT gross_capacity FROM table_name_17 WHERE commercial_operation = \"august 28, 1987\"",
        "context": "CREATE TABLE table_name_17 (gross_capacity VARCHAR, commercial_operation VARCHAR)",
        "question": "What is the gross capacity of the unit that started commercial operation on August 28, 1987?"
    },
    {
        "answer": "SELECT gross_capacity FROM table_name_54 WHERE reactor_type = \"abwr\"",
        "context": "CREATE TABLE table_name_54 (gross_capacity VARCHAR, reactor_type VARCHAR)",
        "question": "What is the gross capacity where the reactor is ABWR type?"
    },
    {
        "answer": "SELECT notes FROM table_12562214_1 WHERE date__from_ = \"12 August 1897\"",
        "context": "CREATE TABLE table_12562214_1 (notes VARCHAR, date__from_ VARCHAR)",
        "question": "what are the notes for date (from) 12 august 1897?"
    },
    {
        "answer": "SELECT MAX(population__stanthorpe_) FROM table_12584173_1 WHERE population__rosenthal_ = 1548",
        "context": "CREATE TABLE table_12584173_1 (population__stanthorpe_ INTEGER, population__rosenthal_ VARCHAR)",
        "question": "What was the population in Stanthorpe in the year when the population in Rosenthal was 1548?"
    },
    {
        "answer": "SELECT MIN(grid) FROM table_name_18 WHERE driver = \"gerhard berger\" AND laps > 56",
        "context": "CREATE TABLE table_name_18 (grid INTEGER, driver VARCHAR, laps VARCHAR)",
        "question": "What is the low grid for gerhard berger for laps over 56?"
    },
    {
        "answer": "SELECT teaching_language FROM table_12591022_2 WHERE duration__years_ = \"3.5\"",
        "context": "CREATE TABLE table_12591022_2 (teaching_language VARCHAR, duration__years_ VARCHAR)",
        "question": "What is the teaching language with the duration (years) 3.5?"
    },
    {
        "answer": "SELECT compound_name FROM table_12715053_1 WHERE marine_organism_\u03b1 = \"Worm\"",
        "context": "CREATE TABLE table_12715053_1 (compound_name VARCHAR, marine_organism_\u03b1 VARCHAR)",
        "question": "What is the compound name listed where marine organism \u03b1 is worm"
    },
    {
        "answer": "SELECT COUNT(compound_name) FROM table_12715053_1 WHERE chemical_class = \"Depsipeptide\" AND clinical_trials_\u03b2 = \"1/7\"",
        "context": "CREATE TABLE table_12715053_1 (compound_name VARCHAR, chemical_class VARCHAR, clinical_trials_\u03b2 VARCHAR)",
        "question": "How many compound names list a chemical class of depsipeptide and a clinical trials \u03b2 value of 1/7?"
    },
    {
        "answer": "SELECT clock_speed FROM table_12740151_8 WHERE price___usd__ = \"$910\"",
        "context": "CREATE TABLE table_12740151_8 (clock_speed VARCHAR, price___usd__ VARCHAR)",
        "question": "What's the clock speed of the model that costs $910?"
    },
    {
        "answer": "SELECT right_ascension___j2000__ FROM table_name_53 WHERE constellation = \"sextans\" AND declination___j2000__ = \"\u00b028\u203201\u2033\"",
        "context": "CREATE TABLE table_name_53 (right_ascension___j2000__ VARCHAR, constellation VARCHAR, declination___j2000__ VARCHAR)",
        "question": "what is the right ascension (j2000) when the constellation is sextans and the declination (j2000) is \u00b028\u203201\u2033?"
    },
    {
        "answer": "SELECT saturday_saturnus___saturn_ FROM table_1277350_1 WHERE wednesday_mercurius__mercury_ = \"Mercuridi\"",
        "context": "CREATE TABLE table_1277350_1 (saturday_saturnus___saturn_ VARCHAR, wednesday_mercurius__mercury_ VARCHAR)",
        "question": "what's the\u00a0saturday saturnus ( saturn)\u00a0with\u00a0wednesday mercurius (mercury)\u00a0being mercuridi"
    },
    {
        "answer": "SELECT constellation FROM table_name_10 WHERE right_ascension___j2000__ = \"10h18m58.4s\"",
        "context": "CREATE TABLE table_name_10 (constellation VARCHAR, right_ascension___j2000__ VARCHAR)",
        "question": "what is the constellation when the Right ascension ( J2000 ) is 10h18m58.4s?"
    },
    {
        "answer": "SELECT AVG(goals) FROM table_name_26 WHERE result = \"0 \u2013 4\"",
        "context": "CREATE TABLE table_name_26 (goals INTEGER, result VARCHAR)",
        "question": "How many Goals have a Result of 0 \u2013 4?"
    },
    {
        "answer": "SELECT sunday_surya__the_sun_ FROM table_1277350_3 WHERE thursday_guru__jupiter_ = \"\u0628\u0631\u0633 \u0648\u0627\u0631 Bres'var\"",
        "context": "CREATE TABLE table_1277350_3 (sunday_surya__the_sun_ VARCHAR, thursday_guru__jupiter_ VARCHAR)",
        "question": "In language where Thursday is \u0628\u0631\u0633 \u0648\u0627\u0631 bres'var, what is Sunday?"
    },
    {
        "answer": "SELECT MIN(freight_carried_s_tonne) FROM table_12791809_1 WHERE super_b_capacity_reached_[_citation_needed_] = \"February 26\"",
        "context": "CREATE TABLE table_12791809_1 (freight_carried_s_tonne INTEGER, super_b_capacity_reached_ VARCHAR, _citation_needed_ VARCHAR)",
        "question": "What is the least amount of freight carried when the super b capacity reached was February 26?"
    },
    {
        "answer": "SELECT won FROM table_12792876_2 WHERE \"club\" = \"club\"",
        "context": "CREATE TABLE table_12792876_2 (won VARCHAR)",
        "question": "What is the third entry in the row with a first entry of \"club\"?"
    },
    {
        "answer": "SELECT tries_against FROM table_12792876_3 WHERE drawn = \"2\"",
        "context": "CREATE TABLE table_12792876_3 (tries_against VARCHAR, drawn VARCHAR)",
        "question": "What was the tries against when the drawn was 2?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_57 WHERE category = \"most popular actress\" AND nominated_for = \"birds of a feather\"",
        "context": "CREATE TABLE table_name_57 (year INTEGER, category VARCHAR, nominated_for VARCHAR)",
        "question": "Name the year that Birds of a feather category for most popular actress was nominated"
    },
    {
        "answer": "SELECT earnings__\u20ac_ FROM table_12821159_14 WHERE cuts_made = 19 AND money_list_rank = 3",
        "context": "CREATE TABLE table_12821159_14 (earnings__\u20ac_ VARCHAR, cuts_made VARCHAR, money_list_rank VARCHAR)",
        "question": "What was the number of earnings were cuts made are 19 and money list rank is 3?"
    },
    {
        "answer": "SELECT winning_party_2003 FROM table_name_26 WHERE swing_to_gain < 2.92 AND result = \"ld hold\"",
        "context": "CREATE TABLE table_name_26 (winning_party_2003 VARCHAR, swing_to_gain VARCHAR, result VARCHAR)",
        "question": "Which party won in 2003, that had a swing to gain of less than 2.92 and which resulted in a ld hold?"
    },
    {
        "answer": "SELECT rank FROM table_name_21 WHERE winning_party_2003 = \"labour\" AND swing_to_gain > 2.13 AND result = \"lab hold\" AND constituency = \"linlithgow\"",
        "context": "CREATE TABLE table_name_21 (rank VARCHAR, constituency VARCHAR, result VARCHAR, winning_party_2003 VARCHAR, swing_to_gain VARCHAR)",
        "question": "Which rank had the Labour party winning in 2003, a swing to gain that was larger than 2.13, a lab hold as a result, and which took place in the Linlithgow constituency?"
    },
    {
        "answer": "SELECT COUNT(rain) FROM table_12837_1 WHERE sunlight_hours = 1966",
        "context": "CREATE TABLE table_12837_1 (rain VARCHAR, sunlight_hours VARCHAR)",
        "question": "How many rain figures are provided for sunlight hours in 1966?"
    },
    {
        "answer": "SELECT city FROM table_name_23 WHERE completion = \"1910-1978\"",
        "context": "CREATE TABLE table_name_23 (city VARCHAR, completion VARCHAR)",
        "question": "What city was completed in 1910-1978?"
    },
    {
        "answer": "SELECT opponent FROM table_name_69 WHERE field = \"mitchel athletic complex\"",
        "context": "CREATE TABLE table_name_69 (opponent VARCHAR, field VARCHAR)",
        "question": "Name the opponent when the field is mitchel athletic complex"
    },
    {
        "answer": "SELECT date FROM table_name_81 WHERE home_away = \"away\" AND opponent = \"bayhawks\"",
        "context": "CREATE TABLE table_name_81 (date VARCHAR, home_away VARCHAR, opponent VARCHAR)",
        "question": "Name the date for when the home/away is away and the opponent is bayhawks"
    },
    {
        "answer": "SELECT opponent FROM table_name_37 WHERE home_away = \"home\" AND result = \"w 16-15\"",
        "context": "CREATE TABLE table_name_37 (opponent VARCHAR, home_away VARCHAR, result VARCHAR)",
        "question": "Name the opponent when the result is w 16-15 and has home/away of home"
    },
    {
        "answer": "SELECT clean_ & _jerk FROM table_name_36 WHERE bodyweight < 76.55 AND total__kg_ = \"\u2013\"",
        "context": "CREATE TABLE table_name_36 (clean_ VARCHAR, _jerk VARCHAR, bodyweight VARCHAR, total__kg_ VARCHAR)",
        "question": "What is the Clean & jerk for the bodyweight less than 76.55, and the Total (kg) of \u2013?"
    },
    {
        "answer": "SELECT result FROM table_name_9 WHERE location = \"murcia (esp)\" AND year < 1999 AND competition = \"europe/africa group i, round robin\"",
        "context": "CREATE TABLE table_name_9 (result VARCHAR, competition VARCHAR, location VARCHAR, year VARCHAR)",
        "question": "What is the result of the europe/africa group i, round robin game in Murcia (esp) before 1999?"
    },
    {
        "answer": "SELECT finals_mvp FROM table_name_26 WHERE eastern_champion = \"detroit shock\" AND western_champion = \"sacramento monarchs\"",
        "context": "CREATE TABLE table_name_26 (finals_mvp VARCHAR, eastern_champion VARCHAR, western_champion VARCHAR)",
        "question": "Who is the MVP finals that includes Detroit shock from the eastern championship and Sacramento monarchs from western championship?"
    },
    {
        "answer": "SELECT MAX(year_born) FROM table_12962773_14 WHERE height = \"2.02\"",
        "context": "CREATE TABLE table_12962773_14 (year_born INTEGER, height VARCHAR)",
        "question": "What year was the player born who is 2.02m tall?"
    },
    {
        "answer": "SELECT COUNT(current_club) FROM table_12962773_15 WHERE no = 6",
        "context": "CREATE TABLE table_12962773_15 (current_club VARCHAR, no VARCHAR)",
        "question": "How many clubs does number 6 play for?"
    },
    {
        "answer": "SELECT player FROM table_name_97 WHERE college = \"san sebastian\"",
        "context": "CREATE TABLE table_name_97 (player VARCHAR, college VARCHAR)",
        "question": "What player has a college named san sebastian?"
    },
    {
        "answer": "SELECT original_air_date FROM table_name_88 WHERE season__number < 14 AND production_code > 709 AND series__number < 183",
        "context": "CREATE TABLE table_name_88 (original_air_date VARCHAR, series__number VARCHAR, season__number VARCHAR, production_code VARCHAR)",
        "question": "Name the air date for the seasons before 14 and series less than 183 with production code more than 709"
    },
    {
        "answer": "SELECT total_power FROM table_12983929_1 WHERE construction_finish = \"14.06.1963\"",
        "context": "CREATE TABLE table_12983929_1 (total_power VARCHAR, construction_finish VARCHAR)",
        "question": "What's the total power of the unit whose construction finished on 14.06.1963?"
    },
    {
        "answer": "SELECT COUNT(total_power) FROM table_12983929_1 WHERE construction_start = \"01.03.1977\" AND commercial_operation = \"01.02.1984\"",
        "context": "CREATE TABLE table_12983929_1 (total_power VARCHAR, construction_start VARCHAR, commercial_operation VARCHAR)",
        "question": "How many different values of total power are there for the unit whose construction started on 01.03.1977 and whose commercial operation started on 01.02.1984?"
    },
    {
        "answer": "SELECT MIN(total_viewers) FROM table_12995531_3 WHERE date_of_first_broadcast = \"28 January 2010\" AND episode_number = 1",
        "context": "CREATE TABLE table_12995531_3 (total_viewers INTEGER, date_of_first_broadcast VARCHAR, episode_number VARCHAR)",
        "question": "what is the total viewers where the date of first broadcast is 28 january 2010 and the episode number is 1?"
    },
    {
        "answer": "SELECT grid FROM table_name_11 WHERE driver = \"pierre levegh\"",
        "context": "CREATE TABLE table_name_11 (grid VARCHAR, driver VARCHAR)",
        "question": "what is the grid when the driver is pierre levegh?"
    },
    {
        "answer": "SELECT series_number FROM table_12995531_3 WHERE date_of_first_broadcast = \"16 October 2008\"",
        "context": "CREATE TABLE table_12995531_3 (series_number VARCHAR, date_of_first_broadcast VARCHAR)",
        "question": "what is  the series number where the date of first broadcast is 16 october 2008?"
    },
    {
        "answer": "SELECT debut FROM table_name_11 WHERE position = \"defender\" AND name = \"stephen laybutt\"",
        "context": "CREATE TABLE table_name_11 (debut VARCHAR, position VARCHAR, name VARCHAR)",
        "question": "What round was the debut of defender Stephen Laybutt?"
    },
    {
        "answer": "SELECT winning_team FROM table_name_31 WHERE year > 2003 AND score = \"19\u00bd\u201314\u00bd\" AND venue = \"harding park golf club\"",
        "context": "CREATE TABLE table_name_31 (winning_team VARCHAR, venue VARCHAR, year VARCHAR, score VARCHAR)",
        "question": "Who is the winning team when the year is more than 2003, the score is 19\u00bd\u201314\u00bd and the venue is harding park golf club?"
    },
    {
        "answer": "SELECT location FROM table_name_21 WHERE year < 1998 AND international_captain = \"david graham\"",
        "context": "CREATE TABLE table_name_21 (location VARCHAR, year VARCHAR, international_captain VARCHAR)",
        "question": "what is the location when the year is less than 1998 and the international captain is david graham?"
    },
    {
        "answer": "SELECT date FROM table_13023925_2 WHERE week = 14",
        "context": "CREATE TABLE table_13023925_2 (date VARCHAR, week VARCHAR)",
        "question": "What was the date of the game in week 14?"
    },
    {
        "answer": "SELECT Vice - captain FROM table_1301373_7 WHERE club = \"Melbourne Victory\"",
        "context": "CREATE TABLE table_1301373_7 (Vice VARCHAR, captain VARCHAR, club VARCHAR)",
        "question": "Name the vice captain for melbourne victory"
    },
    {
        "answer": "SELECT margin FROM table_13026799_1 WHERE championship = \"Masters Tournament\"",
        "context": "CREATE TABLE table_13026799_1 (margin VARCHAR, championship VARCHAR)",
        "question": "What was the margin of the Masters Tournament?"
    },
    {
        "answer": "SELECT winning_score FROM table_13026799_1 WHERE championship = \"PGA championship (3)\"",
        "context": "CREATE TABLE table_13026799_1 (winning_score VARCHAR, championship VARCHAR)",
        "question": "What was the winning score of the PGA Championship (3)?"
    },
    {
        "answer": "SELECT height FROM table_name_72 WHERE school = \"lake howell high school\"",
        "context": "CREATE TABLE table_name_72 (height VARCHAR, school VARCHAR)",
        "question": "What's the heigh of the player who went to lake howell high school?"
    },
    {
        "answer": "SELECT COUNT(week) FROM table_name_71 WHERE game_site = \"robert f. kennedy memorial stadium\" AND attendance > 54 OFFSET 633",
        "context": "CREATE TABLE table_name_71 (week VARCHAR, game_site VARCHAR, attendance VARCHAR)",
        "question": "What week was the game played at Robert f. Kennedy memorial stadium with more than 54,633 people in attendance?"
    },
    {
        "answer": "SELECT others_percentage FROM table_1304443_2 WHERE bush_percentage = \"51.6%\"",
        "context": "CREATE TABLE table_1304443_2 (others_percentage VARCHAR, bush_percentage VARCHAR)",
        "question": "What's the percentage of votes for other candidates in the county where Bush got 51.6% of the votes?"
    },
    {
        "answer": "SELECT county FROM table_1304443_2 WHERE bush_percentage = \"54.6%\"",
        "context": "CREATE TABLE table_1304443_2 (county VARCHAR, bush_percentage VARCHAR)",
        "question": "What's the name of the county where 54.6% voted for Bush?"
    },
    {
        "answer": "SELECT COUNT(silver) FROM table_name_33 WHERE sport = \"karate\" AND gold > 2",
        "context": "CREATE TABLE table_name_33 (silver VARCHAR, sport VARCHAR, gold VARCHAR)",
        "question": "What is the total number of silver medals for karate athletes with over 2 golds?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_13079788_3 WHERE gt3_winner = \"Hector Lester Tim Mullen\" AND pole_position = \"Jonny Cocker Paul Drayson\"",
        "context": "CREATE TABLE table_13079788_3 (round INTEGER, gt3_winner VARCHAR, pole_position VARCHAR)",
        "question": "what is the maximum round for gt3 winner hector lester tim mullen and pole position of jonny cocker paul drayson"
    },
    {
        "answer": "SELECT circuit FROM table_13079788_3 WHERE gtc_winner = \"Graeme Mundy Jamie Smyth\" AND pole_position = \"Bradley Ellis Alex Mortimer\"",
        "context": "CREATE TABLE table_13079788_3 (circuit VARCHAR, gtc_winner VARCHAR, pole_position VARCHAR)",
        "question": "what are all the circuit for gtc winner graeme mundy jamie smyth and pole position bradley ellis alex mortimer"
    },
    {
        "answer": "SELECT AVG(attendance) FROM table_name_34 WHERE venue = \"home\" AND result = \"w 3-0\"",
        "context": "CREATE TABLE table_name_34 (attendance INTEGER, venue VARCHAR, result VARCHAR)",
        "question": "what was the attendance for a home venue and a w 3-0 result?"
    },
    {
        "answer": "SELECT MIN(qualifying_rank) FROM table_13114949_3",
        "context": "CREATE TABLE table_13114949_3 (qualifying_rank INTEGER)",
        "question": "what is the lowest qualifying rank?"
    },
    {
        "answer": "SELECT MAX(qualifying_rank) FROM table_13114949_3 WHERE competition = \"Olympic Trials\" AND final_rank = \"4\" AND qualifying_score = \"15.100\"",
        "context": "CREATE TABLE table_13114949_3 (qualifying_rank INTEGER, qualifying_score VARCHAR, competition VARCHAR, final_rank VARCHAR)",
        "question": "what is the highest qualifying rank where the competition is olympic trials, the final-rank is 4 and qualifying score is 15.100?"
    },
    {
        "answer": "SELECT _number FROM table_13183076_3 WHERE production_code = \"3T7057\"",
        "context": "CREATE TABLE table_13183076_3 (_number VARCHAR, production_code VARCHAR)",
        "question": "What is the # for the episode with a Production code of 3T7057?"
    },
    {
        "answer": "SELECT original_air_date FROM table_13183076_3 WHERE directed_by = \"Tricia Brock\"",
        "context": "CREATE TABLE table_13183076_3 (original_air_date VARCHAR, directed_by VARCHAR)",
        "question": "What is the Original air date for the episode directed by Tricia Brock?"
    },
    {
        "answer": "SELECT COUNT(michelob_ultra_mountains_classification_gold_polka_dot_jersey) FROM table_13223187_1 WHERE drury_hotels_most_aggressive_rider_red_jersey = \"Darren Lill\"",
        "context": "CREATE TABLE table_13223187_1 (michelob_ultra_mountains_classification_gold_polka_dot_jersey VARCHAR, drury_hotels_most_aggressive_rider_red_jersey VARCHAR)",
        "question": "How many michelob ultra mountains classification for darren lill"
    },
    {
        "answer": "SELECT AVG(goals_conceded__gc_) FROM table_name_80 WHERE goals_scored__gf_ > 19 AND points__pts_ = 31 AND draw__pe_ > 7",
        "context": "CREATE TABLE table_name_80 (goals_conceded__gc_ INTEGER, draw__pe_ VARCHAR, goals_scored__gf_ VARCHAR, points__pts_ VARCHAR)",
        "question": "What is the average number of goals conceded where more than 19 goals were scored, the team had 31 points, and more than 7 draws?"
    },
    {
        "answer": "SELECT constructor FROM table_name_77 WHERE entrant = \"officine alfieri maserati\" AND driver = \"sergio mantovani\"",
        "context": "CREATE TABLE table_name_77 (constructor VARCHAR, entrant VARCHAR, driver VARCHAR)",
        "question": "Who was the constructor of the officine alfieri maserati that was driven by Sergio Mantovani?"
    },
    {
        "answer": "SELECT opponent FROM table_13259009_2 WHERE game_site = \"Mile High Stadium\"",
        "context": "CREATE TABLE table_13259009_2 (opponent VARCHAR, game_site VARCHAR)",
        "question": "What team was the opponent at Mile High Stadium?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_57 WHERE position = \"5th\" AND venue = \"santiago, chile\"",
        "context": "CREATE TABLE table_name_57 (year INTEGER, position VARCHAR, venue VARCHAR)",
        "question": "What is the average year they finished 5th in santiago, chile?"
    },
    {
        "answer": "SELECT us_viewers__millions_ FROM table_13301516_1 WHERE original_air_date = \"November 13, 2007\"",
        "context": "CREATE TABLE table_13301516_1 (us_viewers__millions_ VARCHAR, original_air_date VARCHAR)",
        "question": "How many U.S. viewers, in millions, watched the episode that aired on November 13, 2007?"
    },
    {
        "answer": "SELECT nation FROM table_name_10 WHERE gold = 0 AND rank > 14 AND total = 1 AND silver < 1",
        "context": "CREATE TABLE table_name_10 (nation VARCHAR, silver VARCHAR, total VARCHAR, gold VARCHAR, rank VARCHAR)",
        "question": "Which nation has 0 gold, a rank greater than 14, a total of 1, and silver less than 1?"
    },
    {
        "answer": "SELECT us_viewers__millions_ FROM table_13301516_1 WHERE no_in_series = 185",
        "context": "CREATE TABLE table_13301516_1 (us_viewers__millions_ VARCHAR, no_in_series VARCHAR)",
        "question": "How many millions of U.S. viewers watched episode 185?"
    },
    {
        "answer": "SELECT date_of_election FROM table_1329532_2 WHERE elected_successor = \"Arthur Hodges\"",
        "context": "CREATE TABLE table_1329532_2 (date_of_election VARCHAR, elected_successor VARCHAR)",
        "question": "What was the election date for Arthur Hodges?"
    },
    {
        "answer": "SELECT date FROM table_13328239_4 WHERE venue = \"Halton Stadium\"",
        "context": "CREATE TABLE table_13328239_4 (date VARCHAR, venue VARCHAR)",
        "question": "When was the game happening at Halton Stadium?"
    },
    {
        "answer": "SELECT country FROM table_1333612_1 WHERE es_mulatto = \"3.5%\"",
        "context": "CREATE TABLE table_1333612_1 (country VARCHAR, es_mulatto VARCHAR)",
        "question": "what's the\u00a0country\u00a0with\u00a0es mulatto\u00a0being 3.5%"
    },
    {
        "answer": "SELECT max_power_at_rpm FROM table_name_90 WHERE displacement = \"1968cc\" AND engine_name = \"2.0 tdi\"",
        "context": "CREATE TABLE table_name_90 (max_power_at_rpm VARCHAR, displacement VARCHAR, engine_name VARCHAR)",
        "question": "What is the maximum power at rpm for the engine named 2.0 TDI that has a 1968cc displacement?"
    },
    {
        "answer": "SELECT engine_name FROM table_name_42 WHERE max_torque_at_rpm = \"n\u00b7m ( lbf\u00b7ft ) @ 3,800\"",
        "context": "CREATE TABLE table_name_42 (engine_name VARCHAR, max_torque_at_rpm VARCHAR)",
        "question": "What is the engine name that has a maximum torque at rpm of n\u00b7m ( lbf\u00b7ft ) @ 3,800?"
    },
    {
        "answer": "SELECT COUNT(region_4) FROM table_1337525_1 WHERE complete_series = \"The Complete Seventh Series\"",
        "context": "CREATE TABLE table_1337525_1 (region_4 VARCHAR, complete_series VARCHAR)",
        "question": "What is the number of region 4 for the series of the complete seventh series?"
    },
    {
        "answer": "SELECT region_4 FROM table_1337525_1 WHERE complete_series = \"The Complete Fifth Series\"",
        "context": "CREATE TABLE table_1337525_1 (region_4 VARCHAR, complete_series VARCHAR)",
        "question": "Name the region 4 for the complete fifth series"
    },
    {
        "answer": "SELECT COUNT(losing_bonus) FROM table_13399573_3 WHERE tries_for = \"68\"",
        "context": "CREATE TABLE table_13399573_3 (losing_bonus VARCHAR, tries_for VARCHAR)",
        "question": "How many numbers were listed under losing bonus when there were 68 tries for?"
    },
    {
        "answer": "SELECT points_for FROM table_13399573_3 WHERE points = \"52\"",
        "context": "CREATE TABLE table_13399573_3 (points_for VARCHAR, points VARCHAR)",
        "question": "What amount of points for were there when there was 52 points?"
    },
    {
        "answer": "SELECT COUNT(total) FROM table_name_74 WHERE silver > 0 AND bronze > 21 AND gold > 29",
        "context": "CREATE TABLE table_name_74 (total VARCHAR, gold VARCHAR, silver VARCHAR, bronze VARCHAR)",
        "question": "I want to know the total for silver more than 0 with bronze more than 21 and gold more than 29"
    },
    {
        "answer": "SELECT tournament FROM table_name_15 WHERE opponents_in_the_final = \"rod laver fred stolle\"",
        "context": "CREATE TABLE table_name_15 (tournament VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "What is the Tournament with a Opponents in the final with rod laver fred stolle?"
    },
    {
        "answer": "SELECT tournament FROM table_name_66 WHERE date > 1973 AND opponents_in_the_final = \"hank pfister sherwood stewart\"",
        "context": "CREATE TABLE table_name_66 (tournament VARCHAR, date VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "What is the Tournament with a Date larger than 1973, with Opponents in the final with hank pfister sherwood stewart?"
    },
    {
        "answer": "SELECT polyunsaturated_fat FROM table_name_96 WHERE total_fat = \"100g\" AND monounsaturated_fat = \"20g (84g in high oleic variety)\"",
        "context": "CREATE TABLE table_name_96 (polyunsaturated_fat VARCHAR, total_fat VARCHAR, monounsaturated_fat VARCHAR)",
        "question": "Name the polyunsaturated fat with total fat of 100g and monounsaturated fat of 20g (84g in high oleic variety)"
    },
    {
        "answer": "SELECT french_abbr FROM table_name_23 WHERE group_name = \"european progressive democrats\"",
        "context": "CREATE TABLE table_name_23 (french_abbr VARCHAR, group_name VARCHAR)",
        "question": "For the group name European Progressive Democrats what is the French abbr?"
    },
    {
        "answer": "SELECT candidates FROM table_1341423_38 WHERE district = \"Pennsylvania 3\"",
        "context": "CREATE TABLE table_1341423_38 (candidates VARCHAR, district VARCHAR)",
        "question": "Who were the candidates in district Pennsylvania 3?"
    },
    {
        "answer": "SELECT COUNT(lost) FROM table_name_66 WHERE period = \"12 november 2012 \u2013 27 november 2012\" AND managed > 2",
        "context": "CREATE TABLE table_name_66 (lost VARCHAR, period VARCHAR, managed VARCHAR)",
        "question": "How many lost when the number managed is over 2 and the period is from 12 november 2012 \u2013 27 november 2012?"
    },
    {
        "answer": "SELECT MIN(season) FROM table_name_46 WHERE venue = \"waverley park\" AND score = \"15.12 (102) \u2013 9.14 (68)\" AND margin > 34",
        "context": "CREATE TABLE table_name_46 (season INTEGER, margin VARCHAR, venue VARCHAR, score VARCHAR)",
        "question": "When is the earliest season at waverley park, a Score of 15.12 (102) \u2013 9.14 (68), and a Margin larger than 34?"
    },
    {
        "answer": "SELECT COUNT(crowd) FROM table_name_21 WHERE away_team = \"footscray\"",
        "context": "CREATE TABLE table_name_21 (crowd VARCHAR, away_team VARCHAR)",
        "question": "What was the crowd size for the game where Footscray was the away team?"
    },
    {
        "answer": "SELECT AVG(share) FROM table_name_29 WHERE RANK(timeslot) > 3 AND viewers__m_ < 4.87",
        "context": "CREATE TABLE table_name_29 (share INTEGER, viewers__m_ VARCHAR, timeslot VARCHAR)",
        "question": "What's the average of shows that had a timeslot rank greater that 3 but still had a smaller viewership less than 4.87?"
    },
    {
        "answer": "SELECT record FROM table_name_61 WHERE points < 98 AND opponent = \"canucks\"",
        "context": "CREATE TABLE table_name_61 (record VARCHAR, points VARCHAR, opponent VARCHAR)",
        "question": "What is the record when they play the canucks and have under 98 points?"
    },
    {
        "answer": "SELECT first_elected FROM table_1341453_40 WHERE district = \"Pennsylvania 2\"",
        "context": "CREATE TABLE table_1341453_40 (first_elected VARCHAR, district VARCHAR)",
        "question": "When was Chaka Fattah first elected in the Pennsylvania 2 district? "
    },
    {
        "answer": "SELECT other_performer_s_ FROM table_name_4 WHERE director_s_ = \"melina matsoukas\" AND album = \"loud\"",
        "context": "CREATE TABLE table_name_4 (other_performer_s_ VARCHAR, director_s_ VARCHAR, album VARCHAR)",
        "question": "On the album titled \u201cLoud\u201d who was the other performer on the song directed by Melina Matsoukas?"
    },
    {
        "answer": "SELECT position FROM table_name_59 WHERE club_province = \"meralomas\" AND player = \"david biddle\"",
        "context": "CREATE TABLE table_name_59 (position VARCHAR, club_province VARCHAR, player VARCHAR)",
        "question": "Which position has a club of Meralomas and a player named David Biddle?"
    },
    {
        "answer": "SELECT COUNT(district) FROM table_1341453_7 WHERE incumbent = \"Gary Condit\"",
        "context": "CREATE TABLE table_1341453_7 (district VARCHAR, incumbent VARCHAR)",
        "question": "How many districts does gary condit represent?"
    },
    {
        "answer": "SELECT AVG(area__km_2__) FROM table_name_80 WHERE code = 98030 AND population > 312",
        "context": "CREATE TABLE table_name_80 (area__km_2__ INTEGER, code VARCHAR, population VARCHAR)",
        "question": "What is the average area for code 98030 with population over 312?"
    },
    {
        "answer": "SELECT district FROM table_1341472_12 WHERE incumbent = \"Mac Collins\"",
        "context": "CREATE TABLE table_1341472_12 (district VARCHAR, incumbent VARCHAR)",
        "question": "What district is Mac Collins an incumbent in?"
    },
    {
        "answer": "SELECT candidates FROM table_1341472_12 WHERE incumbent = \"Charlie Norwood\"",
        "context": "CREATE TABLE table_1341472_12 (candidates VARCHAR, incumbent VARCHAR)",
        "question": "Who were the candidates in the district where Charlie Norwood is the incumbent?"
    },
    {
        "answer": "SELECT party FROM table_1341472_15 WHERE candidates = \"Jerry Weller (R) 51.77% Clem Balanoff (D) 48.23%\"",
        "context": "CREATE TABLE table_1341472_15 (party VARCHAR, candidates VARCHAR)",
        "question": "what's the\u00a0party\u00a0with\u00a0candidates\u00a0 jerry weller (r) 51.77% clem balanoff (d) 48.23%"
    },
    {
        "answer": "SELECT type FROM table_name_65 WHERE species = \"unspecified\" AND genes < 367",
        "context": "CREATE TABLE table_name_65 (type VARCHAR, species VARCHAR, genes VARCHAR)",
        "question": "What type has an unspecified species and less than 367 genes?"
    },
    {
        "answer": "SELECT MIN(played_2) FROM table_name_65 WHERE lost > 83 AND seasons = 8 AND club_1 = \"chernomorets novorossiysk\" AND drawn < 65",
        "context": "CREATE TABLE table_name_65 (played_2 INTEGER, drawn VARCHAR, club_1 VARCHAR, lost VARCHAR, seasons VARCHAR)",
        "question": "What is the lowest played 2 number with less than 83 losses and less than 65 draws with Chernomorets Novorossiysk in season 8?"
    },
    {
        "answer": "SELECT COUNT(district) FROM table_1341549_33 WHERE candidates = \"Eliot L. Engel (D) 85.2% Martin Richman (R) 14.8%\"",
        "context": "CREATE TABLE table_1341549_33 (district VARCHAR, candidates VARCHAR)",
        "question": " how many\u00a0district with\u00a0candidates\u00a0being eliot l. engel (d) 85.2% martin richman (r) 14.8%"
    },
    {
        "answer": "SELECT COUNT(candidates) FROM table_1341549_33 WHERE party = \"Democratic\" AND district = \"New York5\"",
        "context": "CREATE TABLE table_1341549_33 (candidates VARCHAR, party VARCHAR, district VARCHAR)",
        "question": " how many\u00a0candidates\u00a0with\u00a0party\u00a0being democratic and\u00a0dbeingtrict\u00a0being new york5"
    },
    {
        "answer": "SELECT MIN(tries) FROM table_name_40 WHERE goals > 0 AND position = \"centre\" AND points < 54",
        "context": "CREATE TABLE table_name_40 (tries INTEGER, points VARCHAR, goals VARCHAR, position VARCHAR)",
        "question": "Tell me the lowest tries for goals more than 0 with centre position and points less than 54"
    },
    {
        "answer": "SELECT COUNT(district) FROM table_1341568_34 WHERE party = \"Democratic\" AND elected = 1974",
        "context": "CREATE TABLE table_1341568_34 (district VARCHAR, party VARCHAR, elected VARCHAR)",
        "question": "In how many districts was the democratic incumbent elected in 1974? "
    },
    {
        "answer": "SELECT count_palatine_of_the_rhine FROM table_name_65 WHERE interregnum_began = \"2 april 1657 death of ferdinand iii\"",
        "context": "CREATE TABLE table_name_65 (count_palatine_of_the_rhine VARCHAR, interregnum_began VARCHAR)",
        "question": "What is the name of the Count Palatine of the Rhine with a Interregnum began of 2 april 1657 death of ferdinand iii?"
    },
    {
        "answer": "SELECT party FROM table_1341577_36 WHERE incumbent = \"Tom Luken\"",
        "context": "CREATE TABLE table_1341577_36 (party VARCHAR, incumbent VARCHAR)",
        "question": "Which party does Tom Luken belong to?"
    },
    {
        "answer": "SELECT incumbent FROM table_1341577_43 WHERE candidates = \"Marilyn Lloyd (D) 57.4% Harold W. Coker (R) 42.6%\"",
        "context": "CREATE TABLE table_1341577_43 (incumbent VARCHAR, candidates VARCHAR)",
        "question": "Who is the incumbent that is listed with the candidates listed as marilyn lloyd (d) 57.4% harold w. coker (r) 42.6%?"
    },
    {
        "answer": "SELECT incumbent FROM table_1341586_39 WHERE candidates = \"Tom Ridge (R) 80.9% Joylyn Blackwell (D) 19.1%\"",
        "context": "CREATE TABLE table_1341586_39 (incumbent VARCHAR, candidates VARCHAR)",
        "question": "who is the\u00a0incumbent\u00a0with\u00a0candidates\u00a0being tom ridge (r) 80.9% joylyn blackwell (d) 19.1%"
    },
    {
        "answer": "SELECT result FROM table_1341586_19 WHERE candidates = \"Billy Tauzin (D) Unopposed\"",
        "context": "CREATE TABLE table_1341586_19 (result VARCHAR, candidates VARCHAR)",
        "question": "what's the\u00a0result\u00a0with\u00a0candidates\u00a0being billy tauzin (d) unopposed"
    },
    {
        "answer": "SELECT network FROM table_name_47 WHERE lap_by_lap = \"bill flemming\" AND pit_reporters = \"chris economaki\"",
        "context": "CREATE TABLE table_name_47 (network VARCHAR, lap_by_lap VARCHAR, pit_reporters VARCHAR)",
        "question": "What network has lap-by-laps by Bill Flemming, and Pit reporter Chris Economaki?"
    },
    {
        "answer": "SELECT MIN(grid) FROM table_name_32 WHERE laps < 65 AND driver = \"tim schenken\"",
        "context": "CREATE TABLE table_name_32 (grid INTEGER, laps VARCHAR, driver VARCHAR)",
        "question": "What is the lowest Grid with fewer than 65 Laps and with Driver Tim Schenken?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_75 WHERE driver = \"howden ganley\"",
        "context": "CREATE TABLE table_name_75 (time_retired VARCHAR, driver VARCHAR)",
        "question": "What is Driver Howden Ganley's Time/Retired?"
    },
    {
        "answer": "SELECT position FROM table_name_16 WHERE pick < 312 AND school_club_team = \"western michigan\"",
        "context": "CREATE TABLE table_name_16 (position VARCHAR, pick VARCHAR, school_club_team VARCHAR)",
        "question": "What position for the western michigan product picked ahead of 312?"
    },
    {
        "answer": "SELECT date FROM table_name_32 WHERE loser = \"green bay packers\" AND location = \"green bay\"",
        "context": "CREATE TABLE table_name_32 (date VARCHAR, loser VARCHAR, location VARCHAR)",
        "question": "What date did the Chicago Bears beat the Green bay Packers 31-20?"
    },
    {
        "answer": "SELECT incumbent FROM table_1341604_19 WHERE district = \"Louisiana 1\"",
        "context": "CREATE TABLE table_1341604_19 (incumbent VARCHAR, district VARCHAR)",
        "question": "Who's the incumbent of the Louisiana 1 district?"
    },
    {
        "answer": "SELECT incumbent FROM table_1341604_22 WHERE district = \"Massachusetts 2\"",
        "context": "CREATE TABLE table_1341604_22 (incumbent VARCHAR, district VARCHAR)",
        "question": "what's the\u00a0incumbent\u00a0with\u00a0district being massachusetts 2"
    },
    {
        "answer": "SELECT headquarters FROM table_name_23 WHERE employees__world_ = 100",
        "context": "CREATE TABLE table_name_23 (headquarters VARCHAR, employees__world_ VARCHAR)",
        "question": "Which HQ is associated with a number of employees of 100?"
    },
    {
        "answer": "SELECT right_ascension___j2000__ FROM table_name_55 WHERE ngc_number > 2068 AND constellation = \"dorado\" AND declination___j2000__ = \"\u00b012\u203243\u2033\"",
        "context": "CREATE TABLE table_name_55 (right_ascension___j2000__ VARCHAR, declination___j2000__ VARCHAR, ngc_number VARCHAR, constellation VARCHAR)",
        "question": "What is the right ascension (J2000) with a Declination (J2000) of \u00b012\u203243\u2033, is a constellation of dorado, and has an NGC number larger than 2068?"
    },
    {
        "answer": "SELECT incumbent FROM table_1341640_26 WHERE district = \"Missouri 1\"",
        "context": "CREATE TABLE table_1341640_26 (incumbent VARCHAR, district VARCHAR)",
        "question": "What was the incumbent for missouri 1?"
    },
    {
        "answer": "SELECT first_elected FROM table_1341640_14 WHERE incumbent = \"Phil Crane\"",
        "context": "CREATE TABLE table_1341640_14 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": "What year was incumbent phil crane first elected?"
    },
    {
        "answer": "SELECT district FROM table_1341663_33 WHERE party = \"Democratic\" AND first_elected = 1974 AND incumbent = \"Stephen J. Solarz\"",
        "context": "CREATE TABLE table_1341663_33 (district VARCHAR, incumbent VARCHAR, party VARCHAR, first_elected VARCHAR)",
        "question": "What district did the Democratic party incumbent Stephen J. Solarz get first elected to in 1974?"
    },
    {
        "answer": "SELECT general_classification FROM table_name_94 WHERE mountains_classification = \"christophe moreau\" AND team_classification = \"team csc\"",
        "context": "CREATE TABLE table_name_94 (general_classification VARCHAR, mountains_classification VARCHAR, team_classification VARCHAR)",
        "question": "What is the general classification for a mountains value of Christophe Moreau and a Team winner of Team CSC?"
    },
    {
        "answer": "SELECT race_name FROM table_name_72 WHERE winning_driver = \"carlos reutemann\"",
        "context": "CREATE TABLE table_name_72 (race_name VARCHAR, winning_driver VARCHAR)",
        "question": "What is the name of the race won by driver Carlos Reutemann?"
    },
    {
        "answer": "SELECT result FROM table_1341672_10 WHERE candidates = \"Robert L. F. Sikes (D) Unopposed\"",
        "context": "CREATE TABLE table_1341672_10 (result VARCHAR, candidates VARCHAR)",
        "question": "what is the result where the candidates is robert l. f. sikes (d) unopposed?"
    },
    {
        "answer": "SELECT incumbent FROM table_1341672_10 WHERE candidates = \"William V. Chappell, Jr. (D) Unopposed\"",
        "context": "CREATE TABLE table_1341672_10 (incumbent VARCHAR, candidates VARCHAR)",
        "question": "who is the incumbent where the candidates is william v. chappell, jr. (d) unopposed?"
    },
    {
        "answer": "SELECT MAX(first_elected) FROM table_1341690_18 WHERE candidates = \"Otto Passman (D) Unopposed\"",
        "context": "CREATE TABLE table_1341690_18 (first_elected INTEGER, candidates VARCHAR)",
        "question": "What year was Otto Passman (d) unopposed first elected?"
    },
    {
        "answer": "SELECT incumbent FROM table_1341690_43 WHERE district = \"Texas 12\"",
        "context": "CREATE TABLE table_1341690_43 (incumbent VARCHAR, district VARCHAR)",
        "question": "Name the incumbent for district texas 12"
    },
    {
        "answer": "SELECT city FROM table_name_14 WHERE height__ft_ > 328.1 AND rank > 56 AND height__m_ = 103 AND floors < 28",
        "context": "CREATE TABLE table_name_14 (city VARCHAR, floors VARCHAR, height__m_ VARCHAR, height__ft_ VARCHAR, rank VARCHAR)",
        "question": "what is the city with the height (ft) more than 328.1, rank higher than 56, a height (m) of 103 and floors less than 28?"
    },
    {
        "answer": "SELECT COUNT(party) FROM table_1341690_20 WHERE incumbent = \"Robert Bauman\"",
        "context": "CREATE TABLE table_1341690_20 (party VARCHAR, incumbent VARCHAR)",
        "question": "How many instances are there of party in the situation where Robert Bauman is the incumbent politician?"
    },
    {
        "answer": "SELECT club FROM table_name_41 WHERE bowling_style = \"right arm medium pace\" AND name = \"r. h. c. human\"",
        "context": "CREATE TABLE table_name_41 (club VARCHAR, bowling_style VARCHAR, name VARCHAR)",
        "question": "What club is R. H. C. Human who has a right arm medium pace bowling style a member of?"
    },
    {
        "answer": "SELECT tally FROM table_name_44 WHERE county = \"kilkenny\" AND total = 10 AND opposition = \"waterford\"",
        "context": "CREATE TABLE table_name_44 (tally VARCHAR, opposition VARCHAR, county VARCHAR, total VARCHAR)",
        "question": "What is the tally in Kilkenny county with 10 as the total and opposition of Waterford?"
    },
    {
        "answer": "SELECT driver FROM table_name_17 WHERE engine = \"era 1.5 l6 s\" AND chassis = \"era b\"",
        "context": "CREATE TABLE table_name_17 (driver VARCHAR, engine VARCHAR, chassis VARCHAR)",
        "question": "who is the driver with the engine era 1.5 l6 s and the chassis is era b?"
    },
    {
        "answer": "SELECT COUNT(incumbent) FROM table_1341690_9 WHERE candidates = \"Sam M. Gibbons (D) Unopposed\"",
        "context": "CREATE TABLE table_1341690_9 (incumbent VARCHAR, candidates VARCHAR)",
        "question": "How many incumbent candidates in the election featuring sam m. gibbons (d) unopposed?"
    },
    {
        "answer": "SELECT constructor FROM table_name_75 WHERE tyre = \"d\" AND engine = \"talbot 23cv 4.5 l6\" AND chassis = \"talbot-lago t26c\" AND entrant = \"ecurie belge\"",
        "context": "CREATE TABLE table_name_75 (constructor VARCHAR, entrant VARCHAR, chassis VARCHAR, tyre VARCHAR, engine VARCHAR)",
        "question": "who is the constructor when the tyre is d, the engine is talbot 23cv 4.5 l6, the chassis is talbot-lago t26c and the entrant is ecurie belge?"
    },
    {
        "answer": "SELECT MIN(first_elected) FROM table_1341718_14 WHERE party = \"Republican\" AND candidates = \"Robert H. Michel (R) 66.1% Rosa Lee Fox (D) 33.9%\"",
        "context": "CREATE TABLE table_1341718_14 (first_elected INTEGER, party VARCHAR, candidates VARCHAR)",
        "question": "When was the first elected when the party was republican and the candidate were robert h. michel (r) 66.1% rosa lee fox (d) 33.9%?"
    },
    {
        "answer": "SELECT party FROM table_1341738_6 WHERE incumbent = \"Edwin Reinecke\"",
        "context": "CREATE TABLE table_1341738_6 (party VARCHAR, incumbent VARCHAR)",
        "question": "What party does incumbent edwin reinecke represent?"
    },
    {
        "answer": "SELECT candidates FROM table_1341843_10 WHERE incumbent = \"Charles Edward Bennett Redistricted from 2nd\"",
        "context": "CREATE TABLE table_1341843_10 (candidates VARCHAR, incumbent VARCHAR)",
        "question": "Who was featured in the election of charles edward bennett redistricted from 2nd?"
    },
    {
        "answer": "SELECT model FROM table_name_94 WHERE gcm__kg__technical_capacity = \"35000\" AND gvm__kg__technical_capacity = \"16000\" AND engine_make_capacity = \"cummins interact 6.0-euro iii (turbo intercooler)\"",
        "context": "CREATE TABLE table_name_94 (model VARCHAR, engine_make_capacity VARCHAR, gcm__kg__technical_capacity VARCHAR, gvm__kg__technical_capacity VARCHAR)",
        "question": "Which Model has a GCM (kg) Technical Capacity of 35000, a GVM (kg) Technical Capacity of 16000, and Cummins Interact 6.0-euro III (turbo intercooler) for the Engine?"
    },
    {
        "answer": "SELECT party FROM table_1341865_11 WHERE incumbent = \"Don Fuqua\"",
        "context": "CREATE TABLE table_1341865_11 (party VARCHAR, incumbent VARCHAR)",
        "question": "What party did Don Fuqua belong to?"
    },
    {
        "answer": "SELECT candidates FROM table_1341884_23 WHERE district = \"Massachusetts 8\"",
        "context": "CREATE TABLE table_1341884_23 (candidates VARCHAR, district VARCHAR)",
        "question": "Name the candidates for massachusetts 8"
    },
    {
        "answer": "SELECT AVG(gross_debt_in_) AS $billions_undeflated_treas FROM table_name_1 WHERE end_of_fiscal_year > 1980 AND as__percentage_of_gdp_low_high = \"83.4-84.4\" AND debt_held_by_public__$billions_ < 7 OFFSET 552",
        "context": "CREATE TABLE table_name_1 (gross_debt_in_ INTEGER, debt_held_by_public__$billions_ VARCHAR, end_of_fiscal_year VARCHAR, as__percentage_of_gdp_low_high VARCHAR)",
        "question": "For End of Fiscal Years past 1980 that also have as % of GDP Low-High of 83.4-84.4, and a Debt Held By Public ($Billions) smaller than 7,552 what would be the average Gross Debt in $Billions undeflated Treas. in said years?"
    },
    {
        "answer": "SELECT COUNT(gross_debt_in_) AS $billions_undeflated_treas FROM table_name_11 WHERE debt_held_by_public__$billions_ > 236.8 AND as__percentage_of_gdp_low_high = \"33.4\"",
        "context": "CREATE TABLE table_name_11 (gross_debt_in_ VARCHAR, debt_held_by_public__$billions_ VARCHAR, as__percentage_of_gdp_low_high VARCHAR)",
        "question": "For End of Fiscal Year(s) with a Debt Held By Public ($Billions) larger than 236.8, and as % of GDP Low-High of 33.4 what is the sum of the number of Gross Debt in $Billions undeflated Treas.?"
    },
    {
        "answer": "SELECT nationality FROM table_name_6 WHERE college_junior_club_team__league_ = \"peterborough petes (ohl)\"",
        "context": "CREATE TABLE table_name_6 (nationality VARCHAR, college_junior_club_team__league_ VARCHAR)",
        "question": "What is the nationality of the player who played for the Peterborough Petes (OHL)?"
    },
    {
        "answer": "SELECT SUM(round) FROM table_name_84 WHERE nationality = \"canada\" AND player = \"mike peca (c)\"",
        "context": "CREATE TABLE table_name_84 (round INTEGER, nationality VARCHAR, player VARCHAR)",
        "question": "Which round was Mike Peca (C) of Canada selected in?"
    },
    {
        "answer": "SELECT district FROM table_1341884_40 WHERE candidates = \"James A. Byrne (D) 59.3% Joseph R. Burns (R) 40.7%\"",
        "context": "CREATE TABLE table_1341884_40 (district VARCHAR, candidates VARCHAR)",
        "question": "What district featured an election between  james a. byrne (d) 59.3% joseph r. burns (r) 40.7%?"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_6 WHERE driver = \"ayrton senna\"",
        "context": "CREATE TABLE table_name_6 (laps INTEGER, driver VARCHAR)",
        "question": "What is the most laps for Ayrton Senna?"
    },
    {
        "answer": "SELECT SUM(parallel_bars) FROM table_name_87 WHERE floor_exercise > 9.137 AND horizontal_bar = 9.225 AND vault > 9.5",
        "context": "CREATE TABLE table_name_87 (parallel_bars INTEGER, vault VARCHAR, floor_exercise VARCHAR, horizontal_bar VARCHAR)",
        "question": "what was the score of the parallel bars with a floor exercise score more than 9.137, vault more than 9.5 and horizontal bar of 9.225?"
    },
    {
        "answer": "SELECT venue FROM table_name_28 WHERE date = \"10 september 2010\"",
        "context": "CREATE TABLE table_name_28 (venue VARCHAR, date VARCHAR)",
        "question": "Which venue was used on 10 september 2010?"
    },
    {
        "answer": "SELECT MAX(long) FROM table_name_72 WHERE player = \"kevin clemens\" AND yards < 31",
        "context": "CREATE TABLE table_name_72 (long INTEGER, player VARCHAR, yards VARCHAR)",
        "question": "What was the longest carry for kevin clemens with under 31 yards total?"
    },
    {
        "answer": "SELECT first_day_cover_cancellation FROM table_name_68 WHERE denomination = \"$0.50\" AND date_of_issue = \"13 june 2005\"",
        "context": "CREATE TABLE table_name_68 (first_day_cover_cancellation VARCHAR, denomination VARCHAR, date_of_issue VARCHAR)",
        "question": "What's the First Day Cover Cancellation with Denomination of $0.50 and Date of Issue as 13 June 2005?"
    },
    {
        "answer": "SELECT denomination FROM table_name_88 WHERE date_of_issue = \"12 april 2005\"",
        "context": "CREATE TABLE table_name_88 (denomination VARCHAR, date_of_issue VARCHAR)",
        "question": "What's the Denomination listed for the Date of Issue 12 April 2005?"
    },
    {
        "answer": "SELECT candidates FROM table_1341973_11 WHERE first_elected = 1914",
        "context": "CREATE TABLE table_1341973_11 (candidates VARCHAR, first_elected VARCHAR)",
        "question": "Who is the candidate that was first elected in 1914?"
    },
    {
        "answer": "SELECT date FROM table_name_49 WHERE opponent_in_the_final = \"steffi graf\" AND score_in_the_final = \"2\u20136, 0\u20136\"",
        "context": "CREATE TABLE table_name_49 (date VARCHAR, opponent_in_the_final VARCHAR, score_in_the_final VARCHAR)",
        "question": "What was the date when Steffi Graf was the opponent in the final and the score was 2\u20136, 0\u20136?"
    },
    {
        "answer": "SELECT outcome FROM table_name_68 WHERE tournament = \"lugano , switzerland wta virginia slims\" AND opponent_in_the_final = \"bonnie gadusek\"",
        "context": "CREATE TABLE table_name_68 (outcome VARCHAR, tournament VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "What was the outcome of the Tournament of lugano , switzerland wta virginia slims, against bonnie gadusek?"
    },
    {
        "answer": "SELECT outcome FROM table_name_75 WHERE opponent_in_the_final = \"sylvia hanika\" AND surface = \"hard (i)\"",
        "context": "CREATE TABLE table_name_75 (outcome VARCHAR, opponent_in_the_final VARCHAR, surface VARCHAR)",
        "question": "What is the outcome of the match against Sylvia Hanika on a hard (i) surface?"
    },
    {
        "answer": "SELECT type FROM table_name_23 WHERE distance = \"km (mi)\" AND course = \"sorrento to sapri\"",
        "context": "CREATE TABLE table_name_23 (type VARCHAR, distance VARCHAR, course VARCHAR)",
        "question": "What type is the sorrento to sapri course with a distance of km (mi)?"
    },
    {
        "answer": "SELECT COUNT(party) FROM table_1342013_34 WHERE candidates = \"John M. Vorys (R) 61.5% Jacob F. Myers (D) 38.5%\"",
        "context": "CREATE TABLE table_1342013_34 (party VARCHAR, candidates VARCHAR)",
        "question": " how many\u00a0party\u00a0with\u00a0candidates\u00a0being john m. vorys (r) 61.5% jacob f. myers (d) 38.5%"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_1 WHERE away_team = \"geelong\"",
        "context": "CREATE TABLE table_name_1 (home_team VARCHAR, away_team VARCHAR)",
        "question": "What was the home team's score when Geelong was the away team?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_1342013_9 WHERE incumbent = \"Charles Edward Bennett\"",
        "context": "CREATE TABLE table_1342013_9 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": " how many\u00a0first elected\u00a0with\u00a0incumbent\u00a0being charles edward bennett"
    },
    {
        "answer": "SELECT result FROM table_1342013_9 WHERE candidates = \"Charles Edward Bennett (D) Unopposed\"",
        "context": "CREATE TABLE table_1342013_9 (result VARCHAR, candidates VARCHAR)",
        "question": "what's the\u00a0result\u00a0with\u00a0candidates\u00a0being charles edward bennett (d) unopposed"
    },
    {
        "answer": "SELECT result FROM table_1342149_11 WHERE incumbent = \"Tic Forrester\"",
        "context": "CREATE TABLE table_1342149_11 (result VARCHAR, incumbent VARCHAR)",
        "question": "What was the result of the election when Tic Forrester ran as an incumbent?"
    },
    {
        "answer": "SELECT candidates FROM table_1342149_18 WHERE result = \"Re-elected\" AND district = \"Louisiana 5\"",
        "context": "CREATE TABLE table_1342149_18 (candidates VARCHAR, result VARCHAR, district VARCHAR)",
        "question": "What candidate was re-elected in the Louisiana 5 district? "
    },
    {
        "answer": "SELECT result FROM table_1342149_24 WHERE district = \"Mississippi 2\"",
        "context": "CREATE TABLE table_1342149_24 (result VARCHAR, district VARCHAR)",
        "question": "Name the result for mississippi 2"
    },
    {
        "answer": "SELECT SUM(laps) FROM table_name_45 WHERE time_retired = \"2:54:23.8\"",
        "context": "CREATE TABLE table_name_45 (laps INTEGER, time_retired VARCHAR)",
        "question": "How many laps were driven in 2:54:23.8?"
    },
    {
        "answer": "SELECT points_classification FROM table_name_7 WHERE general_classification = \"bernard hinault\" AND trofeo_fast_team = \"bianchi\" AND winner = \"urs freuler\" AND stage = \"4\"",
        "context": "CREATE TABLE table_name_7 (points_classification VARCHAR, stage VARCHAR, winner VARCHAR, general_classification VARCHAR, trofeo_fast_team VARCHAR)",
        "question": "Which points classification shares a general classification of Bernard Hinault, a Trofeo Fast Tem of Bianchi, was won by Urs Freuler, and was stage 4?"
    },
    {
        "answer": "SELECT winner FROM table_name_71 WHERE points_classification = \"giuseppe saronni\" AND trofeo_fast_team = \"bianchi\" AND stage = \"3\"",
        "context": "CREATE TABLE table_name_71 (winner VARCHAR, stage VARCHAR, points_classification VARCHAR, trofeo_fast_team VARCHAR)",
        "question": "Who was the winner that had a Points Classification of Giuseppe Saronni, a Trofeo Fast Team of Bianchi, and was Stage 3?"
    },
    {
        "answer": "SELECT winner FROM table_name_85 WHERE points_classification = \"francesco moser\" AND stage = \"12\"",
        "context": "CREATE TABLE table_name_85 (winner VARCHAR, points_classification VARCHAR, stage VARCHAR)",
        "question": "Who was the winner of Stage 12 with a Points Classification of Francesco Moser?"
    },
    {
        "answer": "SELECT stage FROM table_name_51 WHERE winner = \"bernard hinault\" AND points_classification = \"francesco moser\"",
        "context": "CREATE TABLE table_name_51 (stage VARCHAR, winner VARCHAR, points_classification VARCHAR)",
        "question": "Which stage was won by Bernard Hinault and had a Points classification of Francesco Moser?"
    },
    {
        "answer": "SELECT candidates FROM table_1342198_18 WHERE district = \"Louisiana 3\"",
        "context": "CREATE TABLE table_1342198_18 (candidates VARCHAR, district VARCHAR)",
        "question": "who is the candidate where district is louisiana 3?"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_25 WHERE grid = 24",
        "context": "CREATE TABLE table_name_25 (laps VARCHAR, grid VARCHAR)",
        "question": "how many laps were there when the grid was 24?"
    },
    {
        "answer": "SELECT province FROM table_name_79 WHERE party = \"national\" AND name = \"ken wright\"",
        "context": "CREATE TABLE table_name_79 (province VARCHAR, party VARCHAR, name VARCHAR)",
        "question": "Ken Wright of the National Party was from which province?"
    },
    {
        "answer": "SELECT score FROM table_name_15 WHERE date = \"27 january 1996\"",
        "context": "CREATE TABLE table_name_15 (score VARCHAR, date VARCHAR)",
        "question": "What was the score of the game on 27 January 1996?"
    },
    {
        "answer": "SELECT competition FROM table_name_40 WHERE result = \"3-2\"",
        "context": "CREATE TABLE table_name_40 (competition VARCHAR, result VARCHAR)",
        "question": "What is the event with a result of 3-2?"
    },
    {
        "answer": "SELECT first_elected FROM table_1342218_6 WHERE incumbent = \"Clair Engle\"",
        "context": "CREATE TABLE table_1342218_6 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": "What year was clair engle first elected?"
    },
    {
        "answer": "SELECT country FROM table_name_76 WHERE opened = 2002 AND model = \"spinning coaster\" AND park = \"disney's animal kingdom\"",
        "context": "CREATE TABLE table_name_76 (country VARCHAR, park VARCHAR, opened VARCHAR, model VARCHAR)",
        "question": "Which country has a rollercoaster that opened in 2002, is a spinning coaster, and is located in Disney's Animal Kingdom?"
    },
    {
        "answer": "SELECT first_elected FROM table_1342233_6 WHERE incumbent = \"Clair Engle\"",
        "context": "CREATE TABLE table_1342233_6 (first_elected VARCHAR, incumbent VARCHAR)",
        "question": "what's the\u00a0first elected\u00a0with\u00a0incumbent\u00a0being clair engle"
    },
    {
        "answer": "SELECT runner_s__up FROM table_name_65 WHERE winning_score = \u22123(71 - 74 - 66 - 66 = 277)",
        "context": "CREATE TABLE table_name_65 (runner_s__up VARCHAR, winning_score VARCHAR)",
        "question": "Who is the runner(s)-up for a winning score of \u22123 (71-74-66-66=277)?"
    },
    {
        "answer": "SELECT incumbent FROM table_1342256_10 WHERE first_elected = 1940",
        "context": "CREATE TABLE table_1342256_10 (incumbent VARCHAR, first_elected VARCHAR)",
        "question": "Which incumbent was first elected in 1940?"
    },
    {
        "answer": "SELECT candidates FROM table_1342256_33 WHERE incumbent = \"Harold D. Cooley\"",
        "context": "CREATE TABLE table_1342256_33 (candidates VARCHAR, incumbent VARCHAR)",
        "question": "Name all the candidates that ran for the seat where Harold D. Cooley is the incumbent?"
    },
    {
        "answer": "SELECT set_2 FROM table_name_42 WHERE total = \"45\u201312\"",
        "context": "CREATE TABLE table_name_42 (set_2 VARCHAR, total VARCHAR)",
        "question": "What is the Set 2 with a Total with 45\u201312?"
    },
    {
        "answer": "SELECT location FROM table_name_52 WHERE res = \"win\" AND record = \"8-5\"",
        "context": "CREATE TABLE table_name_52 (location VARCHAR, res VARCHAR, record VARCHAR)",
        "question": "Tell me the location for win with record of 8-5"
    },
    {
        "answer": "SELECT SUM(total_produced) FROM table_name_13 WHERE wheel_arrangement = \"b-b\" AND prr_class = \"bs6\" AND builder\u2019s_model = \"ds-4-4-660\"",
        "context": "CREATE TABLE table_name_13 (total_produced INTEGER, builder\u2019s_model VARCHAR, wheel_arrangement VARCHAR, prr_class VARCHAR)",
        "question": "How many total units were built of Model ds-4-4-660 with a b-b wheel arrangement and a PRR Class of bs6?"
    },
    {
        "answer": "SELECT COUNT(first_elected) FROM table_1342256_5 WHERE candidates = \"Brooks Hays (D) Unopposed\"",
        "context": "CREATE TABLE table_1342256_5 (first_elected VARCHAR, candidates VARCHAR)",
        "question": "How many candidates were in the election featuring brooks hays (d) unopposed?"
    },
    {
        "answer": "SELECT incumbent FROM table_1342256_6 WHERE result = \"New seat Republican gain\"",
        "context": "CREATE TABLE table_1342256_6 (incumbent VARCHAR, result VARCHAR)",
        "question": "what's the\u00a0incumbent\u00a0with\u00a0result\u00a0being new seat republican gain"
    },
    {
        "answer": "SELECT MAX(first_elected) FROM table_1342270_3 WHERE district = \"Alabama 5\"",
        "context": "CREATE TABLE table_1342270_3 (first_elected INTEGER, district VARCHAR)",
        "question": "what is the maximum\u00a0first elected\u00a0with\u00a0district being alabama 5"
    },
    {
        "answer": "SELECT MIN(grid) FROM table_name_88 WHERE time_retired = \"clutch\" AND driver = \"peter collins\" AND laps < 26",
        "context": "CREATE TABLE table_name_88 (grid INTEGER, laps VARCHAR, time_retired VARCHAR, driver VARCHAR)",
        "question": "what is the lowest grid when the time retired is clutch, the driver is peter collins and the laps is smaller than 26?"
    },
    {
        "answer": "SELECT dismissals FROM table_name_43 WHERE venue = \"source: cricinfo.com\"",
        "context": "CREATE TABLE table_name_43 (dismissals VARCHAR, venue VARCHAR)",
        "question": "What is the Dismissals with a Venue with source: cricinfo.com?"
    },
    {
        "answer": "SELECT COUNT(party) FROM table_1342292_4 WHERE incumbent = \"William B. Cravens\"",
        "context": "CREATE TABLE table_1342292_4 (party VARCHAR, incumbent VARCHAR)",
        "question": "How many parties does william b. cravens represent?"
    },
    {
        "answer": "SELECT candidates FROM table_1342331_11 WHERE incumbent = \"John S. Wood\"",
        "context": "CREATE TABLE table_1342331_11 (candidates VARCHAR, incumbent VARCHAR)",
        "question": "What candidates ran in the election when john s. wood was the incumbent?"
    },
    {
        "answer": "SELECT district FROM table_1342331_18 WHERE incumbent = \"Riley Joseph Wilson\"",
        "context": "CREATE TABLE table_1342331_18 (district VARCHAR, incumbent VARCHAR)",
        "question": "What district has Riley Joseph Wilson as the incumbent?"
    },
    {
        "answer": "SELECT episode FROM table_name_30 WHERE year > 1999",
        "context": "CREATE TABLE table_name_30 (episode VARCHAR, year INTEGER)",
        "question": "Name the episode for year more than 1999"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_67 WHERE player = \"chris phillips\"",
        "context": "CREATE TABLE table_name_67 (round INTEGER, player VARCHAR)",
        "question": "What is the highest round played by Chris Phillips?"
    },
    {
        "answer": "SELECT COUNT(district) FROM table_1342379_10 WHERE first_elected = 1912",
        "context": "CREATE TABLE table_1342379_10 (district VARCHAR, first_elected VARCHAR)",
        "question": "how many areas were in the election in 1912"
    },
    {
        "answer": "SELECT candidates FROM table_1342379_23 WHERE district = \"Mississippi 4\"",
        "context": "CREATE TABLE table_1342379_23 (candidates VARCHAR, district VARCHAR)",
        "question": "who is the the\u00a0candidates\u00a0with\u00a0district being mississippi 4"
    },
    {
        "answer": "SELECT date_of_delivery FROM table_name_55 WHERE baby_gender = \"boy\" AND congresswoman = \"kirsten gillibrand\"",
        "context": "CREATE TABLE table_name_55 (date_of_delivery VARCHAR, baby_gender VARCHAR, congresswoman VARCHAR)",
        "question": "What was the delivery date of Congresswoman Kirsten Gillibrand's baby boy?"
    },
    {
        "answer": "SELECT MIN(first_elected) FROM table_1342393_23 WHERE incumbent = \"Jeff Busby\"",
        "context": "CREATE TABLE table_1342393_23 (first_elected INTEGER, incumbent VARCHAR)",
        "question": "What is the least first elected for jeff busby?"
    },
    {
        "answer": "SELECT tns_sofres_5_26_09 FROM table_name_82 WHERE ipsos_5_25_09 = \"1%\"",
        "context": "CREATE TABLE table_name_82 (tns_sofres_5_26_09 VARCHAR, ipsos_5_25_09 VARCHAR)",
        "question": "Which TNS-Sofres 5/26/09 has an Ipsos 5/25/09 of 1%?"
    },
    {
        "answer": "SELECT csa_5_20_09 FROM table_name_89 WHERE ifop__la_croix_5_15_09 = \"26%\"",
        "context": "CREATE TABLE table_name_89 (csa_5_20_09 VARCHAR, ifop__la_croix_5_15_09 VARCHAR)",
        "question": "Which Ipsos 5/16/09 has an Ifop- La Croix 5/15/09 of 26%?"
    },
    {
        "answer": "SELECT MIN(first_elected) FROM table_1342426_5 WHERE incumbent = \"Chester W. Taylor\"",
        "context": "CREATE TABLE table_1342426_5 (first_elected INTEGER, incumbent VARCHAR)",
        "question": "Name the lowest first elected for chester w. taylor"
    },
    {
        "answer": "SELECT candidates FROM table_1342451_16 WHERE incumbent = \"Henry Garland Dupr\u00e9\"",
        "context": "CREATE TABLE table_1342451_16 (candidates VARCHAR, incumbent VARCHAR)",
        "question": "Who were the candidates when Henry Garland Dupr\u00e9 was incumbent?"
    },
    {
        "answer": "SELECT district FROM table_1342451_16 WHERE incumbent = \"James O'Connor\"",
        "context": "CREATE TABLE table_1342451_16 (district VARCHAR, incumbent VARCHAR)",
        "question": "What district did James O'Connor belong to?"
    },
    {
        "answer": "SELECT AVG(pick) FROM table_name_15 WHERE player = \"mark joseph kong\"",
        "context": "CREATE TABLE table_name_15 (pick INTEGER, player VARCHAR)",
        "question": "What is Mark Joseph Kong's pick?"
    },
    {
        "answer": "SELECT location FROM table_13456202_1 WHERE mascot = \"Panthers\"",
        "context": "CREATE TABLE table_13456202_1 (location VARCHAR, mascot VARCHAR)",
        "question": "What are the locations with a panthers mascot?"
    },
    {
        "answer": "SELECT district FROM table_1346118_5 WHERE candidates = \"John I. Nolan (R) 87% Thomas F. Feeley (S) 13%\"",
        "context": "CREATE TABLE table_1346118_5 (district VARCHAR, candidates VARCHAR)",
        "question": "Which district was the race between john i. nolan (r) 87% thomas f. feeley (s) 13%?"
    },
    {
        "answer": "SELECT result FROM table_1346118_5 WHERE candidates = \"John A. Elston (R) 88.4% Luella Twining (S) 11.6%\"",
        "context": "CREATE TABLE table_1346118_5 (result VARCHAR, candidates VARCHAR)",
        "question": "What was the net seat gain in the race john a. elston (r) 88.4% luella twining (s) 11.6%?"
    },
    {
        "answer": "SELECT SUM(allsvenskan_titles) FROM table_name_78 WHERE stars_symbolizes = \"number of swedish championship titles\" AND club = \"aik\" AND introduced > 2000",
        "context": "CREATE TABLE table_name_78 (allsvenskan_titles INTEGER, introduced VARCHAR, stars_symbolizes VARCHAR, club VARCHAR)",
        "question": "How many allsvenskan titles did club aik have after its introduction after 2000, with stars symbolizing the number of swedish championship titles ?"
    },
    {
        "answer": "SELECT record FROM table_13480122_5 WHERE date = \"January 13\"",
        "context": "CREATE TABLE table_13480122_5 (record VARCHAR, date VARCHAR)",
        "question": "what's the\u00a0record\u00a0with\u00a0date\u00a0being january 13"
    },
    {
        "answer": "SELECT target_city__market FROM table_134987_3 WHERE city_of_license = \"Rapid City\" AND format = \"Alternative\"",
        "context": "CREATE TABLE table_134987_3 (target_city__market VARCHAR, city_of_license VARCHAR, format VARCHAR)",
        "question": "What are the market city/market(s) for Rapid City Alternative format?"
    },
    {
        "answer": "SELECT target_city__market FROM table_134987_3 WHERE frequency = \"97.9 FM\"",
        "context": "CREATE TABLE table_134987_3 (target_city__market VARCHAR, frequency VARCHAR)",
        "question": "What is the target market for the station on 97.9 fm?"
    },
    {
        "answer": "SELECT player FROM table_name_74 WHERE position = \"forward\" AND school_club_team = \"southern methodist\"",
        "context": "CREATE TABLE table_name_74 (player VARCHAR, position VARCHAR, school_club_team VARCHAR)",
        "question": "What Utah Jazz Forward played for Southern Methodist?"
    },
    {
        "answer": "SELECT MIN(*) AS lowest_1st_prize FROM table_name_65 WHERE location = \"florida\" AND score = \"200 (-16)\"",
        "context": "",
        "question": "What is the lowest 1st prize for florida tournaments and a Score of 200 (-16)?"
    },
    {
        "answer": "SELECT surface FROM table_name_30 WHERE city = \"caracas\" AND tournament = \"venezuela f5 futures\"",
        "context": "CREATE TABLE table_name_30 (surface VARCHAR, city VARCHAR, tournament VARCHAR)",
        "question": "On what Surface will the Venezuela F5 Futures in Caracas be played?"
    },
    {
        "answer": "SELECT COUNT(episode_title) FROM table_13505192_3 WHERE series_number = 35",
        "context": "CREATE TABLE table_13505192_3 (episode_title VARCHAR, series_number VARCHAR)",
        "question": "How many episodes have a series number of 35?"
    },
    {
        "answer": "SELECT country FROM table_name_9 WHERE singles_champions = \"dennis bl\u00f6mke\" AND tournament = \"germany f13 futures\"",
        "context": "CREATE TABLE table_name_9 (country VARCHAR, singles_champions VARCHAR, tournament VARCHAR)",
        "question": "In what Country will Dennis Bl\u00f6mke play the Germany F13 Futures Tournament?"
    },
    {
        "answer": "SELECT winning_team FROM table_13512105_3 WHERE winning_driver = \"Ryan Briscoe\" AND fastest_lap = \"Tomas Scheckter\"",
        "context": "CREATE TABLE table_13512105_3 (winning_team VARCHAR, winning_driver VARCHAR, fastest_lap VARCHAR)",
        "question": "which brand have drivers who won with the names of ryan briscoe and tomas scheckter"
    },
    {
        "answer": "SELECT trainer FROM table_name_8 WHERE owner = \"robert courtney\"",
        "context": "CREATE TABLE table_name_8 (trainer VARCHAR, owner VARCHAR)",
        "question": "Who was the trainer with Robert Courtney was owner?"
    },
    {
        "answer": "SELECT station FROM table_1353096_2 WHERE city_of_license_market = \"Fort Collins, Colorado\"",
        "context": "CREATE TABLE table_1353096_2 (station VARCHAR, city_of_license_market VARCHAR)",
        "question": "Which station has a license in Fort Collins, Colorado?"
    },
    {
        "answer": "SELECT umpires FROM table_13514348_7 WHERE simpson_medal = \"Paul Medhurst (C)\"",
        "context": "CREATE TABLE table_13514348_7 (umpires VARCHAR, simpson_medal VARCHAR)",
        "question": "Who were the umpires when Paul Medhurst (C) won the Simpson Medal?"
    },
    {
        "answer": "SELECT outgoing_manager FROM table_name_29 WHERE manner_of_departure = \"resigned\" AND team = \"real zaragoza\" AND replaced_by = \"manolo villanova\"",
        "context": "CREATE TABLE table_name_29 (outgoing_manager VARCHAR, replaced_by VARCHAR, manner_of_departure VARCHAR, team VARCHAR)",
        "question": "Tell me the outgoing manager for resigned and replaced by manolo villanova for real zaragoza"
    },
    {
        "answer": "SELECT couple FROM table_1354805_6 WHERE number_of_dances = 11 AND competition_finish > 2.0",
        "context": "CREATE TABLE table_1354805_6 (couple VARCHAR, number_of_dances VARCHAR, competition_finish VARCHAR)",
        "question": "who danced 11 and finished at more than a 2.0"
    },
    {
        "answer": "SELECT result FROM table_name_97 WHERE competition = \"uefa euro 2008 qualifying\"",
        "context": "CREATE TABLE table_name_97 (result VARCHAR, competition VARCHAR)",
        "question": "What was the result of the UEFA Euro 2008 Qualifying competition?"
    },
    {
        "answer": "SELECT university_students_and_adults__18yrs + _ FROM table_13555999_1 WHERE senior_high_school__15_18_yrs_ = \"26mm\"",
        "context": "CREATE TABLE table_13555999_1 (university_students_and_adults__18yrs VARCHAR, _ VARCHAR, senior_high_school__15_18_yrs_ VARCHAR)",
        "question": "What amount of the university students and adults ehre the the senior high school is 26mm?"
    },
    {
        "answer": "SELECT senior_high_school__15_18_yrs_ FROM table_13555999_1 WHERE junior_high_school__12_15_yrs_ = \"114cm\"",
        "context": "CREATE TABLE table_13555999_1 (senior_high_school__15_18_yrs_ VARCHAR, junior_high_school__12_15_yrs_ VARCHAR)",
        "question": "What amount of senior high school where junior high school is 114cm?"
    },
    {
        "answer": "SELECT junior_high_school__12_15_yrs_ FROM table_13555999_1 WHERE gender = \"Male\" AND specification = \"Minimum diameter of sakigawa\"",
        "context": "CREATE TABLE table_13555999_1 (junior_high_school__12_15_yrs_ VARCHAR, gender VARCHAR, specification VARCHAR)",
        "question": "What amount is the junior high school where the gender is male and the specification is minimum diameter of sakigawa?"
    },
    {
        "answer": "SELECT league_from FROM table_name_61 WHERE pick__number > 204 AND nationality = \"canada\" AND position = \"lw\"",
        "context": "CREATE TABLE table_name_61 (league_from VARCHAR, position VARCHAR, pick__number VARCHAR, nationality VARCHAR)",
        "question": "Which league has a pick number larger than 204 from Canada and LW as the position?"
    },
    {
        "answer": "SELECT tries_against FROM table_13564702_3 WHERE played = \"22\" AND points_against = \"183\"",
        "context": "CREATE TABLE table_13564702_3 (tries_against VARCHAR, played VARCHAR, points_against VARCHAR)",
        "question": "Name the tries against for played 22 and points against of 183"
    },
    {
        "answer": "SELECT tries_against FROM table_13564637_3 WHERE lost = \"4\"",
        "context": "CREATE TABLE table_13564637_3 (tries_against VARCHAR, lost VARCHAR)",
        "question": "what are the tries where the game was lost by 4?"
    },
    {
        "answer": "SELECT nationality FROM table_name_12 WHERE nhl_team = \"vancouver canucks\" AND college_junior_club_team__league_ = \"swift current broncos (whl)\" AND round = 8",
        "context": "CREATE TABLE table_name_12 (nationality VARCHAR, round VARCHAR, nhl_team VARCHAR, college_junior_club_team__league_ VARCHAR)",
        "question": "What's the Nationality of Round 8 Vancouver Canucks NHL Team of Swift Current Broncos (WHL)?"
    },
    {
        "answer": "SELECT distribution FROM table_1357052_6 WHERE grsecurity = \"Optional\" AND compile_time_buffer_checks = \"Yes\"",
        "context": "CREATE TABLE table_1357052_6 (distribution VARCHAR, grsecurity VARCHAR, compile_time_buffer_checks VARCHAR)",
        "question": "what's the\u00a0dbeingtribution\u00a0with\u00a0grsecurity\u00a0being optional and\u00a0compile time buffer checks\u00a0being yes"
    },
    {
        "answer": "SELECT type FROM table_name_59 WHERE location = \"justus lipsius building, brussels\" AND year = 2012 AND president = \"herman van rompuy (1st term)\" AND date = \"23 may\"",
        "context": "CREATE TABLE table_name_59 (type VARCHAR, date VARCHAR, president VARCHAR, location VARCHAR, year VARCHAR)",
        "question": "What is the Type with a Location with justus lipsius building, brussels, and a Year of 2012, and a President with herman van rompuy (1st term), and a Date with 23 may?"
    },
    {
        "answer": "SELECT president FROM table_name_22 WHERE location = \"justus lipsius building, brussels\" AND type = \"scheduled\" AND year > 2011 AND date = \"18\u201319 october\"",
        "context": "CREATE TABLE table_name_22 (president VARCHAR, date VARCHAR, year VARCHAR, location VARCHAR, type VARCHAR)",
        "question": "What is the President with a Location of justus lipsius building, brussels, and a Type with scheduled, and a Year larger than 2011, and a Date with 18\u201319 october?"
    },
    {
        "answer": "SELECT location FROM table_name_63 WHERE year > 2011 AND president = \"herman van rompuy (2nd term)\" AND date = \"28\u201329 june\" AND type = \"scheduled\"",
        "context": "CREATE TABLE table_name_63 (location VARCHAR, type VARCHAR, date VARCHAR, year VARCHAR, president VARCHAR)",
        "question": "What is the Location with a Year larger than 2011, and a President with herman van rompuy (2nd term), and a Date of 28\u201329 june, and a Type with scheduled?"
    },
    {
        "answer": "SELECT type FROM table_name_96 WHERE year > 2010 AND location = \"justus lipsius building, brussels\" AND president = \"herman van rompuy (2nd term)\" AND date = \"28\u201329 june\"",
        "context": "CREATE TABLE table_name_96 (type VARCHAR, date VARCHAR, president VARCHAR, year VARCHAR, location VARCHAR)",
        "question": "What is the Type with a Year larger than 2010, and a Location with justus lipsius building, brussels, and a President of herman van rompuy (2nd term), and a Date with 28\u201329 june?"
    },
    {
        "answer": "SELECT SUM(yards) FROM table_name_60 WHERE asst = 19 AND totaltk = 60 AND sack > 0",
        "context": "CREATE TABLE table_name_60 (yards INTEGER, sack VARCHAR, asst VARCHAR, totaltk VARCHAR)",
        "question": "What is the total of yards when asst. is 19, totaltk is 60 and sack is more than 0?"
    },
    {
        "answer": "SELECT SUM(sack) FROM table_name_86 WHERE totaltk = 1 AND asst > 0",
        "context": "CREATE TABLE table_name_86 (sack INTEGER, totaltk VARCHAR, asst VARCHAR)",
        "question": "what is the total sack when totaltk is 1 and asst. is more than 0?"
    },
    {
        "answer": "SELECT COUNT(tackles) FROM table_name_21 WHERE fumr = 0 AND totaltk = 54 AND yards < 0",
        "context": "CREATE TABLE table_name_21 (tackles VARCHAR, yards VARCHAR, fumr VARCHAR, totaltk VARCHAR)",
        "question": "what is the total number of tackles when fumr is 0, totaltk is 54 and yards is less than 0?"
    },
    {
        "answer": "SELECT team FROM table_13619053_9 WHERE record = \"15-63\"",
        "context": "CREATE TABLE table_13619053_9 (team VARCHAR, record VARCHAR)",
        "question": "Which team was in a game with a record of 15-63?"
    },
    {
        "answer": "SELECT team FROM table_13619053_9 WHERE date = \"April 1\"",
        "context": "CREATE TABLE table_13619053_9 (team VARCHAR, date VARCHAR)",
        "question": "Which team played on April 1?"
    },
    {
        "answer": "SELECT wii_points FROM table_13663434_1 WHERE title_and_source = \"Ts\u016bshin Taikyoku: Igo D\u014dj\u014d 2700-Mon\"",
        "context": "CREATE TABLE table_13663434_1 (wii_points VARCHAR, title_and_source VARCHAR)",
        "question": "what's the\u00a0wii points\u00a0with\u00a0title and source\u00a0being ts\u016bshin taikyoku: igo d\u014dj\u014d 2700-mon"
    },
    {
        "answer": "SELECT COUNT(na__350_) FROM table_13663434_1 WHERE title_and_source = \"Bokumo Sekai wo Sukuitai: Battle Tournament\"",
        "context": "CREATE TABLE table_13663434_1 (na__350_ VARCHAR, title_and_source VARCHAR)",
        "question": " how many\u00a0na -350-\u00a0with\u00a0title and source\u00a0being bokumo sekai wo sukuitai: battle tournament"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_89 WHERE record = \"80-81\"",
        "context": "CREATE TABLE table_name_89 (attendance INTEGER, record VARCHAR)",
        "question": "Of the games with a record of 80-81, what was the highest attendance?"
    },
    {
        "answer": "SELECT MAX(average) FROM table_name_36 WHERE finale > 35 AND hk_viewers = \"2.12 million\" AND peak > 40",
        "context": "CREATE TABLE table_name_36 (average INTEGER, peak VARCHAR, finale VARCHAR, hk_viewers VARCHAR)",
        "question": "What is the high average that has a Finale larger than 35, a HK viewers of 2.12 million, and a Peak larger than 40?"
    },
    {
        "answer": "SELECT time_required_for_prices_to_double FROM table_13681_2 WHERE highest_monthly_inflation_rate = \"29,500%\"",
        "context": "CREATE TABLE table_13681_2 (time_required_for_prices_to_double VARCHAR, highest_monthly_inflation_rate VARCHAR)",
        "question": "what's the\u00a0time required for prices to double\u00a0with\u00a0highest monthly inflation rate\u00a0being 29,500%"
    },
    {
        "answer": "SELECT currency_name FROM table_13681_2 WHERE highest_monthly_inflation_rate = \"29,500%\"",
        "context": "CREATE TABLE table_13681_2 (currency_name VARCHAR, highest_monthly_inflation_rate VARCHAR)",
        "question": "what's the\u00a0currency name\u00a0with\u00a0highest monthly inflation rate\u00a0being 29,500%"
    },
    {
        "answer": "SELECT time_retired FROM table_name_31 WHERE grid > 17 AND laps = 74",
        "context": "CREATE TABLE table_name_31 (time_retired VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "What is the time/retired for a grid over 17 with 74 laps?"
    },
    {
        "answer": "SELECT COUNT(equivalent_daily_inflation_rate) FROM table_13681_2 WHERE time_required_for_prices_to_double = \"3.7 days\"",
        "context": "CREATE TABLE table_13681_2 (equivalent_daily_inflation_rate VARCHAR, time_required_for_prices_to_double VARCHAR)",
        "question": " how many\u00a0equivalent daily inflation rate\u00a0with\u00a0time required for prices to double\u00a0being 3.7 days"
    },
    {
        "answer": "SELECT years_for_rockets FROM table_name_41 WHERE height_in_ft = \"6-6\" AND position = \"guard\" AND school_club_team_country = \"oklahoma\"",
        "context": "CREATE TABLE table_name_41 (years_for_rockets VARCHAR, school_club_team_country VARCHAR, height_in_ft VARCHAR, position VARCHAR)",
        "question": "During what years did the Guard from Oklahoma with a height of 6-6 play for the Rockets?"
    },
    {
        "answer": "SELECT COUNT(drawn) FROM table_name_22 WHERE position = \"6th\" AND competition = \"super league xvii\" AND played > 27",
        "context": "CREATE TABLE table_name_22 (drawn VARCHAR, played VARCHAR, position VARCHAR, competition VARCHAR)",
        "question": "how many times what the position 6th, the competition was super league xvii and played was larger than 27?"
    },
    {
        "answer": "SELECT winning_pitcher FROM table_13710464_1 WHERE losing_pitcher = \"Ezequiel Astacio\"",
        "context": "CREATE TABLE table_13710464_1 (winning_pitcher VARCHAR, losing_pitcher VARCHAR)",
        "question": "Who was the wenning witcher when ezequiel astacio was the losing pitcher?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_13719788_1 WHERE original_title = \"Biola tak berdawai\"",
        "context": "CREATE TABLE table_13719788_1 (film_title_used_in_nomination VARCHAR, original_title VARCHAR)",
        "question": "What title was used in the nomination for the title Biola Tak Berdawai?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_7 WHERE home_team = \"north melbourne\"",
        "context": "CREATE TABLE table_name_7 (away_team VARCHAR, home_team VARCHAR)",
        "question": "When north melbourne played as the home team, what was the away team score?"
    },
    {
        "answer": "SELECT year FROM table_name_13 WHERE position = \"defensive tackle\" AND college = \"lsu\"",
        "context": "CREATE TABLE table_name_13 (year VARCHAR, position VARCHAR, college VARCHAR)",
        "question": "Tell me the year for defensive tackle and college of lsu"
    },
    {
        "answer": "SELECT torque FROM table_1373768_1 WHERE fuel_mileage__latest_epa_mpg___us__ = \"22 city, 30 hwy, 25 comb\"",
        "context": "CREATE TABLE table_1373768_1 (torque VARCHAR, fuel_mileage__latest_epa_mpg___us__ VARCHAR)",
        "question": "what's the\u00a0torque\u00a0with\u00a0fuel mileage (latest epa mpg - us )\u00a0being 22 city, 30 hwy, 25 comb"
    },
    {
        "answer": "SELECT number_of_deputies FROM table_13746866_2 WHERE number_of_votes_received < 1549176.2765483726 AND election_date = 1969",
        "context": "CREATE TABLE table_13746866_2 (number_of_deputies VARCHAR, number_of_votes_received VARCHAR, election_date VARCHAR)",
        "question": "what's the\u00a0number of deputies\u00a0with\u00a0number of votes received\u00a0being smaller than 1549176.2765483726 and\u00a0election date\u00a0being 1969"
    },
    {
        "answer": "SELECT location FROM table_13759592_2 WHERE institution = \"Interlake\"",
        "context": "CREATE TABLE table_13759592_2 (location VARCHAR, institution VARCHAR)",
        "question": "Where is Interlake located?"
    },
    {
        "answer": "SELECT COUNT(local_title) FROM table_13779832_1 WHERE television_network = \"TV Nova Website\"",
        "context": "CREATE TABLE table_13779832_1 (local_title VARCHAR, television_network VARCHAR)",
        "question": " how many\u00a0local title\u00a0with\u00a0televbeingion network\u00a0being tv nova website"
    },
    {
        "answer": "SELECT judges FROM table_13779832_1 WHERE local_title = \"X Factor\" AND presenters = \"Heikki Paasonen Jukka Rossi (Xtra Factor)\"",
        "context": "CREATE TABLE table_13779832_1 (judges VARCHAR, local_title VARCHAR, presenters VARCHAR)",
        "question": "who is the the\u00a0judges\u00a0with\u00a0local title\u00a0being x factor and\u00a0presenters\u00a0being heikki paasonen jukka rossi (xtra factor)"
    },
    {
        "answer": "SELECT years_runner_up FROM table_name_91 WHERE runners_up > 1 AND club = \"birmingham city\"",
        "context": "CREATE TABLE table_name_91 (years_runner_up VARCHAR, runners_up VARCHAR, club VARCHAR)",
        "question": "What years runner-up is Birmingham city, with over 1 runners-up?"
    },
    {
        "answer": "SELECT rank FROM table_13836704_6 WHERE freight___metric_tonnes__ = 255121",
        "context": "CREATE TABLE table_13836704_6 (rank VARCHAR, freight___metric_tonnes__ VARCHAR)",
        "question": "What is the rank of the airport with freight ( metric tonnes ) of 255121?"
    },
    {
        "answer": "SELECT MAX(total_passengers_2008) FROM table_13836704_4 WHERE change_2008_09 = \"6.5%\"",
        "context": "CREATE TABLE table_13836704_4 (total_passengers_2008 INTEGER, change_2008_09 VARCHAR)",
        "question": "what being the maximum\u00a0total passengers 2008\u00a0with\u00a0change 2008/09\u00a0being 6.5%"
    },
    {
        "answer": "SELECT MAX(silver) FROM table_name_13 WHERE total = 3 AND bronze < 1",
        "context": "CREATE TABLE table_name_13 (silver INTEGER, total VARCHAR, bronze VARCHAR)",
        "question": "What is the most silver medals a team with 3 total medals and less than 1 bronze has?"
    },
    {
        "answer": "SELECT COUNT(mens_singles) FROM table_13857700_1 WHERE mens_doubles = \"Pontus Jantti Lasse Lindel\u00f6f\"",
        "context": "CREATE TABLE table_13857700_1 (mens_singles VARCHAR, mens_doubles VARCHAR)",
        "question": " how many\u00a0mens singles\u00a0with\u00a0mens doubles\u00a0being pontus jantti lasse lindel\u00f6f"
    },
    {
        "answer": "SELECT mens_singles FROM table_13857700_1 WHERE mens_doubles = \"Kaj Lindfors Kaj Osterberg\"",
        "context": "CREATE TABLE table_13857700_1 (mens_singles VARCHAR, mens_doubles VARCHAR)",
        "question": "who is the the\u00a0mens singles\u00a0with\u00a0mens doubles\u00a0being kaj lindfors kaj osterberg"
    },
    {
        "answer": "SELECT SUM(reg_gp) FROM table_name_28 WHERE player = \"peter andersson\" AND pick__number < 143",
        "context": "CREATE TABLE table_name_28 (reg_gp INTEGER, player VARCHAR, pick__number VARCHAR)",
        "question": "What is the sum of every REG GP that Peter Andersson played as a pick# less than 143?"
    },
    {
        "answer": "SELECT COUNT(pl_gp) FROM table_name_73 WHERE player = \"anton rodin\" AND reg_gp < 0",
        "context": "CREATE TABLE table_name_73 (pl_gp VARCHAR, player VARCHAR, reg_gp VARCHAR)",
        "question": "What is the total of PI GP played by Anton Rodin with a Reg GP less than 0?"
    },
    {
        "answer": "SELECT COUNT(pick__number) FROM table_name_32 WHERE player = \"anton rodin\" AND reg_gp > 0",
        "context": "CREATE TABLE table_name_32 (pick__number VARCHAR, player VARCHAR, reg_gp VARCHAR)",
        "question": "What is the total pick# played by Anton Rodin with a Reg GP over 0?"
    },
    {
        "answer": "SELECT MAX(ngc_number) FROM table_name_5 WHERE declination___j2000__ = \"\u00b004\u203258\u2033\" AND apparent_magnitude > 7.3",
        "context": "CREATE TABLE table_name_5 (ngc_number INTEGER, declination___j2000__ VARCHAR, apparent_magnitude VARCHAR)",
        "question": "What is the highest NGC number that has a Declination ( J2000 ) of \u00b004\u203258\u2033 and a Apparent magnitude larger than 7.3?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_68 WHERE club = \"landskrona bois\" AND rank < 18",
        "context": "CREATE TABLE table_name_68 (points VARCHAR, club VARCHAR, rank VARCHAR)",
        "question": "How many points did landskrona bois get when they were ranked below 18?"
    },
    {
        "answer": "SELECT vineyard_surface__2010_ FROM table_13981938_1 WHERE grand_cru = \"Bienvenues-B\u00e2tard-Montrachet\"",
        "context": "CREATE TABLE table_13981938_1 (vineyard_surface__2010_ VARCHAR, grand_cru VARCHAR)",
        "question": "what's the\u00a0vineyard surface (2010)\u00a0with\u00a0grand cru\u00a0being bienvenues-b\u00e2tard-montrachet"
    },
    {
        "answer": "SELECT SUM(sign) FROM table_name_98 WHERE bits_precision > 53 AND type = \"double extended (80-bit)\" AND total_bits > 80",
        "context": "CREATE TABLE table_name_98 (sign INTEGER, total_bits VARCHAR, bits_precision VARCHAR, type VARCHAR)",
        "question": "What's the sum of sign with more than 53 bits precision, double extended (80-bit) type, and more than 80 total bits?"
    },
    {
        "answer": "SELECT SUM(years_played) FROM table_name_28 WHERE singles_win_loss = \"4-9\" AND first_year_played < 1999",
        "context": "CREATE TABLE table_name_28 (years_played INTEGER, singles_win_loss VARCHAR, first_year_played VARCHAR)",
        "question": "How many years did the team that has a Singles win-Loss of 4-9 and first played before 1999?"
    },
    {
        "answer": "SELECT COUNT(original_airdate) FROM table_13956521_2 WHERE writer_s_ = \"Becky Hartman Edwards\" AND director = \"Adam Nimoy\"",
        "context": "CREATE TABLE table_13956521_2 (original_airdate VARCHAR, writer_s_ VARCHAR, director VARCHAR)",
        "question": " how many\u00a0original airdate\u00a0with\u00a0writer(s)\u00a0being becky hartman edwards and\u00a0director\u00a0being adam nimoy"
    },
    {
        "answer": "SELECT record FROM table_name_46 WHERE decision = \"valiquette\" AND november = 23",
        "context": "CREATE TABLE table_name_46 (record VARCHAR, decision VARCHAR, november VARCHAR)",
        "question": "What is the record when the decision was valiquette on November 23?"
    },
    {
        "answer": "SELECT driver FROM table_name_45 WHERE laps > 8 AND constructor = \"ferrari\" AND grid = 8",
        "context": "CREATE TABLE table_name_45 (driver VARCHAR, grid VARCHAR, laps VARCHAR, constructor VARCHAR)",
        "question": "I want the driver for Laps more than 8 and ferrari with Grid of 8"
    },
    {
        "answer": "SELECT title FROM table_name_28 WHERE translation = \"vesoul\"",
        "context": "CREATE TABLE table_name_28 (title VARCHAR, translation VARCHAR)",
        "question": "Which title has the Translation of vesoul?"
    },
    {
        "answer": "SELECT total_produced FROM table_name_49 WHERE service = \"freight\" AND builder\u2019s_model = \"u28c\"",
        "context": "CREATE TABLE table_name_49 (total_produced VARCHAR, service VARCHAR, builder\u2019s_model VARCHAR)",
        "question": "What is the total amount of freight produced of u28c?"
    },
    {
        "answer": "SELECT bleeding_time FROM table_14006_1 WHERE partial_thromboplastin_time = \"Unaffected\" AND condition = \"Liver failure , early\"",
        "context": "CREATE TABLE table_14006_1 (bleeding_time VARCHAR, partial_thromboplastin_time VARCHAR, condition VARCHAR)",
        "question": "what's the\u00a0bleeding time\u00a0with\u00a0partial thromboplastin time\u00a0being unaffected and\u00a0condition\u00a0being liver failure , early"
    },
    {
        "answer": "SELECT counties_represented FROM table_14009909_1 WHERE first_elected = 2006",
        "context": "CREATE TABLE table_14009909_1 (counties_represented VARCHAR, first_elected VARCHAR)",
        "question": "Which country has a delegate who was first elected in 2006?"
    },
    {
        "answer": "SELECT town FROM table_14015965_1 WHERE arena__capacity_ = \"Volleyball Sportiv Complex (3 500)\"",
        "context": "CREATE TABLE table_14015965_1 (town VARCHAR, arena__capacity_ VARCHAR)",
        "question": "What town is Volleyball Sportiv Complex (3 500) located in?"
    },
    {
        "answer": "SELECT married_filing_jointly_or_qualified_widow_er_ FROM table_name_61 WHERE head_of_household = \"$117,451\u2013$190,200\"",
        "context": "CREATE TABLE table_name_61 (married_filing_jointly_or_qualified_widow_er_ VARCHAR, head_of_household VARCHAR)",
        "question": "Name the married filing jointly or qualified widow(er) with head of household being $117,451\u2013$190,200"
    },
    {
        "answer": "SELECT team FROM table_1405704_1 WHERE chassis = \"McLaren\" AND engine = \"Offenhauser\"",
        "context": "CREATE TABLE table_1405704_1 (team VARCHAR, chassis VARCHAR, engine VARCHAR)",
        "question": "What team has a vehicle with an Offenhauser engine and a McLaren chassis?"
    },
    {
        "answer": "SELECT catalogue FROM table_name_83 WHERE track < 16 AND recorded = \"2/3/56\" AND song_title = \"lawdy miss clawdy\"",
        "context": "CREATE TABLE table_name_83 (catalogue VARCHAR, song_title VARCHAR, track VARCHAR, recorded VARCHAR)",
        "question": "What catalogue has a track less than 16 and 2/3/56 recorded with a song titled Lawdy Miss Clawdy?"
    },
    {
        "answer": "SELECT COUNT(points_for) FROM table_14058433_5 WHERE points_against = \"177\"",
        "context": "CREATE TABLE table_14058433_5 (points_for VARCHAR, points_against VARCHAR)",
        "question": " how many\u00a0points for\u00a0with\u00a0points against\u00a0being 177"
    },
    {
        "answer": "SELECT won FROM table_14058433_5 WHERE points_for = \"643\"",
        "context": "CREATE TABLE table_14058433_5 (won VARCHAR, points_for VARCHAR)",
        "question": "what's the\u00a0won\u00a0with\u00a0points for\u00a0being 643"
    },
    {
        "answer": "SELECT malayalam_\u0d2e\u0d32\u0d2f\u0d3e\u0d33\u0d02 FROM table_1408397_3 WHERE kannada_\u0c95\u0ca8\u0ccd\u0ca8\u0ca1 = \"Punarvasu \u0caa\u0cc1\u0ca8\u0cb0\u0ccd\u0cb5\u0cb8\u0cc1\"",
        "context": "CREATE TABLE table_1408397_3 (malayalam_\u0d2e\u0d32\u0d2f\u0d3e\u0d33\u0d02 VARCHAR, kannada_\u0c95\u0ca8\u0ccd\u0ca8\u0ca1 VARCHAR)",
        "question": "What is the Malayalam word for punarvasu \u0caa\u0cc1\u0ca8\u0cb0\u0ccd\u0cb5\u0cb8\u0cc1 in Kannada?"
    },
    {
        "answer": "SELECT ipsos_3_14_09 FROM table_name_33 WHERE ifop_11_12_08 = \"7%\" AND opinionway_4_17_09 = \"5%\"",
        "context": "CREATE TABLE table_name_33 (ipsos_3_14_09 VARCHAR, ifop_11_12_08 VARCHAR, opinionway_4_17_09 VARCHAR)",
        "question": "Name the lpsos 3/14/09 for opinionway of 4/17/09 of 5% and lfof 11/12/08 of 7%"
    },
    {
        "answer": "SELECT visitor FROM table_name_14 WHERE date = \"february 21\"",
        "context": "CREATE TABLE table_name_14 (visitor VARCHAR, date VARCHAR)",
        "question": "Which visitor visited on February 21?"
    },
    {
        "answer": "SELECT voice_actor__english_1998___pioneer_ FROM table_1410384_1 WHERE voice_actor__english_1997___saban_ = \"Alec Willows\" AND voice_actor__english_2006___funimation_ = \"Andy McAvin\"",
        "context": "CREATE TABLE table_1410384_1 (voice_actor__english_1998___pioneer_ VARCHAR, voice_actor__english_1997___saban_ VARCHAR, voice_actor__english_2006___funimation_ VARCHAR)",
        "question": "who is the the\u00a0voice actor (englbeingh 1998 / pioneer)\u00a0with\u00a0voice actor (englbeingh 1997 / saban)\u00a0being alec willows and\u00a0voice actor (englbeingh 2006 / funimation)\u00a0being andy mcavin"
    },
    {
        "answer": "SELECT COUNT(voice_actor__english_1998___pioneer_) FROM table_1410384_1 WHERE voice_actor__japanese_ = \"Shinobu Satouchi\"",
        "context": "CREATE TABLE table_1410384_1 (voice_actor__english_1998___pioneer_ VARCHAR, voice_actor__japanese_ VARCHAR)",
        "question": " how many\u00a0voice actor (englbeingh 1998 / pioneer)\u00a0with\u00a0voice actor (japanese)\u00a0being shinobu satouchi"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_85 WHERE performance = \"60.73m\" AND age__years_ > 45",
        "context": "CREATE TABLE table_name_85 (year VARCHAR, performance VARCHAR, age__years_ VARCHAR)",
        "question": "What is the year when the performance is 60.73m and the age (years) is more than 45?"
    },
    {
        "answer": "SELECT place FROM table_name_65 WHERE performance = \"60.73m\"",
        "context": "CREATE TABLE table_name_65 (place VARCHAR, performance VARCHAR)",
        "question": "What is the place when the performance is 60.73m?"
    },
    {
        "answer": "SELECT MIN(national_titles) FROM table_14115168_4 WHERE school = \"Concordia University\"",
        "context": "CREATE TABLE table_14115168_4 (national_titles INTEGER, school VARCHAR)",
        "question": "how many overall championships does concordia university have"
    },
    {
        "answer": "SELECT nosawa_rongai FROM table_name_97 WHERE block_a = \"petey williams\"",
        "context": "CREATE TABLE table_name_97 (nosawa_rongai VARCHAR, block_a VARCHAR)",
        "question": "Name the NOSAWA Rongai for petey williams"
    },
    {
        "answer": "SELECT primary_payload_s_ FROM table_14118521_1 WHERE launch_date = \"July 8, 1994\"",
        "context": "CREATE TABLE table_14118521_1 (primary_payload_s_ VARCHAR, launch_date VARCHAR)",
        "question": "what's the\u00a0primary payload(s)\u00a0with\u00a0launch date\u00a0being july 8, 1994"
    },
    {
        "answer": "SELECT COUNT(primary_payload_s_) FROM table_14118521_1 WHERE shuttle = \"Columbia\" AND duration = \"13 days, 19 hours, 30 minutes, 4 seconds\"",
        "context": "CREATE TABLE table_14118521_1 (primary_payload_s_ VARCHAR, shuttle VARCHAR, duration VARCHAR)",
        "question": " how many\u00a0primary payload(s)\u00a0with\u00a0shuttle\u00a0being columbia and\u00a0duration\u00a0being 13 days, 19 hours, 30 minutes, 4 seconds"
    },
    {
        "answer": "SELECT poles FROM table_14139408_1 WHERE pts = \"81\"",
        "context": "CREATE TABLE table_14139408_1 (poles VARCHAR, pts VARCHAR)",
        "question": "what's the\u00a0poles\u00a0with\u00a0pts\u00a0being 81"
    },
    {
        "answer": "SELECT defensive FROM table_14132239_3 WHERE month = \"February\" AND rookie = \"Rhys Duch\"",
        "context": "CREATE TABLE table_14132239_3 (defensive VARCHAR, month VARCHAR, rookie VARCHAR)",
        "question": "Who was the defensive award winner in February when the rookie award was given to Rhys Duch?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_15 WHERE home_team = \"geelong\"",
        "context": "CREATE TABLE table_name_15 (away_team VARCHAR, home_team VARCHAR)",
        "question": "What is the Away team score when they played Geelong as the Home team?"
    },
    {
        "answer": "SELECT home_team FROM table_name_53 WHERE away_team = \"fitzroy\"",
        "context": "CREATE TABLE table_name_53 (home_team VARCHAR, away_team VARCHAR)",
        "question": "What is the name of the Home team that played Fitzroy as the Away team?"
    },
    {
        "answer": "SELECT COUNT(mean_elevation) FROM table_1416612_1 WHERE lowest_point = \"Gulf of Mexico\" AND state = \"Texas\"",
        "context": "CREATE TABLE table_1416612_1 (mean_elevation VARCHAR, lowest_point VARCHAR, state VARCHAR)",
        "question": " how many\u00a0mean elevation\u00a0with\u00a0lowest point\u00a0being gulf of mexico and\u00a0state\u00a0being texas"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_35 WHERE artist = \"royal canadian mint engravers\" AND mintage < 200",
        "context": "CREATE TABLE table_name_35 (year INTEGER, artist VARCHAR, mintage VARCHAR)",
        "question": "What is the average Year for the Royal Canadian Mint Engravers Artist when the Mintage is under 200?"
    },
    {
        "answer": "SELECT MAX(mintage) FROM table_name_46 WHERE artist = \"royal canadian mint engravers\" AND year > 2008",
        "context": "CREATE TABLE table_name_46 (mintage INTEGER, artist VARCHAR, year VARCHAR)",
        "question": "When the Year is over 2008, what is the highest Mintage for the Royal Canadian Mint Engravers Artist?"
    },
    {
        "answer": "SELECT MIN(crowd) FROM table_name_68 WHERE away_team = \"st kilda\"",
        "context": "CREATE TABLE table_name_68 (crowd INTEGER, away_team VARCHAR)",
        "question": "In games where st kilda was the away team, what was the smallest crowd?"
    },
    {
        "answer": "SELECT MAX(rank) FROM table_name_70 WHERE earnings__$__ < 395 OFFSET 386",
        "context": "CREATE TABLE table_name_70 (rank INTEGER, earnings__$__ INTEGER)",
        "question": "Who is the highest ranked player that has earnings below 395,386?"
    },
    {
        "answer": "SELECT MIN(clock_rate__mhz_) FROM table_142573_1 WHERE designation = \"RIMM 4200\"",
        "context": "CREATE TABLE table_142573_1 (clock_rate__mhz_ INTEGER, designation VARCHAR)",
        "question": "Name the least clock rate mhz when designation is rimm 4200"
    },
    {
        "answer": "SELECT SUM(grid) FROM table_name_48 WHERE rider = \"troy corser\" AND laps < 22",
        "context": "CREATE TABLE table_name_48 (grid INTEGER, rider VARCHAR, laps VARCHAR)",
        "question": "What is the grid number for troy corser with under 22 laps?"
    },
    {
        "answer": "SELECT elementary_schools FROM table_14254419_3 WHERE principal__2013_2014_ = \"Cort Monroe\"",
        "context": "CREATE TABLE table_14254419_3 (elementary_schools VARCHAR, principal__2013_2014_ VARCHAR)",
        "question": "Which elementary schools list Cort Monroe as the principal from 2013 to 2014?"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_18 WHERE driver = \"robin montgomerie-charrington\" AND grid < 15",
        "context": "CREATE TABLE table_name_18 (laps VARCHAR, driver VARCHAR, grid VARCHAR)",
        "question": "How many laps for robin montgomerie-charrington, and a Grid smaller than 15?"
    },
    {
        "answer": "SELECT MIN(win) FROM table_14288212_1 WHERE played = 5",
        "context": "CREATE TABLE table_14288212_1 (win INTEGER, played VARCHAR)",
        "question": "For teams that played 5 games, what was the smallest number of wins?"
    },
    {
        "answer": "SELECT COUNT(research_funding__) AS \u00a3, 000 AS _ FROM table_142950_1 WHERE gained_university_status = 1900",
        "context": "CREATE TABLE table_142950_1 (research_funding__ VARCHAR, gained_university_status VARCHAR)",
        "question": "How many members gained university status in 1900?"
    },
    {
        "answer": "SELECT nomination FROM table_name_59 WHERE year = 2011 AND result = \"won\"",
        "context": "CREATE TABLE table_name_59 (nomination VARCHAR, year VARCHAR, result VARCHAR)",
        "question": "Name the nomination in 2011 that won"
    },
    {
        "answer": "SELECT COUNT(total_number_of_students) FROM table_142950_1 WHERE vice_chancellor = \"Professor Edward Acton\"",
        "context": "CREATE TABLE table_142950_1 (total_number_of_students VARCHAR, vice_chancellor VARCHAR)",
        "question": "How many members have professor edward acton as vice-chancellor?"
    },
    {
        "answer": "SELECT MAX(established) FROM table_142950_1 WHERE location = \"Leicester\"",
        "context": "CREATE TABLE table_142950_1 (established INTEGER, location VARCHAR)",
        "question": "What is the year leicester was established?"
    },
    {
        "answer": "SELECT english_title FROM table_name_80 WHERE year < 1999 AND role = \"kim da-rim\"",
        "context": "CREATE TABLE table_name_80 (english_title VARCHAR, year VARCHAR, role VARCHAR)",
        "question": "What is the english title of the film before 1999 with a role of kim da-rim?"
    },
    {
        "answer": "SELECT COUNT(team) FROM table_14310205_1 WHERE conmebol_1996 = \"did not qualify\"",
        "context": "CREATE TABLE table_14310205_1 (team VARCHAR, conmebol_1996 VARCHAR)",
        "question": "what is the number of teams where conmebol 1996 did not qualify?"
    },
    {
        "answer": "SELECT home_team FROM table_14312471_7 WHERE ground = \"AAMI Stadium\"",
        "context": "CREATE TABLE table_14312471_7 (home_team VARCHAR, ground VARCHAR)",
        "question": "Who has the home ground Aami stadium?"
    },
    {
        "answer": "SELECT SUM(tonnage_grt) FROM table_name_23 WHERE type = \"cargo ship\" AND nationality = \"norway\"",
        "context": "CREATE TABLE table_name_23 (tonnage_grt INTEGER, type VARCHAR, nationality VARCHAR)",
        "question": "What is the total Tonnage GRT with a Type of cargo ship, and a Nationality of norway?"
    },
    {
        "answer": "SELECT title FROM table_14330096_4 WHERE director = \"Patrick Lau\" AND writer = \"Lisa Holdsworth\"",
        "context": "CREATE TABLE table_14330096_4 (title VARCHAR, director VARCHAR, writer VARCHAR)",
        "question": "Which episodes have Patrick Lau as the director and Lisa Holdsworth as the writer?"
    },
    {
        "answer": "SELECT MIN(accounting_closure_date) FROM table_143352_1 WHERE agr_power_station = \"Hunterston B\"",
        "context": "CREATE TABLE table_143352_1 (accounting_closure_date INTEGER, agr_power_station VARCHAR)",
        "question": "What is the Closure date of Hunterston B"
    },
    {
        "answer": "SELECT COUNT(connected_to_grid) FROM table_143352_1 WHERE agr_power_station = \"Heysham 2\"",
        "context": "CREATE TABLE table_143352_1 (connected_to_grid VARCHAR, agr_power_station VARCHAR)",
        "question": "How many power stations are connected to grid at Heysham 2"
    },
    {
        "answer": "SELECT AVG(height__m_) FROM table_name_45 WHERE class = \"hewitt\" AND prom__m_ < 86 AND peak = \"gragareth\"",
        "context": "CREATE TABLE table_name_45 (height__m_ INTEGER, peak VARCHAR, class VARCHAR, prom__m_ VARCHAR)",
        "question": "What is the average height for hewitt class, with prom less than 86, and a Peak of gragareth?"
    },
    {
        "answer": "SELECT movie FROM table_name_20 WHERE co_singers = \"selva nambi\"",
        "context": "CREATE TABLE table_name_20 (movie VARCHAR, co_singers VARCHAR)",
        "question": "In which movie is Selva Nambi a co-singer?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_name_60 WHERE nominee = \"best musical revival\"",
        "context": "CREATE TABLE table_name_60 (year VARCHAR, nominee VARCHAR)",
        "question": "How many years was Best Musical Revival nominated?"
    },
    {
        "answer": "SELECT award FROM table_name_95 WHERE category = \"best actor in a musical\" AND nominee = \"denis lawson\"",
        "context": "CREATE TABLE table_name_95 (award VARCHAR, category VARCHAR, nominee VARCHAR)",
        "question": "What award was Denis Lawson nominated for in the Best Actor in a Musical category?"
    },
    {
        "answer": "SELECT COUNT(uk_co_presenter) FROM table_14345690_15 WHERE co_presenter = \"Joe Swash\" AND comedian = \"Russell Kane\"",
        "context": "CREATE TABLE table_14345690_15 (uk_co_presenter VARCHAR, co_presenter VARCHAR, comedian VARCHAR)",
        "question": "Who are the UK co-presenters that have Joe Swash as a co-presenter and Russell Kane as a comedian?"
    },
    {
        "answer": "SELECT MAX(crowd) FROM table_name_71 WHERE away_team = \"south melbourne\"",
        "context": "CREATE TABLE table_name_71 (crowd INTEGER, away_team VARCHAR)",
        "question": "What is the highest crowd number of the game where the away team was south melbourne?"
    },
    {
        "answer": "SELECT famous_for FROM table_14345690_5 WHERE finished = \"5th\"",
        "context": "CREATE TABLE table_14345690_5 (famous_for VARCHAR, finished VARCHAR)",
        "question": "What is the famous for where the finished is 5th?"
    },
    {
        "answer": "SELECT final_position___round FROM table_name_22 WHERE competition = \"fa community shield\"",
        "context": "CREATE TABLE table_name_22 (final_position___round VARCHAR, competition VARCHAR)",
        "question": "Tell me the final position for fa community shield"
    },
    {
        "answer": "SELECT birth_date FROM table_14363116_1 WHERE shirt_no = 7",
        "context": "CREATE TABLE table_14363116_1 (birth_date VARCHAR, shirt_no VARCHAR)",
        "question": "Name the birth date for shirt number 7"
    },
    {
        "answer": "SELECT right_ascension___j2000__ FROM table_name_58 WHERE ngc_number < 3384 AND constellation = \"hydra\" AND object_type = \"spiral galaxy\"",
        "context": "CREATE TABLE table_name_58 (right_ascension___j2000__ VARCHAR, object_type VARCHAR, ngc_number VARCHAR, constellation VARCHAR)",
        "question": "what is the right ascension (j2000) with the ngc number less than 3384, the constellation is hydra and the object type is spiral galaxy?"
    },
    {
        "answer": "SELECT club FROM table_name_97 WHERE national_cup = \"turkish basketball cup\" AND european_cup = \"fiba eurochallenge (3rd tier)\"",
        "context": "CREATE TABLE table_name_97 (club VARCHAR, national_cup VARCHAR, european_cup VARCHAR)",
        "question": "What is the club that has the turkish basketball cup and fiba eurochallenge (3rd tier)?"
    },
    {
        "answer": "SELECT title FROM table_1439096_1 WHERE original_air_date__atv_ = \"28 September 1969\"",
        "context": "CREATE TABLE table_1439096_1 (title VARCHAR, original_air_date__atv_ VARCHAR)",
        "question": "What is the title of the episode with the original air date of 28 September 1969?"
    },
    {
        "answer": "SELECT 1 AS st__m_ FROM table_14407512_4 WHERE nationality = \"FIN\"",
        "context": "CREATE TABLE table_14407512_4 (nationality VARCHAR)",
        "question": "What was the length of the jumper representing FIN, in meters?"
    },
    {
        "answer": "SELECT driver FROM table_name_28 WHERE laps < 53 AND grid < 14 AND time_retired = \"differential\"",
        "context": "CREATE TABLE table_name_28 (driver VARCHAR, time_retired VARCHAR, laps VARCHAR, grid VARCHAR)",
        "question": "What driver has under 53 laps, a grid smaller than 14, and a time/retired of differential?"
    },
    {
        "answer": "SELECT COUNT(home_team) AS score FROM table_14425454_1 WHERE time = \"4:40 PM\"",
        "context": "CREATE TABLE table_14425454_1 (home_team VARCHAR, time VARCHAR)",
        "question": "How many home team scores have a time of 4:40 PM?"
    },
    {
        "answer": "SELECT year_model FROM table_1444201_1 WHERE engine = \"4-cyl Straight engine DOHC 16V\" AND model = \"1.5 CRDi\"",
        "context": "CREATE TABLE table_1444201_1 (year_model VARCHAR, engine VARCHAR, model VARCHAR)",
        "question": "Name the year model for  4-cyl straight engine dohc 16v and 1.5 crdi"
    },
    {
        "answer": "SELECT 1986 AS _87 FROM table_14489821_1 WHERE team = \"Argentinos Juniors\"",
        "context": "CREATE TABLE table_14489821_1 (team VARCHAR)",
        "question": "how many points  did the argentinos juniors team score during the 1986-87 season?"
    },
    {
        "answer": "SELECT mens_singles FROM table_14496232_2 WHERE womens_singles = \"Wang Lin\" AND mixed_doubles = \"Joachim Fischer Nielsen Christinna Pedersen\"",
        "context": "CREATE TABLE table_14496232_2 (mens_singles VARCHAR, womens_singles VARCHAR, mixed_doubles VARCHAR)",
        "question": "Name the mens singles when womens singles is wang lin and mixed doubles is joachim fischer nielsen christinna pedersen"
    },
    {
        "answer": "SELECT mixed_doubles FROM table_14496232_2 WHERE tour = \"Hong Kong Super Series\"",
        "context": "CREATE TABLE table_14496232_2 (mixed_doubles VARCHAR, tour VARCHAR)",
        "question": "Name the mixed doubles when tour is hong kong super series"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_46 WHERE category = \"best supporting actress\" AND award = \"asian film awards\"",
        "context": "CREATE TABLE table_name_46 (year INTEGER, category VARCHAR, award VARCHAR)",
        "question": "What's the earliest year that had a category of best supporting actress at the asian film awards?"
    },
    {
        "answer": "SELECT final_position___round FROM table_name_88 WHERE competition = \"uefa cup\"",
        "context": "CREATE TABLE table_name_88 (final_position___round VARCHAR, competition VARCHAR)",
        "question": "What is the final position/round of the UEFA cup?"
    },
    {
        "answer": "SELECT publisher FROM table_name_13 WHERE title = \"weird war tales\"",
        "context": "CREATE TABLE table_name_13 (publisher VARCHAR, title VARCHAR)",
        "question": "Who published Weird War Tales?"
    },
    {
        "answer": "SELECT directed_by FROM table_14562722_1 WHERE written_by = \"Aaron Ehasz & John O'Bryan\"",
        "context": "CREATE TABLE table_14562722_1 (directed_by VARCHAR, written_by VARCHAR)",
        "question": "Who directed all the episodes that were written by aaron ehasz & john o'bryan?"
    },
    {
        "answer": "SELECT region FROM table_name_91 WHERE date = \"november 10, 2007\" AND format = \"cd\"",
        "context": "CREATE TABLE table_name_91 (region VARCHAR, date VARCHAR, format VARCHAR)",
        "question": "What's the region for an item on November 10, 2007 that's a cd?"
    },
    {
        "answer": "SELECT original_air_date FROM table_14562722_1 WHERE directed_by = \"Giancarlo Volpe\" AND written_by = \"John O'Bryan\"",
        "context": "CREATE TABLE table_14562722_1 (original_air_date VARCHAR, directed_by VARCHAR, written_by VARCHAR)",
        "question": "What was the airdate of the episode that was directed by giancarlo volpe and written by is john o'bryan?"
    },
    {
        "answer": "SELECT situation FROM table_14570857_1 WHERE original_us_airdate = \"December 5, 2007\"",
        "context": "CREATE TABLE table_14570857_1 (situation VARCHAR, original_us_airdate VARCHAR)",
        "question": "Which situation has an original u.s. airdate of December 5, 2007?"
    },
    {
        "answer": "SELECT catalog FROM table_name_1 WHERE label = \"columbia\" AND date = \"december 11, 2007\" AND region = \"canada\"",
        "context": "CREATE TABLE table_name_1 (catalog VARCHAR, region VARCHAR, label VARCHAR, date VARCHAR)",
        "question": "What's the catalog number for a December 11, 2007 record from columbia formatted in a that's from Canada?"
    },
    {
        "answer": "SELECT constructor FROM table_name_42 WHERE free_practice_driver_s_ = \"n/a\" AND chassis = \"005\" AND driver = \"takuma sato\"",
        "context": "CREATE TABLE table_name_42 (constructor VARCHAR, driver VARCHAR, free_practice_driver_s_ VARCHAR, chassis VARCHAR)",
        "question": "who is the constructor when the free practice driver(s) is n/a, the chassis is 005 and the driver is takuma sato?"
    },
    {
        "answer": "SELECT constructor FROM table_name_41 WHERE driver = \"juan pablo montoya\"",
        "context": "CREATE TABLE table_name_41 (constructor VARCHAR, driver VARCHAR)",
        "question": "who is the constructor when the driver is juan pablo montoya?"
    },
    {
        "answer": "SELECT class_a FROM table_14601528_2 WHERE class_aAAAA = Pearland",
        "context": "CREATE TABLE table_14601528_2 (class_a VARCHAR, class_aAAAA VARCHAR, Pearland VARCHAR)",
        "question": "Name the class a for pearland"
    },
    {
        "answer": "SELECT class_aAAAA FROM table_14601528_2 WHERE school_year = \"2005-06\"",
        "context": "CREATE TABLE table_14601528_2 (class_aAAAA VARCHAR, school_year VARCHAR)",
        "question": "Name the class aaaaa for 2005-06"
    },
    {
        "answer": "SELECT time_retired FROM table_name_79 WHERE laps > 51 AND driver = \"cristiano da matta\"",
        "context": "CREATE TABLE table_name_79 (time_retired VARCHAR, laps VARCHAR, driver VARCHAR)",
        "question": "Which Time/Retired entry has greater than 51 laps and driver Cristiano da Matta?"
    },
    {
        "answer": "SELECT MAX(ties) FROM table_name_57 WHERE team = \"montreal victorias\" AND goals_against < 24",
        "context": "CREATE TABLE table_name_57 (ties INTEGER, team VARCHAR, goals_against VARCHAR)",
        "question": "How many ties did the Montreal Victorias have with a GA of less than 24?"
    },
    {
        "answer": "SELECT literate_persons___percentage_ FROM table_14598_9 WHERE india_state_ut = \"Andaman and Nicobar Islands\"",
        "context": "CREATE TABLE table_14598_9 (literate_persons___percentage_ VARCHAR, india_state_ut VARCHAR)",
        "question": "What is the percentage of literate people where india is andaman and Nicobar Islands?"
    },
    {
        "answer": "SELECT school_year FROM table_14603212_5 WHERE class_aAAA = Gregory - Portland",
        "context": "CREATE TABLE table_14603212_5 (school_year VARCHAR, class_aAAA VARCHAR, Gregory VARCHAR, Portland VARCHAR)",
        "question": "What are all the school years where class AAAA is in Gregory-Portland? "
    },
    {
        "answer": "SELECT class_aAA FROM table_14603212_5 WHERE school_year = \"2004-05\"",
        "context": "CREATE TABLE table_14603212_5 (class_aAA VARCHAR, school_year VARCHAR)",
        "question": "What are all the AAA classes in the school years of 2004-05?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_21 WHERE home_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_21 (away_team VARCHAR, home_team VARCHAR)",
        "question": "What is the score of the away team who played home team Hawthorn?"
    },
    {
        "answer": "SELECT COUNT(crowd) FROM table_name_44 WHERE away_team = \"fitzroy\"",
        "context": "CREATE TABLE table_name_44 (crowd VARCHAR, away_team VARCHAR)",
        "question": "How many people attended the game where Fitzroy was the away team?"
    },
    {
        "answer": "SELECT winning_driver FROM table_14638077_2 WHERE pole_position = \"Paul Tracy\" AND race_name = \"Miller Genuine Draft 200\"",
        "context": "CREATE TABLE table_14638077_2 (winning_driver VARCHAR, pole_position VARCHAR, race_name VARCHAR)",
        "question": "who is the the\u00a0winning driver\u00a0with\u00a0pole position\u00a0being paul tracy and\u00a0race name\u00a0being miller genuine draft 200"
    },
    {
        "answer": "SELECT date FROM table_name_40 WHERE nationality = \"bulgaria\" AND event = \"discus throw\"",
        "context": "CREATE TABLE table_name_40 (date VARCHAR, nationality VARCHAR, event VARCHAR)",
        "question": "What was the date of the discus throw for Bulgaria?"
    },
    {
        "answer": "SELECT directed_by FROM table_14637853_3 WHERE original_air_date = \"November18,1995\"",
        "context": "CREATE TABLE table_14637853_3 (directed_by VARCHAR, original_air_date VARCHAR)",
        "question": "who directed with\u00a0original air date\u00a0being november18,1995"
    },
    {
        "answer": "SELECT MAX(losses) FROM table_name_69 WHERE points_for < 79 AND games_played = 10 AND point_differential < 34",
        "context": "CREATE TABLE table_name_69 (losses INTEGER, point_differential VARCHAR, points_for VARCHAR, games_played VARCHAR)",
        "question": "What is the highest number of losses that the team incurred while scoring less than 79 points in 10 games with a point differential less than 34?"
    },
    {
        "answer": "SELECT player FROM table_name_85 WHERE date_of_birth__age_when_delisted_ = \"13 february 1987 (aged 24)\"",
        "context": "CREATE TABLE table_name_85 (player VARCHAR, date_of_birth__age_when_delisted_ VARCHAR)",
        "question": "Which Player has a Date of Birth (Age When Delisted) of 13 February 1987 (aged 24)?"
    },
    {
        "answer": "SELECT COUNT(college) FROM table_14650162_1 WHERE pick__number = 269",
        "context": "CREATE TABLE table_14650162_1 (college VARCHAR, pick__number VARCHAR)",
        "question": "How many colleges did pick number 269 attend?"
    },
    {
        "answer": "SELECT position FROM table_14650162_1 WHERE college = \"Western Kentucky\"",
        "context": "CREATE TABLE table_14650162_1 (position VARCHAR, college VARCHAR)",
        "question": "What is the position of the player whose college is Western Kentucky?"
    },
    {
        "answer": "SELECT treasurer FROM table_name_74 WHERE president = \"sebastian ihler\"",
        "context": "CREATE TABLE table_name_74 (treasurer VARCHAR, president VARCHAR)",
        "question": "Which treasurer has a President of sebastian ihler?"
    },
    {
        "answer": "SELECT college FROM table_14649522_1 WHERE position = \"Wide Receiver\" AND pick__number < 130.0",
        "context": "CREATE TABLE table_14649522_1 (college VARCHAR, position VARCHAR, pick__number VARCHAR)",
        "question": "Which college was the wide receiver whose pick was less than 130.0 picked from?"
    },
    {
        "answer": "SELECT tournament FROM table_name_7 WHERE score = \"7\u20135, 2\u20136, 7\u20136\"",
        "context": "CREATE TABLE table_name_7 (tournament VARCHAR, score VARCHAR)",
        "question": "Which tournament had a score of 7\u20135, 2\u20136, 7\u20136?"
    },
    {
        "answer": "SELECT player FROM table_14655985_1 WHERE pick__number = 64",
        "context": "CREATE TABLE table_14655985_1 (player VARCHAR, pick__number VARCHAR)",
        "question": "who is the the\u00a0player\u00a0where\u00a0pick #\u00a0is 64"
    },
    {
        "answer": "SELECT score FROM table_name_24 WHERE winners = \"galatasaray\" AND runners_up = \"trabzonspor\" AND year = 1990",
        "context": "CREATE TABLE table_name_24 (score VARCHAR, year VARCHAR, winners VARCHAR, runners_up VARCHAR)",
        "question": "What was Galatasaray score when when he won in 1990 and Trabzonspor was the runner-up?"
    },
    {
        "answer": "SELECT COUNT(revenue__millions_) FROM table_14700336_1 WHERE revenue_per_capita = \"$6,126\"",
        "context": "CREATE TABLE table_14700336_1 (revenue__millions_ VARCHAR, revenue_per_capita VARCHAR)",
        "question": "How many numbers were recorded under revenue when revenue per capita was $6,126?"
    },
    {
        "answer": "SELECT spending_per_capita FROM table_14700336_1 WHERE revenue_per_capita = \"$7,755\"",
        "context": "CREATE TABLE table_14700336_1 (spending_per_capita VARCHAR, revenue_per_capita VARCHAR)",
        "question": "What was the spending per capita when the revenue per capita was $7,755?"
    },
    {
        "answer": "SELECT presidential_majority_2000_2004 FROM table_14700336_1 WHERE presidential_majority_2012 = \"Non-voting\"",
        "context": "CREATE TABLE table_14700336_1 (presidential_majority_2000_2004 VARCHAR, presidential_majority_2012 VARCHAR)",
        "question": "What was the recorded result under presidential majority 2000/2004 when the presiditial majority in 2012 was non-voting?"
    },
    {
        "answer": "SELECT MIN(area__km\u00b2_) FROM table_name_26 WHERE province = \"napoli\" AND comune = \"piano di sorrento\" AND total__km\u00b2_ < 121.14",
        "context": "CREATE TABLE table_name_26 (area__km\u00b2_ INTEGER, total__km\u00b2_ VARCHAR, province VARCHAR, comune VARCHAR)",
        "question": "What is the Piano di Sorrento, Napoli lowest km2 with a total smaller than 121.14 km2?"
    },
    {
        "answer": "SELECT COUNT(points_classification) FROM table_14710984_2 WHERE winner = \"Matteo Priamo\"",
        "context": "CREATE TABLE table_14710984_2 (points_classification VARCHAR, winner VARCHAR)",
        "question": "Who won the points classifications in the stage where Matteo Priamo was the winner?"
    },
    {
        "answer": "SELECT MIN(pick__number) FROM table_1473672_2 WHERE college_junior_club_team = \"Medicine Hat Tigers (WCHL)\"",
        "context": "CREATE TABLE table_1473672_2 (pick__number INTEGER, college_junior_club_team VARCHAR)",
        "question": "What is the pick# for the medicine hat tigers (wchl)?"
    },
    {
        "answer": "SELECT SUM(ngc_number) FROM table_name_31 WHERE object_type = \"spiral galaxy\" AND right_ascension___j2000__ = \"08h14m40.4s\"",
        "context": "CREATE TABLE table_name_31 (ngc_number INTEGER, object_type VARCHAR, right_ascension___j2000__ VARCHAR)",
        "question": "I want the sum of NGC number for spiral galaxy and right acension of 08h14m40.4s"
    },
    {
        "answer": "SELECT right_ascension___j2000__ FROM table_name_59 WHERE object_type = \"open cluster\" AND ngc_number > 2547",
        "context": "CREATE TABLE table_name_59 (right_ascension___j2000__ VARCHAR, object_type VARCHAR, ngc_number VARCHAR)",
        "question": "Tell me the right ascension for open cluster and NGC number more than 2547"
    },
    {
        "answer": "SELECT nationality FROM table_1473672_3 WHERE nhl_team = \"Philadelphia Flyers\"",
        "context": "CREATE TABLE table_1473672_3 (nationality VARCHAR, nhl_team VARCHAR)",
        "question": "Which nationality is the player from the Philadelphia Flyers?"
    },
    {
        "answer": "SELECT venue FROM table_name_89 WHERE away_team = \"south melbourne\"",
        "context": "CREATE TABLE table_name_89 (venue VARCHAR, away_team VARCHAR)",
        "question": "Which Venue has an Away team of south melbourne?"
    },
    {
        "answer": "SELECT home_team FROM table_name_29 WHERE venue = \"princes park\"",
        "context": "CREATE TABLE table_name_29 (home_team VARCHAR, venue VARCHAR)",
        "question": "What Home team plays at the princes park Venue?"
    },
    {
        "answer": "SELECT date FROM table_name_24 WHERE scored < 2 AND competition = \"uefa euro 2004 qualifying\"",
        "context": "CREATE TABLE table_name_24 (date VARCHAR, scored VARCHAR, competition VARCHAR)",
        "question": "What date did Sigurd Rushfeldt score less than 2 points in the UEFA Euro 2004 qualifying competition?"
    },
    {
        "answer": "SELECT tournament FROM table_name_21 WHERE date = \"february 17, 2002\"",
        "context": "CREATE TABLE table_name_21 (tournament VARCHAR, date VARCHAR)",
        "question": "What is the tournament on February 17, 2002?"
    },
    {
        "answer": "SELECT change__2010_to_2011_ FROM table_14752049_2 WHERE international_tourist_arrivals__2011_ = \"1.7 million\"",
        "context": "CREATE TABLE table_14752049_2 (change__2010_to_2011_ VARCHAR, international_tourist_arrivals__2011_ VARCHAR)",
        "question": "What are the changes (2010 to 2011) where the International Tourist Arrivals is 1.7 million?"
    },
    {
        "answer": "SELECT international_tourist_arrivals__2010_ FROM table_14752049_2 WHERE change__2010_to_2011_ = \"+15%\"",
        "context": "CREATE TABLE table_14752049_2 (international_tourist_arrivals__2010_ VARCHAR, change__2010_to_2011_ VARCHAR)",
        "question": "What are the International tourist arrivals (2010) where change from 2010 to 2011 is +15%"
    },
    {
        "answer": "SELECT international_tourist_arrivals__2011_ FROM table_14752049_2 WHERE country = \"Senegal\"",
        "context": "CREATE TABLE table_14752049_2 (international_tourist_arrivals__2011_ VARCHAR, country VARCHAR)",
        "question": "How many international tourist arrivals were in Senegal in 2011?"
    },
    {
        "answer": "SELECT team FROM table_name_18 WHERE speed = \"113.316mph\"",
        "context": "CREATE TABLE table_name_18 (team VARCHAR, speed VARCHAR)",
        "question": "What's the name of the team that went 113.316mph?"
    },
    {
        "answer": "SELECT high_assists FROM table_name_41 WHERE high_rebounds = \"boozer (13)\"",
        "context": "CREATE TABLE table_name_41 (high_assists VARCHAR, high_rebounds VARCHAR)",
        "question": "For boozer (13) what is the high assists and high rebounds?"
    },
    {
        "answer": "SELECT enrollment FROM table_14754471_1 WHERE hispanic___percentage_ = \"3.6\"",
        "context": "CREATE TABLE table_14754471_1 (enrollment VARCHAR, hispanic___percentage_ VARCHAR)",
        "question": "What is the enrollment amount where Hispanic (%) is 3.6?"
    },
    {
        "answer": "SELECT club FROM table_name_80 WHERE name = \"hafiz abu sujad\"",
        "context": "CREATE TABLE table_name_80 (club VARCHAR, name VARCHAR)",
        "question": "Which club is associated with Hafiz Abu Sujad?"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_52 WHERE total < 3 AND nation = \"poland\" AND rank > 4",
        "context": "CREATE TABLE table_name_52 (bronze VARCHAR, rank VARCHAR, total VARCHAR, nation VARCHAR)",
        "question": "What is the total of Bronze with a total smaller than 3, and a nation of Poland, and a rank larger than 4?"
    },
    {
        "answer": "SELECT AVG(laps) FROM table_name_4 WHERE driver = \"peter gethin\" AND grid < 25",
        "context": "CREATE TABLE table_name_4 (laps INTEGER, driver VARCHAR, grid VARCHAR)",
        "question": "When the driver peter gethin has a grid less than 25, what is the average number of laps?"
    },
    {
        "answer": "SELECT authority FROM table_name_79 WHERE roll < 234 AND area = \"massey east\"",
        "context": "CREATE TABLE table_name_79 (authority VARCHAR, roll VARCHAR, area VARCHAR)",
        "question": "What's the authority when the roll is less than 234 for the massey east area?"
    },
    {
        "answer": "SELECT COUNT(earnings___) AS $__ FROM table_14853156_2 WHERE best_finish = \"T2\" AND scoring_average = \"71.25\"",
        "context": "CREATE TABLE table_14853156_2 (earnings___ VARCHAR, best_finish VARCHAR, scoring_average VARCHAR)",
        "question": "How many total earnings are recorded when her best finish is t2 with a 71.25 scoring average?"
    },
    {
        "answer": "SELECT points_classification FROM table_14856023_18 WHERE general_classification = \"Mark Renshaw\" AND team_classification = \"Team CSC\"",
        "context": "CREATE TABLE table_14856023_18 (points_classification VARCHAR, general_classification VARCHAR, team_classification VARCHAR)",
        "question": "Name the points classification for mark renshaw and team csc"
    },
    {
        "answer": "SELECT MIN(silver) FROM table_name_77 WHERE bronze > 1 AND sport = \"total\" AND gold < 1",
        "context": "CREATE TABLE table_name_77 (silver INTEGER, gold VARCHAR, bronze VARCHAR, sport VARCHAR)",
        "question": "What is the lowest Silver in the Total Sport has less than 1 Gold and more than 1 Bronze?"
    },
    {
        "answer": "SELECT score FROM table_name_40 WHERE record = \"11-32-11\"",
        "context": "CREATE TABLE table_name_40 (score VARCHAR, record VARCHAR)",
        "question": "What is the score of the game with an 11-32-11 record?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_72 WHERE laps < 70 AND grid > 15 AND driver = \"timo glock\"",
        "context": "CREATE TABLE table_name_72 (time_retired VARCHAR, driver VARCHAR, laps VARCHAR, grid VARCHAR)",
        "question": "What is the time or retired time for timo glock with under 70 laps and a grid number greater than 15?"
    },
    {
        "answer": "SELECT SUM(tonnage) FROM table_name_73 WHERE type_of_ship = \"twin screw ro-ro motorship\" AND date_entered_service = \"11 february 1983\"",
        "context": "CREATE TABLE table_name_73 (tonnage INTEGER, type_of_ship VARCHAR, date_entered_service VARCHAR)",
        "question": "what is the sum of tonnage when the type of ship is twin screw ro-ro motorship and the date entered service is 11 february 1983?"
    },
    {
        "answer": "SELECT record FROM table_14884844_2 WHERE athletes = \"Elzbieta Urbanczik\"",
        "context": "CREATE TABLE table_14884844_2 (record VARCHAR, athletes VARCHAR)",
        "question": "What are the records when Elzbieta Urbanczik competed?"
    },
    {
        "answer": "SELECT date FROM table_name_2 WHERE edition = \"1991 world group i\" AND opponent = \"li fang\"",
        "context": "CREATE TABLE table_name_2 (date VARCHAR, edition VARCHAR, opponent VARCHAR)",
        "question": "When was the 1991 world group I with the opponent of Li Fang?"
    },
    {
        "answer": "SELECT COUNT(year) FROM table_14903491_1 WHERE womens_doubles = \"Diana Koleva Emilia Dimitrova\" AND mens_singles = \"Jeliazko Valkov\"",
        "context": "CREATE TABLE table_14903491_1 (year VARCHAR, womens_doubles VARCHAR, mens_singles VARCHAR)",
        "question": "Name the number of years for womens doubles being  diana koleva emilia dimitrova and  jeliazko valkov"
    },
    {
        "answer": "SELECT year FROM table_14903491_1 WHERE womens_doubles = \"Raina Tzvetkova Emilia Dimitrova\"",
        "context": "CREATE TABLE table_14903491_1 (year VARCHAR, womens_doubles VARCHAR)",
        "question": "Name the year for womens doubles being raina tzvetkova emilia dimitrova"
    },
    {
        "answer": "SELECT mens_doubles FROM table_14903627_1 WHERE womens_doubles = \"Piret Hamer Helen Reino\"",
        "context": "CREATE TABLE table_14903627_1 (mens_doubles VARCHAR, womens_doubles VARCHAR)",
        "question": "WHAT ARE THE NAMES OF THE MENS DOUBLES WHEN THE WOMENS DOUBLES WAS PIRET HAMER HELEN REINO?"
    },
    {
        "answer": "SELECT mixed_doubles FROM table_14903627_1 WHERE womens_singles = \"Kairi Viilup\"",
        "context": "CREATE TABLE table_14903627_1 (mixed_doubles VARCHAR, womens_singles VARCHAR)",
        "question": "WHAT IS THE NAME OF THE MIXED DOUBLES PLAYER WHEN THE WOMENS SINGLE PLAYER IS KAIRI VIILUP?"
    },
    {
        "answer": "SELECT sponsor_s_ FROM table_name_18 WHERE _number_of_cosponsors < 200 AND date_introduced = \"february 28, 2005\"",
        "context": "CREATE TABLE table_name_18 (sponsor_s_ VARCHAR, _number_of_cosponsors VARCHAR, date_introduced VARCHAR)",
        "question": "Who was the sponsor for the bill introduced February 28, 2005 with cosponsors less than 200?"
    },
    {
        "answer": "SELECT womens_doubles FROM table_14903881_1 WHERE mens_doubles = \"Theodoros Velkos Giorgos Patis\"",
        "context": "CREATE TABLE table_14903881_1 (womens_doubles VARCHAR, mens_doubles VARCHAR)",
        "question": "Name the womens doubles when mens doubles is theodoros velkos giorgos patis"
    },
    {
        "answer": "SELECT womens_doubles FROM table_14903999_1 WHERE mixed_doubles = \"Magn\u00fas Ingi Helgason Tinna Helgad\u00f3ttir\" AND womens_singles = \"Ragna Ing\u00f3lfsd\u00f3ttir\" AND year = 2010",
        "context": "CREATE TABLE table_14903999_1 (womens_doubles VARCHAR, year VARCHAR, mixed_doubles VARCHAR, womens_singles VARCHAR)",
        "question": "Who won womens doubles the year magn\u00fas ingi helgason tinna helgad\u00f3ttir won mixed doubles and ragna ing\u00f3lfsd\u00f3ttir won womens singles in 2010"
    },
    {
        "answer": "SELECT COUNT(womens_doubles) FROM table_14903999_1 WHERE mixed_doubles = \"Broddi Kristj\u00e1nsson Dr\u00edfa Har\u00f0ard\u00f3ttir\"",
        "context": "CREATE TABLE table_14903999_1 (womens_doubles VARCHAR, mixed_doubles VARCHAR)",
        "question": "How many womens doubles had champions the years broddi kristj\u00e1nsson dr\u00edfa har\u00f0ard\u00f3ttir won mixed doubles"
    },
    {
        "answer": "SELECT mens_singles FROM table_14903999_1 WHERE mens_doubles = \"Sveinn Logi S\u00f6lvason Tryggvi Nilsen\" AND womens_singles = \"Elsa Nielsen\"",
        "context": "CREATE TABLE table_14903999_1 (mens_singles VARCHAR, mens_doubles VARCHAR, womens_singles VARCHAR)",
        "question": "Who won mens singles the year sveinn logi s\u00f6lvason tryggvi nilsen won mens doubles and elsa nielsen won womens singles"
    },
    {
        "answer": "SELECT mixed_doubles FROM table_14904221_1 WHERE mens_doubles = \"no competition\"",
        "context": "CREATE TABLE table_14904221_1 (mixed_doubles VARCHAR, mens_doubles VARCHAR)",
        "question": "What is the result of men's doubles when there was no competition?"
    },
    {
        "answer": "SELECT margin_of_victory FROM table_name_48 WHERE runner_s__up = \"justin rose\"",
        "context": "CREATE TABLE table_name_48 (margin_of_victory VARCHAR, runner_s__up VARCHAR)",
        "question": "What is the margin of victory in the race where Justin Rose was the runner-up?"
    },
    {
        "answer": "SELECT COUNT(year__ceremony_) FROM table_14928423_1 WHERE original_title = \"\u0421\u0435\u043d\u043a\u0438\"",
        "context": "CREATE TABLE table_14928423_1 (year__ceremony_ VARCHAR, original_title VARCHAR)",
        "question": "how many years has \u0441\u0435\u043d\u043a\u0438 been nominated?"
    },
    {
        "answer": "SELECT team FROM table_name_78 WHERE day_2 = \"3:47.761\"",
        "context": "CREATE TABLE table_name_78 (team VARCHAR, day_2 VARCHAR)",
        "question": "Which team was 3:47.761 on day 2?"
    },
    {
        "answer": "SELECT performer_2 FROM table_14934885_1 WHERE episode = 5",
        "context": "CREATE TABLE table_14934885_1 (performer_2 VARCHAR, episode VARCHAR)",
        "question": "Who is the second performer in episode 5?"
    },
    {
        "answer": "SELECT AVG(wins) FROM table_name_16 WHERE player = \"bruce fleisher\" AND events > 31",
        "context": "CREATE TABLE table_name_16 (wins INTEGER, player VARCHAR, events VARCHAR)",
        "question": "How many wins for bruce fleisher with over 31 events?"
    },
    {
        "answer": "SELECT opponent FROM table_name_94 WHERE score = \"6\u20134, 6\u20132\" AND surface = \"clay\"",
        "context": "CREATE TABLE table_name_94 (opponent VARCHAR, score VARCHAR, surface VARCHAR)",
        "question": "Who is the opponent when the score was 6\u20134, 6\u20132 and the surface was clay?"
    },
    {
        "answer": "SELECT german_voice_actor FROM table_14960574_6 WHERE spanish_voice_actor = \"Rafael Torres\"",
        "context": "CREATE TABLE table_14960574_6 (german_voice_actor VARCHAR, spanish_voice_actor VARCHAR)",
        "question": "Name the german voice actor for rafael torres"
    },
    {
        "answer": "SELECT driver FROM table_name_69 WHERE grid > 9 AND laps < 26 AND constructor = \"ferrari\"",
        "context": "CREATE TABLE table_name_69 (driver VARCHAR, constructor VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "I want the driver for ferrari who made Laps less than 26 and grids more than 9"
    },
    {
        "answer": "SELECT COUNT(other_a) FROM table_14962287_2 WHERE name = \"Tommy Johnson Category:Articles with hCards\"",
        "context": "CREATE TABLE table_14962287_2 (other_a VARCHAR, name VARCHAR)",
        "question": "How many values of Other A correspond to Tommy Johnson Category:Articles with hCards?"
    },
    {
        "answer": "SELECT new_classification FROM table_14976504_2 WHERE institution = \"University of Arizona\"",
        "context": "CREATE TABLE table_14976504_2 (new_classification VARCHAR, institution VARCHAR)",
        "question": "What is the new classification for the University of Arizona Western in the Collegiate Lacrosse League?"
    },
    {
        "answer": "SELECT new_conference FROM table_14976504_2 WHERE institution = \"California State University, Hayward\"",
        "context": "CREATE TABLE table_14976504_2 (new_conference VARCHAR, institution VARCHAR)",
        "question": "What is California State University, Hayward's new conference for Western Collegiate Lacrosse?"
    },
    {
        "answer": "SELECT constructor FROM table_name_66 WHERE grid > 23 AND driver = \"piercarlo ghinzani\"",
        "context": "CREATE TABLE table_name_66 (constructor VARCHAR, grid VARCHAR, driver VARCHAR)",
        "question": "who is the constructor when the grid is more than 23 and the driver is piercarlo ghinzani?"
    },
    {
        "answer": "SELECT result FROM table_name_41 WHERE tournament = \"european indoor championships\" AND year > 1974",
        "context": "CREATE TABLE table_name_41 (result VARCHAR, tournament VARCHAR, year VARCHAR)",
        "question": "What is the result of the european indoor championships after 1974?"
    },
    {
        "answer": "SELECT MAX(evening_gown) FROM table_name_31 WHERE interview > 9.36 AND country = \"tennessee\" AND average > 9.75",
        "context": "CREATE TABLE table_name_31 (evening_gown INTEGER, average VARCHAR, interview VARCHAR, country VARCHAR)",
        "question": "What is the highest evening gown score of the contestant from Tennessee with an interview score larger than 9.36 and an average larger than 9.75 have?"
    },
    {
        "answer": "SELECT rookie FROM table_name_6 WHERE defensive = \"matt vinc\" AND offensive = \"pat maddalena\"",
        "context": "CREATE TABLE table_name_6 (rookie VARCHAR, defensive VARCHAR, offensive VARCHAR)",
        "question": "Who was the rookie who played when Matt Vinc was defensive and Pat Maddalena was offensive?"
    },
    {
        "answer": "SELECT COUNT(population_2000_census) FROM table_14986292_1 WHERE administrative_division = \"Mesquita\"",
        "context": "CREATE TABLE table_14986292_1 (population_2000_census VARCHAR, administrative_division VARCHAR)",
        "question": "Name the total number of population 2000 census for mesquita"
    },
    {
        "answer": "SELECT COUNT(area__km\u00b2_) FROM table_14986292_1 WHERE population_density_2010___km\u00b2_ = 514",
        "context": "CREATE TABLE table_14986292_1 (area__km\u00b2_ VARCHAR, population_density_2010___km\u00b2_ VARCHAR)",
        "question": "Name the number of area where population density 2010 for 514"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_46 WHERE home_team = \"hawthorn\"",
        "context": "CREATE TABLE table_name_46 (away_team VARCHAR, home_team VARCHAR)",
        "question": "What is the score for the away team when they played Hawthorn?"
    },
    {
        "answer": "SELECT occupation FROM table_name_11 WHERE riding = \"labrador\"",
        "context": "CREATE TABLE table_name_11 (occupation VARCHAR, riding VARCHAR)",
        "question": "What is the occupation of the candidate that has a riding of labrador?"
    },
    {
        "answer": "SELECT AVG(sinclair_coefficient) FROM table_name_61 WHERE sinclair_total = 477.2772023 AND weight_class__kg_ > 105",
        "context": "CREATE TABLE table_name_61 (sinclair_coefficient INTEGER, sinclair_total VARCHAR, weight_class__kg_ VARCHAR)",
        "question": "What is the average sinclair coefficient with a Sinclair Total of 477.2772023, and a Weight Class (kg) larger than 105?"
    },
    {
        "answer": "SELECT date FROM table_name_31 WHERE opponent = \"manchester united\" AND venue = \"a\"",
        "context": "CREATE TABLE table_name_31 (date VARCHAR, opponent VARCHAR, venue VARCHAR)",
        "question": "Which Date has an Opponent of manchester united, and a Venue A?"
    },
    {
        "answer": "SELECT womens_doubles FROM table_15002265_1 WHERE mens_doubles = \"Leopold Bauer Alfred Kohlhauser\"",
        "context": "CREATE TABLE table_15002265_1 (womens_doubles VARCHAR, mens_doubles VARCHAR)",
        "question": "who is the the\u00a0womens doubles\u00a0with\u00a0mens doubles\u00a0being leopold bauer alfred kohlhauser"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_11 WHERE home_team = \"richmond\"",
        "context": "CREATE TABLE table_name_11 (home_team VARCHAR)",
        "question": "What is the home teamscore for Richmond?"
    },
    {
        "answer": "SELECT COUNT(director) FROM table_15026994_2 WHERE writer = \"Gaby Chiappe\"",
        "context": "CREATE TABLE table_15026994_2 (director VARCHAR, writer VARCHAR)",
        "question": "How many different directors are associated with the writer Gaby Chiappe?"
    },
    {
        "answer": "SELECT COUNT(license) FROM table_15038373_1 WHERE version = \"1.2.2.0\"",
        "context": "CREATE TABLE table_15038373_1 (license VARCHAR, version VARCHAR)",
        "question": "How many licenses have version 1.2.2.0?"
    },
    {
        "answer": "SELECT stage__winner_ FROM table_name_17 WHERE general_classification = \"vladimir karpets\" AND team_classification = \"relax-gam\" AND points_classification = \"denis menchov\"",
        "context": "CREATE TABLE table_name_17 (stage__winner_ VARCHAR, points_classification VARCHAR, general_classification VARCHAR, team_classification VARCHAR)",
        "question": "Which Stage (Winner) has a Vladimir Karpets General classification and a Team classification of relax-gam, and a Points classification of Denis Menchov?"
    },
    {
        "answer": "SELECT ice_level_reporters FROM table_name_58 WHERE color_commentator_s_ = \"john davidson\" AND play_by_play = \"marv albert\" AND year > 1992",
        "context": "CREATE TABLE table_name_58 (ice_level_reporters VARCHAR, year VARCHAR, color_commentator_s_ VARCHAR, play_by_play VARCHAR)",
        "question": "Who is the Ice level reporter after 1992 with the color commentator John Davidson and the play-by-play Marv Albert?"
    },
    {
        "answer": "SELECT MAX(fall_09) FROM table_15055594_6 WHERE fall_06 = 3821",
        "context": "CREATE TABLE table_15055594_6 (fall_09 INTEGER, fall_06 VARCHAR)",
        "question": "What was the highest number of students in Fall 09 in the state that had 3821 in Fall 06?"
    },
    {
        "answer": "SELECT mountains_classification FROM table_15059783_1 WHERE winner = \"Alejandro Valverde\" AND points_classification = \"Erik Zabel\"",
        "context": "CREATE TABLE table_15059783_1 (mountains_classification VARCHAR, winner VARCHAR, points_classification VARCHAR)",
        "question": "If winner is alejandro Valverde and the points Classification is by Erik Zabel, who is the mountain classification?"
    },
    {
        "answer": "SELECT COUNT(team_classification) FROM table_15059783_1 WHERE combination_classification = \"Alejandro Valverde\" AND points_classification = \"Alessandro Petacchi\"",
        "context": "CREATE TABLE table_15059783_1 (team_classification VARCHAR, combination_classification VARCHAR, points_classification VARCHAR)",
        "question": "How many teams have a combination classification of Alejandro Valverde and a Points classification of Alessandro Petacchi?"
    },
    {
        "answer": "SELECT COUNT(ends) FROM table_name_67 WHERE name = \"filip \u0161ebo\" AND goals > 2",
        "context": "CREATE TABLE table_name_67 (ends VARCHAR, name VARCHAR, goals VARCHAR)",
        "question": "I want the total number of ends for filip \u0161ebo and Goals more than 2"
    },
    {
        "answer": "SELECT COUNT(win_percentage) FROM table_name_89 WHERE postseason = \"did not qualify\" AND rank > 8",
        "context": "CREATE TABLE table_name_89 (win_percentage VARCHAR, postseason VARCHAR, rank VARCHAR)",
        "question": "What number of win% has a postseason of did not qualify and rank larger than 8?"
    },
    {
        "answer": "SELECT team FROM table_name_64 WHERE average < 1.12 AND goalkeeper = \"carlos s\u00e1nchez\"",
        "context": "CREATE TABLE table_name_64 (team VARCHAR, average VARCHAR, goalkeeper VARCHAR)",
        "question": "What team has Carlos S\u00e1nchez as a goalkeeper and an average below 1.12?"
    },
    {
        "answer": "SELECT date_completed FROM table_15070195_1 WHERE nickname = \"Halley\"",
        "context": "CREATE TABLE table_15070195_1 (date_completed VARCHAR, nickname VARCHAR)",
        "question": "when the nickname halley is used, what are the date completed"
    },
    {
        "answer": "SELECT colour_commentator_s_ FROM table_name_58 WHERE play_by_play = \"bob cole\"",
        "context": "CREATE TABLE table_name_58 (colour_commentator_s_ VARCHAR, play_by_play VARCHAR)",
        "question": "Who was the colour commentator when the play-by-play announcer was Bob Cole?"
    },
    {
        "answer": "SELECT COUNT(description) FROM table_1507852_1 WHERE attribute = \"ondragstart\"",
        "context": "CREATE TABLE table_1507852_1 (description VARCHAR, attribute VARCHAR)",
        "question": "How many descriptions are there when the attribute is \"ondragstart\"?"
    },
    {
        "answer": "SELECT team_classification FROM table_15088557_1 WHERE combination_classification = \"Mederic Clain\"",
        "context": "CREATE TABLE table_15088557_1 (team_classification VARCHAR, combination_classification VARCHAR)",
        "question": "Name all the team clasification where the combination classification is mederic clain"
    },
    {
        "answer": "SELECT MAX(caps) FROM table_name_55 WHERE position = \"lock\" AND club_province = \"vicenza rangers\"",
        "context": "CREATE TABLE table_name_55 (caps INTEGER, position VARCHAR, club_province VARCHAR)",
        "question": "What is the high cap total for a lock with the vicenza rangers?"
    },
    {
        "answer": "SELECT MIN(stage) FROM table_15088557_1 WHERE winner = \"Sergei Smetanine\"",
        "context": "CREATE TABLE table_15088557_1 (stage INTEGER, winner VARCHAR)",
        "question": "What is the minimum stage where Sergei Smetanine won?"
    },
    {
        "answer": "SELECT COUNT(country) FROM table_1515346_2 WHERE honoree_s_ = \"Roberto De Vicenzo\"",
        "context": "CREATE TABLE table_1515346_2 (country VARCHAR, honoree_s_ VARCHAR)",
        "question": "How many countries does honoree Roberto de Vicenzo represent?"
    },
    {
        "answer": "SELECT fastest_lap FROM table_name_33 WHERE pole_position = \"damon hill\" AND location = \"magny-cours\"",
        "context": "CREATE TABLE table_name_33 (fastest_lap VARCHAR, pole_position VARCHAR, location VARCHAR)",
        "question": "Who did the fastest lap when pole position was damon hill and the location was magny-cours?"
    },
    {
        "answer": "SELECT segment_b FROM table_15187735_13 WHERE episode = 167",
        "context": "CREATE TABLE table_15187735_13 (segment_b VARCHAR, episode VARCHAR)",
        "question": "Name the segment b for 167"
    },
    {
        "answer": "SELECT COUNT(votes) FROM table_name_48 WHERE rank = \"3rd\" AND candidate = \"mary louise lorefice\"",
        "context": "CREATE TABLE table_name_48 (votes VARCHAR, rank VARCHAR, candidate VARCHAR)",
        "question": "How many votes did 3rd ranking candidate Mary Louise Lorefice receive?"
    },
    {
        "answer": "SELECT segment_b FROM table_15187735_10 WHERE segment_a = \"s Dress Form\"",
        "context": "CREATE TABLE table_15187735_10 (segment_b VARCHAR, segment_a VARCHAR)",
        "question": "Name the segment b for s dress form"
    },
    {
        "answer": "SELECT segment_a FROM table_15187735_15 WHERE segment_c = \"Sushi (Part 1)\"",
        "context": "CREATE TABLE table_15187735_15 (segment_a VARCHAR, segment_c VARCHAR)",
        "question": "What is Segment A where Segment C is Sushi (part 1)? "
    },
    {
        "answer": "SELECT MIN(episode) FROM table_15187735_20 WHERE segment_d = \"Custom Motorcycle Tanks\"",
        "context": "CREATE TABLE table_15187735_20 (episode INTEGER, segment_d VARCHAR)",
        "question": "Which episode has segment D on custom motorcycle tanks?"
    },
    {
        "answer": "SELECT netflix FROM table_15187735_16 WHERE segment_a = \"Digital Dentistry\"",
        "context": "CREATE TABLE table_15187735_16 (netflix VARCHAR, segment_a VARCHAR)",
        "question": "Whats the season/episode of segment a digital dentistry"
    },
    {
        "answer": "SELECT MIN(episode) FROM table_15187735_18 WHERE segment_d = \"Fibre Cement Siding\"",
        "context": "CREATE TABLE table_15187735_18 (episode INTEGER, segment_d VARCHAR)",
        "question": "Name the least episode for fibre cement siding"
    },
    {
        "answer": "SELECT segment_c FROM table_15187735_19 WHERE segment_b = \"Film Digitization\"",
        "context": "CREATE TABLE table_15187735_19 (segment_c VARCHAR, segment_b VARCHAR)",
        "question": "What is the segment C of the episode where segment B is Film Digitization?"
    },
    {
        "answer": "SELECT segment_a FROM table_15187735_19 WHERE episode = 237",
        "context": "CREATE TABLE table_15187735_19 (segment_a VARCHAR, episode VARCHAR)",
        "question": "What is the segment A on episode 237?"
    },
    {
        "answer": "SELECT COUNT(sp) + fs FROM table_name_75 WHERE rank > 8 AND nation = \"netherlands\" AND points > 127.26",
        "context": "CREATE TABLE table_name_75 (fs VARCHAR, sp VARCHAR, points VARCHAR, rank VARCHAR, nation VARCHAR)",
        "question": "Tell me the total number of SP+FS with rank more than 8 for the netherlands and points more than 127.26"
    },
    {
        "answer": "SELECT COUNT(sp) + fs FROM table_name_28 WHERE places = 60 AND points > 151.66",
        "context": "CREATE TABLE table_name_28 (fs VARCHAR, sp VARCHAR, places VARCHAR, points VARCHAR)",
        "question": "Name the total number of SP+FS for places of 60 and points more than 151.66"
    },
    {
        "answer": "SELECT MAX(swimsuit) FROM table_name_13 WHERE average < 8.073 AND evening_gown < 8.31 AND interview > 8.23 AND state = \"georgia\"",
        "context": "CREATE TABLE table_name_13 (swimsuit INTEGER, state VARCHAR, interview VARCHAR, average VARCHAR, evening_gown VARCHAR)",
        "question": "What's the highest swimsuit for an average less than 8.073, evening gown less than 8.31, and an interview over 8.23 in georgia?"
    },
    {
        "answer": "SELECT attendance FROM table_15190346_2 WHERE location = \"Gainesville, FL\"",
        "context": "CREATE TABLE table_15190346_2 (attendance VARCHAR, location VARCHAR)",
        "question": "What was the attendance of the bowl game in Gainesville, Fl?"
    },
    {
        "answer": "SELECT COUNT(median_monthly_per_capita___labour_force_income__hkd_) FROM table_151994_1 WHERE population__2006_est_ = 365540",
        "context": "CREATE TABLE table_151994_1 (median_monthly_per_capita___labour_force_income__hkd_ VARCHAR, population__2006_est_ VARCHAR)",
        "question": "Name the total number of median income for population 2006 for 365540"
    },
    {
        "answer": "SELECT original_title FROM table_15277629_1 WHERE director = \"Bruno Barreto\" AND year__ceremony_ = 1989",
        "context": "CREATE TABLE table_15277629_1 (original_title VARCHAR, director VARCHAR, year__ceremony_ VARCHAR)",
        "question": "What was the original title of the Bruno Barreto film in 1989"
    },
    {
        "answer": "SELECT group_a FROM table_15290638_1 WHERE group_d = \"Indiana\"",
        "context": "CREATE TABLE table_15290638_1 (group_a VARCHAR, group_d VARCHAR)",
        "question": "Who is in group a when indiana is in group d?"
    },
    {
        "answer": "SELECT religion FROM table_name_73 WHERE assumed_office < 2005 AND former_experience = \"commissioner of health\"",
        "context": "CREATE TABLE table_name_73 (religion VARCHAR, assumed_office VARCHAR, former_experience VARCHAR)",
        "question": "Name the religion for Former Experience of commissioner of health and assumed office before 2005"
    },
    {
        "answer": "SELECT primary_sponsor_s_ FROM table_1529793_1 WHERE driver_s_ = \"Jason Leffler\"",
        "context": "CREATE TABLE table_1529793_1 (primary_sponsor_s_ VARCHAR, driver_s_ VARCHAR)",
        "question": "Who is Jason Leffler's primary sponsor?"
    },
    {
        "answer": "SELECT COUNT(general_classification) FROM table_15294880_2 WHERE team_classification = \"Quick Step\"",
        "context": "CREATE TABLE table_15294880_2 (general_classification VARCHAR, team_classification VARCHAR)",
        "question": "When the team classification was quick step, what was the total number of general classifications?"
    },
    {
        "answer": "SELECT velocity_angle_\u03b7_in_i_radians FROM table_15314901_1 WHERE coordinate_velocity_v_dx_dt_in_units_of_c = \"(e 2 \u2212 1)/(e 2 + 1) \u2245 0.761\"",
        "context": "CREATE TABLE table_15314901_1 (velocity_angle_\u03b7_in_i_radians VARCHAR, coordinate_velocity_v_dx_dt_in_units_of_c VARCHAR)",
        "question": "If the coordinate velocity v dx/dt in units of c is (e 2 \u2212 1)/(e 2 + 1) \u2245 0.761, what is the velocity angle \u03b7 in i-radians?"
    },
    {
        "answer": "SELECT COUNT(coordinate_velocity_v_dx_dt_in_units_of_c) FROM table_15314901_1 WHERE velocity_angle_\u03b7_in_i_radians = \"ln[2 + \u221a5] \u2245 1.444\"",
        "context": "CREATE TABLE table_15314901_1 (coordinate_velocity_v_dx_dt_in_units_of_c VARCHAR, velocity_angle_\u03b7_in_i_radians VARCHAR)",
        "question": "What is the coordinate velocity v dx/dt in units of c total number if the velocity angle \u03b7 in i-radians is ln[2 + \u221a5] \u2245 1.444?"
    },
    {
        "answer": "SELECT proper_velocity_w_dx_d\u03c4_in_units_of_c FROM table_15314901_1 WHERE condition_parameter = \"Rapidity of 1 hyperbolic radian\"",
        "context": "CREATE TABLE table_15314901_1 (proper_velocity_w_dx_d\u03c4_in_units_of_c VARCHAR, condition_parameter VARCHAR)",
        "question": "If the condition/parameter is rapidity of 1 hyperbolic radian, what is the proper velocity w dx/d\u03c4 in units of c?"
    },
    {
        "answer": "SELECT away_team FROM table_name_20 WHERE venue = \"arden street oval\"",
        "context": "CREATE TABLE table_name_20 (away_team VARCHAR, venue VARCHAR)",
        "question": "Who was the away team at Arden Street Oval?"
    },
    {
        "answer": "SELECT MIN(lost) FROM table_15319684_1 WHERE team = \"Corinthians\"",
        "context": "CREATE TABLE table_15319684_1 (lost INTEGER, team VARCHAR)",
        "question": "Name the most losst for corinthians"
    },
    {
        "answer": "SELECT muslim___percentage_of_total_population_ FROM table_1532779_1 WHERE registered_mosques = 614",
        "context": "CREATE TABLE table_1532779_1 (muslim___percentage_of_total_population_ VARCHAR, registered_mosques VARCHAR)",
        "question": "What was the percentage of muslims during a time where there were 614 registered mosques?"
    },
    {
        "answer": "SELECT COUNT(Ends) AS won FROM table_15333005_1 WHERE l = 4 AND stolen_ends = 17",
        "context": "CREATE TABLE table_15333005_1 (Ends VARCHAR, l VARCHAR, stolen_ends VARCHAR)",
        "question": "Name the number ends won when L is 4 and stolen ends is 17"
    },
    {
        "answer": "SELECT venue FROM table_name_13 WHERE date = \"october 16, 1996\"",
        "context": "CREATE TABLE table_name_13 (venue VARCHAR, date VARCHAR)",
        "question": "What was the venue on October 16, 1996?"
    },
    {
        "answer": "SELECT year_built FROM table_name_10 WHERE class = \"class 253\" AND number > 18",
        "context": "CREATE TABLE table_name_10 (year_built VARCHAR, class VARCHAR, number VARCHAR)",
        "question": "What year was the class 253 larger than 18 built?"
    },
    {
        "answer": "SELECT margin FROM table_name_34 WHERE championship = \"masters tournament (2)\"",
        "context": "CREATE TABLE table_name_34 (margin VARCHAR, championship VARCHAR)",
        "question": "What is the margin for the Masters Tournament (2) championship?"
    },
    {
        "answer": "SELECT drawn FROM table_15352382_1 WHERE team = \"Portuguesa Santista\"",
        "context": "CREATE TABLE table_15352382_1 (drawn VARCHAR, team VARCHAR)",
        "question": "How many Drawn does the team Portuguesa Santista have?"
    },
    {
        "answer": "SELECT viewers__m_ FROM table_name_73 WHERE share = 1 AND rating > 0.7000000000000001 AND rank___number_ = \"100/102\"",
        "context": "CREATE TABLE table_name_73 (viewers__m_ VARCHAR, rank___number_ VARCHAR, share VARCHAR, rating VARCHAR)",
        "question": "How many vieweres for the episode with a share of 1, a Rating larger than 0.7000000000000001, and a Rank (#) of 100/102?"
    },
    {
        "answer": "SELECT COUNT(average_weekly_rank) FROM table_15358729_6 WHERE average_nightly_rank = \"No. 2\"",
        "context": "CREATE TABLE table_15358729_6 (average_weekly_rank VARCHAR, average_nightly_rank VARCHAR)",
        "question": "How many were the show's average weekly ranking when it reached No. 2 in average nightly ranking?"
    },
    {
        "answer": "SELECT away_team FROM table_name_63 WHERE venue = \"junction oval\"",
        "context": "CREATE TABLE table_name_63 (away_team VARCHAR, venue VARCHAR)",
        "question": "Who was the away team at Junction Oval?"
    },
    {
        "answer": "SELECT total FROM table_name_99 WHERE joint_music_award = \"1\" AND rthk = \"4\" AND usca = \"4\"",
        "context": "CREATE TABLE table_name_99 (total VARCHAR, usca VARCHAR, joint_music_award VARCHAR, rthk VARCHAR)",
        "question": "What is the Total with a Joint Music Award of 1, RTHK of 4, and USCA of 4?"
    },
    {
        "answer": "SELECT difference FROM table_15400878_1 WHERE drawn > 2.0",
        "context": "CREATE TABLE table_15400878_1 (difference VARCHAR, drawn INTEGER)",
        "question": "Name the difference for when drawn is larger than 2.0"
    },
    {
        "answer": "SELECT COUNT(wheels) FROM table_15412381_5 WHERE lms_nos = \"16377-9\"",
        "context": "CREATE TABLE table_15412381_5 (wheels VARCHAR, lms_nos VARCHAR)",
        "question": "How many figures are there for wheels for LMS numbers 16377-9?"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_35 WHERE time_retired = \"differential\" AND grid > 2",
        "context": "CREATE TABLE table_name_35 (laps INTEGER, time_retired VARCHAR, grid VARCHAR)",
        "question": "what is the most laps with the time/retired is differential and the grid is more than 2?"
    },
    {
        "answer": "SELECT deleted FROM table_name_35 WHERE listed = \"09/21/1984\" AND name = \"stauffer chemical company (lemoyne plant)\"",
        "context": "CREATE TABLE table_name_35 (deleted VARCHAR, listed VARCHAR, name VARCHAR)",
        "question": "On what date was Stauffer Chemical Company (Lemoyne Plant), which was listed on 09/21/1984, deleted?"
    },
    {
        "answer": "SELECT fifth_district FROM table_15442974_1 WHERE third_district = \"William Womer\"",
        "context": "CREATE TABLE table_15442974_1 (fifth_district VARCHAR, third_district VARCHAR)",
        "question": "Name the fifth district for william womer"
    },
    {
        "answer": "SELECT fourth_district FROM table_15442974_1 WHERE first_district = \"Beverly Bodem\"",
        "context": "CREATE TABLE table_15442974_1 (fourth_district VARCHAR, first_district VARCHAR)",
        "question": "Name the fourth district for beverly bodem"
    },
    {
        "answer": "SELECT COUNT(fifth_district) FROM table_15442974_1 WHERE third_district = \"Richard Houskamp\"",
        "context": "CREATE TABLE table_15442974_1 (fifth_district VARCHAR, third_district VARCHAR)",
        "question": "Name the number for fifth district for richard houskamp"
    },
    {
        "answer": "SELECT school_club_team FROM table_15463188_17 WHERE season = \"2012\" AND acquisition_via = \"Trade\"",
        "context": "CREATE TABLE table_15463188_17 (school_club_team VARCHAR, season VARCHAR, acquisition_via VARCHAR)",
        "question": "What was the school/club team whose season was in 2012 and were acquired via trade? "
    },
    {
        "answer": "SELECT software FROM table_name_78 WHERE cost___usd__ = \"free\" AND latest_stable_date__version_ = \"1.1\"",
        "context": "CREATE TABLE table_name_78 (software VARCHAR, cost___usd__ VARCHAR, latest_stable_date__version_ VARCHAR)",
        "question": "What is the free sotware with the latest stable date version of 1.1?"
    },
    {
        "answer": "SELECT date FROM table_name_4 WHERE visitor = \"jazz\" AND leading_scorer = \"mehmet okur (22)\"",
        "context": "CREATE TABLE table_name_4 (date VARCHAR, visitor VARCHAR, leading_scorer VARCHAR)",
        "question": "Which date's visitor was jazz, when the leading scorer was Mehmet Okur (22)?"
    },
    {
        "answer": "SELECT condition FROM table_1555308_1 WHERE bleeding_time = \"Prolonged\" AND prothrombin_time = \"Unaffected\"",
        "context": "CREATE TABLE table_1555308_1 (condition VARCHAR, bleeding_time VARCHAR, prothrombin_time VARCHAR)",
        "question": "In which condition(s) is bleeding time prolonged and prothrombin time unaffected?"
    },
    {
        "answer": "SELECT club FROM table_name_27 WHERE european_cup = \"fiba european champion's cup\" AND national_cup = \"italian cup\"",
        "context": "CREATE TABLE table_name_27 (club VARCHAR, european_cup VARCHAR, national_cup VARCHAR)",
        "question": "What Club has Fiba European Champion's Cup and an Italian Cup?"
    },
    {
        "answer": "SELECT current_affiliation FROM table_1553485_1 WHERE city_of_license__market = \"San Francisco - Oakland - San Jose\"",
        "context": "CREATE TABLE table_1553485_1 (current_affiliation VARCHAR, city_of_license__market VARCHAR)",
        "question": "Who currently affiliates in San Francisco - Oakland - San Jose?"
    },
    {
        "answer": "SELECT percentage_of_total_area FROM table_15555661_2 WHERE percentage_protected = \"8.06\"",
        "context": "CREATE TABLE table_15555661_2 (percentage_of_total_area VARCHAR, percentage_protected VARCHAR)",
        "question": "What is the  percentage of total area in the ecozone that the percentage protected is 8.06?"
    },
    {
        "answer": "SELECT COUNT(proto_austronesian) FROM table_15568886_14 WHERE proto_oceanic = \"*natu\"",
        "context": "CREATE TABLE table_15568886_14 (proto_austronesian VARCHAR, proto_oceanic VARCHAR)",
        "question": "Name the number of proto austronesian for *natu"
    },
    {
        "answer": "SELECT COUNT(pommel_horse) FROM table_name_52 WHERE total < 230.019 AND team = \"china (chn)\" AND vault < 38.437",
        "context": "CREATE TABLE table_name_52 (pommel_horse VARCHAR, vault VARCHAR, total VARCHAR, team VARCHAR)",
        "question": "How many pommel horses have a Total smaller than 230.019, a Team of china (chn), and a Vault smaller than 38.437?"
    },
    {
        "answer": "SELECT studio FROM table_name_77 WHERE year = 1943 AND title = \"the hard way\"",
        "context": "CREATE TABLE table_name_77 (studio VARCHAR, year VARCHAR, title VARCHAR)",
        "question": "What was the studio for The Hard Way in 1943?"
    },
    {
        "answer": "SELECT home_team FROM table_name_39 WHERE venue = \"lake oval\"",
        "context": "CREATE TABLE table_name_39 (home_team VARCHAR, venue VARCHAR)",
        "question": "Which team plays at Lake Oval?"
    },
    {
        "answer": "SELECT first_season FROM table_1560673_1 WHERE club = \"Syrianska FC\"",
        "context": "CREATE TABLE table_1560673_1 (first_season VARCHAR, club VARCHAR)",
        "question": "What was the first season for Syrianska FC"
    },
    {
        "answer": "SELECT score FROM table_name_80 WHERE decision = \"dipietro\" AND visitor = \"ny islanders\" AND home = \"colorado\"",
        "context": "CREATE TABLE table_name_80 (score VARCHAR, home VARCHAR, decision VARCHAR, visitor VARCHAR)",
        "question": "Name the score when it had a decision of dipietro and visitor of ny islanders with home of colorado"
    },
    {
        "answer": "SELECT venue FROM table_name_29 WHERE away_team = \"carlton\"",
        "context": "CREATE TABLE table_name_29 (venue VARCHAR, away_team VARCHAR)",
        "question": "What Venue had Carlton has the Away team?"
    },
    {
        "answer": "SELECT AVG(bronze) FROM table_name_28 WHERE nation = \"argentina\" AND silver < 0",
        "context": "CREATE TABLE table_name_28 (bronze INTEGER, nation VARCHAR, silver VARCHAR)",
        "question": "Which Bronze has a Nation of argentina, and a Silver smaller than 0?"
    },
    {
        "answer": "SELECT years_in_orlando FROM table_15621965_10 WHERE school_club_team = \"Concord HS\"",
        "context": "CREATE TABLE table_15621965_10 (years_in_orlando VARCHAR, school_club_team VARCHAR)",
        "question": "Name the years in orlando that the player from concord hs was in"
    },
    {
        "answer": "SELECT MAX(losses) FROM table_name_82 WHERE wins = 0 AND win__percentage > 0",
        "context": "CREATE TABLE table_name_82 (losses INTEGER, wins VARCHAR, win__percentage VARCHAR)",
        "question": "What is the high loss total for players with zero wins and a win % greater than 0?"
    },
    {
        "answer": "SELECT position FROM table_name_20 WHERE club_team = \"miami university (ccha)\"",
        "context": "CREATE TABLE table_name_20 (position VARCHAR, club_team VARCHAR)",
        "question": "What position does the player from the Miami University (CCHA) club team play?"
    },
    {
        "answer": "SELECT MIN(_number) FROM table_15647838_3 WHERE location = \"Atlanta, GA\" AND opponent = \"Georgia Bulldogs\"",
        "context": "CREATE TABLE table_15647838_3 (_number INTEGER, location VARCHAR, opponent VARCHAR)",
        "question": "What is the lowest # in Atlanta, GA with the Georgia Bulldogs as an opponent?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_17 WHERE venue = \"junction oval\"",
        "context": "CREATE TABLE table_name_17 (home_team VARCHAR, venue VARCHAR)",
        "question": "What was the home team's score at junction oval?"
    },
    {
        "answer": "SELECT MIN(storage_stability) FROM table_name_30 WHERE toxicity_as_blood_agent > 8 AND agent = \"arsine\" AND field_stability < 5",
        "context": "CREATE TABLE table_name_30 (storage_stability INTEGER, field_stability VARCHAR, toxicity_as_blood_agent VARCHAR, agent VARCHAR)",
        "question": "What is the storage stability of Arsine with a toxicity of 8, and field stability less than 5?"
    },
    {
        "answer": "SELECT COUNT(date) FROM table_1566852_3 WHERE interview_subject = \"Harrison Ford\"",
        "context": "CREATE TABLE table_1566852_3 (date VARCHAR, interview_subject VARCHAR)",
        "question": "IN HOW MANY ISSUES WAS HARRISON FORD THE INTERVIEW SUBJECT?"
    },
    {
        "answer": "SELECT object_type FROM table_name_28 WHERE apparent_magnitude > 10.6 AND declination___j2000__ = \"\u00b044\u203207\u2033\"",
        "context": "CREATE TABLE table_name_28 (object_type VARCHAR, apparent_magnitude VARCHAR, declination___j2000__ VARCHAR)",
        "question": "Tell me the object type which has an apparent magnitude more than 10.6 and declination of \u00b044\u203207\u2033"
    },
    {
        "answer": "SELECT declination___j2000__ FROM table_name_12 WHERE apparent_magnitude > 10.4 AND ngc_number = 5112",
        "context": "CREATE TABLE table_name_12 (declination___j2000__ VARCHAR, apparent_magnitude VARCHAR, ngc_number VARCHAR)",
        "question": "Tell me the declination with apparent magnitude more than 10.4 and NGC number of 5112"
    },
    {
        "answer": "SELECT 20 AS _questions FROM table_1566852_6 WHERE centerfold_model = \"Jillian Grace\"",
        "context": "CREATE TABLE table_1566852_6 (centerfold_model VARCHAR)",
        "question": "What's the subject of 20 questions in those issues where Jillian Grace is the centerfold model?"
    },
    {
        "answer": "SELECT AVG(_percentage_of_pop) FROM table_name_17 WHERE country__or_dependent_territory_ = \"tunisia\" AND average_relative_annual_growth___percentage_ < 1.03",
        "context": "CREATE TABLE table_name_17 (_percentage_of_pop INTEGER, country__or_dependent_territory_ VARCHAR, average_relative_annual_growth___percentage_ VARCHAR)",
        "question": "What is the average % of population Tunisia, which has an average relative annual growth smaller than 1.03?"
    },
    {
        "answer": "SELECT rank__week_ FROM table_15681686_4 WHERE viewers__millions_ = \"6.45\"",
        "context": "CREATE TABLE table_15681686_4 (rank__week_ VARCHAR, viewers__millions_ VARCHAR)",
        "question": "what rank has viewers at 6.45?"
    },
    {
        "answer": "SELECT COUNT(rank__timeslot_) FROM table_15681686_4 WHERE viewers__millions_ = \"9.38\"",
        "context": "CREATE TABLE table_15681686_4 (rank__timeslot_ VARCHAR, viewers__millions_ VARCHAR)",
        "question": "what is the total number of rank where viewers is 9.38?"
    },
    {
        "answer": "SELECT destination FROM table_1569516_1 WHERE service_pattern = \"Sydenham then fast to Norwood Junction\"",
        "context": "CREATE TABLE table_1569516_1 (destination VARCHAR, service_pattern VARCHAR)",
        "question": "Where is the service pattern sydenham then fast to norwood junction?"
    },
    {
        "answer": "SELECT city FROM table_name_87 WHERE rank < 5 AND name = \"lamar tower 1\"",
        "context": "CREATE TABLE table_name_87 (city VARCHAR, rank VARCHAR, name VARCHAR)",
        "question": "What city is the lamar tower 1, ranked above 5?"
    },
    {
        "answer": "SELECT tournament FROM table_1569625_1 WHERE margin_of_victory = \"3 strokes\" AND winning_score = 71 - 66 - 70 - 67 = 274",
        "context": "CREATE TABLE table_1569625_1 (tournament VARCHAR, margin_of_victory VARCHAR, winning_score VARCHAR)",
        "question": "Name the tournament when margin of victory is 3 strokes and winning score is 71-66-70-67=274"
    },
    {
        "answer": "SELECT COUNT(laps) FROM table_name_32 WHERE driver = \"ant\u00f4nio pizzonia\"",
        "context": "CREATE TABLE table_name_32 (laps VARCHAR, driver VARCHAR)",
        "question": "How many laps did ant\u00f4nio pizzonia do?"
    },
    {
        "answer": "SELECT constructor FROM table_name_99 WHERE time_retired = \"handling\"",
        "context": "CREATE TABLE table_name_99 (constructor VARCHAR, time_retired VARCHAR)",
        "question": "What is the constructor for time/retired of handling?"
    },
    {
        "answer": "SELECT MAX(round) FROM table_name_59 WHERE nationality = \"sweden\" AND position = \"right wing\"",
        "context": "CREATE TABLE table_name_59 (round INTEGER, nationality VARCHAR, position VARCHAR)",
        "question": "What is the highest round of a player from Sweden who plays right wing?"
    },
    {
        "answer": "SELECT kansas_state_vs FROM table_15740666_6 WHERE last_meeting = \"11/26/1988\"",
        "context": "CREATE TABLE table_15740666_6 (kansas_state_vs VARCHAR, last_meeting VARCHAR)",
        "question": "who won the kansas state game on 11/26/1988"
    },
    {
        "answer": "SELECT final_episode FROM table_name_72 WHERE episodes_credited = 187",
        "context": "CREATE TABLE table_name_72 (final_episode VARCHAR, episodes_credited VARCHAR)",
        "question": "What was the final episode credited of 187?"
    },
    {
        "answer": "SELECT COUNT(poll_winner) FROM table_15781170_2 WHERE original_air_date = \"March 19, 2008\"",
        "context": "CREATE TABLE table_15781170_2 (poll_winner VARCHAR, original_air_date VARCHAR)",
        "question": "Name the poll winner for march 19, 2008"
    },
    {
        "answer": "SELECT original_artist FROM table_15796072_1 WHERE week__number = \"Top 16 (8 Women)\"",
        "context": "CREATE TABLE table_15796072_1 (original_artist VARCHAR, week__number VARCHAR)",
        "question": "Who was the original artist for week number Top 16 (8 women)?"
    },
    {
        "answer": "SELECT SUM(laps) FROM table_name_99 WHERE grid > 17 AND time_retired = \"collision\"",
        "context": "CREATE TABLE table_name_99 (laps INTEGER, grid VARCHAR, time_retired VARCHAR)",
        "question": "How many laps had a grid of greater than 17 and retired due to collision?"
    },
    {
        "answer": "SELECT original_artist FROM table_15796072_1 WHERE order__number = \"9\"",
        "context": "CREATE TABLE table_15796072_1 (original_artist VARCHAR, order__number VARCHAR)",
        "question": "Who was the original artist when the order number is 9?"
    },
    {
        "answer": "SELECT week FROM table_name_85 WHERE kickoff_[a_] = \"1:00\" AND record = \"4-5-1\"",
        "context": "CREATE TABLE table_name_85 (week VARCHAR, record VARCHAR, kickoff_ VARCHAR, a_ VARCHAR)",
        "question": "Which week has a Kickoff time of 1:00 with a record of 4-5-1?"
    },
    {
        "answer": "SELECT MAX(season__number) FROM table_15824796_3 WHERE original_air_date = \"December 5, 1953\"",
        "context": "CREATE TABLE table_15824796_3 (season__number INTEGER, original_air_date VARCHAR)",
        "question": "What season began on december 5, 1953?"
    },
    {
        "answer": "SELECT title FROM table_15824796_3 WHERE original_air_date = \"February 27, 1954\"",
        "context": "CREATE TABLE table_15824796_3 (title VARCHAR, original_air_date VARCHAR)",
        "question": "What is the title of the first episode of the season that begin on february 27, 1954?"
    },
    {
        "answer": "SELECT MIN(enrollment) FROM table_15851155_1 WHERE school = \"Montana Tech of the University of Montana\"",
        "context": "CREATE TABLE table_15851155_1 (enrollment INTEGER, school VARCHAR)",
        "question": "Name the minimum enrollment for montana tech of the university of montana"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_32 WHERE away_team = \"fitzroy\"",
        "context": "CREATE TABLE table_name_32 (away_team VARCHAR)",
        "question": "What was the away team score, when the away team was Fitzroy?"
    },
    {
        "answer": "SELECT content FROM table_15887683_1 WHERE television_service = \"LA7\"",
        "context": "CREATE TABLE table_15887683_1 (content VARCHAR, television_service VARCHAR)",
        "question": "What is the content of la7 television service?"
    },
    {
        "answer": "SELECT COUNT(pl_gp) FROM table_name_16 WHERE reg_gp < 5 AND team__league_ = \"seattle thunderbirds\" AND pick__number < 131",
        "context": "CREATE TABLE table_name_16 (pl_gp VARCHAR, pick__number VARCHAR, reg_gp VARCHAR, team__league_ VARCHAR)",
        "question": "What is the total number of playoff games played by the Seattle Thunderbirds team where the number of regular games played is less than 5 and pick number is less than 131?"
    },
    {
        "answer": "SELECT content FROM table_15887683_10 WHERE package_option = \"Sky Famiglia\" AND language = \"Italian\" AND dar = \"16:9\" AND television_service = \"MTV Hits\"",
        "context": "CREATE TABLE table_15887683_10 (content VARCHAR, television_service VARCHAR, dar VARCHAR, package_option VARCHAR, language VARCHAR)",
        "question": "Name the content for sky famiglia for italian and dar 16:9 for mtv hits"
    },
    {
        "answer": "SELECT ppv FROM table_15887683_10 WHERE package_option = \"Sky Famiglia\" AND dar = \"16:9\" AND television_service = \"MTV Dance\"",
        "context": "CREATE TABLE table_15887683_10 (ppv VARCHAR, television_service VARCHAR, package_option VARCHAR, dar VARCHAR)",
        "question": "Name the ppv for sky famiglia and dar 16:9 for mtv dance"
    },
    {
        "answer": "SELECT dar FROM table_15887683_17 WHERE television_service = \"Telenord\"",
        "context": "CREATE TABLE table_15887683_17 (dar VARCHAR, television_service VARCHAR)",
        "question": "Name the dar for telenord"
    },
    {
        "answer": "SELECT page_count FROM table_name_39 WHERE author = \"stefano d'arrigo\"",
        "context": "CREATE TABLE table_name_39 (page_count VARCHAR, author VARCHAR)",
        "question": "How many pages were in the book by Stefano D'Arrigo?"
    },
    {
        "answer": "SELECT package_option FROM table_15887683_3 WHERE television_service = \"Cartello promozionale Sky HD\"",
        "context": "CREATE TABLE table_15887683_3 (package_option VARCHAR, television_service VARCHAR)",
        "question": "What packages offer the Cartello Promozionale Sky HD service?"
    },
    {
        "answer": "SELECT n\u00b0 FROM table_15887683_5 WHERE package_option = \"Sky Cinema\" AND content = \"cinema\" AND television_service = \"Sky Cinema\" + 24",
        "context": "CREATE TABLE table_15887683_5 (n\u00b0 VARCHAR, television_service VARCHAR, package_option VARCHAR, content VARCHAR)",
        "question": "What are the values of n for cinema content provided by Sky Cinema +24 on its Sky Cinema package?"
    },
    {
        "answer": "SELECT location_attendance FROM table_name_49 WHERE high_rebounds = \"a. horford (10)\" AND high_points = \"j. johnson (21)\"",
        "context": "CREATE TABLE table_name_49 (location_attendance VARCHAR, high_rebounds VARCHAR, high_points VARCHAR)",
        "question": "What is the location attendance of the game with A. Horford (10) as the highest rebounds and J. Johnson (21) as the highest points?"
    },
    {
        "answer": "SELECT COUNT(dar) FROM table_15887683_9 WHERE television_service = \"Disney Channel\" AND n\u00b0 = 613",
        "context": "CREATE TABLE table_15887683_9 (dar VARCHAR, television_service VARCHAR, n\u00b0 VARCHAR)",
        "question": "Name the total number of dar for disney channel and number is 613"
    },
    {
        "answer": "SELECT country FROM table_15887683_9 WHERE dar = \"16:9\" AND language = \"Italian English\" AND television_service = \"Disney XD +2\"",
        "context": "CREATE TABLE table_15887683_9 (country VARCHAR, television_service VARCHAR, dar VARCHAR, language VARCHAR)",
        "question": "Name the country when dar is 16:9 for italian english for disney xd +2"
    },
    {
        "answer": "SELECT country FROM table_name_93 WHERE score = \"274\" AND runner_s__up = \"virginie lagoutte-cl\u00e9ment\"",
        "context": "CREATE TABLE table_name_93 (country VARCHAR, score VARCHAR, runner_s__up VARCHAR)",
        "question": "I want the country for score of 274 and runner-up of virginie lagoutte-cl\u00e9ment"
    },
    {
        "answer": "SELECT country FROM table_15909409_2 WHERE agricultural_use__m_3__p_yr__in__percentage_ = \"2040(93%)\"",
        "context": "CREATE TABLE table_15909409_2 (country VARCHAR, agricultural_use__m_3__p_yr__in__percentage_ VARCHAR)",
        "question": "What are the countries in which the agricultural use  (m 3 /p/yr)(in %) is 2040(93%)?"
    },
    {
        "answer": "SELECT COUNT(country) FROM table_15909409_2 WHERE per_capita_withdrawal__m_3__p_yr_ = 372",
        "context": "CREATE TABLE table_15909409_2 (country VARCHAR, per_capita_withdrawal__m_3__p_yr_ VARCHAR)",
        "question": "How many countries had a per capita withdrawal (m 3 /p/yr) of 372?"
    },
    {
        "answer": "SELECT COUNT(total_freshwater_withdrawal__km_3__yr_) FROM table_15909409_2 WHERE agricultural_use__m_3__p_yr__in__percentage_ = \"428(62%)\"",
        "context": "CREATE TABLE table_15909409_2 (total_freshwater_withdrawal__km_3__yr_ VARCHAR, agricultural_use__m_3__p_yr__in__percentage_ VARCHAR)",
        "question": "How many countries had a total freshwater withdrawal (km 3 /yr) where the agricultural use (m 3 /p/yr)(in %) was 428(62%)?"
    },
    {
        "answer": "SELECT total_freshwater_withdrawal__km_3__yr_ FROM table_15909409_2 WHERE agricultural_use__m_3__p_yr__in__percentage_ = \"1029(96%)\"",
        "context": "CREATE TABLE table_15909409_2 (total_freshwater_withdrawal__km_3__yr_ VARCHAR, agricultural_use__m_3__p_yr__in__percentage_ VARCHAR)",
        "question": "In Pakistan, what was the total freshwater withdrawal (km 3 /yr) where the agricultural use (m 3 /p/yr)(in %) was 1029(96%)?"
    },
    {
        "answer": "SELECT AVG(entered_service) FROM table_name_73 WHERE builder = \"tom smith\" AND number < 7007",
        "context": "CREATE TABLE table_name_73 (entered_service INTEGER, builder VARCHAR, number VARCHAR)",
        "question": "When did the tom smith built train enter service with a number under 7007?"
    },
    {
        "answer": "SELECT d_42 FROM table_name_17 WHERE d_50 = \"d 31\"",
        "context": "CREATE TABLE table_name_17 (d_42 VARCHAR, d_50 VARCHAR)",
        "question": "What is the D 42 when the D 50 is d 31?"
    },
    {
        "answer": "SELECT MAX(specific_impulse__s_) FROM table_15944_5 WHERE effective_exhaust_velocity__m_s_ = 4423",
        "context": "CREATE TABLE table_15944_5 (specific_impulse__s_ INTEGER, effective_exhaust_velocity__m_s_ VARCHAR)",
        "question": "What is the maximum specific impulse with a 4423 m/s effective exhaust velocity?"
    },
    {
        "answer": "SELECT yard_name FROM table_name_19 WHERE ship_types_delivered = \"n3 type, v4 type\" AND total_vessels_built_for_usmc = \"13 ships for usmc\"",
        "context": "CREATE TABLE table_name_19 (yard_name VARCHAR, ship_types_delivered VARCHAR, total_vessels_built_for_usmc VARCHAR)",
        "question": "what is the yard name when the ship types delivered is n3 type, v4 type and the total vessels built for usmc is 13 ships for usmc?"
    },
    {
        "answer": "SELECT ship_types_delivered FROM table_name_21 WHERE total_vessels_built_for_usmc = \"13 ships for usmc (plus 37 more for usn)\"",
        "context": "CREATE TABLE table_name_21 (ship_types_delivered VARCHAR, total_vessels_built_for_usmc VARCHAR)",
        "question": "what is the ship types delivered when the total vessels built for usmc is 13 ships for usmc (plus 37 more for usn)?"
    },
    {
        "answer": "SELECT centennial FROM table_15977768_1 WHERE akimel_a_al_the_name_is_tohono_oodham_for_children_of_the_river = \"1992\"",
        "context": "CREATE TABLE table_15977768_1 (centennial VARCHAR, akimel_a_al_the_name_is_tohono_oodham_for_children_of_the_river VARCHAR)",
        "question": "Name the centennial for 1992 akimel"
    },
    {
        "answer": "SELECT COUNT(chapters) FROM table_name_86 WHERE director = \"elmer clifton\"",
        "context": "CREATE TABLE table_name_86 (chapters VARCHAR, director VARCHAR)",
        "question": "How many chapters did Elmer Clifton direct?"
    },
    {
        "answer": "SELECT COUNT(team__b_) FROM table_1594772_2 WHERE margin = \"35 runs\" AND winner = \"India\"",
        "context": "CREATE TABLE table_1594772_2 (team__b_ VARCHAR, margin VARCHAR, winner VARCHAR)",
        "question": "Name the number of team for 35 runs margin and india winner"
    },
    {
        "answer": "SELECT inflation__percentage_annual__2012_ FROM table_1598533_8 WHERE gdp_per_capita_in_ppp_us$__2012_ = 24505",
        "context": "CREATE TABLE table_1598533_8 (inflation__percentage_annual__2012_ VARCHAR, gdp_per_capita_in_ppp_us$__2012_ VARCHAR)",
        "question": "What is the annual inflation % when GDP per capita in ppp US$ is 24505 in 2012?"
    },
    {
        "answer": "SELECT AVG(series__number) FROM table_name_42 WHERE directed_by = \"matthew penn\"",
        "context": "CREATE TABLE table_name_42 (series__number INTEGER, directed_by VARCHAR)",
        "question": "What is the average of the Series #s that were directed by Matthew Penn?"
    },
    {
        "answer": "SELECT MIN(bills_first_downs) FROM table_16028459_2 WHERE opponents = 6",
        "context": "CREATE TABLE table_16028459_2 (bills_first_downs INTEGER, opponents VARCHAR)",
        "question": "How many first downs did the bills have when their opponent had 6"
    },
    {
        "answer": "SELECT bills_points FROM table_16028459_2 WHERE opponents = 14",
        "context": "CREATE TABLE table_16028459_2 (bills_points VARCHAR, opponents VARCHAR)",
        "question": "How many points did the bills score when their opponent had 14"
    },
    {
        "answer": "SELECT model FROM table_name_72 WHERE years = \"2001\u20132004\" AND torque = \"n\u00b7m (lb\u00b7ft) @ 3750\" AND engine_code = \"n42b18 / n46b18\"",
        "context": "CREATE TABLE table_name_72 (model VARCHAR, engine_code VARCHAR, years VARCHAR, torque VARCHAR)",
        "question": "Which model was made from 2001\u20132004, with a Torque of n\u00b7m (lb\u00b7ft) @ 3750, and an Engine code of n42b18 / n46b18?"
    },
    {
        "answer": "SELECT stadium FROM table_16046689_29 WHERE payout___us$__ = \"$3 Million\"",
        "context": "CREATE TABLE table_16046689_29 (stadium VARCHAR, payout___us$__ VARCHAR)",
        "question": "Which stadium has a payout of $3 million?"
    },
    {
        "answer": "SELECT COUNT(_percentage_of_total_deportees) FROM table_16048129_5 WHERE average_family_size = \"2.8\"",
        "context": "CREATE TABLE table_16048129_5 (_percentage_of_total_deportees VARCHAR, average_family_size VARCHAR)",
        "question": "What is the total number of regions where the average family size is 2.8?"
    },
    {
        "answer": "SELECT COUNT(pop_density_people_km_2) FROM table_1606824_1 WHERE population__percentage_of_eu = \"1.7%\"",
        "context": "CREATE TABLE table_1606824_1 (pop_density_people_km_2 VARCHAR, population__percentage_of_eu VARCHAR)",
        "question": "Name the population density people where population % eu for 1.7%"
    },
    {
        "answer": "SELECT population__percentage_of_eu FROM table_1606824_1 WHERE member_state = \"Greece\"",
        "context": "CREATE TABLE table_1606824_1 (population__percentage_of_eu VARCHAR, member_state VARCHAR)",
        "question": "Name the population % of eu for greece"
    },
    {
        "answer": "SELECT player FROM table_name_89 WHERE team = \"fort wayne pistons\" AND position = \"f\"",
        "context": "CREATE TABLE table_name_89 (player VARCHAR, team VARCHAR, position VARCHAR)",
        "question": "Who is the player that plays position f from Fort Wayne Pistons?"
    },
    {
        "answer": "SELECT COUNT(_number) FROM table_16072430_1 WHERE share > 7.0",
        "context": "CREATE TABLE table_16072430_1 (_number VARCHAR, share INTEGER)",
        "question": "How many episodes have a share bigger than 7.0?"
    },
    {
        "answer": "SELECT height_in_ft FROM table_name_35 WHERE position = \"guard\" AND school_club_team_country = \"north carolina-charlotte\"",
        "context": "CREATE TABLE table_name_35 (height_in_ft VARCHAR, position VARCHAR, school_club_team_country VARCHAR)",
        "question": "Name the height in feet for the guard from north carolina-charlotte"
    },
    {
        "answer": "SELECT height_in_ft FROM table_name_59 WHERE school_club_team_country = \"wyoming\"",
        "context": "CREATE TABLE table_name_59 (height_in_ft VARCHAR, school_club_team_country VARCHAR)",
        "question": "Name the height in ft for the player from wyoming"
    },
    {
        "answer": "SELECT mid_atlantic_south__washington, _dc_ FROM table_16105186_2 WHERE alaska___juneau__ = \"90 g/mi (56 g/km)\" AND california__san_francisco_ = \"110 g/mi (68 g/km)\"",
        "context": "CREATE TABLE table_16105186_2 (mid_atlantic_south__washington VARCHAR, _dc_ VARCHAR, alaska___juneau__ VARCHAR, california__san_francisco_ VARCHAR)",
        "question": "What was the emission rating in Mid-Atlantic South for the vehicle that was rated 90 g/mi (56 g/km) in Alaska and 110 g/mi (68 g/km) in California?"
    },
    {
        "answer": "SELECT mid_atlantic_south__washington, _dc_ FROM table_16105186_2 WHERE midwest__des_moines_ = \"300 g/mi (186 g/km)\"",
        "context": "CREATE TABLE table_16105186_2 (mid_atlantic_south__washington VARCHAR, _dc_ VARCHAR, midwest__des_moines_ VARCHAR)",
        "question": "What was the emission rating in Mid-Atlantic South for the vehicle that was rated 300 g/mi (186 g/km) in the Midwest?"
    },
    {
        "answer": "SELECT california__san_francisco_ FROM table_16105186_2 WHERE alaska___juneau__ = \"80 g/mi (50 g/km)\" AND southeast__atlanta_ = \"250 g/mi (155 g/km)\"",
        "context": "CREATE TABLE table_16105186_2 (california__san_francisco_ VARCHAR, alaska___juneau__ VARCHAR, southeast__atlanta_ VARCHAR)",
        "question": "What was the emission rating in California for the vehicle that was rated 80 g/mi (50 g/km) in Alaska and 250 g/mi (155 g/km) in the Southeast ?"
    },
    {
        "answer": "SELECT year FROM table_name_70 WHERE engine = \"yamaha v12\" AND chassis = \"brabham bt60y\"",
        "context": "CREATE TABLE table_name_70 (year VARCHAR, engine VARCHAR, chassis VARCHAR)",
        "question": "In what year did a car have a yamaha v12 engine and a brabham bt60y chassis"
    },
    {
        "answer": "SELECT simplified_characters FROM table_16162581_1 WHERE wade_giles = \"hsin-y\u00fcan \u2026 i-ma\"",
        "context": "CREATE TABLE table_16162581_1 (simplified_characters VARCHAR, wade_giles VARCHAR)",
        "question": "Name the simplified charaacters being hsin-y\u00fcan \u2026 i-ma"
    },
    {
        "answer": "SELECT COUNT(pinyin) FROM table_16162581_1 WHERE wade_giles = \"hsin-y\u00fcan-i-ma\"",
        "context": "CREATE TABLE table_16162581_1 (pinyin VARCHAR, wade_giles VARCHAR)",
        "question": "Name the total number of pinyin for hsin-y\u00fcan-i-ma"
    },
    {
        "answer": "SELECT state FROM table_name_70 WHERE average < 8.67 AND swimsuit = 8.27 AND evening_gown = 8.78 AND interview = 8.52",
        "context": "CREATE TABLE table_name_70 (state VARCHAR, interview VARCHAR, evening_gown VARCHAR, average VARCHAR, swimsuit VARCHAR)",
        "question": "Which state had an average of less than 8.67, a swimsuit score of 8.27, an evening gown score of 8.78, and an interview number of 8.52?"
    },
    {
        "answer": "SELECT SUM(average) FROM table_name_96 WHERE swimsuit = 8.42 AND evening_gown < 8.71",
        "context": "CREATE TABLE table_name_96 (average INTEGER, swimsuit VARCHAR, evening_gown VARCHAR)",
        "question": "How many averages had a swimsuit number of 8.42 and an evening gown number that was less than 8.71?"
    },
    {
        "answer": "SELECT versus FROM table_name_82 WHERE bowling_figures_wickets_runs__overs_ = \"5-33 (10)\"",
        "context": "CREATE TABLE table_name_82 (versus VARCHAR, bowling_figures_wickets_runs__overs_ VARCHAR)",
        "question": "Who was the opponent during the competition in which the bowling figures were 5-33 (10)?"
    },
    {
        "answer": "SELECT COUNT(no) FROM table_1615980_4 WHERE tournament = \"Volvo Masters Andalucia\"",
        "context": "CREATE TABLE table_1615980_4 (no VARCHAR, tournament VARCHAR)",
        "question": "How many tournament wins were at Volvo Masters Andalucia?"
    },
    {
        "answer": "SELECT bowling_figures_wickets_runs__overs_ FROM table_name_43 WHERE venue = \"port elizabeth\" AND versus = \"australia\"",
        "context": "CREATE TABLE table_name_43 (bowling_figures_wickets_runs__overs_ VARCHAR, venue VARCHAR, versus VARCHAR)",
        "question": "During the competition at Port Elizabeth, where the opponent was Australia, what were the bowling figures?"
    },
    {
        "answer": "SELECT MIN(floors) FROM table_name_33 WHERE rank > 1 AND building = \"the trillium (residential)\"",
        "context": "CREATE TABLE table_name_33 (floors INTEGER, rank VARCHAR, building VARCHAR)",
        "question": "What is the lowest amount of floors after rank 1 in the Trillium (residential) building?"
    },
    {
        "answer": "SELECT SUM(laps) FROM table_name_8 WHERE rider = \"sylvain guintoli\"",
        "context": "CREATE TABLE table_name_8 (laps INTEGER, rider VARCHAR)",
        "question": "What is the sum of Sylvain Guintoli's laps?"
    },
    {
        "answer": "SELECT donor_payment FROM table_16175217_1 WHERE children_per_donor = \"6 children\" AND allowed_recipients = \"no data\"",
        "context": "CREATE TABLE table_16175217_1 (donor_payment VARCHAR, children_per_donor VARCHAR, allowed_recipients VARCHAR)",
        "question": "What is the status of donor payment in the country where there are 6 children per donor and no data on allowed recipients?"
    },
    {
        "answer": "SELECT country FROM table_16175217_1 WHERE children_per_donor = \"8 children\" AND donor_payment = \"no data\"",
        "context": "CREATE TABLE table_16175217_1 (country VARCHAR, children_per_donor VARCHAR, donor_payment VARCHAR)",
        "question": "What is the country where there are 8 children per donor and no data for donor payments?"
    },
    {
        "answer": "SELECT children_per_donor FROM table_16175217_1 WHERE allowed_recipients = \"Married or in cohabitation\"",
        "context": "CREATE TABLE table_16175217_1 (children_per_donor VARCHAR, allowed_recipients VARCHAR)",
        "question": "What are the children per donor in the country where the allowed recipients are married or in cohabitation?"
    },
    {
        "answer": "SELECT missouri_vs FROM table_16201038_4 WHERE at_neutral_site = \"MU, 2-1\"",
        "context": "CREATE TABLE table_16201038_4 (missouri_vs VARCHAR, at_neutral_site VARCHAR)",
        "question": "Against which team does Missouri Tigers have a record of mu, 2-1 at a neutral site?"
    },
    {
        "answer": "SELECT report FROM table_name_25 WHERE date = \"22 september\"",
        "context": "CREATE TABLE table_name_25 (report VARCHAR, date VARCHAR)",
        "question": "What report happened on 22 september?"
    },
    {
        "answer": "SELECT report FROM table_name_33 WHERE winning_driver = \"peter collins\" AND circuit = \"syracuse\"",
        "context": "CREATE TABLE table_name_33 (report VARCHAR, winning_driver VARCHAR, circuit VARCHAR)",
        "question": "Which report has a Winning driver of peter collins, and a Circuit of syracuse?"
    },
    {
        "answer": "SELECT over_gdp__in__percentage_ FROM table_1618358_1 WHERE stamp_duty_reserve_tax = \"3,669\"",
        "context": "CREATE TABLE table_1618358_1 (over_gdp__in__percentage_ VARCHAR, stamp_duty_reserve_tax VARCHAR)",
        "question": "When the stamp duty reserve tax is 3,669 what is the percentage over gdp?"
    },
    {
        "answer": "SELECT date_of_birth__age_ FROM table_name_41 WHERE caps = 11 AND position = \"prop\"",
        "context": "CREATE TABLE table_name_41 (date_of_birth__age_ VARCHAR, caps VARCHAR, position VARCHAR)",
        "question": "What is the date of birth of the player that has 11 caps and plays the prop position?"
    },
    {
        "answer": "SELECT position FROM table_name_47 WHERE club_province = \"newcastle\" AND caps < 24 AND player = \"toby flood\"",
        "context": "CREATE TABLE table_name_47 (position VARCHAR, player VARCHAR, club_province VARCHAR, caps VARCHAR)",
        "question": "What position does Toby Flood, who is from Newcastle and has fewer than 24 caps, play?"
    },
    {
        "answer": "SELECT winningteam FROM table_name_20 WHERE cup_final_attendance = \"8,132\"",
        "context": "CREATE TABLE table_name_20 (winningteam VARCHAR, cup_final_attendance VARCHAR)",
        "question": "What was the winning team with the 8,132 final attendance?"
    },
    {
        "answer": "SELECT opponents_in_the_final FROM table_name_44 WHERE partnering = \"ricardo hocevar\"",
        "context": "CREATE TABLE table_name_44 (opponents_in_the_final VARCHAR, partnering VARCHAR)",
        "question": "Who are the finals opponents for the match with partner Ricardo Hocevar?"
    },
    {
        "answer": "SELECT original_airdate FROM table_name_65 WHERE episode__number = \"29 (7)\"",
        "context": "CREATE TABLE table_name_65 (original_airdate VARCHAR, episode__number VARCHAR)",
        "question": "When did Episode 29 (7) originally air?"
    },
    {
        "answer": "SELECT MAX(_number) FROM table_16227492_1 WHERE opponent = \"New England Blazers\"",
        "context": "CREATE TABLE table_16227492_1 (_number INTEGER, opponent VARCHAR)",
        "question": "Name the most number for new england blazers"
    },
    {
        "answer": "SELECT SUM(opening_day_net_gross) FROM table_name_90 WHERE studio_s_ = \"reliance entertainment\" AND year < 2011",
        "context": "CREATE TABLE table_name_90 (opening_day_net_gross INTEGER, studio_s_ VARCHAR, year VARCHAR)",
        "question": "What is the opening day net gross a Reliance Entertainment movie before 2011 had?"
    },
    {
        "answer": "SELECT pop_density__per_km\u00b2_ FROM table_16278602_1 WHERE english_name = \"Capital Region of Denmark\"",
        "context": "CREATE TABLE table_16278602_1 (pop_density__per_km\u00b2_ VARCHAR, english_name VARCHAR)",
        "question": "What is the population density of the Capital Region of Denmark?"
    },
    {
        "answer": "SELECT swimsuit FROM table_16268026_3 WHERE evening_gown = \"8.774 (6)\"",
        "context": "CREATE TABLE table_16268026_3 (swimsuit VARCHAR, evening_gown VARCHAR)",
        "question": "What is the swimsuit when evening gown is 8.774 (6) ?"
    },
    {
        "answer": "SELECT MIN(population__january_1), _2008_ FROM table_16278602_1 WHERE largest_city = \"Roskilde\"",
        "context": "CREATE TABLE table_16278602_1 (_2008_ VARCHAR, population__january_1 INTEGER, largest_city VARCHAR)",
        "question": "What is the minimum population of the region in which Roskilde is the largest city?"
    },
    {
        "answer": "SELECT year__ceremony_ FROM table_16255245_1 WHERE original_title = \"Spiele Leben\"",
        "context": "CREATE TABLE table_16255245_1 (year__ceremony_ VARCHAR, original_title VARCHAR)",
        "question": "Name the year for spiele leben"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_16255245_1 WHERE original_title = \"Wohin und zur\u00fcck - Welcome in Vienna\"",
        "context": "CREATE TABLE table_16255245_1 (film_title_used_in_nomination VARCHAR, original_title VARCHAR)",
        "question": "Name the film title for wohin und zur\u00fcck - welcome in vienna"
    },
    {
        "answer": "SELECT COUNT(population) FROM table_16278825_1 WHERE towns__villages = 217",
        "context": "CREATE TABLE table_16278825_1 (population VARCHAR, towns__villages VARCHAR)",
        "question": "NJame the total number of population for towns/villages for 217"
    },
    {
        "answer": "SELECT points__percentage FROM table_1628607_5 WHERE foursomes_w_l_h = \"1\u20130\u20130 won w/ P. Creamer 3&2\"",
        "context": "CREATE TABLE table_1628607_5 (points__percentage VARCHAR, foursomes_w_l_h VARCHAR)",
        "question": "When the foursome was w-l-h is 1\u20130\u20130 won w/ p. creamer 3&2, what was the points %?"
    },
    {
        "answer": "SELECT COUNT(grid) FROM table_name_20 WHERE constructor = \"talbot-lago - talbot\" AND laps < 83 AND driver = \"johnny claes\"",
        "context": "CREATE TABLE table_name_20 (grid VARCHAR, driver VARCHAR, constructor VARCHAR, laps VARCHAR)",
        "question": "How many grids have a Constructor of talbot-lago - talbot, a Laps under 83, and a driver of johnny claes?"
    },
    {
        "answer": "SELECT champion FROM table_1628792_1 WHERE tournament_location = \"London Hunt and country Club ( London , ON )\"",
        "context": "CREATE TABLE table_1628792_1 (champion VARCHAR, tournament_location VARCHAR)",
        "question": "Name the champion for  london hunt and country club ( london , on )"
    },
    {
        "answer": "SELECT winning_driver FROM table_name_21 WHERE fastest_lap = \"giuseppe farina\" AND race = \"british grand prix\"",
        "context": "CREATE TABLE table_name_21 (winning_driver VARCHAR, fastest_lap VARCHAR, race VARCHAR)",
        "question": "Who was the winning driver of the British Grand Prix where Giuseppe Farina had the fastest lap?"
    },
    {
        "answer": "SELECT swimsuit FROM table_16323766_3 WHERE semifinal_average = \"8.759 (5)\"",
        "context": "CREATE TABLE table_16323766_3 (swimsuit VARCHAR, semifinal_average VARCHAR)",
        "question": "What was the swimsuit score for the one who had a semifinal average of 8.759 (5)?"
    },
    {
        "answer": "SELECT evening_gown FROM table_16323766_3 WHERE interview = \"7.600 (9)\"",
        "context": "CREATE TABLE table_16323766_3 (evening_gown VARCHAR, interview VARCHAR)",
        "question": "What was the evening gown score for the woman who scored 7.600 (9) in her interview?"
    },
    {
        "answer": "SELECT laps FROM table_name_40 WHERE rank > 13 AND time_retired = \"accident\" AND qual < 136.98",
        "context": "CREATE TABLE table_name_40 (laps VARCHAR, qual VARCHAR, rank VARCHAR, time_retired VARCHAR)",
        "question": "What laps have a rank larger than 13 and the Time/Retired is accident, and a Qual smaller than 136.98?"
    },
    {
        "answer": "SELECT COUNT(dates__mdy_) FROM table_16331025_2 WHERE position = 9 AND sellout___percentage_ = \"81%\"",
        "context": "CREATE TABLE table_16331025_2 (dates__mdy_ VARCHAR, position VARCHAR, sellout___percentage_ VARCHAR)",
        "question": "Who many dates are in position 9 and the sellout is 81%?"
    },
    {
        "answer": "SELECT driver FROM table_name_43 WHERE constructor = \"ferrari\" AND time_retired = \"+1:06.683\"",
        "context": "CREATE TABLE table_name_43 (driver VARCHAR, constructor VARCHAR, time_retired VARCHAR)",
        "question": "who is the driver for the car constructed by ferrari with a time/retired of +1:06.683?"
    },
    {
        "answer": "SELECT past_habitual FROM table_16337329_5 WHERE probable_future = \"\u0917\u0930\u094d\u091b\u0938\u094d garchas 'you (will) do'\"",
        "context": "CREATE TABLE table_16337329_5 (past_habitual VARCHAR, probable_future VARCHAR)",
        "question": "Name the past habitual for \u0917\u0930\u094d\u091b\u0938\u094d garchas 'you (will) do'"
    },
    {
        "answer": "SELECT COUNT(winnings) FROM table_1637041_2 WHERE avg_finish = \"29.2\"",
        "context": "CREATE TABLE table_1637041_2 (winnings VARCHAR, avg_finish VARCHAR)",
        "question": "How many years did he have an average finish of 29.2?"
    },
    {
        "answer": "SELECT COUNT(capacity__mw_) FROM table_name_17 WHERE notes = \"under construction\"",
        "context": "CREATE TABLE table_name_17 (capacity__mw_ VARCHAR, notes VARCHAR)",
        "question": "What is the total capacity (MW) of the farm that is noted as being under construction?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_23 WHERE venue = \"arden street oval\"",
        "context": "CREATE TABLE table_name_23 (home_team VARCHAR, venue VARCHAR)",
        "question": "In the game held at Arden Street Oval, what was the score of the home team?"
    },
    {
        "answer": "SELECT kalamazoo__azo_ FROM table_1637981_7 WHERE saginaw__mbs_ = \"$481.39\"",
        "context": "CREATE TABLE table_1637981_7 (kalamazoo__azo_ VARCHAR, saginaw__mbs_ VARCHAR)",
        "question": "What is the fare to Kalamazoo during the time frame when Saginaw's was $481.39?"
    },
    {
        "answer": "SELECT COUNT(nickname) FROM table_16383772_1 WHERE school = \"St. Bonaventure University\"",
        "context": "CREATE TABLE table_16383772_1 (nickname VARCHAR, school VARCHAR)",
        "question": "Name the total number of nicknames for st. bonaventure university"
    },
    {
        "answer": "SELECT written_by FROM table_16384596_4 WHERE broadcast_order = \"S02 E07\"",
        "context": "CREATE TABLE table_16384596_4 (written_by VARCHAR, broadcast_order VARCHAR)",
        "question": "Who wrote the episode for s02 e07?"
    },
    {
        "answer": "SELECT joined_tschl FROM table_16384648_2 WHERE institution = \"University of Pittsburgh\"",
        "context": "CREATE TABLE table_16384648_2 (joined_tschl VARCHAR, institution VARCHAR)",
        "question": "What year did the university of Pittsburgh school join the hockey league? "
    },
    {
        "answer": "SELECT last_final_lost FROM table_name_84 WHERE wins = \"3\" AND last_win = \"2001\"",
        "context": "CREATE TABLE table_name_84 (last_final_lost VARCHAR, wins VARCHAR, last_win VARCHAR)",
        "question": "When was the final loss of the club last won in 2001 and has a total of 3 wins?"
    },
    {
        "answer": "SELECT date FROM table_16388439_3 WHERE home_team = \"Adelaide\" AND ground = \"Westpac Stadium\"",
        "context": "CREATE TABLE table_16388439_3 (date VARCHAR, home_team VARCHAR, ground VARCHAR)",
        "question": "Name the date for adelaide for westpac stadium"
    },
    {
        "answer": "SELECT 2 AS nd_leg FROM table_name_61 WHERE team__number1 = \"alemannia aachen\"",
        "context": "CREATE TABLE table_name_61 (team__number1 VARCHAR)",
        "question": "Tell me the 2nd leg for alemannia aachen"
    },
    {
        "answer": "SELECT particle FROM table_name_61 WHERE rest_mass_mev___c_2 = \"1192.642(24)\"",
        "context": "CREATE TABLE table_name_61 (particle VARCHAR, rest_mass_mev___c_2 VARCHAR)",
        "question": "Which Particle has a Rest mass MeV/c 2 of 1192.642(24)?"
    },
    {
        "answer": "SELECT particle FROM table_name_41 WHERE isospin_i = \"1\" AND commonly_decays_to = \"p + + \u03c0 0 or n 0 + \u03c0 +\"",
        "context": "CREATE TABLE table_name_41 (particle VARCHAR, isospin_i VARCHAR, commonly_decays_to VARCHAR)",
        "question": "Which Particle has an Isospin I of 1 and Commonly decays to p + + \u03c0 0 or n 0 + \u03c0 +?"
    },
    {
        "answer": "SELECT evening_gown FROM table_16390001_2 WHERE average = \"9.266\"",
        "context": "CREATE TABLE table_16390001_2 (evening_gown VARCHAR, average VARCHAR)",
        "question": "What are the evening gown scores of contestants whose average is 9.266?"
    },
    {
        "answer": "SELECT missing FROM table_name_89 WHERE killed = \"0 off 0 men\" AND wounded = \"0 off 0 men\" AND unit = \"royal waggon train\"",
        "context": "CREATE TABLE table_name_89 (missing VARCHAR, unit VARCHAR, killed VARCHAR, wounded VARCHAR)",
        "question": "How many of the Royal Waggon Train Unit were Missing while having a Killed of 0 off 0 men and a Wounded of 0 off 0 men?"
    },
    {
        "answer": "SELECT socket FROM table_16400024_1 WHERE sspec_number = \"SL3F7(kC0)SL3FJ(kC0)\"",
        "context": "CREATE TABLE table_16400024_1 (socket VARCHAR, sspec_number VARCHAR)",
        "question": "What is the socket location for sSPEC number sl3f7(kc0)sl3fj(kc0)?"
    },
    {
        "answer": "SELECT dimensions__mm_ FROM table_16409745_1 WHERE product = \"Plustek MobileOffice D28 Corporate\"",
        "context": "CREATE TABLE table_16409745_1 (dimensions__mm_ VARCHAR, product VARCHAR)",
        "question": "What are the mm dimensions of the Plustek Mobileoffice D28 Corporate?"
    },
    {
        "answer": "SELECT dimensions__mm_ FROM table_16409745_1 WHERE product = \"Fujitsu fi-6130 A4 Series Scanner\"",
        "context": "CREATE TABLE table_16409745_1 (dimensions__mm_ VARCHAR, product VARCHAR)",
        "question": "What are the mm dimensions for the Fujitsu fi-6130 a4 Series Scanner?"
    },
    {
        "answer": "SELECT dpi FROM table_16409745_1 WHERE max_page_size = \"216mm x 355mm\"",
        "context": "CREATE TABLE table_16409745_1 (dpi VARCHAR, max_page_size VARCHAR)",
        "question": "What is the dpi for the scanner with a max page size of 216mm x 355mm?"
    },
    {
        "answer": "SELECT result FROM table_name_26 WHERE date = \"8 october 1961\"",
        "context": "CREATE TABLE table_name_26 (result VARCHAR, date VARCHAR)",
        "question": "What was the result on 8 October 1961?"
    },
    {
        "answer": "SELECT score FROM table_name_85 WHERE surface = \"hard\" AND opponent_in_the_final = \"peter gojowczyk\"",
        "context": "CREATE TABLE table_name_85 (score VARCHAR, surface VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "What was the score of the match that was a played on a hard surface against Peter Gojowczyk?"
    },
    {
        "answer": "SELECT location FROM table_16432543_1 WHERE nickname = \"Mountaineers\"",
        "context": "CREATE TABLE table_16432543_1 (location VARCHAR, nickname VARCHAR)",
        "question": "Location of the school with the nickname Mountaineers"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_name_59 WHERE record = \"43-34\"",
        "context": "CREATE TABLE table_name_59 (attendance VARCHAR, record VARCHAR)",
        "question": "How many attended the game with a record of 43-34?"
    },
    {
        "answer": "SELECT position FROM table_name_35 WHERE player = \"patrick macdonald\"",
        "context": "CREATE TABLE table_name_35 (position VARCHAR, player VARCHAR)",
        "question": "Which Position has a Player of patrick macdonald?"
    },
    {
        "answer": "SELECT sixth_place FROM table_name_34 WHERE series = 7",
        "context": "CREATE TABLE table_name_34 (sixth_place VARCHAR, series VARCHAR)",
        "question": "Who was in sixth place in series 7?"
    },
    {
        "answer": "SELECT elector FROM table_name_5 WHERE nationality = \"roman\" AND elevator = \"urban iv\" AND elevated = \"1261, december 17\"",
        "context": "CREATE TABLE table_name_5 (elector VARCHAR, elevated VARCHAR, nationality VARCHAR, elevator VARCHAR)",
        "question": "What is the Elector with a Nationality with roman, and an Elevator of urban iv, and an Elevated with 1261, december 17?"
    },
    {
        "answer": "SELECT season FROM table_16446652_1 WHERE president = \"Jonny Leadbeater\"",
        "context": "CREATE TABLE table_16446652_1 (season VARCHAR, president VARCHAR)",
        "question": "When was Jonny Leadbeater President?"
    },
    {
        "answer": "SELECT l2_cache FROM table_name_91 WHERE model_number = \"pentium dual-core t3400\"",
        "context": "CREATE TABLE table_name_91 (l2_cache VARCHAR, model_number VARCHAR)",
        "question": "What is the L2 cache of the microprocessor with model number pentium dual-core t3400?"
    },
    {
        "answer": "SELECT release_price___usd__ FROM table_name_32 WHERE model_number = \"pentium dual-core t2330\"",
        "context": "CREATE TABLE table_name_32 (release_price___usd__ VARCHAR, model_number VARCHAR)",
        "question": "What is the release price (USD) of the microprocessor with a model number pentium dual-core t2330?"
    },
    {
        "answer": "SELECT COUNT(province) FROM table_16489766_2 WHERE chinese = \"\u91cd\u5e86\"",
        "context": "CREATE TABLE table_16489766_2 (province VARCHAR, chinese VARCHAR)",
        "question": "What province has the Chinese translation \u91cd\u5e86?"
    },
    {
        "answer": "SELECT position FROM table_16494599_1 WHERE years_for_grizzlies = \"1995-1996\"",
        "context": "CREATE TABLE table_16494599_1 (position VARCHAR, years_for_grizzlies VARCHAR)",
        "question": "What position is the player who was on the Grizzlies from 1995-1996?"
    },
    {
        "answer": "SELECT COUNT(no) FROM table_16494599_1 WHERE years_for_grizzlies = \"2000-2002\"",
        "context": "CREATE TABLE table_16494599_1 (no VARCHAR, years_for_grizzlies VARCHAR)",
        "question": "How may players played for the Grizzlies from 2000-2002?"
    },
    {
        "answer": "SELECT COUNT(Appointed) AS archbishop FROM table_1656555_1 WHERE ordained_priest = \"December 20, 1959\"",
        "context": "CREATE TABLE table_1656555_1 (Appointed VARCHAR, ordained_priest VARCHAR)",
        "question": "How many appointed archbishops were ordained as priests on December 20, 1959"
    },
    {
        "answer": "SELECT champion FROM table_name_47 WHERE location = \"morrisville, nc\" AND semi_finalist__number2 = \"clemson\"",
        "context": "CREATE TABLE table_name_47 (champion VARCHAR, location VARCHAR, semi_finalist__number2 VARCHAR)",
        "question": "Which champion was from the location of Morrisville, NC, and whose SemiFinalist #2 of Clemson?"
    },
    {
        "answer": "SELECT champion FROM table_name_36 WHERE year = 2005 AND semi_finalist__number1 = \"western carolina\"",
        "context": "CREATE TABLE table_name_36 (champion VARCHAR, year VARCHAR, semi_finalist__number1 VARCHAR)",
        "question": "Who was champion in 2005 where the semi-finalist was #1 in western Carolina?"
    },
    {
        "answer": "SELECT runner_up FROM table_name_66 WHERE year < 2006 AND champion = \"elon\"",
        "context": "CREATE TABLE table_name_66 (runner_up VARCHAR, year VARCHAR, champion VARCHAR)",
        "question": "Which runner-up placed in a year prior to 2006 and whose Champion was Elon?"
    },
    {
        "answer": "SELECT power_output FROM table_name_88 WHERE wheel_arrangement = \"b-b\" AND build_date = \"1952\"",
        "context": "CREATE TABLE table_name_88 (power_output VARCHAR, wheel_arrangement VARCHAR, build_date VARCHAR)",
        "question": "What is the power of b-b wheel arrangement, built in 1952?"
    },
    {
        "answer": "SELECT AVG(debut) FROM table_name_33 WHERE player = \"radoslava topalova\" AND years_played < 2",
        "context": "CREATE TABLE table_name_33 (debut INTEGER, player VARCHAR, years_played VARCHAR)",
        "question": "what is the debut when the play er is radoslava topalova and the years played is less than 2?"
    },
    {
        "answer": "SELECT average_attendance FROM table_name_46 WHERE season = \"2011\" AND games < 519 AND _number_of_teams > 14 AND sport = \"association football\"",
        "context": "CREATE TABLE table_name_46 (average_attendance VARCHAR, sport VARCHAR, _number_of_teams VARCHAR, season VARCHAR, games VARCHAR)",
        "question": "What was the average attendance of the 2011 season that had games smaller than 519 with several teams bigger than 14 that were also part of the sport of association football?"
    },
    {
        "answer": "SELECT COUNT(games) FROM table_name_38 WHERE goals_against > 288 AND lost < 34",
        "context": "CREATE TABLE table_name_38 (games VARCHAR, goals_against VARCHAR, lost VARCHAR)",
        "question": "How many games have more than 288 goals and less than 34 losses?"
    },
    {
        "answer": "SELECT MAX(population__july_2012_) FROM table_166346_1 WHERE area__km\u00b2_ = 2149690",
        "context": "CREATE TABLE table_166346_1 (population__july_2012_ INTEGER, area__km\u00b2_ VARCHAR)",
        "question": "What is the highest poplulation in July 2012 in the country with an area of 2149690 square kilometers?"
    },
    {
        "answer": "SELECT brand_name FROM table_1661124_1 WHERE antibody = \"Brentuximab vedotin\"",
        "context": "CREATE TABLE table_1661124_1 (brand_name VARCHAR, antibody VARCHAR)",
        "question": "What is the brand name for the antibody Brentuximab Vedotin?"
    },
    {
        "answer": "SELECT against FROM table_name_94 WHERE opponents = \"m\u0103d\u0103lina gojnea monica niculescu\"",
        "context": "CREATE TABLE table_name_94 (against VARCHAR, opponents VARCHAR)",
        "question": "Who was against the opponents, m\u0103d\u0103lina gojnea monica niculescu?"
    },
    {
        "answer": "SELECT league FROM table_16636344_1 WHERE regular_season = \"2nd, Mid Atlantic\"",
        "context": "CREATE TABLE table_16636344_1 (league VARCHAR, regular_season VARCHAR)",
        "question": "What is the league name for the regular season status of 2nd, mid atlantic?"
    },
    {
        "answer": "SELECT fastest_lap FROM table_16670746_2 WHERE winning_team = \"TOM'S Racing\"",
        "context": "CREATE TABLE table_16670746_2 (fastest_lap VARCHAR, winning_team VARCHAR)",
        "question": "Who had the fastest lap when the winning team was Tom's Racing?"
    },
    {
        "answer": "SELECT venue FROM table_1670921_1 WHERE batting_partners = \"Mahela Jayawardene and Prasanna Jayawardene\"",
        "context": "CREATE TABLE table_1670921_1 (venue VARCHAR, batting_partners VARCHAR)",
        "question": "What is the venue for batting partners Mahela Jayawardene and Prasanna Jayawardene"
    },
    {
        "answer": "SELECT batting_partners FROM table_1670921_2 WHERE venue = \"Sydney\"",
        "context": "CREATE TABLE table_1670921_2 (batting_partners VARCHAR, venue VARCHAR)",
        "question": "What batting partners played in sydney?"
    },
    {
        "answer": "SELECT name FROM table_name_63 WHERE west_or_south_terminus = \"ne 112 west of blue springs\"",
        "context": "CREATE TABLE table_name_63 (name VARCHAR, west_or_south_terminus VARCHAR)",
        "question": "what is the name when the west or south terminus is ne 112 west of blue springs?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_38 WHERE constructor = \"benetton - renault\" AND driver = \"johnny herbert\"",
        "context": "CREATE TABLE table_name_38 (time_retired VARCHAR, constructor VARCHAR, driver VARCHAR)",
        "question": "What is the Time/Retired value for Driver Johnny Herbert with Constructor Benetton - Renault"
    },
    {
        "answer": "SELECT pts FROM table_16710541_2 WHERE team = \"Kiefer-Bos-Castrol Honda\"",
        "context": "CREATE TABLE table_16710541_2 (pts VARCHAR, team VARCHAR)",
        "question": "How many points did kiefer-bos-castrol honda have?"
    },
    {
        "answer": "SELECT AVG(games) FROM table_name_28 WHERE goals < 1 AND player = \"keith j. miller\" AND debut_year > 1974",
        "context": "CREATE TABLE table_name_28 (games INTEGER, debut_year VARCHAR, goals VARCHAR, player VARCHAR)",
        "question": "How many games for keith j. miller, who debuted after 1974 with less than 1 goal?"
    },
    {
        "answer": "SELECT mens_open FROM table_16724844_1 WHERE womens_40 = \"Sydney Scorpions defeated Hunter Hornets\"",
        "context": "CREATE TABLE table_16724844_1 (mens_open VARCHAR, womens_40 VARCHAR)",
        "question": "What were the results of the mens open when the  womens 40 was Sydney Scorpions defeated Hunter Hornets?"
    },
    {
        "answer": "SELECT MAX(seats_2006) FROM table_name_5 WHERE parties_and_voter_communities = \"b\u00fcrger f\u00fcr gro\u00df-rohrheim\" AND _percentage_2006 < 21.3",
        "context": "CREATE TABLE table_name_5 (seats_2006 INTEGER, parties_and_voter_communities VARCHAR, _percentage_2006 VARCHAR)",
        "question": "What is the highest number of Seats 2006 held by the communities of B\u00fcrger F\u00fcr Gro\u00df-Rohrheim Party/Voter Community, with a %2006 less than 21.3?"
    },
    {
        "answer": "SELECT race_name FROM table_name_17 WHERE constructor = \"ferrari\" AND date = \"25 april\"",
        "context": "CREATE TABLE table_name_17 (race_name VARCHAR, constructor VARCHAR, date VARCHAR)",
        "question": "Tell me the race name for ferrari on 25 april"
    },
    {
        "answer": "SELECT gpu_frequency FROM table_16729930_18 WHERE tdp = \"3.6 W\" AND part_number_s_ = \"CY80632007221AB\"",
        "context": "CREATE TABLE table_16729930_18 (gpu_frequency VARCHAR, tdp VARCHAR, part_number_s_ VARCHAR)",
        "question": "For a processor with part number cy80632007221ab and TDP of 3.6 W, What are the available GPU  frequencies?"
    },
    {
        "answer": "SELECT date FROM table_name_86 WHERE outcome = \"runner-up\" AND opponent_in_the_final = \"gilles simon\"",
        "context": "CREATE TABLE table_name_86 (date VARCHAR, outcome VARCHAR, opponent_in_the_final VARCHAR)",
        "question": "Which date has an Outcome of runner-up, and an Opponent in the final of gilles simon?"
    },
    {
        "answer": "SELECT opponent_in_the_final FROM table_name_33 WHERE date = \"28 july 2013\"",
        "context": "CREATE TABLE table_name_33 (opponent_in_the_final VARCHAR, date VARCHAR)",
        "question": "Who was the opponent on the 28 july 2013 final?"
    },
    {
        "answer": "SELECT COUNT(location) FROM table_16734640_1 WHERE institution = \"Georgia Perimeter College\"",
        "context": "CREATE TABLE table_16734640_1 (location VARCHAR, institution VARCHAR)",
        "question": "Name the number location of georgia perimeter college"
    },
    {
        "answer": "SELECT location FROM table_16734640_1 WHERE institution = \"Abraham Baldwin Agricultural College\"",
        "context": "CREATE TABLE table_16734640_1 (location VARCHAR, institution VARCHAR)",
        "question": "Name the location for abraham baldwin agricultural college"
    },
    {
        "answer": "SELECT COUNT(republican) AS :_jeff_sessions FROM table_16751596_12 WHERE dates_administered = \"November 14, 2007\"",
        "context": "CREATE TABLE table_16751596_12 (republican VARCHAR, dates_administered VARCHAR)",
        "question": "On November 14, 2007, how many different Republican: Jeff Sessions are there?"
    },
    {
        "answer": "SELECT democrat AS :_vivian_davis_figures FROM table_16751596_12 WHERE dates_administered = \"November 14, 2007\"",
        "context": "CREATE TABLE table_16751596_12 (democrat VARCHAR, dates_administered VARCHAR)",
        "question": "On November 14, 2007, what are the Democrat: Vivian Davis Figures percentages? "
    },
    {
        "answer": "SELECT democrat AS :_vivian_davis_figures FROM table_16751596_12 WHERE dates_administered = \"July 31, 2008\"",
        "context": "CREATE TABLE table_16751596_12 (democrat VARCHAR, dates_administered VARCHAR)",
        "question": "On July 31, 2008, what are the Democrat: Vivian Davis Figures percentages?"
    },
    {
        "answer": "SELECT democrat AS :_mark_begich FROM table_16751596_13 WHERE dates_administered = \"October 6, 2008\"",
        "context": "CREATE TABLE table_16751596_13 (democrat VARCHAR, dates_administered VARCHAR)",
        "question": "What was Mark Begich polling on October 6, 2008?"
    },
    {
        "answer": "SELECT name FROM table_name_78 WHERE city = \"frankfurt\" AND years_as_tallest = \"1990\u20131997\"",
        "context": "CREATE TABLE table_name_78 (name VARCHAR, city VARCHAR, years_as_tallest VARCHAR)",
        "question": "What is the name of the building that was the tallest from 1990\u20131997 in Frankfurt?"
    },
    {
        "answer": "SELECT MIN(height__ft_) FROM table_name_24 WHERE city = \"frankfurt\" AND height__m_ = 257 AND floors < 55",
        "context": "CREATE TABLE table_name_24 (height__ft_ INTEGER, floors VARCHAR, city VARCHAR, height__m_ VARCHAR)",
        "question": "What is the smallest height (ft) of a building in Frankfurt with a height (m) of 257 and less than 55 floors?"
    },
    {
        "answer": "SELECT circuit FROM table_name_53 WHERE fastest_lap = \"john surtees\" AND winning_driver = \"john surtees\"",
        "context": "CREATE TABLE table_name_53 (circuit VARCHAR, fastest_lap VARCHAR, winning_driver VARCHAR)",
        "question": "Name the circuit when the fastest lap was john surtees and the winning driver was john surtees."
    },
    {
        "answer": "SELECT pole_position FROM table_name_35 WHERE date = \"8 september\"",
        "context": "CREATE TABLE table_name_35 (pole_position VARCHAR, date VARCHAR)",
        "question": "Name the pole position for 8 september"
    },
    {
        "answer": "SELECT name AS origin FROM table_16799784_14 WHERE diameter__km_ = \"220.0\"",
        "context": "CREATE TABLE table_16799784_14 (name VARCHAR, diameter__km_ VARCHAR)",
        "question": "What is the name origin with a diameter of 220.0 kilometers?"
    },
    {
        "answer": "SELECT date FROM table_name_14 WHERE fastest_lap = \"jody scheckter\" AND race = \"french grand prix\"",
        "context": "CREATE TABLE table_name_14 (date VARCHAR, fastest_lap VARCHAR, race VARCHAR)",
        "question": "Tell me the date for jody scheckter being the fastest lap at the french grand prix"
    },
    {
        "answer": "SELECT name AS origin FROM table_16799784_2 WHERE longitude = \"54.0E\"",
        "context": "CREATE TABLE table_16799784_2 (name VARCHAR, longitude VARCHAR)",
        "question": "Name the name origin for 54.0e"
    },
    {
        "answer": "SELECT COUNT(year_named) FROM table_16799784_4 WHERE name = \"Otafuku Tholi\"",
        "context": "CREATE TABLE table_16799784_4 (year_named VARCHAR, name VARCHAR)",
        "question": "How many schools are named otafuku tholi?"
    },
    {
        "answer": "SELECT player FROM table_name_97 WHERE first_team_appearances > 1 AND first_team_goals = 32",
        "context": "CREATE TABLE table_name_97 (player VARCHAR, first_team_appearances VARCHAR, first_team_goals VARCHAR)",
        "question": "What player has over 1 first apperance and over 32 first team goals?"
    },
    {
        "answer": "SELECT COUNT(district) FROM table_name_40 WHERE place_of_birth = \"baltimore city\" AND delegate = \"cheryl glenn\"",
        "context": "CREATE TABLE table_name_40 (district VARCHAR, place_of_birth VARCHAR, delegate VARCHAR)",
        "question": "How many districts in Baltimore City does Cheryl Glenn dictate?"
    },
    {
        "answer": "SELECT place_of_birth FROM table_name_31 WHERE took_office > 1982 AND district < 43 AND committee = \"health and government operations\"",
        "context": "CREATE TABLE table_name_31 (place_of_birth VARCHAR, committee VARCHAR, took_office VARCHAR, district VARCHAR)",
        "question": "Where was the place of birth for the delegate who took office after 1982, delegates a district smaller than 43 and belongs to a Health and Government operations committee?"
    },
    {
        "answer": "SELECT MAX(placings) FROM table_name_82 WHERE name = \"marie mcneil / robert mccall\" AND points < 168.58",
        "context": "CREATE TABLE table_name_82 (placings INTEGER, name VARCHAR, points VARCHAR)",
        "question": "What is the highest placing for  marie mcneil / robert mccall, with less than 168.58?"
    },
    {
        "answer": "SELECT MIN(attendance) FROM table_name_38 WHERE home = \"phoenix\" AND record = \"1\u20130\u20130\"",
        "context": "CREATE TABLE table_name_38 (attendance INTEGER, home VARCHAR, record VARCHAR)",
        "question": "What is the low attendance was based in phoenix with a Record of 1\u20130\u20130?"
    },
    {
        "answer": "SELECT score FROM table_name_88 WHERE home = \"phoenix\" AND record = \"3\u20136\u20130\"",
        "context": "CREATE TABLE table_name_88 (score VARCHAR, home VARCHAR, record VARCHAR)",
        "question": "What was the score did phoenix have with a Record of 3\u20136\u20130 at home?"
    },
    {
        "answer": "SELECT MAX(sp) + fs FROM table_name_27 WHERE points > 164.56 AND rank > 1 AND name = \"mitsuru matsumura\"",
        "context": "CREATE TABLE table_name_27 (fs VARCHAR, sp INTEGER, name VARCHAR, points VARCHAR, rank VARCHAR)",
        "question": "What is the largest value for SP+FS with more than 164.56 points for Mitsuru Matsumura in a Rank greater than 1?"
    },
    {
        "answer": "SELECT phonetic_realisation FROM table_name_12 WHERE phonemic_value = \"/v/\" AND without_niqqud = \"as initial letter: \u05d5\"",
        "context": "CREATE TABLE table_name_12 (phonetic_realisation VARCHAR, phonemic_value VARCHAR, without_niqqud VARCHAR)",
        "question": "What is the phonetic realisation if the phonemic value is /v/ and the without niqqud is as initial letter: \u05d5?"
    },
    {
        "answer": "SELECT named AS after FROM table_name_97 WHERE diameter__km_ < 19.2 AND latitude > -37.5 AND longitude < 67.3",
        "context": "CREATE TABLE table_name_97 (named VARCHAR, longitude VARCHAR, diameter__km_ VARCHAR, latitude VARCHAR)",
        "question": "Tell me the named after for diameter less than 19.2 and latitude more than -37.5 with longitude less than 67.3"
    },
    {
        "answer": "SELECT directed_by FROM table_name_10 WHERE original_airdate = \"february 25, 2001\"",
        "context": "CREATE TABLE table_name_10 (directed_by VARCHAR, original_airdate VARCHAR)",
        "question": "Who directed the episode that originally aired on February 25, 2001?"
    },
    {
        "answer": "SELECT year FROM table_name_47 WHERE english_title = \"the ocean\"",
        "context": "CREATE TABLE table_name_47 (year VARCHAR, english_title VARCHAR)",
        "question": "What is the year for the ocean?"
    },
    {
        "answer": "SELECT original_title FROM table_name_53 WHERE year < 1977 AND author = \"lagercrantz olof lagercrantz\"",
        "context": "CREATE TABLE table_name_53 (original_title VARCHAR, year VARCHAR, author VARCHAR)",
        "question": "Name the original title for years before 1977 and author of lagercrantz olof lagercrantz"
    },
    {
        "answer": "SELECT COUNT(nightly_rank) FROM table_17004367_3 WHERE episode_number_production_number = \"06 1-06\"",
        "context": "CREATE TABLE table_17004367_3 (nightly_rank VARCHAR, episode_number_production_number VARCHAR)",
        "question": "what is the nightly rank where the episode number production number is 06 1-06?"
    },
    {
        "answer": "SELECT SUM(release_date) FROM table_name_32 WHERE media = \"cd\" AND country = \"uk\" AND music_label = \"eg records\"",
        "context": "CREATE TABLE table_name_32 (release_date INTEGER, music_label VARCHAR, media VARCHAR, country VARCHAR)",
        "question": "What is the release date of the CD by EG Records in the UK?"
    },
    {
        "answer": "SELECT pixels FROM table_1701371_2 WHERE hardware_colours = 8",
        "context": "CREATE TABLE table_1701371_2 (pixels VARCHAR, hardware_colours VARCHAR)",
        "question": "How many pixels would be found in a hardware colour of 8?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_name_60 WHERE wins < 21 AND club = \"palam\u00f3s cf\" AND goals_for < 40",
        "context": "CREATE TABLE table_name_60 (points VARCHAR, goals_for VARCHAR, wins VARCHAR, club VARCHAR)",
        "question": "What is the number of points of palam\u00f3s cf, which has less than 21 wins and less than 40 goals?"
    },
    {
        "answer": "SELECT high_rebounds FROM table_17058226_5 WHERE high_points = \"Kevin Love (20)\"",
        "context": "CREATE TABLE table_17058226_5 (high_rebounds VARCHAR, high_points VARCHAR)",
        "question": "Who had all the high rebounds when kevin love (20) scored the highest points?"
    },
    {
        "answer": "SELECT AVG(points) FROM table_name_76 WHERE best_time = \"01:46.367\"",
        "context": "CREATE TABLE table_name_76 (points INTEGER, best_time VARCHAR)",
        "question": "How many points associated with a Best time of 01:46.367?"
    },
    {
        "answer": "SELECT COUNT(reg_gp) FROM table_name_44 WHERE rd__number = 7 AND player = \"ilya krikunov\" AND pick__number > 223",
        "context": "CREATE TABLE table_name_44 (reg_gp VARCHAR, pick__number VARCHAR, rd__number VARCHAR, player VARCHAR)",
        "question": "What is the total reg gp of Ilya Krikunov, who has a round of 7 and a pick number larger than 223?"
    },
    {
        "answer": "SELECT january_15_16 FROM table_1708610_3 WHERE march_27_29 = \"March 29, 2006\"",
        "context": "CREATE TABLE table_1708610_3 (january_15_16 VARCHAR, march_27_29 VARCHAR)",
        "question": "Name the january 15-16 where march 27-29 where march 29, 2006"
    },
    {
        "answer": "SELECT record FROM table_17103729_8 WHERE location_attendance = \"Palace of Auburn Hills 15,210\"",
        "context": "CREATE TABLE table_17103729_8 (record VARCHAR, location_attendance VARCHAR)",
        "question": "Name the record for attendance location of palace of auburn hills 15,210"
    },
    {
        "answer": "SELECT owner_s_ FROM table_name_30 WHERE date = 1953 AND description = \"mark 1 ck\"",
        "context": "CREATE TABLE table_name_30 (owner_s_ VARCHAR, date VARCHAR, description VARCHAR)",
        "question": "Which owner has a description of Mark 1 CK and is dated 1953?"
    },
    {
        "answer": "SELECT local_investment__us$_ FROM table_17118006_2 WHERE bid_pronar_investment__us$_ = \"912,185\"",
        "context": "CREATE TABLE table_17118006_2 (local_investment__us$_ VARCHAR, bid_pronar_investment__us$_ VARCHAR)",
        "question": "What was the local investment (in $) in the projects of the department with $912,185 BID/PRONAR investment?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_87 WHERE result = \"nominated\" AND category = \"favorite male replacement\" AND nominee = \"aaron tveit\"",
        "context": "CREATE TABLE table_name_87 (year INTEGER, nominee VARCHAR, result VARCHAR, category VARCHAR)",
        "question": "What year was Aaron Tveit nominated in the Favorite Male Replacement category?"
    },
    {
        "answer": "SELECT rounds FROM table_name_72 WHERE entrant = \"automobiles talbot-darracq\" AND driver = \"pierre levegh\"",
        "context": "CREATE TABLE table_name_72 (rounds VARCHAR, entrant VARCHAR, driver VARCHAR)",
        "question": "Which of the Rounds has an Entrant of automobiles Talbot-Darracq, and Pierre Levegh as the driver?"
    },
    {
        "answer": "SELECT venue FROM table_17120964_8 WHERE man_of_the_match = \"Vaclav Zavoral\"",
        "context": "CREATE TABLE table_17120964_8 (venue VARCHAR, man_of_the_match VARCHAR)",
        "question": "What is the venue of the game with Man of the Match Vaclav Zavoral?"
    },
    {
        "answer": "SELECT date FROM table_name_37 WHERE location = \"hermanos rodr\u00edguez\"",
        "context": "CREATE TABLE table_name_37 (date VARCHAR, location VARCHAR)",
        "question": "Which date was hermanos rodr\u00edguez the location?"
    },
    {
        "answer": "SELECT result FROM table_17120964_5 WHERE man_of_the_match = \"Lukas Smital\" AND venue = \"Home\"",
        "context": "CREATE TABLE table_17120964_5 (result VARCHAR, man_of_the_match VARCHAR, venue VARCHAR)",
        "question": "Name the result for lukas smital and home"
    },
    {
        "answer": "SELECT venue FROM table_17120964_6 WHERE man_of_the_match = \"Alex Mettam/Mark Williams\"",
        "context": "CREATE TABLE table_17120964_6 (venue VARCHAR, man_of_the_match VARCHAR)",
        "question": "At what venue did Alex Mettam/Mark Williams be named Man of the Match?"
    },
    {
        "answer": "SELECT constructor FROM table_name_77 WHERE grid < 15 AND laps = 77 AND time_retired = \"+ 0.771\"",
        "context": "CREATE TABLE table_name_77 (constructor VARCHAR, time_retired VARCHAR, grid VARCHAR, laps VARCHAR)",
        "question": "Who constructed the car with a grid under 15, 77 laps, and a Time/Retired of + 0.771?"
    },
    {
        "answer": "SELECT pos FROM table_name_81 WHERE school_club_team = \"jacksonville\"",
        "context": "CREATE TABLE table_name_81 (pos VARCHAR, school_club_team VARCHAR)",
        "question": "Which position has a School/club team of jacksonville?"
    },
    {
        "answer": "SELECT census_ranking FROM table_171236_1 WHERE area_km_2 = \"34.73\"",
        "context": "CREATE TABLE table_171236_1 (census_ranking VARCHAR, area_km_2 VARCHAR)",
        "question": "If the area is 34.73, what is the census ranking?"
    },
    {
        "answer": "SELECT text_symbol FROM table_name_68 WHERE border = \"red\" AND type_of_sign = \"warning\"",
        "context": "CREATE TABLE table_name_68 (text_symbol VARCHAR, border VARCHAR, type_of_sign VARCHAR)",
        "question": "Which sign has a red border and a warning sign?"
    },
    {
        "answer": "SELECT background_colour FROM table_name_43 WHERE type_of_sign = \"mandatory instructions\"",
        "context": "CREATE TABLE table_name_43 (background_colour VARCHAR, type_of_sign VARCHAR)",
        "question": "Which color is the background of the mandatory instructions?"
    },
    {
        "answer": "SELECT director FROM table_17155250_1 WHERE original_title = \"The Patience Stone\"",
        "context": "CREATE TABLE table_17155250_1 (director VARCHAR, original_title VARCHAR)",
        "question": "Who was the director of the film with the original title of \"The Patience Stone\"? "
    },
    {
        "answer": "SELECT director FROM table_17155250_1 WHERE original_title = \"16 Days in Afghanistan\"",
        "context": "CREATE TABLE table_17155250_1 (director VARCHAR, original_title VARCHAR)",
        "question": "Who was the director of the film with an original title of \"16 Days in Afghanistan\"? "
    },
    {
        "answer": "SELECT semi_finalist__number2 FROM table_name_26 WHERE year = \"2001\"",
        "context": "CREATE TABLE table_name_26 (semi_finalist__number2 VARCHAR, year VARCHAR)",
        "question": "Who was the Semi-Finalist #2 in 2001?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_17156199_1 WHERE original_title = \"\u09b6\u09cd\u09af\u09be\u09ae\u09b2 \u099b\u09be\u09af\u09bc\u09be (Shyamol Chhaya)\"",
        "context": "CREATE TABLE table_17156199_1 (film_title_used_in_nomination VARCHAR, original_title VARCHAR)",
        "question": "What was the nominated film title of \u09b6\u09cd\u09af\u09be\u09ae\u09b2 \u099b\u09be\u09af\u09bc\u09be (shyamol chhaya)?"
    },
    {
        "answer": "SELECT AVG(sp) + fs FROM table_name_14 WHERE name = \"denise biellmann\" AND rank > 5",
        "context": "CREATE TABLE table_name_14 (fs VARCHAR, sp INTEGER, name VARCHAR, rank VARCHAR)",
        "question": "What is the average SP+FS for Denise Biellmann, and a Rank larger than 5?"
    },
    {
        "answer": "SELECT SUM(points) FROM table_name_84 WHERE nation = \"east germany\" AND places = \"88\"",
        "context": "CREATE TABLE table_name_84 (points INTEGER, nation VARCHAR, places VARCHAR)",
        "question": "What is the number of points for east germany, and a Places of 88?"
    },
    {
        "answer": "SELECT years FROM table_name_51 WHERE notes = \"laredo, limited, overland\" AND engine = \"5.7l hemi v8\"",
        "context": "CREATE TABLE table_name_51 (years VARCHAR, notes VARCHAR, engine VARCHAR)",
        "question": "what is the years when the notes is laredo, limited, overland and the engine is 5.7l hemi v8?"
    },
    {
        "answer": "SELECT _percentage_2011 FROM table_1717824_1 WHERE province = \"Manitoba\"",
        "context": "CREATE TABLE table_1717824_1 (_percentage_2011 VARCHAR, province VARCHAR)",
        "question": "What was the percentage in Manitoba in 2011?"
    },
    {
        "answer": "SELECT SUM(place) FROM table_name_7 WHERE name = \"r. wenzel\" AND until > 1934",
        "context": "CREATE TABLE table_name_7 (place INTEGER, name VARCHAR, until VARCHAR)",
        "question": "What place did R. Wenzel, who was active after 1934, have?"
    },
    {
        "answer": "SELECT COUNT(south_asians_2001) FROM table_1717824_1 WHERE _percentage_2011 = \"4.4%\"",
        "context": "CREATE TABLE table_1717824_1 (south_asians_2001 VARCHAR, _percentage_2011 VARCHAR)",
        "question": "How many figures are given for total number of South Asians in 2001 for the area where they were 4.4% of population in 2011?"
    },
    {
        "answer": "SELECT pole_position FROM table_name_27 WHERE grand_prix = \"belgian grand prix\"",
        "context": "CREATE TABLE table_name_27 (pole_position VARCHAR, grand_prix VARCHAR)",
        "question": "What is the pole position of the Belgian Grand Prix?"
    },
    {
        "answer": "SELECT declination___j2000__ FROM table_name_55 WHERE constellation = \"ophiuchus\" AND apparent_magnitude < 8.6 AND right_ascension___j2000__ = \"16h47m14.5s\"",
        "context": "CREATE TABLE table_name_55 (declination___j2000__ VARCHAR, right_ascension___j2000__ VARCHAR, constellation VARCHAR, apparent_magnitude VARCHAR)",
        "question": "Tell me the declination for consellaion of ophiuchus and apparent magnitude less than 8.6 with right ascension of 16h47m14.5s"
    },
    {
        "answer": "SELECT high_points FROM table_17190012_12 WHERE game = 4",
        "context": "CREATE TABLE table_17190012_12 (high_points VARCHAR, game VARCHAR)",
        "question": "Who had the most points in game 4?"
    },
    {
        "answer": "SELECT COUNT(going_to) FROM table_17200372_2 WHERE calling_at = \"Thurlby, Braceborough Spa\" AND departure = \"16.50\"",
        "context": "CREATE TABLE table_17200372_2 (going_to VARCHAR, calling_at VARCHAR, departure VARCHAR)",
        "question": "Name the number of going to for  thurlby, braceborough spa at departure being 16.50"
    },
    {
        "answer": "SELECT leading_scorer FROM table_name_40 WHERE date = \"12 january 2008\"",
        "context": "CREATE TABLE table_name_40 (leading_scorer VARCHAR, date VARCHAR)",
        "question": "Name the leading scorer for 12 january 2008"
    },
    {
        "answer": "SELECT COUNT(grid) FROM table_17244483_1 WHERE driver = \"Scott Dixon\"",
        "context": "CREATE TABLE table_17244483_1 (grid VARCHAR, driver VARCHAR)",
        "question": "Scott Dixon had how many Grid positions?"
    },
    {
        "answer": "SELECT MAX(poles) FROM table_17246160_1 WHERE series = \"Formula BMW Pacific\"",
        "context": "CREATE TABLE table_17246160_1 (poles INTEGER, series VARCHAR)",
        "question": "How many poles did the player have during the Formula BMW Pacific race?"
    },
    {
        "answer": "SELECT MIN(result) FROM table_17265535_7 WHERE equation = \"0 \u00d7 9\u00b2 + 3 \u00d7 9 + 3\"",
        "context": "CREATE TABLE table_17265535_7 (result INTEGER, equation VARCHAR)",
        "question": "If the equation is 0 \u00d7 9\u00b2 + 3 \u00d7 9 + 3, what is the result?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_86 WHERE away_team = \"south melbourne\"",
        "context": "CREATE TABLE table_name_86 (away_team VARCHAR)",
        "question": "What is the away team score for South Melbourne?"
    },
    {
        "answer": "SELECT winner FROM table_name_21 WHERE score = \"199 (-14)\" AND date = \"oct 31\"",
        "context": "CREATE TABLE table_name_21 (winner VARCHAR, score VARCHAR, date VARCHAR)",
        "question": "who won with a score of 199 (-14) on oct 31?"
    },
    {
        "answer": "SELECT record FROM table_17288845_8 WHERE location_attendance = \"Verizon Center 20,173\"",
        "context": "CREATE TABLE table_17288845_8 (record VARCHAR, location_attendance VARCHAR)",
        "question": "Name the record for verizon center 20,173"
    },
    {
        "answer": "SELECT COUNT(athlete) FROM table_17289604_38 WHERE round_of_64 = \"Llagostera Vives ( ESP ) L 6\u20132, 3\u20136, 5\u20137\"",
        "context": "CREATE TABLE table_17289604_38 (athlete VARCHAR, round_of_64 VARCHAR)",
        "question": "How many number of athletes were in round of 64 was llagostera Vives ( esp ) l 6\u20132, 3\u20136, 5\u20137?"
    },
    {
        "answer": "SELECT round_of_64 FROM table_17289604_38 WHERE event = \"Singles\" AND round_of_16 = \"Did not advance\" AND athlete = \"Iveta Bene\u0161ov\u00e1\"",
        "context": "CREATE TABLE table_17289604_38 (round_of_64 VARCHAR, athlete VARCHAR, event VARCHAR, round_of_16 VARCHAR)",
        "question": "What was round of 64 of the singles event when the result of round 16 was did not advance and the athlete was Iveta Bene\u0161ov\u00e1?"
    },
    {
        "answer": "SELECT quarterfinals FROM table_17289604_38 WHERE round_of_32 = \"S Williams / V Williams ( USA ) L 6\u20134, 5\u20137, 1\u20136\"",
        "context": "CREATE TABLE table_17289604_38 (quarterfinals VARCHAR, round_of_32 VARCHAR)",
        "question": "What were the quarterfinals in the round of 32 was  S williams / V williams ( usa ) l 6\u20134, 5\u20137, 1\u20136?"
    },
    {
        "answer": "SELECT location FROM table_name_96 WHERE competition = \"europe/africa zone, group i, round robin\" AND result = \"win\" AND year < 1998",
        "context": "CREATE TABLE table_name_96 (location VARCHAR, year VARCHAR, competition VARCHAR, result VARCHAR)",
        "question": "What location did the team win before 1998 in the europe/africa zone, group i, round robin?"
    },
    {
        "answer": "SELECT record FROM table_17288869_7 WHERE high_points = \"Dirk Nowitzki (19)\"",
        "context": "CREATE TABLE table_17288869_7 (record VARCHAR, high_points VARCHAR)",
        "question": "What was the final record for the game in which Dirk Nowitzki (19) had the high points?"
    },
    {
        "answer": "SELECT championship FROM table_1729366_2 WHERE opponents_in_the_final = \"Nathalie Dechy Andy Ram\"",
        "context": "CREATE TABLE table_1729366_2 (championship VARCHAR, opponents_in_the_final VARCHAR)",
        "question": "Which championship had the final opponents of nathalie dechy andy ram?"
    },
    {
        "answer": "SELECT placings FROM table_name_34 WHERE free < 524.3 AND total < 1170.1 AND name = \"per cock-clausen\"",
        "context": "CREATE TABLE table_name_34 (placings VARCHAR, name VARCHAR, free VARCHAR, total VARCHAR)",
        "question": "Can you tell me the Placings that hasthe Free smaller than 524.3, and the Total smaller than 1170.1, and the Name of per cock-clausen?"
    },
    {
        "answer": "SELECT grand_prix FROM table_name_24 WHERE fastest_lap = \"gerhard berger\" AND pole_position = \"jacques villeneuve\"",
        "context": "CREATE TABLE table_name_24 (grand_prix VARCHAR, fastest_lap VARCHAR, pole_position VARCHAR)",
        "question": "Which grand prix had gerhard berger in his fastest lap and a jacques villeneuve pole position?"
    },
    {
        "answer": "SELECT max_pressure FROM table_173103_1 WHERE muzzle_energy = \"201ft\u2022lbf (273 J)\"",
        "context": "CREATE TABLE table_173103_1 (max_pressure VARCHAR, muzzle_energy VARCHAR)",
        "question": "What is the max pressure of the cartridge where the muzzle energy is 201ft\u2022lbf (273 j)?"
    },
    {
        "answer": "SELECT replaced_by FROM table_name_46 WHERE team = \"brussels\" AND date_of_vacancy = \"22 december 2007\"",
        "context": "CREATE TABLE table_name_46 (replaced_by VARCHAR, team VARCHAR, date_of_vacancy VARCHAR)",
        "question": "Who was the replacement for the Brussels team with a date of vacancy of 22 December 2007?"
    },
    {
        "answer": "SELECT AVG(year) FROM table_name_84 WHERE rank > 3 AND floors = 28",
        "context": "CREATE TABLE table_name_84 (year INTEGER, rank VARCHAR, floors VARCHAR)",
        "question": "Tell me the average year for rank more than 3 and 28 floors"
    },
    {
        "answer": "SELECT COUNT(assists) FROM table_17309500_1 WHERE blocks = \"77\"",
        "context": "CREATE TABLE table_17309500_1 (assists VARCHAR, blocks VARCHAR)",
        "question": "Name the total number of assists for 77 blocks"
    },
    {
        "answer": "SELECT constructor FROM table_name_93 WHERE chassis = \"fw06 fw07\" AND driver = \"alan jones\"",
        "context": "CREATE TABLE table_name_93 (constructor VARCHAR, chassis VARCHAR, driver VARCHAR)",
        "question": "Who is the constructor for driver alan jones using a chassis of fw06 fw07?"
    },
    {
        "answer": "SELECT COUNT(driver) FROM table_17319931_1 WHERE time_retired = \"+3 laps\" AND points = \"24\"",
        "context": "CREATE TABLE table_17319931_1 (driver VARCHAR, time_retired VARCHAR, points VARCHAR)",
        "question": "How many drivers where there when the time/retired +3 laps and points were 24?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_86 WHERE laps = 75 AND driver = \"pedro de la rosa\"",
        "context": "CREATE TABLE table_name_86 (time_retired VARCHAR, laps VARCHAR, driver VARCHAR)",
        "question": "Which time/retired had 75 laps and Pedro de la Rosa as a driver?"
    },
    {
        "answer": "SELECT manhattan FROM table_name_21 WHERE richmond_[staten_is] = \"78%\"",
        "context": "CREATE TABLE table_name_21 (manhattan VARCHAR, richmond_ VARCHAR, staten_is VARCHAR)",
        "question": "Which Manhattan number appeared when Richmond (Staten Island) was 78%?"
    },
    {
        "answer": "SELECT high_assists FROM table_17323092_7 WHERE team = \"@ Minnesota\"",
        "context": "CREATE TABLE table_17323092_7 (high_assists VARCHAR, team VARCHAR)",
        "question": "Who had the high assists when the team was @ Minnesota?"
    },
    {
        "answer": "SELECT COUNT(high_points) FROM table_17323092_7 WHERE location_attendance = \"FedExForum 11,498\"",
        "context": "CREATE TABLE table_17323092_7 (high_points VARCHAR, location_attendance VARCHAR)",
        "question": "How many players had high points in the location/attendance FedexForum 11,498 respectively?"
    },
    {
        "answer": "SELECT state FROM table_name_81 WHERE city = \"knoxville\"",
        "context": "CREATE TABLE table_name_81 (state VARCHAR, city VARCHAR)",
        "question": "In which state is the city of knoxville?"
    },
    {
        "answer": "SELECT date_of_appointment FROM table_17327264_3 WHERE manner_of_departure = \"Sacked\" AND position_in_table = \"14th\" AND replaced_by = \"Marco Kostmann\"",
        "context": "CREATE TABLE table_17327264_3 (date_of_appointment VARCHAR, replaced_by VARCHAR, manner_of_departure VARCHAR, position_in_table VARCHAR)",
        "question": "Name the date of appointment for sacked and 14th position replaced by marco kostmann"
    },
    {
        "answer": "SELECT year_8_1st_quad FROM table_name_5 WHERE year_9_2nd_quad = \"stm\" AND year_9_1st_quad = \"som\" AND year_8_3rd_quad = \"sta\"",
        "context": "CREATE TABLE table_name_5 (year_8_1st_quad VARCHAR, year_8_3rd_quad VARCHAR, year_9_2nd_quad VARCHAR, year_9_1st_quad VARCHAR)",
        "question": "For the Crew with Year 9 2nd Quads of STM, Year 9 1st Quads of SOM, and a Year 8 3rd Quads of STA what was the Year 8 1st Quads?"
    },
    {
        "answer": "SELECT character FROM table_name_59 WHERE category = \"sexiest female\" AND award = \"british soap awards\"",
        "context": "CREATE TABLE table_name_59 (character VARCHAR, category VARCHAR, award VARCHAR)",
        "question": "Which character was in the sexiest female category of the British Soap Awards?"
    },
    {
        "answer": "SELECT team FROM table_17327458_1 WHERE date_of_appointment = \"12 June\"",
        "context": "CREATE TABLE table_17327458_1 (team VARCHAR, date_of_appointment VARCHAR)",
        "question": "What team appointed a manager on 12 June?"
    },
    {
        "answer": "SELECT COUNT(winning_score) FROM table_17335602_1 WHERE tournament = \"RR Donnelley LPGA Founders Cup\"",
        "context": "CREATE TABLE table_17335602_1 (winning_score VARCHAR, tournament VARCHAR)",
        "question": "How many winning scores were there in the rr donnelley lpga founders cup?"
    },
    {
        "answer": "SELECT date FROM table_17335602_1 WHERE tournament = \"McDonald's LPGA Championship\"",
        "context": "CREATE TABLE table_17335602_1 (date VARCHAR, tournament VARCHAR)",
        "question": "When was the mcdonald's lpga championship?"
    },
    {
        "answer": "SELECT MAX(winners_share___) AS $__ FROM table_17335602_1 WHERE tournament = \"Wegmans LPGA Championship\"",
        "context": "CREATE TABLE table_17335602_1 (winners_share___ INTEGER, tournament VARCHAR)",
        "question": "What was the winner's share in the wegmans lpga championship?"
    },
    {
        "answer": "SELECT MAX(clean_) & _jerk FROM table_name_92 WHERE total__kg_ = \"200.0\" AND snatch > 87.5",
        "context": "CREATE TABLE table_name_92 (_jerk VARCHAR, clean_ INTEGER, total__kg_ VARCHAR, snatch VARCHAR)",
        "question": "what is the highest clean & jerk when total (kg) is 200.0 and snatch is more than 87.5?"
    },
    {
        "answer": "SELECT COUNT(record) FROM table_17340355_6 WHERE high_rebounds = \"Amar'e Stoudemire (11)\"",
        "context": "CREATE TABLE table_17340355_6 (record VARCHAR, high_rebounds VARCHAR)",
        "question": "What are the records of games where high rebounds is amar'e stoudemire (11)"
    },
    {
        "answer": "SELECT AVG(_1st_prize) FROM table_name_55 WHERE location = \"tennessee\"",
        "context": "",
        "question": "Tell me the average 1st prize for tennessee"
    },
    {
        "answer": "SELECT high_assists FROM table_17340355_7 WHERE date = \"January 2\"",
        "context": "CREATE TABLE table_17340355_7 (high_assists VARCHAR, date VARCHAR)",
        "question": "Who had the high assist total on january 2?"
    },
    {
        "answer": "SELECT film_title_used_in_nomination FROM table_17350255_1 WHERE original_title = \"B\u0101b\u01cei zhu\u00e0ngsh\u00ec (\u516b\u767e\u58ef\u58eb)\"",
        "context": "CREATE TABLE table_17350255_1 (film_title_used_in_nomination VARCHAR, original_title VARCHAR)",
        "question": "What was the title used in nomination in the original B\u0101b\u01cei Zhu\u00e0ngsh\u00ec (\u516b\u767e\u58ef\u58eb)?"
    },
    {
        "answer": "SELECT year__ceremony_ FROM table_17350255_1 WHERE result = \"Not Nominated\" AND film_title_used_in_nomination = \"My Mother's Teahouse\"",
        "context": "CREATE TABLE table_17350255_1 (year__ceremony_ VARCHAR, result VARCHAR, film_title_used_in_nomination VARCHAR)",
        "question": "What was the year when My Mother's Teahouse was not nominated?"
    },
    {
        "answer": "SELECT MAX(erp_w) FROM table_name_6 WHERE frequency_mhz < 91.1",
        "context": "CREATE TABLE table_name_6 (erp_w INTEGER, frequency_mhz INTEGER)",
        "question": "What is the ERP W number where the frequency is smaller than 91.1?"
    },
    {
        "answer": "SELECT high_points FROM table_17355408_5 WHERE location_attendance = \"Pepsi Center 18,611\"",
        "context": "CREATE TABLE table_17355408_5 (high_points VARCHAR, location_attendance VARCHAR)",
        "question": "Name the high points for pepsi center 18,611"
    },
    {
        "answer": "SELECT cospar_id FROM table_name_40 WHERE launch_date_time__utc_ = \"1995-11-06, 05:15:01\"",
        "context": "CREATE TABLE table_name_40 (cospar_id VARCHAR, launch_date_time__utc_ VARCHAR)",
        "question": "What COSPAR ID has a Launch date/time (UTC) of 1995-11-06, 05:15:01?"
    },
    {
        "answer": "SELECT high_assists FROM table_17355408_4 WHERE high_points = \"Chauncey Billups , Carmelo Anthony (18)\"",
        "context": "CREATE TABLE table_17355408_4 (high_assists VARCHAR, high_points VARCHAR)",
        "question": "Name the high assists for chauncey billups , carmelo anthony (18)"
    },
    {
        "answer": "SELECT team FROM table_17355716_5 WHERE date = \"November 17\"",
        "context": "CREATE TABLE table_17355716_5 (team VARCHAR, date VARCHAR)",
        "question": "Name the team where the date is november 17"
    },
    {
        "answer": "SELECT MIN(episodes) FROM table_name_35 WHERE actor = \"anabel barnston\"",
        "context": "CREATE TABLE table_name_35 (episodes INTEGER, actor VARCHAR)",
        "question": "What is the lowest number of episodes for anabel barnston?"
    },
    {
        "answer": "SELECT MAX(year_of_disaffiliation) FROM table_name_31 WHERE station = \"chch-tv\" AND year_of_affiliation > 2001",
        "context": "CREATE TABLE table_name_31 (year_of_disaffiliation INTEGER, station VARCHAR, year_of_affiliation VARCHAR)",
        "question": "What is the most recent year of disaffiliation of a CHCH-TV station that affiliated after 2001?"
    },
    {
        "answer": "SELECT MAX(crowd) FROM table_name_89 WHERE away_team = \"south melbourne\"",
        "context": "CREATE TABLE table_name_89 (crowd INTEGER, away_team VARCHAR)",
        "question": "What was the largest crowd when South Melbourne was the away team?"
    },
    {
        "answer": "SELECT venue FROM table_17356873_1 WHERE shirt_sponsor = \"Mardan\"",
        "context": "CREATE TABLE table_17356873_1 (venue VARCHAR, shirt_sponsor VARCHAR)",
        "question": "Which venue does Mardan sponsor?"
    },
    {
        "answer": "SELECT score FROM table_17360840_9 WHERE record = \"21-31-13\"",
        "context": "CREATE TABLE table_17360840_9 (score VARCHAR, record VARCHAR)",
        "question": "What was the score when the record was 21-31-13?"
    },
    {
        "answer": "SELECT won FROM table_17369472_2 WHERE points = \"49\"",
        "context": "CREATE TABLE table_17369472_2 (won VARCHAR, points VARCHAR)",
        "question": "How many were won when there were 49 points? "
    },
    {
        "answer": "SELECT MAX(points_awarded__platinum_) FROM table_name_51 WHERE points_awarded__gold_ = 9 AND points_awarded__silver_ > 6",
        "context": "CREATE TABLE table_name_51 (points_awarded__platinum_ INTEGER, points_awarded__gold_ VARCHAR, points_awarded__silver_ VARCHAR)",
        "question": "What points awarded are higher than 6 but smaller than 9"
    },
    {
        "answer": "SELECT COUNT(designation) FROM table_17384764_1 WHERE experience = \"20 years\"",
        "context": "CREATE TABLE table_17384764_1 (designation VARCHAR, experience VARCHAR)",
        "question": "How many faculty members have 20 years of experience? "
    },
    {
        "answer": "SELECT MIN(occ_championships) FROM table_17429402_7 WHERE last_outright_occ_championship = \"2006\"",
        "context": "CREATE TABLE table_17429402_7 (occ_championships INTEGER, last_outright_occ_championship VARCHAR)",
        "question": "What is the fewest number of occ championships for the team that last won an outright occ championship in 2006?"
    },
    {
        "answer": "SELECT COUNT(platforms) FROM table_name_41 WHERE stations = \"waddon railway station\"",
        "context": "CREATE TABLE table_name_41 (platforms VARCHAR, stations VARCHAR)",
        "question": "Name the total number of platforms that waddon railway station has"
    },
    {
        "answer": "SELECT round_of_16 FROM table_17417383_6 WHERE quarterfinals = \"Did not advance\" AND event = \"Light flyweight\"",
        "context": "CREATE TABLE table_17417383_6 (round_of_16 VARCHAR, quarterfinals VARCHAR, event VARCHAR)",
        "question": "Name the round 16 for did not advance and light flyweight"
    },
    {
        "answer": "SELECT away FROM table_name_22 WHERE record = \"7-4\" AND win__percentage = 0.637 AND season = \"2010\"",
        "context": "CREATE TABLE table_name_22 (away VARCHAR, season VARCHAR, record VARCHAR, win__percentage VARCHAR)",
        "question": "What is the away score with a record of 7-4, win% of 0.637, and 2010 season?"
    },
    {
        "answer": "SELECT fis_nordic_world_ski_championships FROM table_174491_1 WHERE country = \"Norway\" AND holmenkollen = \"1958\"",
        "context": "CREATE TABLE table_174491_1 (fis_nordic_world_ski_championships VARCHAR, country VARCHAR, holmenkollen VARCHAR)",
        "question": "What year did the man from Norway who won the Holmenkollen in 1958 win the FIS Nordic World Ski Championships?"
    },
    {
        "answer": "SELECT fis_nordic_world_ski_championships FROM table_174491_2 WHERE winner = \"Birger Ruud\"",
        "context": "CREATE TABLE table_174491_2 (fis_nordic_world_ski_championships VARCHAR, winner VARCHAR)",
        "question": "What years did Birger Ruud win the FIS Nordic World Ski Championships?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_68 WHERE loss = \"k. gross (1-1)\"",
        "context": "CREATE TABLE table_name_68 (attendance INTEGER, loss VARCHAR)",
        "question": "How many attended the game that was a Loss of k. gross (1-1)?"
    },
    {
        "answer": "SELECT record FROM table_name_45 WHERE decision = \"mason\" AND home = \"nashville\"",
        "context": "CREATE TABLE table_name_45 (record VARCHAR, decision VARCHAR, home VARCHAR)",
        "question": "What is the record of the game with Mason as the decision and Nashville as the home team?"
    },
    {
        "answer": "SELECT part_3 FROM table_1745843_7 WHERE part_4 = \"gelopen\"",
        "context": "CREATE TABLE table_1745843_7 (part_3 VARCHAR, part_4 VARCHAR)",
        "question": "What's the part 3 of the verb with part 4 gelopen?"
    },
    {
        "answer": "SELECT MIN(year) FROM table_name_99 WHERE entrant = \"rotary watches stanley brm\" AND chassis = \"brm p207\" AND points > 0",
        "context": "CREATE TABLE table_name_99 (year INTEGER, points VARCHAR, entrant VARCHAR, chassis VARCHAR)",
        "question": "What is the earliest year with an entry from Rotary Watches Stanley BRM and a BRM P207 with more than 0 points?"
    },
    {
        "answer": "SELECT transfer_fee FROM table_name_41 WHERE source = \"fcbarcelona.cat\" AND country = \"fra\" AND name = \"henry\"",
        "context": "CREATE TABLE table_name_41 (transfer_fee VARCHAR, name VARCHAR, source VARCHAR, country VARCHAR)",
        "question": "What is henry transfer fee at fcbarcelona.cat in fra?"
    },
    {
        "answer": "SELECT grid FROM table_name_55 WHERE laps = \"71\" AND driver = \"allan mcnish\"",
        "context": "CREATE TABLE table_name_55 (grid VARCHAR, laps VARCHAR, driver VARCHAR)",
        "question": "What is the grid with 71 laps and the driver, Allan McNish."
    },
    {
        "answer": "SELECT part_3 FROM table_1745843_10 WHERE class = \"4\"",
        "context": "CREATE TABLE table_1745843_10 (part_3 VARCHAR, class VARCHAR)",
        "question": "What is part 1 of the verb in class 4"
    },
    {
        "answer": "SELECT COUNT(part_1) FROM table_1745843_10 WHERE verb_meaning = \"to grow, to produce\"",
        "context": "CREATE TABLE table_1745843_10 (part_1 VARCHAR, verb_meaning VARCHAR)",
        "question": "How many verbs mean to grow, to produce"
    },
    {
        "answer": "SELECT original_airdate FROM table_17467578_1 WHERE us_viewers__million_ = \"3.73\"",
        "context": "CREATE TABLE table_17467578_1 (original_airdate VARCHAR, us_viewers__million_ VARCHAR)",
        "question": "What was the original airdate of the episode \"The Cold Turkey\", which was viewed by 3.73 million viewers?"
    },
    {
        "answer": "SELECT director FROM table_name_29 WHERE serial_title = \"heroes of the wild\"",
        "context": "CREATE TABLE table_name_29 (director VARCHAR, serial_title VARCHAR)",
        "question": "I want the director for heroes of the wild"
    },
    {
        "answer": "SELECT cast FROM table_name_75 WHERE director = \"colbert clark and armand schaefer\" AND serial_title = \"burn 'em up barnes\"",
        "context": "CREATE TABLE table_name_75 (cast VARCHAR, director VARCHAR, serial_title VARCHAR)",
        "question": "I want the cast for director of colbert clark and armand schaefer for burn 'em up barnes"
    },
    {
        "answer": "SELECT opponent_in_the_final FROM table_name_23 WHERE surface = \"clay\" AND score = \"6\u20134, 6\u20134\"",
        "context": "CREATE TABLE table_name_23 (opponent_in_the_final VARCHAR, surface VARCHAR, score VARCHAR)",
        "question": "In the surface of clay who was the opponent in the game resulting in a score of 6\u20134, 6\u20134?"
    },
    {
        "answer": "SELECT county FROM table_name_64 WHERE cerclis_id = \"scd037405362\"",
        "context": "CREATE TABLE table_name_64 (county VARCHAR, cerclis_id VARCHAR)",
        "question": "What county has a CERCLIS ID of scd037405362?"
    },
    {
        "answer": "SELECT year FROM table_name_44 WHERE award = \"drama desk award\" AND result = \"won\" AND nominee = \"george hearn\"",
        "context": "CREATE TABLE table_name_44 (year VARCHAR, nominee VARCHAR, award VARCHAR, result VARCHAR)",
        "question": "What year was the Drama Desk award won by nominee George Hearn?"
    },
    {
        "answer": "SELECT date FROM table_name_60 WHERE competition = \"2014 world cup qualification\" AND location = \"kampala\" AND opponent = \"angola\"",
        "context": "CREATE TABLE table_name_60 (date VARCHAR, opponent VARCHAR, competition VARCHAR, location VARCHAR)",
        "question": "When was the 2014 World Cup Qualification in Kampala that had Angola as an opponent"
    },
    {
        "answer": "SELECT zone FROM table_name_42 WHERE round = \"semifinal\" AND against = \"israel\" AND opponent = \"anna smashnova\"",
        "context": "CREATE TABLE table_name_42 (zone VARCHAR, opponent VARCHAR, round VARCHAR, against VARCHAR)",
        "question": "What zone was the Semifinal game played against Israel with Anna Smashnova as the opponent?"
    },
    {
        "answer": "SELECT COUNT(lead_margin) FROM table_17538810_10 WHERE dates_administered = \"September 11, 2008\"",
        "context": "CREATE TABLE table_17538810_10 (lead_margin VARCHAR, dates_administered VARCHAR)",
        "question": "How many different lead margins were stated in the poll administered on September 11, 2008?"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_87 WHERE home_team = \"richmond\"",
        "context": "CREATE TABLE table_name_87 (home_team VARCHAR)",
        "question": "Tell me the home team score for richmond home team"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_76 WHERE home_team = \"fitzroy\"",
        "context": "CREATE TABLE table_name_76 (away_team VARCHAR, home_team VARCHAR)",
        "question": "When fitzroy was the home team, how much did the away team score?"
    },
    {
        "answer": "SELECT method FROM table_name_33 WHERE event = \"shooto\" AND round = 2 AND opponent = \"issei tamura\"",
        "context": "CREATE TABLE table_name_33 (method VARCHAR, opponent VARCHAR, event VARCHAR, round VARCHAR)",
        "question": "Which method has an Event of shooto, a Round of 2, and an Opponent of issei tamura?"
    },
    {
        "answer": "SELECT COUNT(domestic_freight) FROM table_1754531_4 WHERE international_mail > 1.0 AND domestic_mail = 260",
        "context": "CREATE TABLE table_1754531_4 (domestic_freight VARCHAR, international_mail VARCHAR, domestic_mail VARCHAR)",
        "question": "Namw the total number for domestic freight for international mail is larger than 1.0 with domestic mail for 260"
    },
    {
        "answer": "SELECT home_team AS score FROM table_name_81 WHERE venue = \"windy hill\"",
        "context": "CREATE TABLE table_name_81 (home_team VARCHAR, venue VARCHAR)",
        "question": "What is the home team score that played at windy hill?"
    },
    {
        "answer": "SELECT constructor FROM table_name_53 WHERE circuit = \"goodwood\"",
        "context": "CREATE TABLE table_name_53 (constructor VARCHAR, circuit VARCHAR)",
        "question": "Which Constructor has the goodwood circuit?"
    },
    {
        "answer": "SELECT japanese_title FROM table_name_44 WHERE disc < 12 AND artist = \"k\u014dz\u014d murashita\"",
        "context": "CREATE TABLE table_name_44 (japanese_title VARCHAR, disc VARCHAR, artist VARCHAR)",
        "question": "Which Japanese title has a Disc smaller than 12, and an Artist of k\u014dz\u014d murashita?"
    },
    {
        "answer": "SELECT laps FROM table_name_89 WHERE grid < 11 AND driver = \"david coulthard\"",
        "context": "CREATE TABLE table_name_89 (laps VARCHAR, grid VARCHAR, driver VARCHAR)",
        "question": "How many Laps Did Driver David Coulthard have on a Grid smaller than 11?"
    },
    {
        "answer": "SELECT COUNT(play_by_play) FROM table_17628022_2 WHERE pregame_analysts = \"Darren Flutie, Eric Tillman and Greg Frers\"",
        "context": "CREATE TABLE table_17628022_2 (play_by_play VARCHAR, pregame_analysts VARCHAR)",
        "question": "How many different play-by-play announcers also had pregame analysis by Darren Flutie, Eric Tillman and Greg Frers?"
    },
    {
        "answer": "SELECT play_by_play FROM table_17628022_2 WHERE pregame_host = \"Brian Williams\" AND sideline_reporters = \"Steve Armitage and Brenda Irving\"",
        "context": "CREATE TABLE table_17628022_2 (play_by_play VARCHAR, pregame_host VARCHAR, sideline_reporters VARCHAR)",
        "question": "Who did the play-by-play when the pregame host was Brian Williams and the sideline reporters were Steve Armitage and Brenda Irving?"
    },
    {
        "answer": "SELECT league FROM table_name_16 WHERE year = \"1994\"",
        "context": "CREATE TABLE table_name_16 (league VARCHAR, year VARCHAR)",
        "question": "Name the league for 1994"
    },
    {
        "answer": "SELECT MAX(pick__number) FROM table_name_43 WHERE rd__number < 6 AND player = \"bob dailey\" AND reg_gp > 257",
        "context": "CREATE TABLE table_name_43 (pick__number INTEGER, reg_gp VARCHAR, rd__number VARCHAR, player VARCHAR)",
        "question": "What is the highest Pick number that had a road number that was less than 6, featured Bob Dailey as a player, and which had a Reg GP bigger than 257?"
    },
    {
        "answer": "SELECT pos FROM table_name_39 WHERE race = \"24 hours of le mans\" AND co_driver = \"jackie oliver\"",
        "context": "CREATE TABLE table_name_39 (pos VARCHAR, race VARCHAR, co_driver VARCHAR)",
        "question": "What position did Co-driver Jackie Oliver finish in the 24 hours of Le Mans?"
    },
    {
        "answer": "SELECT COUNT(points) FROM table_17625749_3 WHERE losing_bonus = \"2\" AND points_for = \"642\"",
        "context": "CREATE TABLE table_17625749_3 (points VARCHAR, losing_bonus VARCHAR, points_for VARCHAR)",
        "question": "How many points categories are there when the losing bonus is 2 and points for are 642?"
    },
    {
        "answer": "SELECT time_retired FROM table_name_51 WHERE laps = 80 AND grid > 2",
        "context": "CREATE TABLE table_name_51 (time_retired VARCHAR, laps VARCHAR, grid VARCHAR)",
        "question": "What's the Time/Retired of 80 laps with a Grid larger than 2?"
    },
    {
        "answer": "SELECT MAX(attendance) FROM table_name_43 WHERE date = \"october 7\" AND game > 1",
        "context": "CREATE TABLE table_name_43 (attendance INTEGER, date VARCHAR, game VARCHAR)",
        "question": "Where date is october 7 and game greater than 1, what is the highest attendance?"
    },
    {
        "answer": "SELECT leading_scorer FROM table_name_66 WHERE home = \"grizzlies\" AND record = \"10\u201328\"",
        "context": "CREATE TABLE table_name_66 (leading_scorer VARCHAR, home VARCHAR, record VARCHAR)",
        "question": "Which leading scorer has a Home of grizzlies, and a Record of 10\u201328?"
    },
    {
        "answer": "SELECT score FROM table_name_72 WHERE home = \"colorado\" AND date = \"may 11\"",
        "context": "CREATE TABLE table_name_72 (score VARCHAR, home VARCHAR, date VARCHAR)",
        "question": "What is the Score with a Home of colorado, and a Date with may 11?"
    },
    {
        "answer": "SELECT surface FROM table_177273_2 WHERE score = \"6\u20134, 6\u20134\"",
        "context": "CREATE TABLE table_177273_2 (surface VARCHAR, score VARCHAR)",
        "question": "On what surface was the game played with a score of  6\u20134, 6\u20134?"
    },
    {
        "answer": "SELECT final_win__percentage FROM table_17751942_4 WHERE team = \"Sault Ste. Marie Greyhounds\"",
        "context": "CREATE TABLE table_17751942_4 (final_win__percentage VARCHAR, team VARCHAR)",
        "question": "What is the final win percentage of the Sault Ste. Marie Greyhounds? "
    },
    {
        "answer": "SELECT mission FROM table_name_47 WHERE launch_date = \"december 30, 1970; 14:50 gmt\"",
        "context": "CREATE TABLE table_name_47 (mission VARCHAR, launch_date VARCHAR)",
        "question": "Which Mission has a Launch Date of december 30, 1970; 14:50 gmt?"
    },
    {
        "answer": "SELECT broadcast_date FROM table_1776943_1 WHERE viewers__in_millions_ = \"6.4\" AND archive = \"16mm t/r\"",
        "context": "CREATE TABLE table_1776943_1 (broadcast_date VARCHAR, viewers__in_millions_ VARCHAR, archive VARCHAR)",
        "question": "Name the broadcast date for 6.4 million viewers for the archive of 16mm t/r"
    },
    {
        "answer": "SELECT laps FROM table_17802778_1 WHERE year = 2001",
        "context": "CREATE TABLE table_17802778_1 (laps VARCHAR, year VARCHAR)",
        "question": "How many laps recorded in 2001?"
    },
    {
        "answer": "SELECT average_speed__mph_ FROM table_17802778_1 WHERE race_time = \"1:45:00\"",
        "context": "CREATE TABLE table_17802778_1 (average_speed__mph_ VARCHAR, race_time VARCHAR)",
        "question": "What was the average speed (mph) for the racer who finished in 1:45:00?"
    },
    {
        "answer": "SELECT COUNT(slope_length) FROM table_17814458_1 WHERE elevation_groundstation = 1966",
        "context": "CREATE TABLE table_17814458_1 (slope_length VARCHAR, elevation_groundstation VARCHAR)",
        "question": "Name the slope length for 1966 groundstation"
    },
    {
        "answer": "SELECT COUNT(bronze) FROM table_name_36 WHERE rank < 2 AND gold < 0",
        "context": "CREATE TABLE table_name_36 (bronze VARCHAR, rank VARCHAR, gold VARCHAR)",
        "question": "How many bronze medals for the nation ranked above 2, and under 0 golds?"
    },
    {
        "answer": "SELECT actor_required FROM table_17827271_1 WHERE actor_in_original_production = \"Robert Austin\"",
        "context": "CREATE TABLE table_17827271_1 (actor_required VARCHAR, actor_in_original_production VARCHAR)",
        "question": "What were the requirements for the role played by Robert Austin in the original production?"
    },
    {
        "answer": "SELECT COUNT(roleplay) FROM table_17827271_1 WHERE flatspin = \"Tracy Taylor\"",
        "context": "CREATE TABLE table_17827271_1 (roleplay VARCHAR, flatspin VARCHAR)",
        "question": "How many RolePlay actors played the same role as FlatSpin's Tracy Taylor?"
    },
    {
        "answer": "SELECT roleplay FROM table_17827271_1 WHERE actor_in_original_production = \"Alison Pargeter\"",
        "context": "CREATE TABLE table_17827271_1 (roleplay VARCHAR, actor_in_original_production VARCHAR)",
        "question": "What RolePlay actor played the same role Alison Pargeter played in the original production?"
    },
    {
        "answer": "SELECT COUNT(location_of_the_church) FROM table_178381_1 WHERE year_built = \"1957\" AND church_name = \"Askrova bedehuskapell\"",
        "context": "CREATE TABLE table_178381_1 (location_of_the_church VARCHAR, year_built VARCHAR, church_name VARCHAR)",
        "question": "On how many locations is there a church named Askrova Bedehuskapell, built in 1957?"
    },
    {
        "answer": "SELECT crowd FROM table_name_2 WHERE venue = \"lake oval\"",
        "context": "CREATE TABLE table_name_2 (crowd VARCHAR, venue VARCHAR)",
        "question": "How many people were in the crowd at Lake Oval?"
    },
    {
        "answer": "SELECT home_team FROM table_name_88 WHERE date = \"27 june 1981\" AND venue = \"vfl park\"",
        "context": "CREATE TABLE table_name_88 (home_team VARCHAR, date VARCHAR, venue VARCHAR)",
        "question": "What team was the home team on 27 june 1981, at vfl park?"
    },
    {
        "answer": "SELECT number_of_powiats FROM table_1784514_1 WHERE capital = \"Mstsislaw\"",
        "context": "CREATE TABLE table_1784514_1 (number_of_powiats VARCHAR, capital VARCHAR)",
        "question": "How many powiats have mstsislaw as a capital?"
    },
    {
        "answer": "SELECT COUNT(capital) FROM table_1784514_1 WHERE voivodeship_after_1569 = \"Brest Litovsk Voivodeship\"",
        "context": "CREATE TABLE table_1784514_1 (capital VARCHAR, voivodeship_after_1569 VARCHAR)",
        "question": "How many capitals had brest litovsk voivodeship as voivodeship after 1569?"
    },
    {
        "answer": "SELECT COUNT(parish__prestegjeld_) FROM table_178399_1 WHERE church_name = \"Vilnes kyrkje\"",
        "context": "CREATE TABLE table_178399_1 (parish__prestegjeld_ VARCHAR, church_name VARCHAR)",
        "question": "Name the number of parish for vilnes kyrkje"
    },
    {
        "answer": "SELECT gdp_per_capita__nominal_ FROM table_name_16 WHERE population = \"5,125,693\"",
        "context": "CREATE TABLE table_name_16 (gdp_per_capita__nominal_ VARCHAR, population VARCHAR)",
        "question": "What is the GDP (nominal) with Population of 5,125,693?"
    },
    {
        "answer": "SELECT MAX(year_built) FROM table_178399_1 WHERE church_name = \"Holmedal kyrkje\"",
        "context": "CREATE TABLE table_178399_1 (year_built INTEGER, church_name VARCHAR)",
        "question": "Name the maximum year built for holmedal kyrkje"
    },
    {
        "answer": "SELECT COUNT(week) FROM table_17869717_1 WHERE date = \"November 3\"",
        "context": "CREATE TABLE table_17869717_1 (week VARCHAR, date VARCHAR)",
        "question": "In how many weeks was the game played on November 3 played?"
    },
    {
        "answer": "SELECT broadcast_date FROM table_1785117_1 WHERE viewers__in_millions_ = \"8.3\"",
        "context": "CREATE TABLE table_1785117_1 (broadcast_date VARCHAR, viewers__in_millions_ VARCHAR)",
        "question": "What is the broadcast date when 8.3 million viewers watched?"
    },
    {
        "answer": "SELECT division_north FROM table_17881033_1 WHERE division_south = \"Ko\u017euf\" AND division_southwest = \"Ilinden Velmej\"",
        "context": "CREATE TABLE table_17881033_1 (division_north VARCHAR, division_south VARCHAR, division_southwest VARCHAR)",
        "question": "what is the division north when division south was ko\u017euf and division southwest was ilinden velmej"
    },
    {
        "answer": "SELECT retail_space_sq_feet__m\u00b2_ FROM table_name_70 WHERE mall_name = \"stony point fashion park\"",
        "context": "CREATE TABLE table_name_70 (retail_space_sq_feet__m\u00b2_ VARCHAR, mall_name VARCHAR)",
        "question": "What is the retail space of the Stony Point Fashion Park Mall?"
    },
    {
        "answer": "SELECT score FROM table_name_81 WHERE visitor = \"bucks\" AND leading_scorer = \"maurice williams (25)\"",
        "context": "CREATE TABLE table_name_81 (score VARCHAR, visitor VARCHAR, leading_scorer VARCHAR)",
        "question": "What is the Score with a Visitor of bucks, and a Leading scorer with maurice williams (25)?"
    },
    {
        "answer": "SELECT outgoing_manage FROM table_17933600_2 WHERE incoming_manager = \"Jo\u00e3o Pereira\"",
        "context": "CREATE TABLE table_17933600_2 (outgoing_manage VARCHAR, incoming_manager VARCHAR)",
        "question": "Who was the outgoing manager when the incoming manager was jo\u00e3o pereira?"
    },
    {
        "answer": "SELECT date FROM table_name_91 WHERE tyre = \"d\" AND circuit = \"monaco\"",
        "context": "CREATE TABLE table_name_91 (date VARCHAR, tyre VARCHAR, circuit VARCHAR)",
        "question": "On what date is there a Tryre of d at the Circuit of monaco?"
    },
    {
        "answer": "SELECT 1 AS st_leg FROM table_17968229_1 WHERE home__2nd_leg_ = \"Atl\u00e9tico Tucum\u00e1n\"",
        "context": "CREATE TABLE table_17968229_1 (home__2nd_leg_ VARCHAR)",
        "question": "If the home is Atl\u00e9tico Tucum\u00e1n, what is the name of the first leg?"
    },
    {
        "answer": "SELECT chinese_name FROM table_17964087_2 WHERE romanised_name = \"Chan Chi-yuen, Paul\"",
        "context": "CREATE TABLE table_17964087_2 (chinese_name VARCHAR, romanised_name VARCHAR)",
        "question": "What is the chinese name for whom chan chi-yuen, paul is listed as the romanised name?"
    },
    {
        "answer": "SELECT romanised_name FROM table_17964087_2 WHERE prior_occupation = \"Assistant Police Commissioner (ret'd)\"",
        "context": "CREATE TABLE table_17964087_2 (romanised_name VARCHAR, prior_occupation VARCHAR)",
        "question": "For the prior occupation listed as assistant police commissioner (ret'd) what are the entire list of romanised name. "
    },
    {
        "answer": "SELECT release_date FROM table_name_18 WHERE release_format = \"standard cd\" AND country = \"north america\"",
        "context": "CREATE TABLE table_name_18 (release_date VARCHAR, release_format VARCHAR, country VARCHAR)",
        "question": "What is the release date for the standard cd release format in north america?"
    },
    {
        "answer": "SELECT comment FROM table_17978052_2 WHERE borough_or_census_area = \"Denali\"",
        "context": "CREATE TABLE table_17978052_2 (comment VARCHAR, borough_or_census_area VARCHAR)",
        "question": "What was the comment on the Denali area?"
    },
    {
        "answer": "SELECT MIN(_number_s_dam_and_gnis_query_link) FROM table_17978052_2 WHERE borough_or_census_area = \"Nome (CA)\"",
        "context": "CREATE TABLE table_17978052_2 (_number_s_dam_and_gnis_query_link INTEGER, borough_or_census_area VARCHAR)",
        "question": "How many dams are there in the Nome (CA) area?"
    },
    {
        "answer": "SELECT record FROM table_17972193_1 WHERE opponent = \"at Los Angeles Raiders\"",
        "context": "CREATE TABLE table_17972193_1 (record VARCHAR, opponent VARCHAR)",
        "question": "What was the game record when the opponent was 'at Los Angeles Raiders'?"
    },
    {
        "answer": "SELECT COUNT(attendance) FROM table_17972193_1 WHERE game_site = \"Anaheim Stadium\"",
        "context": "CREATE TABLE table_17972193_1 (attendance VARCHAR, game_site VARCHAR)",
        "question": "How many total number of attendance were there when the game was held in Anaheim Stadium?"
    },
    {
        "answer": "SELECT MIN(apps) FROM table_name_79 WHERE country = \"honduras\" AND goals < 2 AND team = \"club deportivo victoria\" AND division > 1",
        "context": "CREATE TABLE table_name_79 (apps INTEGER, division VARCHAR, team VARCHAR, country VARCHAR, goals VARCHAR)",
        "question": "What is the smallest apps in Honduras with less than 2 goals for Club Deportivo Victoria in a division over 1?"
    },
    {
        "answer": "SELECT AVG(grid) FROM table_name_68 WHERE time_retired = \"spun off\" AND laps > 64",
        "context": "CREATE TABLE table_name_68 (grid INTEGER, time_retired VARCHAR, laps VARCHAR)",
        "question": "What's the average Grid for those who spun off after Lap 64?"
    },
    {
        "answer": "SELECT MAX(laps) FROM table_name_42 WHERE constructor = \"tyrrell - yamaha\" AND time_retired = \"+ 1 lap\"",
        "context": "CREATE TABLE table_name_42 (laps INTEGER, constructor VARCHAR, time_retired VARCHAR)",
        "question": "What is the high lap total for tyrrell - yamaha, and a Time/Retired of + 1 lap?"
    },
    {
        "answer": "SELECT format FROM table_name_79 WHERE catalogue = \"9362486152\" AND region = \"australia\"",
        "context": "CREATE TABLE table_name_79 (format VARCHAR, catalogue VARCHAR, region VARCHAR)",
        "question": "What format is the Catalogue 9362486152 from the region of Australia in?"
    },
    {
        "answer": "SELECT AVG(rank__timeslot_) FROM table_name_2 WHERE rating > 2.9 AND rating / SHARE(18 - 49) = 2.6 / 8 AND rank__night_ > 5",
        "context": "CREATE TABLE table_name_2 (rank__timeslot_ INTEGER, rank__night_ VARCHAR, rating VARCHAR)",
        "question": "What is the timeslor rank for the episode with larger than 2.9 rating, rating/share of 2.6/8 and rank for the night higher than 5?"
    },
    {
        "answer": "SELECT MIN(rank__night_) FROM table_name_91 WHERE rating / SHARE(18 - 49) = 2.6 / 8 AND episode > 1",
        "context": "CREATE TABLE table_name_91 (rank__night_ INTEGER, episode VARCHAR, rating VARCHAR)",
        "question": "What is the lowest nightly rank for an episode after episode 1 with a rating/share of 2.6/8?"
    },
    {
        "answer": "SELECT AVG(rank__timeslot_) FROM table_name_97 WHERE rating < 2.6 AND share > 4",
        "context": "CREATE TABLE table_name_97 (rank__timeslot_ INTEGER, rating VARCHAR, share VARCHAR)",
        "question": "What is the timeslot rank when the rating is smaller than 2.6 and the share is more than 4?"
    },
    {
        "answer": "SELECT reason_for_change FROM table_1802760_3 WHERE date_of_successors_formal_installation = \"February 14, 1859\"",
        "context": "CREATE TABLE table_1802760_3 (reason_for_change VARCHAR, date_of_successors_formal_installation VARCHAR)",
        "question": "Why did the change happen in the state where the formal installation happen on February 14, 1859?"
    },
    {
        "answer": "SELECT international_competition FROM table_18042409_1 WHERE national_lacrosse_league = \"Toronto Rock\"",
        "context": "CREATE TABLE table_18042409_1 (international_competition VARCHAR, national_lacrosse_league VARCHAR)",
        "question": "List all the international lacrosse league competitions for Toronto Rock."
    },
    {
        "answer": "SELECT shuji_kondo FROM table_name_90 WHERE mazada = \"x\" AND ryuji_hijikata = \"hijikata (14:24)\"",
        "context": "CREATE TABLE table_name_90 (shuji_kondo VARCHAR, mazada VARCHAR, ryuji_hijikata VARCHAR)",
        "question": "Tell me the Shuji Kondo for MAZADA of X with Ryuji Hijikata of hijikata (14:24)"
    },
    {
        "answer": "SELECT decision FROM table_name_44 WHERE date = \"october 5\"",
        "context": "CREATE TABLE table_name_44 (decision VARCHAR, date VARCHAR)",
        "question": "What was the decision on october 5?"
    },
    {
        "answer": "SELECT city_of_license FROM table_name_52 WHERE frequency_mhz < 107.7 AND call_sign = \"w247aq\"",
        "context": "CREATE TABLE table_name_52 (city_of_license VARCHAR, frequency_mhz VARCHAR, call_sign VARCHAR)",
        "question": "What city of license has a Frequency under 107.7, and a call sign of w247aq?"
    },
    {
        "answer": "SELECT plural_abbreviation FROM table_name_21 WHERE plural_word = \"following lines or pages\"",
        "context": "CREATE TABLE table_name_21 (plural_abbreviation VARCHAR, plural_word VARCHAR)",
        "question": "The plural word of following lines or pages has what plural abbreviation?"
    },
    {
        "answer": "SELECT transcription__based_on_pinyin_ FROM table_1805919_1 WHERE english_translation = \"Alas for the Days Gone By\"",
        "context": "CREATE TABLE table_1805919_1 (transcription__based_on_pinyin_ VARCHAR, english_translation VARCHAR)",
        "question": "What is the Pinyin transcription for \"Alas for the Days Gone By\"?"
    },
    {
        "answer": "SELECT candidate FROM table_name_99 WHERE outcome_of_election = \"lost\" AND number_of_votes = \"770,046\"",
        "context": "CREATE TABLE table_name_99 (candidate VARCHAR, outcome_of_election VARCHAR, number_of_votes VARCHAR)",
        "question": "Which candidate lost the election that 770,046 people voted in?"
    },
    {
        "answer": "SELECT year_[e_] AS __ceremony_ FROM table_18069789_1 WHERE original_title = \"\u10d2\u10d0\u10e6\u10db\u10d0 \u10dc\u10d0\u10de\u10d8\u10e0\u10d8\"",
        "context": "CREATE TABLE table_18069789_1 (year_ VARCHAR, e_ VARCHAR, original_title VARCHAR)",
        "question": "which year was the original title \u10d2\u10d0\u10e6\u10db\u10d0 \u10dc\u10d0\u10de\u10d8\u10e0\u10d8"
    },
    {
        "answer": "SELECT race FROM table_name_57 WHERE winning_horse = \"dominican\" AND distance = \"1-1/16 miles\"",
        "context": "CREATE TABLE table_name_57 (race VARCHAR, winning_horse VARCHAR, distance VARCHAR)",
        "question": "what race did Dominican win with a distance of 1-1/16 miles?"
    },
    {
        "answer": "SELECT year FROM table_name_95 WHERE extra = \"800 m\" AND tournament = \"european indoor championships\" AND result = \"2nd\"",
        "context": "CREATE TABLE table_name_95 (year VARCHAR, result VARCHAR, extra VARCHAR, tournament VARCHAR)",
        "question": "In which year was the Tournament of european indoor championships played where the Extra was 800 m and the Result was 2nd?"
    },
    {
        "answer": "SELECT earnings_per_share__\u00a2_ FROM table_18077713_1 WHERE net_profit__us_$m_ = \"16.2\"",
        "context": "CREATE TABLE table_18077713_1 (earnings_per_share__\u00a2_ VARCHAR, net_profit__us_$m_ VARCHAR)",
        "question": "What is the earnings per share when the net profit is 16.2 million dollars?"
    },
    {
        "answer": "SELECT partner FROM table_name_10 WHERE score_in_the_final = \"2\u20136, 7\u20136, 7\u20136\"",
        "context": "CREATE TABLE table_name_10 (partner VARCHAR, score_in_the_final VARCHAR)",
        "question": "Who is the partner in the final with a score of 2\u20136, 7\u20136, 7\u20136?"
    },
    {
        "answer": "SELECT surface FROM table_name_66 WHERE outcome = \"runner-up\" AND partner = \"ivan lendl\" AND score_in_the_final = \"2\u20136, 6\u20137\"",
        "context": "CREATE TABLE table_name_66 (surface VARCHAR, score_in_the_final VARCHAR, outcome VARCHAR, partner VARCHAR)",
        "question": "On what surface was Ivan Lendl a partner with a runner-up outcome and final score of 2\u20136, 6\u20137?"
    },
    {
        "answer": "SELECT episodes FROM table_18173916_6 WHERE tuesday = \"224 Assassin's Creed: Brotherhood Circus Training\"",
        "context": "CREATE TABLE table_18173916_6 (episodes VARCHAR, tuesday VARCHAR)",
        "question": "What were the dates when 224 Assassin's Creed: Brotherhood Circus Training was shown on Tuesday?"
    },
    {
        "answer": "SELECT away_team AS score FROM table_name_46 WHERE venue = \"western oval\"",
        "context": "CREATE TABLE table_name_46 (away_team VARCHAR, venue VARCHAR)",
        "question": "What was the away team score at western oval?"
    },
    {
        "answer": "SELECT highest_attendance_away FROM table_1816947_2 WHERE average_attendance_home = \"3.123\"",
        "context": "CREATE TABLE table_1816947_2 (highest_attendance_away VARCHAR, average_attendance_home VARCHAR)",
        "question": "When the home attendance is 3.123, what's the highest away attendance?"
    },
    {
        "answer": "SELECT score FROM table_name_53 WHERE runner_up = \"goran ivani\u0161evi\u0107\" AND tournament = \"algarve\"",
        "context": "CREATE TABLE table_name_53 (score VARCHAR, runner_up VARCHAR, tournament VARCHAR)",
        "question": "what was the score when goran ivani\u0161evi\u0107 was runner up and the tournament was in algarve?"
    },
    {
        "answer": "SELECT violent_crime FROM table_1818254_1 WHERE robbery = \"201.4\"",
        "context": "CREATE TABLE table_1818254_1 (violent_crime VARCHAR, robbery VARCHAR)",
        "question": "What was the violent crime rate in the city where the robbery rate was 201.4?"
    },
    {
        "answer": "SELECT COUNT(property_crime) FROM table_1818254_1 WHERE burglary = \"224.8\"",
        "context": "CREATE TABLE table_1818254_1 (property_crime VARCHAR, burglary VARCHAR)",
        "question": "How many cities were there in 2012 where the rate of burglary was 224.8?"
    },
    {
        "answer": "SELECT crowd FROM table_name_1 WHERE date = \"19 july 1980\" AND away_team = \"footscray\"",
        "context": "CREATE TABLE table_name_1 (crowd VARCHAR, date VARCHAR, away_team VARCHAR)",
        "question": "When the Away team footscray played on the Date of 19 july 1980, what was the amount of people in the Crowd?"
    },
    {
        "answer": "SELECT COUNT(series__number) FROM table_18217753_1 WHERE us_viewers__millions_ = \"23.93\"",
        "context": "CREATE TABLE table_18217753_1 (series__number VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "How many series had viewers totaling 23.93 million?"
    },
    {
        "answer": "SELECT COUNT(original_air_date) FROM table_18217753_1 WHERE us_viewers__millions_ = \"26.06\"",
        "context": "CREATE TABLE table_18217753_1 (original_air_date VARCHAR, us_viewers__millions_ VARCHAR)",
        "question": "How many original air dates totaled 26.06 million viewers?"
    },
    {
        "answer": "SELECT COUNT() FROM (VALUES ('apple'),('orange'));",
        "context": "",
        "question": "Task\n\nDetermine the amount of elements in an array.\n\n\n\nAs an example use an array holding the strings 'apple' and 'orange'.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\n-- test.sql\n-- Tested in SQL*plus\n\u00a0\nDROP TABLE test;\n\u00a0\nCREATE TABLE test (a INTEGER, b INTEGER);\n\u00a0\nINSERT INTO test VALUES ('&&A','&&B');\n\u00a0\ncommit;\n\u00a0\nSELECT a-b difference FROM test;\n\u00a0\nSELECT a*b product FROM test;\n\u00a0\nSELECT trunc(a/b) integer_quotient FROM test;  \n\u00a0\nSELECT MOD(a,b) remainder FROM test;\n\u00a0\nSELECT POWER(a,b) exponentiation FROM test;\n\u00a0",
        "context": "",
        "question": "\nBasic Data Operation\n\nThis is a basic data operation. It represents a fundamental action on a basic data type.\nYou may see other such operations in the Basic Data Operations category, or:\n\n\nInteger Operations\nArithmetic |\nComparison\nBoolean Operations\nBitwise |\nLogical\nString Operations\nConcatenation |\nInterpolation |\nComparison |\nMatching\nMemory Operations\nPointers & references |\nAddresses\n\n\nTask\n\nGet two integers from the user, \u00a0 and then (for those two integers), display their:\n\n \u00a0 sum \n \u00a0 difference \n \u00a0 product \n \u00a0 integer quotient\n \u00a0 remainder \n \u00a0 exponentiation \u00a0 (if the operator exists) \n\n\nDon't include error handling.\n\nFor quotient, indicate how it rounds \u00a0 (e.g. towards zero, towards negative infinity, etc.).\n\nFor remainder, indicate whether its sign matches the sign of the first operand or of the second operand, if they are different.\n\n\n\n"
    },
    {
        "answer": "WITH\n  rec (rn, a, g, diff) AS (\n    SELECT  1, 1, 1/SQRT(2), 1 - 1/SQRT(2)\n      FROM  dual\n    UNION ALL\n    SELECT  rn + 1, (a + g)/2, SQRT(a * g), (a + g)/2 - SQRT(a * g)\n      FROM  rec\n      WHERE diff > 1e-38\n  )\nSELECT *\nFROM   rec\nWHERE  diff <= 1e-38\n;",
        "context": "",
        "question": "\n\n This page uses content from Wikipedia. The original article was at Arithmetic-geometric mean. The list of authors can be seen in the page history. As with Rosetta Code, the text of Wikipedia is available under the GNU FDL. (See links for details on variance)\n\n\n\nTask\n\nWrite a function to compute the arithmetic-geometric mean of two numbers.\n\n\n\nThe arithmetic-geometric mean of two numbers can be (usefully) denoted as \n\n\n\n\na\ng\nm\n\n(\na\n,\ng\n)\n\n\n{\\displaystyle \\mathrm {agm} (a,g)}\n\n, and is equal to the limit of the sequence:\n\n \n\n\n\n\na\n\n0\n\n\n=\na\n;\n\n\ng\n\n0\n\n\n=\ng\n\n\n{\\displaystyle a_{0}=a;\\qquad g_{0}=g}\n\n\n \n\n\n\n\na\n\nn\n+\n1\n\n\n=\n\n\n\n1\n2\n\n\n\n(\n\na\n\nn\n\n\n+\n\ng\n\nn\n\n\n)\n;\n\n\ng\n\nn\n+\n1\n\n\n=\n\n\n\na\n\nn\n\n\n\ng\n\nn\n\n\n\n\n.\n\n\n{\\displaystyle a_{n+1}={\\tfrac {1}{2}}(a_{n}+g_{n});\\quad g_{n+1}={\\sqrt {a_{n}g_{n}}}.}\n\n\nSince the limit of \n\n\n\n\na\n\nn\n\n\n\u2212\n\ng\n\nn\n\n\n\n\n{\\displaystyle a_{n}-g_{n}}\n\n tends (rapidly) to zero with iterations, this is an efficient method.\n\nDemonstrate the function by calculating:\n\n\n\n\n\n\na\ng\nm\n\n(\n1\n,\n1\n\n/\n\n\n\n2\n\n\n)\n\n\n{\\displaystyle \\mathrm {agm} (1,1/{\\sqrt {2}})}\n\n\n\n\nAlso see\n\n \u00a0 mathworld.wolfram.com/Arithmetic-Geometric Mean\n\n"
    },
    {
        "answer": "\u00a0\nSQL> SELECT POWER(0,0) FROM dual;\n\u00a0",
        "context": "",
        "question": "Some computer programming languages are not exactly consistent \u00a0 (with other computer programming languages) \u00a0\n\nwhen \u00a0 raising zero to the zeroth power: \u00a0 \u00a0 00\n\n\n\nTask\n\nShow the results of raising \u00a0 zero \u00a0 to the \u00a0 zeroth \u00a0 power.\n\n\n\nIf your computer language objects to \u00a0 \u00a0  0**0  \u00a0 \u00a0 or \u00a0 \u00a0  0^0  \u00a0 \u00a0 at compile time, \u00a0 you may also try something like:\n\n           x = 0\n           y = 0\n           z = x**y\n           say  'z='  z\n\n\nShow the result here.\n\nAnd of course use any symbols or notation that is supported in your computer programming language for exponentiation.\n\n\n\nSee also\n\n The Wiki entry: Zero to the power of zero. \n The Wiki entry: History of differing points of view.\n The MathWorld\u2122 entry: exponent laws.\n Also, in the above MathWorld\u2122 entry, see formula (9): \n\n\n\n\nx\n\n0\n\n\n=\n1\n\n\n{\\displaystyle x^{0}=1}\n\n.\n The OEIS entry: The special case of zero to the zeroth power\n\n"
    },
    {
        "answer": "\u00a0\nDROP PROCEDURE IF EXISTS one_hundred_doors;\n\u00a0\nDELIMITER |\n\u00a0\nCREATE PROCEDURE one_hundred_doors (n INT)\nBEGIN\n  DROP TEMPORARY TABLE IF EXISTS doors; \n  CREATE TEMPORARY TABLE doors (\n    id INTEGER NOT NULL,\n    open BOOLEAN DEFAULT FALSE,\n    PRIMARY KEY (id)\n  );\n\u00a0\n  SET @i = 1;\n  create_doors: LOOP\n    INSERT INTO doors (id, open) values (@i, FALSE);\n    SET @i = @i + 1;\n    IF @i > n THEN\n      LEAVE create_doors;\n    END IF;\n  END LOOP create_doors;\n\u00a0\n  SET @i = 1;\n  toggle_doors: LOOP\n    UPDATE doors SET open = NOT open WHERE MOD(id, @i) = 0;\n    SET @i = @i + 1;\n    IF @i > n THEN\n      LEAVE toggle_doors;\n    END IF;\n  END LOOP toggle_doors;\n\u00a0\n  SELECT id FROM doors WHERE open;\nEND|\n\u00a0\nDELIMITER ;\n\u00a0\nCALL one_hundred_doors(100);\n\u00a0",
        "context": "",
        "question": "There are 100 doors in a row that are all initially closed.\n\nYou make 100 passes by the doors.\n\nThe first time through, visit every door and \u00a0toggle\u00a0 the door \u00a0(if the door is closed, \u00a0open it; \u00a0 if it is open,\u00a0 close it).\n\nThe second time, only visit every 2nd door \u00a0 (door #2, #4, #6, ...), \u00a0 and toggle it.\n\nThe third time, visit every 3rd door \u00a0 (door #3, #6, #9, ...), etc, \u00a0 until you only visit the 100th door.\n\n\n\nTask\n\nAnswer the question: \u00a0 what state are the doors in after the last pass? \u00a0 Which are open, which are closed?\n\n\nAlternate:\nAs noted in this page's \u00a0 discussion page, \u00a0 the only doors that remain open are those whose numbers are perfect squares.\n\nOpening only those doors is an \u00a0 optimization \u00a0 that may also be expressed;\nhowever, as should be obvious, this defeats the intent of comparing implementations across programming languages.\n\n\n\n"
    },
    {
        "answer": "SELECT           ' SSS\\ ' AS s, ' QQQ\\  ' AS q, 'L\\   ' AS l  FROM dual\nUNION ALL SELECT 'S   \\|',      'Q   Q\\ ',      'L |  '       FROM dual\nUNION ALL SELECT '\\SSS  ',      'Q   Q |',      'L |  '       FROM dual\nUNION ALL SELECT ' \\  S\\',      'Q Q Q |',      'L |  '       from dual\nunion all select ' SSS |',      '\\QQQ\\\\|',      'LLLL\\'       from dual\nunion all select ' \\__\\/',      ' \\_Q_/ ',      '\\___\\'       from dual\nunion all select '      ',      '   \\\\  ',      '     '       from dual;",
        "context": "",
        "question": "Task\n\nWrite/display a language's name in 3D ASCII.\n\n\n\n(We can leave the definition of \"3D ASCII\" fuzzy,\nso long as the result is interesting or amusing,\nnot a cheap hack to satisfy the task.)\n\n\n\nRelated tasks\n\n draw a sphere\n draw a cuboid\n draw a rotating cube\n draw a Deathstar\n\n"
    },
    {
        "answer": "\u00a0\nDECLARE\n  TYPE doorsarray IS VARRAY(100) OF BOOLEAN;\n  doors doorsarray := doorsarray();\nBEGIN\n\u00a0\ndoors.EXTEND(100);  --ACCOMMODATE 100 DOORS\n\u00a0\nFOR i IN 1 .. doors.COUNT  --MAKE ALL 100 DOORS FALSE TO INITIALISE\n  LOOP\n     doors(i) := FALSE;                    \n  END LOOP;\n\u00a0\nFOR j IN 1 .. 100 --ITERATE THRU USING MOD LOGIC AND FLIP THE DOOR RIGHT OPEN OR CLOSE\n LOOP\n      FOR k IN 1 .. 100\n        LOOP\n                  IF MOD(k,j)=0 THEN \n                     doors(k) := NOT doors(k); \n                  END IF;\n        END LOOP;\n END LOOP;\n\u00a0\nFOR l IN 1 .. doors.COUNT  --PRINT THE STATUS IF ALL 100 DOORS AFTER ALL ITERATION\n  LOOP\n       DBMS_OUTPUT.PUT_LINE('DOOR '||l||' IS -->> '||CASE WHEN SYS.DBMS_SQLTCB_INTERNAL.I_CONVERT_FROM_BOOLEAN(doors(l)) = 'TRUE' \n                                                                THEN 'OPEN' \n                                                              ELSE 'CLOSED' \n                                                        END);\n  END LOOP;\n\u00a0\nEND;\n\u00a0",
        "context": "",
        "question": "There are 100 doors in a row that are all initially closed.\n\nYou make 100 passes by the doors.\n\nThe first time through, visit every door and \u00a0toggle\u00a0 the door \u00a0(if the door is closed, \u00a0open it; \u00a0 if it is open,\u00a0 close it).\n\nThe second time, only visit every 2nd door \u00a0 (door #2, #4, #6, ...), \u00a0 and toggle it.\n\nThe third time, visit every 3rd door \u00a0 (door #3, #6, #9, ...), etc, \u00a0 until you only visit the 100th door.\n\n\n\nTask\n\nAnswer the question: \u00a0 what state are the doors in after the last pass? \u00a0 Which are open, which are closed?\n\n\nAlternate:\nAs noted in this page's \u00a0 discussion page, \u00a0 the only doors that remain open are those whose numbers are perfect squares.\n\nOpening only those doors is an \u00a0 optimization \u00a0 that may also be expressed;\nhowever, as should be obvious, this defeats the intent of comparing implementations across programming languages.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nDECLARE\t@sqr INT,\n\t\t@i INT,\n\t\t@door INT;\n\u00a0\nSELECT @sqr =1,\n\t@i = 3,\n\t@door = 1;\t\n\u00a0\nWHILE(@door <=100)\nBEGIN\n\tIF(@door = @sqr)\n\tBEGIN\n\t\tPRINT 'Door ' + RTRIM(CAST(@door AS CHAR)) + ' is open.';\n\t\tSET @sqr= @sqr+@i;\n\t\tSET @i=@i+2;\n\tEND\n\tELSE\n\tBEGIN\n\t\tPRINT 'Door ' + RTRIM(CONVERT(CHAR,@door)) + ' is closed.';\n\tEND\nSET @door = @door + 1\nEND\n\u00a0\n\u00a0",
        "context": "",
        "question": "There are 100 doors in a row that are all initially closed.\n\nYou make 100 passes by the doors.\n\nThe first time through, visit every door and \u00a0toggle\u00a0 the door \u00a0(if the door is closed, \u00a0open it; \u00a0 if it is open,\u00a0 close it).\n\nThe second time, only visit every 2nd door \u00a0 (door #2, #4, #6, ...), \u00a0 and toggle it.\n\nThe third time, visit every 3rd door \u00a0 (door #3, #6, #9, ...), etc, \u00a0 until you only visit the 100th door.\n\n\n\nTask\n\nAnswer the question: \u00a0 what state are the doors in after the last pass? \u00a0 Which are open, which are closed?\n\n\nAlternate:\nAs noted in this page's \u00a0 discussion page, \u00a0 the only doors that remain open are those whose numbers are perfect squares.\n\nOpening only those doors is an \u00a0 optimization \u00a0 that may also be expressed;\nhowever, as should be obvious, this defeats the intent of comparing implementations across programming languages.\n\n\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON @\n\u00a0\nBEGIN\n DECLARE TYPE DOORS_ARRAY AS BOOLEAN ARRAY [100];\n DECLARE DOORS DOORS_ARRAY;\n DECLARE I SMALLINT;\n DECLARE J SMALLINT;\n DECLARE STATUS CHAR(10);\n DECLARE SIZE SMALLINT DEFAULT 100;\n\u00a0\n -- Initializes the array, with all spaces (doors) as false (closed).\n SET I = 1;\n WHILE (I <= SIZE) DO\n  SET DOORS[I] = FALSE;\n  SET I = I + 1;\n END WHILE;\n\u00a0\n -- Processes the doors.\n SET I = 1;\n WHILE (I <= SIZE) DO\n  SET J = 1;\n  WHILE (J <= SIZE) DO\n   IF (MOD(J, I) = 0) THEN\n    IF (DOORS[J] = TRUE) THEN\n     SET DOORS[J] = FALSE;\n    ELSE\n     SET DOORS[J] = TRUE;\n    END IF;\n   END IF;\n   SET J = J + 1;\n  END WHILE;\n  SET I = I + 1;\n END WHILE;\n\u00a0\n -- Prints the final status o the doors.\n SET I = 1;\n WHILE (I <= SIZE) DO\n  SET STATUS = (CASE WHEN (DOORS[I] = TRUE) THEN 'OPEN' ELSE 'CLOSED' END);\n  CALL DBMS_OUTPUT.PUT_LINE('Door ' || I || ' is '|| STATUS);\n  SET I = I + 1;\n END WHILE;\nEND @\n\u00a0",
        "context": "",
        "question": "There are 100 doors in a row that are all initially closed.\n\nYou make 100 passes by the doors.\n\nThe first time through, visit every door and \u00a0toggle\u00a0 the door \u00a0(if the door is closed, \u00a0open it; \u00a0 if it is open,\u00a0 close it).\n\nThe second time, only visit every 2nd door \u00a0 (door #2, #4, #6, ...), \u00a0 and toggle it.\n\nThe third time, visit every 3rd door \u00a0 (door #3, #6, #9, ...), etc, \u00a0 until you only visit the 100th door.\n\n\n\nTask\n\nAnswer the question: \u00a0 what state are the doors in after the last pass? \u00a0 Which are open, which are closed?\n\n\nAlternate:\nAs noted in this page's \u00a0 discussion page, \u00a0 the only doors that remain open are those whose numbers are perfect squares.\n\nOpening only those doors is an \u00a0 optimization \u00a0 that may also be expressed;\nhowever, as should be obvious, this defeats the intent of comparing implementations across programming languages.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nWITH    OneToTen (N)\nAS  (   SELECT  N\n        FROM (  VALUES (0), (1), (2), (3), (4), (5), (6), (7), (8), (9)\n                ) V(N)\n        )\n    ,   InitDoors (Num, IsOpen)\nAS  (   SELECT  1\n            +   1 * Units.N\n            +   10 * Tens.N AS Num\n            ,   CONVERT(Bit, 0) AS IsOpen\n        FROM    OneToTen AS Units\n        CROSS JOIN  OneToTen AS Tens\n        ) -- This part could be easier with a tally table or equivalent table-valued function\n    ,   States (NbStep, Num, IsOpen)\nAS  (   SELECT  0 AS NbStep\n            ,   Num\n            ,   IsOpen\n        FROM    InitDoors AS InitState\n        UNION ALL\n        SELECT  1 + NbStep\n            ,   Num\n            ,   CASE Num\u00a0% (1 + NbStep)\n                    WHEN 0 THEN ~IsOpen\n                    ELSE IsOpen\n                END\n        FROM    States\n        WHERE   NbStep < 100\n        )\nSELECT  Num AS DoorNumber\n    ,   Concat( 'Door number ', Num, ' is '\n            ,   CASE IsOpen\n                    WHEN 1 THEN ' open'\n                    ELSE ' closed'\n                END ) AS RESULT -- Concat needs SQL Server 2012\nFROM    States\nWHERE   NbStep = 100\nORDER BY Num\n; -- Fortunately, maximum recursion is 100 in SQL Server.\n-- For more doors, the MAXRECURSION hint should be used.\n-- More doors would also need an InitDoors with more rows.\n\u00a0",
        "context": "",
        "question": "There are 100 doors in a row that are all initially closed.\n\nYou make 100 passes by the doors.\n\nThe first time through, visit every door and \u00a0toggle\u00a0 the door \u00a0(if the door is closed, \u00a0open it; \u00a0 if it is open,\u00a0 close it).\n\nThe second time, only visit every 2nd door \u00a0 (door #2, #4, #6, ...), \u00a0 and toggle it.\n\nThe third time, visit every 3rd door \u00a0 (door #3, #6, #9, ...), etc, \u00a0 until you only visit the 100th door.\n\n\n\nTask\n\nAnswer the question: \u00a0 what state are the doors in after the last pass? \u00a0 Which are open, which are closed?\n\n\nAlternate:\nAs noted in this page's \u00a0 discussion page, \u00a0 the only doors that remain open are those whose numbers are perfect squares.\n\nOpening only those doors is an \u00a0 optimization \u00a0 that may also be expressed;\nhowever, as should be obvious, this defeats the intent of comparing implementations across programming languages.\n\n\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON @\n\u00a0\nCREATE OR REPLACE FUNCTION VALIDATE_ISIN (\n  IN IDENTIFIER VARCHAR(12)\n ) RETURNS SMALLINT\n -- ) RETURNS BOOLEAN\n BEGIN\n  DECLARE CHECKSUM_FUNC CHAR(1);\n  DECLARE CONVERTED VARCHAR(24);\n  DECLARE I SMALLINT;\n  DECLARE LENGTH SMALLINT;\n  DECLARE RET SMALLINT DEFAULT 1;\n  --DECLARE RET BOOLEAN DEFAULT FALSE;\n  DECLARE CHAR_AT CHAR(1);\n  DECLARE INVALID_CHAR CONDITION FOR SQLSTATE 'ISIN1';\n\u00a0\n  SET CHAR_AT = SUBSTR(IDENTIFIER, 1, 1);\n  IF (ASCII(CHAR_AT) < 65 OR 90 < ASCII(CHAR_AT)) THEN\n   SIGNAL INVALID_CHAR SET MESSAGE_TEXT = 'Country code with invalid characters';\n  END IF;\n  SET CHAR_AT = SUBSTR(IDENTIFIER, 2, 1);\n  IF (ASCII(CHAR_AT) < 65 OR 90 < ASCII(CHAR_AT)) THEN\n   SIGNAL INVALID_CHAR SET MESSAGE_TEXT = 'Country code with invalid characters';\n  END IF;\n\u00a0\n  -- Convert letters to numbers.\n  SET I = 1;\n  SET CONVERTED = '';\n  SET LENGTH = LENGTH(IDENTIFIER);\n  WHILE (I <= LENGTH) DO\n   SET CHAR_AT = SUBSTR(IDENTIFIER, I, 1);\n   IF (48 <= ASCII(CHAR_AT) AND ASCII(CHAR_AT) <= 57) THEN\n    SET CONVERTED = CONVERTED || CHAR_AT;\n   ELSE\n    SET CONVERTED = CONVERTED || (ASCII(CHAR_AT) - 55);\n   END IF;\n   SET I = I + 1;\n  END WHILE;\n\u00a0\n  CALL DBMS_OUTPUT.PUT_LINE(CONVERTED);\n\u00a0\n  -- This function is implemented in Rosetta code.\n  SET CHECKSUM_FUNC = LUHN_TEST(CONVERTED);\n  IF (CHECKSUM_FUNC = 0) THEN\n   SET RET = 0;\n   --SET RET = TRUE;\n  END IF;\n\u00a0\n  RETURN RET;\n END @\n\u00a0",
        "context": "",
        "question": "An International Securities Identification Number (ISIN) is a unique international identifier for a financial security such as a stock or bond.\n\n\n\nTask\n\nWrite a function or program that takes a string as input, and checks whether it is a valid ISIN.\n\nIt is only valid if it has the correct format, \u00a0 and \u00a0 the embedded checksum is correct.\n\nDemonstrate that your code passes the test-cases listed below.\n\n\n\nDetails\n\nThe format of an ISIN is as follows:\n\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 a 2-character ISO country code (A-Z)\n\u2502\u00a0\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 a 9-character security code (A-Z, 0-9)\n\u2502\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u250c\u2500\u2500 a checksum digit (0-9)\nAU0000XVGZA3\n\n\n\nFor this task, you may assume that any 2-character alphabetic sequence is a valid country code.\n\nThe checksum can be validated as follows:\n\n Replace letters with digits, by converting each character from base 36 to base 10, e.g. AU0000XVGZA3 \u21921030000033311635103.\n Perform the Luhn test on this base-10 number.\nThere is a separate task for this test: Luhn test of credit card numbers.\nYou don't have to replicate the implementation of this test here \u00a0 \u2500\u2500\u2500 \u00a0 you can just call the existing function from that task. \u00a0 (Add a comment stating if you did this.)\n\n\nTest cases\n\n\n\n ISIN\n\n Validity\n\n Comment\n\n\n US0378331005 \n valid \n\n\n\n US0373831005 \n not valid \n The transposition typo is caught by the checksum constraint.\n\n\n U50378331005 \n not valid \n The substitution typo is caught by the format constraint.\n\n\n US03378331005 \n not valid \n The duplication typo is caught by the format constraint.\n\n\n AU0000XVGZA3 \n valid \n\n\n\n AU0000VXGZA3 \n valid \n Unfortunately, not all transposition typos are caught by the checksum constraint.\n\n\n FR0000988040 \n valid \n\n\n(The comments are just informational. \u00a0 Your function should simply return a Boolean result. \u00a0 See #Raku for a reference solution.)\n\n\n\nRelated task:\n\n Luhn test of credit card numbers\n\n\nAlso see\n\n Interactive online ISIN validator\n Wikipedia article: International Securities Identification Number\n\n"
    },
    {
        "answer": "\u00a0\nCREATE FUNCTION dbo._ISINCheck( @strISIN VarChar(40) )\nRETURNS bit\nAS\nBEGIN\n--*** Test an ISIN code and return 1 if it is valid, 0 if invalid.\nDECLARE @bValid\t bit;\n\u00a0\nSET @bValid = CASE WHEN @strISIN LIKE '[A-Z][A-Z][A-Z,0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][A-Z,0-9][0-9]' THEN 1 ELSE 0 END\nIF @bValid = 1\n\tBEGIN\n\t\tDECLARE @strTest VarChar(40) = '';\n\t\tDECLARE @strAdd  VarChar(2);\n\t\tDECLARE @p INT = 0;\n\t\tWHILE @p < LEN(@strISIN)\n\t\t\tBEGIN\n\t\t\t\tSET @p = @p+1;\n\t\t\t\tSET @strAdd = SUBSTRING(@strISIN,@p,1);\n\t\t\t\tIF @strAdd LIKE '[A-Z]' SET @strAdd = CONVERT(VarChar(2),ASCII(UPPER(@strAdd))-55);\n\t\t\t\tSET @strTest = @strTest + @strAdd;\n\t\t\tEND;\n\u00a0\n\t\t-- Proceed with Luhn test\n\t\tDECLARE @strLuhn VarChar(40) = REVERSE(@strTest); -- usage: set once, never changed\n\t\tDECLARE @strS2Values VarChar(10) = '0246813579';  -- constant: maps digits to their S2 summed values\n\t\tSET @p = 0; -- reset loop counter\n\t\tDECLARE @intValue INT;\n\t\tDECLARE @intSum\tINT = 0;\n\t\t-- loop through the reversed string, get the value (even-positioned digits are mapped) and add it to @intSum\n\t\tWHILE @p < LEN(@strLuhn)\n\t\t\tBEGIN\n\t\t\t\tSET @p = @p+1;\n\t\t\t\tSET @intValue = CONVERT(INT, SUBSTRING(@strLuhn,@p,1) ) -- value of the digit at position @p in the string\n\t\t\t\tIF @p\u00a0% 2 = 0\tSET @intValue = CONVERT(INT,SUBSTRING(@strS2Values,@intValue+1,1))\n\t\t\t\tSET @intSum = @intSum + @intValue\n\t\t\tEND\n\t\t-- If the of the digits' mapped values ends in 0 (modulo 10 = 0) then the Luhn test succeeds\n\t\tSET @bValid = CASE WHEN @intSum\u00a0% 10 = 0 THEN 1 ELSE 0 END \n\tEND;\n\u00a0\nRETURN @bValid\nEND\n\u00a0",
        "context": "",
        "question": "An International Securities Identification Number (ISIN) is a unique international identifier for a financial security such as a stock or bond.\n\n\n\nTask\n\nWrite a function or program that takes a string as input, and checks whether it is a valid ISIN.\n\nIt is only valid if it has the correct format, \u00a0 and \u00a0 the embedded checksum is correct.\n\nDemonstrate that your code passes the test-cases listed below.\n\n\n\nDetails\n\nThe format of an ISIN is as follows:\n\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 a 2-character ISO country code (A-Z)\n\u2502\u00a0\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 a 9-character security code (A-Z, 0-9)\n\u2502\u00a0\u2502\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u250c\u2500\u2500 a checksum digit (0-9)\nAU0000XVGZA3\n\n\n\nFor this task, you may assume that any 2-character alphabetic sequence is a valid country code.\n\nThe checksum can be validated as follows:\n\n Replace letters with digits, by converting each character from base 36 to base 10, e.g. AU0000XVGZA3 \u21921030000033311635103.\n Perform the Luhn test on this base-10 number.\nThere is a separate task for this test: Luhn test of credit card numbers.\nYou don't have to replicate the implementation of this test here \u00a0 \u2500\u2500\u2500 \u00a0 you can just call the existing function from that task. \u00a0 (Add a comment stating if you did this.)\n\n\nTest cases\n\n\n\n ISIN\n\n Validity\n\n Comment\n\n\n US0378331005 \n valid \n\n\n\n US0373831005 \n not valid \n The transposition typo is caught by the checksum constraint.\n\n\n U50378331005 \n not valid \n The substitution typo is caught by the format constraint.\n\n\n US03378331005 \n not valid \n The duplication typo is caught by the format constraint.\n\n\n AU0000XVGZA3 \n valid \n\n\n\n AU0000VXGZA3 \n valid \n Unfortunately, not all transposition typos are caught by the checksum constraint.\n\n\n FR0000988040 \n valid \n\n\n(The comments are just informational. \u00a0 Your function should simply return a Boolean result. \u00a0 See #Raku for a reference solution.)\n\n\n\nRelated task:\n\n Luhn test of credit card numbers\n\n\nAlso see\n\n Interactive online ISIN validator\n Wikipedia article: International Securities Identification Number\n\n"
    },
    {
        "answer": "WITH recursive a(a) AS (SELECT '0' UNION ALL SELECT REPLACE(REPLACE(hex(a),'30','01'),'31','10') FROM a) SELECT * FROM a;",
        "context": "",
        "question": "Task\n\nCreate a Thue-Morse sequence.\n\n\n\nSee also\n \u00a0 YouTube entry: The Fairest Sharing Sequence Ever\n \u00a0 YouTube entry: Math and OCD - My story with the Thue-Morse sequence\n \u00a0 Task: Fairshare between two and more\n\n"
    },
    {
        "answer": "CREATE OR REPLACE PROCEDURE \"Top rank per group\"(TOP_N IN PLS_INTEGER DEFAULT 3) AS\n  CURSOR CSR_EMP(TOP_N PLS_INTEGER) IS\n    SELECT CASE LINE\n             WHEN 10 THEN\n              'Tot.' || LPAD(POPULATION, 2) || ' Employees in ' || TIE_COUNT ||\n              ' deps.Avg salary:' || TO_CHAR(SALARY, '99990.99')\n             WHEN 30 THEN\n              '-'\n             WHEN 50 THEN\n              'Department: ' || DEPT_ID || ', pop: ' || POPULATION ||\n              '. Avg Salary: ' || TO_CHAR(SALARY, '99990.99')\n             WHEN 70 THEN\n              LPAD('Employee ID', 14) || LPAD('Employee name', 20) ||\n              LPAD('Salary', 9) || 'Rank'\n             WHEN 90 THEN\n              LPAD('+', 14, '-') || LPAD('+', 20, '-') || LPAD('+', 9, '-') ||\n              LPAD('+', 4, '-')\n             ELSE\n              LPAD(' ', 8) || LPAD(EMP_ID, 6) || LPAD(EMP_NAME, 20) ||\n              TO_CHAR(SALARY, '99990.99') ||\n              LPAD(CASE WHEN TIE_COUNT = 1 THEN  ' ' ELSE 'T' END || RANK, 4)\n           END \"Top rank per group\"\n      FROM (SELECT 10 LINE\n                  ,NULL EMP_ID\n                  ,NULL EMP_NAME\n                  ,' ' DEPT_ID\n                  ,AVG(SALARY) SALARY\n                  ,0 RANK\n                  ,COUNT(DISTINCT DEPT_ID) TIE_COUNT\n                  ,COUNT(*) POPULATION\n              FROM EMP\n            UNION ALL\n            SELECT 30      LINE\n                  ,NULL    EMP_ID\n                  ,NULL    EMP_NAME\n                  ,DEPT_ID\n                  ,0       SALARY\n                  ,0       RANK\n                  ,0       TIE_COUNT\n                  ,0       POPULATION\n              FROM EMP\n             GROUP BY DEPT_ID\n            UNION ALL\n            SELECT 50 LINE\n                  ,NULL EMP_ID\n                  ,NULL EMP_NAME\n                  ,DEPT_ID\n                  ,AVG(SALARY) SALARY\n                  ,0 RANK\n                  ,0 TIE_COUNT\n                  ,COUNT(*) POPULATION\n              FROM EMP\n             GROUP BY DEPT_ID\n            UNION ALL\n            SELECT 70      LINE\n                  ,NULL    EMP_ID\n                  ,NULL    EMP_NAME\n                  ,DEPT_ID\n                  ,0       SALARY\n                  ,0       RANK\n                  ,0       TIE_COUNT\n                  ,0       POPULATION\n              FROM EMP\n             GROUP BY DEPT_ID\n            UNION ALL\n            SELECT 90      LINE\n                  ,NULL    EMP_ID\n                  ,NULL    EMP_NAME\n                  ,DEPT_ID\n                  ,0       SALARY\n                  ,0       RANK\n                  ,0       TIE_COUNT\n                  ,0       POPULATION\n              FROM EMP\n             GROUP BY DEPT_ID\n            UNION ALL\n            SELECT 110 LINE\n                  ,EMP_ID\n                  ,EMP_NAME\n                  ,DEPT_ID\n                  ,SALARY\n                  ,(SELECT COUNT(DISTINCT EMP4.SALARY)\n                      FROM EMP EMP4\n                     WHERE EMP4.DEPT_ID = EMP3.DEPT_ID\n                       AND EMP4.SALARY >= EMP3.SALARY) RANK\n                  ,(SELECT COUNT(*)\n                      FROM EMP EMP2\n                     WHERE EMP2.DEPT_ID = EMP3.DEPT_ID\n                       AND EMP2.SALARY = EMP3.SALARY) TIE_COUNT\n                  ,0 POPULATION\n              FROM EMP EMP3\n             WHERE TOP_N >= -- Here is the meat, Correlated subquery\n                   (SELECT COUNT(DISTINCT EMP4.SALARY)\n                      FROM EMP EMP4\n                     WHERE EMP4.DEPT_ID = EMP3.DEPT_ID\n                       AND EMP4.SALARY >= EMP3.SALARY))\n     ORDER BY DEPT_ID\n             ,LINE\n             ,SALARY DESC\n             ,EMP_ID;\n\u00a0\n  V_EMP CSR_EMP%ROWTYPE;\nBEGIN\n  FOR V_EMP IN CSR_EMP(TOP_N)\n  LOOP\n    DBMS_OUTPUT.PUT_LINE(v_emp.\"Top rank per group\");\n  END LOOP;\nEND;",
        "context": "",
        "question": "Task\n\nFind the top \u00a0 N \u00a0 salaries in each department, \u00a0 where \u00a0 N \u00a0 is provided as a parameter.\n\nUse this data as a formatted internal data structure (adapt it to your language-native idioms, rather than parse at runtime), or identify your external data source:\n\nEmployee Name,Employee ID,Salary,Department\nTyler Bennett,E10297,32000,D101\nJohn Rappl,E21437,47000,D050\nGeorge Woltman,E00127,53500,D101\nAdam Smith,E63535,18000,D202\nClaire Buckman,E39876,27800,D202\nDavid McClellan,E04242,41500,D101\nRich Holcomb,E01234,49500,D202\nNathan Adams,E41298,21900,D050\nRichard Potter,E43128,15900,D101\nDavid Motsinger,E27002,19250,D202\nTim Sampair,E03033,27000,D101\nKim Arlich,E10001,57000,D190\nTimothy Grove,E16398,29900,D190\n\n\n"
    },
    {
        "answer": "DECLARE\n  pi NUMBER := 4 * ATAN(1);\n  radians NUMBER := pi / 4;\n  degrees NUMBER := 45.0;\nBEGIN\n  DBMS_OUTPUT.put_line(SIN(radians) || ' ' || SIN(degrees * pi/180) );\n  DBMS_OUTPUT.put_line(COS(radians) || ' ' || COS(degrees * pi/180) );\n  DBMS_OUTPUT.put_line(TAN(radians) || ' ' || TAN(degrees * pi/180) );\n  DBMS_OUTPUT.put_line(ASIN(SIN(radians)) || ' ' || ASIN(SIN(degrees * pi/180)) * 180/pi);\n  DBMS_OUTPUT.put_line(ACOS(COS(radians)) || ' ' || ACOS(COS(degrees * pi/180)) * 180/pi);\n  DBMS_OUTPUT.put_line(ATAN(TAN(radians)) || ' ' || ATAN(TAN(degrees * pi/180)) * 180/pi);\nEND;",
        "context": "",
        "question": "Task\n\nIf your language has a library or built-in functions for trigonometry, show examples of:\n\n \u00a0 sine\n \u00a0 cosine\n \u00a0 tangent\n \u00a0 inverses \u00a0 (of the above)\n\nusing the same angle in radians and degrees.\n\nFor the non-inverse functions, \u00a0 each radian/degree pair should use arguments that evaluate to the same angle \u00a0 (that is, it's not necessary to use the same angle for all three regular functions as long as the two sine calls use the same angle).\n\nFor the inverse functions, \u00a0 use the same number and convert its answer to radians and degrees.\n\nIf your language does not have trigonometric functions available or only has some available, \u00a0 write functions to calculate the functions based on any \u00a0 known approximation or identity.\n\n\n\n"
    },
    {
        "answer": "\u00a0\n--Setup\nDROP TABLE IF EXISTS board;\nCREATE TABLE board (p CHAR, r INTEGER, c INTEGER);\nINSERT INTO board VALUES('.', 0, 0),('.', 0, 1),('.', 0, 2),('.', 1, 0),('.', 1, 1),('.', 1, 2),('.', 2, 0),('.', 2, 1),('.', 2, 2);\n\u00a0\n\u00a0\n-- Use a trigger for move events\nDROP TRIGGER IF EXISTS after_moved;\nCREATE TRIGGER after_moved after UPDATE ON board FOR each ROW WHEN NEW.p <> '.' AND NEW.p <> 'O'\nBEGIN\n\u00a0\n    -- Verify move is valid\n    SELECT \n        CASE        \n            WHEN (SELECT v FROM msg) LIKE '%Wins!' THEN raise(ABORT, 'The game is already over.')               \n            WHEN (SELECT OLD.p FROM board WHERE rowid = rid) <> '.' THEN raise(ABORT, 'That position has already been taken.  Please choose an available position.')            \n            WHEN NEW.p <> 'X' THEN raise(ABORT, 'Please place an ''X''')\n        END \n    FROM (\n        SELECT rowid rid FROM board\n        WHERE p = NEW.p\n        EXCEPT \n        SELECT p FROM board WHERE p = OLD.p\n    );\n\u00a0\n\u00a0\n    -- Check for game over\n    UPDATE msg SET v = (\n        SELECT \n            CASE                                    \n                WHEN MAX(num) >= 3 THEN 'X Wins!'\n                WHEN (SELECT COUNT(*) FROM board WHERE p = '.') = 0 THEN 'Cat Wins!'\n                ELSE 'Move made'\n            END \n        FROM ( -- Is Game Over\n            SELECT COUNT(*) num FROM board WHERE p = 'X' GROUP BY r UNION -- Horz\n            SELECT COUNT(*) num FROM board WHERE p = 'X' GROUP BY c UNION -- Vert\n            SELECT COUNT(*) num FROM board WHERE p = 'X' AND r = c UNION -- Diag TL->BR\n            SELECT COUNT(*) num FROM board WHERE p = 'X' AND (2-r) = c -- Diag TR->BL\n        )\n    );\n\u00a0\n\u00a0\n    --Have computer player make a random move\n    UPDATE board SET p = 'O' \n    WHERE rowid = (SELECT rid FROM (SELECT MAX(rnd),rid FROM (SELECT rowid rid, random() rnd FROM board WHERE p = '.')))\n    AND (SELECT v FROM msg) NOT LIKE '%Wins!';\n    --NOTE: SQLite doesn't allow update order by in triggers, otherwise we could just use this beautiful line:\n    -- update board set p = 'O' where p = '.' order by random() limit 1;\n\u00a0\n    --Check to see if the computer player won\n    UPDATE msg SET v = (\n        SELECT \n            CASE                                    \n                WHEN MAX(num) >= 3 THEN 'O Wins!'   \n                ELSE v\n            END \n        FROM ( -- Is Game Over\n            SELECT COUNT(*) num FROM board WHERE p = 'O' GROUP BY r UNION -- Horz\n            SELECT COUNT(*) num FROM board WHERE p = 'O' GROUP BY c UNION -- Vert\n            SELECT COUNT(*) num FROM board WHERE p = 'O' AND r = c UNION -- Diag TL->BR\n            SELECT COUNT(*) num FROM board WHERE p = 'O' AND (2-r) = c -- Diag TR->BL\n        )\n    );\n\u00a0\n\u00a0\nEND;\n\u00a0\n-- UI to display the logical board as a grid\nDROP VIEW IF EXISTS ui;\nCREATE VIEW ui AS\nSELECT CASE WHEN p = '.' THEN col0.rowid ELSE p END c0, c1, c2\nFROM board AS col0 \nJOIN (SELECT CASE WHEN p = '.' THEN board.rowid ELSE p END c1, r FROM board WHERE c = 1) AS col1 ON col0.r = col1.r\nJOIN (SELECT CASE WHEN p = '.' THEN board.rowid ELSE p END  c2, r FROM board WHERE c = 2) AS col2 ON col0.r = col2.r\nWHERE c = 0;\n\u00a0\nDROP TABLE IF EXISTS msg;\nCREATE TABLE msg (v text);\nINSERT INTO msg VALUES('');\n\u00a0\n-- Readme\nSELECT * FROM ui;\n.print \"Use this to play:\"\n.print \"->update board set p = 'X' where rowid =\u00a0?; select * from ui; select * from msg;\"'\n\u00a0\n",
        "context": "",
        "question": "\nTask\n\nPlay a game of tic-tac-toe.\n\nEnsure that legal moves are played and that a winning position is notified.\n\n\nTic-tac-toe \u00a0 is also known as:\n\n \u00a0 naughts and crosses \n \u00a0 tic tac toe \n \u00a0 tick tack toe \n \u00a0 three in a row \n \u00a0 tres en rayo \u00a0 \u00a0 \u00a0 and\n \u00a0 Xs \u00a0and\u00a0 Os\n\n\nSee also\n \u00a0 MathWorld\u2122, Tic-Tac-Toe game.\n \u00a0 Wikipedia tic-tac-toe.\n\n"
    },
    {
        "answer": "\u00a0\n--Conversion\nVALUES degrees(3.1415926);\nVALUES radians(180);\n-- This is equal to Pi.\n\u00a0\n--PI/4 45\nVALUES sin(radians(180)/4);\nVALUES sin(radians(45));\nVALUES cos(radians(180)/4);\nVALUES cos(radians(45));\nVALUES tan(radians(180)/4);\nVALUES tan(radians(45));\nVALUES cot(radians(180)/4);\nVALUES cot(radians(45));\nVALUES asin(sin(radians(180)/4));\nVALUES asin(sin(radians(45)));\nVALUES atan(tan(radians(180)/4));\nVALUES atan(tan(radians(45)));\n\u00a0\n--PI/3 60\nVALUES sin(radians(180)/3);\nVALUES sin(radians(60));\nVALUES cos(radians(180)/3);\nVALUES cos(radians(60));\nVALUES tan(radians(180)/3);\nVALUES tan(radians(60));\nVALUES cot(radians(180)/3);\nVALUES cot(radians(60));\nVALUES asin(sin(radians(180)/3));\nVALUES asin(sin(radians(60)));\nVALUES atan(tan(radians(180)/3));\nVALUES atan(tan(radians(60)));\n\u00a0",
        "context": "",
        "question": "Task\n\nIf your language has a library or built-in functions for trigonometry, show examples of:\n\n \u00a0 sine\n \u00a0 cosine\n \u00a0 tangent\n \u00a0 inverses \u00a0 (of the above)\n\nusing the same angle in radians and degrees.\n\nFor the non-inverse functions, \u00a0 each radian/degree pair should use arguments that evaluate to the same angle \u00a0 (that is, it's not necessary to use the same angle for all three regular functions as long as the two sine calls use the same angle).\n\nFor the inverse functions, \u00a0 use the same number and convert its answer to radians and degrees.\n\nIf your language does not have trigonometric functions available or only has some available, \u00a0 write functions to calculate the functions based on any \u00a0 known approximation or identity.\n\n\n\n"
    },
    {
        "answer": "CREATE TABLE EMP\n(\nEMP_ID  varchar2(6 CHAR),\nEMP_NAMEvarchar2(20 CHAR),\nDEPT_ID varchar2(4 CHAR),\nSALARY  NUMBER(10,2)\n);\n\u00a0\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E21437','John Rappl','D050',47000);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E10297','Tyler Bennett','D101',32000);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E00127','George Woltman','D101',53500);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E63535','Adam Smith','D202',18000);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E39876','Claire Buckman','D202',27800);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E04242','David McClellan','D101',41500);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E41298','Nathan Adams','D050',21900);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E43128','Richard Potter','D101',15900);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E27002','David Motsinger','D202',19250);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E03033','Tim Sampair','D101',27000);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E10001','Kim Arlich','D190',57000);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E16398','Timothy Grove','D190',29900);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E01234','Rich Holcomb','D202',49500);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E16399','Timothy Grave','D190',29900);\nINSERT INTO EMP (EMP_ID, EMP_NAME, DEPT_ID, SALARY)\n VALUES ('E16400','Timothy Grive','D190',29900);\nCOMMIT;",
        "context": "",
        "question": "Task\n\nFind the top \u00a0 N \u00a0 salaries in each department, \u00a0 where \u00a0 N \u00a0 is provided as a parameter.\n\nUse this data as a formatted internal data structure (adapt it to your language-native idioms, rather than parse at runtime), or identify your external data source:\n\nEmployee Name,Employee ID,Salary,Department\nTyler Bennett,E10297,32000,D101\nJohn Rappl,E21437,47000,D050\nGeorge Woltman,E00127,53500,D101\nAdam Smith,E63535,18000,D202\nClaire Buckman,E39876,27800,D202\nDavid McClellan,E04242,41500,D101\nRich Holcomb,E01234,49500,D202\nNathan Adams,E41298,21900,D050\nRichard Potter,E43128,15900,D101\nDavid Motsinger,E27002,19250,D202\nTim Sampair,E03033,27000,D101\nKim Arlich,E10001,57000,D190\nTimothy Grove,E16398,29900,D190\n\n\n"
    },
    {
        "answer": "\u00a0\nCREATE OR REPLACE PROCEDURE TEST_MY_TEST()\n  BEGIN\n    DECLARE EXPECTED INTEGER;\n    DECLARE ACTUAL INTEGER;\n    CALL DB2UNIT.REGISTER_MESSAGE('My first test');\n    SET EXPECTED = 2;\n    SET ACTUAL = 1+1;\n    CALL DB2UNIT.ASSERT_INT_EQUALS('Same value', EXPECTED, ACTUAL);\n  END @\n\u00a0",
        "context": "",
        "question": "\n\nTask\n\nUsing a well-known testing-specific library/module/suite for your language, write some tests for your language's entry in Palindrome.\n\nIf your language does not have a testing specific library well known to the language's community then state this or omit the language.\n\n\n"
    },
    {
        "answer": "CREATE TABLE `Address` (\n    `addrID`       int(11)     NOT NULL   auto_increment,\n    `addrStreet`   varchar(50) NOT NULL   default '',\n    `addrCity`     varchar(25) NOT NULL   default '',\n    `addrState`    char(2)     NOT NULL   default '',\n    `addrZIP`      char(10)    NOT NULL   default '',\n    PRIMARY KEY (`addrID`)\n);",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": "<?php\n$db = new SQLite3(':memory:');\n$db->exec(\"\n    CREATE TABLE address (\n        addrID     INTEGER PRIMARY KEY AUTOINCREMENT,\n        addrStreet TEXT NOT NULL,\n        addrCity   TEXT NOT NULL,\n        addrState  TEXT NOT NULL,\n        addrZIP    TEXT NOT NULL\n    )\n\");\n?>",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": "CREATE SEQUENCE address_seq START 100;\nCREATE TABLE address (\n    addrID   int4 PRIMARY KEY DEFAULT NEXTVAL('address_seq'),\n    street   VARCHAR(50) NOT NULL,\n    city     VARCHAR(25) NOT NULL,\n    state    VARCHAR(2) NOT NULL,\n    zip      VARCHAR(20) NOT NULL\n);",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nImport-Module -Name PSSQLite\n\u00a0\n\u00a0\n## Create a database and a table\n$dataSource = \".\\Addresses.db\"\n$query = \"CREATE TABLE SSADDRESS (Id        INTEGER  PRIMARY KEY  AUTOINCREMENT,\n                                  LastName  TEXT     NOT NULL,\n                                  FirstName TEXT     NOT NULL,\n                                  Address   TEXT     NOT NULL,\n                                  City      TEXT     NOT NULL,\n                                  State     CHAR(2)  NOT NULL,\n                                  Zip       CHAR(5)  NOT NULL\n)\"\n\u00a0\nInvoke-SqliteQuery -Query $Query -DataSource $DataSource\n\u00a0\n\u00a0\n## Insert some data\n$query = \"INSERT INTO SSADDRESS ( FirstName,  LastName,  Address,  City,  State,  Zip)\n                         VALUES (@FirstName, @LastName, @Address, @City, @State, @Zip)\"\n\u00a0\nInvoke-SqliteQuery -DataSource $DataSource -Query $query -SqlParameters @{\n        LastName  = \"Monster\"\n        FirstName = \"Cookie\"\n        Address   = \"666 Sesame St\"\n        City      = \"Holywood\"\n        State     = \"CA\"\n        Zip       = \"90013\"\n}\n\u00a0\n\u00a0\n## View the data\nInvoke-SqliteQuery -DataSource $DataSource -Query \"SELECT * FROM SSADDRESS\" | FormatTable -AutoSize\n\u00a0",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nUseSQLiteDatabase()\nProcedure CheckDatabaseUpdate(Database, Query$)\n   Result = DatabaseUpdate(Database, Query$)\n   If Result = 0\n      Print(DatabaseError())\n   EndIf\n   ProcedureReturn Result\nEndProcedure\nopenconsole()\nDatabaseFile$ = GetCurrentDirectory()+\"/rosettadb.sdb\"\nIf CreateFile(0, DatabaseFile$)\n   CloseFile(0)\n    If OpenDatabase(0, DatabaseFile$, \"\", \"\")\n      CheckDatabaseUpdate(0,\"CREATE TABLE address ( addrID INTEGER PRIMARY KEY AUTOINCREMENT,\taddrStreet TEXT Not NULL, addrCity TEXT Not NULL, addrState TEXT Not NULL, addrZIP TEXT Not NULL)\")\n      CloseDatabase(0)\n   Else\n      print(\"Can't open database\u00a0!\")\n   EndIf\nElse\n   print(\"Can't create the database file\u00a0!\")\nEndIf\ncloseconsole()\n\u00a0",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": ">>> import sqlite3\n>>> conn = sqlite3.connect(':memory:')\n>>> conn.execute('''CREATE TABLE address (\n\taddrID\t\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\taddrStreet\tTEXT NOT NULL,\n\taddrCity\tTEXT NOT NULL,\n\taddrState\tTEXT NOT NULL,\n\taddrZIP\t\tTEXT NOT NULL\n    )''')\n<sqlite3.Cursor object at 0x013265C0>\n>>> ",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nCREATE TABLE Address (\n    addrID      INTEGER         generated BY DEFAULT AS IDENTITY,\n    addrStreet  VARCHAR(50)     NOT NULL,\n    addrCity    VARCHAR(25)     NOT NULL,\n    addrState   CHAR(2)         NOT NULL,\n    addrZIP     CHAR(10)        NOT NULL\n);\n\u00a0",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nCREATE TABLE address_USA (\n    address_ID INTEGER PRIMARY KEY,\n    address_Street TEXT,\n    address_City TEXT,\n    address_State TEXT,\n    address_Zip INTEGER\n);\n\u00a0",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": "package require sqlite3\n\u00a0\nsqlite3 db address.db\ndb eval {\n    CREATE TABLE address (\n\taddrID\t\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\taddrStreet\tTEXT NOT NULL,\n\taddrCity\tTEXT NOT NULL,\n\taddrState\tTEXT NOT NULL,\n\taddrZIP\t\tTEXT NOT NULL\n    )\n}",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": "CREATE TABLE #Address (\n    addrID       INT        NOT NULL   IDENTITY(1,1) PRIMARY KEY,\n    addrStreet   VARCHAR(50) NOT NULL ,  \n    addrCity     VARCHAR(25) NOT NULL , \n    addrState    CHAR(2)     NOT NULL , \n    addrZIP      CHAR(10)    NOT NULL\n)\nDROP TABLE #Address",
        "context": "",
        "question": "Task\n\nCreate a table to store addresses.\n\nYou may assume that all the addresses to be stored will be located in the USA. \u00a0 As such, you will need (in addition to a field holding a unique identifier) a field holding the street address, a field holding the city, a field holding the state code, and a field holding the zipcode. \u00a0 Choose appropriate types for each field.\n\nFor non-database languages, show how you would open a connection to a database (your choice of which) and create an address table in it. You should follow the existing models here for how you would structure the table.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nWITH\nFUNCTION nl ( s IN varchar2 )\nRETURN varchar2\nIS\nBEGIN\n        RETURN chr(10) || s;\nEND nl;\nFUNCTION v ( d NUMBER, x NUMBER, g IN varchar2 )\nRETURN varchar2\nIS\nBEGIN\n        RETURN\n        CASE WHEN d >= x THEN nl (g) END;\nEND v;\nSELECT 'On the '\n        || to_char(to_date(level,'j'),'jspth' )\n        || ' day of Christmas,'\n        || nl( 'my true love sent to me:')\n        || v ( level, 12, 'Twelve drummers drumming,' )\n        || v ( level, 11, 'Eleven pipers piping,' )\n        || v ( level, 10, 'Ten lords a-leaping,' )\n        || v ( level, 9, 'Nine ladies dancing,' )\n        || v ( level, 8, 'Eight maids a-milking,' )\n        || v ( level, 7, 'Seven swans a-swimming,' )\n        || v ( level, 6, 'Six geese a-laying,' )\n        || v ( level, 5, 'Five golden rings!' )\n        || v ( level, 4, 'Four calling birds,' )\n        || v ( level, 3, 'Three French hens,' )\n        || v ( level, 2, 'Two turtle doves,' )\n        || v ( level, 1, CASE level WHEN 1 THEN 'A' ELSE 'And a' END || ' partridge in a pear tree.' )\n        || nl(NULL)\n        \"The Twelve Days of Christmas\"\nFROM dual\nCONNECT BY level <= 12\n/\n\u00a0",
        "context": "",
        "question": "Task\n\nWrite a program that outputs the lyrics of the Christmas carol The Twelve Days of Christmas.\nThe lyrics can be found here.\n\n(You must reproduce the words in the correct order, but case, format, and punctuation are left to your discretion.)\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "CREATE OR REPLACE FUNCTION arrxor(anyarray,anyarray) RETURNS anyarray AS $$\nSELECT ARRAY(\n        (\n        SELECT r.elements\n        FROM    (\n                (SELECT 1,unnest($1))\n                UNION ALL\n                (SELECT 2,unnest($2))\n                ) AS r (arr, elements)\n        GROUP BY 1\n        HAVING MIN(arr) = MAX(arr)\n        )\n)\n$$ LANGUAGE SQL strict immutable;",
        "context": "",
        "question": "Task\nGiven two sets A and B, compute \n\n\n\n(\nA\n\u2216\nB\n)\n\u222a\n(\nB\n\u2216\nA\n)\n.\n\n\n{\\displaystyle (A\\setminus B)\\cup (B\\setminus A).}\n\n\n\nThat is, enumerate the items that are in A or B but not both. This set is called the symmetric difference of A and B.\n\nIn other words: \n\n\n\n(\nA\n\u222a\nB\n)\n\u2216\n(\nA\n\u2229\nB\n)\n\n\n{\\displaystyle (A\\cup B)\\setminus (A\\cap B)}\n\n (the set of items that are in at least one of A or B minus the set of items that are in both A and B).\n\nOptionally, give the individual differences (\n\n\n\nA\n\u2216\nB\n\n\n{\\displaystyle A\\setminus B}\n\n and \n\n\n\nB\n\u2216\nA\n\n\n{\\displaystyle B\\setminus A}\n\n) as well.\n\n\n\nTest cases\nA = {John, Bob, Mary, Serena}\nB = {Jim, Mary, John, Bob}\n\n\n\nNotes\n If your code uses lists of items to represent sets then ensure duplicate items in lists are correctly handled. For example two lists representing sets of a = [\"John\", \"Serena\", \"Bob\", \"Mary\", \"Serena\"] and b = [\"Jim\", \"Mary\", \"John\", \"Jim\", \"Bob\"] should produce the result of just two strings: [\"Serena\", \"Jim\"], in any order.\n In the mathematical notation above A \\ B gives the set of items in A that are not in B; A \u222a B gives the set of items in both A and B, (their union); and A \u2229 B gives the set of items that are in both A and B (their intersection).\n\n"
    },
    {
        "answer": "\u00a0\nSELECT CURRENT DATE, CURRENT TIME, CURRENT TIMESTAMP FROM SYSIBM.SYSDUMMY1;\n\u00a0",
        "context": "",
        "question": "Task\n\nOutput the system time \u00a0 (any units will do as long as they are noted) either by a system command or one built into the language.\n\nThe system time can be used for debugging, network information, random number seeds, or something as simple as program performance.\n\n\n\nRelated task\n\n \u00a0 Date format\n\n\nSee also\n\n \u00a0 Retrieving system time (wiki)\n\n"
    },
    {
        "answer": "SELECT SUM(x*x) FROM vector",
        "context": "",
        "question": "Task\n\nWrite a program to find the sum of squares of a numeric vector.\n\nThe program should work on a zero-length vector (with an answer of \u00a0 0).\n\n\n\nRelated task\n\n \u00a0 Mean\n\n"
    },
    {
        "answer": "\u00a0\n/*\nThis code is an implementation of \"Sum digits of an integer\" in SQL ORACLE 19c \np_in_str -- input string\n*/\nWITH\n  FUNCTION sum_digits(p_in_str IN varchar2) RETURN varchar2 IS\n  v_in_str VARCHAR(32767)\u00a0:= translate(p_in_str,'*-+','*');\n  v_sum INTEGER;\nBEGIN\n  --\n  IF regexp_count(v_in_str,'[0-9A-F]',1,'i')=LENGTH(v_in_str) THEN -- base 16\n    EXECUTE immediate 'select sum('||regexp_replace(v_in_str,'(\\w)','to_number(''\\1'',''X'')+')||'0) from dual' INTO v_sum;\n    --   \n  elsif regexp_count(v_in_str,'[0-9]',1,'i')=LENGTH(v_in_str) THEN -- base 10 \n    EXECUTE immediate 'select sum('||regexp_replace(v_in_str,'(\\d)','\\1+')||'0) from dual' INTO v_sum;\n    --\n  ELSE\n    RETURN 'Sum of digits for integer \"'||p_in_str||'\" not defined';\n    --  \n  END IF;\n  -- \n  RETURN 'Sum of digits for integer \"'||p_in_str||'\" = '||v_sum;\nEND;\n\u00a0\n--Test\nSELECT sum_digits('') AS res FROM dual\nUNION ALL \nSELECT sum_digits('000') AS res FROM dual\nUNION ALL \nSELECT sum_digits('-010') AS res FROM dual\nUNION ALL\nSELECT sum_digits('+010') AS res FROM dual\nUNION ALL \nSELECT sum_digits('120034') AS res FROM dual\nUNION ALL \nSELECT sum_digits('FE') AS res FROM dual\nUNION ALL \nSELECT sum_digits('f0e') AS res FROM dual\nUNION ALL\nSELECT sum_digits('\u00f6st12') AS res FROM dual;\n\u00a0",
        "context": "",
        "question": "Task\n\nTake a \u00a0 Natural Number \u00a0 in a given base and return the sum of its digits:\n\n \u00a0 110 \u00a0 \u00a0 \u00a0 \u00a0 sums to \u00a0 1\n \u00a0 123410 \u00a0 sums to \u00a0 10\n \u00a0 fe16 \u00a0 \u00a0 \u00a0 sums to \u00a0 29\n \u00a0 f0e16 \u00a0 \u00a0 sums to \u00a0 29\n\n"
    },
    {
        "answer": "WITH\n  symbols (d) AS (SELECT to_char(level) FROM dual CONNECT BY level <=  9)\n, board   (i) AS (SELECT level          FROM dual CONNECT BY level <= 81)\n, neighbors (i, j) AS (\n    SELECT b1.i, b2.i\n    FROM   board b1 INNER JOIN board b2\n      ON   b1.i\u00a0!= b2.i\n           AND (\n                    MOD(b1.i - b2.i, 9) = 0\n                 OR CEIL(b1.i /  9) = CEIL(b2.i /  9)\n                 OR CEIL(b1.i / 27) = CEIL(b2.i / 27) AND trunc(MOD(b1.i - 1, 9) / 3) = trunc(MOD(b2.i - 1, 9) / 3)\n               )\n  )\n, r (str, pos) AS (\n    SELECT \u00a0:game, instr(:game, ' ')\n      FROM  dual\n    UNION ALL\n    SELECT  substr(r.str, 1, r.pos - 1) || s.d || substr(r.str, r.pos + 1), instr(r.str, ' ', r.pos + 1)\n      FROM  r INNER JOIN symbols s\n        ON  r.pos > 0 AND NOT EXISTS (\n                                       SELECT *\n                                       FROM   neighbors n\n                                       WHERE  r.pos = n.i AND s.d = substr(r.str, n.j, 1)\n                                     )\n  )\nSELECT str\nFROM   r\nWHERE  pos = 0\n;",
        "context": "",
        "question": "Task\n\nSolve a partially filled-in normal \u00a0 9x9 \u00a0 Sudoku grid \u00a0 and display the result in a human-readable format.\n\nreferences\n\n Algorithmics of Sudoku \u00a0 may help implement this.\n Python Sudoku Solver Computerphile video.\n\n"
    },
    {
        "answer": "DECLARE\n    vc  VARCHAR2(40) := 'alphaBETA';\n    ivc VARCHAR2(40);\n    lvc VARCHAR2(40);\n    uvc VARCHAR2(40);\nBEGIN\n    ivc := INITCAP(vc); -- 'Alphabeta'\n    lvc := LOWER(vc);   -- 'alphabeta'\n    uvc := UPPER(vc);   -- 'ALPHABETA'\nEND; ",
        "context": "",
        "question": "Task\n\nTake the string \u00a0 \u00a0 alphaBETA \u00a0 \u00a0 and demonstrate how to convert it to:\n\n \u00a0 upper-case \u00a0 \u00a0 and \n \u00a0 lower-case\n\n\nUse the default encoding of a string literal or plain ASCII if there is no string literal in your language.\n\nNote: In some languages alphabets toLower and toUpper is not reversable.\n\nShow any additional case conversion functions \u00a0 (e.g. swapping case, capitalizing the first letter, etc.) \u00a0 that may be included in the library of your language.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "DECLARE\n  string VARCHAR2(50) := 'Hello, world!';\n  stringlength NUMBER;\nBEGIN\n  stringlength := LENGTHB(string);\nEND;",
        "context": "",
        "question": "Task\n\nFind the character and byte length of a string.\n\nThis means encodings like UTF-8 need to be handled properly, as there is not necessarily a one-to-one relationship between bytes and characters.\n\nBy character, we mean an individual Unicode code point, not a user-visible grapheme containing combining characters.\n\nFor example, the character length of \"m\u00f8\u00f8se\" is 5 but the byte length is 7 in UTF-8 and 10 in UTF-16.\n\nNon-BMP code points (those between 0x10000 and 0x10FFFF) must also be handled correctly: answers should produce actual character counts in code points, not in code unit counts.\n\nTherefore a string like \"\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22\" (consisting of the 7 Unicode characters U+1D518 U+1D52B U+1D526 U+1D520 U+1D52C U+1D521 U+1D522) is 7 characters long, not 14 UTF-16 code units; and it is 28 bytes long whether encoded in UTF-8 or in UTF-16.\n\nPlease mark your examples with ===Character Length=== or ===Byte Length===.\n\nIf your language is capable of providing the string length in graphemes, mark those examples with ===Grapheme Length===.\n\nFor example, the string \"J\u0332o\u0332s\u0332\u00e9\u0332\" (\"J\\x{332}o\\x{332}s\\x{332}e\\x{301}\\x{332}\") has 4 user-visible graphemes, 9 characters (code points), and 14 bytes when encoded in UTF-8.\n\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "DECLARE @s VARCHAR(10)\nSET @s = 'alphaBETA'\nprint UPPER(@s)\nprint LOWER(@s)",
        "context": "",
        "question": "Task\n\nTake the string \u00a0 \u00a0 alphaBETA \u00a0 \u00a0 and demonstrate how to convert it to:\n\n \u00a0 upper-case \u00a0 \u00a0 and \n \u00a0 lower-case\n\n\nUse the default encoding of a string literal or plain ASCII if there is no string literal in your language.\n\nNote: In some languages alphabets toLower and toUpper is not reversable.\n\nShow any additional case conversion functions \u00a0 (e.g. swapping case, capitalizing the first letter, etc.) \u00a0 that may be included in the library of your language.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\nVALUES UPPER('alphaBETA');\nVALUES LOWER('alphaBETA');\nVALUES initcap('alphaBETA');\n-- Within a SQL query.\nSELECT UPPER('alphaBETA') FROM sysibm.sysdummy1;\n\u00a0",
        "context": "",
        "question": "Task\n\nTake the string \u00a0 \u00a0 alphaBETA \u00a0 \u00a0 and demonstrate how to convert it to:\n\n \u00a0 upper-case \u00a0 \u00a0 and \n \u00a0 lower-case\n\n\nUse the default encoding of a string literal or plain ASCII if there is no string literal in your language.\n\nNote: In some languages alphabets toLower and toUpper is not reversable.\n\nShow any additional case conversion functions \u00a0 (e.g. swapping case, capitalizing the first letter, etc.) \u00a0 that may be included in the library of your language.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "CREATE TABLE t1 (n REAL);\n-- this is postgresql specific, fill the table\nINSERT INTO t1 (SELECT generate_series(1,1000)::REAL);\nWITH tt AS (\n  SELECT 1/(n*n) AS recip FROM t1\n) SELECT SUM(recip) FROM tt; \n\u00a0",
        "context": "",
        "question": "Compute the \u00a0 nth \u00a0 term of a series, \u00a0 i.e. the sum of the \u00a0 n \u00a0 first terms of the corresponding sequence.\n\nInformally this value, or its limit when \u00a0 n \u00a0 tends to infinity, is also called the sum of the series, thus the title of this task.\n\nFor this task, use:\n\n \n\n\n\n\nS\n\nn\n\n\n=\n\n\u2211\n\nk\n=\n1\n\n\nn\n\n\n\n\n1\n\nk\n\n2\n\n\n\n\n\n\n{\\displaystyle S_{n}=\\sum _{k=1}^{n}{\\frac {1}{k^{2}}}}\n\n\n\n\n and compute \u00a0 \n\n\n\n\nS\n\n1000\n\n\n\n\n{\\displaystyle S_{1000}}\n\n\n\n\nThis approximates the \u00a0 zeta function \u00a0 for \u00a0 S=2, \u00a0 whose exact value\n\n \n\n\n\n\u03b6\n(\n2\n)\n=\n\n\n\n\u03c0\n\n2\n\n\n6\n\n\n\n\n{\\displaystyle \\zeta (2)={\\pi ^{2} \\over 6}}\n\n\nis the solution of the Basel problem.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nSELECT 'the quick brown fox jumps over the lazy dog' FROM sysibm.sysdummy1;\nSELECT substr('the quick brown fox jumps over the lazy dog', 5, 15) FROM sysibm.sysdummy1;\nSELECT substr('the quick brown fox jumps over the lazy dog', 32) FROM sysibm.sysdummy1;\nSELECT substr('the quick brown fox jumps over the lazy dog', 1, LENGTH ('the quick brown fox jumps over the lazy dog') - 1) FROM sysibm.sysdummy1;\n\u00a0\nSELECT locate('j', 'the quick brown fox jumps over the lazy dog') FROM sysibm.sysdummy1;\nSELECT locate_in_string('the quick brown fox jumps over the lazy dog', 'j') FROM sysibm.sysdummy1;\nSELECT posstr('the quick brown fox jumps over the lazy dog', 'j') FROM sysibm.sysdummy1;\nSELECT POSITION('j', 'the quick brown fox jumps over the lazy dog',  OCTETS) FROM sysibm.sysdummy1;\n\u00a0\nSELECT substr('the quick brown fox jumps over the lazy dog', locate('j', 'the quick brown fox jumps over the lazy dog')) FROM sysibm.sysdummy1;\n\u00a0\nSELECT locate('fox', 'the quick brown fox jumps over the lazy dog') FROM sysibm.sysdummy1;\nSELECT locate_in_string('the quick brown fox jumps over the lazy dog', 'fox') FROM sysibm.sysdummy1;\nSELECT posstr('the quick brown fox jumps over the lazy dog', 'fox') FROM sysibm.sysdummy1;\nSELECT POSITION('fox', 'the quick brown fox jumps over the lazy dog',  OCTETS) FROM sysibm.sysdummy1;\n\u00a0\nSELECT substr('the quick brown fox jumps over the lazy dog', locate('fox', 'the quick brown fox jumps over the lazy dog')) FROM sysibm.sysdummy1;\n\u00a0",
        "context": "",
        "question": "\nBasic Data Operation\n\nThis is a basic data operation. It represents a fundamental action on a basic data type.\nYou may see other such operations in the Basic Data Operations category, or:\n\n\nInteger Operations\nArithmetic |\nComparison\nBoolean Operations\nBitwise |\nLogical\nString Operations\nConcatenation |\nInterpolation |\nComparison |\nMatching\nMemory Operations\nPointers & references |\nAddresses\n\n\n\n\nTask\n\nDisplay a substring:\n\n \u00a0 starting from \u00a0 n \u00a0 characters in and of \u00a0 m \u00a0 length;\n \u00a0 starting from \u00a0 n \u00a0 characters in, \u00a0 up to the end of the string;\n \u00a0 whole string minus the last character;\n \u00a0 starting from a known \u00a0 character \u00a0 within the string and of \u00a0 m \u00a0 length;\n \u00a0 starting from a known \u00a0 substring \u00a0 within the string and of \u00a0 m \u00a0 length.\n\n\nIf the program uses UTF-8 or UTF-16, \u00a0 it must work on any valid Unicode code point,\nwhether in the \u00a0 Basic Multilingual Plane \u00a0 or above it.\n\nThe program must reference logical characters (code points), \u00a0 not 8-bit code units for UTF-8 or 16-bit code units for UTF-16.\n\nPrograms for other encodings (such as 8-bit ASCII, or EUC-JP) are not required to handle all Unicode characters.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\nVALUES LENGTH('m\u00f8\u00f8se', CODEUNITS16);\nVALUES LENGTH('m\u00f8\u00f8se', CODEUNITS32);\nVALUES CHARACTER_LENGTH('m\u00f8\u00f8se', CODEUNITS32);\nVALUES LENGTH2('m\u00f8\u00f8se');\nVALUES LENGTH4('m\u00f8\u00f8se');\nVALUES LENGTH('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22', CODEUNITS16);\nVALUES LENGTH('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22', CODEUNITS32);\nVALUES CHARACTER_LENGTH('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22', CODEUNITS32);\nVALUES LENGTH2('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22');\nVALUES LENGTH4('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22');\nVALUES LENGTH('J\u0332o\u0332s\u0332\u00e9\u0332', CODEUNITS16);\nVALUES LENGTH('J\u0332o\u0332s\u0332\u00e9\u0332', CODEUNITS32);\nVALUES CHARACTER_LENGTH('J\u0332o\u0332s\u0332\u00e9\u0332', CODEUNITS32);\nVALUES LENGTH2('J\u0332o\u0332s\u0332\u00e9\u0332');\nVALUES LENGTH4('J\u0332o\u0332s\u0332\u00e9\u0332');\n\u00a0",
        "context": "",
        "question": "Task\n\nFind the character and byte length of a string.\n\nThis means encodings like UTF-8 need to be handled properly, as there is not necessarily a one-to-one relationship between bytes and characters.\n\nBy character, we mean an individual Unicode code point, not a user-visible grapheme containing combining characters.\n\nFor example, the character length of \"m\u00f8\u00f8se\" is 5 but the byte length is 7 in UTF-8 and 10 in UTF-16.\n\nNon-BMP code points (those between 0x10000 and 0x10FFFF) must also be handled correctly: answers should produce actual character counts in code points, not in code unit counts.\n\nTherefore a string like \"\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22\" (consisting of the 7 Unicode characters U+1D518 U+1D52B U+1D526 U+1D520 U+1D52C U+1D521 U+1D522) is 7 characters long, not 14 UTF-16 code units; and it is 28 bytes long whether encoded in UTF-8 or in UTF-16.\n\nPlease mark your examples with ===Character Length=== or ===Byte Length===.\n\nIf your language is capable of providing the string length in graphemes, mark those examples with ===Grapheme Length===.\n\nFor example, the string \"J\u0332o\u0332s\u0332\u00e9\u0332\" (\"J\\x{332}o\\x{332}s\\x{332}e\\x{301}\\x{332}\") has 4 user-visible graphemes, 9 characters (code points), and 14 bytes when encoded in UTF-8.\n\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\nVALUES LENGTH('m\u00f8\u00f8se', CODEUNITS16);\nVALUES LENGTH('m\u00f8\u00f8se', CODEUNITS32);\nVALUES CHARACTER_LENGTH('m\u00f8\u00f8se', CODEUNITS32);\nVALUES LENGTH2('m\u00f8\u00f8se');\nVALUES LENGTH4('m\u00f8\u00f8se');\nVALUES LENGTH('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22', CODEUNITS16);\nVALUES LENGTH('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22', CODEUNITS32);\nVALUES CHARACTER_LENGTH('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22', CODEUNITS32);\nVALUES LENGTH2('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22');\nVALUES LENGTH4('\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22');\nVALUES LENGTH('J\u0332o\u0332s\u0332\u00e9\u0332', CODEUNITS16);\nVALUES LENGTH('J\u0332o\u0332s\u0332\u00e9\u0332', CODEUNITS32);\nVALUES CHARACTER_LENGTH('J\u0332o\u0332s\u0332\u00e9\u0332', CODEUNITS32);\nVALUES LENGTH2('J\u0332o\u0332s\u0332\u00e9\u0332');\nVALUES LENGTH4('J\u0332o\u0332s\u0332\u00e9\u0332');\n\u00a0",
        "context": "",
        "question": "Task\n\nFind the character and byte length of a string.\n\nThis means encodings like UTF-8 need to be handled properly, as there is not necessarily a one-to-one relationship between bytes and characters.\n\nBy character, we mean an individual Unicode code point, not a user-visible grapheme containing combining characters.\n\nFor example, the character length of \"m\u00f8\u00f8se\" is 5 but the byte length is 7 in UTF-8 and 10 in UTF-16.\n\nNon-BMP code points (those between 0x10000 and 0x10FFFF) must also be handled correctly: answers should produce actual character counts in code points, not in code unit counts.\n\nTherefore a string like \"\ud835\udd18\ud835\udd2b\ud835\udd26\ud835\udd20\ud835\udd2c\ud835\udd21\ud835\udd22\" (consisting of the 7 Unicode characters U+1D518 U+1D52B U+1D526 U+1D520 U+1D52C U+1D521 U+1D522) is 7 characters long, not 14 UTF-16 code units; and it is 28 bytes long whether encoded in UTF-8 or in UTF-16.\n\nPlease mark your examples with ===Character Length=== or ===Byte Length===.\n\nIf your language is capable of providing the string length in graphemes, mark those examples with ===Grapheme Length===.\n\nFor example, the string \"J\u0332o\u0332s\u0332\u00e9\u0332\" (\"J\\x{332}o\\x{332}s\\x{332}e\\x{301}\\x{332}\") has 4 user-visible graphemes, 9 characters (code points), and 14 bytes when encoded in UTF-8.\n\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "' '  String literal\n\" \"  Identifier\n[ ]  Identifier\n` `  Identifier\n?    Numbered host parameter\n:    Named host parameter\n$    Named host parameter\n@    Named host parameter\n( )  Parentheses\n+    Add\n-    Subtract/negative\n*    Multiply\n/    Divide\n%    Modulo\n&    Bitwise AND\n|    Bitwise OR\n~    Bitwise NOT\n<<   Left shift\n>>   Right shift\n=    Equal\n==   Equal\n<>   Not equal\n!=   Not equal\n<    Less\n>    Greater\n<=   Less or equal\n>=   Greater or equal\n||   String concatenation\n",
        "context": "",
        "question": "Special characters are symbols (single characters or sequences of characters) that have a \"special\" built-in meaning in the language and typically cannot be used in identifiers.\n\nEscape sequences are methods that the language uses to remove the special meaning from the symbol, enabling it to be used as a normal character, or sequence of characters when this can be done.\n\n\n\nTask\n\nList the special characters and show escape sequences in the language.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "-- setup\nCREATE TABLE pairs (name VARCHAR(16), VALUE VARCHAR(16));\nINSERT INTO pairs VALUES ('Fluffy', 'cat');\nINSERT INTO pairs VALUES ('Fido', 'dog');\nINSERT INTO pairs VALUES ('Francis', 'fish');\n-- order them by name\nSELECT * FROM pairs ORDER BY name;",
        "context": "",
        "question": "\nSorting Algorithm\n\nThis is a sorting algorithm. \u00a0 It may be applied to a set of data in order to sort it. \u00a0 \u00a0\nFor comparing various sorts, see compare sorts. \u00a0\nFor other sorting algorithms, \u00a0 see sorting\u00a0algorithms, \u00a0 or:\n\nO(n logn) sorts\nHeap\u00a0sort |\nMerge\u00a0sort |\nPatience\u00a0sort |\nQuick\u00a0sort\nO(n log2n) sorts\nShell\u00a0Sort\nO(n2) sorts\nBubble\u00a0sort |\nCocktail\u00a0sort |\nCocktail\u00a0sort\u00a0with\u00a0shifting\u00a0bounds |\nComb\u00a0sort |\nCycle\u00a0sort |\nGnome\u00a0sort |\nInsertion\u00a0sort |\nSelection\u00a0sort |\nStrand\u00a0sort\nother sorts\nBead\u00a0sort |\nBogo\u00a0sort |\nCommon\u00a0sorted\u00a0list |\nComposite\u00a0structures\u00a0sort |\nCustom\u00a0comparator\u00a0sort |\nCounting\u00a0sort |\nDisjoint\u00a0sublist\u00a0sort |\nExternal\u00a0sort |\nJort\u00a0sort |\nLexicographical\u00a0sort |\nNatural\u00a0sorting |\nOrder\u00a0by\u00a0pair\u00a0comparisons |\nOrder\u00a0disjoint\u00a0list\u00a0items |\nOrder\u00a0two\u00a0numerical\u00a0lists |\nObject\u00a0identifier\u00a0(OID)\u00a0sort |\nPancake\u00a0sort |\nQuickselect |\nPermutation\u00a0sort |\nRadix\u00a0sort |\nRanking\u00a0methods |\nRemove\u00a0duplicate\u00a0elements |\nSleep\u00a0sort |\nStooge\u00a0sort |\n[Sort\u00a0letters\u00a0of\u00a0a\u00a0string] |\nThree\u00a0variable\u00a0sort |\nTopological\u00a0sort |\nTree\u00a0sort\n\n\nSort an array of composite structures by a key.\n\n\n\nFor example, if you define a composite structure that presents a name-value pair (in pseudo-code):\n\nDefine structure pair such that: \n   name as a string\n   value as a string\n\nand an array of such pairs:\n\n   x: array of pairs\n\nthen define a sort routine that sorts the array x by the key name.\n\nThis task can always be accomplished with Sorting Using a Custom Comparator.\n\nIf your language is not listed here, please see the other article.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nUPDATE DB CFG FOR myDb USING SMTP_SERVER 'smtp.ibm.com';\n\u00a0\nCALL UTL_MAIL.SEND ('senderAccount@myDomain.com','recipientAccount@yourDomain.com', 'copy@anotherDomain.com', NULL, 'The subject of the message', 'The content of the message');\n\u00a0",
        "context": "",
        "question": "Task\n\nWrite a function to send an email.\n\nThe function should have parameters for setting From, To and Cc addresses; the Subject, and the message text, and optionally fields for the server name and login details.\n\n If appropriate, explain what notifications of problems/success are given.\n Solutions using libraries or functions from the language are preferred, but failing that, external programs can be used with an explanation.\n Note how portable the solution given is between operating systems when multi-OS languages are used.\n\n\n(Remember to obfuscate any sensitive data used in examples)\n\n\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON@\n\u00a0\nCREATE OR REPLACE FUNCTION CHECK_SEDOL (\n  IN TEXT VARCHAR(6)\n   ) RETURNS VARCHAR(7)\n BEGIN\n  DECLARE TYPE SEDOL AS CHAR(1) ARRAY [6];\n--declare text varchar(6) default 'B12345';\n  DECLARE WEIGHT SEDOL;\n  DECLARE I SMALLINT;\n  DECLARE SENTENCE VARCHAR(256);\n  DECLARE CHAR_AT CHAR(1);\n  DECLARE OUTPUT CHAR(1);\n  DECLARE SUM SMALLINT;\n  DECLARE CHECK SMALLINT;\n  DECLARE INVALID_CHAR CONDITION FOR SQLSTATE '22004'\u00a0;\n  DECLARE STMT STATEMENT;\n\u00a0\n  -- Converts all to upper.\n  SET TEXT = UPPER (TEXT);\n  -- CALL DBMS_OUTPUT.PUT_LINE(TEXT);\n  -- Checks the characters.\n  SET I = 1;\n  WHILE (I <= 6) DO\n   SET CHAR_AT = SUBSTR(TEXT, I, 1);\n   -- CALL DBMS_OUTPUT.PUT_LINE('Char ' || CHAR_AT);\n   SET SENTENCE = 'SET\u00a0? = (SELECT SEDOL FROM (SELECT ''' || CHAR_AT\n     || ''' SEDOL FROM SYSIBM.SYSDUMMY1) WHERE SEDOL IN (''B'',''C'',''D'',''F'',''G'',''H'',''J'','\n     || '''K'',''L'',''M'',''N'',''P'',''Q'',''R'',''S'',''T'',''V'',''W'',''X'',''Y'',''Z'',''0'','\n     || '''1'',''2'',''3'',''4'',''5'',''6'',''7'',''8'',''9''))';\n   PREPARE STMT FROM SENTENCE;\n   EXECUTE STMT INTO OUTPUT;\n   IF (OUTPUT IS NULL) THEN\n    SIGNAL INVALID_CHAR;\n   END IF;\n   SET I = I + 1;\n  END WHILE;\n\u00a0\n  -- Assigns weight\n  SET WEIGHT[1] = '1';\n  SET WEIGHT[2] = '3';\n  SET WEIGHT[3] = '1';\n  SET WEIGHT[4] = '7';\n  SET WEIGHT[5] = '3';\n  SET WEIGHT[6] = '9';\n\u00a0\n  -- Process the SEDOL.\n  SET SUM = 0;\n  SET I = 1;\n  WHILE (I <= 6) DO\n   SET CHAR_AT = SUBSTR(TEXT, I, 1);\n   IF (ASCII(CHAR_AT) > 65) THEN\n    SET SUM = SUM + WEIGHT[I] * (ASCII(CHAR_AT) - 64 + 9);\n   ELSE\n    SET SUM = SUM + WEIGHT[I] * CHAR_AT;\n   END IF;\n   SET I = I + 1;\n  END WHILE;\n  SET CHECK = MOD((10 - MOD(SUM, 10)), 10);\n  CALL DBMS_OUTPUT.PUT_LINE(CHECK);\n  RETURN TEXT || CHECK;\n END @\n\u00a0",
        "context": "",
        "question": "Task\n\nFor each number list of 6-digit SEDOLs, calculate and append the checksum digit.\n\n\n\nThat is, given this input:\n\n710889\nB0YBKJ\n406566\nB0YBLH\n228276\nB0YBKL\n557910\nB0YBKR\n585284\nB0YBKT\nB00030\n\nProduce this output:\n\n7108899\nB0YBKJ7\n4065663\nB0YBLH2\n2282765\nB0YBKL9\n5579107\nB0YBKR5\n5852842\nB0YBKT7\nB000300\n\nExtra credit\n\nCheck each input is correctly formed, especially with respect to valid characters allowed in a SEDOL string.\n\n\n\nRelated tasks\n\n \u00a0 Luhn test\n \u00a0 ISIN\n\n"
    },
    {
        "answer": "CREATE FUNCTION [dbo].[fn_CheckSEDOL]\n( @SEDOL varchar(50) )\nRETURNS varchar(7)\nAS\nBEGIN\n\tdeclare\t@true bit = 1,\n\t\t@false bit = 0,\n\t\t@isSEDOL bit,\t\t\n\t\t@sedol_weights varchar(6) ='131739',\n\t\t@sedol_len int = LEN(@SEDOL),\n\t\t@sum int = 0\n\u00a0\n\u00a0\n\tif ((@sedol_len = 6)) \n\tbegin\n\t\tselect @SEDOL = UPPER(@SEDOL)\n\t\tDeclare\t@vowels varchar(5) = 'AEIOU', \n\t\t\t@letters varchar(21) = 'BCDFGHJKLMNPQRSTVWXYZ',\n\t\t\t@i int=1,\n\t\t\t@isStillGood bit = @true,\t\t\t\t\t\n\t\t\t@char char = '',\n\t\t\t@weighting int =0\n\u00a0\n\t\tselect @isSEDOL = @false\n\u00a0\n\t\twhile ((@i < 7) and (@isStillGood = @true))\n\t\tbegin\n\t\t\tselect\t@char = SUBSTRING(@SEDOL,@i,1), \n\t\t\t\t@weighting = CONVERT (INT,SUBSTRING(@sedol_weights, @i, 1))\n\t\t\tif (CHARINDEX(@char, @vowels) > 0) -- no vowels please\n\t\t\tbegin\n\t\t\t\tselect @isStillGood=@false\n\t\t\tend\n\t\t\telse\n\t\t\tbegin\n\t\t\t\tif (ISNUMERIC(@char) = @true) -- is a number\n\t\t\t\tbegin\n\t\t\t\t\tselect @sum = @sum + (ASCII(@char) - 48) * @weighting\n\t\t\t\tend\n\t\t\t\telse if (CHARINDEX(@char, @letters) = 0) -- test for the rest of the alphabet\n\t\t\t\tbegin\n\t\t\t\t\tselect @isStillGood=@false\n\t\t\t\tend\n\t\t\t\telse\n\t\t\t\tbegin\n\t\t\t\t\tselect @sum = @sum + (ASCII(@char) - 55) * @weighting\n\t\t\t\tend\n\t\t\tend \n\t\t\tselect @i = @i +1  \n\t\tend -- of while loop\n\t\tif (@isStillGood = @true) \n\t\tbegin\n\t\t\tdeclare @checksum int = (10 - (@sum%10))%10 \n\t\t\tselect @SEDOL = @SEDOL + CONVERT(CHAR,@checksum)\n\t\tend\n\tend\n\telse\n\tbegin\n\t\tselect @SEDOL = ''\n\tend \n\t-- Return the result of the function\n\tRETURN @SEDOL\nEND",
        "context": "",
        "question": "Task\n\nFor each number list of 6-digit SEDOLs, calculate and append the checksum digit.\n\n\n\nThat is, given this input:\n\n710889\nB0YBKJ\n406566\nB0YBLH\n228276\nB0YBKL\n557910\nB0YBKR\n585284\nB0YBKT\nB00030\n\nProduce this output:\n\n7108899\nB0YBKJ7\n4065663\nB0YBLH2\n2282765\nB0YBKL9\n5579107\nB0YBKR5\n5852842\nB0YBKT7\nB000300\n\nExtra credit\n\nCheck each input is correctly formed, especially with respect to valid characters allowed in a SEDOL string.\n\n\n\nRelated tasks\n\n \u00a0 Luhn test\n \u00a0 ISIN\n\n"
    },
    {
        "answer": "\u00a0\n-- set of numbers is a table\n-- create one set with 3 elements\n\u00a0\nCREATE TABLE myset1 (element NUMBER);\n\u00a0\nINSERT INTO myset1 VALUES (1);\nINSERT INTO myset1 VALUES (2);\nINSERT INTO myset1 VALUES (3);\n\u00a0\ncommit;\n\u00a0\n-- check if 1 is an element\n\u00a0\nSELECT 'TRUE' BOOL FROM dual\nWHERE 1 IN \n(SELECT element FROM myset1);\n\u00a0\n-- create second set with 3 elements\n\u00a0\nCREATE TABLE myset2 (element NUMBER);\n\u00a0\nINSERT INTO myset2 VALUES (1);\nINSERT INTO myset2 VALUES (5);\nINSERT INTO myset2 VALUES (6);\n\u00a0\ncommit;\n\u00a0\n-- union sets\n\u00a0\nSELECT element FROM myset1\nUNION\nSELECT element FROM myset2;\n\u00a0\n-- intersection\n\u00a0\nSELECT element FROM myset1\nINTERSECT\nSELECT element FROM myset2;\n\u00a0\n-- difference\n\u00a0\nSELECT element FROM myset1\nminus\nSELECT element FROM myset2;\n\u00a0\n-- subset\n\u00a0\n-- change myset2 to only have 1 as element\n\u00a0\nDELETE FROM myset2 WHERE NOT element = 1;\n\u00a0\ncommit;\n\u00a0\n-- check if myset2 subset of myset1\n\u00a0\nSELECT 'TRUE' BOOL FROM dual\nWHERE 0 =  (SELECT COUNT(*) FROM \n(SELECT element FROM myset2\nminus\nSELECT element FROM myset1));\n\u00a0\n-- equality\n\u00a0\n-- change myset1 to only have 1 as element\n\u00a0\nDELETE FROM myset1 WHERE NOT element = 1;\n\u00a0\ncommit;\n\u00a0\n -- check if myset2 subset of myset1 and\n -- check if myset1 subset of myset2 and\n\u00a0\nSELECT 'TRUE' BOOL FROM dual\nWHERE \n0 =  (SELECT COUNT(*) FROM \n(SELECT element FROM myset2\nminus\nSELECT element FROM myset1)) AND\n0 =\n(SELECT COUNT(*) FROM \n(SELECT element FROM myset1\nminus\nSELECT element FROM myset2));\n\u00a0",
        "context": "",
        "question": "\nData Structure\n\nThis illustrates a data structure, a means of storing data within a program.\n\nYou may see other such structures in the Data Structures category.\nA \u00a0 set \u00a0is a collection of elements, without duplicates and without order.\n\n\n\nTask\n\nShow each of these set operations:\n\n Set creation\n Test m \u2208 S -- \"m is an element in set S\"\n A \u222a B -- union; a set of all elements either in set A or in set B.\n A \u2229 B -- intersection; a set of all elements in both set A and set B.\n A \u2216 B -- difference; a set of all elements in set A, except those in set B.\n A \u2286 B -- subset; true if every element in set A is also in set B.\n A = B -- equality; true if every element of set A is in set B and vice versa.\n\n\nAs an option, show some other set operations.\n\n(If A \u2286 B, but A \u2260 B, then A is called a true or proper subset of B, written A \u2282 B or A \u228a B.)\n\nAs another option, show how to modify a mutable set.\n\n\n\nOne might implement a set using an associative array (with set elements as array keys and some dummy value as the values).\n\nOne might also implement a set with a binary search tree, or with a hash table, or with an ordered array of binary bits (operated on with bit-wise binary operators).\n\nThe basic test, m \u2208 S, is O(n) with a sequential list of elements, O(log n) with a balanced binary search tree, or (O(1) average-case, O(n) worst case) with a hash table.\n\n\n\nSee also\n\n Array\n Associative array: Creation, Iteration\n Collections\n Compound data type\n Doubly-linked list: Definition, Element definition, Element insertion, List Traversal, Element Removal\n Linked list\n Queue: Definition, Usage\n Set\n Singly-linked list: Element definition, Element insertion, List Traversal, Element Removal\n Stack\n\n"
    },
    {
        "answer": "CREATE OR REPLACE PACKAGE sieve_of_eratosthenes AS\n  TYPE array_of_booleans IS varray(100000000) OF BOOLEAN;\n  TYPE table_of_integers IS TABLE OF INTEGER;\n  FUNCTION find_primes (n NUMBER) RETURN table_of_integers pipelined;\nEND sieve_of_eratosthenes;\n/\n\u00a0\nCREATE OR REPLACE PACKAGE BODY sieve_of_eratosthenes AS\n  FUNCTION find_primes (n NUMBER) RETURN table_of_integers pipelined IS\n      flag array_of_booleans;\n      ptr  INTEGER;\n      i    INTEGER;\n  BEGIN\n      flag := array_of_booleans(FALSE, TRUE);\n      flag.extend(n - 2, 2);\n      ptr  := 1;\n      << outer_loop >>\n      WHILE ptr * ptr <= n LOOP\n          WHILE NOT flag(ptr) LOOP\n              ptr := ptr + 1;\n          END LOOP;\n          i := ptr * ptr;\n          WHILE i <= n LOOP\n              flag(i) := FALSE;\n              i := i + ptr;\n          END LOOP;\n          ptr := ptr + 1;\n      END LOOP outer_loop;\n      FOR i IN 1 .. n LOOP\n          IF flag(i) THEN\n              pipe ROW (i);\n          END IF;\n      END LOOP;\n      RETURN;\n  END find_primes;\nEND sieve_of_eratosthenes;\n/",
        "context": "",
        "question": "This task has been clarified. Its programming examples are in need of review to ensure that they still fit the requirements of the task.\n\n\nThe Sieve of Eratosthenes is a simple algorithm that finds the prime numbers up to a given integer.\n\n\n\nTask\n\nImplement the \u00a0 Sieve of Eratosthenes \u00a0 algorithm, with the only allowed optimization that the outer loop can stop at the square root of the limit, and the inner loop may start at the square of the prime just found.\n\nThat means especially that you shouldn't optimize by using pre-computed wheels, i.e. don't assume you need only to cross out odd numbers (wheel based on 2), numbers equal to 1 or 5 modulo 6 (wheel based on 2 and 3), or similar wheels based on low primes.\n\nIf there's an easy way to add such a wheel based optimization, implement it as an alternative version.\n\n\n\nNote\n\n It is important that the sieve algorithm be the actual algorithm used to find prime numbers for the task.\n\n\nRelated tasks\n\n \u00a0 Emirp primes\n \u00a0 count in factors\n \u00a0 prime decomposition\n \u00a0 factors of an integer\n \u00a0 extensible prime generator\n \u00a0 primality by trial division\n \u00a0 factors of a Mersenne number\n \u00a0 trial factoring of a Mersenne number\n \u00a0 partition an integer X into N primes\n \u00a0 sequence of primes by Trial Division\n\n"
    },
    {
        "answer": "\u00a0\nCREATE TABLE african_capitals(name varchar2(100), population_in_millions NUMBER(3,2));\n\u00a0",
        "context": "",
        "question": "Many programming languages provide convenient ways to look for a known value in a simple list of strings or numbers.\n\nBut what if the elements of the list are themselves compound records/objects/data-structures, and the search condition is more complex than a simple equality test?\n\nTask[edit]\nWrite a function/method/etc. that can find the first element in a given list matching a given condition.\n\nIt should be as generic and reusable as possible.\n\n(Of course if your programming language already provides such a feature, you can use that instead of recreating it.)\n\nThen to demonstrate its functionality, create the data structure specified under #Data set, and perform on it the searches specified under #Test cases.\n\nData set\nThe data structure to be used contains the names and populations (in millions) of the 10 largest metropolitan areas in Africa, and looks as follows when represented in JSON:\n\n[\n  { \"name\": \"Lagos\",                \"population\": 21.0  },\n  { \"name\": \"Cairo\",                \"population\": 15.2  },\n  { \"name\": \"Kinshasa-Brazzaville\", \"population\": 11.3  },\n  { \"name\": \"Greater Johannesburg\", \"population\":  7.55 },\n  { \"name\": \"Mogadishu\",            \"population\":  5.85 },\n  { \"name\": \"Khartoum-Omdurman\",    \"population\":  4.98 },\n  { \"name\": \"Dar Es Salaam\",        \"population\":  4.7  },\n  { \"name\": \"Alexandria\",           \"population\":  4.58 },\n  { \"name\": \"Abidjan\",              \"population\":  4.4  },\n  { \"name\": \"Casablanca\",           \"population\":  3.98 }\n]\nHowever, you shouldn't parse it from JSON, but rather represent it natively in your programming language.\n\n The top-level data structure should be an ordered collection (i.e. a list, array, vector, or similar).\n Each element in this list should be an associative collection that maps from keys to values (i.e. a struct, object, hash map, dictionary, or similar).\n Each of them has two entries: One string value with key \"name\", and one numeric value with key \"population\".\n You may rely on the list being sorted by population count, as long as you explain this to readers.\n\n\nIf any of that is impossible or unreasonable in your programming language, then feel free to deviate, as long as you explain your reasons in a comment above your solution.\n\nTest cases\n\n\n Search\n\n Expected result\n\n\n Find the (zero-based) index of the first city in the list whose name is \"Dar Es Salaam\"\n\n 6\n\n\n Find the name of the first city in this list whose population is less than 5 million\n\n Khartoum-Omdurman\n\n\n Find the population of the first city in this list whose name starts with the letter \"A\"\n\n 4.58\n\nGuidance\nIf your programming language supports higher-order programming, then the most elegant way to implement the requested functionality in a generic and reusable way, might be to write a function (maybe called \"find_index\" or similar), that takes two arguments:\n\n The list to search through.\n A function/lambda/closure (the so-called \"predicate\"), which will be applied in turn to each element in the list, and whose boolean return value defines whether that element matches the search requirement.\nIf this is not the approach which would be most natural or idiomatic in your language, explain why, and show what is.\n\nRelated tasks\n Search a list\n"
    },
    {
        "answer": "\u00a0\n-- variable table\nDROP TABLE IF EXISTS var;\nCREATE temp TABLE var (\tVALUE VARCHAR(1000) );\nINSERT INTO var(VALUE) SELECT 'WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWBWWWWWWWWWWWWWW';\n\u00a0\n-- select\nWITH recursive\nints(num) AS \n(\n\tSELECT 1\n\tUNION ALL\n\tSELECT num+1\n\tFROM ints\n\tWHERE num+1 <= LENGTH((SELECT VALUE FROM var))\n)\n,\nchars(num,chr,nextChr,isGroupEnd) AS\n(\n\tSELECT tmp.*, CASE WHEN tmp.nextChr <> tmp.chr THEN 1 ELSE 0 END groupEnds\n\tFROM (\n\tSELECT num, \n\t\t   SUBSTRING((SELECT VALUE FROM var), num, 1) chr,\n\t\t   (SELECT SUBSTRING((SELECT VALUE FROM var), num+1, 1)) nextChr\n\tFROM ints\n\t) tmp\n)\nSELECT (SELECT VALUE FROM var) plain_text, (\n\tSELECT string_agg(concat(CAST(maxNoWithinGroup AS VARCHAR(10)) , chr), '' ORDER BY num)\n\tFROM (\n\t\tSELECT *, MAX(noWithinGroup) OVER (partition BY chr, groupNo) maxNoWithinGroup\n\t\tFROM (\n\t\t\tSELECT\tnum, \n\t\t\t\t\tchr, \n\t\t\t\t\tgroupNo, \n\t\t\t\t\tROW_NUMBER() OVER( partition BY chr, groupNo ORDER BY num) noWithinGroup\n\t\t\tFROM (\n\t\t\tSELECT *, (SELECT COUNT(*) \n\t\t\t\t\t   FROM chars chars2 \n\t\t\t\t\t   WHERE chars2.isGroupEnd = 1 AND \n\t\t\t\t\t   chars2.chr = chars.chr AND \n\t\t\t\t\t   chars2.num < chars.num) groupNo \n\t\t\tFROM chars\n\t\t\t) tmp\n\t\t) sub\n\t) final\n\tWHERE noWithinGroup = 1\n\t) Rle_Compressed\n\u00a0",
        "context": "",
        "question": "Run-length encoding\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\n\n\nTask\n\nGiven a string containing uppercase characters (A-Z), compress repeated 'runs' of the same character by storing the length of that run, and provide a function to reverse the compression.\n\nThe output can be anything, as long as you can recreate the input with it.\n\n\n\nExample\n\n Input: WWWWWWWWWWWWBWWWWWWWWWWWWBBBWWWWWWWWWWWWWWWWWWWWWWWWBWWWWWWWWWWWWWW\n Output: 12W1B12W3B24W1B14W\n\n\nNote: the encoding step in the above example is the same as a step of the Look-and-say sequence.\n\n\n\n"
    },
    {
        "answer": "\u00a0\n/*****************************************************************\n * $Author: Atanas Kebedjiev $\n *****************************************************************\n * PL/SQL code can be run as anonymous block.\n * To test, execute the whole script or create the functions and then e.g. 'select rdecode('2012') from dual;\n * Please note that task definition does not describe fully some current rules, such as\n * * subtraction - IX XC CM are the valid subtraction combinations\n * * A subtraction character cannot be repeated: 8 is expressed as VIII and not as IIX\n * * V L and D cannot be used for subtraction\n * * Any numeral cannot be repeated more than 3 times: 1910 should be MCMX and not MDCCCCX\n * Code below does not validate the Roman numeral itself and will return a result even for a non-compliant number\n * E.g. both MCMXCIX and IMM will return 1999 but the first one is the correct notation\n */\n\u00a0\nDECLARE\n\u00a0\nFUNCTION rvalue(c IN CHAR) RETURN NUMBER IS\n    i INTEGER;\nBEGIN\n    i\u00a0:= 0;\n    CASE (c)\n        when 'M' THEN i\u00a0:= 1000;\n        when 'D' THEN i\u00a0:= 500;\n        when 'C' THEN i\u00a0:= 100;\n        when 'L' THEN i\u00a0:= 50;\n        when 'X' THEN i\u00a0:= 10;\n        when 'V' THEN i\u00a0:= 5;\n        when 'I' THEN i\u00a0:= 1;\n    END CASE;\n    RETURN i;\nEND;\n\u00a0\n\u00a0\nFUNCTION decode(rn IN VARCHAR2) RETURN NUMBER IS\n   i  INTEGER;\n   l  INTEGER;\n   cr CHAR;   -- current Roman numeral as substring from r\n   cv INTEGER; -- value of current Roman numeral\n\u00a0\n   gr CHAR;   -- next Roman numeral\n   gv NUMBER; --  value of the next numeral;\n\u00a0\n   dv NUMBER; -- decimal value to return\nBEGIN\n           l\u00a0:= length(rn);\n           i\u00a0:= 1;\n           dv\u00a0:= 0;\n           while (i <= l)\n           LOOP\n                cr\u00a0:= substr(rn,i,1);\n                cv\u00a0:= rvalue(cr);\n\u00a0\n   /* Look for a larger numeral in next position, like IV or CM  \n      The number to subtract should be at least 1/10th of the bigger number\n      CM and XC are valid, but IC and XM are not */\n                IF (i < l) THEN\n                   gr\u00a0:= substr(rn,i+1,1);\n                   gv\u00a0:= rvalue(gr);\n                   IF (cv < gv ) THEN\n                      dv\u00a0:= dv - cv;\n                   ELSE\n                      dv\u00a0:= dv + cv;\n                   END IF;\n                ELSE\n                   dv\u00a0:= dv + cv;\n                END IF;  -- need to add the last value unconditionally\n\u00a0\n                i\u00a0:= i + 1;\n            END LOOP;\n\u00a0\nRETURN dv;\n\u00a0\nEND;\n\u00a0\nBEGIN\n\u00a0\n    DBMS_OUTPUT.PUT_LINE ('MMXII      = ' || rdecode('MMXII'));       -- 2012\n    DBMS_OUTPUT.PUT_LINE ('MCMLI      = ' || rdecode('MCMLI'));       -- 1951\n    DBMS_OUTPUT.PUT_LINE ('MCMLXXXVII = ' || rdecode('MCMLXXXVII'));  -- 1987\n    DBMS_OUTPUT.PUT_LINE ('MDCLXVI    = ' || rdecode('MDCLXVI'));     -- 1666\n    DBMS_OUTPUT.PUT_LINE ('MCMXCIX    = ' || rdecode('MCMXCIX'));     -- 1999\n\u00a0\nEND;\n\u00a0",
        "context": "",
        "question": "Task\n\nCreate a function that takes a Roman numeral as its argument and returns its value as a numeric decimal integer.\n\nYou don't need to validate the form of the Roman numeral.\n\nModern Roman numerals are written by expressing each decimal digit of the number to be encoded separately,\n\nstarting with the leftmost decimal digit and skipping any 0s \u00a0 (zeroes).\n\n1990 is rendered as \u00a0 MCMXC \u00a0 \u00a0 (1000 = M, \u00a0 900 = CM, \u00a0 90 = XC) \u00a0 \u00a0 and\n\n2008 is rendered as \u00a0 MMVIII \u00a0 \u00a0 \u00a0 (2000 = MM, \u00a0 8 = VIII).\n\nThe Roman numeral for 1666, \u00a0 MDCLXVI, \u00a0 uses each letter in descending order.\n\n\n\n"
    },
    {
        "answer": "-- Works for VARCHAR2 (up to 32k chars)\nCREATE OR REPLACE FUNCTION fn_rot13_native(p_text VARCHAR2) RETURN VARCHAR2 IS\n  c_source CONSTANT VARCHAR2(52) := 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n  c_target CONSTANT VARCHAR2(52) := 'NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm';\nBEGIN\n  RETURN TRANSLATE(p_text, c_source, c_target);\nEND;\n/\n\u00a0\n-- For CLOBs (translate only works with VARCHAR2, so do it in chunks)\nCREATE OR REPLACE FUNCTION fn_rot13_clob(p_text CLOB) RETURN CLOB IS\n  c_source CONSTANT VARCHAR2(52) := 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n  c_target CONSTANT VARCHAR2(52) := 'NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm';\n  c_chunk_size CONSTANT PLS_INTEGER := 4000;\n  v_result CLOB := NULL;\nBEGIN\n  FOR i IN 0..TRUNC(LENGTH(p_text) / c_chunk_size) LOOP\n    v_result := v_result || \n      TRANSLATE(DBMS_LOB.SUBSTR(p_text, c_chunk_size, i * c_chunk_size + 1), c_source, c_target);\n  END LOOP;\n  RETURN v_result;\nEND;\n/\n\u00a0\n-- The full algorithm (Slower. And MUCH slower if using CLOB!)\nCREATE OR REPLACE FUNCTION fn_rot13_algorithm(p_text VARCHAR2) RETURN CLOB IS\n  c_upper_a CONSTANT PLS_INTEGER := ASCII('A');\n  c_lower_a CONSTANT PLS_INTEGER := ASCII('a');\n  v_rot VARCHAR2(32000);\n  v_char VARCHAR2(1);\nBEGIN\n  FOR i IN 1..LENGTH(p_text) LOOP\n    v_char := SUBSTR(p_text, i, 1);\n    IF v_char BETWEEN 'A' AND 'Z' THEN\n      v_rot := v_rot || CHR(MOD(ASCII(v_char) - c_upper_a + 13, 26) + c_upper_a);\n    ELSIF v_char BETWEEN 'a' AND 'z' THEN\n      v_rot := v_rot || CHR(MOD(ASCII(v_char) - c_lower_a + 13, 26) + c_lower_a);\n    ELSE\n      v_rot := v_rot || v_char;\n    END IF;\n  END LOOP;\n  RETURN v_rot;\nEND;\n/\n\u00a0",
        "context": "",
        "question": "\n\nTask\n\nImplement a \u00a0 rot-13 \u00a0 function \u00a0 (or procedure, class, subroutine, or other \"callable\" object as appropriate to your programming environment).\n\nOptionally wrap this function in a utility program \u00a0 (like tr, \u00a0 which acts like a common UNIX utility, performing a line-by-line rot-13 encoding of every line of input contained in each file listed on its command line, \u00a0 or (if no filenames are passed thereon) acting as a filter on its \u00a0 \"standard input.\"\n\n\n\n(A number of UNIX scripting languages and utilities, such as \u00a0 awk \u00a0 and \u00a0 sed \u00a0 either default to processing files in this way or have command line switches or modules to easily implement these wrapper semantics, e.g., \u00a0 Perl \u00a0 and \u00a0 Python).\n\nThe \u00a0 rot-13 \u00a0 encoding is commonly known from the early days of Usenet \"Netnews\" as a way of obfuscating text to prevent casual reading of \u00a0 spoiler \u00a0 or potentially offensive material.\n\nMany news reader and mail user agent programs have built-in rot-13 encoder/decoders or have the ability to feed a message through any external utility script for performing this (or other) actions.\n\nThe definition of the rot-13 function is to simply replace every letter of the ASCII alphabet with the letter which is \"rotated\" 13 characters \"around\" the 26 letter alphabet from its normal cardinal position \u00a0 (wrapping around from \u00a0 z \u00a0 to \u00a0 a \u00a0 as necessary).\n\nThus the letters \u00a0 abc \u00a0 become \u00a0 nop \u00a0 and so on.\n\nTechnically rot-13 is a \u00a0 \"mono-alphabetic substitution cipher\" \u00a0 with a trivial \u00a0 \"key\".\n\nA proper implementation should work on upper and lower case letters, preserve case, and pass all non-alphabetic characters\nin the input stream through without alteration.\n\n\n\nRelated tasks\n\n \u00a0 Caesar cipher\n \u00a0 Substitution Cipher\n \u00a0 Vigen\u00e8re Cipher/Cryptanalysis\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\n\u00a0\n/*****************************************************************\n * $Author: Atanas Kebedjiev $\n *****************************************************************\n * Encoding an Arabic numeral to a Roman in the range 1..3999 is much simpler as Oracle provides the conversion formats.\n * Please see also the SQL solution for the same task.\n */\n\u00a0\nCREATE OR REPLACE\nFUNCTION rencode(an IN NUMBER) \n  RETURN VARCHAR2 \nIS\nBEGIN\n  RETURN to_char(an, 'RN');\nEND rencode;\n\u00a0\nBEGIN\n\u00a0\n    DBMS_OUTPUT.PUT_LINE ('2012 = ' || rencode('2012'));     -- MMXII\n    DBMS_OUTPUT.PUT_LINE ('1951 = ' || rencode('1951'));     -- MCMLI\n    DBMS_OUTPUT.PUT_LINE ('1987 = ' || rencode('1987'));     -- MCMLXXXVII\n    DBMS_OUTPUT.PUT_LINE ('1666 = ' || rencode('1666'));     -- MDCLXVI\n    DBMS_OUTPUT.PUT_LINE ('1999 = ' || rencode('1999'));     -- MCMXCIX\n\u00a0\nEND;\n\u00a0",
        "context": "",
        "question": "Task\n\nCreate a function taking a positive integer as its parameter and returning a string containing the Roman numeral representation of that integer. Modern Roman numerals are written by expressing each digit separately, starting with the left most digit and skipping any digit with a value of zero.\n\n\n\nIn Roman numerals:\n\n 1990 is rendered: 1000=M, 900=CM, 90=XC; resulting in MCMXC\n 2008 is written as 2000=MM, 8=VIII; or MMVIII\n 1666 uses each Roman symbol in descending order: MDCLXVI\n\n"
    },
    {
        "answer": "\u00a0\nSELECT translate(\n        'The quick brown fox jumps over the lazy dog.',\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n        'NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm'\n        )\n        FROM dual;\n\u00a0",
        "context": "",
        "question": "\n\nTask\n\nImplement a \u00a0 rot-13 \u00a0 function \u00a0 (or procedure, class, subroutine, or other \"callable\" object as appropriate to your programming environment).\n\nOptionally wrap this function in a utility program \u00a0 (like tr, \u00a0 which acts like a common UNIX utility, performing a line-by-line rot-13 encoding of every line of input contained in each file listed on its command line, \u00a0 or (if no filenames are passed thereon) acting as a filter on its \u00a0 \"standard input.\"\n\n\n\n(A number of UNIX scripting languages and utilities, such as \u00a0 awk \u00a0 and \u00a0 sed \u00a0 either default to processing files in this way or have command line switches or modules to easily implement these wrapper semantics, e.g., \u00a0 Perl \u00a0 and \u00a0 Python).\n\nThe \u00a0 rot-13 \u00a0 encoding is commonly known from the early days of Usenet \"Netnews\" as a way of obfuscating text to prevent casual reading of \u00a0 spoiler \u00a0 or potentially offensive material.\n\nMany news reader and mail user agent programs have built-in rot-13 encoder/decoders or have the ability to feed a message through any external utility script for performing this (or other) actions.\n\nThe definition of the rot-13 function is to simply replace every letter of the ASCII alphabet with the letter which is \"rotated\" 13 characters \"around\" the 26 letter alphabet from its normal cardinal position \u00a0 (wrapping around from \u00a0 z \u00a0 to \u00a0 a \u00a0 as necessary).\n\nThus the letters \u00a0 abc \u00a0 become \u00a0 nop \u00a0 and so on.\n\nTechnically rot-13 is a \u00a0 \"mono-alphabetic substitution cipher\" \u00a0 with a trivial \u00a0 \"key\".\n\nA proper implementation should work on upper and lower case letters, preserve case, and pass all non-alphabetic characters\nin the input stream through without alteration.\n\n\n\nRelated tasks\n\n \u00a0 Caesar cipher\n \u00a0 Substitution Cipher\n \u00a0 Vigen\u00e8re Cipher/Cryptanalysis\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\n-- \n-- This only works under Oracle and has the limitation of 1 to 3999\n\u00a0\n\u00a0\nSQL> SELECT to_char(1666, 'RN') urcoman, to_char(1666, 'rn') lcroman FROM dual;\n\u00a0\nURCOMAN         LCROMAN\n--------------- ---------------\n        MDCLXVI         mdclxvi\n\u00a0",
        "context": "",
        "question": "Task\n\nCreate a function taking a positive integer as its parameter and returning a string containing the Roman numeral representation of that integer. Modern Roman numerals are written by expressing each digit separately, starting with the left most digit and skipping any digit with a value of zero.\n\n\n\nIn Roman numerals:\n\n 1990 is rendered: 1000=M, 900=CM, 90=XC; resulting in MCMXC\n 2008 is written as 2000=MM, 8=VIII; or MMVIII\n 1666 uses each Roman symbol in descending order: MDCLXVI\n\n"
    },
    {
        "answer": "SELECT rpad('', 10, 'ha')",
        "context": "",
        "question": "Take a string and repeat it some number of times.\n\nExample: repeat(\"ha\", 5) \u00a0 => \u00a0 \"hahahahaha\"\n\nIf there is a simpler/more efficient way to repeat a single \u201ccharacter\u201d (i.e. creating a string filled with a certain character), you might want to show that as well (i.e. repeat-char(\"*\", 5) => \"*****\").\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\nVALUES REPEAT('ha', 5);\nVALUES RPAD('', 10, 'ha');\n\u00a0",
        "context": "",
        "question": "Take a string and repeat it some number of times.\n\nExample: repeat(\"ha\", 5) \u00a0 => \u00a0 \"hahahahaha\"\n\nIf there is a simpler/more efficient way to repeat a single \u201ccharacter\u201d (i.e. creating a string filled with a certain character), you might want to show that as well (i.e. repeat-char(\"*\", 5) => \"*****\").\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "select REPLICATE( 'ha', 5 )",
        "context": "",
        "question": "Take a string and repeat it some number of times.\n\nExample: repeat(\"ha\", 5) \u00a0 => \u00a0 \"hahahahaha\"\n\nIf there is a simpler/more efficient way to repeat a single \u201ccharacter\u201d (i.e. creating a string filled with a certain character), you might want to show that as well (i.e. repeat-char(\"*\", 5) => \"*****\").\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\n/*\nThis code is an implementation of \"Remove duplicate elements\" in SQL ORACLE 19c \np_in_str    -- input string  \np_delimiter -- delimeter \n*/\nWITH\n  FUNCTION remove_duplicate_elements(p_in_str IN varchar2, p_delimiter IN varchar2 DEFAULT ',') RETURN varchar2 IS\n  v_in_str varchar2(32767)\u00a0:= REPLACE(p_in_str,p_delimiter,',');\n  v_res    varchar2(32767);\nBEGIN\n  --\n  EXECUTE immediate 'select listagg(distinct cv,:p_delimiter) from (select (column_value).getstringval() cv from xmltable(:v_in_str))' \n     INTO v_res USING p_delimiter, v_in_str;\n  --\n  RETURN v_res;\n  --\nEND;\n\u00a0\n--Test\nSELECT remove_duplicate_elements('1, 2, 3, \"a\", \"b\", \"c\", 2, 3, 4, \"b\", \"c\", \"d\"') AS res FROM dual\nUNION ALL \nSELECT remove_duplicate_elements('3 9 1 10 3 7 6 5 2 7 4 7 4 2 2 2 2 8 2 10 4 9 2 4 9 3 4 3 4 7',' ') AS res FROM dual\n; \n\u00a0",
        "context": "",
        "question": "\nSorting Algorithm\n\nThis is a sorting algorithm. \u00a0 It may be applied to a set of data in order to sort it. \u00a0 \u00a0\nFor comparing various sorts, see compare sorts. \u00a0\nFor other sorting algorithms, \u00a0 see sorting\u00a0algorithms, \u00a0 or:\n\nO(n logn) sorts\nHeap\u00a0sort |\nMerge\u00a0sort |\nPatience\u00a0sort |\nQuick\u00a0sort\nO(n log2n) sorts\nShell\u00a0Sort\nO(n2) sorts\nBubble\u00a0sort |\nCocktail\u00a0sort |\nCocktail\u00a0sort\u00a0with\u00a0shifting\u00a0bounds |\nComb\u00a0sort |\nCycle\u00a0sort |\nGnome\u00a0sort |\nInsertion\u00a0sort |\nSelection\u00a0sort |\nStrand\u00a0sort\nother sorts\nBead\u00a0sort |\nBogo\u00a0sort |\nCommon\u00a0sorted\u00a0list |\nComposite\u00a0structures\u00a0sort |\nCustom\u00a0comparator\u00a0sort |\nCounting\u00a0sort |\nDisjoint\u00a0sublist\u00a0sort |\nExternal\u00a0sort |\nJort\u00a0sort |\nLexicographical\u00a0sort |\nNatural\u00a0sorting |\nOrder\u00a0by\u00a0pair\u00a0comparisons |\nOrder\u00a0disjoint\u00a0list\u00a0items |\nOrder\u00a0two\u00a0numerical\u00a0lists |\nObject\u00a0identifier\u00a0(OID)\u00a0sort |\nPancake\u00a0sort |\nQuickselect |\nPermutation\u00a0sort |\nRadix\u00a0sort |\nRanking\u00a0methods |\nRemove\u00a0duplicate\u00a0elements |\nSleep\u00a0sort |\nStooge\u00a0sort |\n[Sort\u00a0letters\u00a0of\u00a0a\u00a0string] |\nThree\u00a0variable\u00a0sort |\nTopological\u00a0sort |\nTree\u00a0sort\n\n\nGiven an Array, derive a sequence of elements in which all duplicates are removed.\n\nThere are basically three approaches seen here:\n\n Put the elements into a hash table which does not allow duplicates. The complexity is O(n) on average, and O(n2) worst case. This approach requires a hash function for your type (which is compatible with equality), either built-in to your language, or provided by the user.\n Sort the elements and remove consecutive duplicate elements. The complexity of the best sorting algorithms is O(n log n). This approach requires that your type be \"comparable\", i.e., have an ordering. Putting the elements into a self-balancing binary search tree is a special case of sorting.\n Go through the list, and for each element, check the rest of the list to see if it appears again, and discard it if it does. The complexity is O(n2). The up-shot is that this always works on any type (provided that you can test for equality).\n\n"
    },
    {
        "answer": "DBMS_RANDOM.RANDOM --produces integers in [-2^^31, 2^^31).\nDBMS_RANDOM.VALUE  --produces numbers in [0,1) with 38 digits of precision.\nDBMS_RANDOM.NORMAL --produces normal distributed numbers with a mean of 0 and a variance of 1",
        "context": "",
        "question": "The task is to:\n\n State the type of random number generator algorithm used in a language's built-in random number generator. If the language or its immediate libraries don't provide a random number generator, skip this task.\n If possible, give a link to a wider explanation of the algorithm used.\nNote: the task is not to create an RNG, but to report on the languages in-built RNG that would be the most likely RNG used.\n\nThe main types of pseudo-random number generator (PRNG) that are in use are the Linear Congruential Generator (LCG), and the Generalized Feedback Shift Register (GFSR), (of which the Mersenne twister generator is a subclass). The last main type is where the output of one of the previous ones (typically a Mersenne twister) is fed through a cryptographic hash function to maximize unpredictability of individual bits.\n\nNote that neither LCGs nor GFSRs should be used for the most demanding applications (cryptography) without additional steps.\n"
    },
    {
        "answer": "\u00a0\nDECLARE\n  --The desired collection\n  type t_coll is table of number index by binary_integer; \n  l_coll t_coll;\n\u00a0\n  c_max pls_integer\u00a0:= 1000;\nBEGIN\n   FOR l_counter IN 1 .. c_max\n   LOOP\n      -- dbms_random.normal delivers normal distributed random numbers with a mean of 0 and a variance of 1\n      -- We just adjust the values and get the desired result:\n      l_coll(l_counter)\u00a0:= DBMS_RANDOM.normal * 0.5 + 1;\n      DBMS_OUTPUT.put_line (l_coll(l_counter));\n   END LOOP;\nEND;\n\u00a0",
        "context": "",
        "question": "Task\n\nGenerate a collection filled with \u00a0 1000 \u00a0 normally distributed random (or pseudo-random) numbers\nwith a mean of \u00a0 1.0 \u00a0 and a \u00a0 standard deviation \u00a0 of \u00a0 0.5\n\n\n\nMany libraries only generate uniformly distributed random numbers. If so, you may use one of these algorithms.\n\n\n\nRelated task\n\n \u00a0 Standard deviation\n\n"
    },
    {
        "answer": "\u00a0\n--Clean up previous run  \nIF EXISTS (SELECT * \n           FROM   SYS.TYPES \n           WHERE  NAME = 'FairPlayTable') \n  DROP TYPE FAIRPLAYTABLE \n\u00a0\n--Set Types  \nCREATE TYPE FAIRPLAYTABLE AS TABLE (LETTER VARCHAR(1), COLID INT, ROWID INT) \n\u00a0\nGO \n\u00a0\n--Configuration Variables  \nDECLARE @KEYWORD VARCHAR(25) = 'CHARLES' --Keyword for encryption  \nDECLARE @INPUT VARCHAR(MAX) = 'Testing Seeconqz' --Word to be encrypted  \nDECLARE @Q INT = 0 -- Q removed?  \nDECLARE @ENCRYPT INT = 1 --Encrypt?  \n--Setup Variables  \nDECLARE @WORDS TABLE \n  ( \n     WORD_PRE  VARCHAR(2), \n     WORD_POST VARCHAR(2) \n  ) \nDECLARE @T_TABLE FAIRPLAYTABLE \nDECLARE @NEXTLETTER CHAR(1) \nDECLARE @WORD VARCHAR(2), \n        @COL1 INT, \n        @COL2 INT, \n        @ROW1 INT, \n        @ROW2 INT, \n        @TMP  INT \nDECLARE @SQL     NVARCHAR(MAX) = '', \n        @COUNTER INT = 1, \n        @I       INT = 1 \nDECLARE @COUNTER_2 INT = 1 \n\u00a0\nSET @INPUT = REPLACE(@INPUT, ' ', '') \nSET @KEYWORD = UPPER(@KEYWORD) \n\u00a0\nDECLARE @USEDLETTERS VARCHAR(MAX) = '' \nDECLARE @TESTWORDS VARCHAR(2), \n        @A         INT = 0 \n\u00a0\nWHILE @COUNTER_2 <= 5 \n  BEGIN \n      WHILE @COUNTER <= 5 \n        BEGIN \n            IF LEN(@KEYWORD) > 0 \n              BEGIN \n                  SET @NEXTLETTER = LEFT(@KEYWORD, 1) \n                  SET @KEYWORD = RIGHT(@KEYWORD, LEN(@KEYWORD) - 1) \n\u00a0\n                  IF CHARINDEX(@NEXTLETTER, @USEDLETTERS) = 0 \n                    BEGIN \n                        INSERT INTO @T_TABLE \n                        SELECT @NEXTLETTER, \n                               @COUNTER, \n                               @COUNTER_2 \n\u00a0\n                        SET @COUNTER = @COUNTER + 1 \n                        SET @USEDLETTERS = @USEDLETTERS + @NEXTLETTER \n                    END \n              END \n            ELSE \n              BEGIN \n                  WHILE 1 = 1 \n                    BEGIN \n                        IF CHARINDEX(CHAR(64 + @I), @USEDLETTERS) = 0 \n                           AND NOT ( CHAR(64 + @I) = 'Q' \n                                     AND @Q = 1 ) \n                           AND NOT ( @Q = 0 \n                                     AND CHAR(64 + @I) = 'J' ) \n                          BEGIN \n                              SET @NEXTLETTER = CHAR(64 + @I) \n                              SET @USEDLETTERS = @USEDLETTERS + CHAR(64 + @I) \n                              SET @I = @I + 1 \n\u00a0\n                              BREAK \n                          END \n\u00a0\n                        SET @I = @I + 1 \n                    END \n\u00a0\n                  -- SELECT 1 AS [T] \n                  --BREAK \n                  INSERT INTO @T_TABLE \n                  SELECT @NEXTLETTER, \n                         @COUNTER, \n                         @COUNTER_2 \n\u00a0\n                  SET @COUNTER = @COUNTER + 1 \n              END \n        END \n\u00a0\n      SET @COUNTER_2 = @COUNTER_2 + 1 \n      SET @COUNTER = 1 \n  END \n\u00a0\n--Split word into Digraphs  \nWHILE @A < 1 \n  BEGIN \n      SET @TESTWORDS = UPPER(LEFT(@INPUT, 2)) \n\u00a0\n      IF LEN(@TESTWORDS) = 1 \n        BEGIN \n            SET @TESTWORDS = @TESTWORDS + 'X' \n            SET @A = 1 \n        END \n      ELSE IF RIGHT(@TESTWORDS, 1) = LEFT(@TESTWORDS, 1) \n        BEGIN \n            SET @TESTWORDS = RIGHT(@TESTWORDS, 1) + 'X' \n            SET @INPUT = RIGHT(@INPUT, LEN(@INPUT) - 1) \n        END \n      ELSE \n        SET @INPUT = RIGHT(@INPUT, LEN(@INPUT) - 2) \n\u00a0\n      IF LEN(@INPUT) = 0 \n        SET @A = 1 \n\u00a0\n      INSERT @WORDS \n      SELECT @TESTWORDS, \n             '' \n  END \n\u00a0\n--Start Encryption \nIF @ENCRYPT = 1 \n  BEGIN \n      --Loop through Digraphs amd encrypt  \n      DECLARE WORDS_LOOP CURSOR LOCAL FORWARD_ONLY FOR \n        SELECT WORD_PRE \n        FROM   @WORDS \n        FOR UPDATE OF WORD_POST \n\u00a0\n      OPEN WORDS_LOOP \n\u00a0\n      FETCH NEXT FROM WORDS_LOOP INTO @WORD \n\u00a0\n      WHILE @@FETCH_STATUS = 0 \n        BEGIN \n            --Find letter positions  \n            SET @ROW1 = (SELECT ROWID \n                         FROM   @T_TABLE \n                         WHERE  LETTER = LEFT(@WORD, 1)) \n            SET @ROW2 = (SELECT ROWID \n                         FROM   @T_TABLE \n                         WHERE  LETTER = RIGHT(@WORD, 1)) \n            SET @COL1 = (SELECT COLID \n                         FROM   @T_TABLE \n                         WHERE  LETTER = LEFT(@WORD, 1)) \n            SET @COL2 = (SELECT COLID \n                         FROM   @T_TABLE \n                         WHERE  LETTER = RIGHT(@WORD, 1)) \n\u00a0\n            --Move positions according to encryption rules  \n            IF @COL1 = @COL2 \n              BEGIN \n                  SET @ROW1 = @ROW1 + 1 \n                  SET @ROW2 = @ROW2 + 1 \n              --select 'row'  \n              END \n            ELSE IF @ROW1 = @ROW2 \n              BEGIN \n                  SET @COL1 = @COL1 + 1 \n                  SET @COL2 = @COL2 + 1 \n              --select 'col'  \n              END \n            ELSE \n              BEGIN \n                  SET @TMP = @COL2 \n                  SET @COL2 = @COL1 \n                  SET @COL1 = @TMP \n              --select 'reg'  \n              END \n\u00a0\n            IF @ROW1 = 6 \n              SET @ROW1 = 1 \n\u00a0\n            IF @ROW2 = 6 \n              SET @ROW2 = 1 \n\u00a0\n            IF @COL1 = 6 \n              SET @COL1 = 1 \n\u00a0\n            IF @COL2 = 6 \n              SET @COL2 = 1 \n\u00a0\n            --Find encrypted letters by positions  \n            UPDATE @WORDS \n            SET    WORD_POST = (SELECT (SELECT LETTER \n                                        FROM   @T_TABLE \n                                        WHERE  ROWID = @ROW1 \n                                               AND COLID = @COL1) \n                                       + (SELECT LETTER \n                                          FROM   @T_TABLE \n                                          WHERE  COLID = @COL2 \n                                                 AND ROWID = @ROW2)) \n            WHERE  WORD_PRE = @WORD \n\u00a0\n            FETCH NEXT FROM WORDS_LOOP INTO @WORD \n        END \n\u00a0\n      CLOSE WORDS_LOOP \n\u00a0\n      DEALLOCATE WORDS_LOOP \n  END \n--Start Decryption \nELSE \n  BEGIN \n      --Loop through Digraphs amd decrypt  \n      DECLARE WORDS_LOOP CURSOR LOCAL FORWARD_ONLY FOR \n        SELECT WORD_PRE \n        FROM   @WORDS \n        FOR UPDATE OF WORD_POST \n\u00a0\n      OPEN WORDS_LOOP \n\u00a0\n      FETCH NEXT FROM WORDS_LOOP INTO @WORD \n\u00a0\n      WHILE @@FETCH_STATUS = 0 \n        BEGIN \n            --Find letter positions  \n            SET @ROW1 = (SELECT ROWID \n                         FROM   @T_TABLE \n                         WHERE  LETTER = LEFT(@WORD, 1)) \n            SET @ROW2 = (SELECT ROWID \n                         FROM   @T_TABLE \n                         WHERE  LETTER = RIGHT(@WORD, 1)) \n            SET @COL1 = (SELECT COLID \n                         FROM   @T_TABLE \n                         WHERE  LETTER = LEFT(@WORD, 1)) \n            SET @COL2 = (SELECT COLID \n                         FROM   @T_TABLE \n                         WHERE  LETTER = RIGHT(@WORD, 1)) \n\u00a0\n            --Move positions according to encryption rules  \n            IF @COL1 = @COL2 \n              BEGIN \n                  SET @ROW1 = @ROW1 - 1 \n                  SET @ROW2 = @ROW2 - 1 \n              --select 'row'  \n              END \n            ELSE IF @ROW1 = @ROW2 \n              BEGIN \n                  SET @COL1 = @COL1 - 1 \n                  SET @COL2 = @COL2 - 1 \n              --select 'col'  \n              END \n            ELSE \n              BEGIN \n                  SET @TMP = @COL2 \n                  SET @COL2 = @COL1 \n                  SET @COL1 = @TMP \n              --select 'reg'  \n              END \n\u00a0\n            IF @ROW1 = 0 \n              SET @ROW1 = 5 \n\u00a0\n            IF @ROW2 = 0 \n              SET @ROW2 = 5 \n\u00a0\n            IF @COL1 = 0 \n              SET @COL1 = 5 \n\u00a0\n            IF @COL2 = 0 \n              SET @COL2 = 5 \n\u00a0\n            --Find decrypted letters by positions  \n            UPDATE @WORDS \n            SET    WORD_POST = (SELECT (SELECT LETTER \n                                        FROM   @T_TABLE \n                                        WHERE  ROWID = @ROW1 \n                                               AND COLID = @COL1) \n                                       + (SELECT LETTER \n                                          FROM   @T_TABLE \n                                          WHERE  COLID = @COL2 \n                                                 AND ROWID = @ROW2)) \n            WHERE  WORD_PRE = @WORD \n\u00a0\n            FETCH NEXT FROM WORDS_LOOP INTO @WORD \n        END \n\u00a0\n      CLOSE WORDS_LOOP \n\u00a0\n      DEALLOCATE WORDS_LOOP \n  END \n\u00a0\n--Output \nDECLARE WORDS CURSOR LOCAL FAST_FORWARD FOR \n  SELECT WORD_POST \n  FROM   @WORDS \n\u00a0\nOPEN WORDS \n\u00a0\nFETCH NEXT FROM WORDS INTO @WORD \n\u00a0\nWHILE @@FETCH_STATUS = 0 \n  BEGIN \n      SET @SQL = @SQL + @WORD + ' '\n\u00a0\n      FETCH NEXT FROM WORDS INTO @WORD \n  END \n\u00a0\nCLOSE WORDS \n\u00a0\nDEALLOCATE WORDS \n\u00a0\nSELECT @SQL \n\u00a0\n--Cleanup  \nIF EXISTS (SELECT * \n           FROM   SYS.TYPES \n           WHERE  NAME = 'FairPlayTable') \n  DROP TYPE FAIRPLAYTABLE \n\u00a0",
        "context": "",
        "question": "Playfair cipher\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\nTask\n\nImplement a  Playfair cipher for encryption and decryption.\n\n\n\nThe user must be able to choose \u00a0 J \u00a0=\u00a0 I \u00a0 \u00a0 or \u00a0 no \u00a0 Q \u00a0 in the alphabet.\n\nThe output of the encrypted and decrypted message must be in capitalized digraphs, separated by spaces.\n\n\n\nOutput example\n\n                HI DE TH EG OL DI NT HE TR EX ES TU MP\n\n\n"
    },
    {
        "answer": "declare @number int\nset @number = 514229 -- number to check\n\u00a0\n;with cte(number) as \n(\n select 2\n union all\n select number+1\n from cte\n where number+1 < @number\n)\nselect\n      cast(@number as varchar(100)) +\n      case \n          when exists\n\t\t\t\t  (\n\t\t\t\t\tselect * \n\t\t\t\t\tfrom \n\t\t\t\t\t(\n\t\t\t\t\t\tselect number, @number % number modNumber\n\t\t\t\t\t\tfrom cte\n\t\t\t\t\t) tmp\n\t\t\t\t\twhere tmp.modNumber = 0 \n\t\t\t\t  ) \n\t\t\t\t          then ' is composite'\n\t\t  else\n\t\t\t\t\t\t ' is prime'\n\t  end primalityTest\noption (maxrecursion 0)",
        "context": "",
        "question": "Task\n\nWrite a boolean function that tells whether a given integer is prime.\n\n\n\nRemember that \u00a0 1 \u00a0 and all non-positive numbers are not prime.\n\nUse trial division.\n\nEven numbers greater than \u00a0 2 \u00a0 may be eliminated right away.\n\nA loop from \u00a0 3 \u00a0 to \u00a0 \u221a\u00a0n\u00a0 \u00a0 will suffice, \u00a0 but other loops are allowed.\n\n\n\nRelated tasks\n\n \u00a0 count in factors\n \u00a0 prime decomposition\n \u00a0 AKS test for primes\n \u00a0 factors of an integer\n \u00a0 Sieve of Eratosthenes\n \u00a0 factors of a Mersenne number\n \u00a0 trial factoring of a Mersenne number\n \u00a0 partition an integer X into N primes\n \u00a0 sequence of primes by Trial Division\n\n"
    },
    {
        "answer": "-- This works in Oracle's SQL*Plus command line utility\n\u00a0\nVARIABLE P_NAME VARCHAR2(20);\nVARIABLE P_SCORE NUMBER;\nVARIABLE P_ACTIVE VARCHAR2(5);\nVARIABLE P_JERSEYNUM NUMBER;\n\u00a0\nBEGIN\n\u00a0\n:P_NAME\u00a0:= 'Smith, Steve';\n:P_SCORE\u00a0:= 42;\n:P_ACTIVE\u00a0:= 'TRUE';\n:P_JERSEYNUM\u00a0:= 99;\n\u00a0\nEND;\n/\n\u00a0\nDROP TABLE players;\n\u00a0\nCREATE TABLE players \n(\nNAME VARCHAR2(20),\nSCORE NUMBER,\nACTIVE VARCHAR2(5),\nJERSEYNUM NUMBER\n);\n\u00a0\nINSERT INTO players VALUES ('No name',0,'FALSE',99);\n\u00a0\ncommit;\n\u00a0\nSELECT * FROM players;\n\u00a0\nUPDATE players\n   SET name =\u00a0:P_NAME, score =\u00a0:P_SCORE, active =\u00a0:P_ACTIVE\n   WHERE jerseyNum =\u00a0:P_JERSEYNUM;\n\u00a0\ncommit;\n\u00a0\nSELECT * FROM players;",
        "context": "",
        "question": "SQL injection\nUsing a SQL update statement like this one (spacing is optional):\n\nUPDATE players\n   SET name = 'Smith, Steve', score = 42, active = TRUE\n   WHERE jerseyNum = 99\nNon-parameterized SQL is the GoTo statement of database programming. Don't do it, and make sure your coworkers don't either."
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nCREATE TABLE PLAYERS (\n  NAME VARCHAR(32),\n  SCORE INT,\n  ACTIVE SMALLINT,\n  JERSEYNUM INT\n) @\n\u00a0\nCREATE PROCEDURE UPDATE_PLAYER (\n  IN PLAYER_NAME VARCHAR(32),\n  IN PLAYER_SCORE INT,\n  IN PLAYER_ACTIVE SMALLINT,\n  IN JERSEY_NUMBER INT\n  )\n BEGIN\n  UPDATE PLAYERS\n  SET NAME = PLAYER_NAME, SCORE = PLAYER_SCORE, ACTIVE = PLAYER_ACTIVE\n  WHERE JERSEYNUM = JERSEY_NUMBER;\n END @\n\u00a0\nINSERT INTO PLAYERS VALUES ('Pele', '1280', 0, 10) @\n\u00a0\nCALL UPDATE_PLAYER ('Maradona', '600', 1, 10) @\n\u00a0\nSELECT * FROM PLAYERS @\n\u00a0",
        "context": "",
        "question": "SQL injection\nUsing a SQL update statement like this one (spacing is optional):\n\nUPDATE players\n   SET name = 'Smith, Steve', score = 42, active = TRUE\n   WHERE jerseyNum = 99\nNon-parameterized SQL is the GoTo statement of database programming. Don't do it, and make sure your coworkers don't either."
    },
    {
        "answer": "CREATE OR REPLACE FUNCTION rpn_calc(str VARCHAR2) RETURN NUMBER AS\n  TYPE  num_aa    IS TABLE OF NUMBER INDEX BY PLS_INTEGER;\n  TYPE  num_stack IS RECORD (a num_aa, top PLS_INTEGER DEFAULT 0);\n  ns    num_stack;\n  pos1  INTEGER := 1;\n  pos2  INTEGER;\n  token VARCHAR2(100);\n  op2   NUMBER;\n  PROCEDURE push(s IN OUT NOCOPY num_stack, x NUMBER) IS\n    BEGIN\n      s.top := s.top + 1;\n      s.a(s.top) := x;\n    END;\n  FUNCTION pop(s IN OUT NOCOPY num_stack) RETURN NUMBER IS\n      x NUMBER;\n    BEGIN\n      x := s.a(s.top);\n      s.top := s.top - 1;\n      RETURN x;\n    END;\n  PROCEDURE print_stack(s num_stack) IS  -- for debugging only; remove from final version\n      ps VARCHAR2(4000);\n    BEGIN \n      FOR i IN 1 .. s.top LOOP\n        ps := ps || s.a(i) || ' ';\n      END LOOP;\n      DBMS_OUTPUT.put_line('Stack: ' || RTRIM(ps));\n    END;\nBEGIN\n  WHILE pos1 <= LENGTH(str) LOOP\n    pos2  := INSTR(str || ' ', ' ', pos1);\n    token := SUBSTR(str, pos1, pos2 - pos1);\n    pos1  := pos2 + 1;\n    CASE token \n         WHEN '+' THEN push(ns, pop(ns) + pop(ns));\n         WHEN '-' THEN op2 := pop(ns); push(ns, pop(ns) - op2);\n         WHEN '*' THEN push(ns, pop(ns) * pop(ns));\n         WHEN '/' THEN op2 := pop(ns); push(ns, pop(ns) / op2);\n         WHEN '^' THEN op2 := pop(ns); push(ns, POWER(pop(ns), op2));\n         ELSE push(ns, TO_NUMBER(token));\n    END CASE;\n    print_stack(ns);    -- for debugging purposes only\n  END LOOP;\n  RETURN pop(ns);\nEND rpn_calc;\n/",
        "context": "",
        "question": "Task\n\nCreate a stack-based evaluator for an expression in \u00a0 reverse Polish notation (RPN) \u00a0 that also shows the changes in the stack as each individual token is processed as a table.\n\n\n\n Assume an input of a correct, space separated, string of tokens of an RPN expression\n Test with the RPN expression generated from the \u00a0 Parsing/Shunting-yard algorithm \u00a0 task: \n\n\u00a0 \u00a0 \u00a0 \u00a0  3 4 2 * 1 5 - 2 3 ^ ^ / + \n\n Print or display the output here\n\n\nNotes\n\n \u00a0  ^  \u00a0 means exponentiation in the expression above.\n \u00a0  /  \u00a0 means division.\n\n\nSee also\n\n \u00a0 Parsing/Shunting-yard algorithm for a method of generating an RPN from an infix expression.\n \u00a0 Several solutions to 24 game/Solve make use of RPN evaluators (although tracing how they work is not a part of that task).\n \u00a0 Parsing/RPN to infix conversion.\n \u00a0 Arithmetic evaluation.\n\n"
    },
    {
        "answer": "SET @txt = REPLACE('In girum imus nocte et consumimur igni', ' ', '');\nSELECT REVERSE(@txt) = @txt;",
        "context": "",
        "question": "A palindrome is a phrase which reads the same backward and forward.\n\nTask[edit]\nWrite a function or program that checks whether a given sequence of characters (or, if you prefer, bytes)\nis a palindrome.\n\nFor extra credit:\n\n Support Unicode characters.\n Write a second function (possibly as a wrapper to the first) which detects inexact palindromes, i.e. phrases that are palindromes if white-space and punctuation is ignored and case-insensitive comparison is used.\nHints\n It might be useful for this task to know how to reverse a string.\n This task's entries might also form the subjects of the task Test a function.\nRelated tasks\nWord plays\n\nOrdered words\nPalindrome detection\nSemordnilap\nAnagrams\nAnagrams/Deranged anagrams\n\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\nSELECT val, to_char(to_date(val,'j'),'jsp') name\nFROM\n(\nSELECT\nround( dbms_random.VALUE(1, 5373484)) val\nFROM dual\nCONNECT BY level <= 5\n);\n\u00a0\nSELECT to_char(to_date(5373485,'j'),'jsp') FROM dual;\n\u00a0",
        "context": "",
        "question": "Task\n\nShow how to spell out a number in English.\n\nYou can use a preexisting implementation or roll your own, but you should support inputs up to at least one million (or the maximum value of your language's default bounded integer type, if that's less).\n\nSupport for inputs other than positive integers (like zero, negative integers, and floating-point numbers) is optional.\n\n\n\nRelated task\n\n \u00a0 Spelling of ordinal numbers.\n\n"
    },
    {
        "answer": "\u00a0\nSELECT level card,\n        to_char(to_date(level,'j'),'fmjth') ord\nFROM dual\nCONNECT BY level <= 15;\n\u00a0\nSELECT to_char(to_date(5373485,'j'),'fmjth')\nFROM dual;\n\u00a0",
        "context": "",
        "question": "Write a function/method/subroutine/... that when given an integer greater than or equal to zero returns a string of the number followed by an apostrophe then the ordinal suffix.\n\n\n\nExample\n\nReturns would include 1'st 2'nd 3'rd 11'th 111'th 1001'st 1012'th\n\n\n\nTask\n\nUse your routine to show here the output for at least the following (inclusive) ranges of integer inputs:\n0..25, 250..265, 1000..1025\n\n\nNote: apostrophes are now optional to allow correct apostrophe-less English.\n\n\n\n"
    },
    {
        "answer": ";WITH Iterate(N,A,B,X0,X1)\n\tAS (\n\t\tSELECT \n\t\t\t1\n\t\t\t,CASE WHEN @a < 0 THEN @b-(-@a % @b) ELSE @a END\n\t\t\t,CASE WHEN @b < 0 THEN -@b ELSE @b END\n\t\t\t,0\n\t\t\t,1\n\t\tUNION ALL\n\t\tSELECT \n\t\t\tN+1\n\t\t\t,B\n\t\t\t,A%B\n\t\t\t,X1-((A/B)*X0)\n\t\t\t,X0\n\t\tFROM Iterate\n\t\tWHERE A != 1 AND B != 0\n\t),\n\tModularInverse(Result)\n\tAS (\n\t\tSELECT\n\t\t\t-1\n\t\t\tFROM Iterate\n\t\t\tWHERE A != 1 AND B = 0\n\t\tUNION ALL\n\t\tSELECT\n\t\t\tTOP(1)\n\t\t\tCASE WHEN X1 < 0 THEN X1+@b ELSE X1 END AS Result\n\t\t\tFROM Iterate\n\t\t\tWHERE (SELECT COUNT(*) FROM Iterate WHERE A != 1 AND B = 0) = 0\n\t\t\tORDER BY N DESC\n\t)\n\tSELECT *\n\tFROM ModularInverse",
        "context": "",
        "question": "From Wikipedia:\n\nIn modular arithmetic, \u00a0 the modular multiplicative inverse of an integer \u00a0  a  \u00a0 modulo \u00a0  m  \u00a0 is an integer \u00a0  x  \u00a0 such that\n\n\n\n\n\na\n\nx\n\u2261\n1\n\n\n(\nmod\n\nm\n)\n\n.\n\n\n{\\displaystyle a\\,x\\equiv 1{\\pmod {m}}.}\n\n\nOr in other words, such that:\n\n\n\n\n\n\u2203\nk\n\u2208\n\nZ\n\n,\n\na\n\nx\n=\n1\n+\nk\n\nm\n\n\n{\\displaystyle \\exists k\\in \\mathbb {Z} ,\\qquad a\\,x=1+k\\,m}\n\n\nIt can be shown that such an inverse exists \u00a0 if and only if \u00a0  a  \u00a0 and \u00a0  m  \u00a0 are coprime, \u00a0 but we will ignore this for this task.\n\n\n\nTask\n\nEither by implementing the algorithm, by using a dedicated library or by using a built-in function in\nyour language, \u00a0 compute the modular inverse of \u00a0 42 modulo 2017.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nWITH RECURSIVE\n  positions(i) AS (\n    VALUES(0)\n    UNION SELECT ALL\n    i+1 FROM positions WHERE i < 63\n    ),\n  solutions(board, n_queens) AS (\n    SELECT '----------------------------------------------------------------', CAST(0 AS BIGINT) \n      FROM positions\n    UNION\n    SELECT\n      substr(board, 1, i) || '*' || substr(board, i+2),n_queens + 1 AS n_queens\n      FROM positions AS ps, solutions \n    WHERE n_queens < 8\n      AND substr(board,1,i)\u00a0!= '*'\n      AND NOT EXISTS (\n        SELECT 1 FROM positions WHERE\n          substr(board,i+1,1) = '*' AND\n            (\n                i\u00a0% 8 = ps.i\u00a0%8 OR\n                CAST(i / 8 AS INT) = CAST(ps.i / 8 AS INT) OR\n                CAST(i / 8 AS INT) + (i\u00a0% 8) = CAST(ps.i / 8 AS INT) + (ps.i\u00a0% 8) OR\n                CAST(i / 8 AS INT) - (i\u00a0% 8) = CAST(ps.i / 8 AS INT) - (ps.i\u00a0% 8)\n            )\n        LIMIT 1\n        ) \n   ORDER BY n_queens DESC -- remove this when using Postgres (they don't support ORDER BY in CTEs)\n  )\nSELECT board,n_queens FROM solutions WHERE n_queens = 8;\n\u00a0\n\u00a0",
        "context": "",
        "question": "\n\nSolve the eight queens puzzle.\n\n\n\nYou can extend the problem to solve the puzzle with a board of size \u00a0 NxN.\n\nFor the number of solutions for small values of \u00a0 N, \u00a0 see \u00a0 OEIS: A000170.\n\n\n\nRelated tasks\n\n A* search algorithm\n Solve a Hidato puzzle\n Solve a Holy Knight's tour\n Knight's tour\n Peaceful chess queen armies\n Solve a Hopido puzzle\n Solve a Numbrix puzzle\n Solve the no connection puzzle\n\n"
    },
    {
        "answer": "\u00a0\n-- A column of a matrix.\nCREATE TYPE INTEGER_ARRAY AS INTEGER ARRAY[]@\n-- The whole matrix of any size.\nCREATE TYPE INTEGER_MATRIX AS INTEGER_ARRAY ARRAY[]@\n\u00a0\n/**\n * Retrieves the value from a matrix at a specific position.\n * \n * IN X: Row number.\n * IN Y: Column number.\n * IN M: Matrix.\n * RETURN the integer value at that position.\n */\nCREATE OR REPLACE FUNCTION GET_INTEGER_VALUE(\n  IN X SMALLINT,\n  IN Y SMALLINT,\n  IN M INTEGER_MATRIX)\nRETURNS INTEGER\nF_GET_INTEGER_VALUE: BEGIN\n  DECLARE A INTEGER_ARRAY;\n  DECLARE RET INTEGER;\n\u00a0\n  SET A = M[X];\n  SET RET = A[Y];\n  RETURN RET;\nEND F_GET_INTEGER_VALUE\n@\n\u00a0\n/**\n * Establishes the given value at a specific position in the matrix.\n * \n * IN X: Row number.\n * IN Y: Column number.\n * INOUT M: Matrix.\n * IN VAL: Value to set in the matrix.\n */\nCREATE OR REPLACE PROCEDURE SET_INTEGER_VALUE(\n  IN X SMALLINT,\n  IN Y SMALLINT,\n  INOUT M INTEGER_MATRIX,\n  IN VAL INTEGER)\nP_SET_INTEGER_VALUE: BEGIN\n  DECLARE A INTEGER_ARRAY;\n\u00a0\n  SET A = M[X];\n  SET A[Y] = VAL;\n  SET M[X] = A;\nEND P_SET_INTEGER_VALUE\n@\n\u00a0\n/**\n * Initializes the matriz at a given size with the same value in all positions.\n * \n * INOUT M: Matrix.\n * IN X: Number of rows.\n * IN Y: Number of columns per row.\n * IN VAL: Value to set in the matrix.\n */\nCREATE OR REPLACE PROCEDURE INIT_INTEGER_MATRIX(\n  INOUT M INTEGER_MATRIX,\n  IN X SMALLINT,\n  IN Y SMALLINT,\n  IN VAL INTEGER)\nP_INIT_INTEGER_MATRIX: BEGIN\n  DECLARE I SMALLINT DEFAULT 1;\n  DECLARE J SMALLINT;\n  DECLARE A INTEGER_ARRAY;\n\u00a0\n  WHILE (I <= X) DO\n   SET A = ARRAY[];\n   SET J = 1;\n   WHILE (J <= Y) DO\n    SET A[J] = VAL;\n    SET J = J + 1;\n   END WHILE;\n   SET M[I] = A;\n   SET I = I + 1;\n  END WHILE;\nEND P_INIT_INTEGER_MATRIX\n@\n\u00a0\n/**\n * Prints the content of the matrix to the standard output.\n * \n * INOUT M: Matrix.\n */\nCREATE OR REPLACE PROCEDURE PRINT_INTEGER_MATRIX(\n  IN M INTEGER_MATRIX)\nP_PRINT_INTEGER_MATRIX: BEGIN\n  DECLARE I SMALLINT DEFAULT 1;\n  DECLARE J SMALLINT;\n  DECLARE X SMALLINT;\n  DECLARE Y SMALLINT;\n  DECLARE VAL INTEGER;\n  DECLARE A INTEGER_ARRAY;\n  DECLARE RET VARCHAR(256);\n\u00a0\n  SET X = CARDINALITY(M);\n  CALL DBMS_OUTPUT.PUT_LINE('>>>>>');\n  WHILE (I <= X) DO\n   SET A = M[I];\n   SET RET = '[';\n   SET Y = CARDINALITY(A);\n   SET J = 1;\n   WHILE (J <= Y) DO\n    SET VAL = A[J];\n    SET RET = RET || VAL;\n    SET J = J + 1;\n    IF (J <= Y) THEN\n     SET RET = RET || ',';\n    END IF;\n   END WHILE;\n   SET RET = RET || ']';\n   CALL DBMS_OUTPUT.PUT_LINE(RET);\n   SET I = I + 1;\n  END WHILE;\n  CALL DBMS_OUTPUT.PUT_LINE('<<<<<');\nEND P_PRINT_INTEGER_MATRIX\n@\n\u00a0\n/**\n * Checks if a queen is safe in the given position.\n * \n * IN M: Matrix representing the chessboard.\n * IN ROW: Row of the queen.\n * IN COL: Column in the row for the queen.\n * IN SIZE: Size of the chessboard (max row, max col).\n * RETURNS true if the position is safe.\n */\nCREATE OR REPLACE FUNCTION IS_SAFE(\n  IN M INTEGER_MATRIX,\n  IN ROW SMALLINT,\n  IN COL SMALLINT,\n  IN SIZE SMALLINT)\n MODIFIES SQL DATA\n RETURNS BOOLEAN\n F_IS_SAFE: BEGIN\n  DECLARE I SMALLINT;\n  DECLARE J SMALLINT;\n  DECLARE VAL INTEGER;\n\u00a0\n  -- Debug purposes.\n  --CALL SET_INTEGER_VALUE(ROW, COL, M, -1);\n  --CALL PRINT_INTEGER_MATRIX(M);\n  --CALL SET_INTEGER_VALUE(ROW, COL, M, 0);\n\u00a0\n  SET I = 1;\n  WHILE (I <= COL) DO\n   SET VAL = GET_INTEGER_VALUE(ROW, I, M);\n   IF (VAL = 1) THEN\n    RETURN FALSE;\n   END IF;\n   SET I = I + 1;\n  END WHILE;\n\u00a0\n  SET I = ROW;\n  SET J = COL;\n  WHILE (I >= 1 AND J >= 1) DO\n   SET VAL = GET_INTEGER_VALUE(I, J, M);\n   IF (VAL = 1) THEN\n    CALL SET_INTEGER_VALUE(ROW, COL, M, 0);\n    RETURN FALSE;\n   END IF;\n   SET I = I - 1;\n   SET J = J - 1;\n  END WHILE;\n\u00a0\n  SET I = ROW;\n  SET J = COL;\n  WHILE (J >= 1 AND I <= SIZE) DO\n   SET VAL = GET_INTEGER_VALUE(I, J, M);\n   IF (VAL = 1) THEN\n    RETURN FALSE;\n   END IF;\n   SET I = I + 1;\n   SET J = J - 1;\n  END WHILE;\n\u00a0\n  RETURN TRUE;\n END F_IS_SAFE\n@\n\u00a0\n/**\n * Dummy procedure for the recurssion.\n * \n * IN SIZE: Size of the chessboard (max row, max col).\n * IN COL: Column to analyse.\n * OUT RET: True if it was possible to put all queens\n */\nCREATE OR REPLACE PROCEDURE SOLVE_N_QUEENS(\n  INOUT M INTEGER_MATRIX,\n  IN SIZE SMALLINT,\n  IN COL SMALLINT,\n  OUT RET BOOLEAN)\n P_SOLVE_N_QUEENS: BEGIN\n END P_SOLVE_N_QUEENS\n@\n\u00a0\n/**\n * Solves the n-queens algoritm.\n * \n * IN SIZE: Size of the chessboard (max row, max col).\n * IN COL: Column to analyse.\n * OUT RET: True if it was possible to put all queens\n */\nCREATE OR REPLACE PROCEDURE SOLVE_N_QUEENS(\n  INOUT M INTEGER_MATRIX,\n  IN SIZE SMALLINT,\n  IN COL SMALLINT,\n  OUT RET BOOLEAN)\n MODIFIES SQL DATA\n P_SOLVE_N_QUEENS: BEGIN\n  DECLARE I SMALLINT;\n  DECLARE SAFE BOOLEAN;\n  DECLARE SOLVED BOOLEAN;\n\u00a0\n  -- Debug purposes.\n  --CALL PRINT_INTEGER_MATRIX(M);\n  SET RET = FALSE;\n  IF (COL > SIZE) THEN\n   SET RET = TRUE;\n  ELSE\n   SET I = 1;\n   WHILE (I <= SIZE AND NOT RET) DO\n    SET SAFE = IS_SAFE(M, I, COL, SIZE);\n    IF (SAFE) THEN\n     CALL SET_INTEGER_VALUE(I, COL, M, 1);\n     CALL SOLVE_N_QUEENS(M, SIZE, COL + 1, SOLVED);\n     IF (SOLVED) THEN\n      SET RET = TRUE;\n     ELSE\n      CALL SET_INTEGER_VALUE(I, COL, M, 0); -- Backtrack.\n     END IF;\n\u00a0\n    END IF;\n\u00a0\n    SET I = I + 1;\n   END WHILE;\n\u00a0\n  END IF;\n END P_SOLVE_N_QUEENS\n@\n\u00a0\n/**\n * Main procedure to solve the n-queen algoritm.\n * \n * IN SIZE: Size of the chessboard. The bigger it is, the more time it takes.\n */\nCREATE OR REPLACE PROCEDURE N_QUEENS(\n  IN SIZE SMALLINT)\n P_N_QUEENS: BEGIN\n  DECLARE M INTEGER_MATRIX;\n  DECLARE SOL BOOLEAN DEFAULT FALSE;\n\u00a0\n  CALL INIT_INTEGER_MATRIX(M, SIZE, SIZE, 0);\n\u00a0\n  CALL SOLVE_N_QUEENS(M, SIZE, 1, SOL);\n  IF (SOL = TRUE) THEN\n   CALL PRINT_INTEGER_MATRIX(M);\n  ELSE\n   CALL DBMS_OUTPUT.PUT_LINE('Solution does not exist.');\n  END IF;\n\u00a0\n END P_N_QUEENS\n@\n\u00a0\n--#SET TERMINATOR\u00a0;\n\u00a0\n-- Activates the standard output for the current session.\nSET SERVEROUTPUT ON;\n\u00a0\nCALL N_QUEENS(4);\n\u00a0\nCALL N_QUEENS(8);\n\u00a0\nCALL N_QUEENS(16);\n\u00a0\n\u00a0\n\u00a0",
        "context": "",
        "question": "\n\nSolve the eight queens puzzle.\n\n\n\nYou can extend the problem to solve the puzzle with a board of size \u00a0 NxN.\n\nFor the number of solutions for small values of \u00a0 N, \u00a0 see \u00a0 OEIS: A000170.\n\n\n\nRelated tasks\n\n A* search algorithm\n Solve a Hidato puzzle\n Solve a Holy Knight's tour\n Knight's tour\n Peaceful chess queen armies\n Solve a Hopido puzzle\n Solve a Numbrix puzzle\n Solve the no connection puzzle\n\n"
    },
    {
        "answer": "\u00a0\n---- BEGIN ------------\ncreate table MONTY_HALL(\n  NOE int,\n  CAR int,\n  ALTERNATIVE int,\n  ORIGIN int,\n  [KEEP] int,\n  [CHANGE] int,\n  [RANDOM] int\n  )\n\u00a0\n-- INIT \ntruncate table MONTY_HALL\n\u00a0\ndeclare @N int  , @i int -- No of Experiments and their counter\ndeclare @rooms  int  ,  -- number of rooms\n        @origin int,  -- original choice\n\t\t@car int , -- room with car\n\t\t@alternative int -- alternative room\n\u00a0\nselect @rooms = 3, @N  = 100000 , @i = 0 \n\u00a0\n-- EXPERIMENTS LOOP \nwhile  @i < @N begin\n  select @car = FLOOR(rand()*@rooms)+1 , @origin = FLOOR(rand()*@rooms)+1\n  select @alternative = FLOOR(rand()*(@rooms-1))+1\n  select @alternative = case when @alternative < @origin then @alternative else  @alternative + 1 end\n  select @alternative = case when @origin = @car then @alternative else @car end\n\u00a0\n  insert MONTY_HALL\n  select @i,@car,@alternative,@origin,@origin,@alternative,case when rand() < 5e-1 then @origin else @alternative end\n\u00a0\n  select  @i = @i + 1\nend\n\u00a0\n-- RESULTS\nselect  avg (case when [KEEP] = CAR then 1e0 else 0e0 end )*1e2 as [% OF WINS FOR KEEP],\n        avg (case when [CHANGE] = CAR then 1e0 else 0e0 end )*1e2 as [% OF WINS FOR CHANGE],\n        avg (case when [RANDOM] = CAR then 1e0 else 0e0 end )*1e2 as [% OF WINS FOR RANDOM]\nfrom MONTY_HALL\n---- END ------------\n\u00a0",
        "context": "",
        "question": "\nSuppose you're on a game show and you're given the choice of three doors.\n\nBehind one door is a car; behind the others, goats.\n\nThe car and the goats were placed randomly behind the doors before the show.\n\n\n\nRules of the game\n\nAfter you have chosen a door, the door remains closed for the time being.\n\nThe game show host, Monty Hall, who knows what is behind the doors, now has to open one of the two remaining doors, and the door he opens must have a goat behind it.\n\nIf both remaining doors have goats behind them, he chooses one randomly.\n\nAfter Monty Hall opens a door with a goat, he will ask you to decide whether you want to stay with your first choice or to switch to the last remaining door.\n\nImagine that you chose Door 1 and the host opens Door 3, which has a goat.\n\nHe then asks you \"Do you want to switch to Door Number 2?\"\n\n\n\nThe question\n\nIs it to your advantage to change your choice?\n\n\n\nNote\n\nThe player may initially choose any of the three doors (not just Door 1), that the host opens a different door revealing a goat (not necessarily Door 3), and that he gives the player a second choice between the two remaining unopened doors.\n\n\n\nTask\n\nRun random simulations of the Monty Hall game. Show the effects of a strategy of the contestant always keeping his first guess so it can be contrasted with the strategy of the contestant always switching his guess.\n\nSimulate at least a thousand games using three doors for each strategy and show the results in such a way as to make it easy to compare the effects of each strategy.\n\n\n\nReferences\n\n Stefan Krauss, X. T. Wang, \"The psychology of the Monty Hall problem: Discovering psychological mechanisms for solving a tenacious brain teaser.\", Journal of Experimental Psychology: General, Vol 132(1), Mar 2003, 3-22 DOI: 10.1037/0096-3445.132.1.3\n A YouTube video: \u00a0 Monty Hall Problem - Numberphile. \n\n"
    },
    {
        "answer": "-- drop tables\nDROP TABLE IF EXISTS tmp_patients;\nDROP TABLE IF EXISTS tmp_visits;\n\u00a0\n-- create tables\nCREATE TABLE tmp_patients(\n\tPATIENT_ID INT,\n\tLASTNAME VARCHAR(20)\n);\n\u00a0\nCREATE TABLE tmp_visits(\n\tPATIENT_ID INT,\n\tVISIT_DATE DATE,\n\tSCORE NUMERIC(4,1)\n);\n\u00a0\n-- load data from csv files\n/*\n-- Note: LOAD DATA LOCAL requires `local-infile` enabled on both the client and server else you get error \"#1148 command is not allowed..\"\nLOAD DATA LOCAL INFILE '/home/csv/patients.csv' INTO TABLE `tmp_patients` FIELDS TERMINATED BY ',' LINES TERMINATED BY '\\n' IGNORE 1 LINES;\nLOAD DATA LOCAL INFILE '/home/csv/visits.csv' INTO TABLE `tmp_visits` FIELDS TERMINATED BY ',' LINES TERMINATED BY '\\n' IGNORE 1 LINES;\n*/\n\u00a0\n-- load data hard coded\nINSERT INTO tmp_patients(PATIENT_ID, LASTNAME)\nVALUES\n(1001, 'Hopper'),\n(4004, 'Wirth'),\n(3003, 'Kemeny'),\n(2002, 'Gosling'),\n(5005, 'Kurtz');\n\u00a0\nINSERT INTO tmp_visits(PATIENT_ID, VISIT_DATE, SCORE)\nVALUES\n(2002, '2020-09-10', 6.8),\n(1001, '2020-09-17', 5.5),\n(4004, '2020-09-24', 8.4),\n(2002, '2020-10-08', NULL),\n(1001, NULL, 6.6),\n(3003, '2020-11-12', NULL),\n(4004, '2020-11-05', 7.0),\n(1001, '2020-11-19', 5.3);\n\u00a0\n-- join tables and group\nSELECT\n\tp.PATIENT_ID,\n\tp.LASTNAME,\n\tMAX(VISIT_DATE) AS LAST_VISIT,\n\tSUM(SCORE) AS SCORE_SUM,\n\tCAST(AVG(SCORE) AS DECIMAL(10,2)) AS SCORE_AVG\nFROM\n\ttmp_patients p\n\tLEFT JOIN tmp_visits v\n\t\tON v.PATIENT_ID = p.PATIENT_ID\nGROUP BY\n\tp.PATIENT_ID,\n\tp.LASTNAME\nORDER BY\n\tp.PATIENT_ID;",
        "context": "",
        "question": "Merge and aggregate datasets\n\n\n\nTask\n\nMerge and aggregate two datasets as provided in \u00a0 .csv \u00a0 files into a new resulting dataset.\n\nUse the appropriate methods and data structures depending on the programming language.\n\nUse the most common libraries only when built-in functionality is not sufficient.\n\n\n\nNote\n\nEither load the data from the \u00a0 .csv \u00a0 files or create the required data structures hard-coded.\n\n\npatients.csv \u00a0 file contents:\n\nPATIENT_ID,LASTNAME\n1001,Hopper\n4004,Wirth\n3003,Kemeny\n2002,Gosling\n5005,Kurtz\n\n\nvisits.csv \u00a0 file contents:\n\nPATIENT_ID,VISIT_DATE,SCORE\n2002,2020-09-10,6.8\n1001,2020-09-17,5.5\n4004,2020-09-24,8.4\n2002,2020-10-08,\n1001,,6.6\n3003,2020-11-12,\n4004,2020-11-05,7.0\n1001,2020-11-19,5.3\n\n\n\nCreate a resulting dataset in-memory or output it to screen or file, whichever is appropriate for the programming language at hand.\n\nMerge and group per patient id and last name, \u00a0 get the maximum visit date, \u00a0 and get the sum and average of the scores per patient to get the resulting dataset.\n\n\n\nNote that the visit date is purposefully provided as ISO format, \u00a0 so that it could also be processed as text and sorted alphabetically to determine the maximum date.\n\n| PATIENT_ID | LASTNAME | LAST_VISIT |  SCORE_SUM | SCORE_AVG |\n| 1001       |  Hopper  | 2020-11-19 |  17.4      | 5.80      |\n| 2002       |  Gosling | 2020-10-08 |   6.8      | 6.80      |\n| 3003       |  Kemeny  | 2020-11-12 |            |           |\n| 4004       |  Wirth   | 2020-11-05 |  15.4      | 7.70      |\n| 5005       |  Kurtz   |            |            |           |\n\n\n\nNote\n\nThis task is aimed in particular at programming languages that are used in data science and data processing, such as F#, Python, R, SPSS, MATLAB etc.\n\n\n\nRelated tasks\n\n CSV data manipulation\n CSV to HTML translation\n Read entire file\n Read a file line by line\n\n"
    },
    {
        "answer": ";WITH DATA \n     AS (SELECT CAST(ABS(NUMBER) AS NVARCHAR(MAX))      charNum, \n                NUMBER, \n                LEN(CAST(ABS(NUMBER) AS NVARCHAR(MAX))) LcharNum \n         FROM   TABLE1) \nSELECT CASE \n         WHEN ( LCHARNUM >= 3 \n                AND LCHARNUM\u00a0% 2 = 1 ) THEN SUBSTRING(CHARNUM, LCHARNUM / 2, 3) \n         ELSE 'Error!' \n       END    Output, \n       NUMBER INPUT \nFROM   DATA ",
        "context": "",
        "question": "Task\n\nWrite a function/procedure/subroutine that is called with an integer value and returns the middle three digits of the integer if possible or a clear indication of an error if this is not possible.\n\nNote: The order of the middle digits should be preserved.\n\nYour function should be tested with the following values; the first line should return valid answers, those of the second line should return clear indications of an error:\n\n123, 12345, 1234567, 987654321, 10001, -10001, -123, -100, 100, -12345\n1, 2, -1, -10, 2002, -2002, 0\n\nShow your output on this page.\n\n\n\n"
    },
    {
        "answer": "\u00a0\n    -- Create Table\n    -- Distinct combination\n    --- R\u00a0:Red, B\u00a0:Blue, G: Green, V: Violet, O: Orange, Y: Yellow\n    DROP TYPE IF EXISTS color cascade;CREATE TYPE color AS ENUM ('R', 'B', 'G', 'V', 'O', 'Y');\n\u00a0\n    DROP TABLE IF EXISTS guesses cascade\u00a0; CREATE TABLE guesses (\n        FIRST color,\n        SECOND color,\n        third color ,\n        fourth color\n    );\n    CREATE TABLE mastermind () inherits (guesses);\n\u00a0\n    INSERT INTO mastermind VALUES ('G', 'B', 'R', 'V');\n\u00a0\n\u00a0\n    INSERT INTO guesses VALUES ('Y', 'Y', 'B', 'B');\n    INSERT INTO guesses VALUES ('V', 'R', 'R', 'Y');\n    INSERT INTO guesses VALUES ('G', 'V', 'G', 'Y');\n    INSERT INTO guesses VALUES ('R', 'R', 'V', 'Y');\n    INSERT INTO guesses VALUES ('B', 'R', 'G', 'V');\n    INSERT INTO guesses VALUES ('G', 'B', 'R', 'V');\n\u00a0\n\u00a0\n    --- Matches Black\n    CREATE OR REPLACE FUNCTION check_black(guesses,  mastermind) RETURNS INTEGER AS $$\n        SELECT (\n            ($1.FIRST  = $2.FIRST)::INT +\n            ($1.SECOND  = $2.SECOND)::INT +\n            ($1.third = $2.third)::INT +\n            ($1.fourth = $2.fourth)::INT\n        );\n    $$ LANGUAGE SQL;\n\u00a0\n    --- Matches White\n    CREATE OR REPLACE FUNCTION check_white(guesses,  mastermind) RETURNS INTEGER AS $$\n        SELECT (\n            CASE WHEN ($1.FIRST = $2.FIRST) THEN 0 ELSE 0 END +\n            CASE WHEN ($1.SECOND = $2.SECOND) THEN 0 ELSE 0 END +\n            CASE WHEN ($1.third = $2.third)  THEN 0 ELSE 0 END +\n            CASE WHEN ($1.fourth = $2.fourth) THEN 0 ELSE 0 END +\n            CASE WHEN ($1.FIRST\u00a0!= $2.FIRST) THEN (\n                    $1.FIRST = $2.SECOND OR\n                    $1.FIRST = $2.third OR\n                    $1.FIRST = $2.fourth\n                    )::INT ELSE 0 END +\n            CASE WHEN ($1.SECOND\u00a0!= $2.SECOND) THEN (\n                    $1.SECOND = $2.FIRST OR\n                    $1.SECOND = $2.third OR\n                    $1.SECOND = $2.fourth\n                    )::INT ELSE 0 END +\n            CASE WHEN ($1.third\u00a0!= $2.third) THEN (\n                    $1.third = $2.FIRST OR\n                    $1.third = $2.SECOND OR\n                    $1.third = $2.fourth\n                    )::INT ELSE 0 END +\n            CASE WHEN ($1.fourth\u00a0!= $2.fourth) THEN (\n                    $1.fourth = $2.FIRST OR\n                    $1.fourth = $2.SECOND OR\n                    $1.fourth = $2.third\n                    )::INT ELSE 0 END\n        ) FROM guesses\n    $$ LANGUAGE SQL;\n\u00a0\n\u00a0\n\u00a0\n    SELECT guesses,\n           check_black(guesses.*, mastermind.*),\n           check_white(guesses.*, mastermind.*)\n        FROM   guesses, mastermind\n\u00a0",
        "context": "",
        "question": "Create a simple version of the board game: \u00a0 Mastermind.\n\nIt must be possible to:\n\n \u00a0 choose the number of colors will be used in the game (2 - 20)\n \u00a0 choose the color code length (4 - 10)\n \u00a0 choose the maximum number of guesses the player has (7 - 20)\n \u00a0 choose whether or not colors may be repeated in the code\n\n\nThe (computer program) game should display all the player guesses and the results of that guess.\n\nDisplay (just an idea):\n\n\n\n Feature \n Graphic Version \n Text Version\n\n\n Player guess\n\n Colored circles\n\n Alphabet letters\n\n\nCorrect color & position\n\nBlack circle\n\nX\n\n\nCorrect color\n\nWhite circle\n\nO\n\n\nNone\n\nGray circle\n\n -\n\n\n\n\nA text version example: \u00a0 \u00a0 \u00a0  1. \u00a0 ADEF \u00a0 - \u00a0 XXO- \n\nTranslates to:\n\nthe first guess;\n\nthe four colors (ADEF);\n\nresult:\n\n two correct colors and spot, \n one correct color/wrong spot, one color isn't in the code.\nHappy coding!\n\n\n\nRelated tasks\n\n \u00a0 Bulls and cows\n \u00a0 Bulls and cows/Player\n \u00a0 Guess the number\n \u00a0 Guess the number/With Feedback\n\n"
    },
    {
        "answer": "\u00a0\nCREATE PROCEDURE dbo.LAMBDA_WRAP_INTEGER\n\u00a0\n\t@v INT\n\u00a0\nAS\n\tDECLARE\t@name NVARCHAR(MAX) = 'LAMBDA_' + UPPER(REPLACE(NEWID(), '-', '_'))\n\tDECLARE @SQL NVARCHAR(MAX) = '\n\t\t\tCREATE PROCEDURE dbo.' + @name + '\n\t\t\t\tAS \n\u00a0\n\t\t\tRETURN ' + CAST(@v AS NVARCHAR(MAX))\n\u00a0\n\tEXEC(@SQL)\n\tRETURN OBJECT_ID(@name)\nGO\n\u00a0\nCREATE PROCEDURE dbo.LAMBDA_EXEC\n\t@id INT\n\u00a0\nAS\n\tDECLARE @name SYSNAME = OBJECT_NAME(@id)\n\t,\t@retval INT\n\tEXEC\t@retval = @name\n\tRETURN\t@retval\nGO\n\u00a0\n-- B-procedure\nCREATE PROCEDURE dbo.LAMBDA_B\n\t@name_out SYSNAME OUTPUT\n,\t@q INT\nAS\nBEGIN\n\u00a0\n\tDECLARE\t@SQL NVARCHAR(MAX)\n\t,\t@name NVARCHAR(MAX) = 'LAMBDA_B_' + UPPER(REPLACE(NEWID(), '-', '_'))\n\u00a0\n\tSELECT\t@SQL = N'\n\t\tCREATE PROCEDURE dbo.' + @name + N'\n\u00a0\n\t\t\tAS \n\u00a0\n\t\tDECLARE @retval INT, @k INT, @x1 INT, @x2 INT, @x3 INT, @x4 INT\n\u00a0\n\t\tSELECT\t@k = k - 1, @x1 = x1, @x2 = x2,\t@x3 = x3, @x4 = x4\n\t\tFROM\t#t_args t\n\t\tWHERE\tt.i = ' + CAST(@q AS NVARCHAR(MAX)) + '\n\u00a0\n\t\tUPDATE\tt\n\t\tSET\tk = k -1\n\t\tFROM\t#t_args t\n\t\tWHERE\tt.i = ' + CAST(@q AS NVARCHAR(MAX)) + '\n\u00a0\n\t\tEXEC\t@retval = LAMBDA_A @k, @@PROCID, @x1, @x2, @x3, @x4\n\t\tRETURN @retval'\n\tEXEC(@SQL)\n\u00a0\n\tSELECT\t@name_out = @name\nEND\n\u00a0\nGO\n-- A-procedure\nCREATE PROCEDURE dbo.LAMBDA_A \n(\n\u00a0\n\t@k INT\n,\t@x1 INT\n,\t@x2 INT\n,\t@x3 INT\n,\t@x4 INT\n,\t@x5 INT\n)\nAS\n\tSET NOCOUNT ON;\n\tDECLARE @res1 INT\n\t,\t@res2 INT\n\t,\t@Name SYSNAME\n\t,\t@q INT\n\u00a0\n\t-- First add the arguments to the \"stack\"\n\tINSERT INTO #t_args (k,\tx1, x2, x3, x4, x5\n\t)\n\tSELECT\t@k, @x1, @x2, @x3, @x4, @x5\n\u00a0\n\tSELECT\t@q = SCOPE_IDENTITY()\n\u00a0\n\tIF @k <= 0\n\tBEGIN\n\t\tEXEC\t@res1 = dbo.LAMBDA_EXEC @x4\n\t\tEXEC\t@res2 = dbo.LAMBDA_EXEC @x5\n\t\tRETURN\t@res1 + @res2\n\tEND\n\tELSE\n\tBEGIN\n\t\tEXEC\tdbo.LAMBDA_B @name_out = @Name OUTPUT, @q = @q\n\t\tEXEC\t@res1 = @Name\n\t\tRETURN\t@res1\n\tEND\n\u00a0\nGO\n\u00a0\n-------------------------------------------------------------\n-- Test script\n-------------------------------------------------------------\n\u00a0\nDECLARE\t@x1 INT\n,\t@x2 INT\n,\t@x0 INT\n,\t@x4 INT\n,\t@x5 INT\n,\t@K INT\n,\t@retval INT\n\u00a0\n-------------------------------------------------------------\n-- Create wrapped integers to pass as arguments\n-------------------------------------------------------------\nEXEC\t@x1 = LAMBDA_WRAP_INTEGER 1\nEXEC\t@x2 = LAMBDA_WRAP_INTEGER -1\nEXEC\t@x0 = LAMBDA_WRAP_INTEGER 0\n\u00a0\n-------------------------------------------------------------\n-- Argument storage table\n-------------------------------------------------------------\nCREATE TABLE #t_args (\n\tk INT\n,\tx1 INT\n,\tx2 INT\n,\tx3 INT\n,\tx4 INT\n,\tx5 INT\n,\ti INT IDENTITY\n)\n\u00a0\nSELECT\t@K = 1\n\u00a0\n-- Anything above 5 blows up the stack\nWHILE \t@K <= 4\nBEGIN\n\tEXEC\t@retval = dbo.LAMBDA_A @K, @x1, @x2, @x2, @x1, @x0\n\tPRINT\t'For k=' + CAST(@K AS VARCHAR) + ', result=' + CAST(@retval AS VARCHAR)\n\u00a0\n\tSELECT\t@K = @K + 1\nEND\n\u00a0\n\u00a0",
        "context": "",
        "question": "Man or boy test\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\n\nBackground: The man or boy test was proposed by computer scientist Donald Knuth as a means of evaluating implementations of the ALGOL 60 programming language. The aim of the test was to distinguish compilers that correctly implemented \"recursion and non-local references\" from those that did not.\n\n\nI have written the following simple routine, which may separate the 'man-compilers' from the 'boy-compilers'\n \u2014 Donald Knuth\nTask: Imitate Knuth's example in Algol 60 in another language, as far as possible.\n\nDetails: Local variables of routines are often kept in activation records (also call frames). In many languages, these records are kept on a call stack. In Algol (and e.g. in Smalltalk), they are allocated on a heap instead. Hence it is possible to pass references to routines that still can use and update variables from their call environment, even if the routine where those variables are declared already returned. This difference in implementations is sometimes called the Funarg Problem.\n\nIn Knuth's example, each call to A allocates an activation record for the variable A. When B is called from A, any access to k now refers to this activation record. Now B in turn calls A, but passes itself as an argument. This argument remains bound to the activation record. This call to A also \"shifts\" the variables xi by one place, so eventually the argument B (still bound to its particular\nactivation record) will appear as x4 or x5 in a call to A. If this happens when the expression x4 + x5 is evaluated, then this will again call B, which in turn will update k in the activation record it was originally bound to. As this activation record is shared with other instances of calls to A and B, it will influence the whole computation.\n\nSo all the example does is to set up a convoluted calling structure, where updates to k can influence the behavior\nin completely different parts of the call tree.\n\nKnuth used this to test the correctness of the compiler, but one can of course also use it to test that other languages can emulate the Algol behavior correctly. If the handling of activation records is correct, the computed value will be \u221267.\n\nPerformance and Memory: Man or Boy is intense and can be pushed to challenge any machine. Memory (both stack and heap) not CPU time is the constraining resource as the recursion creates a proliferation activation records which will quickly exhaust memory and present itself through a stack error. Each language may have ways of adjusting the amount of memory or increasing the recursion depth. Optionally, show how you would make such adjustments.\n\nThe table below shows the result, call depths, and total calls for a range of k:\n\n\n\n k\n\n 0\n\n 1\n\n 2\n\n 3\n\n 4\n\n 5\n\n 6\n\n 7\n\n 8\n\n 9\n\n 10\n\n 11\n\n 12\n\n 13\n\n 14\n\n 15\n\n 16\n\n 17\n\n 18\n\n 19\n\n 20\n\n 21\n\n 22\n\n 23\n\n 24\n\n 25\n\n 26\n\n 27\n\n 28\n\n 29\n\n 30\n\n\n A\n\n 1\n\n 0\n\n -2\n\n 0\n\n 1\n\n 0\n\n 1\n\n -1\n\n -10\n\n -30\n\n -67\n\n -138\n\n -291\n\n -642\n\n -1,446\n\n -3,250\n\n -7,244\n\n -16,065\n\n -35,601\n\n -78,985\n\n -175,416\n\n -389,695\n\n -865,609\n\n -1,922,362\n\n -4,268,854\n\n -9,479,595\n\n -21,051,458\n\n -46,750,171\n\n -103,821,058\n\n -230,560,902\n\n -512,016,658\n\n\n A called\n\n 1\n\n 2\n\n 3\n\n 4\n\n 8\n\n 18\n\n 38\n\n 80\n\n 167\n\n 347\n\n 722\n\n 1,509\n\n 3,168\n\n 6,673\n\n 14,091\n\n 29,825\n\n 63,287\n\n 134,652\n\n 287,264\n\n 614,442\n\n 1,317,533\n\n 2,831,900\n\n 6,100,852\n\n 13,172,239\n\n 28,499,827\n\n 61,786,266\n\n 134,202,509\n\n 292,011,464\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\n A depth\n\n 1\n\n 2\n\n 3\n\n 4\n\n 8\n\n 16\n\n 32\n\n 64\n\n 128\n\n 256\n\n 512\n\n 1,024\n\n 2,048\n\n 4,096\n\n 8,192\n\n 16,384\n\n 32,768\n\n 65,536\n\n 131,072\n\n 262,144\n\n 524,288\n\n 1,048,576\n\n 2,097,152\n\n 4,194,304\n\n 8,388,608\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\n B called\n\n 0\n\n 1\n\n 2\n\n 3\n\n 7\n\n 17\n\n 37\n\n 79\n\n 166\n\n 346\n\n 721\n\n 1,508\n\n 3,167\n\n 6,672\n\n 14,090\n\n 29,824\n\n 63,286\n\n 134,651\n\n 287,263\n\n 614,441\n\n 1,317,532\n\n 2,831,899\n\n 6,100,851\n\n 13,172,238\n\n 28,499,826\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\n B depth\n\n 0\n\n 1\n\n 2\n\n 3\n\n 7\n\n 15\n\n 31\n\n 63\n\n 127\n\n 255\n\n 511\n\n 1,023\n\n 2,047\n\n 4,095\n\n 8,191\n\n 16,383\n\n 32,767\n\n 65,535\n\n 131,071\n\n 262,143\n\n 524,287\n\n 1,048,575\n\n 2,097,151\n\n 4,194,303\n\n 8,388,607\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\n\nRelated tasks\n\n \u00a0 Jensen's Device\n\n"
    },
    {
        "answer": "SELECT MD5('The quick brown fox jumped over the lazy dog\\'s back')",
        "context": "",
        "question": "Task\n\nEncode a string using an MD5 algorithm. \u00a0 The algorithm can be found on \u00a0 Wikipedia.\n\n\n\nOptionally, validate your implementation by running all of the test values in \u00a0 IETF RFC (1321) \u00a0 for MD5.\n\nAdditionally, \u00a0 RFC 1321 \u00a0 provides more precise information on the algorithm than the Wikipedia article.\n\n\n\n Warning: \u00a0 MD5 has known weaknesses, including collisions and forged signatures. \u00a0 Users may consider a stronger alternative when doing production-grade cryptography, such as SHA-256 (from the SHA-2 family), or the upcoming SHA-3.\n\nIf the solution on this page is a library solution, see \u00a0 MD5/Implementation \u00a0 for an implementation from scratch.\n\n\n\n"
    },
    {
        "answer": "\u00a0\n-- Table to contain all the data points\nCREATE TABLE points (\n  c_re DOUBLE,\n  c_im DOUBLE,\n  z_re DOUBLE DEFAULT 0,\n  z_im DOUBLE DEFAULT 0,\n  znew_re DOUBLE DEFAULT 0,\n  znew_im DOUBLE DEFAULT 0,\n  steps INT DEFAULT 0,\n  active CHAR DEFAULT 1\n);\n\u00a0\nDELIMITER |\n\u00a0\n-- Iterate over all the points in the table 'points'\nCREATE PROCEDURE itrt (IN n INT)\nBEGIN\n  label: LOOP\n    UPDATE points\n      SET\n        znew_re=POWER(z_re,2)-POWER(z_im,2)+c_re,\n        znew_im=2*z_re*z_im+c_im,\n        steps=steps+1\n      WHERE active=1;\n    UPDATE points SET\n        z_re=znew_re,\n        z_im=znew_im,\n        active=IF(POWER(z_re,2)+POWER(z_im,2)>4,0,1)\n      WHERE active=1;\n    SET n = n - 1;\n    IF n > 0 THEN\n      ITERATE label;\n    END IF;\n    LEAVE label;\n  END LOOP label;\nEND|\n\u00a0\n-- Populate the table 'points'\nCREATE PROCEDURE populate (\n  r_min DOUBLE,\n  r_max DOUBLE,\n  r_step DOUBLE,\n  i_min DOUBLE,\n  i_max DOUBLE,\n  i_step DOUBLE)\nBEGIN\n  DELETE FROM points;\n  SET @rl = r_min;\n  SET @a = 0;\n  rloop: LOOP\n    SET @im = i_min;\n    SET @b = 0;\n    iloop: LOOP\n      INSERT INTO points (c_re, c_im)\n        VALUES (@rl, @im);\n      SET @b=@b+1;\n      SET @im=i_min + @b * i_step;\n      IF @im < i_max THEN\n        ITERATE iloop;\n      END IF;\n      LEAVE iloop;\n    END LOOP iloop;\n      SET @a=@a+1;\n    SET @rl=r_min + @a * r_step;\n    IF @rl < r_max THEN\n      ITERATE rloop;\n    END IF;\n    LEAVE rloop;\n  END LOOP rloop;\nEND|\n\u00a0\nDELIMITER ;\n\u00a0\n-- Choose size and resolution of graph\n--             R_min, R_max, R_step, I_min, I_max, I_step\nCALL populate( -2.5,  1.5,   0.005,  -2,    2,     0.005 );\n\u00a0\n-- Calculate 50 iterations\nCALL itrt( 50 );\n\u00a0\n-- Create the image (/tmp/image.ppm)\n-- Note, MySQL will not over-write an existing file and you may need\n-- administrator access to delete or move it\nSELECT @xmax:=COUNT(c_re) INTO @xmax FROM points GROUP BY c_im LIMIT 1;\nSELECT @ymax:=COUNT(c_im) INTO @ymax FROM points GROUP BY c_re LIMIT 1;\nSET group_concat_max_len=11*@xmax*@ymax;\nSELECT\n  'P3', @xmax, @ymax, 200,\n  GROUP_CONCAT(\n    CONCAT(\n      IF( active=1, 0, 55+MOD(steps, 200) ), ' ',\n      IF( active=1, 0, 55+MOD(POWER(steps,3), 200) ), ' ',\n      IF( active=1, 0, 55+MOD(POWER(steps,2), 200) ) )\n    ORDER BY c_im ASC, c_re ASC SEPARATOR ' ' )\n    INTO OUTFILE '/tmp/image.ppm'\n  FROM points;\n\u00a0",
        "context": "",
        "question": "Mandelbrot set\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\n\n\nTask\n\nGenerate and draw the Mandelbrot set.\n\n\n\nNote that there are many algorithms to draw Mandelbrot set and there are many functions which generate it .\n\n\n\n"
    },
    {
        "answer": "CREATE TABLE a (x INTEGER, y INTEGER, e REAL);\nCREATE TABLE b (x INTEGER, y INTEGER, e REAL);\n\u00a0\n-- test data\n-- A is a 2x2 matrix\nINSERT INTO a VALUES(0,0,1); INSERT INTO a VALUES(1,0,2);\nINSERT INTO a VALUES(0,1,3); INSERT INTO a VALUES(1,1,4);\n\u00a0\n-- B is a 2x3 matrix\nINSERT INTO b VALUES(0,0,-3); INSERT INTO b VALUES(1,0,-8); INSERT INTO b VALUES(2,0,3);\nINSERT INTO b VALUES(0,1,-2); INSERT INTO b VALUES(1,1, 1); INSERT INTO b VALUES(2,1,4);\n\u00a0\n-- C is 2x2 * 2x3 so will be a 2x3 matrix\nSELECT rhs.x, lhs.y, (SELECT SUM(a.e*b.e) FROM a, b\n                             WHERE a.y = lhs.y\n                               AND b.x = rhs.x\n                               AND a.x = b.y)\n       INTO TABLE c\n       FROM a AS lhs, b AS rhs\n       WHERE lhs.x = 0 AND rhs.y = 0;",
        "context": "",
        "question": "Task\n\nMultiply two matrices together.\n\nThey can be of any dimensions, so long as the number of columns of the first matrix is equal to the number of rows of the second matrix.\n\n\n\n"
    },
    {
        "answer": "SET SERVEROUTPUT ON\nDECLARE\n  c_limit CONSTANT PLS_INTEGER := 25000;\n  TYPE t_nums IS TABLE OF PLS_INTEGER INDEX BY PLS_INTEGER;\n  v_nums t_nums;\n  v_ludic t_nums;\n  v_count_ludic PLS_INTEGER;\n  v_count_pos PLS_INTEGER;\n  v_pos PLS_INTEGER;\n  v_next_ludic PLS_INTEGER;\n\u00a0\n  FUNCTION is_ludic(p_num PLS_INTEGER) RETURN BOOLEAN IS\n  BEGIN\n    FOR i IN 1..v_ludic.COUNT LOOP\n      EXIT WHEN v_ludic(i) > p_num;\n      IF v_ludic(i) = p_num THEN\n        RETURN TRUE;\n      END IF;\n    END LOOP;\n    RETURN FALSE;\n  END;\n\u00a0\nBEGIN\n  FOR i IN 1..c_limit LOOP\n    v_nums(i) := i;\n  END LOOP;\n\u00a0\n  v_count_ludic := 1;\n  v_next_ludic := 1;\n  v_ludic(v_count_ludic) := v_next_ludic;\n  v_nums.DELETE(1);\n\u00a0\n  WHILE v_nums.COUNT > 0 LOOP\n    v_pos := v_nums.FIRST;\n    v_next_ludic := v_nums(v_pos);\n    v_count_ludic := v_count_ludic + 1;\n    v_ludic(v_count_ludic) := v_next_ludic;\n    v_count_pos := 0;\n    WHILE v_pos IS NOT NULL LOOP\n      IF MOD(v_count_pos, v_next_ludic) = 0 THEN\n        v_nums.DELETE(v_pos);\n      END IF;\n      v_pos := v_nums.NEXT(v_pos);\n      v_count_pos := v_count_pos + 1;\n    END LOOP;\n  END LOOP;\n\u00a0\n  DBMS_OUTPUT.put_line('Generate and show here the first 25 ludic numbers.');\n  FOR i IN 1..25 LOOP\n    DBMS_OUTPUT.put(v_ludic(i) || ' ');\n  END LOOP;\n  DBMS_OUTPUT.put_line('');\n\u00a0\n  DBMS_OUTPUT.put_line('How many ludic numbers are there less than or equal to 1000?');\n  v_count_ludic := 0;\n  FOR i IN 1..v_ludic.COUNT LOOP\n    EXIT WHEN v_ludic(i) > 1000;\n    v_count_ludic := v_count_ludic + 1;\n  END LOOP;\n  DBMS_OUTPUT.put_line(v_count_ludic);\n\u00a0\n  DBMS_OUTPUT.put_line('Show the 2000..2005''th ludic numbers.');\n  FOR i IN 2000..2005 LOOP\n    DBMS_OUTPUT.put(v_ludic(i) || ' ');\n  END LOOP;\n  DBMS_OUTPUT.put_line('');\n\u00a0\n  DBMS_OUTPUT.put_line('A triplet is any three numbers x, x + 2, x + 6 where all three numbers are also ludic numbers.');\n  DBMS_OUTPUT.put_line('Show all triplets of ludic numbers < 250 (Stretch goal)');\n  FOR i IN 1..v_ludic.COUNT LOOP\n    EXIT WHEN (v_ludic(i)+6) >= 250;\n    IF is_ludic(v_ludic(i)+2) AND is_ludic(v_ludic(i)+6) THEN\n      DBMS_OUTPUT.put_line(v_ludic(i) || ', ' || (v_ludic(i)+2) || ', ' || (v_ludic(i)+6));\n    END IF;\n  END LOOP;\n\u00a0\nEND;\n/\n\u00a0",
        "context": "",
        "question": "Ludic numbers \u00a0 are related to prime numbers as they are generated by a sieve quite like the Sieve of Eratosthenes is used to generate prime numbers.\n\nThe first ludic number is \u00a0 1.\n\nTo generate succeeding ludic numbers create an array of increasing integers starting from \u00a0 2.\n\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ...\n(Loop)\n\n Take the first member of the resultant array as the next ludic number \u00a0 2.\n Remove every \u00a0 2nd \u00a0 indexed item from the array (including the first).\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ...\n (Unrolling a few loops...)\n Take the first member of the resultant array as the next ludic number \u00a0 3.\n Remove every \u00a0 3rd \u00a0 indexed item from the array (including the first).\n3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 ...\n Take the first member of the resultant array as the next ludic number \u00a0 5.\n Remove every \u00a0 5th \u00a0 indexed item from the array (including the first).\n5 7 11 13 17 19 23 25 29 31 35 37 41 43 47 49 53 55 59 61 65 67 71 73 77 ...\n Take the first member of the resultant array as the next ludic number \u00a0 7.\n Remove every \u00a0 7th \u00a0 indexed item from the array (including the first).\n7 11 13 17 23 25 29 31 37 41 43 47 53 55 59 61 67 71 73 77 83 85 89 91 97 ...\n  ... \n Take the first member of the current array as the next ludic number \u00a0 L.\n Remove every \u00a0 Lth \u00a0 indexed item from the array (including the first).\n  ... \n\n\nTask\n\n Generate and show here the first 25 ludic numbers.\n How many ludic numbers are there less than or equal to 1000?\n Show the 2000..2005th ludic numbers.\n\n\nStretch goal\n\nShow all triplets of ludic numbers < 250.\n\n A triplet is any three numbers \u00a0 \u00a0 \n\n\n\nx\n,\n\n\n{\\displaystyle x,}\n\n \u00a0 \n\n\n\nx\n+\n2\n,\n\n\n{\\displaystyle x+2,}\n\n \u00a0 \n\n\n\nx\n+\n6\n\n\n{\\displaystyle x+6}\n\n  \u00a0 \u00a0 where all three numbers are also ludic numbers. \n\n"
    },
    {
        "answer": "\u00a0\nSET serveroutput ON\nDECLARE\n  n NUMBER := 1024;\nBEGIN\n  WHILE n > 0 LOOP\n    DBMS_OUTPUT.put_line(n);\n    n := TRUNC(n / 2);\n  END LOOP;\nEND;\n/\n\u00a0",
        "context": "",
        "question": "Task\n\nStart an integer value at \u00a0 1024.\n\nLoop while it is greater than zero.\n\nPrint the value (with a newline) and divide it by two each time through the loop.\n\n\n\nRelated tasks\n\n \u00a0 Loop over multiple arrays simultaneously\n \u00a0 Loops/Break\n \u00a0 Loops/Continue\n \u00a0 Loops/Do-while\n \u00a0 Loops/Downward for\n \u00a0 Loops/For\n \u00a0 Loops/For with a specified step\n \u00a0 Loops/Foreachbas\n \u00a0 Loops/Increment loop index within loop body\n \u00a0 Loops/Infinite\n \u00a0 Loops/N plus one half\n \u00a0 Loops/Nested\n \u00a0 Loops/While\n \u00a0 Loops/with multiple ranges\n \u00a0 Loops/Wrong ranges\n\n"
    },
    {
        "answer": "FUNCTION algoLuhn ( p_numeroVerif VARCHAR2 )\n    RETURN NUMBER\n  IS\n    i         NUMBER;\n    v_NBi     SMALLINT;\n    v_retour  SMALLINT;\n    v_somme   NUMBER := 0;\n    v_nbCar   NUMBER;\n\u00a0\n  BEGIN  \n    v_nbCar := LENGTH(p_numeroVerif);    \n\u00a0\n    FOR i IN 1..v_nbCar\n    LOOP\n        v_NBi := TO_NUMBER(SUBSTR(p_numeroVerif,v_nbCar+1-i,1));\n\u00a0\n        v_somme := v_somme\n                  + MOD(i,2)   * v_NBi\n                  + MOD(i+1,2) * SIGN(-SIGN(v_Nbi-4)+1) * (2*v_NBi)\n                  + MOD(i+1,2) * SIGN( SIGN(v_Nbi-5)+1) * (2*v_NBi-9);\n\u00a0\n    END LOOP;\n\u00a0\n    v_retour := SIGN(MOD(v_somme,10));\n\u00a0\n    RETURN v_retour;\n\u00a0\n  EXCEPTION\n    WHEN OTHERS\n      THEN\n        RETURN 1;\n\u00a0\n  END algoLuhn;",
        "context": "",
        "question": "The Luhn test is used by some credit card companies to distinguish valid credit card numbers from what could be a random selection of digits.\n\nThose companies using credit card numbers that can be validated by the Luhn test have numbers that pass the following test:\n\n Reverse the order of the digits in the number.\n Take the first, third, ... and every other odd digit in the reversed digits and sum them to form the partial sum s1\n Taking the second, fourth ... and every other even digit in the reversed digits:\n Multiply each digit by two and sum the digits if the answer is greater than nine to form partial sums for the even digits\n Sum the partial sums of the even digits to form s2\n If s1 + s2 ends in zero then the original number is in the form of a valid credit card number as verified by the Luhn test.\n\n\nFor example, if the trial number is 49927398716:\n\nReverse the digits:\n  61789372994\nSum the odd digits:\n  6 + 7 + 9 + 7 + 9 + 4 = 42 = s1\nThe even digits:\n    1,  8,  3,  2,  9\n  Two times each even digit:\n    2, 16,  6,  4, 18\n  Sum the digits of each multiplication:\n    2,  7,  6,  4,  9\n  Sum the last:\n    2 + 7 + 6 + 4 + 9 = 28 = s2\n\ns1 + s2 = 70 which ends in zero which means that 49927398716 passes the Luhn test\n\n\nTask\n\nWrite a function/method/procedure/subroutine that will validate a number with the Luhn test, and\n\nuse it to validate the following numbers:\n\n   49927398716\n   49927398717\n   1234567812345678\n   1234567812345670\n\n\n\nRelated tasks\n\n \u00a0 SEDOL\n \u00a0 ISIN\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON@\n\u00a0\nBEGIN\n DECLARE I SMALLINT DEFAULT 1;\n WHILE (I = I) DO\n  CALL DBMS_OUTPUT.PUT_LINE('SPAM');\n END WHILE;\nEND @\n\u00a0",
        "context": "",
        "question": "Task\n\nPrint out \u00a0 \u00a0 \u00a0  SPAM  \u00a0 \u00a0 \u00a0 followed by a \u00a0 newline \u00a0 in an infinite loop.\n\n\n\nRelated tasks\n\n \u00a0 Loop over multiple arrays simultaneously\n \u00a0 Loops/Break\n \u00a0 Loops/Continue\n \u00a0 Loops/Do-while\n \u00a0 Loops/Downward for\n \u00a0 Loops/For\n \u00a0 Loops/For with a specified step\n \u00a0 Loops/Foreach\n \u00a0 Loops/Increment loop index within loop body\n \u00a0 Loops/Infinite\n \u00a0 Loops/N plus one half\n \u00a0 Loops/Nested\n \u00a0 Loops/While\n \u00a0 Loops/with multiple ranges\n \u00a0 Loops/Wrong ranges\n\n"
    },
    {
        "answer": "WHILE 1=1 BEGIN\n PRINT \"SPAM\"\nEND",
        "context": "",
        "question": "Task\n\nPrint out \u00a0 \u00a0 \u00a0  SPAM  \u00a0 \u00a0 \u00a0 followed by a \u00a0 newline \u00a0 in an infinite loop.\n\n\n\nRelated tasks\n\n \u00a0 Loop over multiple arrays simultaneously\n \u00a0 Loops/Break\n \u00a0 Loops/Continue\n \u00a0 Loops/Do-while\n \u00a0 Loops/Downward for\n \u00a0 Loops/For\n \u00a0 Loops/For with a specified step\n \u00a0 Loops/Foreach\n \u00a0 Loops/Increment loop index within loop body\n \u00a0 Loops/Infinite\n \u00a0 Loops/N plus one half\n \u00a0 Loops/Nested\n \u00a0 Loops/While\n \u00a0 Loops/with multiple ranges\n \u00a0 Loops/Wrong ranges\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON @\n\u00a0\nBEGIN\n DECLARE I SMALLINT DEFAULT 1024;\n\u00a0\n Loop: WHILE (I > 0) DO\n  CALL DBMS_OUTPUT.PUT_LINE(I);\n  SET I = I / 2;\n END WHILE Loop;\nEND @\n\u00a0",
        "context": "",
        "question": "Task\n\nStart an integer value at \u00a0 1024.\n\nLoop while it is greater than zero.\n\nPrint the value (with a newline) and divide it by two each time through the loop.\n\n\n\nRelated tasks\n\n \u00a0 Loop over multiple arrays simultaneously\n \u00a0 Loops/Break\n \u00a0 Loops/Continue\n \u00a0 Loops/Do-while\n \u00a0 Loops/Downward for\n \u00a0 Loops/For\n \u00a0 Loops/For with a specified step\n \u00a0 Loops/Foreachbas\n \u00a0 Loops/Increment loop index within loop body\n \u00a0 Loops/Infinite\n \u00a0 Loops/N plus one half\n \u00a0 Loops/Nested\n \u00a0 Loops/While\n \u00a0 Loops/with multiple ranges\n \u00a0 Loops/Wrong ranges\n\n"
    },
    {
        "answer": "\u00a0\nDECLARE @i INT = 1024;\nWHILE @i >0\nBEGIN\n    PRINT @i;\n    SET @i = @i / 2;\nEND;\n\u00a0",
        "context": "",
        "question": "Task\n\nStart an integer value at \u00a0 1024.\n\nLoop while it is greater than zero.\n\nPrint the value (with a newline) and divide it by two each time through the loop.\n\n\n\nRelated tasks\n\n \u00a0 Loop over multiple arrays simultaneously\n \u00a0 Loops/Break\n \u00a0 Loops/Continue\n \u00a0 Loops/Do-while\n \u00a0 Loops/Downward for\n \u00a0 Loops/For\n \u00a0 Loops/For with a specified step\n \u00a0 Loops/Foreachbas\n \u00a0 Loops/Increment loop index within loop body\n \u00a0 Loops/Infinite\n \u00a0 Loops/N plus one half\n \u00a0 Loops/Nested\n \u00a0 Loops/While\n \u00a0 Loops/with multiple ranges\n \u00a0 Loops/Wrong ranges\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON @\n\u00a0\nCREATE OR REPLACE FUNCTION LUHN_TEST (\n  IN NUMBER VARCHAR(24)\n ) RETURNS SMALLINT\n --) RETURNS BOOLEAN\n BEGIN\n  DECLARE TYPE CARD_NUMBER AS VARCHAR(1) ARRAY [24];\n  DECLARE LENGTH SMALLINT;\n  DECLARE REVERSE CARD_NUMBER;\n  DECLARE I SMALLINT;\n  DECLARE POS SMALLINT;\n  DECLARE S1 SMALLINT;\n  DECLARE S2 SMALLINT;\n  DECLARE TEMP SMALLINT;\n  DECLARE RET SMALLINT;\n  --DECLARE RET BOOLEAN;\n  DECLARE INVALID_CHAR CONDITION FOR SQLSTATE 'LUHN1';\n\u00a0\n  -- Reverse the order of the digits in the number.\n  SET LENGTH = LENGTH(NUMBER);\n  SET I = 1;\n  WHILE (I <= LENGTH) DO\n   SET POS = LENGTH - I + 1;\n   SET REVERSE[POS] = SUBSTR(NUMBER, I, 1);\n   IF (ASCII(REVERSE[POS]) < 48 OR 57 < ASCII(REVERSE[POS])) THEN\n    SIGNAL INVALID_CHAR SET MESSAGE_TEXT = 'Invalid character, not a digit';\n   END IF;\n   SET I = I + 1;\n  END WHILE;\n\u00a0\n  -- Take the first, third, ... and every other odd digit in the reversed digits and sum them to form the partial sum s1\n  SET S1 = 0;\n  SET I = 1;\n  WHILE (I <= LENGTH) DO\n   IF (MOD(I, 2) = 1) THEN\n    SET S1 = S1 + REVERSE[I];\n   END IF;\n   -- CALL DBMS_OUTPUT.PUT_LINE('I ' || I || ', S1 ' || S1 || ', val ' || REVERSE[I]);\n   SET I = I + 1;\n  END WHILE;\n\u00a0\n  -- Taking the second, fourth ... and every other even digit in the reversed digits:\n  SET S2 = 0;\n  SET TEMP = 0;\n  SET I = 1;\n  WHILE (I <= LENGTH) DO\n   IF (MOD(I, 2) = 0) THEN\n    -- Multiply each digit by two and sum the digits if the answer is greater than nine to form partial sums for the even digits\n    SET TEMP = REVERSE[I] * 2;\n    IF (TEMP > 9) THEN\n     SET TEMP = (TEMP / 10) + (MOD(TEMP, 10));\n    END IF;\n    -- Sum the partial sums of the even digits to form s2\n    SET S2 = S2 + TEMP;\n   END IF;\n   -- CALL DBMS_OUTPUT.PUT_LINE('I ' || I || ', S2 ' || S2 || ', TEMP ' || TEMP || ' val ' || REVERSE[I]);\n   SET I = I + 1;\n  END WHILE;\n\u00a0\n  -- If s1 + s2 ends in zero then the original number is in the form of a valid credit card number as verified by the Luhn test.\n  SET RET = 1;\n  --SET RET = FALSE;\n  SET TEMP = S1 + S2;\n  IF (MOD(TEMP, 10) = 0) THEN\n   SET RET = 0;\n   --SET RET = TRUE;\n   CALL DBMS_OUTPUT.PUT_LINE('It is a valid number ' || S1 || '+' || S2 || '=' || TEMP);\n  ELSE\n   CALL DBMS_OUTPUT.PUT_LINE('It is NOT a valid number ' || S1 || '+' || S2 || '=' || TEMP);\n  END IF;\n  RETURN RET;\n END\n@\n\u00a0",
        "context": "",
        "question": "The Luhn test is used by some credit card companies to distinguish valid credit card numbers from what could be a random selection of digits.\n\nThose companies using credit card numbers that can be validated by the Luhn test have numbers that pass the following test:\n\n Reverse the order of the digits in the number.\n Take the first, third, ... and every other odd digit in the reversed digits and sum them to form the partial sum s1\n Taking the second, fourth ... and every other even digit in the reversed digits:\n Multiply each digit by two and sum the digits if the answer is greater than nine to form partial sums for the even digits\n Sum the partial sums of the even digits to form s2\n If s1 + s2 ends in zero then the original number is in the form of a valid credit card number as verified by the Luhn test.\n\n\nFor example, if the trial number is 49927398716:\n\nReverse the digits:\n  61789372994\nSum the odd digits:\n  6 + 7 + 9 + 7 + 9 + 4 = 42 = s1\nThe even digits:\n    1,  8,  3,  2,  9\n  Two times each even digit:\n    2, 16,  6,  4, 18\n  Sum the digits of each multiplication:\n    2,  7,  6,  4,  9\n  Sum the last:\n    2 + 7 + 6 + 4 + 9 = 28 = s2\n\ns1 + s2 = 70 which ends in zero which means that 49927398716 passes the Luhn test\n\n\nTask\n\nWrite a function/method/procedure/subroutine that will validate a number with the Luhn test, and\n\nuse it to validate the following numbers:\n\n   49927398716\n   49927398717\n   1234567812345678\n   1234567812345670\n\n\n\nRelated tasks\n\n \u00a0 SEDOL\n \u00a0 ISIN\n\n"
    },
    {
        "answer": "\u00a0\nCREATE FUNCTION dbo._CreditCardNumCheck( @strCCNum VarChar(40) )\nRETURNS VarChar(7)\nAS\nBEGIN\n\tDECLARE @string\t\t\tVarChar(40) = REVERSE(@strCCNum); -- usage: set once, never changed\n\tDECLARE @strS2Values\t\tVarChar(10) = '0246813579';  -- constant: maps digits to their S2 summed values\n\tDECLARE @table\t\t\tTABLE (ID INT, Value INT, S_Value INT); -- ID=digit position. S_Value is used for SUM().\n\tDECLARE @p\t\t\tINT = 0; -- loop counter: position in string\n\t-- Convert the reversed string's digits into rows in a table variable, S_Values to be updated afterwards\n\tWHILE @p < LEN(@string)\n\t\tBEGIN\n\t\t\tSET @p = @p+1;\n\t\t\tINSERT INTO @table (ID,Value,S_Value) VALUES (@p, CONVERT(INT,SUBSTRING(@string,@p,1)), 0);\n\t\tEND\n\t-- Update S_Value column\u00a0: the digit's value to be summed (for even-positioned digits this is mapped via @strS2Values)\n\tUPDATE @table SET S_Value = CASE WHEN ID\u00a0% 2 = 1 THEN Value ELSE CONVERT(INT,SUBSTRING(@strS2Values,Value+1,1)) END\n\t-- If the SUM of S_Values ends in 0 (modulo 10 = 0) then the CC Number is valid\n\tRETURN CASE WHEN (SELECT SUM(S_Value) FROM @table)\u00a0% 10 = 0 THEN 'Valid' ELSE 'Invalid' END\nEND\n\u00a0",
        "context": "",
        "question": "The Luhn test is used by some credit card companies to distinguish valid credit card numbers from what could be a random selection of digits.\n\nThose companies using credit card numbers that can be validated by the Luhn test have numbers that pass the following test:\n\n Reverse the order of the digits in the number.\n Take the first, third, ... and every other odd digit in the reversed digits and sum them to form the partial sum s1\n Taking the second, fourth ... and every other even digit in the reversed digits:\n Multiply each digit by two and sum the digits if the answer is greater than nine to form partial sums for the even digits\n Sum the partial sums of the even digits to form s2\n If s1 + s2 ends in zero then the original number is in the form of a valid credit card number as verified by the Luhn test.\n\n\nFor example, if the trial number is 49927398716:\n\nReverse the digits:\n  61789372994\nSum the odd digits:\n  6 + 7 + 9 + 7 + 9 + 4 = 42 = s1\nThe even digits:\n    1,  8,  3,  2,  9\n  Two times each even digit:\n    2, 16,  6,  4, 18\n  Sum the digits of each multiplication:\n    2,  7,  6,  4,  9\n  Sum the last:\n    2 + 7 + 6 + 4 + 9 = 28 = s2\n\ns1 + s2 = 70 which ends in zero which means that 49927398716 passes the Luhn test\n\n\nTask\n\nWrite a function/method/procedure/subroutine that will validate a number with the Luhn test, and\n\nuse it to validate the following numbers:\n\n   49927398716\n   49927398717\n   1234567812345678\n   1234567812345670\n\n\n\nRelated tasks\n\n \u00a0 SEDOL\n \u00a0 ISIN\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON @\n\u00a0\nBEGIN\n DECLARE I SMALLINT DEFAULT 1;\n\u00a0\n Loop: WHILE (I <= 10) DO\n  CALL DBMS_OUTPUT.PUT(I);\n  SET I = I + 1;\n  IF (MOD(I - 1, 5) = 0) THEN\n   CALL DBMS_OUTPUT.PUT_LINE(' ');\n   ITERATE Loop;\n  END IF;\n  CALL DBMS_OUTPUT.PUT(', ');\n END WHILE Loop;\nEND @\n\u00a0",
        "context": "",
        "question": "Task\n\nShow the following output using one loop.\n\n1, 2, 3, 4, 5\n6, 7, 8, 9, 10\n\n\n\nTry to achieve the result by forcing the next iteration within the loop\nupon a specific condition, if your language allows it.\n\n\n\nRelated tasks\n\n \u00a0 Loop over multiple arrays simultaneously\n \u00a0 Loops/Break\n \u00a0 Loops/Continue\n \u00a0 Loops/Do-while\n \u00a0 Loops/Downward for\n \u00a0 Loops/For\n \u00a0 Loops/For with a specified step\n \u00a0 Loops/Foreach\n \u00a0 Loops/Increment loop index within loop body\n \u00a0 Loops/Infinite\n \u00a0 Loops/N plus one half\n \u00a0 Loops/Nested\n \u00a0 Loops/While\n \u00a0 Loops/with multiple ranges\n \u00a0 Loops/Wrong ranges\n\n"
    },
    {
        "answer": "SELECT 'The boy said ''hello''.';",
        "context": "",
        "question": "Task\n\nShow literal specification of characters and strings.\n\nIf supported, show how the following work:\n\n \u00a0 verbatim strings \u00a0 (quotes where escape sequences are quoted literally)\n \u00a0 here-strings \u00a0 \n\n\nAlso, discuss which quotes expand variables.\n\n\n\nRelated tasks\n \n \u00a0 Special characters\n \u00a0 Here document\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\nDECLARE @i INT = 0;\nDECLARE @str VarChar(40) = '';\nWHILE @i<10\n  BEGIN\n    SET @i = @i + 1;\n    SET @str = @str + CONVERT(varchar(2),@i);\n    IF @i\u00a0% 5 = 0\n      BEGIN\n        PRINT @str;\n        SET @str =''\n        CONTINUE;\n      END\n    SET @str = @str +', ';\n  END;\n\u00a0",
        "context": "",
        "question": "Task\n\nShow the following output using one loop.\n\n1, 2, 3, 4, 5\n6, 7, 8, 9, 10\n\n\n\nTry to achieve the result by forcing the next iteration within the loop\nupon a specific condition, if your language allows it.\n\n\n\nRelated tasks\n\n \u00a0 Loop over multiple arrays simultaneously\n \u00a0 Loops/Break\n \u00a0 Loops/Continue\n \u00a0 Loops/Do-while\n \u00a0 Loops/Downward for\n \u00a0 Loops/For\n \u00a0 Loops/For with a specified step\n \u00a0 Loops/Foreach\n \u00a0 Loops/Increment loop index within loop body\n \u00a0 Loops/Infinite\n \u00a0 Loops/N plus one half\n \u00a0 Loops/Nested\n \u00a0 Loops/While\n \u00a0 Loops/with multiple ranges\n \u00a0 Loops/Wrong ranges\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON@\n\u00a0\nBEGIN\n DECLARE VAL INTEGER;\n LOOP: WHILE (TRUE = TRUE) DO\n  SET VAL = INTEGER(RAND() * 20);\n  CALL DBMS_OUTPUT.PUT_LINE(VAL);\n  IF (VAL = 10) THEN\n   LEAVE LOOP;\n  END IF;\n  SET VAL = INTEGER(RAND() * 20);\n  CALL DBMS_OUTPUT.PUT_LINE(VAL);\n END WHILE LOOP;\nEND @\n\u00a0",
        "context": "",
        "question": "Task\n\nShow a loop which prints random numbers (each number newly generated each loop) from 0 to 19 (inclusive).\n\nIf a number is 10, stop the loop after printing it, and do not generate any further numbers.\n\nOtherwise, generate and print a second random number before restarting the loop.\n\nIf the number 10 is never generated as the first number in a loop, loop forever.\n\n\n\nRelated tasks\n\n \u00a0 Loop over multiple arrays simultaneously\n \u00a0 Loops/Break\n \u00a0 Loops/Continue\n \u00a0 Loops/Do-while\n \u00a0 Loops/Downward for\n \u00a0 Loops/For\n \u00a0 Loops/For with a specified step\n \u00a0 Loops/Foreach\n \u00a0 Loops/Increment loop index within loop body\n \u00a0 Loops/Infinite\n \u00a0 Loops/N plus one half\n \u00a0 Loops/Nested\n \u00a0 Loops/While\n \u00a0 Loops/with multiple ranges\n\n"
    },
    {
        "answer": "\u00a0\nDECLARE @i INT;\nWHILE 1=1\nBEGIN\n    SET @i = ABS(CHECKSUM(NewId()))\u00a0% 20;\n    PRINT @i;\n    IF @i=10 BREAK;\n    PRINT ABS(CHECKSUM(NewId()))\u00a0% 20;\nEND;\n\u00a0",
        "context": "",
        "question": "Task\n\nShow a loop which prints random numbers (each number newly generated each loop) from 0 to 19 (inclusive).\n\nIf a number is 10, stop the loop after printing it, and do not generate any further numbers.\n\nOtherwise, generate and print a second random number before restarting the loop.\n\nIf the number 10 is never generated as the first number in a loop, loop forever.\n\n\n\nRelated tasks\n\n \u00a0 Loop over multiple arrays simultaneously\n \u00a0 Loops/Break\n \u00a0 Loops/Continue\n \u00a0 Loops/Do-while\n \u00a0 Loops/Downward for\n \u00a0 Loops/For\n \u00a0 Loops/For with a specified step\n \u00a0 Loops/Foreach\n \u00a0 Loops/Increment loop index within loop body\n \u00a0 Loops/Infinite\n \u00a0 Loops/N plus one half\n \u00a0 Loops/Nested\n \u00a0 Loops/While\n \u00a0 Loops/with multiple ranges\n\n"
    },
    {
        "answer": "DROP VIEW delta;\nCREATE VIEW delta AS\n    SELECT sequence1.v AS x,\n           (sequence1.v<>sequence2.v)*sequence1.c AS v,\n           sequence1.c AS c\n      FROM SEQUENCE AS sequence1,\n           SEQUENCE AS sequence2\n     WHERE sequence1.c = sequence2.c+1;\n\u00a0\nDROP VIEW rle0;\nCREATE VIEW rle0 AS\n    SELECT delta2.x AS x,\n           SUM(delta2.v) AS v,\n           delta2.c AS c\n      FROM delta AS delta1,\n           delta AS delta2\n     WHERE delta1.c >= delta2.c\n  GROUP BY delta1.c;\n\u00a0\nDROP VIEW rle1;\nCREATE VIEW rle1 AS\n    SELECT SUM(x)/x AS a,\n           x AS b,\n           c AS c\n      FROM rle0\n  GROUP BY v;\n\u00a0\nDROP VIEW rle2;\nCREATE VIEW rle2 AS\n    SELECT a AS v, 1 AS o, 2*c+0 AS c FROM rle1 UNION\n    SELECT b AS v, 1 AS o, 2*c+1 AS c FROM rle1;\n\u00a0\nDROP VIEW normed;\nCREATE VIEW normed AS\n    SELECT r1.v AS v, SUM(r2.o) AS c\n      FROM rle2 AS r1,\n           rle2 AS r2\n     WHERE r1.c >= r2.c\n  GROUP BY r1.c;\n\u00a0\nDROP TABLE rle;\nCREATE TABLE rle(v INT, c INT);\nINSERT INTO rle SELECT * FROM normed ORDER BY c;\n\u00a0\nDELETE FROM SEQUENCE;\nINSERT INTO SEQUENCE VALUES(-1,0);\nINSERT INTO SEQUENCE SELECT * FROM rle;",
        "context": "",
        "question": "The \u00a0 Look and say sequence \u00a0 is a recursively defined sequence of numbers studied most notably by \u00a0 John Conway.\n\n\n\nThe \u00a0 look-and-say sequence \u00a0 is also known as the \u00a0 Morris Number Sequence, \u00a0 after cryptographer Robert Morris, \u00a0 and the puzzle \u00a0 What is the next number in the sequence 1, \u00a0 11, \u00a0 21, \u00a0 1211, \u00a0 111221? \u00a0 is sometimes referred to as the Cuckoo's Egg, \u00a0 from a description of Morris in Clifford Stoll's book \u00a0 The Cuckoo's Egg.\n\n\nSequence Definition\n\n Take a decimal number\n Look at the number, visually grouping consecutive runs of the same digit.\n Say the number, from left to right, group by group; as how many of that digit there are - followed by the digit grouped.\n This becomes the next number of the sequence.\n\nAn example:\n\n Starting with the number 1, \u00a0 you have one 1 which produces 11\n Starting with 11, \u00a0 you have two 1's. \u00a0 I.E.: \u00a0 21\n Starting with 21, \u00a0 you have one 2, then one 1. \u00a0 I.E.: \u00a0 (12)(11) which becomes 1211\n Starting with 1211, \u00a0 you have one 1, one 2, then two 1's. \u00a0 I.E.: \u00a0 (11)(12)(21) which becomes 111221\n\n\nTask\n\nWrite a program to generate successive members of the look-and-say sequence.\n\n\n\nRelated tasks\n\n \u00a0 Fours is the number of letters in the ...\n \u00a0 Number names\n \u00a0 Self-describing numbers\n \u00a0 Self-referential sequence\n \u00a0 Spelling of ordinal numbers\n\n\nSee also\n\n \u00a0 Look-and-Say Numbers (feat John Conway), A Numberphile Video.\n \u00a0 This task is related to, and an application of, the Run-length encoding task.\n \u00a0 Sequence A005150 on The On-Line Encyclopedia of Integer Sequences.\n\n"
    },
    {
        "answer": "\u00a0\nSET SERVEROUTPUT ON @\n\u00a0\nBEGIN\n DECLARE NMBR VARCHAR(100) DEFAULT '1';\n DECLARE J SMALLINT DEFAULT 1;\n\u00a0\n CALL DBMS_OUTPUT.PUT_LINE(NMBR);\n WHILE (J < 10) DO\n  BEGIN\n  DECLARE I SMALLINT;\n  DECLARE SIZE SMALLINT;\n  DECLARE ACTUAL CHAR(1);\n  DECLARE REPEAT CHAR(1);\n  DECLARE RESULT VARCHAR(100);\n  DECLARE TIMES SMALLINT;\n\u00a0\n  SET REPEAT = SUBSTR(NMBR, 1, 1);\n  SET NMBR = SUBSTR(NMBR, 2) || ' ';\n  SET TIMES = 1;\n  SET I = 1;\n  SET SIZE = LENGTH(NMBR);\n\u00a0\n  WHILE (I <= SIZE) DO\n   SET ACTUAL = SUBSTR(NMBR, I, 1);\n   IF (ACTUAL <> REPEAT) THEN\n    SET RESULT = COALESCE(RESULT, '') || TIMES || '' || REPEAT;\n    SET TIMES = 1;\n    SET REPEAT = ACTUAL;\n   ELSE\n    SET TIMES = TIMES + 1;\n   END IF;\n   SET I = I + 1;\n  END WHILE;\n\u00a0\n  CALL DBMS_OUTPUT.PUT_LINE(RESULT);\n  SET NMBR = RESULT;\n  END\u00a0;\n  SET J = J + 1;\n END WHILE;\nEND @\n\u00a0",
        "context": "",
        "question": "The \u00a0 Look and say sequence \u00a0 is a recursively defined sequence of numbers studied most notably by \u00a0 John Conway.\n\n\n\nThe \u00a0 look-and-say sequence \u00a0 is also known as the \u00a0 Morris Number Sequence, \u00a0 after cryptographer Robert Morris, \u00a0 and the puzzle \u00a0 What is the next number in the sequence 1, \u00a0 11, \u00a0 21, \u00a0 1211, \u00a0 111221? \u00a0 is sometimes referred to as the Cuckoo's Egg, \u00a0 from a description of Morris in Clifford Stoll's book \u00a0 The Cuckoo's Egg.\n\n\nSequence Definition\n\n Take a decimal number\n Look at the number, visually grouping consecutive runs of the same digit.\n Say the number, from left to right, group by group; as how many of that digit there are - followed by the digit grouped.\n This becomes the next number of the sequence.\n\nAn example:\n\n Starting with the number 1, \u00a0 you have one 1 which produces 11\n Starting with 11, \u00a0 you have two 1's. \u00a0 I.E.: \u00a0 21\n Starting with 21, \u00a0 you have one 2, then one 1. \u00a0 I.E.: \u00a0 (12)(11) which becomes 1211\n Starting with 1211, \u00a0 you have one 1, one 2, then two 1's. \u00a0 I.E.: \u00a0 (11)(12)(21) which becomes 111221\n\n\nTask\n\nWrite a program to generate successive members of the look-and-say sequence.\n\n\n\nRelated tasks\n\n \u00a0 Fours is the number of letters in the ...\n \u00a0 Number names\n \u00a0 Self-describing numbers\n \u00a0 Self-referential sequence\n \u00a0 Spelling of ordinal numbers\n\n\nSee also\n\n \u00a0 Look-and-Say Numbers (feat John Conway), A Numberphile Video.\n \u00a0 This task is related to, and an application of, the Run-length encoding task.\n \u00a0 Sequence A005150 on The On-Line Encyclopedia of Integer Sequences.\n\n"
    },
    {
        "answer": "\u00a0\nSELECT to_char( next_day( last_day( add_months( to_date(\n       \u00a0:yr||'01','yyyymm' ),level-1))-7,'Fri') ,'yyyy-mm-dd Dy') lastfriday\nFROM dual\nCONNECT BY level <= 12;\n\u00a0",
        "context": "",
        "question": "Task\n\nWrite a program or a script that returns the date of the last Fridays of each month of a given year.\n\nThe year may be given through any simple input method in your language (command line, std in, etc).\n\n\n\nExample of an expected output:\n\n./last_fridays 2012\n2012-01-27\n2012-02-24\n2012-03-30\n2012-04-27\n2012-05-25\n2012-06-29\n2012-07-27\n2012-08-31\n2012-09-28\n2012-10-26\n2012-11-30\n2012-12-28\n\n\n\nRelated tasks\n Five weekends\n Day of the week\n Find the last Sunday of each month\n\n"
    },
    {
        "answer": "DECLARE\n    i number\u00a0:= 5;\n    divide_by_zero EXCEPTION;\n    PRAGMA exception_init(divide_by_zero, -20000);\nBEGIN\n    DBMS_OUTPUT.put_line( 'startLoop' );\n    <<startLoop>>\n        BEGIN    \n            if i = 0 then\n                raise divide_by_zero;\n            end if;\n            DBMS_OUTPUT.put_line( 100/i );\n            i\u00a0:= i - 1;\n            GOTO startLoop;\n        EXCEPTION\n        WHEN divide_by_zero THEN\n            DBMS_OUTPUT.put_line( 'Oops!' );\n            GOTO finally;\n        END;\n    <<endLoop>>\n    DBMS_OUTPUT.put_line( 'endLoop' );    \n\u00a0\n    <<finally>>\n    DBMS_OUTPUT.put_line( 'Finally' );\nEND;\n/",
        "context": "",
        "question": "Imperative programs\nconditional structures\nloops\nlocal jumps\nThis task is to demonstrate a local jump and a global jump and the various other types of jumps that the language supports.\nFor the purpose of this task, the jumps need not be used for a single purpose and you have the freedom to use these jumps for different purposes.\nYou may also defer to more specific tasks, like Exceptions or Generator.\nThis task provides a \"grab bag\" for several types of jumps. There are non-local jumps across function calls, or long jumps to anywhere within a program. Anywhere means not only to the tops of functions!\n\n Some languages can go to any global label in a program.\n Some languages can break multiple function calls, also known as unwinding the call stack.\n Some languages can save a continuation. The program can later continue from the same place. So you can jump anywhere, but only if you have a previous visit there (to save the continuation).\n\nThese jumps are not all alike.\nA simple goto never touches the call stack.\nA continuation saves the call stack, so you can continue a function call after it ends.\n\n\n\nTask\n\nUse your language to demonstrate the various types of jumps that it supports.\n\nBecause the possibilities vary by language, this task is not specific.\nYou have the freedom to use these jumps for different purposes.\nYou may also defer to more specific tasks, like Exceptions or Generator.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nWITH KnapsackItems (item, [weight], VALUE) AS\n(\n    SELECT 'map',9,  150  \n    UNION ALL SELECT 'compass',13,  35  \n    UNION ALL SELECT 'water',153,  200  \n    UNION ALL SELECT 'sandwich',50,  160  \n    UNION ALL SELECT 'glucose',15,  60  \n    UNION ALL SELECT 'tin',68,  45  \n    UNION ALL SELECT 'banana',27,  60  \n    UNION ALL SELECT 'apple',39,  40  \n    UNION ALL SELECT 'cheese',23,  30  \n    UNION ALL SELECT 'beer',52,  10  \n    UNION ALL SELECT 'suntan cream',11,  70  \n    UNION ALL SELECT 'camera',32,  30  \n    UNION ALL SELECT 'T-shirt',24,  15  \n    UNION ALL SELECT 'trousers',48,  10  \n    UNION ALL SELECT 'umbrella',73,  40  \n    UNION ALL SELECT 'waterproof trousers',42,  70  \n    UNION ALL SELECT 'waterproof overclothes',43,  75  \n    UNION ALL SELECT 'note-case',22,  80  \n    UNION ALL SELECT 'sunglasses',7,  20  \n    UNION ALL SELECT 'towel',18,  12  \n    UNION ALL SELECT 'socks',4,  50  \n    UNION ALL SELECT 'book',30,  10  \n)\nSELECT *\nINTO #KnapsackItems\nFROM KnapsackItems;\n\u00a0\nWITH UNIQUEnTuples (n, Tuples, ID, [weight], VALUE) AS (\n    SELECT 1, CAST(item AS VARCHAR(8000)), item, [weight], VALUE\n    FROM #KnapsackItems\n    UNION ALL\n    SELECT 1 + n.n, t.item + ',' + n.Tuples, item, n.[weight] + t.[weight], n.VALUE + t.VALUE\n    FROM UNIQUEnTuples n \n    CROSS APPLY (\n        SELECT item, [weight], VALUE \n        FROM #KnapsackItems t \n        WHERE t.item < n.ID AND n.[weight] + t.[weight] < 400) t\n    )\nSELECT TOP 5 *\nFROM UNIQUEnTuples\nORDER BY VALUE DESC, n, Tuples;\n\u00a0\nGO\nDROP TABLE #KnapsackItems;\n\u00a0",
        "context": "",
        "question": "A tourist wants to make a good trip at the weekend with his friends.\n\nThey will go to the mountains to see the wonders of nature, so he needs to pack well for the trip.\n\nHe has a good knapsack for carrying things, but knows that he can carry a maximum of only 4kg in it, \u00a0 and it will have to last the whole day.\n\nHe creates a list of what he wants to bring for the trip but the total weight of all items is too much.\n\nHe then decides to add columns to his initial list detailing their weights and a numerical value representing how important the item is for the trip.\n\n\n\nHere is the list:\n\n\n Table of potential knapsack items\n\n\n item \n weight (dag) \n value\n\n\n map \n 9 \n 150\n\n\n compass \n 13 \n 35\n\n\n water \n 153 \n 200\n\n\n sandwich \n 50 \n 160\n\n\n glucose \n 15 \n 60\n\n\n tin \n 68 \n 45\n\n\n banana \n 27 \n 60\n\n\n apple \n 39 \n 40\n\n\n cheese \n 23 \n 30\n\n\n beer \n 52 \n 10\n\n\n suntan cream \n 11 \n 70\n\n\n camera \n 32 \n 30\n\n\n T-shirt \n 24 \n 15\n\n\n trousers \n 48 \n 10\n\n\n umbrella \n 73 \n 40\n\n\n waterproof trousers \n 42 \n 70\n\n\n waterproof overclothes \n 43 \n 75\n\n\n note-case \n 22 \n 80\n\n\n sunglasses \n 7 \n 20\n\n\n towel \n 18 \n 12\n\n\n socks \n 4 \n 50\n\n\n book \n 30 \n 10\n\n\n knapsack \n \u2264400 dag \n\u00a0?\n\n\n\nThe tourist can choose to take any combination of items from the list,\nbut only one of each item is available.\n\nHe may not cut or diminish the items, so he can only take whole units of any item.\n\n\n\nTask\n\nShow which items the tourist can carry in his knapsack so that their total weight does not\nexceed 400 dag [4 kg], \u00a0 and their total value is maximized.\n\n[dag = decagram = 10 grams]\n\n\n\nRelated tasks\n\n \u00a0 Knapsack problem/Bounded\n \u00a0 Knapsack problem/Unbounded\n \u00a0 Knapsack problem/Continuous\n \u00a0 A* search algorithm\n\n"
    },
    {
        "answer": "-- See how many jewels are among the stones\nDECLARE @S VARCHAR(1024) \t=\t'AaBbCcAa'\n,\t@J VARCHAR(1024)\t=\t'aA';\n\u00a0\nDECLARE @SLEN\tINT = len(@S);\nDECLARE @JLEN\tINT = len(@J);\nDECLARE @TCNT\tINT = 0;\n\u00a0\nDECLARE @SPOS\tINT = 1;\t-- curr position in @S\nDECLARE @JPOS\tINT = 1;\t-- curr position in @J\nDECLARE @FCHR\tCHAR(1);\t-- char to find\n\u00a0\nwhile @JPOS <= @JLEN\nBEGIN\n\u00a0\n\tSET @FCHR = SUBSTRING(@J, @JPOS, 1);\n\u00a0\n\tSET @SPOS = 1;\n\u00a0\n\twhile @SPOS > 0 AND @SPOS <= @SLEN\n\tBEGIN\n\u00a0\n\t\tSET @SPOS = charindex(@FCHR, @S COLLATE Latin1_General_CS_AS, @SPOS);\n\u00a0\n\t\tIF @SPOS > 0 BEGIN\n\t\t\tSET @TCNT = @TCNT + 1;\n\t\t\tSET @SPOS = @SPOS + 1;\n\t\tEND\n\tEND\n\u00a0\n\tSET @JPOS = @JPOS + 1;\nEND\nprint 'J='+@J+' S='+@S+' TOTAL = '+CAST(@TCNT AS VARCHAR(8));\n\u00a0",
        "context": "",
        "question": "Jewels and stones\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\nTask\n\nCreate a function which takes two string parameters: 'stones' and 'jewels' and returns an integer.\n\nBoth strings can contain any number of upper or lower case letters. However, in the case of 'jewels', all letters must be distinct.\n\nThe function should count (and return) how many 'stones' are 'jewels' or, in other words, how many letters in 'stones' are also letters in 'jewels'.\n\n\n\nNote that:\n\n Only letters in the ISO basic Latin alphabet i.e. 'A to Z' or 'a to z' need be considered. \n A lower case letter is considered to be different from its upper case equivalent for this purpose, i.e., 'a'\u00a0!= 'A'.\n The parameters do not need to have exactly the same names.\n Validating the arguments is unnecessary. \nSo, for example, if passed \"aAAbbbb\" for 'stones' and \"aA\" for 'jewels', the function should return 3.\n\nThis task was inspired by this problem.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "SET serveroutput ON\nBEGIN\n  DBMS_OUTPUT.PUT_LINE(UTL_INADDR.GET_HOST_NAME);  \nEND;",
        "context": "",
        "question": "Task\n\nFind the name of the host on which the routine is running.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nSELECT host_name FROM v$instance;\n\u00a0",
        "context": "",
        "question": "Task\n\nFind the name of the host on which the routine is running.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nSELECT HOST_NAME FROM SYSIBMADM.ENV_SYS_INFO\n\u00a0",
        "context": "",
        "question": "Task\n\nFind the name of the host on which the routine is running.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nDROP TABLE test;\n\u00a0\nCREATE TABLE test(a INTEGER, b INTEGER);\n\u00a0\nINSERT INTO test VALUES (1,2);\n\u00a0\nINSERT INTO test VALUES (2,2);\n\u00a0\nINSERT INTO test VALUES (2,1);\n\u00a0\nSELECT to_char(a)||' is less than '||to_char(b) less_than\nFROM test\nWHERE a < b;\n\u00a0\nSELECT to_char(a)||' is equal to '||to_char(b) equal_to\nFROM test\nWHERE a = b;\n\u00a0\nSELECT to_char(a)||' is greater than '||to_char(b) greater_than\nFROM test\nWHERE a > b;\n\u00a0",
        "context": "",
        "question": "\nBasic Data Operation\n\nThis is a basic data operation. It represents a fundamental action on a basic data type.\nYou may see other such operations in the Basic Data Operations category, or:\n\n\nInteger Operations\nArithmetic |\nComparison\nBoolean Operations\nBitwise |\nLogical\nString Operations\nConcatenation |\nInterpolation |\nComparison |\nMatching\nMemory Operations\nPointers & references |\nAddresses\n\n\nGet two integers from the user.\n\nThen, \u00a0 display a message if the first integer is:\n\n \u00a0 less than, \n \u00a0 equal to, \u00a0 or \n \u00a0 greater than\nthe second integer.\n\n\n\nTest the condition \u00a0 for each case separately, \u00a0 so that \u00a0 all three comparison operators are used \u00a0 in the code.\n\n\n\nRelated task\n\n \u00a0 String comparison\n\n"
    },
    {
        "answer": "\u00a0\nCREATE TABLE TEST (\n  VAL1 INT,\n  VAL2 INT\n);\nINSERT INTO TEST (VAL1, VAL2) VALUES\n  (1, 2),\n  (2, 2),\n  (2, 1);\nSELECT\n  CASE\n     WHEN VAL1 < VAL2 THEN VAL1 || ' less than ' || VAL2\n     WHEN VAL1 = VAL2 THEN VAL1 || ' equal to ' || VAL2\n     WHEN VAL1 > VAL2 THEN VAL1 || ' greater than ' || VAL2\n  END COMPARISON\nFROM TEST;\n\u00a0",
        "context": "",
        "question": "\nBasic Data Operation\n\nThis is a basic data operation. It represents a fundamental action on a basic data type.\nYou may see other such operations in the Basic Data Operations category, or:\n\n\nInteger Operations\nArithmetic |\nComparison\nBoolean Operations\nBitwise |\nLogical\nString Operations\nConcatenation |\nInterpolation |\nComparison |\nMatching\nMemory Operations\nPointers & references |\nAddresses\n\n\nGet two integers from the user.\n\nThen, \u00a0 display a message if the first integer is:\n\n \u00a0 less than, \n \u00a0 equal to, \u00a0 or \n \u00a0 greater than\nthe second integer.\n\n\n\nTest the condition \u00a0 for each case separately, \u00a0 so that \u00a0 all three comparison operators are used \u00a0 in the code.\n\n\n\nRelated task\n\n \u00a0 String comparison\n\n"
    },
    {
        "answer": "\u00a0\ndb2 \"select 'This is the first line.\nThis is the second line.\nThis is the third line.' from sysibm.sysdummy1\"\n\u00a0",
        "context": "",
        "question": "A \u00a0 here document \u00a0 (or \"heredoc\") \u00a0 is a way of specifying a text block, preserving the line breaks, indentation and other whitespace within the text.\n\nDepending on the language being used, a \u00a0 here document \u00a0 is constructed using a command followed by \"<<\" (or some other symbol) followed by a token string.\n\nThe text block will then start on the next line, and will be followed by the chosen token at the beginning of the following line, which is used to mark the end of the text block.\n\n\n\nTask\n\nDemonstrate the use of \u00a0 here documents \u00a0 within the language.\n\nRelated task\n\n \u00a0 Documentation\n\n"
    },
    {
        "answer": " RAISERROR 'Goodbye, World!', 16, 1 ",
        "context": "",
        "question": "Hello world/Standard error is part of Short Circuit's Console Program Basics selection.\nA common practice in computing is to send error messages\nto a different output stream than normal text console messages.\n\nThe normal messages print to what is called \"standard output\" or \"standard out\".\n\nThe error messages print to \"standard error\".\n\nThis separation can be used to redirect error messages to a different place than normal messages.\n\n\n\nTask\n\nShow how to print a message to standard error by printing \u00a0 \u00a0 Goodbye, World! \u00a0 \u00a0 on that stream.\n\n\n\n"
    },
    {
        "answer": "tar -xvf v11.1_linuxx64_expc.tar.gz",
        "context": "",
        "question": "Task\n\nGuide a new user of a language through the steps necessary\nto install the programming language and selection of a text editor if needed,\nto run the languages' example in the Hello world/Text task.\n\n Assume the language-newbie is a programmer in another language.\n Assume the language-newbie is competent in installing software for the platform.\n Assume the language-newbie can use one simple text editor for the OS/platform, (but that may not necessarily be a particular one if the installation needs a particular editor).\n Refer to, (and link to), already existing documentation as much as possible (but provide a summary here).\n Remember to state where to view the output.\n If particular IDE's or editors are required that are not standard, then point to/explain their installation too.\n\n\nNote:\n If it is more natural for a language to give output via a GUI or to a file etc, then use that method of output rather than as text to a terminal/command-line, but remember to give instructions on how to view the output generated.\n You may use sub-headings if giving instructions for multiple platforms.\n\n"
    },
    {
        "answer": "-- setting up the test data\n\u00a0\nCREATE TABLE people (age NUMBER(3), name varchar2(30));\nINSERT INTO people (age, name)\n  SELECT 27, 'Jonah'  FROM dual UNION ALL\n  SELECT 18, 'Alan'   FROM dual UNION ALL\n  SELECT 28, 'Glory'  FROM dual UNION ALL\n  SELECT 18, 'Popeye' FROM dual UNION ALL\n  SELECT 28, 'Alan'   FROM dual\n;\n\u00a0\nCREATE TABLE nemesises (name varchar2(30), nemesis varchar2(30));\nINSERT INTO nemesises (name, nemesis) \n  SELECT 'Jonah', 'Whales'  FROM dual UNION ALL\n  SELECT 'Jonah', 'Spiders' FROM dual UNION ALL\n  SELECT 'Alan' , 'Ghosts'  FROM dual UNION ALL\n  SELECT 'Alan' , 'Zombies' FROM dual UNION ALL\n  SELECT 'Glory', 'Buffy'   FROM dual\n;",
        "context": "",
        "question": "An inner join is an operation that combines two data tables into one table, based on matching column values. The simplest way of implementing this operation is the nested loop join algorithm, but a more scalable alternative is the hash join algorithm.\n\nTask[edit]\nImplement the \"hash join\" algorithm, and demonstrate that it passes the test-case listed below.\n\nYou should represent the tables as data structures that feel natural in your programming language.\n\nGuidance\nThe \"hash join\" algorithm consists of two steps:\n\n Hash phase: Create a multimap from one of the two tables, mapping from each join column value to all the rows that contain it.\n\n The multimap must support hash-based lookup which scales better than a simple linear search, because that's the whole point of this algorithm.\n Ideally we should create the multimap for the smaller table, thus minimizing its creation time and memory size.\n Join phase: Scan the other table, and find matching rows by looking in the multimap created before.\n\n\nIn pseudo-code, the algorithm could be expressed as follows:\n\nlet A = the first input table (or ideally, the larger one)\nlet B = the second input table (or ideally, the smaller one)\nlet jA = the join column ID of table A\nlet jB = the join column ID of table B\nlet MB = a multimap for mapping from single values to multiple rows of table B (starts out empty)\nlet C = the output table (starts out empty)\n\nfor each row b in table B:\n   place b in multimap MB under key b(jB)\n\nfor each row a in table A:\n   for each row b in multimap MB under key a(jA):\n      let c = the concatenation of row a and row b\n      place row c in table C\n\nTest-case\n\n\n Input\n\n Output\n\n\n\n\n\n A =\n\n\n\n\n Age \n Name\n\n\n 27 \n Jonah\n\n\n 18 \n Alan\n\n\n 28 \n Glory\n\n\n 18 \n Popeye\n\n\n 28 \n Alan\n\n\n\n\n B =\n\n\n\n\n Character \n Nemesis\n\n\n Jonah \n Whales\n\n\n Jonah \n Spiders\n\n\n Alan \n Ghosts\n\n\n Alan \n Zombies\n\n\n Glory \n Buffy\n\n\n\n jA =\n\n Name (i.e. column 1)\n\n jB =\n\n Character (i.e. column 0)\n\n\n\n\n\n A.Age \n A.Name \n B.Character \n B.Nemesis\n\n\n 27 \n Jonah \n Jonah \n Whales\n\n\n 27 \n Jonah \n Jonah \n Spiders\n\n\n 18 \n Alan \n Alan \n Ghosts\n\n\n 18 \n Alan \n Alan \n Zombies\n\n\n 28 \n Glory \n Glory \n Buffy\n\n\n 28 \n Alan \n Alan \n Ghosts\n\n\n 28 \n Alan \n Alan \n Zombies\n\n\nThe order of the rows in the output table is not significant.\n\nIf you're using numerically indexed arrays to represent table rows (rather than referring to columns by name), you could represent the output rows in the form [[27, \"Jonah\"], [\"Jonah\", \"Whales\"]].\n\n\n\n"
    },
    {
        "answer": " PRINT 'Goodbye, World!'",
        "context": "",
        "question": "Some languages automatically insert a newline after outputting a string, unless measures are taken to prevent its output.\n\n\n\nTask\n\nDisplay the string \u00a0 Goodbye, World! \u00a0 without a trailing newline.\n\n\n\nRelated tasks\n\n \u00a0 Hello world/Graphical\n \u00a0 Hello world/Line Printer\n \u00a0 Hello world/Standard error\n \u00a0 Hello world/Text\n\n"
    },
    {
        "answer": "DELIMITER $$\n\u00a0\nCREATE FUNCTION haversine (\n\t\tlat1 FLOAT, lon1 FLOAT,\n\t\tlat2 FLOAT, lon2 FLOAT\n\t) RETURNS FLOAT\n\tNO SQL DETERMINISTIC\nBEGIN\n\tDECLARE r FLOAT unsigned DEFAULT 6372.8;\n\tDECLARE dLat FLOAT unsigned;\n\tDECLARE dLon FLOAT unsigned;\n\tDECLARE a FLOAT unsigned;\n\tDECLARE c FLOAT unsigned;\n\u00a0\n\tSET dLat = ABS(RADIANS(lat2 - lat1));\n\tSET dLon = ABS(RADIANS(lon2 - lon1));\n\tSET lat1 = RADIANS(lat1);\n\tSET lat2 = RADIANS(lat2);\n\u00a0\n\tSET a = POW(SIN(dLat / 2), 2) + COS(lat1) * COS(lat2) * POW(SIN(dLon / 2), 2);\n\tSET c = 2 * ASIN(SQRT(a));\n\u00a0\n\tRETURN (r * c);\nEND$$\n\u00a0\nDELIMITER ;",
        "context": "",
        "question": "\n\n This page uses content from Wikipedia. The original article was at Haversine formula. The list of authors can be seen in the page history. As with Rosetta Code, the text of Wikipedia is available under the GNU FDL. (See links for details on variance)\n\n\n\nThe haversine formula is an equation important in navigation, giving great-circle distances between two points on a sphere from their longitudes and latitudes.\n\nIt is a special case of a more general formula in spherical trigonometry, the law of haversines, relating the sides and angles of spherical \"triangles\".\n\n\n\nTask\n\nImplement a great-circle distance function, or use a library function,\nto show the great-circle distance between:\n\n Nashville International Airport (BNA) \u00a0 in Nashville, TN, USA, \u00a0 which is: \n   N 36\u00b07.2',   W 86\u00b040.2'     (36.12,   -86.67)           -and-\n\n Los Angeles International Airport (LAX) \u00a0in Los Angeles, CA, USA, \u00a0 which is:\n   N 33\u00b056.4',  W 118\u00b024.0'    (33.94,  -118.40)   \n\n\n\nUser Kaimbridge clarified on the Talk page:\n\n -- 6371.0 km is the authalic radius based on/extracted from surface area;\n -- 6372.8 km is an approximation of the radius of the average circumference\n    (i.e., the average great-elliptic or great-circle radius), where the\n     boundaries are the meridian (6367.45 km) and the equator (6378.14 km).\n\nUsing either of these values results, of course, in differing distances:\n\n 6371.0 km -> 2886.44444283798329974715782394574671655 km;\n 6372.8 km -> 2887.25995060711033944886005029688505340 km;\n (results extended for accuracy check:  Given that the radii are only\n  approximations anyways, .01' \u2248 1.0621333 km and .001\" \u2248 .00177 km,\n  practical precision required is certainly no greater than about\n  .0000001\u2014\u2014i.e., .1 mm!)\n\nAs distances are segments of great circles/circumferences, it is\nrecommended that the latter value (r = 6372.8 km) be used (which\nmost of the given solutions have already adopted, anyways). \n\nMost of the examples below adopted Kaimbridge's recommended value of\n6372.8 km for the earth radius. However, the derivation of this\nellipsoidal quadratic mean radius\nis wrong (the averaging over azimuth is biased). When applying these\nexamples in real applications, it is better to use the\nmean earth radius,\n6371 km. This value is recommended by the International Union of\nGeodesy and Geophysics and it minimizes the RMS relative error between the\ngreat circle and geodesic distance.\n\n\n\n\n\n"
    },
    {
        "answer": "CREATE FUNCTION [dbo].[Haversine](@Lat1 AS DECIMAL(9,7), @Lon1 AS DECIMAL(10,7), @Lat2 AS DECIMAL(9,7), @Lon2 AS DECIMAL(10,7))\nRETURNS DECIMAL(12,7)\nAS\nBEGIN\n\tDECLARE @R\tDECIMAL(11,7);\n\tDECLARE @dLat\tDECIMAL(9,7);\n\tDECLARE @dLon\tDECIMAL(10,7);\n\tDECLARE @a\tDECIMAL(10,7);\n\tDECLARE @c\tDECIMAL(10,7);\n\u00a0\n\tSET @R\t\t= 6372.8;\n\tSET @dLat\t= RADIANS(@Lat2 - @Lat1);\n\tSET @dLon\t= RADIANS(@Lon2 - @Lon1);\n\tSET @Lat1\t= RADIANS(@Lat1);\n\tSET @Lat2\t= RADIANS(@Lat2);\n\tSET @a\t\t= SIN(@dLat / 2) * SIN(@dLat / 2) + SIN(@dLon / 2) * SIN(@dLon / 2) * COS(@Lat1) * COS(@Lat2);\n\tSET @c\t\t= 2 * ASIN(SQRT(@a));\n\u00a0\n\tRETURN @R * @c;\nEND\nGO\n\u00a0\nSELECT dbo.Haversine(36.12,-86.67,33.94,-118.4)\n\u00a0",
        "context": "",
        "question": "\n\n This page uses content from Wikipedia. The original article was at Haversine formula. The list of authors can be seen in the page history. As with Rosetta Code, the text of Wikipedia is available under the GNU FDL. (See links for details on variance)\n\n\n\nThe haversine formula is an equation important in navigation, giving great-circle distances between two points on a sphere from their longitudes and latitudes.\n\nIt is a special case of a more general formula in spherical trigonometry, the law of haversines, relating the sides and angles of spherical \"triangles\".\n\n\n\nTask\n\nImplement a great-circle distance function, or use a library function,\nto show the great-circle distance between:\n\n Nashville International Airport (BNA) \u00a0 in Nashville, TN, USA, \u00a0 which is: \n   N 36\u00b07.2',   W 86\u00b040.2'     (36.12,   -86.67)           -and-\n\n Los Angeles International Airport (LAX) \u00a0in Los Angeles, CA, USA, \u00a0 which is:\n   N 33\u00b056.4',  W 118\u00b024.0'    (33.94,  -118.40)   \n\n\n\nUser Kaimbridge clarified on the Talk page:\n\n -- 6371.0 km is the authalic radius based on/extracted from surface area;\n -- 6372.8 km is an approximation of the radius of the average circumference\n    (i.e., the average great-elliptic or great-circle radius), where the\n     boundaries are the meridian (6367.45 km) and the equator (6378.14 km).\n\nUsing either of these values results, of course, in differing distances:\n\n 6371.0 km -> 2886.44444283798329974715782394574671655 km;\n 6372.8 km -> 2887.25995060711033944886005029688505340 km;\n (results extended for accuracy check:  Given that the radii are only\n  approximations anyways, .01' \u2248 1.0621333 km and .001\" \u2248 .00177 km,\n  practical precision required is certainly no greater than about\n  .0000001\u2014\u2014i.e., .1 mm!)\n\nAs distances are segments of great circles/circumferences, it is\nrecommended that the latter value (r = 6372.8 km) be used (which\nmost of the given solutions have already adopted, anyways). \n\nMost of the examples below adopted Kaimbridge's recommended value of\n6372.8 km for the earth radius. However, the derivation of this\nellipsoidal quadratic mean radius\nis wrong (the averaging over azimuth is biased). When applying these\nexamples in real applications, it is better to use the\nmean earth radius,\n6371 km. This value is recommended by the International Union of\nGeodesy and Geophysics and it minimizes the RMS relative error between the\ngreat circle and geodesic distance.\n\n\n\n\n\n"
    },
    {
        "answer": "\u00a0\n/*\nThis is a code implementation for finding one or more contiguous subsequences in a general sequence with the maximum sum of its elements.\np_list      -- List of elements of the general sequence of integers separated by a delimiter.\np_delimiter -- proper delimiter\n*/\n\u00a0\nWITH \n  FUNCTION greatest_subsequential_sum(p_list IN varchar2, p_delimiter IN varchar2) RETURN varchar2 IS \n    -- Variablen\n    v_list       varchar2(32767)\u00a0:= TRIM(BOTH p_delimiter FROM p_list);\n    v_substr_i   varchar2(32767);\n    v_substr_j   varchar2(32767);\n    v_substr_out varchar2(32767);\n    v_res        INTEGER\u00a0:= 0;\n    v_res_out    INTEGER\u00a0:= 0;\n    --\n  BEGIN\n     --\n     v_list\u00a0:= regexp_replace(v_list,''||chr(92)||p_delimiter||'{2,}',p_delimiter);\n     --\n     FOR i IN 1..nvl(regexp_count(v_list,'[^'||p_delimiter||']+'),0)\n     loop\n       v_substr_i\u00a0:= substr(v_list,regexp_instr(v_list,'[^'||p_delimiter||']+',1,i));\n       --\n       FOR j IN reverse 1..regexp_count(v_substr_i,'[^'||p_delimiter||']+')\n       loop\n         --\n         v_substr_j\u00a0:= TRIM(BOTH p_delimiter FROM substr(v_substr_i,1,regexp_instr(v_substr_i,'[^'||p_delimiter||']+',1,j,1)));\n         EXECUTE immediate 'select sum('||REPLACE(v_substr_j,p_delimiter,'+')||') from dual' INTO v_res;\n         --\n         IF v_res > v_res_out THEN\n            v_res_out\u00a0:= v_res;\n            v_substr_out\u00a0:= '{'||v_substr_j||'}';\n         elsif v_res = v_res_out THEN\n            v_res_out\u00a0:= v_res;\n            v_substr_out\u00a0:= v_substr_out||',{'||v_substr_j||'}';\n         END IF;\n         --\n      END loop;\n      --\n   END loop;\n   --   \n   v_substr_out\u00a0:= TRIM(BOTH ',' FROM nvl(v_substr_out,'{}'));\n   v_substr_out\u00a0:= CASE WHEN regexp_count(v_substr_out,'},{')>0 THEN 'subsequences '||v_substr_out ELSE 'a subsequence '||v_substr_out END;\n   RETURN 'The maximum sum '||v_res_out||' belongs to '||v_substr_out||' of the main sequence {'||p_list||'}';\nEND;\n\u00a0\n--Test\nSELECT greatest_subsequential_sum('-1|-2|-3|-4|-5|', '|') AS \"greatest subsequential sum\" FROM dual\nUNION ALL\nSELECT greatest_subsequential_sum('', '') FROM dual\nUNION ALL\nSELECT greatest_subsequential_sum('     ', ' ') FROM dual\nUNION ALL\nSELECT greatest_subsequential_sum(';;;;;;+1;;;;;;;;;;;;;2;+3;4;;;;-5;;;;', ';') FROM dual\nUNION ALL\nSELECT greatest_subsequential_sum('-1,-2,+3,,,,,,,,,,,,+5,+6,-2,-1,+4,-4,+2,-1', ',') FROM dual\nUNION ALL\nSELECT greatest_subsequential_sum(',+7,-6,-8,+5,-2,-6,+7,+4,+8,-9,-3,+2,+6,-4,-6,,', ',') FROM dual\nUNION ALL \nSELECT greatest_subsequential_sum('01 +2 3 +4 05 -8 -9 -20 40 25 -5', ' ') FROM dual\nUNION ALL \nSELECT greatest_subsequential_sum('1 2 3 0 0  -99 02 03 00001 -99 3 2 1 -99 3 1 2 0', ' ') FROM dual\nUNION ALL \nSELECT greatest_subsequential_sum('0,0,1,0', ',') FROM dual\nUNION ALL \nSELECT greatest_subsequential_sum('0,0,0', ',') FROM dual\nUNION ALL \nSELECT greatest_subsequential_sum('1,-1,+1', ',') FROM dual; \n\u00a0\n\u00a0",
        "context": "",
        "question": "Task\n\nGiven a sequence of integers, find a continuous subsequence which maximizes the sum of its elements, that is, the elements of no other single subsequence add up to a value larger than this one.\n\n\n\nAn empty subsequence is considered to have the sum of \u00a0 0; \u00a0 thus if all elements are negative, the result must be the empty sequence.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nDECLARE @BINARY AS NVARCHAR(MAX) = '001010111' \nDECLARE @gray AS NVARCHAR(MAX) = '' \n\u00a0\n--Encoder \nSET @gray = LEFT(@BINARY, 1) \n\u00a0\nWHILE LEN(@BINARY) > 1 \n  BEGIN \n      IF LEFT(@BINARY, 1)\u00a0!= SUBSTRING(@BINARY, 2, 1) \n        SET @gray = @gray + '1' \n      ELSE \n        SET @gray = @gray + '0' \n\u00a0\n      SET @BINARY = RIGHT(@BINARY, LEN(@BINARY) - 1) \n  END \n\u00a0\nSELECT @gray \n\u00a0\n--Decoder \nSET @BINARY = LEFT(@gray, 1) \n\u00a0\nWHILE LEN(@gray) > 1 \n  BEGIN \n      IF RIGHT(@BINARY, 1)\u00a0!= SUBSTRING(@gray, 2, 1) \n        SET @BINARY = @BINARY + '1' \n      ELSE \n        SET @BINARY = @BINARY + '0' \n\u00a0\n      SET @gray = RIGHT(@gray, LEN(@gray) - 1) \n  END \n\u00a0\nSELECT @BINARY \n\u00a0",
        "context": "",
        "question": "Gray code\nKarnaugh maps\nCreate functions to encode a number to and decode a number from Gray code.\n\nDisplay the normal binary representations, Gray code representations, and decoded Gray code values for all 5-bit binary numbers (0-31 inclusive, leading 0's not necessary).\n\nThere are many possible Gray codes. The following encodes what is called \"binary reflected Gray code.\"\n\nEncoding (MSB is bit 0, b is binary, g is Gray code):\n\nif b[i-1] = 1\n   g[i] = not b[i]\nelse\n   g[i] = b[i]\nOr:\n\ng = b xor (b logically right shifted 1 time)\nDecoding (MSB is bit 0, b is binary, g is Gray code):\n\nb[0] = g[0]\n\nfor other bits:\nb[i] = g[i] xor b[i-1]\nReference\n Converting Between Gray and Binary Codes. It includes step-by-step animations."
    },
    {
        "answer": "\u00a0\nCREATE TEMPORARY TABLE factors(n INT);\nINSERT INTO factors VALUES(2);\nINSERT INTO factors VALUES(3);\nINSERT INTO factors VALUES(5);\n\u00a0\nCREATE TEMPORARY TABLE hamming AS\n    WITH RECURSIVE ham AS (\n          SELECT 1 AS h\n          UNION\n          SELECT h*n x FROM ham JOIN factors ORDER BY x\n          LIMIT 1700\n        )\n    SELECT h FROM ham;\n\u00a0\nsqlite> SELECT h FROM hamming ORDER BY h LIMIT 20;\n1\n2\n3\n4\n5\n6\n8\n9\n10\n12\n15\n16\n18\n20\n24\n25\n27\n30\n32\n36\nsqlite> SELECT h FROM hamming ORDER BY h LIMIT 1 OFFSET 1690;\n2125764000\n\u00a0",
        "context": "",
        "question": "Hamming numbers are numbers of the form \u00a0\n\n    H = 2i \u00d7 3j \u00d7 5k\n           where \n     i,  j,  k  \u2265  0 \n\nHamming numbers \u00a0 are also known as \u00a0 ugly numbers \u00a0 and also \u00a0 5-smooth numbers \u00a0 (numbers whose prime divisors are less or equal to 5).\n\n\n\nTask\n\nGenerate the sequence of Hamming numbers, in increasing order. \u00a0 In particular:\n\n Show the \u00a0 first twenty \u00a0 Hamming numbers.\n Show the \u00a0 1691st \u00a0 Hamming number (the last one below \u00a0 231).\n Show the \u00a0 one millionth \u00a0 Hamming number (if the language \u2013 or a convenient library \u2013 supports arbitrary-precision integers).\n\n\nRelated tasks\n\n Humble numbers\n N-smooth numbers\n\n\nReferences\n\n Wikipedia entry: \u00a0 Hamming numbers \u00a0 \u00a0 (this link is re-directed to \u00a0 Regular number).\n Wikipedia entry: \u00a0 Smooth number\n OEIS entry: \u00a0 A051037 \u00a0 5-smooth \u00a0 or \u00a0 Hamming numbers\n Hamming problem from Dr. Dobb's CodeTalk (dead link as of Sep 2011; parts of the thread here and here).\n\n"
    },
    {
        "answer": "\u00a0\nDROP FUNCTION IF EXISTS gcd;\nDELIMITER |\n\u00a0\nCREATE FUNCTION gcd(x INT, y INT)\nRETURNS INT\nBEGIN\n  SET @dividend=GREATEST(ABS(x),ABS(y));\n  SET @divisor=LEAST(ABS(x),ABS(y));\n  IF @divisor=0 THEN\n    RETURN @dividend;\n  END IF;\n  SET @gcd=NULL;\n  SELECT gcd INTO @gcd FROM\n    (SELECT @tmp:=@dividend,\n            @dividend:=@divisor AS gcd,\n            @divisor:=@tmp % @divisor AS remainder\n       FROM mysql.help_relation WHERE @divisor>0) AS x\n    WHERE remainder=0;\n  RETURN @gcd;\nEND;|\n\u00a0\nDELIMITER ;\n\u00a0\nSELECT gcd(12345, 9876);\n\u00a0",
        "context": "",
        "question": "Greatest common divisor\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\nTask\n\nFind the greatest common divisor \u00a0 (GCD) \u00a0 of two integers.\n\n\nGreatest common divisor \u00a0 is also known as \u00a0 greatest common factor (gcf) \u00a0 and \u00a0 greatest common measure.\n\n\n\nRelated task\n\n \u00a0 least common multiple.\n\n\nSee also\n\n \u00a0 MathWorld entry: \u00a0 greatest common divisor.\n \u00a0 Wikipedia entry: \u00a0 \u00a0 greatest common divisor.\n\n"
    },
    {
        "answer": "SELECT 'Hello world!';",
        "context": "",
        "question": "Hello world/Text is part of Short Circuit's Console Program Basics selection.\nTask\n\nDisplay the string Hello world! on a text console.\n\nRelated tasks\n\n \u00a0 Hello world/Graphical\n \u00a0 Hello world/Line Printer\n \u00a0 Hello world/Newbie\n \u00a0 Hello world/Newline omission\n \u00a0 Hello world/Standard error\n \u00a0 Hello world/Web server\n\n"
    },
    {
        "answer": "DROP TABLE tbl;\nCREATE TABLE tbl\n(\n        u       NUMBER,\n        v       NUMBER\n);\n\u00a0\nINSERT INTO tbl ( u, v ) VALUES ( 20, 50 );\nINSERT INTO tbl ( u, v ) VALUES ( 21, 50 );\nINSERT INTO tbl ( u, v ) VALUES ( 21, 51 );\nINSERT INTO tbl ( u, v ) VALUES ( 22, 50 );\nINSERT INTO tbl ( u, v ) VALUES ( 22, 55 );\n\u00a0\ncommit;\n\u00a0\nWITH\n        FUNCTION gcd ( ui IN NUMBER, vi IN NUMBER )\n        RETURN NUMBER\n        IS\n                u NUMBER\u00a0:= ui;\n                v NUMBER\u00a0:= vi;\n                t NUMBER;\n        BEGIN\n                while v > 0\n                loop\n                        t\u00a0:= u;\n                        u\u00a0:= v;\n                        v:= MOD(t, v );\n                END loop;\n                RETURN abs(u);\n        END gcd;\n        SELECT u, v, gcd ( u, v )\n        FROM tbl\n/\n\u00a0",
        "context": "",
        "question": "Greatest common divisor\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\nTask\n\nFind the greatest common divisor \u00a0 (GCD) \u00a0 of two integers.\n\n\nGreatest common divisor \u00a0 is also known as \u00a0 greatest common factor (gcf) \u00a0 and \u00a0 greatest common measure.\n\n\n\nRelated task\n\n \u00a0 least common multiple.\n\n\nSee also\n\n \u00a0 MathWorld entry: \u00a0 greatest common divisor.\n \u00a0 Wikipedia entry: \u00a0 \u00a0 greatest common divisor.\n\n"
    },
    {
        "answer": "\u00a0\nCREATE OR ALTER FUNCTION [dbo].[PGCD]\n    (    @a BigInt\n    ,    @b BigInt\n    )\nRETURNS BigInt\nWITH RETURNS NULL ON NULL INPUT\n-- Calculates the Greatest Common Denominator of two numbers (1 if they are coprime).\nBEGIN\nDECLARE @PGCD BigInt;\n\u00a0\nWITH    Vars(A, B)\nAs  (   SELECT  Max(V.N) As A\n            ,   Min(V.N) As B\n        FROM (  VALUES  ( Abs(@a) , Abs(@b)) ) Params(A, B)\n        -- First, get absolute value\n        Cross APPLY (   VALUES (Params.A) , (Params.B) ) V(N)\n        -- Then, order parameters without Greatest/Least functions\n        WHERE Params.A > 0\n            And Params.B > 0 -- If 0 passed in, NULL shall be the output\n    )\n    ,   Calc(A, B)\nAs  (   SELECT  A\n            ,   B\n        FROM    Vars\n\u00a0\n        UNION ALL\n\u00a0\n        SELECT  B As A\n            ,   A\u00a0% B As B -- Self-ordering\n        FROM    Calc\n        WHERE   Calc.A > 0\n            And Calc.B > 0\n    )\nSELECT  @PGCD = Min(A)\nFROM    Calc\nWHERE   Calc.B = 0\n;\n\u00a0\nRETURN @PGCD;\n\u00a0\nEND\n\u00a0",
        "context": "",
        "question": "Greatest common divisor\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\nTask\n\nFind the greatest common divisor \u00a0 (GCD) \u00a0 of two integers.\n\n\nGreatest common divisor \u00a0 is also known as \u00a0 greatest common factor (gcf) \u00a0 and \u00a0 greatest common measure.\n\n\n\nRelated task\n\n \u00a0 least common multiple.\n\n\nSee also\n\n \u00a0 MathWorld entry: \u00a0 greatest common divisor.\n \u00a0 Wikipedia entry: \u00a0 \u00a0 greatest common divisor.\n\n"
    },
    {
        "answer": "\u00a0\n/*\nThis code is an implementation of gapful numbers in SQL ORACLE 19c \np_start -- start point\np_count -- total number to be found\n*/\nWITH\n  FUNCTION gapful_numbers(p_start IN INTEGER, p_count IN INTEGER) RETURN varchar2 IS\n    v_start   INTEGER\u00a0:= p_start;\n    v_count   INTEGER\u00a0:= 0;\n    v_res     varchar2(32767); \n  BEGIN\n    v_res\u00a0:= 'First '||p_count||' gapful numbers starting from '||p_start||': ';\n    -- main cycle\n    while TRUE loop\n      IF MOD(v_start,to_number(substr(v_start,1,1)||substr(v_start,-1))) = 0 THEN \n         v_res\u00a0:= v_res || v_start; \n         v_count\u00a0:= v_count + 1;\n         exit WHEN v_count = p_count;\n         v_res\u00a0:= v_res || ', ';  \n      END IF;\n      v_start\u00a0:= v_start + 1; \n    END loop;\n    --\n    RETURN v_res;\n    --\n  END;\n\u00a0\n--Test\nSELECT gapful_numbers(100,30) AS res FROM dual\nUNION ALL \nSELECT gapful_numbers(1000000,15) AS res FROM dual\nUNION ALL \nSELECT gapful_numbers(1000000000,10) AS res FROM dual;\n/\n\u00a0",
        "context": "",
        "question": "Numbers \u00a0 (positive integers expressed in base ten) \u00a0 that are (evenly) divisible by the number formed by the\nfirst and last digit are known as \u00a0 gapful numbers.\n\n\nEvenly divisible \u00a0 means divisible with \u00a0 no \u00a0 remainder.\n\n\n\nAll \u00a0 one\u2500 \u00a0 and two\u2500digit \u00a0 numbers have this property and are trivially excluded. \u00a0 Only\nnumbers \u00a0  \u2265  100 \u00a0 will be considered for this Rosetta Code task.\n\n\n\nExample\n\n187 \u00a0 is a \u00a0 gapful \u00a0 number because it is evenly divisible by the\nnumber \u00a0 17 \u00a0 which is formed by the first and last decimal digits\nof \u00a0  187. \n\n\n\nAbout \u00a0 7.46% \u00a0 of positive integers are \u00a0 gapful.\n\n\n\nTask\n\n \u00a0 Generate and show all sets of numbers (below) on one line (horizontally) with a title, \u00a0 here on this page\n \u00a0 Show the first \u00a0 30 \u00a0 gapful numbers\n \u00a0 Show the first \u00a0 15 \u00a0 gapful numbers \u00a0  \u2265  \u00a0 \u00a0 \u00a0 \u00a0 \u00a01,000,000\n \u00a0 Show the first \u00a0 10 \u00a0 gapful numbers \u00a0  \u2265  \u00a0 1,000,000,000\n\n\nRelated tasks\n\n \u00a0 Harshad or Niven series.\n \u00a0 palindromic gapful numbers.\n \u00a0 largest number divisible by its digits.\n\n\nAlso see\n\n \u00a0 The OEIS entry: \u00a0 A108343 gapful numbers.\n \u00a0 numbersaplenty gapful numbers\n\n"
    },
    {
        "answer": "\u00a0\nSET serveroutput ON\n\u00a0\nBEGIN\n  DBMS_OUTPUT.PUT_LINE('Hello world!');\nEND;\n/\n\u00a0",
        "context": "",
        "question": "Hello world/Text is part of Short Circuit's Console Program Basics selection.\nTask\n\nDisplay the string Hello world! on a text console.\n\nRelated tasks\n\n \u00a0 Hello world/Graphical\n \u00a0 Hello world/Line Printer\n \u00a0 Hello world/Newbie\n \u00a0 Hello world/Newline omission\n \u00a0 Hello world/Standard error\n \u00a0 Hello world/Web server\n\n"
    },
    {
        "answer": "Declare\n sbAlphabet  varchar2(100);\nBegin\n  For nuI in 97..122 loop\n      if sbAlphabet is null then\n         sbAlphabet:=chr(nuI);\n      Else\n         sbAlphabet:=sbAlphabet||','||chr(nuI);\n      End if;\n  End loop;\n  Dbms_Output.Put_Line(sbAlphabet);\nEnd;",
        "context": "",
        "question": "Task\n\nGenerate an array, list, lazy sequence, or even an indexable string of all the lower case ASCII characters, from  a  to  z. If the standard library contains such a sequence, show how to access it, but don't fail to show how to generate a similar sequence.\n\nFor this basic task use a reliable style of coding, a style fit for a very large program, and use strong typing if available. It's bug prone to enumerate all the lowercase characters manually in the code.\n\nDuring code review it's not immediate obvious to spot the bug in a Tcl line like this contained in a page of code:\n\nset alpha {a b c d e f g h i j k m n o p q r s t u v w x y z}\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": " EXECUTE BLOCK\n   RETURNS(S VARCHAR(40))\n AS\n BEGIN\n   S = 'Hello world!';\n   SUSPEND;\n END\n",
        "context": "",
        "question": "Hello world/Text is part of Short Circuit's Console Program Basics selection.\nTask\n\nDisplay the string Hello world! on a text console.\n\nRelated tasks\n\n \u00a0 Hello world/Graphical\n \u00a0 Hello world/Line Printer\n \u00a0 Hello world/Newbie\n \u00a0 Hello world/Newline omission\n \u00a0 Hello world/Standard error\n \u00a0 Hello world/Web server\n\n"
    },
    {
        "answer": "\u00a0\nSELECT 'Hello world!' text FROM dual;\n\u00a0",
        "context": "",
        "question": "Hello world/Text is part of Short Circuit's Console Program Basics selection.\nTask\n\nDisplay the string Hello world! on a text console.\n\nRelated tasks\n\n \u00a0 Hello world/Graphical\n \u00a0 Hello world/Line Printer\n \u00a0 Hello world/Newbie\n \u00a0 Hello world/Newline omission\n \u00a0 Hello world/Standard error\n \u00a0 Hello world/Web server\n\n"
    },
    {
        "answer": "\u00a0\nSELECT 'Hello world!' AS text FROM sysibm.sysdummy1;\n\u00a0",
        "context": "",
        "question": "Hello world/Text is part of Short Circuit's Console Program Basics selection.\nTask\n\nDisplay the string Hello world! on a text console.\n\nRelated tasks\n\n \u00a0 Hello world/Graphical\n \u00a0 Hello world/Line Printer\n \u00a0 Hello world/Newbie\n \u00a0 Hello world/Newline omission\n \u00a0 Hello world/Standard error\n \u00a0 Hello world/Web server\n\n"
    },
    {
        "answer": "PRINT \"Hello world!\"",
        "context": "",
        "question": "Hello world/Text is part of Short Circuit's Console Program Basics selection.\nTask\n\nDisplay the string Hello world! on a text console.\n\nRelated tasks\n\n \u00a0 Hello world/Graphical\n \u00a0 Hello world/Line Printer\n \u00a0 Hello world/Newbie\n \u00a0 Hello world/Newline omission\n \u00a0 Hello world/Standard error\n \u00a0 Hello world/Web server\n\n"
    },
    {
        "answer": "FUNCTION multiply(p_arg1 NUMBER, p_arg2 NUMBER) RETURN NUMBER \nIS\n  v_product NUMBER;\nBEGIN\n  v_product := p_arg1 * p_arg2;\n  RETURN v_product;\nEND;",
        "context": "",
        "question": "A function is a body of code that returns a value.\n\nThe value returned may depend on arguments provided to the function.\n\n\n\nTask\n\nWrite a definition of a function called \"multiply\" that takes two arguments and returns their product.\n\n(Argument types should be chosen so as not to distract from showing how functions are created and values returned).\n\n\n\nRelated task\n\n \u00a0 Function prototype\n\n"
    },
    {
        "answer": "DECLARE @n INT\nSELECT @n=123\nSELECT SUBSTRING(CONVERT(CHAR(5), 10000+@n),2,4) AS FourDigits\n\u00a0\nSET @n=5\nprint \"TwoDigits: \" + SUBSTRING(CONVERT(CHAR(3), 100+@n),2,2)\n--Output: 05",
        "context": "",
        "question": "Task\n\nExpress a number in decimal as a fixed-length string with leading zeros.\n\n\n\nFor example, the number \u00a0 7.125 \u00a0 could be expressed as \u00a0 00007.125.\n\n\n\n"
    },
    {
        "answer": "WITH RECURSIVE\nT0 (N, ITEM, LIST, NEW_LIST) AS\n(\n    SELECT 1,\n           NULL, \n           '90,47,58,29,22,32,55,5,55,73' || ',',\n           NULL\n     UNION ALL\n    SELECT CASE\n               WHEN SUBSTR(LIST, INSTR(LIST, ',') + 1, LENGTH(LIST)) = ''\n               THEN N + 1\n               ELSE N\n           END,\n           CASE\n               WHEN SUBSTR(LIST, INSTR(LIST, ',') + 1, LENGTH(LIST)) <> ''\n               THEN SUBSTR(LIST, 1, INSTR(LIST, ',') - 1)\n               ELSE NULL\n           END,\n           CASE\n               WHEN SUBSTR(LIST, INSTR(LIST, ',') + 1, LENGTH(LIST)) = ''\n               THEN IFNULL(NEW_LIST || (SUBSTR(LIST, 1, INSTR(LIST, ',') - 1) - ITEM) || ',', '')\n               ELSE SUBSTR(LIST, INSTR(LIST, ',') + 1, LENGTH(LIST))\n           END,\n           CASE\n               WHEN SUBSTR(LIST, INSTR(LIST, ',') + 1, LENGTH(LIST)) <> ''\n               THEN IFNULL(NEW_LIST, '') || IFNULL((SUBSTR(LIST, 1, INSTR(LIST, ',') - 1) - ITEM) || ',', '')\n               ELSE NULL\n           END\n      FROM T0\n     WHERE INSTR(LIST, ',') > 0\n)\nSELECT N,\n       TRIM(LIST, ',') LIST\n  FROM T0\n WHERE NEW_LIST IS NULL\n   AND LIST <> ''\n ORDER BY N;",
        "context": "",
        "question": "Task\n\nProvide code that produces a list of numbers which is the \u00a0 nth \u00a0order forward difference, given a non-negative integer (specifying the order) and a list of numbers.\n\n\n\nThe first-order forward difference of a list of numbers \u00a0 A \u00a0 is a new list \u00a0 B, \u00a0 where \u00a0 Bn = An+1 - An.\n\nList \u00a0 B \u00a0 should have one fewer element as a result.\n\nThe second-order forward difference of \u00a0 A \u00a0 will be:\n\ntdefmodule Diff do\n\tdef forward(arr,i\\\\1) do\n\t\tforward(arr,[],i)\n\tend\n\n\tdef forward([_|[]],diffs,i) do\n\t\tif i == 1 do\n\t\t\tIO.inspect diffs\n\t\telse \n\t\t\tforward(diffs,[],i-1)\n\t\tend\n\tend\n\n\tdef forward([val1|[val2|vals]],diffs,i) do\n\t\tforward([val2|vals],diffs++[val2-val1],i) \n\tend\nend \n\nThe same as the first-order forward difference of \u00a0 B.\n\nThat new list will have two fewer elements than \u00a0 A \u00a0 and one less than \u00a0 B.\n\nThe goal of this task is to repeat this process up to the desired order.\n\nFor a more formal description, see the related \u00a0 Mathworld article.\n\n\n\nAlgorithmic options\n\n Iterate through all previous forward differences and re-calculate a new array each time.\n Use this formula (from Wikipedia):\n\n\n \n\n\n\n\n\u0394\n\nn\n\n\n[\nf\n]\n(\nx\n)\n=\n\n\u2211\n\nk\n=\n0\n\n\nn\n\n\n\n\n\n(\n\n\nn\nk\n\n\n)\n\n\n\n(\n\u2212\n1\n\n)\n\nn\n\u2212\nk\n\n\nf\n(\nx\n+\nk\n)\n\n\n{\\displaystyle \\Delta ^{n}[f](x)=\\sum _{k=0}^{n}{n \\choose k}(-1)^{n-k}f(x+k)}\n\n\n\n\n (Pascal's Triangle \u00a0 may be useful for this option.)\n\n"
    },
    {
        "answer": "--Create the original array (table #nos) with numbers from 1 to 10\nCREATE TABLE #nos (v INT)\nDECLARE @n INT SET @n=1\nwhile @n<=10 BEGIN INSERT INTO #nos VALUES (@n) SET @n=@n+1 END\n\u00a0\n--Select the subset that are even into the new array (table #evens)\nSELECT v INTO #evens FROM #nos WHERE v\u00a0% 2 = 0\n\u00a0\n-- Show #evens\nSELECT * FROM #evens\n\u00a0\n-- Clean up so you can edit and repeat:\nDROP TABLE #nos\nDROP TABLE #evens",
        "context": "",
        "question": "Task\n\nSelect certain elements from an Array into a new Array in a generic way.\n\n\n\nTo demonstrate, select all even numbers from an Array.\n\nAs an option, give a second solution which filters destructively,\nby modifying the original Array rather than creating a new Array.\n\n\n\n"
    },
    {
        "answer": "BEGIN\n  FOR i IN 1 .. 100\n  LOOP\n    CASE\n    WHEN MOD(i, 15) = 0 THEN\n      DBMS_OUTPUT.put_line('FizzBuzz');\n    WHEN MOD(i, 5) = 0 THEN\n      DBMS_OUTPUT.put_line('Buzz');\n    WHEN MOD(i, 3) = 0 THEN\n      DBMS_OUTPUT.put_line('Fizz');\n    ELSE\n      DBMS_OUTPUT.put_line(i);\n    END CASE;\n  END LOOP;\nEND;",
        "context": "",
        "question": "Task\n\nWrite a program that prints the integers from \u00a0 1 \u00a0 to \u00a0 100 \u00a0 (inclusive).\n\n\n\nBut:\n\n \u00a0 for multiples of three, \u00a0 print \u00a0 Fizz \u00a0 \u00a0 (instead of the number)\n \u00a0 for multiples of five, \u00a0 print \u00a0 Buzz \u00a0 \u00a0 (instead of the number)\n \u00a0 for multiples of both three and five, \u00a0 print \u00a0 FizzBuzz \u00a0 \u00a0 (instead of the number) \n\n\nThe \u00a0 FizzBuzz \u00a0 problem was presented as the lowest level of comprehension required to illustrate adequacy.\n\n\n\nAlso see\n\n \u00a0 (a blog) \u00a0 dont-overthink-fizzbuzz\n \u00a0 (a blog) \u00a0 fizzbuzz-the-programmers-stairway-to-heaven\n\n"
    },
    {
        "answer": "SELECT CASE\n    WHEN MOD(level,15)=0 THEN 'FizzBuzz'\n    WHEN MOD(level,3)=0 THEN 'Fizz'\n    WHEN MOD(level,5)=0 THEN 'Buzz'\n    ELSE TO_CHAR(level)\n    END FizzBuzz\n    FROM dual\n    CONNECT BY LEVEL <= 100;",
        "context": "",
        "question": "Task\n\nWrite a program that prints the integers from \u00a0 1 \u00a0 to \u00a0 100 \u00a0 (inclusive).\n\n\n\nBut:\n\n \u00a0 for multiples of three, \u00a0 print \u00a0 Fizz \u00a0 \u00a0 (instead of the number)\n \u00a0 for multiples of five, \u00a0 print \u00a0 Buzz \u00a0 \u00a0 (instead of the number)\n \u00a0 for multiples of both three and five, \u00a0 print \u00a0 FizzBuzz \u00a0 \u00a0 (instead of the number) \n\n\nThe \u00a0 FizzBuzz \u00a0 problem was presented as the lowest level of comprehension required to illustrate adequacy.\n\n\n\nAlso see\n\n \u00a0 (a blog) \u00a0 dont-overthink-fizzbuzz\n \u00a0 (a blog) \u00a0 fizzbuzz-the-programmers-stairway-to-heaven\n\n"
    },
    {
        "answer": "\u00a0\nBEGIN\n   raise exception 'this is a generic user exception';\n   raise exception division_by_zero;\nEND;\n\u00a0",
        "context": "",
        "question": "Control Structures\nThese are examples of control structures. You may also be interested in:\n\n Conditional structures\n Exceptions\n Flow-control structures\n Loops\n\nThis task is to give an example of an exception handling routine\nand to \"throw\" a new exception.\n\n\n\nRelated task\n\n \u00a0 Exceptions Through Nested Calls\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nBEGIN\n DECLARE numerator INTEGER DEFAULT 12;\n DECLARE denominator INTEGER DEFAULT 0;\n DECLARE RESULT INTEGER;\n DECLARE overflow CONDITION FOR SQLSTATE '22003'\u00a0;\n DECLARE CONTINUE HANDLER FOR overflow\n   RESIGNAL SQLSTATE '22375'\n   SET MESSAGE_TEXT = 'Zero division';\n IF denominator = 0 THEN\n  SIGNAL overflow;\n ELSE\n  SET RESULT = numerator / denominator;\n END IF;\nEND @\n\u00a0",
        "context": "",
        "question": "Control Structures\nThese are examples of control structures. You may also be interested in:\n\n Conditional structures\n Exceptions\n Flow-control structures\n Loops\n\nThis task is to give an example of an exception handling routine\nand to \"throw\" a new exception.\n\n\n\nRelated task\n\n \u00a0 Exceptions Through Nested Calls\n\n"
    },
    {
        "answer": "\u00a0\n!ls\n\u00a0",
        "context": "",
        "question": "Task\n\nRun either the \u00a0 ls \u00a0 system command \u00a0 (dir \u00a0 on Windows), \u00a0 or the \u00a0 pause \u00a0 system command.\n\n\n\n\nRelated task\n  Get system command output\n\n"
    },
    {
        "answer": "CREATE OR REPLACE FUNCTION fib(n INTEGER) RETURNS INTEGER AS $$\nBEGIN\n  IF (n < 2) THEN\n    RETURN n;\n  END IF;\n  RETURN fib(n - 1) + fib(n - 2);\nEND;\n$$ LANGUAGE plpgsql;",
        "context": "",
        "question": "The Fibonacci sequence is a sequence \u00a0  Fn  \u00a0 of natural numbers defined recursively:\n\n      F0 = 0 \n      F1 = 1 \n      Fn = Fn-1 + Fn-2, if n>1 \n\n\n\nTask\n\nWrite a function to generate the \u00a0  nth  \u00a0 Fibonacci number.\n\nSolutions can be iterative or recursive (though recursive solutions are generally considered too slow and are mostly used as an exercise in recursion).\n\nThe sequence is sometimes extended into negative numbers by using a straightforward inverse of the positive definition:\n\n      Fn = Fn+2 - Fn+1, if n<0   \n\nsupport for negative \u00a0 \u00a0  n  \u00a0 \u00a0 in the solution is optional.\n\n\n\nRelated tasks\n\n \u00a0 Fibonacci n-step number sequences\u200e\n \u00a0 Leonardo numbers\n\n\nReferences\n\n \u00a0 Wikipedia, Fibonacci number\n \u00a0 Wikipedia, Lucas number\n \u00a0 MathWorld, Fibonacci Number\n \u00a0 Some identities for r-Fibonacci numbers\n \u00a0 OEIS Fibonacci numbers\n \u00a0 OEIS Lucas numbers\n\n"
    },
    {
        "answer": "\u00a0\nCREATE OR REPLACE FUNCTION fnu_fibonacci(p_num INTEGER) RETURN INTEGER IS\n  f INTEGER;\n  p INTEGER;\n  q INTEGER;\nBEGIN\n  CASE WHEN p_num < 0 OR p_num != TRUNC(p_num) \n                            THEN raise_application_error(-20001, 'Invalid input: ' || p_num, TRUE);\n       WHEN p_num IN (0, 1) THEN f := p_num;\n       ELSE\n            p := 0;\n            q := 1;\n            FOR i IN 2 .. p_num LOOP\n              f := p + q;\n              p := q;\n              q := f;\n            END LOOP;\n  END CASE;\n  RETURN(f);\nEND fnu_fibonacci;\n/\n\u00a0",
        "context": "",
        "question": "The Fibonacci sequence is a sequence \u00a0  Fn  \u00a0 of natural numbers defined recursively:\n\n      F0 = 0 \n      F1 = 1 \n      Fn = Fn-1 + Fn-2, if n>1 \n\n\n\nTask\n\nWrite a function to generate the \u00a0  nth  \u00a0 Fibonacci number.\n\nSolutions can be iterative or recursive (though recursive solutions are generally considered too slow and are mostly used as an exercise in recursion).\n\nThe sequence is sometimes extended into negative numbers by using a straightforward inverse of the positive definition:\n\n      Fn = Fn+2 - Fn+1, if n<0   \n\nsupport for negative \u00a0 \u00a0  n  \u00a0 \u00a0 in the solution is optional.\n\n\n\nRelated tasks\n\n \u00a0 Fibonacci n-step number sequences\u200e\n \u00a0 Leonardo numbers\n\n\nReferences\n\n \u00a0 Wikipedia, Fibonacci number\n \u00a0 Wikipedia, Lucas number\n \u00a0 MathWorld, Fibonacci Number\n \u00a0 Some identities for r-Fibonacci numbers\n \u00a0 OEIS Fibonacci numbers\n \u00a0 OEIS Lucas numbers\n\n"
    },
    {
        "answer": "\u00a0\nSELECT round ( EXP ( SUM (ln ( ( 1 + SQRT( 5 ) ) / 2)\n        ) OVER ( ORDER BY level ) ) / SQRT( 5 ) ) fibo\nFROM dual\nCONNECT BY level <= 10;\n\u00a0",
        "context": "",
        "question": "The Fibonacci sequence is a sequence \u00a0  Fn  \u00a0 of natural numbers defined recursively:\n\n      F0 = 0 \n      F1 = 1 \n      Fn = Fn-1 + Fn-2, if n>1 \n\n\n\nTask\n\nWrite a function to generate the \u00a0  nth  \u00a0 Fibonacci number.\n\nSolutions can be iterative or recursive (though recursive solutions are generally considered too slow and are mostly used as an exercise in recursion).\n\nThe sequence is sometimes extended into negative numbers by using a straightforward inverse of the positive definition:\n\n      Fn = Fn+2 - Fn+1, if n<0   \n\nsupport for negative \u00a0 \u00a0  n  \u00a0 \u00a0 in the solution is optional.\n\n\n\nRelated tasks\n\n \u00a0 Fibonacci n-step number sequences\u200e\n \u00a0 Leonardo numbers\n\n\nReferences\n\n \u00a0 Wikipedia, Fibonacci number\n \u00a0 Wikipedia, Lucas number\n \u00a0 MathWorld, Fibonacci Number\n \u00a0 Some identities for r-Fibonacci numbers\n \u00a0 OEIS Fibonacci numbers\n \u00a0 OEIS Lucas numbers\n\n"
    },
    {
        "answer": "CREATE COMPUTE MODULE ESQL_Compute\n  CREATE FUNCTION Main() RETURNS BOOLEAN\n  BEGIN\n    RETURN TRUE;\n  END;\nEND MODULE;",
        "context": "",
        "question": "Task\n\nCreate the simplest possible program that is still considered \"correct.\"\n\n\n\n"
    },
    {
        "answer": "\u00a0\nDECLARE\n  /*====================================================================================================\n  -- For    \u00a0:  https://rosettacode.org/\n  -- --\n  -- Task   \u00a0: Factorial\n  -- Method \u00a0: iterative\n  -- Language: PL/SQL\n  --\n  -- 2020-12-30 by alvalongo\n  ====================================================================================================*/\n  --\n  FUNCTION fnuFactorial(inuValue   INTEGER)\n  RETURN NUMBER\n  IS\n    nuFactorial NUMBER;\n  BEGIN\n    IF inuValue IS NOT NULL THEN\n       nuFactorial:=1;\n       --\n       IF inuValue>=1 THEN\n          --\n          FOR nuI IN 1..inuValue LOOP\n              nuFactorial:=nuFactorial*nuI;\n          END LOOP;\n          --\n       END IF;\n       --\n    END IF;\n    --\n    RETURN(nuFactorial);\n  END fnuFactorial;\nBEGIN\n  FOR nuJ IN 0..100 LOOP\n      DBMS_OUTPUT.Put_Line('Factorial('||nuJ||')='||fnuFactorial(nuJ));\n  END LOOP;\nEND;\n\u00a0",
        "context": "",
        "question": "Definitions\n\n \u00a0 The factorial of \u00a0 0 \u00a0 (zero) \u00a0 is defined as being \u00a0 1 \u00a0 (unity).\n \u00a0 The \u00a0 Factorial Function \u00a0 of a positive integer, \u00a0  n,  \u00a0 is defined as the product of the sequence:\n                 n, \u00a0 n-1, \u00a0 n-2, \u00a0 ... \u00a0 1 \n\n\n\nTask\n\nWrite a function to return the factorial of a number.\n\nSolutions can be iterative or recursive.\n\nSupport for trapping negative \u00a0  n  \u00a0 errors is optional.\n\n\n\nRelated task\n\n \u00a0 Primorial numbers\n\n"
    },
    {
        "answer": "BEGIN\n    NULL;\nEND;",
        "context": "",
        "question": "Task\n\nCreate the simplest possible program that is still considered \"correct.\"\n\n\n\n"
    },
    {
        "answer": "EXECUTE BLOCK\nAS\nBEGIN\nEND",
        "context": "",
        "question": "Task\n\nCreate the simplest possible program that is still considered \"correct.\"\n\n\n\n"
    },
    {
        "answer": "CREATE OR REPLACE PACKAGE ethiopian IS\n\u00a0\n  FUNCTION multiply\n    ( left    IN  INTEGER,\n      right   IN  INTEGER)\n  RETURN INTEGER;\n\u00a0\nEND ethiopian;\n/\n\u00a0\nCREATE OR REPLACE PACKAGE BODY ethiopian IS\n\u00a0\n  FUNCTION is_even(item  IN INTEGER) RETURN BOOLEAN IS\n  BEGIN\n    RETURN item MOD 2 = 0;\n  END is_even;\n\u00a0\n  FUNCTION double(item  IN INTEGER) RETURN INTEGER IS\n  BEGIN\n    RETURN item * 2;\n  END double;\n\u00a0\n  FUNCTION half(item  IN INTEGER) RETURN INTEGER IS\n  BEGIN\n    RETURN TRUNC(item / 2);\n  END half;\n\u00a0\n  FUNCTION multiply\n    ( left   IN INTEGER,\n      right  IN INTEGER)\n    RETURN INTEGER\n  IS\n    temp     INTEGER := 0;\n    plier    INTEGER := left;\n    plicand  INTEGER := right;\n  BEGIN\n\u00a0\n    LOOP\n      IF NOT is_even(plier) THEN\n        temp := temp + plicand;\n      END IF;\n      EXIT WHEN plier <= 1;\n      plier := half(plier);\n      plicand := double(plicand);\n    END LOOP;\n\u00a0\n    RETURN temp;\n\u00a0\n  END multiply;\n\u00a0\nEND ethiopian;\n/\n\u00a0\n/* example call */\nBEGIN\n  DBMS_OUTPUT.put_line(ethiopian.multiply(17, 34));\nEND;\n/",
        "context": "",
        "question": "Ethiopian multiplication is a method of multiplying integers using only addition, doubling, and halving.\n\n\nMethod:\n\n Take two numbers to be multiplied and write them down at the top of two columns.\n In the left-hand column repeatedly halve the last number, discarding any remainders, and write the result below the last in the same column, until you write a value of 1.\n In the right-hand column repeatedly double the last number and write the result below. stop when you add a result in the same row as where the left hand column shows 1.\n Examine the table produced and discard any row where the value in the left column is even.\n Sum the values in the right-hand column that remain to produce the result of multiplying the original two numbers together\n\nFor example: \u00a0 17 \u00d7 34\n\n       17    34\n\nHalving the first column:\n\n       17    34\n        8\n        4\n        2\n        1\n\nDoubling the second column:\n\n       17    34\n        8    68\n        4   136 \n        2   272\n        1   544\n\nStrike-out rows whose first cell is even:\n\n       17    34\n        8    68 \n        4   136 \n        2   272 \n        1   544\n\nSum the remaining numbers in the right-hand column:\n\n       17    34\n        8    -- \n        4   --- \n        2   --- \n        1   544\n           ====\n            578\n\nSo 17 multiplied by 34, by the Ethiopian method is 578.\n\n\n\nTask\n\nThe task is to define three named functions/methods/procedures/subroutines:\n\n one to halve an integer,\n one to double an integer, and\n one to state if an integer is even.\n\n\nUse these functions to create a function that does Ethiopian multiplication.\n\n\n\nReferences\n\nEthiopian multiplication explained (BBC Video clip)\nA Night Of Numbers - Go Forth And Multiply (Video)\nRussian Peasant Multiplication\nProgramming Praxis: Russian Peasant Multiplication\n\n"
    },
    {
        "answer": "-- Setup a table with some integers\nCREATE TABLE ints(INT INTEGER);\nINSERT INTO ints VALUES (-1);\nINSERT INTO ints VALUES (0);\nINSERT INTO ints VALUES (1);\nINSERT INTO ints VALUES (2);\n\u00a0\n-- Are they even or odd?\nSELECT\n  INT,\n  CASE MOD(INT, 2) WHEN 0 THEN 'Even' ELSE 'Odd' END\nFROM\n  ints;",
        "context": "",
        "question": "Task\n\nTest whether an integer is even or odd.\n\nThere is more than one way to solve this task:\n\n Use the even and odd predicates, if the language provides them.\n Check the least significant digit. With binary integers, i bitwise-and 1 equals 0 iff i is even, or equals 1 iff i is odd.\n Divide i by 2. The remainder equals 0 iff i is even. The remainder equals +1 or -1 iff i is odd.\n Use modular congruences:\n i \u2261 0 (mod 2) iff i is even.\n i \u2261 1 (mod 2) iff i is odd.\n\n"
    },
    {
        "answer": "\u00a0\nSELECT 1 FROM sysibm.sysdummy1;\n\u00a0",
        "context": "",
        "question": "Task\n\nCreate the simplest possible program that is still considered \"correct.\"\n\n\n\n"
    },
    {
        "answer": "-- Create and populate tables\nCREATE TABLE colours (id INTEGER PRIMARY KEY, name VARCHAR(5));\nINSERT INTO colours (id, name) VALUES ( 1, 'red'  );\nINSERT INTO colours (id, name) VALUES ( 2, 'white');\nINSERT INTO colours (id, name) VALUES ( 3, 'blue' );\n\u00a0\nCREATE TABLE balls ( colour INTEGER REFERENCES colours );\nINSERT INTO balls ( colour ) VALUES ( 2 );\nINSERT INTO balls ( colour ) VALUES ( 2 );\nINSERT INTO balls ( colour ) VALUES ( 3 );\nINSERT INTO balls ( colour ) VALUES ( 2 );\nINSERT INTO balls ( colour ) VALUES ( 1 );\nINSERT INTO balls ( colour ) VALUES ( 3 );\nINSERT INTO balls ( colour ) VALUES ( 3 );\nINSERT INTO balls ( colour ) VALUES ( 2 );\n\u00a0\n-- Show the balls are unsorted\nSELECT\n\tcolours.name\nFROM\n\tballs\n\tJOIN colours ON balls.colour = colours.id;\n\u00a0\n-- Show the balls in dutch flag order\nSELECT\n\tcolours.name\nFROM\n\tballs\n\tJOIN colours ON balls.colour = colours.id\nORDER BY\n\tcolours.id;\n\u00a0\n-- Tidy up\nDROP TABLE balls;\nDROP TABLE colours;",
        "context": "",
        "question": "\nThe Dutch national flag is composed of three coloured bands in the order:\n\n \u00a0 red \u00a0 \u00a0 (top)\n \u00a0 then white, \u00a0 and\n \u00a0 lastly blue \u00a0 (at the bottom). \n\n\nThe problem posed by Edsger Dijkstra is:\n\nGiven a number of red, blue and white balls in random order, arrange them in the order of the colours in the Dutch national flag.\nWhen the problem was first posed, Dijkstra then went on to successively refine a solution, minimising the number of swaps and the number of times the colour of a ball needed to determined and restricting the balls to end in an array, ...\n\n\n\nTask\n Generate a randomized order of balls ensuring that they are not in the order of the Dutch national flag.\n Sort the balls in a way idiomatic to your language.\n Check the sorted balls are in the order of the Dutch national flag.\n\n\nC.f.\n\n Dutch national flag problem\n Probabilistic analysis of algorithms for the Dutch national flag problem by Wei-Mei Chen. (pdf)\n\n"
    },
    {
        "answer": "\u00a0\nCREATE TABLESPACE myTs;\n\u00a0\nCOMMENT ON TABLESPACE myTs IS 'Description of the tablespace.';\n\u00a0\nCREATE SCHEMA mySch;\n\u00a0\nCOMMENT ON SCHEMA mySch IS 'Description of the schema.';\n\u00a0\nCREATE TYPE myType AS (col1 INT) MODE DB2SQL;\n\u00a0\nCOMMENT ON TYPE mytype IS 'Description of the type.';\n\u00a0\nCREATE TABLE myTab (\n  myCol1 INT NOT NULL,\n  myCol2 INT\n);\n\u00a0\nCOMMENT ON TABLE myTab IS 'Description of the table.';\nCOMMENT ON myTab (\n  myCol1 IS 'Description of the column.',\n  myCol2 IS 'Description of the column.'\n);\n\u00a0\nALTER TABLE myTab ADD CONSTRAINT myConst PRIMARY KEY (myCol1);\n\u00a0\nCOMMENT ON CONSTRAINT myTab.myConst IS 'Description of the constraint.';\n\u00a0\nCREATE INDEX myInd ON\n  myTab (myCol2);\n\u00a0\nCOMMENT ON INDEX myInd IS 'Description of the index.';\n\u00a0\n-- V11.1\nCREATE USAGE LIST myUsList FOR TABLE myTab;\n\u00a0\nCOMMENT ON USAGE LISTmyUsList IS 'Description of the usage list.';\n\u00a0\n/**\n * Detailed description of the trigger.\n */\nCREATE TRIGGER myTrig\n  AFTER INSERT ON myTab\n  REFERENCING NEW AS N\n  FOR EACH ROW\n BEGIN\n END;\n\u00a0\nCOMMENT ON TRIGGER myTrig IS 'General description of the trigger.';\n\u00a0\nCREATE VARIABLE myVar INT;\n\u00a0\nCOMMENT ON VARIABLE myVar IS 'General description of the variable.';\n\u00a0\n/**\n * General description of the function (reads until the first dot).\n * Detailed description of the function, until the first empty line.\n *\n * IN VAR1\n *   Description of IN parameter in variable VAR1.\n * OUT VAR2\n *   Description of OUT parameter in variable VAR2.\n * INOUT VAR3\n *   Description of INOUT parameter in variable VAR3.\n * RETURNS Description of what it returns.\n */\nCREATE FUNCTION myfun (\n  IN VAR1 INT,\n  OUT VAR2 INT,\n  INOUT VAR3 INT)\n  RETURNS INT\n BEGIN\n END;\n\u00a0\n/**\n * General description of the procedure (reads until the first dot).\n * Detailed description of the procedure, until the first empty line.\n *\n * IN VAR1\n *   Description of IN parameter in variable VAR1.\n * OUT VAR2\n *   Description of OUT parameter in variable VAR2.\n * INOUT VAR3\n *   Description of INOUT parameter in variable VAR3.\n */\nCREATE PROCEDURE myProc (\n  IN VAR1 INT,\n  OUT VAR2 INT,\n  INOUT VAR3 INT)\n BEGIN\n END;\n\u00a0\nCREATE MODULE myMod;\n\u00a0\nCOMMENT ON MODULE myMod IS 'General description of the module.';\n\u00a0\n/**\n * General description of the procedure (reads until the first dot).\n * Detailed description of the procedure, until the first empty line.\n *\n * IN VAR1\n *   Description of IN parameter in variable VAR1.\n * OUT VAR2\n *   Description of OUT parameter in variable VAR2.\n * INOUT VAR3\n *   Description of INOUT parameter in variable VAR3.\n */\nALTER MODULE myMod\n  ADD PROCEDURE myProc (\n  IN VAR1 INT,\n  OUT VAR2 INT,\n  INOUT VAR3 INT)\n BEGIN\n END;\n\u00a0\nCREATE ROLE myRole;\n\u00a0\nCOMMENT ON ROLE myRole IS 'Description of the role.';\n\u00a0\nCREATE SEQUENCE mySeq;\n\u00a0\nCOMMENT ON ROLE mySeq IS 'Description of the sequence.';\n\u00a0",
        "context": "",
        "question": "\n\nSee also\n\n Related task: Comments\n Related task: Here_document\n\n"
    },
    {
        "answer": "\u00a0\n/*\nThis code is an implementation of \"Determination if a string has all the same characters\" in SQL ORACLE 19c \np_in_str -- input string\n*/\nWITH\n  FUNCTION same_characters_in_string(p_in_str IN varchar2) RETURN varchar2 IS\n    v_que varchar2(32767)\u00a0:= p_in_str;\n    v_res varchar2(32767);\n    v_first varchar2(1);\n    v_next  varchar2(1);\nBEGIN\n  v_first\u00a0:= substr(v_que,1,1);\n  IF v_first IS NULL THEN \n    v_res\u00a0:= '\"\" length:0 all characters are the same';\n  ELSE\n    FOR i IN 2..LENGTH(v_que)\n    loop\n      v_next\u00a0:= substr(v_que,i,1); \n      IF v_first\u00a0!= v_next THEN\n        v_res\u00a0:= '\"'||v_que||'\" length:'||LENGTH(v_que)||', first different character \"'||v_next||'\"(0x'||rawtohex(utl_raw.cast_to_raw(v_next))||') at position:'|| i;\n        exit;    \n      END IF;     \n   END loop;\n   v_res\u00a0:= nvl(v_res,'\"'||v_que||'\" length:'||LENGTH(v_que)||' all characters are the same');\n  END IF; \n  RETURN v_res;\nEND;\n\u00a0\n--Test\nSELECT same_characters_in_string('') AS res FROM dual\nUNION ALL \nSELECT same_characters_in_string('   ') AS res FROM dual\nUNION ALL \nSELECT same_characters_in_string('2') AS res FROM dual\nUNION ALL \nSELECT same_characters_in_string('333') AS res FROM dual\nUNION ALL\nSELECT same_characters_in_string('.55') AS res FROM dual\nUNION ALL\nSELECT same_characters_in_string('tttTTT') AS res FROM dual\nUNION ALL \nSELECT same_characters_in_string('4444 444k') AS res FROM dual\n;\n\u00a0",
        "context": "",
        "question": "Task\n\nGiven a character string \u00a0 (which may be empty, or have a length of zero characters):\n\n \u00a0 create a function/procedure/routine to:\n \u00a0 determine if all the characters in the string are the same\n \u00a0 indicate if or which character is different from the previous character\n \u00a0 display each string and its length \u00a0 (as the strings are being examined)\n \u00a0 a zero\u2500length (empty) string shall be considered as all the same character(s)\n \u00a0 process the strings from left\u2500to\u2500right\n \u00a0 if \u00a0 \u00a0 \u00a0 all the same character, \u00a0 display a message saying such\n \u00a0 if not all the same character, \u00a0 then:\n \u00a0 display a message saying such\n \u00a0 display what character is different\n \u00a0 only the 1st different character need be displayed\n \u00a0 display where the different character is in the string\n \u00a0 the above messages can be part of a single message\n \u00a0 display the hexadecimal value of the different character\n\n\nUse (at least) these seven test values \u00a0 (strings):\n\n \u00a0 a string of length \u00a0 0 \u00a0 (an empty string)\n \u00a0 a string of length \u00a0 3 \u00a0 which contains three blanks\n \u00a0 a string of length \u00a0 1 \u00a0 which contains: \u00a0 2\n \u00a0 a string of length \u00a0 3 \u00a0 which contains: \u00a0 333\n \u00a0 a string of length \u00a0 3 \u00a0 which contains: \u00a0 .55\n \u00a0 a string of length \u00a0 6 \u00a0 which contains: \u00a0 tttTTT\n \u00a0 a string of length \u00a0 9 \u00a0 with a blank in the middle: \u00a0 4444 \u00a0 444k\n\n\nShow all output here on this page.\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "FUNCTION divide(n1 IN NUMBER, n2 IN NUMBER)\nRETURN BOOLEAN\nIS\n  result NUMBER;\nBEGIN\n  result := n1/n2;\n  RETURN(FALSE);\nEXCEPTION\n  WHEN ZERO_DIVIDE THEN\n    RETURN(TRUE);\nEND divide;",
        "context": "",
        "question": "Task\n\nWrite a function to detect a \u00a0 divide by zero error \u00a0 without checking if the denominator is zero.\n\n\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON@\n\u00a0\nCREATE OR REPLACE FUNCTION DIVISION(\n  IN NUMERATOR DECIMAL(5, 3),\n  IN DENOMINATOR DECIMAL(5, 3)\n ) RETURNS SMALLINT\n BEGIN\n  DECLARE RET SMALLINT DEFAULT 1;\n  DECLARE TMP DECIMAL(5, 3);\n  DECLARE CONTINUE HANDLER FOR SQLSTATE '22012'\n    SET RET = 1;\n\u00a0\n  SET RET = 0;\n  SET TMP = NUMERATOR / DENOMINATOR;\n  RETURN RET;\n END @\n\u00a0\nVALUES DIVISION(10, 2)@\nVALUES DIVISION(10, 3)@\nVALUES DIVISION(10, 0)@\n\u00a0",
        "context": "",
        "question": "Task\n\nWrite a function to detect a \u00a0 divide by zero error \u00a0 without checking if the denominator is zero.\n\n\n\n"
    },
    {
        "answer": "FUNCTION IsNumeric( VALUE IN VARCHAR2 )\nRETURN BOOLEAN\nIS\n  help NUMBER;\nBEGIN\n  help := TO_NUMBER( VALUE );\n  RETURN( TRUE );\nEXCEPTION\n  WHEN OTHERS THEN\n    RETURN( FALSE );\nEND;",
        "context": "",
        "question": "Task\n\nCreate a boolean function which takes in a string and tells whether it is a numeric string (floating point and negative numbers included) in the syntax the language uses for numeric literals or numbers converted from strings.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "SELECT i, k, SUM(A.N*B.N) AS N\n        FROM A INNER JOIN B ON A.j=B.j\n        GROUP BY i, k",
        "context": "",
        "question": "Task\n\nCreate a function/use an in-built function, to compute the \u00a0 dot product, \u00a0 also known as the \u00a0 scalar product \u00a0 of two vectors.\n\nIf possible, make the vectors of arbitrary length.\n\n\n\nAs an example, compute the dot product of the vectors:\n\n \u00a0   [1, \u00a03, -5]   \u00a0 \u00a0 and \n \u00a0   [4, -2, -1]   \n\n\nIf implementing the dot product of two vectors directly:\n\n \u00a0 each vector must be the same length\n \u00a0 multiply corresponding terms from each vector\n \u00a0 sum the products \u00a0 (to produce the answer)\n\n\nRelated task\n\n \u00a0 Vector products\n\n"
    },
    {
        "answer": "DECLARE @s VARCHAR(10)\nSET @s = '1234.56'\n\u00a0\nprint isnumeric(@s) --prints 1 if numeric, 0 if not.\n\u00a0\nIF isnumeric(@s)=1 BEGIN print 'Numeric' END \nELSE print 'Non-numeric'",
        "context": "",
        "question": "Task\n\nCreate a boolean function which takes in a string and tells whether it is a numeric string (floating point and negative numbers included) in the syntax the language uses for numeric literals or numbers converted from strings.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nCREATE OR REPLACE FUNCTION IS_NUMERIC (\n  IN STRING VARCHAR(10)\n ) RETURNS SMALLINT\n -- ) RETURNS BOOLEAN\n BEGIN\n  DECLARE RET SMALLINT;\n  -- DECLARE RET BOOLEAN;\n  DECLARE TMP INTEGER;\n  DECLARE CONTINUE HANDLER FOR SQLSTATE '22018'\n    SET RET = 1;\n    -- SET RET = FALSE;\n\u00a0\n  SET RET = 0;\n  --SET RET = TRUE;\n  SET TMP = INTEGER(STRING);\n  RETURN RET;\n END @\n\u00a0\nVALUES IS_NUMERIC('5')@\nVALUES IS_NUMERIC('0')@\nVALUES IS_NUMERIC('-1')@\nVALUES IS_NUMERIC('A')@\nVALUES IS_NUMERIC('-')@\nVALUES IS_NUMERIC('z')@\nVALUES IS_NUMERIC('')@\nVALUES IS_NUMERIC(' ')@\n\u00a0",
        "context": "",
        "question": "Task\n\nCreate a boolean function which takes in a string and tells whether it is a numeric string (floating point and negative numbers included) in the syntax the language uses for numeric literals or numbers converted from strings.\n\n\n\n\nOther tasks related to string operations:\n\nMetrics\n Array length\n String length\n Copy a string\n Empty string \u00a0(assignment)\nCounting\n Word frequency\n Letter frequency\n Jewels and stones\n I before E except after C\n Bioinformatics/base count\n Count occurrences of a substring\n Count how many vowels and consonants occur in a string\nRemove/replace\n XXXX redacted\n Conjugate a Latin verb\n Remove vowels from a string\n String interpolation (included)\n Strip block comments\n Strip comments from a string\n Strip a set of characters from a string\n Strip whitespace from a string -- top and tail\n Strip control codes and extended characters from a string\nAnagrams/Derangements/shuffling\n Word wheel\n ABC problem\n Sattolo cycle\n Knuth shuffle\n Ordered words\n Superpermutation minimisation\n Textonyms (using a phone text pad)\n Anagrams\n Anagrams/Deranged anagrams\n Permutations/Derangements\nFind/Search/Determine\n ABC words\n Odd words\n Word ladder\n Semordnilap\n Word search\n Wordiff \u00a0(game)\n String matching\n Tea cup rim text\n Alternade words\n Changeable words\n State name puzzle\n String comparison\n Unique characters\n Unique characters in each string\n Extract file extension\n Levenshtein distance\n Palindrome detection\n Common list elements\n Longest common suffix\n Longest common prefix\n Compare a list of strings \n Longest common substring\n Find common directory path\n Words from neighbour ones\n Change e letters to i in words\n Non-continuous subsequences\n Longest common subsequence\n Longest palindromic substrings\n Longest increasing subsequence\n Words containing \"the\" substring\n Sum of the digits of n is substring of n\n Determine if a string is numeric\n Determine if a string is collapsible\n Determine if a string is squeezable\n Determine if a string has all unique characters\n Determine if a string has all the same characters\n Longest substrings without repeating characters\n Find words which contains all the vowels\n Find words which contains most consonants\n Find words which contains more than 3 vowels\n Find words which first and last three letters are equals\n Find words which odd letters are consonants and even letters are vowels or vice_versa\nFormatting\n Substring\n Rep-string\n Word wrap\n String case\n Align columns\n Literals/String\n Repeat a string\n Brace expansion\n Brace expansion using ranges\n Reverse a string\n Phrase reversals\n Comma quibbling\n Special characters\n String concatenation\n Substring/Top and tail\n Commatizing numbers\n Reverse words in a string\n Suffixation of decimal numbers\n Long literals, with continuations \n Numerical and alphabetical suffixes\n Abbreviations, easy\n Abbreviations, simple\n Abbreviations, automatic\nSong lyrics/poems/Mad Libs/phrases\n Mad Libs\n Magic 8-ball\n 99 Bottles of Beer\n The Name Game (a song)\n The Old lady swallowed a fly\n The Twelve Days of Christmas\nTokenize\n Text between\n Tokenize a string\n Word break problem\n Tokenize a string with escaping\n Split a character string based on change of character\nSequences\n Show ASCII table\n De Bruijn sequences\n Self-referential sequences\n Generate lower case ASCII alphabet\n\n\n\n"
    },
    {
        "answer": "\u00a0\n-- March 7 2009 7:30pm EST\n\u00a0\nSELECT \nTO_TIMESTAMP_TZ(\n'March 7 2009 7:30pm EST',\n'MONTH DD YYYY HH:MIAM TZR'\n)\nat TIME zone 'US/Eastern' orig_dt_time\nFROM dual;\n\u00a0\n-- 12 hours later DST change\n\u00a0\nSELECT \n(TO_TIMESTAMP_TZ(\n'March 7 2009 7:30pm EST',\n'MONTH DD YYYY HH:MIAM TZR'\n)+\nINTERVAL '12' HOUR)\nat TIME zone 'US/Eastern' plus_12_dst\nFROM dual;\n\u00a0\n-- 12 hours later no DST change\n-- Arizona time, always MST\n\u00a0\nSELECT \n(TO_TIMESTAMP_TZ(\n'March 7 2009 7:30pm EST',\n'MONTH DD YYYY HH:MIAM TZR'\n)+\nINTERVAL '12' HOUR)\nat TIME zone 'US/Arizona' plus_12_nodst\nFROM dual;\n\u00a0",
        "context": "",
        "question": "Task\n\nGiven the date string \"March 7 2009 7:30pm EST\", \n\noutput the time 12 hours later in any human-readable format.\n\nAs extra credit, display the resulting time in a time zone different from your own.\n\n\n\n"
    },
    {
        "answer": "SELECT EXTRACT(YEAR FROM dt) AS year_with_xmas_on_sunday\nFROM   ( \n         SELECT  add_months(DATE '2008-12-25', 12 * (level - 1)) AS dt\n         FROM    dual\n         CONNECT BY level <= 2121 - 2008 + 1\n       ) \nWHERE  to_char(dt, 'Dy', 'nls_date_language=English') = 'Sun'\nORDER  BY 1\n;",
        "context": "",
        "question": "A company decides that whenever Xmas falls on a Sunday they will give their workers all extra paid holidays so that, together with any public holidays, workers will not have to work the following week (between the 25th of December and the first of January).\n\n\n\nTask\n\nIn what years between 2008 and 2121 will the 25th of December be a Sunday?\n\nUsing any standard date handling libraries of your programming language;\ncompare the dates calculated with the output of other languages to discover any anomalies in the handling of dates which may be due to, for example, overflow in types used to represent dates/times similar to \u00a0 y2k \u00a0 type problems.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nSELECT to_char(sysdate,'YYYY-MM-DD') date_fmt_1 FROM dual;\n\u00a0\nSELECT to_char(sysdate,'fmDay, Month DD, YYYY') date_fmt_2 FROM dual;\n\u00a0",
        "context": "",
        "question": "This task has been clarified. Its programming examples are in need of review to ensure that they still fit the requirements of the task.\n\n\nTask\n\nDisplay the \u00a0 current date \u00a0 in the formats of:\n\n \u00a0 2007-11-23 \u00a0 \u00a0 and \n \u00a0 Friday, November 23, 2007\n\n"
    },
    {
        "answer": "\u00a0\nBEGIN\n  DECLARE UTL_FILE_HANDLER UTL_FILE.FILE_TYPE;\n  DECLARE DIR_ALIAS_CURRENT VARCHAR(128);\n  DECLARE DIR_ALIAS_ROOT VARCHAR(128);\n  DECLARE DIRECTORY VARCHAR(1024);\n  DECLARE FILENAME VARCHAR(255);\n\u00a0\n  SET DIR_ALIAS_CURRENT = 'outputFileCurrent';\n  SET DIRECTORY = '/home/db2inst1/doc';\n  SET FILENAME = 'output.txt';\n\u00a0\n  CALL UTL_DIR.CREATE_OR_REPLACE_DIRECTORY(DIR_ALIAS_CURRENT, DIRECTORY);\n  SET UTL_FILE_HANDLER = UTL_FILE.FOPEN(DIR_ALIAS_CURRENT, FILENAME, 'a');\n  CALL UTL_FILE.FFLUSH(UTL_FILE_HANDLER);\n  CALL UTL_FILE.FCLOSE(UTL_FILE_HANDLER);\n\u00a0\n  SET DIR_ALIAS_ROOT = 'outputFileRoot';\n  SET DIRECTORY = '/doc';\n\u00a0\n  CALL UTL_DIR.CREATE_OR_REPLACE_DIRECTORY(DIR_ALIAS_ROOT, DIRECTORY);\n  SET UTL_FILE_HANDLER = UTL_FILE.FOPEN(DIR_ALIAS_ROOT, FILENAME, 'a');\n  CALL UTL_FILE.FFLUSH(UTL_FILE_HANDLER);\n  CALL UTL_FILE.FCLOSE(UTL_FILE_HANDLER);\nEND @\n\u00a0",
        "context": "",
        "question": "In this task, the job is to create a new empty file called \"output.txt\" of size 0 bytes\nand an empty directory called \"docs\". This should be done twice: once \"here\", i.e. in the current working directory and once in the filesystem root.\n"
    },
    {
        "answer": "-- the minimal table\nCREATE TABLE IF NOT EXISTS teststd (n DOUBLE PRECISION NOT NULL);\n\u00a0\n-- code modularity with view, we could have used a common table expression instead\nCREATE VIEW  vteststd AS\n  SELECT COUNT(n) AS cnt,\n  SUM(n) AS tsum,\n  SUM(POWER(n,2)) AS tsqr\nFROM teststd;\n\u00a0\n-- you can of course put this code into every query\nCREATE OR REPLACE FUNCTION std_dev() RETURNS DOUBLE PRECISION AS $$\n SELECT SQRT(tsqr/cnt - (tsum/cnt)^2) FROM vteststd;\n$$ LANGUAGE SQL;\n\u00a0\n-- test data is: 2,4,4,4,5,5,7,9\nINSERT INTO teststd VALUES (2);\nSELECT std_dev() AS std_deviation;\nINSERT INTO teststd VALUES (4);\nSELECT std_dev() AS std_deviation;\nINSERT INTO teststd VALUES (4);\nSELECT std_dev() AS std_deviation;\nINSERT INTO teststd VALUES (4);\nSELECT std_dev() AS std_deviation;\nINSERT INTO teststd VALUES (5);\nSELECT std_dev() AS std_deviation;\nINSERT INTO teststd VALUES (5);\nSELECT std_dev() AS std_deviation;\nINSERT INTO teststd VALUES (7);\nSELECT std_dev() AS std_deviation;\nINSERT INTO teststd VALUES (9);\nSELECT std_dev() AS std_deviation;\n-- cleanup test data\nDELETE FROM teststd;\n\u00a0",
        "context": "",
        "question": "Task[edit]\nWrite a stateful function, class, generator or co-routine that takes a series of floating point numbers, one at a time, and returns the running standard deviation of the series.\n\nThe task implementation should use the most natural programming style of those listed for the function in the implementation language; the task must state which is being used.\n\nDo not apply Bessel's correction; the returned standard deviation should always be computed as if the sample seen so far is the entire population.\n\n\n\nTest case\n\nUse this to compute the standard deviation of this demonstration set, \n\n\n\n{\n2\n,\n4\n,\n4\n,\n4\n,\n5\n,\n5\n,\n7\n,\n9\n}\n\n\n{\\displaystyle \\{2,4,4,4,5,5,7,9\\}}\n\n, which is \n\n\n\n2\n\n\n{\\displaystyle 2}\n\n.\n\n\n\nRelated tasks\n\n Random numbers\n\n\nTasks for calculating statistical measures\n\n\n\nin one go\nmoving (sliding window)\nmoving (cumulative)\n\nMean\nArithmetic\n\nStatistics/Basic\nAverages/Arithmetic mean\nAverages/Pythagorean means\n\n\nAverages/Simple moving average\n\n\n\n\nGeometric\n\nAverages/Pythagorean means\n\n\n\n\nHarmonic\n\nAverages/Pythagorean means\n\n\n\n\nQuadratic\n\nAverages/Root mean square\n\n\n\n\nCircular\n\nAverages/Mean angle\nAverages/Mean time of day\n\n\n\n\nMedian\n\nAverages/Median\n\n\n\n\nMode\n\nAverages/Mode\n\n\n\n\nStandard deviation\n\nStatistics/Basic\n\n\n\nCumulative standard deviation\n\n\n\n"
    },
    {
        "answer": "\u00a0\n/*\n*Use '/' for *nix. Use whatever your root directory is on Windows. \n*Must be run as admin.\n*/\n.shell mkdir \"docs\";\n.shell mkdir \"/docs\";\n.output output.txt\n.output /output.txt\n\u00a0",
        "context": "",
        "question": "In this task, the job is to create a new empty file called \"output.txt\" of size 0 bytes\nand an empty directory called \"docs\". This should be done twice: once \"here\", i.e. in the current working directory and once in the filesystem root.\n"
    },
    {
        "answer": "\u00a0\n-- save these lines in a file called\n-- setupworld.sql\n\u00a0\n-- turn off feedback for cleaner display\n\u00a0\nSET feedback off\n\u00a0\n-- 3 x 3 world\n\u00a0\n-- alive has coordinates of living cells\n\u00a0\nDROP TABLE alive;\n\u00a0\nCREATE TABLE alive (x NUMBER,y NUMBER);\n\u00a0\n-- three alive up the middle\n--  * \n--  * \n--  *\n\u00a0\nINSERT INTO alive VALUES (2,1);\nINSERT INTO alive VALUES (2,2);\nINSERT INTO alive VALUES (2,3);\n\u00a0\ncommit;\n\u00a0\n-- save these lines in a file called\nnewgeneration.SQL\n\u00a0\n-- adjact contains one row for each pair of \n-- coordinates that is adjacent to a living cell\n\u00a0\nDROP TABLE adjacent;\n\u00a0\nCREATE TABLE adjacent (x NUMBER,y NUMBER);\n\u00a0\n-- add row for each of the 8 adjacent squares\n\u00a0\nINSERT INTO adjacent SELECT x-1,y-1 FROM alive; \nINSERT INTO adjacent SELECT x-1,y FROM alive;\nINSERT INTO adjacent SELECT x-1,y+1 FROM alive;\nINSERT INTO adjacent SELECT x,y-1 FROM alive; \nINSERT INTO adjacent SELECT x,y+1 FROM alive;\nINSERT INTO adjacent SELECT x+1,y-1 FROM alive; \nINSERT INTO adjacent SELECT x+1,y FROM alive;\nINSERT INTO adjacent SELECT x+1,y+1 FROM alive;\n\u00a0\ncommit;\n\u00a0\n-- delete rows for squares that are outside the world\n\u00a0\nDELETE FROM adjacent WHERE x<1 OR y<1 OR x>3 OR y>3;\n\u00a0\ncommit;\n\u00a0\n-- table counts is the number of live cells\n-- adjacent to that point\n\u00a0\nDROP TABLE counts;\n\u00a0\nCREATE TABLE counts AS \nSELECT x,y,COUNT(*) n\nFROM adjacent a\nGROUP BY x,y;\n\u00a0\n--    C   N                 new C\n--    1   0,1             ->  0  # Lonely\n--    1   4,5,6,7,8       ->  0  # Overcrowded\n--    1   2,3             ->  1  # Lives\n--    0   3               ->  1  # It takes three to give birth!\n--    0   0,1,2,4,5,6,7,8 ->  0  # Barren\n\u00a0\n-- delete the ones who die\n\u00a0\nDELETE FROM alive a\nWHERE\n((a.x,a.y) NOT IN (SELECT x,y FROM counts)) OR\n((SELECT c.n FROM counts c WHERE a.x=c.x AND a.y=c.y) IN \n(1,4,5,6,7,8));\n\u00a0\n-- insert the ones that are born\n\u00a0\nINSERT INTO alive a\nSELECT x,y FROM counts c\nWHERE c.n=3 AND\n((c.x,c.y) NOT IN (SELECT x,y FROM alive));\n\u00a0\ncommit;\n\u00a0\n-- create output table\n\u00a0\nDROP TABLE output;\n\u00a0\nCREATE TABLE output AS\nSELECT rownum y,' ' x1,' ' x2,' ' x3\nFROM dba_tables WHERE rownum < 4;\n\u00a0\nUPDATE output SET x1='*'\nWHERE (1,y) IN\n(SELECT x,y FROM alive);\n\u00a0\nUPDATE output SET x2='*'\nWHERE (2,y) IN\n(SELECT x,y FROM alive);\n\u00a0\nUPDATE output SET x3='*'\nWHERE (3,y) IN\n(SELECT x,y FROM alive);\n\u00a0\ncommit\n\u00a0\n-- output configuration\n\u00a0\nSELECT x1||x2||x3 WLD\nFROM output\nORDER BY y DESC;\n\u00a0",
        "context": "",
        "question": "The Game of Life is a \u00a0 cellular automaton \u00a0 devised by the British mathematician \u00a0 John Horton Conway \u00a0 in 1970. \u00a0 It is the best-known example of a cellular automaton.\n\nConway's game of life is described \u00a0 here:\n\nA cell \u00a0 C \u00a0 is represented by a \u00a0 1 \u00a0 when alive, \u00a0 or \u00a0 0 \u00a0 when dead, \u00a0 in an \u00a0 m-by-m \u00a0 (or m\u00d7m) \u00a0 square array of cells.\n\nWe calculate \u00a0 N \u00a0 - the sum of live cells in C's \u00a0 eight-location neighbourhood, \u00a0 then cell \u00a0 C \u00a0 is alive or dead in the next generation based on the following table:\n\n   C   N                 new C\n   1   0,1             ->  0  # Lonely\n   1   4,5,6,7,8       ->  0  # Overcrowded\n   1   2,3             ->  1  # Lives\n   0   3               ->  1  # It takes three to give birth!\n   0   0,1,2,4,5,6,7,8 ->  0  # Barren\n\nAssume cells beyond the boundary are always dead.\n\nThe \"game\" is actually a zero-player game, meaning that its evolution is determined by its initial state, needing no input from human players. \u00a0 One interacts with the Game of Life by creating an initial configuration and observing how it evolves.\n\n\n\nTask\n\nAlthough you should test your implementation on more complex examples such as the \u00a0 glider \u00a0 in a larger universe, \u00a0 show the action of the blinker \u00a0 (three adjoining cells in a row all alive), \u00a0 over three generations, in a 3 by 3 grid.\n\n\n\nReferences\n\n \u00a0 Its creator John Conway, explains \u00a0 the game of life. \u00a0 Video from numberphile on youtube.\n \u00a0 John Conway \u00a0 Inventing Game of Life \u00a0 - Numberphile video.\n\n\nRelated task\n\n \u00a0 Langton's ant \u00a0 - another well known cellular automaton.\n\n"
    },
    {
        "answer": "--this is a single line comment",
        "context": "",
        "question": "Task\n\nShow all ways to include text in a language source file\nthat's completely ignored by the compiler or interpreter.\n\n\n\nRelated tasks\n\n \u00a0 Documentation\n \u00a0 Here_document\n\n\nSee also\n\n \u00a0 Wikipedia\n \u00a0 xkcd (Humor: hand gesture denoting // for \"commenting out\" people.)\n\n"
    },
    {
        "answer": "SELECT * FROM mytable -- Selects all columns and rows",
        "context": "",
        "question": "Task\n\nShow all ways to include text in a language source file\nthat's completely ignored by the compiler or interpreter.\n\n\n\nRelated tasks\n\n \u00a0 Documentation\n \u00a0 Here_document\n\n\nSee also\n\n \u00a0 Wikipedia\n \u00a0 xkcd (Humor: hand gesture denoting // for \"commenting out\" people.)\n\n"
    },
    {
        "answer": "\u00a0\n--This is a single line comment.\n\u00a0",
        "context": "",
        "question": "Task\n\nShow all ways to include text in a language source file\nthat's completely ignored by the compiler or interpreter.\n\n\n\nRelated tasks\n\n \u00a0 Documentation\n \u00a0 Here_document\n\n\nSee also\n\n \u00a0 Wikipedia\n \u00a0 xkcd (Humor: hand gesture denoting // for \"commenting out\" people.)\n\n"
    },
    {
        "answer": "CASE WHEN a THEN b ELSE c END\n\u00a0\nDECLARE @n INT\nSET @n=124\nprint CASE WHEN @n=123 THEN 'equal' ELSE 'not equal' END\n\u00a0\n--If/ElseIf expression\nSET @n=5\nprint CASE WHEN @n=3 THEN 'Three' WHEN @n=4 THEN 'Four' ELSE 'Other' END",
        "context": "",
        "question": "Control Structures\nThese are examples of control structures. You may also be interested in:\n\n Conditional structures\n Exceptions\n Flow-control structures\n Loops\n\nTask\n\nList the conditional structures offered by a programming language. See Wikipedia: conditionals for descriptions.\n\nCommon conditional structures include if-then-else and switch.\n\nLess common are arithmetic if, ternary operator and Hash-based conditionals.\n\nArithmetic if allows tight control over computed gotos, which optimizers have a hard time to figure out.\n\n\n"
    },
    {
        "answer": "CREATE TEMPORARY TABLE inputs(remainder INT, modulus INT);\n\u00a0\nINSERT INTO inputs VALUES (2, 3), (3, 5), (2, 7);\n\u00a0\nWITH recursive\n\u00a0\n-- Multiply out the product of moduli\nmultiplication(idx, product) AS (\n    SELECT 1, 1\n\u00a0\n    UNION ALL\n\u00a0\n    SELECT\n        multiplication.idx+1,\n        multiplication.product * inputs.modulus\n    FROM\n        multiplication,\n        inputs\n    WHERE\n        inputs.rowid = multiplication.idx\n),\n\u00a0\n-- Take the final value from the product table\nproduct(final_value) AS (\n    SELECT MAX(product) FROM multiplication\n),\n\u00a0\n-- Calculate the multiplicative inverse from each equation\nmultiplicative_inverse(id, a, b, x, y) AS (\n    SELECT\n        inputs.modulus,\n        product.final_value / inputs.modulus,\n        inputs.modulus,\n        0,\n        1\n    FROM\n        inputs,\n        product\n\u00a0\n    UNION ALL\n\u00a0\n    SELECT\n        id,\n        b, a%b,\n        y - (a/b)*x, x\n    FROM\n        multiplicative_inverse\n    WHERE\n        a>0\n)\n-- Combine residues into final answer\nSELECT\n    SUM(\n        (y\u00a0% inputs.modulus) * inputs.remainder * (product.final_value / inputs.modulus)\n    )\u00a0% product.final_value\n  FROM\n    multiplicative_inverse, product, inputs\n  WHERE\n    a=1 AND multiplicative_inverse.id = inputs.modulus;\n\u00a0",
        "context": "",
        "question": "Suppose \u00a0 \n\n\n\n\nn\n\n1\n\n\n\n\n{\\displaystyle n_{1}}\n\n, \u00a0 \n\n\n\n\nn\n\n2\n\n\n\n\n{\\displaystyle n_{2}}\n\n, \u00a0 \n\n\n\n\u2026\n\n\n{\\displaystyle \\ldots }\n\n, \u00a0 \n\n\n\n\nn\n\nk\n\n\n\n\n{\\displaystyle n_{k}}\n\n \u00a0 are positive integers that are pairwise co-prime. \u00a0\n\nThen, for any given sequence of integers \u00a0 \n\n\n\n\na\n\n1\n\n\n\n\n{\\displaystyle a_{1}}\n\n, \u00a0 \n\n\n\n\na\n\n2\n\n\n\n\n{\\displaystyle a_{2}}\n\n, \u00a0 \n\n\n\n\u2026\n\n\n{\\displaystyle \\dots }\n\n, \u00a0 \n\n\n\n\na\n\nk\n\n\n\n\n{\\displaystyle a_{k}}\n\n, \u00a0 there exists an integer \u00a0 \n\n\n\nx\n\n\n{\\displaystyle x}\n\n \u00a0 solving the following system of simultaneous congruences:\n\n \n\n\n\n\n\n\n\nx\n\n\n\n\u2261\n\na\n\n1\n\n\n\n\n(\nmod\n\n\nn\n\n1\n\n\n)\n\n\n\n\n\nx\n\n\n\n\u2261\n\na\n\n2\n\n\n\n\n(\nmod\n\n\nn\n\n2\n\n\n)\n\n\n\n\n\n\n\n\n\u00a0\n\u00a0\n\u22ee\n\n\n\n\nx\n\n\n\n\u2261\n\na\n\nk\n\n\n\n\n(\nmod\n\n\nn\n\nk\n\n\n)\n\n\n\n\n\n\n\n{\\displaystyle {\\begin{aligned}x&\\equiv a_{1}{\\pmod {n_{1}}}\\\\x&\\equiv a_{2}{\\pmod {n_{2}}}\\\\&{}\\ \\ \\vdots \\\\x&\\equiv a_{k}{\\pmod {n_{k}}}\\end{aligned}}}\n\n\nFurthermore, all solutions \u00a0 \n\n\n\nx\n\n\n{\\displaystyle x}\n\n \u00a0 of this system are congruent modulo the product, \u00a0 \n\n\n\nN\n=\n\nn\n\n1\n\n\n\nn\n\n2\n\n\n\u2026\n\nn\n\nk\n\n\n\n\n{\\displaystyle N=n_{1}n_{2}\\ldots n_{k}}\n\n.\n\n\n\nTask\n\nWrite a program to solve a system of linear congruences by applying the \u00a0 Chinese Remainder Theorem.\n\nIf the system of equations cannot be solved, your program must somehow indicate this.\n\n(It may throw an exception or return a special false value.)\n\nSince there are infinitely many solutions, the program should return the unique solution \u00a0 \n\n\n\ns\n\n\n{\\displaystyle s}\n\n \u00a0 where \u00a0 \n\n\n\n0\n\u2264\ns\n\u2264\n\nn\n\n1\n\n\n\nn\n\n2\n\n\n\u2026\n\nn\n\nk\n\n\n\n\n{\\displaystyle 0\\leq s\\leq n_{1}n_{2}\\ldots n_{k}}\n\n.\n\n\nShow the functionality of this program by printing the result such that the \u00a0 \n\n\n\nn\n\n\n{\\displaystyle n}\n\n's \u00a0 are \u00a0 \n\n\n\n[\n3\n,\n5\n,\n7\n]\n\n\n{\\displaystyle [3,5,7]}\n\n \u00a0 and the \u00a0 \n\n\n\na\n\n\n{\\displaystyle a}\n\n's \u00a0 are \u00a0 \n\n\n\n[\n2\n,\n3\n,\n2\n]\n\n\n{\\displaystyle [2,3,2]}\n\n.\n\n\nAlgorithm: \u00a0 The following algorithm only applies if the \u00a0 \n\n\n\n\nn\n\ni\n\n\n\n\n{\\displaystyle n_{i}}\n\n's \u00a0 are pairwise co-prime.\n\nSuppose, as above, that a solution is required for the system of congruences:\n\n \n\n\n\nx\n\u2261\n\na\n\ni\n\n\n\n\n(\nmod\n\n\nn\n\ni\n\n\n)\n\n\n\nf\no\nr\n\n\ni\n=\n1\n,\n\u2026\n,\nk\n\n\n{\\displaystyle x\\equiv a_{i}{\\pmod {n_{i}}}\\quad \\mathrm {for} \\;i=1,\\ldots ,k}\n\n\nAgain, to begin, the product \u00a0 \n\n\n\nN\n=\n\nn\n\n1\n\n\n\nn\n\n2\n\n\n\u2026\n\nn\n\nk\n\n\n\n\n{\\displaystyle N=n_{1}n_{2}\\ldots n_{k}}\n\n \u00a0 is defined.\n\nThen a solution \u00a0 \n\n\n\nx\n\n\n{\\displaystyle x}\n\n \u00a0 can be found as follows:\n\nFor each \u00a0 \n\n\n\ni\n\n\n{\\displaystyle i}\n\n, \u00a0 the integers \u00a0 \n\n\n\n\nn\n\ni\n\n\n\n\n{\\displaystyle n_{i}}\n\n \u00a0 and \u00a0 \n\n\n\nN\n\n/\n\n\nn\n\ni\n\n\n\n\n{\\displaystyle N/n_{i}}\n\n \u00a0 are co-prime.\n\nUsing the \u00a0 Extended Euclidean algorithm, \u00a0 we can find integers \u00a0 \n\n\n\n\nr\n\ni\n\n\n\n\n{\\displaystyle r_{i}}\n\n \u00a0 and \u00a0 \n\n\n\n\ns\n\ni\n\n\n\n\n{\\displaystyle s_{i}}\n\n \u00a0 such that \u00a0 \n\n\n\n\nr\n\ni\n\n\n\nn\n\ni\n\n\n+\n\ns\n\ni\n\n\nN\n\n/\n\n\nn\n\ni\n\n\n=\n1\n\n\n{\\displaystyle r_{i}n_{i}+s_{i}N/n_{i}=1}\n\n.\n\nThen, one solution to the system of simultaneous congruences is:\n\n \n\n\n\nx\n=\n\n\u2211\n\ni\n=\n1\n\n\nk\n\n\n\na\n\ni\n\n\n\ns\n\ni\n\n\nN\n\n/\n\n\nn\n\ni\n\n\n\n\n{\\displaystyle x=\\sum _{i=1}^{k}a_{i}s_{i}N/n_{i}}\n\n\nand the minimal solution,\n\n \n\n\n\nx\n\n\n(\nmod\n\nN\n)\n\n\n\n{\\displaystyle x{\\pmod {N}}}\n\n.\n\n"
    },
    {
        "answer": "CREATE OR REPLACE TYPE myClass AS OBJECT (\n    -- A class needs at least one member even though we don't use it\n    dummy NUMBER,\n    STATIC FUNCTION static_method RETURN VARCHAR2,\n    MEMBER FUNCTION instance_method RETURN VARCHAR2\n);\n/\nCREATE OR REPLACE TYPE BODY myClass AS\n    STATIC FUNCTION static_method RETURN VARCHAR2 IS\n    BEGIN\n        RETURN 'Called myClass.static_method';\n    END static_method;\n\u00a0\n    MEMBER FUNCTION instance_method RETURN VARCHAR2 IS\n    BEGIN\n        RETURN 'Called myClass.instance_method';\n    END instance_method;\nEND;\n/\n\u00a0\nDECLARE\n    myInstance myClass;\nBEGIN\n    myInstance := myClass(NULL);\n    DBMS_OUTPUT.put_line( myClass.static_method() );\n    DBMS_OUTPUT.put_line( myInstance.instance_method() );\nEND;/",
        "context": "",
        "question": "In object-oriented programming a method is a function associated with a particular class or object. In most forms of object oriented implementations methods can be static, associated with the class itself; or instance, associated with an instance of a class.\n\nShow how to call a static or class method, and an instance method of a class.\n"
    },
    {
        "answer": "-- set up list 1\nCREATE TABLE L1 (VALUE INTEGER);\nINSERT INTO L1 VALUES (1);\nINSERT INTO L1 VALUES (2);\n-- set up list 2\nCREATE TABLE L2 (VALUE INTEGER);\nINSERT INTO L2 VALUES (3);\nINSERT INTO L2 VALUES (4);\n-- get the product\nSELECT * FROM L1, L2;",
        "context": "",
        "question": "Task\n\nShow one or more idiomatic ways of generating the Cartesian product of two arbitrary lists in your language.\n\nDemonstrate that your function/method correctly returns:\n\n{1, 2} \u00d7 {3, 4} = {(1, 3), (1, 4), (2, 3), (2, 4)}\nand, in contrast:\n\n{3, 4} \u00d7 {1, 2} = {(3, 1), (3, 2), (4, 1), (4, 2)}\nAlso demonstrate, using your function/method, that the product of an empty list with any other list is empty.\n\n {1, 2} \u00d7 {} = {}\n {} \u00d7 {1, 2} = {}\nFor extra credit, show or write a function returning the n-ary product of an arbitrary number of lists, each of arbitrary length. Your function might, for example, accept a single argument which is itself a list of lists, and return the n-ary product of those lists.\n\nUse your n-ary Cartesian product function to show the following products:\n\n {1776, 1789} \u00d7 {7, 12} \u00d7 {4, 14, 23} \u00d7 {0, 1}\n {1, 2, 3} \u00d7 {30} \u00d7 {500, 100}\n {1, 2, 3} \u00d7 {} \u00d7 {500, 100}\n\n"
    },
    {
        "answer": "\u00a0\nWITH recursive \nconstant(val) AS\n(\nSELECT 1000.\n)\n,\nfib(a,b) AS\n(\nSELECT CAST(0 AS NUMERIC), CAST(1 AS NUMERIC)\nUNION ALL\nSELECT b,a+b\nFROM fib\n)\n,\nbenford(first_digit, probability_real, probability_theoretical) AS\n(\nSELECT *, \n\tCAST(log(1. + 1./CAST(first_digit AS INT)) AS NUMERIC(5,4)) probability_theoretical\nFROM (\n\tSELECT  first_digit, CAST(COUNT(1)/(SELECT val FROM constant) AS NUMERIC(5,4)) probability_real FROM\n\t(\n\t\tSELECT SUBSTRING(CAST(a AS VARCHAR(100)),1,1) first_digit\n\t\tFROM fib\n\t\tWHERE SUBSTRING(CAST(a AS VARCHAR(100)),1,1) <> '0'\n\t\tLIMIT (SELECT val FROM constant)\n\t) t\n\tGROUP BY first_digit\n) f\nORDER BY first_digit ASC\n)\nSELECT *\nFROM benford CROSS JOIN\n     (SELECT CAST(corr(probability_theoretical,probability_real) AS NUMERIC(5,4)) correlation\n      FROM benford) c\n\u00a0",
        "context": "",
        "question": "\n\n This page uses content from Wikipedia. The original article was at Benford's_law. The list of authors can be seen in the page history. As with Rosetta Code, the text of Wikipedia is available under the GNU FDL. (See links for details on variance)\n\n\nBenford's law, also called the first-digit law, refers to the frequency distribution of digits in many (but not all) real-life sources of data.\n\nIn this distribution, the number 1 occurs as the first digit about 30% of the time, while larger numbers occur in that position less frequently: 9 as the first digit less than 5% of the time. This distribution of first digits is the same as the widths of gridlines on a logarithmic scale.\n\nBenford's law also concerns the expected distribution for digits beyond the first, which approach a uniform distribution.\n\nThis result has been found to apply to a wide variety of data sets, including electricity bills, street addresses, stock prices, population numbers, death rates, lengths of rivers, physical and mathematical constants, and processes described by power laws (which are very common in nature). It tends to be most accurate when values are distributed across multiple orders of magnitude.\n\nA set of numbers is said to satisfy Benford's law if the leading digit \n\n\n\nd\n\n\n{\\displaystyle d}\n\n\u00a0\u00a0(\n\n\n\nd\n\u2208\n{\n1\n,\n\u2026\n,\n9\n}\n\n\n{\\displaystyle d\\in \\{1,\\ldots ,9\\}}\n\n) occurs with probability\n\n \n\n\n\nP\n(\nd\n)\n=\n\nlog\n\n10\n\n\n\u2061\n(\nd\n+\n1\n)\n\u2212\n\nlog\n\n10\n\n\n\u2061\n(\nd\n)\n=\n\nlog\n\n10\n\n\n\u2061\n\n(\n1\n+\n\n\n1\nd\n\n\n)\n\n\n\n{\\displaystyle P(d)=\\log _{10}(d+1)-\\log _{10}(d)=\\log _{10}\\left(1+{\\frac {1}{d}}\\right)}\n\n\nFor this task, write (a) routine(s) to calculate the distribution of first significant (non-zero) digits in a collection of numbers, then display the actual vs. expected distribution in the way most convenient for your language (table / graph / histogram / whatever).\n\nUse the first 1000 numbers from the Fibonacci sequence as your data set. No need to show how the Fibonacci numbers are obtained.\n\nYou can generate them or load them from a file; whichever is easiest.\n\nDisplay your actual vs expected distribution.\n\n\nFor extra credit: Show the distribution for one other set of numbers from a page on Wikipedia. State which Wikipedia page it can be obtained from and what the set enumerates. Again, no need to display the actual list of numbers or the code to load them.\n\n\n\nSee also:\n numberphile.com.\n A starting page on Wolfram Mathworld is Benfords Law .\n\n"
    },
    {
        "answer": "-- Create table\nCREATE TABLE benford (num INTEGER);\n\u00a0\n-- Seed table\nINSERT INTO benford (num) VALUES (1);\nINSERT INTO benford (num) VALUES (1);\nINSERT INTO benford (num) VALUES (2);\n\u00a0\n-- Populate table\nINSERT INTO benford (num)\n  SELECT\n    ult + penult\n  FROM\n    (SELECT MAX(num) AS ult FROM benford),\n    (SELECT MAX(num) AS penult FROM benford WHERE num NOT IN (SELECT MAX(num) FROM benford))\n\u00a0\n-- Repeat as many times as desired\n--    in Oracle SQL*Plus, press \"Slash, Enter\" a lot of times\n--    or wrap this in a loop, but that will require something db-specific...\n\u00a0\n-- Do sums\nSELECT\n  digit,\n  COUNT(digit) / numbers AS actual,\n  log(10, 1 + 1 / digit) AS expected\nFROM\n  (\n    SELECT\n      FLOOR(num/POWER(10,LENGTH(num)-1)) AS digit\n    FROM\n      benford\n  ),\n  (\n    SELECT\n      COUNT(*) AS numbers\n    FROM\n      benford\n  )\nGROUP BY digit, numbers\nORDER BY digit;\n\u00a0\n-- Tidy up\nDROP TABLE benford;",
        "context": "",
        "question": "\n\n This page uses content from Wikipedia. The original article was at Benford's_law. The list of authors can be seen in the page history. As with Rosetta Code, the text of Wikipedia is available under the GNU FDL. (See links for details on variance)\n\n\nBenford's law, also called the first-digit law, refers to the frequency distribution of digits in many (but not all) real-life sources of data.\n\nIn this distribution, the number 1 occurs as the first digit about 30% of the time, while larger numbers occur in that position less frequently: 9 as the first digit less than 5% of the time. This distribution of first digits is the same as the widths of gridlines on a logarithmic scale.\n\nBenford's law also concerns the expected distribution for digits beyond the first, which approach a uniform distribution.\n\nThis result has been found to apply to a wide variety of data sets, including electricity bills, street addresses, stock prices, population numbers, death rates, lengths of rivers, physical and mathematical constants, and processes described by power laws (which are very common in nature). It tends to be most accurate when values are distributed across multiple orders of magnitude.\n\nA set of numbers is said to satisfy Benford's law if the leading digit \n\n\n\nd\n\n\n{\\displaystyle d}\n\n\u00a0\u00a0(\n\n\n\nd\n\u2208\n{\n1\n,\n\u2026\n,\n9\n}\n\n\n{\\displaystyle d\\in \\{1,\\ldots ,9\\}}\n\n) occurs with probability\n\n \n\n\n\nP\n(\nd\n)\n=\n\nlog\n\n10\n\n\n\u2061\n(\nd\n+\n1\n)\n\u2212\n\nlog\n\n10\n\n\n\u2061\n(\nd\n)\n=\n\nlog\n\n10\n\n\n\u2061\n\n(\n1\n+\n\n\n1\nd\n\n\n)\n\n\n\n{\\displaystyle P(d)=\\log _{10}(d+1)-\\log _{10}(d)=\\log _{10}\\left(1+{\\frac {1}{d}}\\right)}\n\n\nFor this task, write (a) routine(s) to calculate the distribution of first significant (non-zero) digits in a collection of numbers, then display the actual vs. expected distribution in the way most convenient for your language (table / graph / histogram / whatever).\n\nUse the first 1000 numbers from the Fibonacci sequence as your data set. No need to show how the Fibonacci numbers are obtained.\n\nYou can generate them or load them from a file; whichever is easiest.\n\nDisplay your actual vs expected distribution.\n\n\nFor extra credit: Show the distribution for one other set of numbers from a page on Wikipedia. State which Wikipedia page it can be obtained from and what the set enumerates. Again, no need to display the actual list of numbers or the code to load them.\n\n\n\nSee also:\n numberphile.com.\n A starting page on Wolfram Mathworld is Benfords Law .\n\n"
    },
    {
        "answer": "\u00a0\n/*\nThis code is an implementation of Babbage Problem in SQL ORACLE 19c \np_ziel  -- the substring to search for, which can start with leading zeros\np_max   -- upper bound of the cycle\nv_max   -- safe determination of the upper bound of the cycle\nv_start -- safe starting point\n*/\nWITH\n  FUNCTION babbage(p_ziel IN varchar2, p_max INTEGER) RETURN varchar2 IS\n    v_max    INTEGER\u00a0:= greatest(p_max,to_number('1E+'||LENGTH(to_char(p_ziel))));\n    v_start  NUMBER\u00a0:= CASE WHEN substr(p_ziel,1,1)='0' THEN CEIL(SQRT('1'||p_ziel)) ELSE CEIL(SQRT(p_ziel)) END;\n    v_length NUMBER\u00a0:= to_number('1E+'||LENGTH(to_char(p_ziel)));   \n  BEGIN\n    -- first check\n    IF substr(p_ziel,-1) IN (2,3,7,8) THEN \n      RETURN 'The exact square of an integer cannot end with '''||substr(p_ziel,-1)||''', so there is no such smallest number whose square ends in '''||p_ziel||'''';\n    END IF; \n    -- second check\n    IF regexp_count(p_ziel,'([^0]0{1,}$)')=1 AND MOD(regexp_count(regexp_substr(p_ziel,'(0{1,}$)'),'0'),2)=1 THEN\n      RETURN 'An exact square of an integer cannot end with an odd number of zeros, so there is no such smallest number whose square ends in '''||p_ziel||'''';\n    END IF; \n    -- main cycle\n    while v_start < v_max loop\n      exit WHEN MOD(v_start**2,v_length) = p_ziel;   \n      v_start\u00a0:= v_start + 1; \n    END loop;\n    -- output \n    IF v_start = v_max THEN\n      RETURN 'There is no such smallest number before '||v_max||' whose square ends in '''||p_ziel||'''';\n    ELSE \n      RETURN ''||v_start||' is the smallest number, whose square '||regexp_replace(to_char(v_start**2),'(\\d{1,})('||p_ziel||')','\\1''\\2''')||' ends in '''||p_ziel||''''; \n    END IF; \n    --\n  END;\n\u00a0\n--Test\nSELECT babbage('222',100000) AS res FROM dual\nUNION ALL \nSELECT babbage('33',100000) AS res FROM dual\nUNION ALL \nSELECT babbage('17',100000) AS res FROM dual\nUNION ALL \nSELECT babbage('888',100000) AS res FROM dual\nUNION ALL \nSELECT babbage('1000',100000) AS res FROM dual\nUNION ALL \nSELECT babbage('000',100000) AS res FROM dual\nUNION ALL \nSELECT babbage('269696',100000) AS res FROM dual -- strict Babbage Problem\nUNION ALL \nSELECT babbage('269696',10) AS res FROM dual\nUNION ALL \nSELECT babbage('169696',10) AS res FROM dual\nUNION ALL\nSELECT babbage('19696',100000) AS res FROM dual\nUNION ALL \nSELECT babbage('04',100000) AS res FROM dual;\n\u00a0",
        "context": "",
        "question": "\n\nCharles Babbage, looking ahead to the sorts of problems his Analytical Engine would be able to solve, gave this example:\n\n What is the smallest positive integer whose square ends in the digits 269,696?\n\n\u2014 Babbage, letter to Lord Bowden, 1837; see Hollingdale and Tootill, Electronic Computers, second edition, 1970, p. 125.\n\nHe thought the answer might be 99,736, whose square is 9,947,269,696; but he couldn't be certain.\n\n\n\nTask[edit]\nThe task is to find out if Babbage had the right answer \u2014 and to do so, as far as your language allows it, in code that Babbage himself would have been able to read and understand.\nAs Babbage evidently solved the task with pencil and paper, a similar efficient solution is preferred.\n\nFor these purposes, Charles Babbage may be taken to be an intelligent person, familiar with mathematics and with the idea of a computer; he has written the first drafts of simple computer programmes in tabular form. [Babbage Archive Series L].\n\n\n\nMotivation\nThe aim of the task is to write a program that is sufficiently clear and well-documented for such a person to be able to read it and be confident that it does indeed solve the specified problem.\n\n\n\n"
    },
    {
        "answer": "\u00a0\n--Setup table for testing\nCREATE TABLE time_table(times TIME);\nINSERT INTO time_table VALUES ('23:00:17'::TIME),('23:40:20'::TIME),('00:12:45'::TIME),('00:17:19'::TIME)\n\u00a0\n--Compute mean time\nSELECT to_timestamp((degrees(atan2(AVG(sin),AVG(cos))))* (24*60*60)/360)::TIME\nFROM\n\t(SELECT\n\tcos(radians(t*360/(24*60*60))),sin(radians(t*360/(24*60*60)))\n\tFROM\n\t\t(SELECT EXTRACT(epoch FROM times) t\n\t\tFROM time_table) T1\n\t)T2",
        "context": "",
        "question": "Task[edit]\nA particular activity of bats occurs at these times of the day:\n\n23:00:17, 23:40:20, 00:12:45, 00:17:19\nUsing the idea that there are twenty-four hours in a day,\nwhich is analogous to there being 360 degrees in a circle,\nmap times of day to and from angles;\nand using the ideas of Averages/Mean angle\ncompute and show the average time of the nocturnal activity\nto an accuracy of one second of time.\n\nSee also\nTasks for calculating statistical measures\n\n\n\nin one go\nmoving (sliding window)\nmoving (cumulative)\n\nMean\nArithmetic\n\nStatistics/Basic\nAverages/Arithmetic mean\nAverages/Pythagorean means\n\n\nAverages/Simple moving average\n\n\n\n\nGeometric\n\nAverages/Pythagorean means\n\n\n\n\nHarmonic\n\nAverages/Pythagorean means\n\n\n\n\nQuadratic\n\nAverages/Root mean square\n\n\n\n\nCircular\n\nAverages/Mean angle\nAverages/Mean time of day\n\n\n\n\nMedian\n\nAverages/Median\n\n\n\n\nMode\n\nAverages/Mode\n\n\n\n\nStandard deviation\n\nStatistics/Basic\n\n\n\nCumulative standard deviation\n\n\n\n"
    },
    {
        "answer": "-- setup\nCREATE TABLE averages (val INTEGER);\nINSERT INTO averages VALUES (1);\nINSERT INTO averages VALUES (2);\nINSERT INTO averages VALUES (3);\nINSERT INTO averages VALUES (1);\nINSERT INTO averages VALUES (2);\nINSERT INTO averages VALUES (4);\nINSERT INTO averages VALUES (2);\nINSERT INTO averages VALUES (5);\nINSERT INTO averages VALUES (2);\nINSERT INTO averages VALUES (3);\nINSERT INTO averages VALUES (3);\nINSERT INTO averages VALUES (1);\nINSERT INTO averages VALUES (3);\nINSERT INTO averages VALUES (6);\n-- find the mode\nWITH\n  counts AS\n  (\n    SELECT\n      val,\n      COUNT(*) AS num\n    FROM\n      averages\n    GROUP BY\n      val\n  )\nSELECT\n  val AS mode_val\nFROM\n  counts\nWHERE\n  num IN (SELECT MAX(num) FROM counts);",
        "context": "",
        "question": "Task[edit]\nWrite a program to find the mode value of a collection.\n\nThe case where the collection is empty may be ignored. Care must be taken to handle the case where the mode is non-unique.\n\nIf it is not appropriate or possible to support a general collection, use a vector (array), if possible. If it is not appropriate or possible to support an unspecified value type, use integers.\n\nSee also\nTasks for calculating statistical measures\n\n\n\nin one go\nmoving (sliding window)\nmoving (cumulative)\n\nMean\nArithmetic\n\nStatistics/Basic\nAverages/Arithmetic mean\nAverages/Pythagorean means\n\n\nAverages/Simple moving average\n\n\n\n\nGeometric\n\nAverages/Pythagorean means\n\n\n\n\nHarmonic\n\nAverages/Pythagorean means\n\n\n\n\nQuadratic\n\nAverages/Root mean square\n\n\n\n\nCircular\n\nAverages/Mean angle\nAverages/Mean time of day\n\n\n\n\nMedian\n\nAverages/Median\n\n\n\n\nMode\n\nAverages/Mode\n\n\n\n\nStandard deviation\n\nStatistics/Basic\n\n\n\nCumulative standard deviation\n\n\n\n"
    },
    {
        "answer": "\u00a0\n--setup\nCREATE TABLE averages (val INTEGER);\nINSERT INTO averages VALUES (1);\nINSERT INTO averages VALUES (2);\nINSERT INTO averages VALUES (3);\nINSERT INTO averages VALUES (4);\nINSERT INTO averages VALUES (5);\nINSERT INTO averages VALUES (6);\nINSERT INTO averages VALUES (7);\nINSERT INTO averages VALUES (8);\nINSERT INTO averages VALUES (9);\nINSERT INTO averages VALUES (10);\n-- calculate means\nSELECT\n  1/avg(1/val) AS harm,\n  avg(val) AS arith\nFROM\n  averages;\n\u00a0",
        "context": "",
        "question": "Task[edit]\nCompute all three of the Pythagorean means of the set of integers 1 through 10 (inclusive).\n\nShow that \n\n\n\nA\n(\n\nx\n\n1\n\n\n,\n\u2026\n,\n\nx\n\nn\n\n\n)\n\u2265\nG\n(\n\nx\n\n1\n\n\n,\n\u2026\n,\n\nx\n\nn\n\n\n)\n\u2265\nH\n(\n\nx\n\n1\n\n\n,\n\u2026\n,\n\nx\n\nn\n\n\n)\n\n\n{\\displaystyle A(x_{1},\\ldots ,x_{n})\\geq G(x_{1},\\ldots ,x_{n})\\geq H(x_{1},\\ldots ,x_{n})}\n\n for this set of positive integers.\n\n The most common of the three means, the arithmetic mean, is the sum of the list divided by its length:\n \n\n\n\nA\n(\n\nx\n\n1\n\n\n,\n\u2026\n,\n\nx\n\nn\n\n\n)\n=\n\n\n\n\nx\n\n1\n\n\n+\n\u22ef\n+\n\nx\n\nn\n\n\n\nn\n\n\n\n\n{\\displaystyle A(x_{1},\\ldots ,x_{n})={\\frac {x_{1}+\\cdots +x_{n}}{n}}}\n\n\n The geometric mean is the \n\n\n\nn\n\n\n{\\displaystyle n}\n\nth root of the product of the list:\n \n\n\n\nG\n(\n\nx\n\n1\n\n\n,\n\u2026\n,\n\nx\n\nn\n\n\n)\n=\n\n\n\n\nx\n\n1\n\n\n\u22ef\n\nx\n\nn\n\n\n\n\nn\n\n\n\n\n\n{\\displaystyle G(x_{1},\\ldots ,x_{n})={\\sqrt[{n}]{x_{1}\\cdots x_{n}}}}\n\n\n The harmonic mean is \n\n\n\nn\n\n\n{\\displaystyle n}\n\n divided by the sum of the reciprocal of each item in the list:\n \n\n\n\nH\n(\n\nx\n\n1\n\n\n,\n\u2026\n,\n\nx\n\nn\n\n\n)\n=\n\n\nn\n\n\n\n1\n\nx\n\n1\n\n\n\n\n+\n\u22ef\n+\n\n\n1\n\nx\n\nn\n\n\n\n\n\n\n\n\n\n{\\displaystyle H(x_{1},\\ldots ,x_{n})={\\frac {n}{{\\frac {1}{x_{1}}}+\\cdots +{\\frac {1}{x_{n}}}}}}\n\n\n\n\nSee also\nTasks for calculating statistical measures\n\n\n\nin one go\nmoving (sliding window)\nmoving (cumulative)\n\nMean\nArithmetic\n\nStatistics/Basic\nAverages/Arithmetic mean\nAverages/Pythagorean means\n\n\nAverages/Simple moving average\n\n\n\n\nGeometric\n\nAverages/Pythagorean means\n\n\n\n\nHarmonic\n\nAverages/Pythagorean means\n\n\n\n\nQuadratic\n\nAverages/Root mean square\n\n\n\n\nCircular\n\nAverages/Mean angle\nAverages/Mean time of day\n\n\n\n\nMedian\n\nAverages/Median\n\n\n\n\nMode\n\nAverages/Mode\n\n\n\n\nStandard deviation\n\nStatistics/Basic\n\n\n\nCumulative standard deviation\n\n\n\n\n\n"
    },
    {
        "answer": "-- Let's create a generic class with one method to be used as an interface:\nCREATE OR REPLACE\nTYPE callback AS OBJECT (\n    -- A class needs at least one member even though we don't use it\n    -- There's no generic OBJECT type, so let's call it NUMBER\n    dummy NUMBER,\n    -- Here's our function, and since PL/SQL doesn't have generics,\n    -- let's use type NUMBER for our params\n    MEMBER FUNCTION exec(n NUMBER) RETURN NUMBER\n) NOT FINAL NOT instantiable;\n/\n\u00a0\n-- Now let's inherit from that, defining a class with one method. We'll have ours square a number.\n-- We can pass this class into any function that takes type callback:\nCREATE OR REPLACE TYPE CB_SQUARE under callback (\n    OVERRIDING MEMBER FUNCTION exec(n NUMBER) RETURN NUMBER\n)\n/\nCREATE OR REPLACE\nTYPE BODY CB_SQUARE AS\n    OVERRIDING MEMBER FUNCTION exec(n NUMBER) RETURN NUMBER IS\n    BEGIN\n        RETURN n * n;\n    END exec;\nEND;\n/\n\u00a0\n-- And a package to hold our test\nCREATE OR REPLACE \nPACKAGE PKG_CALLBACK AS \n    myCallback cb_square;\n    TYPE intTable IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;\n    ints intTable;\n    i PLS_INTEGER;\n\u00a0\n    PROCEDURE test_callback;\nEND PKG_CALLBACK;\n/\n\u00a0\nCREATE OR REPLACE PACKAGE BODY PKG_CALLBACK AS\n    -- Our generic mapping function that takes a \"method\" and a collection\n    -- Note that it takes the generic callback type \n    -- that doesn't know anything about squaring\n    PROCEDURE do_callback(myCallback IN callback, ints IN OUT intTable) IS\n        i PLS_INTEGER;\n        myInt NUMBER;\n    BEGIN\n        FOR i IN 1 .. ints.COUNT LOOP\n            myInt := ints(i);\n            -- PL/SQL call's the child's method\n            ints(i) := myCallback.exec(myInt);\n        END LOOP;\n    END do_callback;\n\u00a0\n    PROCEDURE test_callback IS\n    BEGIN\n        myCallback := cb_square(NULL);\n        FOR i IN 1..5 LOOP\n            ints(i) := i;\n        END LOOP;\n\u00a0\n        do_callback(myCallback, ints);\n\u00a0\n        i := ints.FIRST;\n        WHILE i IS NOT NULL LOOP\n            DBMS_OUTPUT.put_line(ints(i));\n            i := ints.next(i);\n        END LOOP;\n    END test_callback;\nEND PKG_CALLBACK;\n/\n\u00a0\nBEGIN\n  PKG_CALLBACK.TEST_CALLBACK();\nEND;\n/",
        "context": "",
        "question": "Task\n\nTake a combined set of elements and apply a function to each element.\n\n\n\n"
    },
    {
        "answer": "\u00a0\nCREATE TABLE \"numbers\" (\"datapoint\" INTEGER);\n\u00a0\nINSERT INTO \"numbers\" SELECT rownum FROM tab;\n\u00a0\nSELECT SUM(\"datapoint\")/COUNT(*)  FROM \"numbers\";\n\u00a0",
        "context": "",
        "question": "Task[edit]\nWrite a program to find the mean (arithmetic average) of a numeric vector.\n\nIn case of a zero-length input, since the mean of an empty set of numbers is ill-defined, the program may choose to behave in any way it deems appropriate, though if the programming language has an established convention for conveying math errors or undefined values, it's preferable to follow it.\n\nSee also\nTasks for calculating statistical measures\n\n\n\nin one go\nmoving (sliding window)\nmoving (cumulative)\n\nMean\nArithmetic\n\nStatistics/Basic\nAverages/Arithmetic mean\nAverages/Pythagorean means\n\n\nAverages/Simple moving average\n\n\n\n\nGeometric\n\nAverages/Pythagorean means\n\n\n\n\nHarmonic\n\nAverages/Pythagorean means\n\n\n\n\nQuadratic\n\nAverages/Root mean square\n\n\n\n\nCircular\n\nAverages/Mean angle\nAverages/Mean time of day\n\n\n\n\nMedian\n\nAverages/Median\n\n\n\n\nMode\n\nAverages/Mode\n\n\n\n\nStandard deviation\n\nStatistics/Basic\n\n\n\nCumulative standard deviation\n\n\n\n\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON @\n\u00a0\nBEGIN\n DECLARE TYPE NUMBERS AS SMALLINT ARRAY[5];\n DECLARE NUMBERS NUMBERS;\n DECLARE I SMALLINT;\n\u00a0\n SET I = 1;\n WHILE (I <= 5) DO\n  SET NUMBERS[I] = I;\n  SET I = I + 1;\n END WHILE;\n\u00a0\n BEGIN\n  DECLARE PROCEDURE PRINT_SQUARE (\n    IN VALUE SMALLINT\n   )\n  BEGIN\n   CALL DBMS_OUTPUT.PUT(VALUE * VALUE || ' ');\n  END;\n\u00a0\n  SET I = 1;\n  WHILE (I <= 5) DO\n   CALL PRINT_SQUARE(NUMBERS[I]);\n   SET I = I + 1;\n  END WHILE;\n  CALL DBMS_OUTPUT.PUT_LINE('');\n END;\nEND @\n\u00a0",
        "context": "",
        "question": "Task\n\nTake a combined set of elements and apply a function to each element.\n\n\n\n"
    },
    {
        "answer": "DECLARE\n    type ThisIsNotAnAssocArrayType is record (\n        myShape VARCHAR2(20),\n        mySize number,\n        isActive BOOLEAN\n    );\n    assocArray ThisIsNotAnAssocArrayType\u00a0;\nBEGIN\n    assocArray.myShape\u00a0:= 'circle';\n\u00a0\n    dbms_output.put_line ('assocArray.myShape: ' || assocArray.myShape);\n    dbms_output.put_line ('assocArray.mySize: ' || assocArray.mySize);\nEND;\n/",
        "context": "",
        "question": "Task\n\nThe goal is to create an associative array (also known as a dictionary, map, or hash).\n\n\n\nRelated tasks:\n\n Associative arrays/Iteration\n Hash from two arrays\n\n\nSee also\n\n Array\n Associative array: Creation, Iteration\n Collections\n Compound data type\n Doubly-linked list: Definition, Element definition, Element insertion, List Traversal, Element Removal\n Linked list\n Queue: Definition, Usage\n Set\n Singly-linked list: Element definition, Element insertion, List Traversal, Element Removal\n Stack\n\n"
    },
    {
        "answer": "\u00a0\nREM CREATE a TABLE TO associate KEYS WITH VALUES\nCREATE TABLE  associative_array ( KEY_COLUMN VARCHAR2(10), VALUE_COLUMN VARCHAR2(100)); .\nREM INSERT a KEY VALUE Pair\nINSERT (KEY_COLUMN, VALUE_COLUMN) VALUES ( 'VALUE','KEY');.\nREM Retrieve a KEY VALUE pair\nSELECT aa.value_column FROM associative_array aa WHERE aa.key_column = 'KEY';\n\u00a0",
        "context": "",
        "question": "Task\n\nThe goal is to create an associative array (also known as a dictionary, map, or hash).\n\n\n\nRelated tasks:\n\n Associative arrays/Iteration\n Hash from two arrays\n\n\nSee also\n\n Array\n Associative array: Creation, Iteration\n Collections\n Compound data type\n Doubly-linked list: Definition, Element definition, Element insertion, List Traversal, Element Removal\n Linked list\n Queue: Definition, Usage\n Set\n Singly-linked list: Element definition, Element insertion, List Traversal, Element Removal\n Stack\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON @\n\u00a0\nBEGIN\n DECLARE TYPE ASSOC_ARRAY AS VARCHAR(20) ARRAY [VARCHAR(20)];\n DECLARE HASH ASSOC_ARRAY;\n SET HASH['key1'] = 'val1';\n SET HASH['key-2'] = 2;\n SET HASH['three'] = -238.83;\n SET HASH[4] = 'val3';\n\u00a0\n CALL DBMS_OUTPUT.PUT_LINE(HASH['key1']);\n CALL DBMS_OUTPUT.PUT_LINE(HASH['key-2']);\n CALL DBMS_OUTPUT.PUT_LINE(HASH['three']);\n CALL DBMS_OUTPUT.PUT_LINE(HASH[4]);\n CALL DBMS_OUTPUT.PUT_LINE(HASH['5']);\nEND@\n\u00a0",
        "context": "",
        "question": "Task\n\nThe goal is to create an associative array (also known as a dictionary, map, or hash).\n\n\n\nRelated tasks:\n\n Associative arrays/Iteration\n Hash from two arrays\n\n\nSee also\n\n Array\n Associative array: Creation, Iteration\n Collections\n Compound data type\n Doubly-linked list: Definition, Element definition, Element insertion, List Traversal, Element Removal\n Linked list\n Queue: Definition, Usage\n Set\n Singly-linked list: Element definition, Element insertion, List Traversal, Element Removal\n Stack\n\n"
    },
    {
        "answer": "DECLARE\n\u00a0\n  FUNCTION ackermann(pi_m IN NUMBER,\n                     pi_n IN NUMBER) RETURN NUMBER IS\n  BEGIN\n    IF pi_m = 0 THEN\n      RETURN pi_n + 1;\n    ELSIF pi_n = 0 THEN\n      RETURN ackermann(pi_m - 1, 1);\n    ELSE\n      RETURN ackermann(pi_m - 1, ackermann(pi_m, pi_n - 1));\n    END IF;\n  END ackermann;\n\u00a0\nBEGIN\n  FOR n IN 0 .. 6 LOOP\n    FOR m IN 0 .. 3 LOOP\n      DBMS_OUTPUT.put_line('A(' || m || ',' || n || ') = ' || ackermann(m, n));\n    END LOOP;\n  END LOOP;\nEND;\n\u00a0",
        "context": "",
        "question": "The Ackermann function is a classic example of a recursive function, notable especially because it is not a primitive recursive function. It grows very quickly in value, as does the size of its call tree.\n\n\n\nThe Ackermann function is usually defined as follows:\n\n\n\n\n\n\n\nA\n(\nm\n,\nn\n)\n=\n\n\n{\n\n\n\nn\n+\n1\n\n\n\nif\u00a0\n\nm\n=\n0\n\n\n\n\nA\n(\nm\n\u2212\n1\n,\n1\n)\n\n\n\nif\u00a0\n\nm\n>\n0\n\n\u00a0and\u00a0\n\nn\n=\n0\n\n\n\n\nA\n(\nm\n\u2212\n1\n,\nA\n(\nm\n,\nn\n\u2212\n1\n)\n)\n\n\n\nif\u00a0\n\nm\n>\n0\n\n\u00a0and\u00a0\n\nn\n>\n0.\n\n\n\n\n\n\n\n\n{\\displaystyle A(m,n)={\\begin{cases}n+1&{\\mbox{if }}m=0\\\\A(m-1,1)&{\\mbox{if }}m>0{\\mbox{ and }}n=0\\\\A(m-1,A(m,n-1))&{\\mbox{if }}m>0{\\mbox{ and }}n>0.\\end{cases}}}\n\n\n\n\n\n\nIts arguments are never negative and it always terminates.\n\n\n\nTask\n\nWrite a function which returns the value of \n\n\n\nA\n(\nm\n,\nn\n)\n\n\n{\\displaystyle A(m,n)}\n\n. Arbitrary precision is preferred (since the function grows so quickly), but not required.\n\n\n\nSee also\n\n Conway chained arrow notation for the Ackermann function.\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON@\n\u00a0\nCREATE OR REPLACE FUNCTION ACKERMANN(\n  IN M SMALLINT,\n  IN N BIGINT\n ) RETURNS BIGINT\n BEGIN\n  DECLARE RET BIGINT;\n  DECLARE STMT STATEMENT;\n\u00a0\n  IF (M = 0) THEN\n   SET RET = N + 1;\n  ELSEIF (N = 0) THEN\n   PREPARE STMT FROM 'SET\u00a0? = ACKERMANN(? - 1, 1)';\n   EXECUTE STMT INTO RET USING M;\n  ELSE\n   PREPARE STMT FROM 'SET\u00a0? = ACKERMANN(? - 1, ACKERMANN(?,\u00a0? - 1))';\n   EXECUTE STMT INTO RET USING M, M, N;\n  END IF;\n  RETURN RET;\n END @\n\u00a0\nBEGIN\n DECLARE M SMALLINT DEFAULT 0;\n DECLARE N SMALLINT DEFAULT 0;\n DECLARE MAX_LEVELS CONDITION FOR SQLSTATE '54038';\n DECLARE CONTINUE HANDLER FOR MAX_LEVELS BEGIN END;\n\u00a0\n WHILE (N <= 6) DO\n  WHILE (M <= 3) DO\n   CALL DBMS_OUTPUT.PUT_LINE('ACKERMANN(' || M || ', ' || N || ') = ' || ACKERMANN(M, N));\n   SET M = M + 1;\n  END WHILE;\n  SET M = 0;\n  SET N = N + 1;\n END WHILE;\nEND @\n\u00a0",
        "context": "",
        "question": "The Ackermann function is a classic example of a recursive function, notable especially because it is not a primitive recursive function. It grows very quickly in value, as does the size of its call tree.\n\n\n\nThe Ackermann function is usually defined as follows:\n\n\n\n\n\n\n\nA\n(\nm\n,\nn\n)\n=\n\n\n{\n\n\n\nn\n+\n1\n\n\n\nif\u00a0\n\nm\n=\n0\n\n\n\n\nA\n(\nm\n\u2212\n1\n,\n1\n)\n\n\n\nif\u00a0\n\nm\n>\n0\n\n\u00a0and\u00a0\n\nn\n=\n0\n\n\n\n\nA\n(\nm\n\u2212\n1\n,\nA\n(\nm\n,\nn\n\u2212\n1\n)\n)\n\n\n\nif\u00a0\n\nm\n>\n0\n\n\u00a0and\u00a0\n\nn\n>\n0.\n\n\n\n\n\n\n\n\n{\\displaystyle A(m,n)={\\begin{cases}n+1&{\\mbox{if }}m=0\\\\A(m-1,1)&{\\mbox{if }}m>0{\\mbox{ and }}n=0\\\\A(m-1,A(m,n-1))&{\\mbox{if }}m>0{\\mbox{ and }}n>0.\\end{cases}}}\n\n\n\n\n\n\nIts arguments are never negative and it always terminates.\n\n\n\nTask\n\nWrite a function which returns the value of \n\n\n\nA\n(\nm\n,\nn\n)\n\n\n{\\displaystyle A(m,n)}\n\n. Arbitrary precision is preferred (since the function grows so quickly), but not required.\n\n\n\nSee also\n\n Conway chained arrow notation for the Ackermann function.\n\n"
    },
    {
        "answer": "\u00a0\nCREATE TABLE allints (v NUMBER);\nCREATE TABLE results \n(\na NUMBER,\nb NUMBER,\nc NUMBER,\nd NUMBER,\ne NUMBER,\nf NUMBER,\ng NUMBER\n);\n\u00a0\nCREATE OR REPLACE PROCEDURE foursquares(lo NUMBER,hi NUMBER,uniq BOOLEAN,show BOOLEAN)\nAS\n    a NUMBER;\n    b NUMBER;\n    c NUMBER;\n    d NUMBER;\n    e NUMBER;\n    f NUMBER;\n    g NUMBER;\n    out_line VARCHAR2(2000);\n\u00a0\n    CURSOR results_cur IS \n    SELECT\n       a,\n       b,\n       c,\n       d,\n       e,\n       f,\n       g\n    FROM\n        results\n    ORDER BY \n        a,b,c,d,e,f,g;\n\u00a0\n    results_rec results_cur%ROWTYPE;\n\u00a0\n    solutions NUMBER;\n    uorn VARCHAR2(2000);\nBEGIN\n    solutions := 0;\n    DELETE FROM allints;\n    DELETE FROM results;\n    FOR i IN lo..hi LOOP\n        INSERT INTO allints VALUES (i);\n    END LOOP;\n    COMMIT;\n\u00a0\n    IF uniq = TRUE THEN\n        INSERT INTO results\n            SELECT\n                a.v a,\n                b.v b,\n                c.v c,\n                d.v d,\n                e.v e,\n                f.v f,\n                g.v g\n            FROM\n                allints a, allints b, allints c,allints d,\n                allints e, allints f, allints g\n            WHERE\n                a.v NOT IN (b.v,c.v,d.v,e.v,f.v,g.v) AND\n                b.v NOT IN (c.v,d.v,e.v,f.v,g.v) AND\n                c.v NOT IN (d.v,e.v,f.v,g.v) AND\n                d.v NOT IN (e.v,f.v,g.v) AND\n                e.v NOT IN (f.v,g.v) AND\n                f.v NOT IN (g.v) AND\n                a.v = c.v + d.v AND\n                g.v = d.v + e.v AND\n                b.v = e.v + f.v - c.v\n            ORDER BY \n                a,b,c,d,e,f,g;\n        uorn := ' unique solutions in ';\n    ELSE\n        INSERT INTO results\n            SELECT\n                a.v a,\n                b.v b,\n                c.v c,\n                d.v d,\n                e.v e,\n                f.v f,\n                g.v g\n            FROM\n                allints a, allints b, allints c,allints d,\n                allints e, allints f, allints g\n            WHERE\n                a.v = c.v + d.v AND\n                g.v = d.v + e.v AND\n                b.v = e.v + f.v - c.v\n            ORDER BY \n                a,b,c,d,e,f,g;   \n        uorn := ' non-unique solutions in ';\n    END IF;\n    COMMIT;\n\u00a0\n    OPEN results_cur;\n    LOOP\n        FETCH results_cur INTO results_rec;\n        EXIT WHEN results_cur%notfound;\n        a := results_rec.a;\n        b := results_rec.b;\n        c := results_rec.c;\n        d := results_rec.d;\n        e := results_rec.e;\n        f := results_rec.f;\n        g := results_rec.g;\n\u00a0\n        solutions := solutions + 1;\n        IF show = TRUE THEN\n            out_line := TO_CHAR(a) || ' ';\n            out_line := out_line || ' ' || TO_CHAR(b) || ' ';\n            out_line := out_line || ' ' || TO_CHAR(c) || ' ';\n            out_line := out_line || ' ' || TO_CHAR(d) || ' ';\n            out_line := out_line || ' ' || TO_CHAR(e) || ' ';\n            out_line := out_line || ' ' || TO_CHAR(f) ||' ';\n            out_line := out_line || ' ' || TO_CHAR(g);\n        END IF;\n\u00a0\n        DBMS_OUTPUT.put_line(out_line);\n    END LOOP;\n    CLOSE results_cur;\n    out_line := TO_CHAR(solutions) || uorn;\n    out_line := out_line || TO_CHAR(lo) || ' to ' || TO_CHAR(hi);\n    DBMS_OUTPUT.put_line(out_line);\n\u00a0\nEND;\n/\n\u00a0",
        "context": "",
        "question": "4-rings or 4-squares puzzle\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\nTask\n\nReplace \u00a0 \u00a0 \u00a0 a, b, c, d, e, f, \u00a0 and\n\u00a0 g  \u00a0 \u00a0 \u00a0 with the decimal\ndigits \u00a0 LOW \u00a0 \u2500\u2500\u2500\u25ba \u00a0 HIGH\n\nsuch that the sum of the letters inside of each of the four large squares add up to\nthe same sum.\n\n            \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557      \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n            \u2551              \u2551      \u2551              \u2551\n            \u2551      a       \u2551      \u2551      e       \u2551\n            \u2551              \u2551      \u2551              \u2551\n            \u2551          \u250c\u2500\u2500\u2500\u256b\u2500\u2500\u2500\u2500\u2500\u2500\u256b\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u256b\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n            \u2551          \u2502   \u2551      \u2551   \u2502      \u2502   \u2551         \u2502\n            \u2551          \u2502 b \u2551      \u2551 d \u2502      \u2502 f \u2551         \u2502\n            \u2551          \u2502   \u2551      \u2551   \u2502      \u2502   \u2551         \u2502\n            \u2551          \u2502   \u2551      \u2551   \u2502      \u2502   \u2551         \u2502\n            \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u255d      \u255a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u255d         \u2502\n                       \u2502       c      \u2502      \u2502      g      \u2502\n                       \u2502              \u2502      \u2502             \u2502\n                       \u2502              \u2502      \u2502             \u2502\n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nShow all output here.\n\n\n\n \u00a0 Show all solutions for each letter being unique with\n        LOW=1     HIGH=7\n\n \u00a0 Show all solutions for each letter being unique with\n        LOW=3     HIGH=9\n\n \u00a0 Show only the \u00a0 number \u00a0 of solutions when each letter can be non-unique\n        LOW=0     HIGH=9\n\n\n\nRelated task\n\n Solve the no connection puzzle\n\n"
    },
    {
        "answer": "\u00a0\n--#SET TERMINATOR @\n\u00a0\nSET SERVEROUTPUT ON @\n\u00a0\nCREATE TABLE ALL_INTS (\n  V INTEGER\n)@\n\u00a0\nCREATE TABLE RESULTS (\n  A INTEGER,\n  B INTEGER,\n  C INTEGER,\n  D INTEGER,\n  E INTEGER,\n  F INTEGER,\n  G INTEGER\n)@\n\u00a0\nCREATE OR REPLACE PROCEDURE FOUR_SQUARES(\n  IN LO INTEGER,\n  IN HI INTEGER,\n  IN UNIQ SMALLINT,\n  --IN UNIQ BOOLEAN,\n  IN SHOW SMALLINT)\n  --IN SHOW BOOLEAN)\n BEGIN\n  DECLARE A INTEGER;\n  DECLARE B INTEGER;\n  DECLARE C INTEGER;\n  DECLARE D INTEGER;\n  DECLARE E INTEGER;\n  DECLARE F INTEGER;\n  DECLARE G INTEGER;\n  DECLARE OUT_LINE VARCHAR(2000);\n  DECLARE I SMALLINT;\n\u00a0\n  DECLARE SOLUTIONS INTEGER;\n  DECLARE UORN VARCHAR(2000);\n\u00a0\n  SET SOLUTIONS = 0;\n  DELETE FROM ALL_INTS;\n  DELETE FROM RESULTS;\n  SET I = LO;\n  WHILE (I <= HI) DO\n   INSERT INTO ALL_INTS VALUES (I);\n   SET I = I + 1;\n  END WHILE;\n  COMMIT;\n\u00a0\n  -- Computes unique solutions.\n  IF (UNIQ = 0) THEN\n  --IF (UNIQ = TRUE) THEN\n   INSERT INTO RESULTS\n     SELECT\n      A.V A, B.V B, C.V C, D.V D, E.V E, F.V F, G.V G\n     FROM\n      ALL_INTS A, ALL_INTS B, ALL_INTS C, ALL_INTS D, ALL_INTS E, ALL_INTS F,\n      ALL_INTS G\n     WHERE\n          A.V NOT IN (B.V, C.V, D.V, E.V, F.V, G.V)\n      AND B.V NOT IN (C.V, D.V, E.V, F.V, G.V)\n      AND C.V NOT IN (D.V, E.V, F.V, G.V)\n      AND D.V NOT IN (E.V, F.V, G.V)\n      AND E.V NOT IN (F.V, G.V)\n      AND F.V NOT IN (G.V)\n      AND A.V = C.V + D.V\n      AND G.V = D.V + E.V\n      AND B.V = E.V + F.V - C.V\n     ORDER BY \n      A, B, C, D, E, F, G;\n   SET UORN = ' unique solutions in ';\n  ELSE\n   -- Compute non-unique solutions.\n   INSERT INTO RESULTS\n     SELECT\n      A.V A, B.V B, C.V C, D.V D, E.V E, F.V F, G.V G\n     FROM\n      ALL_INTS A, ALL_INTS B, ALL_INTS C, ALL_INTS D, ALL_INTS E, ALL_INTS F,\n      ALL_INTS G\n     WHERE\n          A.V = C.V + D.V\n      AND G.V = D.V + E.V\n      AND B.V = E.V + F.V - C.V\n     ORDER BY \n      A, B, C, D, E, F, G;\n   SET UORN = ' non-unique solutions in ';\n  END IF;\n  COMMIT;\n\u00a0\n  -- Counts the possible solutions.\n  FOR v AS c CURSOR FOR\n    SELECT\n     A, B, C, D, E, F, G\n    FROM RESULTS\n    ORDER BY \n     A, B, C, D, E, F, G\n    DO\n   SET SOLUTIONS = SOLUTIONS + 1;\n   -- Shows the results.\n   IF (SHOW = 0) THEN\n   --IF (SHOW = TRUE) THEN\n    SET OUT_LINE = A || ' ' || B || ' ' || C || ' ' || D || ' ' || E || ' '\n      || F ||' ' || G;\n    CALL DBMS_OUTPUT.PUT_LINE(OUT_LINE);\n   END IF;\n  END FOR;\n\u00a0\n  SET OUT_LINE = SOLUTIONS || UORN || LO || ' to ' || HI;\n  CALL DBMS_OUTPUT.PUT_LINE(OUT_LINE);\n END\n@\n\u00a0\nCALL FOUR_SQUARES(1, 7, 0, 0)@\nCALL FOUR_SQUARES(3, 9, 0, 0)@\nCALL FOUR_SQUARES(0, 9, 1, 1)@\n\u00a0",
        "context": "",
        "question": "4-rings or 4-squares puzzle\n\nYou are encouraged to solve this task according to the task description, using any language you may know.\nTask\n\nReplace \u00a0 \u00a0 \u00a0 a, b, c, d, e, f, \u00a0 and\n\u00a0 g  \u00a0 \u00a0 \u00a0 with the decimal\ndigits \u00a0 LOW \u00a0 \u2500\u2500\u2500\u25ba \u00a0 HIGH\n\nsuch that the sum of the letters inside of each of the four large squares add up to\nthe same sum.\n\n            \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557      \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n            \u2551              \u2551      \u2551              \u2551\n            \u2551      a       \u2551      \u2551      e       \u2551\n            \u2551              \u2551      \u2551              \u2551\n            \u2551          \u250c\u2500\u2500\u2500\u256b\u2500\u2500\u2500\u2500\u2500\u2500\u256b\u2500\u2500\u2500\u2510      \u250c\u2500\u2500\u2500\u256b\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n            \u2551          \u2502   \u2551      \u2551   \u2502      \u2502   \u2551         \u2502\n            \u2551          \u2502 b \u2551      \u2551 d \u2502      \u2502 f \u2551         \u2502\n            \u2551          \u2502   \u2551      \u2551   \u2502      \u2502   \u2551         \u2502\n            \u2551          \u2502   \u2551      \u2551   \u2502      \u2502   \u2551         \u2502\n            \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u255d      \u255a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u255d         \u2502\n                       \u2502       c      \u2502      \u2502      g      \u2502\n                       \u2502              \u2502      \u2502             \u2502\n                       \u2502              \u2502      \u2502             \u2502\n                       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nShow all output here.\n\n\n\n \u00a0 Show all solutions for each letter being unique with\n        LOW=1     HIGH=7\n\n \u00a0 Show all solutions for each letter being unique with\n        LOW=3     HIGH=9\n\n \u00a0 Show only the \u00a0 number \u00a0 of solutions when each letter can be non-unique\n        LOW=0     HIGH=9\n\n\n\nRelated task\n\n Solve the no connection puzzle\n\n"
    },
    {
        "answer": "USE rosettacode;\nGO\n\u00a0\nSET NOCOUNT ON;\nGO\n\u00a0\nCREATE TABLE dbo.numbers (n INT PRIMARY KEY);\nGO\n\u00a0\n-- NOTE If you want to play more than 10000 games, you need to extend the query generating the numbers table by adding\n-- next cross joins. Now the table contains enough values to solve the task and it takes less processing time.\n\u00a0\nWITH sample100 AS (\n    SELECT TOP(100) object_id\n    FROM master.sys.objects\n)\nINSERT numbers\n    SELECT ROW_NUMBER() OVER (ORDER BY A.object_id) AS n\n    FROM sample100 AS A\n        CROSS JOIN sample100 AS B;\nGO\n\u00a0\nCREATE TABLE dbo.drawers (drawer INT PRIMARY KEY, card INT);\nGO\n\u00a0\nCREATE TABLE dbo.results (strategy VARCHAR(10), game INT, result BIT, PRIMARY KEY (game, strategy));\nGO\n\u00a0\nCREATE PROCEDURE dbo.shuffleDrawers @prisonersCount INT\nAS BEGIN\n    SET NOCOUNT ON;\n\u00a0\n    IF NOT EXISTS (SELECT * FROM drawers)\n        INSERT drawers (drawer, card)\n        SELECT n AS drawer, n AS card\n        FROM numbers\n        WHERE n <= @prisonersCount;\n\u00a0\n    DECLARE @randoms TABLE (n INT, random INT);\n    DECLARE @n INT = 1;\n    WHILE @n <= @prisonersCount BEGIN\n        INSERT @randoms VALUES (@n, ROUND(RAND() * (@prisonersCount - 1), 0) + 1);\n\u00a0\n        SET @n = @n + 1;\n    END;\n\u00a0\n    WITH ordered AS (\n        SELECT ROW_NUMBER() OVER (ORDER BY random ASC) AS drawer,\n            n AS card\n        FROM @randoms\n    )\n    UPDATE drawers\n    SET card = o.card\n    FROM drawers AS s\n        INNER JOIN ordered AS o\n            ON o.drawer = s.drawer;\nEND\nGO\n\u00a0\nCREATE PROCEDURE dbo.find @prisoner INT, @strategy VARCHAR(10)\nAS BEGIN\n    -- A prisoner can open no more than 50 drawers.\n    DECLARE @drawersCount INT = (SELECT COUNT(*) FROM drawers);\n    DECLARE @openMax INT = @drawersCount / 2;\n\u00a0\n    -- Prisoners start outside the room.\n    DECLARE @card INT = NULL;\n    DECLARE @open INT = 1;\n    WHILE @open <= @openMax BEGIN\n        -- A prisoner tries to find his own number.\n        IF @strategy = 'random' BEGIN\n            DECLARE @random INT = ROUND(RAND() * (@drawersCount - 1), 0) + 1;\n            SET @card = (SELECT TOP(1) card FROM drawers WHERE drawer = @random);\n        END\n        IF @strategy = 'optimal' BEGIN\n            IF @card IS NULL BEGIN\n                SET @card = (SELECT TOP(1) card FROM drawers WHERE drawer = @prisoner);\n            END ELSE BEGIN\n                SET @card = (SELECT TOP(1) card FROM drawers WHERE drawer = @card);\n            END\n        END\n\u00a0\n        -- A prisoner finding his own number is then held apart from the others.\n        IF @card = @prisoner\n            RETURN 1;\n\u00a0\n        SET @open = @open + 1;\n    END\n\u00a0\n    RETURN 0;\nEND\nGO\n\u00a0\nCREATE PROCEDURE dbo.playGame @gamesCount INT, @strategy VARCHAR(10), @prisonersCount INT = 100\nAS BEGIN\n    SET NOCOUNT ON;\n\u00a0\n    IF @gamesCount <> (SELECT COUNT(*) FROM results WHERE strategy = @strategy) BEGIN\n        DELETE results\n        WHERE strategy = @strategy;\n\u00a0\n        INSERT results (strategy, game, result)\n        SELECT @strategy AS strategy, n AS game, 0 AS result\n        FROM numbers\n        WHERE n <= @gamesCount;\n    END\n\u00a0\n    UPDATE results\n    SET result = 0\n    WHERE strategy = @strategy;\n\u00a0\n    DECLARE @game INT = 1;\n    WHILE @game <= @gamesCount BEGIN\n        -- A room having a cupboard of 100 opaque drawers numbered 1 to 100, that cannot be seen from outside.\n        -- Cards numbered 1 to 100 are placed randomly, one to a drawer, and the drawers all closed; at the start.\n        EXECUTE shuffleDrawers @prisonersCount;\n\u00a0\n        -- A prisoner tries to find his own number.\n        -- Prisoners start outside the room.\n        -- They can decide some strategy before any enter the room.\n        DECLARE @prisoner INT = 1;\n        DECLARE @found INT = 0;\n        WHILE @prisoner <= @prisonersCount BEGIN\n            EXECUTE @found = find @prisoner, @strategy;\n            IF @found = 1\n                SET @prisoner = @prisoner + 1;\n            ELSE\n                BREAK;\n        END;\n\u00a0\n        -- If all 100 findings find their own numbers then they will all be pardoned. If any don't then all sentences stand.\n        IF @found = 1\n            UPDATE results SET result = 1 WHERE strategy = @strategy AND game = @game;\n\u00a0\n        SET @game = @game + 1;\n    END\nEND\nGO\n\u00a0\nCREATE FUNCTION dbo.computeProbability(@strategy VARCHAR(10))\nRETURNS decimal (18, 2)\nAS BEGIN\n    RETURN (\n        SELECT (SUM(CAST(result AS INT)) * 10000 / COUNT(*)) / 100\n        FROM results\n        WHERE strategy = @strategy\n    );\nEND\nGO\n\u00a0\n-- Simulate several thousand instances of the game:\nDECLARE @gamesCount INT = 2000;\n\u00a0\n-- ...where the prisoners randomly open drawers.\nEXECUTE playGame @gamesCount, 'random';\n\u00a0\n-- ...where the prisoners use the optimal strategy mentioned in the Wikipedia article.\nEXECUTE playGame @gamesCount, 'optimal';\n\u00a0\n-- Show and compare the computed probabilities of success for the two strategies.\nDECLARE @log VARCHAR(max);\nSET @log = CONCAT('Games count: ', @gamesCount);\nRAISERROR (@log, 0, 1) WITH NOWAIT;\nSET @log = CONCAT('Probability of success with \"random\" strategy: ', dbo.computeProbability('random'));\nRAISERROR (@log, 0, 1) WITH NOWAIT;\nSET @log = CONCAT('Probability of success with \"optimal\" strategy: ', dbo.computeProbability('optimal'));\nRAISERROR (@log, 0, 1) WITH NOWAIT;\nGO\n\u00a0\nDROP FUNCTION dbo.computeProbability;\nDROP PROCEDURE dbo.playGame;\nDROP PROCEDURE dbo.find;\nDROP PROCEDURE dbo.shuffleDrawers;\nDROP TABLE dbo.results;\nDROP TABLE dbo.drawers;\nDROP TABLE dbo.numbers;\nGO",
        "context": "",
        "question": "\n\nThe Problem\n\n 100 prisoners are individually numbered 1 to 100\n A room having a cupboard of 100 opaque drawers numbered 1 to 100, that cannot be seen from outside.\n Cards numbered 1 to 100 are placed randomly, one to a drawer, and the drawers all closed; at the start.\n Prisoners start outside the room\n They can decide some strategy before any enter the room.\n Prisoners enter the room one by one, can open a drawer, inspect the card number in the drawer, then close the drawer.\n A prisoner can open no more than 50 drawers.\n A prisoner tries to find his own number.\n A prisoner finding his own number is then held apart from the others.\n If all 100 prisoners find their own numbers then they will all be pardoned. If any don't then all sentences stand. \n\n\nThe task\n\n Simulate several thousand instances of the game where the prisoners randomly open drawers\n Simulate several thousand instances of the game where the prisoners use the optimal strategy mentioned in the Wikipedia article, of:\n First opening the drawer whose outside number is his prisoner number.\n If the card within has his number then he succeeds otherwise he opens the drawer with the same number as that of the revealed card. (until he opens his maximum).\n\n\nShow and compare the computed probabilities of success for the two strategies, here, on this page.\n\n\n\n\nReferences\n\n The unbelievable solution to the 100 prisoner puzzle standupmaths (Video).\n wp:100 prisoners problem\n 100 Prisoners Escape Puzzle DataGenetics.\n Random permutation statistics#One hundred prisoners on Wikipedia.\n\n"
    },
    {
        "answer": "SELECT A+B",
        "context": "",
        "question": "A+B \u00a0 \u2500\u2500\u2500 a classic problem in programming contests, \u00a0 it's given so contestants can gain familiarity with the online judging system being used.\n\n\n\nTask\n\nGiven two integers, \u00a0 A and B.\n\nTheir sum needs to be calculated.\n\n\n\nInput data\n\nTwo integers are written in the input stream, separated by space(s):\n\n \n\n\n\n(\n\u2212\n1000\n\u2264\nA\n,\nB\n\u2264\n+\n1000\n)\n\n\n{\\displaystyle (-1000\\leq A,B\\leq +1000)}\n\n\n\n\nOutput data\n\nThe required output is one integer: \u00a0 the sum of A and B.\n\n\n\nExample\n\n\n\n input \u00a0\n\n output \u00a0\n\n\n 2 2 \n\n 4 \n\n\n 3 2 \n\n 5 \n\n\n"
    },
    {
        "answer": "\u00a0\n\u00a0\nCREATE OR REPLACE FUNCTION splitadd (instring VARCHAR(255))\n\tRETURNS INTEGER\n\tNO EXTERNAL ACTION\nF1: BEGIN ATOMIC\n\u00a0\n\tDECLARE FIRST INTEGER;\n\tDECLARE SECOND INTEGER;\n\u00a0\n\tSET FIRST = REGEXP_SUBSTR(instring, '[0-9]+',1,1);\n\tSET SECOND = REGEXP_SUBSTR(instring, '[0-9]+',1,2);\n\u00a0\n\tRETURN FIRST + SECOND;\nEND\n\u00a0",
        "context": "",
        "question": "A+B \u00a0 \u2500\u2500\u2500 a classic problem in programming contests, \u00a0 it's given so contestants can gain familiarity with the online judging system being used.\n\n\n\nTask\n\nGiven two integers, \u00a0 A and B.\n\nTheir sum needs to be calculated.\n\n\n\nInput data\n\nTwo integers are written in the input stream, separated by space(s):\n\n \n\n\n\n(\n\u2212\n1000\n\u2264\nA\n,\nB\n\u2264\n+\n1000\n)\n\n\n{\\displaystyle (-1000\\leq A,B\\leq +1000)}\n\n\n\n\nOutput data\n\nThe required output is one integer: \u00a0 the sum of A and B.\n\n\n\nExample\n\n\n\n input \u00a0\n\n output \u00a0\n\n\n 2 2 \n\n 4 \n\n\n 3 2 \n\n 5 \n\n\n"
    }
]